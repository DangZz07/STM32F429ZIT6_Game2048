
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002b430  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000387c  0802b5e0  0802b5e0  0002c5e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000020c8  0802ee5c  0802ee5c  0002fe5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000028  08030f24  08030f24  00031f24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000020c  08030f4c  08030f4c  00031f4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00017700  08031158  08031158  00032158  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08048858  08048858  0004a380  2**0
                  CONTENTS
  8 .ARM          00000008  08048858  08048858  00049858  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08048860  08048860  0004a380  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08048860  08048860  00049860  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08048874  08048874  00049874  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000180  20000000  0804887c  0004a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000180  080489fc  0004a180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000280  08048afc  0004a280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          0001490c  20000380  08048bfc  0004a380  2**2
                  ALLOC
 16 ._user_heap_stack 00001404  20014c8c  08048bfc  0004ac8c  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  0004a380  2**0
                  CONTENTS, READONLY
 18 TouchGFX_Framebuffer 00070800  d0000000  d0000000  0004b000  2**2
                  ALLOC
 19 .debug_line   0008de9c  00000000  00000000  0004a3b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00000070  00000000  00000000  000d824c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_info   001b9ae7  00000000  00000000  000d82bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_abbrev 0002be30  00000000  00000000  00291da3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_aranges 00004e28  00000000  00000000  002bdbd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    0011e1b9  00000000  00000000  002c2a00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_rnglists 000069f3  00000000  00000000  003e0bb9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loclists 0002c466  00000000  00000000  003e75ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  0003b5c6  00000000  00000000  00413a12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  0044efd8  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000d894  00000000  00000000  0044f09c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000380 	.word	0x20000380
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802b5c8 	.word	0x0802b5c8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000384 	.word	0x20000384
 80001ec:	0802b5c8 	.word	0x0802b5c8

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_ldivmod>:
 8000290:	b97b      	cbnz	r3, 80002b2 <__aeabi_ldivmod+0x22>
 8000292:	b972      	cbnz	r2, 80002b2 <__aeabi_ldivmod+0x22>
 8000294:	2900      	cmp	r1, #0
 8000296:	bfbe      	ittt	lt
 8000298:	2000      	movlt	r0, #0
 800029a:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 800029e:	e006      	blt.n	80002ae <__aeabi_ldivmod+0x1e>
 80002a0:	bf08      	it	eq
 80002a2:	2800      	cmpeq	r0, #0
 80002a4:	bf1c      	itt	ne
 80002a6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80002aa:	f04f 30ff 	movne.w	r0, #4294967295
 80002ae:	f000 b9d3 	b.w	8000658 <__aeabi_idiv0>
 80002b2:	f1ad 0c08 	sub.w	ip, sp, #8
 80002b6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002ba:	2900      	cmp	r1, #0
 80002bc:	db09      	blt.n	80002d2 <__aeabi_ldivmod+0x42>
 80002be:	2b00      	cmp	r3, #0
 80002c0:	db1a      	blt.n	80002f8 <__aeabi_ldivmod+0x68>
 80002c2:	f000 f84d 	bl	8000360 <__udivmoddi4>
 80002c6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002ca:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ce:	b004      	add	sp, #16
 80002d0:	4770      	bx	lr
 80002d2:	4240      	negs	r0, r0
 80002d4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002d8:	2b00      	cmp	r3, #0
 80002da:	db1b      	blt.n	8000314 <__aeabi_ldivmod+0x84>
 80002dc:	f000 f840 	bl	8000360 <__udivmoddi4>
 80002e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002e8:	b004      	add	sp, #16
 80002ea:	4240      	negs	r0, r0
 80002ec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002f0:	4252      	negs	r2, r2
 80002f2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002f6:	4770      	bx	lr
 80002f8:	4252      	negs	r2, r2
 80002fa:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002fe:	f000 f82f 	bl	8000360 <__udivmoddi4>
 8000302:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000306:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800030a:	b004      	add	sp, #16
 800030c:	4240      	negs	r0, r0
 800030e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000312:	4770      	bx	lr
 8000314:	4252      	negs	r2, r2
 8000316:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800031a:	f000 f821 	bl	8000360 <__udivmoddi4>
 800031e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000322:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000326:	b004      	add	sp, #16
 8000328:	4252      	negs	r2, r2
 800032a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800032e:	4770      	bx	lr

08000330 <__aeabi_uldivmod>:
 8000330:	b953      	cbnz	r3, 8000348 <__aeabi_uldivmod+0x18>
 8000332:	b94a      	cbnz	r2, 8000348 <__aeabi_uldivmod+0x18>
 8000334:	2900      	cmp	r1, #0
 8000336:	bf08      	it	eq
 8000338:	2800      	cmpeq	r0, #0
 800033a:	bf1c      	itt	ne
 800033c:	f04f 31ff 	movne.w	r1, #4294967295
 8000340:	f04f 30ff 	movne.w	r0, #4294967295
 8000344:	f000 b988 	b.w	8000658 <__aeabi_idiv0>
 8000348:	f1ad 0c08 	sub.w	ip, sp, #8
 800034c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000350:	f000 f806 	bl	8000360 <__udivmoddi4>
 8000354:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000358:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800035c:	b004      	add	sp, #16
 800035e:	4770      	bx	lr

08000360 <__udivmoddi4>:
 8000360:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000364:	9d08      	ldr	r5, [sp, #32]
 8000366:	468e      	mov	lr, r1
 8000368:	4604      	mov	r4, r0
 800036a:	4688      	mov	r8, r1
 800036c:	2b00      	cmp	r3, #0
 800036e:	d14a      	bne.n	8000406 <__udivmoddi4+0xa6>
 8000370:	428a      	cmp	r2, r1
 8000372:	4617      	mov	r7, r2
 8000374:	d962      	bls.n	800043c <__udivmoddi4+0xdc>
 8000376:	fab2 f682 	clz	r6, r2
 800037a:	b14e      	cbz	r6, 8000390 <__udivmoddi4+0x30>
 800037c:	f1c6 0320 	rsb	r3, r6, #32
 8000380:	fa01 f806 	lsl.w	r8, r1, r6
 8000384:	fa20 f303 	lsr.w	r3, r0, r3
 8000388:	40b7      	lsls	r7, r6
 800038a:	ea43 0808 	orr.w	r8, r3, r8
 800038e:	40b4      	lsls	r4, r6
 8000390:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000394:	fa1f fc87 	uxth.w	ip, r7
 8000398:	fbb8 f1fe 	udiv	r1, r8, lr
 800039c:	0c23      	lsrs	r3, r4, #16
 800039e:	fb0e 8811 	mls	r8, lr, r1, r8
 80003a2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80003a6:	fb01 f20c 	mul.w	r2, r1, ip
 80003aa:	429a      	cmp	r2, r3
 80003ac:	d909      	bls.n	80003c2 <__udivmoddi4+0x62>
 80003ae:	18fb      	adds	r3, r7, r3
 80003b0:	f101 30ff 	add.w	r0, r1, #4294967295
 80003b4:	f080 80ea 	bcs.w	800058c <__udivmoddi4+0x22c>
 80003b8:	429a      	cmp	r2, r3
 80003ba:	f240 80e7 	bls.w	800058c <__udivmoddi4+0x22c>
 80003be:	3902      	subs	r1, #2
 80003c0:	443b      	add	r3, r7
 80003c2:	1a9a      	subs	r2, r3, r2
 80003c4:	b2a3      	uxth	r3, r4
 80003c6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ca:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ce:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003d2:	fb00 fc0c 	mul.w	ip, r0, ip
 80003d6:	459c      	cmp	ip, r3
 80003d8:	d909      	bls.n	80003ee <__udivmoddi4+0x8e>
 80003da:	18fb      	adds	r3, r7, r3
 80003dc:	f100 32ff 	add.w	r2, r0, #4294967295
 80003e0:	f080 80d6 	bcs.w	8000590 <__udivmoddi4+0x230>
 80003e4:	459c      	cmp	ip, r3
 80003e6:	f240 80d3 	bls.w	8000590 <__udivmoddi4+0x230>
 80003ea:	443b      	add	r3, r7
 80003ec:	3802      	subs	r0, #2
 80003ee:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80003f2:	eba3 030c 	sub.w	r3, r3, ip
 80003f6:	2100      	movs	r1, #0
 80003f8:	b11d      	cbz	r5, 8000402 <__udivmoddi4+0xa2>
 80003fa:	40f3      	lsrs	r3, r6
 80003fc:	2200      	movs	r2, #0
 80003fe:	e9c5 3200 	strd	r3, r2, [r5]
 8000402:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000406:	428b      	cmp	r3, r1
 8000408:	d905      	bls.n	8000416 <__udivmoddi4+0xb6>
 800040a:	b10d      	cbz	r5, 8000410 <__udivmoddi4+0xb0>
 800040c:	e9c5 0100 	strd	r0, r1, [r5]
 8000410:	2100      	movs	r1, #0
 8000412:	4608      	mov	r0, r1
 8000414:	e7f5      	b.n	8000402 <__udivmoddi4+0xa2>
 8000416:	fab3 f183 	clz	r1, r3
 800041a:	2900      	cmp	r1, #0
 800041c:	d146      	bne.n	80004ac <__udivmoddi4+0x14c>
 800041e:	4573      	cmp	r3, lr
 8000420:	d302      	bcc.n	8000428 <__udivmoddi4+0xc8>
 8000422:	4282      	cmp	r2, r0
 8000424:	f200 8105 	bhi.w	8000632 <__udivmoddi4+0x2d2>
 8000428:	1a84      	subs	r4, r0, r2
 800042a:	eb6e 0203 	sbc.w	r2, lr, r3
 800042e:	2001      	movs	r0, #1
 8000430:	4690      	mov	r8, r2
 8000432:	2d00      	cmp	r5, #0
 8000434:	d0e5      	beq.n	8000402 <__udivmoddi4+0xa2>
 8000436:	e9c5 4800 	strd	r4, r8, [r5]
 800043a:	e7e2      	b.n	8000402 <__udivmoddi4+0xa2>
 800043c:	2a00      	cmp	r2, #0
 800043e:	f000 8090 	beq.w	8000562 <__udivmoddi4+0x202>
 8000442:	fab2 f682 	clz	r6, r2
 8000446:	2e00      	cmp	r6, #0
 8000448:	f040 80a4 	bne.w	8000594 <__udivmoddi4+0x234>
 800044c:	1a8a      	subs	r2, r1, r2
 800044e:	0c03      	lsrs	r3, r0, #16
 8000450:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000454:	b280      	uxth	r0, r0
 8000456:	b2bc      	uxth	r4, r7
 8000458:	2101      	movs	r1, #1
 800045a:	fbb2 fcfe 	udiv	ip, r2, lr
 800045e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000462:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000466:	fb04 f20c 	mul.w	r2, r4, ip
 800046a:	429a      	cmp	r2, r3
 800046c:	d907      	bls.n	800047e <__udivmoddi4+0x11e>
 800046e:	18fb      	adds	r3, r7, r3
 8000470:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000474:	d202      	bcs.n	800047c <__udivmoddi4+0x11c>
 8000476:	429a      	cmp	r2, r3
 8000478:	f200 80e0 	bhi.w	800063c <__udivmoddi4+0x2dc>
 800047c:	46c4      	mov	ip, r8
 800047e:	1a9b      	subs	r3, r3, r2
 8000480:	fbb3 f2fe 	udiv	r2, r3, lr
 8000484:	fb0e 3312 	mls	r3, lr, r2, r3
 8000488:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800048c:	fb02 f404 	mul.w	r4, r2, r4
 8000490:	429c      	cmp	r4, r3
 8000492:	d907      	bls.n	80004a4 <__udivmoddi4+0x144>
 8000494:	18fb      	adds	r3, r7, r3
 8000496:	f102 30ff 	add.w	r0, r2, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x142>
 800049c:	429c      	cmp	r4, r3
 800049e:	f200 80ca 	bhi.w	8000636 <__udivmoddi4+0x2d6>
 80004a2:	4602      	mov	r2, r0
 80004a4:	1b1b      	subs	r3, r3, r4
 80004a6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80004aa:	e7a5      	b.n	80003f8 <__udivmoddi4+0x98>
 80004ac:	f1c1 0620 	rsb	r6, r1, #32
 80004b0:	408b      	lsls	r3, r1
 80004b2:	fa22 f706 	lsr.w	r7, r2, r6
 80004b6:	431f      	orrs	r7, r3
 80004b8:	fa0e f401 	lsl.w	r4, lr, r1
 80004bc:	fa20 f306 	lsr.w	r3, r0, r6
 80004c0:	fa2e fe06 	lsr.w	lr, lr, r6
 80004c4:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80004c8:	4323      	orrs	r3, r4
 80004ca:	fa00 f801 	lsl.w	r8, r0, r1
 80004ce:	fa1f fc87 	uxth.w	ip, r7
 80004d2:	fbbe f0f9 	udiv	r0, lr, r9
 80004d6:	0c1c      	lsrs	r4, r3, #16
 80004d8:	fb09 ee10 	mls	lr, r9, r0, lr
 80004dc:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80004e0:	fb00 fe0c 	mul.w	lr, r0, ip
 80004e4:	45a6      	cmp	lr, r4
 80004e6:	fa02 f201 	lsl.w	r2, r2, r1
 80004ea:	d909      	bls.n	8000500 <__udivmoddi4+0x1a0>
 80004ec:	193c      	adds	r4, r7, r4
 80004ee:	f100 3aff 	add.w	sl, r0, #4294967295
 80004f2:	f080 809c 	bcs.w	800062e <__udivmoddi4+0x2ce>
 80004f6:	45a6      	cmp	lr, r4
 80004f8:	f240 8099 	bls.w	800062e <__udivmoddi4+0x2ce>
 80004fc:	3802      	subs	r0, #2
 80004fe:	443c      	add	r4, r7
 8000500:	eba4 040e 	sub.w	r4, r4, lr
 8000504:	fa1f fe83 	uxth.w	lr, r3
 8000508:	fbb4 f3f9 	udiv	r3, r4, r9
 800050c:	fb09 4413 	mls	r4, r9, r3, r4
 8000510:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000514:	fb03 fc0c 	mul.w	ip, r3, ip
 8000518:	45a4      	cmp	ip, r4
 800051a:	d908      	bls.n	800052e <__udivmoddi4+0x1ce>
 800051c:	193c      	adds	r4, r7, r4
 800051e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000522:	f080 8082 	bcs.w	800062a <__udivmoddi4+0x2ca>
 8000526:	45a4      	cmp	ip, r4
 8000528:	d97f      	bls.n	800062a <__udivmoddi4+0x2ca>
 800052a:	3b02      	subs	r3, #2
 800052c:	443c      	add	r4, r7
 800052e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000532:	eba4 040c 	sub.w	r4, r4, ip
 8000536:	fba0 ec02 	umull	lr, ip, r0, r2
 800053a:	4564      	cmp	r4, ip
 800053c:	4673      	mov	r3, lr
 800053e:	46e1      	mov	r9, ip
 8000540:	d362      	bcc.n	8000608 <__udivmoddi4+0x2a8>
 8000542:	d05f      	beq.n	8000604 <__udivmoddi4+0x2a4>
 8000544:	b15d      	cbz	r5, 800055e <__udivmoddi4+0x1fe>
 8000546:	ebb8 0203 	subs.w	r2, r8, r3
 800054a:	eb64 0409 	sbc.w	r4, r4, r9
 800054e:	fa04 f606 	lsl.w	r6, r4, r6
 8000552:	fa22 f301 	lsr.w	r3, r2, r1
 8000556:	431e      	orrs	r6, r3
 8000558:	40cc      	lsrs	r4, r1
 800055a:	e9c5 6400 	strd	r6, r4, [r5]
 800055e:	2100      	movs	r1, #0
 8000560:	e74f      	b.n	8000402 <__udivmoddi4+0xa2>
 8000562:	fbb1 fcf2 	udiv	ip, r1, r2
 8000566:	0c01      	lsrs	r1, r0, #16
 8000568:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800056c:	b280      	uxth	r0, r0
 800056e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000572:	463b      	mov	r3, r7
 8000574:	4638      	mov	r0, r7
 8000576:	463c      	mov	r4, r7
 8000578:	46b8      	mov	r8, r7
 800057a:	46be      	mov	lr, r7
 800057c:	2620      	movs	r6, #32
 800057e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000582:	eba2 0208 	sub.w	r2, r2, r8
 8000586:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800058a:	e766      	b.n	800045a <__udivmoddi4+0xfa>
 800058c:	4601      	mov	r1, r0
 800058e:	e718      	b.n	80003c2 <__udivmoddi4+0x62>
 8000590:	4610      	mov	r0, r2
 8000592:	e72c      	b.n	80003ee <__udivmoddi4+0x8e>
 8000594:	f1c6 0220 	rsb	r2, r6, #32
 8000598:	fa2e f302 	lsr.w	r3, lr, r2
 800059c:	40b7      	lsls	r7, r6
 800059e:	40b1      	lsls	r1, r6
 80005a0:	fa20 f202 	lsr.w	r2, r0, r2
 80005a4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80005a8:	430a      	orrs	r2, r1
 80005aa:	fbb3 f8fe 	udiv	r8, r3, lr
 80005ae:	b2bc      	uxth	r4, r7
 80005b0:	fb0e 3318 	mls	r3, lr, r8, r3
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80005ba:	fb08 f904 	mul.w	r9, r8, r4
 80005be:	40b0      	lsls	r0, r6
 80005c0:	4589      	cmp	r9, r1
 80005c2:	ea4f 4310 	mov.w	r3, r0, lsr #16
 80005c6:	b280      	uxth	r0, r0
 80005c8:	d93e      	bls.n	8000648 <__udivmoddi4+0x2e8>
 80005ca:	1879      	adds	r1, r7, r1
 80005cc:	f108 3cff 	add.w	ip, r8, #4294967295
 80005d0:	d201      	bcs.n	80005d6 <__udivmoddi4+0x276>
 80005d2:	4589      	cmp	r9, r1
 80005d4:	d81f      	bhi.n	8000616 <__udivmoddi4+0x2b6>
 80005d6:	eba1 0109 	sub.w	r1, r1, r9
 80005da:	fbb1 f9fe 	udiv	r9, r1, lr
 80005de:	fb09 f804 	mul.w	r8, r9, r4
 80005e2:	fb0e 1119 	mls	r1, lr, r9, r1
 80005e6:	b292      	uxth	r2, r2
 80005e8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005ec:	4542      	cmp	r2, r8
 80005ee:	d229      	bcs.n	8000644 <__udivmoddi4+0x2e4>
 80005f0:	18ba      	adds	r2, r7, r2
 80005f2:	f109 31ff 	add.w	r1, r9, #4294967295
 80005f6:	d2c4      	bcs.n	8000582 <__udivmoddi4+0x222>
 80005f8:	4542      	cmp	r2, r8
 80005fa:	d2c2      	bcs.n	8000582 <__udivmoddi4+0x222>
 80005fc:	f1a9 0102 	sub.w	r1, r9, #2
 8000600:	443a      	add	r2, r7
 8000602:	e7be      	b.n	8000582 <__udivmoddi4+0x222>
 8000604:	45f0      	cmp	r8, lr
 8000606:	d29d      	bcs.n	8000544 <__udivmoddi4+0x1e4>
 8000608:	ebbe 0302 	subs.w	r3, lr, r2
 800060c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000610:	3801      	subs	r0, #1
 8000612:	46e1      	mov	r9, ip
 8000614:	e796      	b.n	8000544 <__udivmoddi4+0x1e4>
 8000616:	eba7 0909 	sub.w	r9, r7, r9
 800061a:	4449      	add	r1, r9
 800061c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000620:	fbb1 f9fe 	udiv	r9, r1, lr
 8000624:	fb09 f804 	mul.w	r8, r9, r4
 8000628:	e7db      	b.n	80005e2 <__udivmoddi4+0x282>
 800062a:	4673      	mov	r3, lr
 800062c:	e77f      	b.n	800052e <__udivmoddi4+0x1ce>
 800062e:	4650      	mov	r0, sl
 8000630:	e766      	b.n	8000500 <__udivmoddi4+0x1a0>
 8000632:	4608      	mov	r0, r1
 8000634:	e6fd      	b.n	8000432 <__udivmoddi4+0xd2>
 8000636:	443b      	add	r3, r7
 8000638:	3a02      	subs	r2, #2
 800063a:	e733      	b.n	80004a4 <__udivmoddi4+0x144>
 800063c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000640:	443b      	add	r3, r7
 8000642:	e71c      	b.n	800047e <__udivmoddi4+0x11e>
 8000644:	4649      	mov	r1, r9
 8000646:	e79c      	b.n	8000582 <__udivmoddi4+0x222>
 8000648:	eba1 0109 	sub.w	r1, r1, r9
 800064c:	46c4      	mov	ip, r8
 800064e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000652:	fb09 f804 	mul.w	r8, r9, r4
 8000656:	e7c4      	b.n	80005e2 <__udivmoddi4+0x282>

08000658 <__aeabi_idiv0>:
 8000658:	4770      	bx	lr
 800065a:	bf00      	nop

0800065c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800065c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000694 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000660:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000662:	e003      	b.n	800066c <LoopCopyDataInit>

08000664 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000664:	4b0c      	ldr	r3, [pc, #48]	@ (8000698 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000666:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000668:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800066a:	3104      	adds	r1, #4

0800066c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800066c:	480b      	ldr	r0, [pc, #44]	@ (800069c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800066e:	4b0c      	ldr	r3, [pc, #48]	@ (80006a0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000670:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000674:	d3f6      	bcc.n	8000664 <CopyDataInit>
  ldr  r2, =_sbss
 8000676:	4a0b      	ldr	r2, [pc, #44]	@ (80006a4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000678:	e002      	b.n	8000680 <LoopFillZerobss>

0800067a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800067a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800067c:	f842 3b04 	str.w	r3, [r2], #4

08000680 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000680:	4b09      	ldr	r3, [pc, #36]	@ (80006a8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000682:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000684:	d3f9      	bcc.n	800067a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000686:	f00b fcc1 	bl	800c00c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800068a:	f02a fa2f 	bl	802aaec <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800068e:	f001 f865 	bl	800175c <main>
  bx  lr    
 8000692:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000694:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000698:	0804887c 	.word	0x0804887c
  ldr  r0, =_sdata
 800069c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80006a0:	20000180 	.word	0x20000180
  ldr  r2, =_sbss
 80006a4:	20000380 	.word	0x20000380
  ldr  r3, = _ebss
 80006a8:	20014c8c 	.word	0x20014c8c

080006ac <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80006ac:	e7fe      	b.n	80006ac <ADC_IRQHandler>

080006ae <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006ae:	4770      	bx	lr

080006b0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006b0:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 80006b2:	f000 fdbd 	bl	8001230 <touchgfx_components_init>
    touchgfx_init();
}
 80006b6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 80006ba:	f000 bd3f 	b.w	800113c <touchgfx_init>

080006be <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 80006be:	f000 bdb9 	b.w	8001234 <touchgfx_taskEntry>

080006c2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006c2:	4770      	bx	lr

080006c4 <_ZN20STM32TouchControllerD0Ev>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	2104      	movs	r1, #4
 80006c8:	4604      	mov	r4, r0
 80006ca:	f029 f823 	bl	8029714 <_ZdlPvj>
 80006ce:	4620      	mov	r0, r4
 80006d0:	bd10      	pop	{r4, pc}
	...

080006d4 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006d4:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006d6:	4b0c      	ldr	r3, [pc, #48]	@ (8000708 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d8:	4c0c      	ldr	r4, [pc, #48]	@ (800070c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006da:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006dc:	4b0c      	ldr	r3, [pc, #48]	@ (8000710 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006de:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 80006e0:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006e2:	6863      	ldr	r3, [r4, #4]
 80006e4:	4798      	blx	r3
 80006e6:	f640 0311 	movw	r3, #2065	@ 0x811
 80006ea:	4298      	cmp	r0, r3
 80006ec:	d10a      	bne.n	8000704 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006ee:	4d09      	ldr	r5, [pc, #36]	@ (8000714 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80006f0:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80006f2:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80006f4:	2082      	movs	r0, #130	@ 0x82
 80006f6:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80006f8:	682b      	ldr	r3, [r5, #0]
 80006fa:	2082      	movs	r0, #130	@ 0x82
 80006fc:	68db      	ldr	r3, [r3, #12]
 80006fe:	4798      	blx	r3
 8000700:	2000      	movs	r0, #0
    }

    return ret;
}
 8000702:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000704:	2001      	movs	r0, #1
 8000706:	e7fc      	b.n	8000702 <_Z11BSP_TS_Inittt+0x2e>
 8000708:	200003a6 	.word	0x200003a6
 800070c:	20000068 	.word	0x20000068
 8000710:	200003a4 	.word	0x200003a4
 8000714:	200003a8 	.word	0x200003a8

08000718 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000718:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800071c:	20f0      	movs	r0, #240	@ 0xf0
 800071e:	f7ff bfd9 	b.w	80006d4 <_Z11BSP_TS_Inittt>
	...

08000724 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000724:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000726:	4d39      	ldr	r5, [pc, #228]	@ (800080c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 8000728:	682b      	ldr	r3, [r5, #0]
{
 800072a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800072c:	691b      	ldr	r3, [r3, #16]
 800072e:	2082      	movs	r0, #130	@ 0x82
 8000730:	4798      	blx	r3
 8000732:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000734:	2800      	cmp	r0, #0
 8000736:	d04e      	beq.n	80007d6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000738:	682b      	ldr	r3, [r5, #0]
 800073a:	f10d 0206 	add.w	r2, sp, #6
 800073e:	695b      	ldr	r3, [r3, #20]
 8000740:	a901      	add	r1, sp, #4
 8000742:	2082      	movs	r0, #130	@ 0x82
 8000744:	4798      	blx	r3

        if (isRevD)
 8000746:	4b32      	ldr	r3, [pc, #200]	@ (8000810 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8000748:	781b      	ldrb	r3, [r3, #0]
 800074a:	2b00      	cmp	r3, #0
 800074c:	d04b      	beq.n	80007e6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 800074e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000752:	f640 6374 	movw	r3, #3700	@ 0xe74
 8000756:	429a      	cmp	r2, r3
 8000758:	d93f      	bls.n	80007da <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 800075a:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 800075e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000762:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8000764:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000766:	2b0a      	cmp	r3, #10
 8000768:	d942      	bls.n	80007f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 800076a:	220b      	movs	r2, #11
 800076c:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000770:	4a28      	ldr	r2, [pc, #160]	@ (8000814 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8000772:	8812      	ldrh	r2, [r2, #0]
 8000774:	4293      	cmp	r3, r2
 8000776:	d901      	bls.n	800077c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8000778:	3a01      	subs	r2, #1
 800077a:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800077c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000780:	4825      	ldr	r0, [pc, #148]	@ (8000818 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8000782:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000786:	428a      	cmp	r2, r1
 8000788:	d834      	bhi.n	80007f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 800078a:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 800078e:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000790:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 8000792:	b292      	uxth	r2, r2
        xr = x / 15;
 8000794:	250f      	movs	r5, #15
 8000796:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 800079a:	4d20      	ldr	r5, [pc, #128]	@ (800081c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 800079c:	882d      	ldrh	r5, [r5, #0]
 800079e:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 80007a0:	bf84      	itt	hi
 80007a2:	f105 35ff 	addhi.w	r5, r5, #4294967295
 80007a6:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007a8:	428a      	cmp	r2, r1
 80007aa:	4615      	mov	r5, r2
 80007ac:	b28e      	uxth	r6, r1
 80007ae:	d92a      	bls.n	8000806 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 80007b0:	1b92      	subs	r2, r2, r6
 80007b2:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007b4:	4e1a      	ldr	r6, [pc, #104]	@ (8000820 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 80007b6:	6837      	ldr	r7, [r6, #0]
 80007b8:	42bb      	cmp	r3, r7
 80007ba:	b2ba      	uxth	r2, r7
 80007bc:	bf8c      	ite	hi
 80007be:	1a9a      	subhi	r2, r3, r2
 80007c0:	1ad2      	subls	r2, r2, r3
 80007c2:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 80007c4:	4411      	add	r1, r2
 80007c6:	2905      	cmp	r1, #5
        {
            _x = x;
 80007c8:	bfc4      	itt	gt
 80007ca:	6005      	strgt	r5, [r0, #0]
            _y = y;
 80007cc:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 80007ce:	6803      	ldr	r3, [r0, #0]
 80007d0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007d2:	6833      	ldr	r3, [r6, #0]
 80007d4:	80a3      	strh	r3, [r4, #4]
    }
}
 80007d6:	b003      	add	sp, #12
 80007d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 80007da:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 80007dc:	bf9c      	itt	ls
 80007de:	22b4      	movls	r2, #180	@ 0xb4
 80007e0:	f8ad 2006 	strhls.w	r2, [sp, #6]
 80007e4:	e7bb      	b.n	800075e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 80007e6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80007ea:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 80007ee:	e7b9      	b.n	8000764 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 80007f0:	2300      	movs	r3, #0
 80007f2:	e7c3      	b.n	800077c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 80007f4:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 80007f8:	3208      	adds	r2, #8
 80007fa:	b292      	uxth	r2, r2
        if (xr <= 0)
 80007fc:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007fe:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8000800:	d8c8      	bhi.n	8000794 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000802:	2500      	movs	r5, #0
            xr = 0;
 8000804:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000806:	1a89      	subs	r1, r1, r2
 8000808:	b289      	uxth	r1, r1
 800080a:	e7d3      	b.n	80007b4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 800080c:	200003a8 	.word	0x200003a8
 8000810:	20002e64 	.word	0x20002e64
 8000814:	200003a4 	.word	0x200003a4
 8000818:	200003a0 	.word	0x200003a0
 800081c:	200003a6 	.word	0x200003a6
 8000820:	2000039c 	.word	0x2000039c

08000824 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000824:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000826:	4668      	mov	r0, sp
{
 8000828:	460d      	mov	r5, r1
 800082a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800082c:	f7ff ff7a 	bl	8000724 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000830:	f8bd 0000 	ldrh.w	r0, [sp]
 8000834:	b130      	cbz	r0, 8000844 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000836:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800083a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800083c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000840:	6023      	str	r3, [r4, #0]
        return true;
 8000842:	2001      	movs	r0, #1
}
 8000844:	b003      	add	sp, #12
 8000846:	bd30      	pop	{r4, r5, pc}

08000848 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000848:	2803      	cmp	r0, #3
 800084a:	d821      	bhi.n	8000890 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 800084c:	e8df f000 	tbb	[pc, r0]
 8000850:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000854:	4b0f      	ldr	r3, [pc, #60]	@ (8000894 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000856:	681a      	ldr	r2, [r3, #0]
 8000858:	fab2 f282 	clz	r2, r2
 800085c:	0952      	lsrs	r2, r2, #5
 800085e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000860:	480d      	ldr	r0, [pc, #52]	@ (8000898 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000862:	f00b be67 	b.w	800c534 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000866:	4b0b      	ldr	r3, [pc, #44]	@ (8000894 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000868:	685a      	ldr	r2, [r3, #4]
 800086a:	fab2 f282 	clz	r2, r2
 800086e:	0952      	lsrs	r2, r2, #5
 8000870:	2108      	movs	r1, #8
 8000872:	e7f5      	b.n	8000860 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000874:	4b07      	ldr	r3, [pc, #28]	@ (8000894 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000876:	689a      	ldr	r2, [r3, #8]
 8000878:	fab2 f282 	clz	r2, r2
 800087c:	0952      	lsrs	r2, r2, #5
 800087e:	2110      	movs	r1, #16
 8000880:	e7ee      	b.n	8000860 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000882:	4b04      	ldr	r3, [pc, #16]	@ (8000894 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000884:	68da      	ldr	r2, [r3, #12]
 8000886:	fab2 f282 	clz	r2, r2
 800088a:	0952      	lsrs	r2, r2, #5
 800088c:	2120      	movs	r1, #32
 800088e:	e7e7      	b.n	8000860 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000890:	4770      	bx	lr
 8000892:	bf00      	nop
 8000894:	200003ac 	.word	0x200003ac
 8000898:	40021000 	.word	0x40021000

0800089c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800089c:	2803      	cmp	r0, #3
 800089e:	d821      	bhi.n	80008e4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80008a0:	e8df f000 	tbb	[pc, r0]
 80008a4:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80008a8:	4b0f      	ldr	r3, [pc, #60]	@ (80008e8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008aa:	681a      	ldr	r2, [r3, #0]
 80008ac:	3a00      	subs	r2, #0
 80008ae:	bf18      	it	ne
 80008b0:	2201      	movne	r2, #1
 80008b2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008b4:	480d      	ldr	r0, [pc, #52]	@ (80008ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80008b6:	f00b be3d 	b.w	800c534 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80008ba:	4b0b      	ldr	r3, [pc, #44]	@ (80008e8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008bc:	685a      	ldr	r2, [r3, #4]
 80008be:	3a00      	subs	r2, #0
 80008c0:	bf18      	it	ne
 80008c2:	2201      	movne	r2, #1
 80008c4:	2108      	movs	r1, #8
 80008c6:	e7f5      	b.n	80008b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80008c8:	4b07      	ldr	r3, [pc, #28]	@ (80008e8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008ca:	689a      	ldr	r2, [r3, #8]
 80008cc:	3a00      	subs	r2, #0
 80008ce:	bf18      	it	ne
 80008d0:	2201      	movne	r2, #1
 80008d2:	2110      	movs	r1, #16
 80008d4:	e7ee      	b.n	80008b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008d6:	4b04      	ldr	r3, [pc, #16]	@ (80008e8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008d8:	68da      	ldr	r2, [r3, #12]
 80008da:	3a00      	subs	r2, #0
 80008dc:	bf18      	it	ne
 80008de:	2201      	movne	r2, #1
 80008e0:	2120      	movs	r1, #32
 80008e2:	e7e7      	b.n	80008b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008e4:	4770      	bx	lr
 80008e6:	bf00      	nop
 80008e8:	200003ac 	.word	0x200003ac
 80008ec:	40021000 	.word	0x40021000

080008f0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80008f0:	2803      	cmp	r0, #3
 80008f2:	d80d      	bhi.n	8000910 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 80008f4:	e8df f000 	tbb	[pc, r0]
 80008f8:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80008fc:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80008fe:	4805      	ldr	r0, [pc, #20]	@ (8000914 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000900:	f00b be1d 	b.w	800c53e <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000904:	2108      	movs	r1, #8
 8000906:	e7fa      	b.n	80008fe <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000908:	2110      	movs	r1, #16
 800090a:	e7f8      	b.n	80008fe <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800090c:	2120      	movs	r1, #32
 800090e:	e7f6      	b.n	80008fe <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000910:	4770      	bx	lr
 8000912:	bf00      	nop
 8000914:	40021000 	.word	0x40021000

08000918 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000918:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800091a:	2803      	cmp	r0, #3
 800091c:	d811      	bhi.n	8000942 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 800091e:	e8df f000 	tbb	[pc, r0]
 8000922:	0a02      	.short	0x0a02
 8000924:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000926:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000928:	4807      	ldr	r0, [pc, #28]	@ (8000948 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800092a:	f00b fdfd 	bl	800c528 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800092e:	1e43      	subs	r3, r0, #1
 8000930:	4258      	negs	r0, r3
 8000932:	4158      	adcs	r0, r3
 8000934:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000936:	2108      	movs	r1, #8
 8000938:	e7f6      	b.n	8000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800093a:	2110      	movs	r1, #16
 800093c:	e7f4      	b.n	8000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800093e:	2120      	movs	r1, #32
 8000940:	e7f2      	b.n	8000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000942:	2000      	movs	r0, #0
 8000944:	e7f3      	b.n	800092e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000946:	bf00      	nop
 8000948:	40021000 	.word	0x40021000

0800094c <_ZN8touchgfx4GPIO4initEv>:
{
 800094c:	b570      	push	{r4, r5, r6, lr}
 800094e:	4d08      	ldr	r5, [pc, #32]	@ (8000970 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000950:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000952:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000954:	b2e0      	uxtb	r0, r4
 8000956:	f7ff ffdf 	bl	8000918 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800095a:	b118      	cbz	r0, 8000964 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800095c:	682b      	ldr	r3, [r5, #0]
 800095e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000960:	bf18      	it	ne
 8000962:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000964:	3401      	adds	r4, #1
 8000966:	2c05      	cmp	r4, #5
 8000968:	f105 0504 	add.w	r5, r5, #4
 800096c:	d1f2      	bne.n	8000954 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800096e:	bd70      	pop	{r4, r5, r6, pc}
 8000970:	200003ac 	.word	0x200003ac

08000974 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000974:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000976:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800097a:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 800097e:	4770      	bx	lr

08000980 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8000980:	4770      	bx	lr

08000982 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000982:	2000      	movs	r0, #0
 8000984:	4770      	bx	lr
	...

08000988 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000988:	4b03      	ldr	r3, [pc, #12]	@ (8000998 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800098a:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800098c:	3900      	subs	r1, #0
 800098e:	bf18      	it	ne
 8000990:	2101      	movne	r1, #1
 8000992:	7019      	strb	r1, [r3, #0]
    }
 8000994:	4770      	bx	lr
 8000996:	bf00      	nop
 8000998:	20013f4b 	.word	0x20013f4b

0800099c <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 800099c:	4770      	bx	lr

0800099e <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800099e:	2000      	movs	r0, #0
 80009a0:	4770      	bx	lr

080009a2 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80009a2:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80009a4:	b10b      	cbz	r3, 80009aa <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80009a6:	4608      	mov	r0, r1
 80009a8:	4718      	bx	r3
        }
    }
 80009aa:	4770      	bx	lr

080009ac <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80009ac:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80009b0:	4770      	bx	lr

080009b2 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80009b2:	6840      	ldr	r0, [r0, #4]
 80009b4:	6803      	ldr	r3, [r0, #0]
 80009b6:	699b      	ldr	r3, [r3, #24]
 80009b8:	4718      	bx	r3

080009ba <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 80009ba:	4770      	bx	lr

080009bc <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80009bc:	4770      	bx	lr

080009be <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80009be:	4770      	bx	lr

080009c0 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 80009c0:	4770      	bx	lr

080009c2 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80009c2:	4770      	bx	lr

080009c4 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 80009c4:	b510      	push	{r4, lr}
 80009c6:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80009c8:	f000 fd4a 	bl	8001460 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 80009cc:	6823      	ldr	r3, [r4, #0]
 80009ce:	4903      	ldr	r1, [pc, #12]	@ (80009dc <_ZN11TouchGFXHAL10initializeEv+0x18>)
 80009d0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80009d4:	4620      	mov	r0, r4
}
 80009d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 80009da:	4718      	bx	r3
 80009dc:	d0000000 	.word	0xd0000000

080009e0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80009e0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80009e2:	6803      	ldr	r3, [r0, #0]
{
 80009e4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80009e6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80009ea:	4798      	blx	r3
    enableInterrupts();
 80009ec:	6823      	ldr	r3, [r4, #0]
 80009ee:	4620      	mov	r0, r4
 80009f0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80009f2:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80009f4:	f000 f8ec 	bl	8000bd0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80009f8:	6823      	ldr	r3, [r4, #0]
 80009fa:	4620      	mov	r0, r4
 80009fc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80009fe:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000a00:	2029      	movs	r0, #41	@ 0x29
 8000a02:	f001 f931 	bl	8001c68 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000a06:	f000 f8e3 	bl	8000bd0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000a0a:	6823      	ldr	r3, [r4, #0]
 8000a0c:	4620      	mov	r0, r4
 8000a0e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000a10:	4798      	blx	r3
    for (;;)
 8000a12:	e7f8      	b.n	8000a06 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000a14 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000a14:	b510      	push	{r4, lr}
 8000a16:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000a18:	f010 fee0 	bl	80117dc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000a1c:	6823      	ldr	r3, [r4, #0]
 8000a1e:	4620      	mov	r0, r4
 8000a20:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8000a24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000a28:	4718      	bx	r3

08000a2a <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000a2a:	f000 bcfd 	b.w	8001428 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000a2e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000a2e:	f000 bd01 	b.w	8001434 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000a32 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000a32:	f000 bd33 	b.w	800149c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000a36 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000a36:	f000 bcd3 	b.w	80013e0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000a3a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000a3a:	f000 bd43 	b.w	80014c4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000a3e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000a3e:	f000 bd4b 	b.w	80014d8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000a42 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a42:	f000 bcd7 	b.w	80013f4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a46 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000a46:	f010 b8f7 	b.w	8010c38 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000a4a <_ZN11TouchGFXHALD0Ev>:
 8000a4a:	b510      	push	{r4, lr}
 8000a4c:	2184      	movs	r1, #132	@ 0x84
 8000a4e:	4604      	mov	r4, r0
 8000a50:	f028 fe60 	bl	8029714 <_ZdlPvj>
 8000a54:	4620      	mov	r0, r4
 8000a56:	bd10      	pop	{r4, pc}

08000a58 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000a58:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000a5a:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8000a5e:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000a62:	4b0c      	ldr	r3, [pc, #48]	@ (8000a94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000a64:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000a66:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000a68:	d009      	beq.n	8000a7e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000a6a:	b93a      	cbnz	r2, 8000a7c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a6c:	4a0a      	ldr	r2, [pc, #40]	@ (8000a98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a6e:	490b      	ldr	r1, [pc, #44]	@ (8000a9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a70:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a72:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000a74:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a76:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a78:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a7a:	701a      	strb	r2, [r3, #0]
    }
 8000a7c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a7e:	2a00      	cmp	r2, #0
 8000a80:	d0fc      	beq.n	8000a7c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a82:	4a05      	ldr	r2, [pc, #20]	@ (8000a98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a84:	4905      	ldr	r1, [pc, #20]	@ (8000a9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a86:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a88:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a8a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a8c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a8e:	2200      	movs	r2, #0
 8000a90:	e7f3      	b.n	8000a7a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000a92:	bf00      	nop
 8000a94:	20013f44 	.word	0x20013f44
 8000a98:	20013f40 	.word	0x20013f40
 8000a9c:	20013f42 	.word	0x20013f42

08000aa0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000aa0:	b570      	push	{r4, r5, r6, lr}
 8000aa2:	460d      	mov	r5, r1
 8000aa4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000aa6:	b935      	cbnz	r5, 8000ab6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000aa8:	4b09      	ldr	r3, [pc, #36]	@ (8000ad0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000aaa:	4a0a      	ldr	r2, [pc, #40]	@ (8000ad4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000aac:	480a      	ldr	r0, [pc, #40]	@ (8000ad8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000aae:	f240 21ff 	movw	r1, #767	@ 0x2ff
 8000ab2:	f029 fd6b 	bl	802a58c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000ab6:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000aba:	4b08      	ldr	r3, [pc, #32]	@ (8000adc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000abc:	3a00      	subs	r2, #0
 8000abe:	bf18      	it	ne
 8000ac0:	2201      	movne	r2, #1
 8000ac2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000ac4:	6803      	ldr	r3, [r0, #0]
    }
 8000ac6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000aca:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8000ace:	4718      	bx	r3
 8000ad0:	0802b6f8 	.word	0x0802b6f8
 8000ad4:	0802b730 	.word	0x0802b730
 8000ad8:	0802b77e 	.word	0x0802b77e
 8000adc:	20013f4a 	.word	0x20013f4a

08000ae0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000ae0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000ae2:	4b09      	ldr	r3, [pc, #36]	@ (8000b08 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000ae4:	881b      	ldrh	r3, [r3, #0]
 8000ae6:	428b      	cmp	r3, r1
 8000ae8:	d803      	bhi.n	8000af2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000aea:	4b08      	ldr	r3, [pc, #32]	@ (8000b0c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000aec:	881b      	ldrh	r3, [r3, #0]
 8000aee:	4293      	cmp	r3, r2
 8000af0:	d905      	bls.n	8000afe <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000af2:	4b07      	ldr	r3, [pc, #28]	@ (8000b10 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000af4:	4a07      	ldr	r2, [pc, #28]	@ (8000b14 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000af6:	4808      	ldr	r0, [pc, #32]	@ (8000b18 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000af8:	21a3      	movs	r1, #163	@ 0xa3
 8000afa:	f029 fd47 	bl	802a58c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000afe:	4b07      	ldr	r3, [pc, #28]	@ (8000b1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000b00:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000b02:	4b07      	ldr	r3, [pc, #28]	@ (8000b20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000b04:	801a      	strh	r2, [r3, #0]
    }
 8000b06:	bd08      	pop	{r3, pc}
 8000b08:	20013f40 	.word	0x20013f40
 8000b0c:	20013f42 	.word	0x20013f42
 8000b10:	0802b7c3 	.word	0x0802b7c3
 8000b14:	0802b826 	.word	0x0802b826
 8000b18:	0802b77e 	.word	0x0802b77e
 8000b1c:	20013f46 	.word	0x20013f46
 8000b20:	20013f48 	.word	0x20013f48

08000b24 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000b24:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000b26:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000b2a:	b118      	cbz	r0, 8000b34 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000b2c:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000b2e:	6803      	ldr	r3, [r0, #0]
 8000b30:	681b      	ldr	r3, [r3, #0]
 8000b32:	4718      	bx	r3
    }
 8000b34:	4770      	bx	lr
	...

08000b38 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b38:	2101      	movs	r1, #1
{
 8000b3a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b3c:	2200      	movs	r2, #0
 8000b3e:	4608      	mov	r0, r1
 8000b40:	f00d fd6c 	bl	800e61c <osSemaphoreNew>
 8000b44:	4b0a      	ldr	r3, [pc, #40]	@ (8000b70 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000b46:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000b48:	b928      	cbnz	r0, 8000b56 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000b4a:	4b0a      	ldr	r3, [pc, #40]	@ (8000b74 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000b4c:	4a0a      	ldr	r2, [pc, #40]	@ (8000b78 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b4e:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b50:	480a      	ldr	r0, [pc, #40]	@ (8000b7c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000b52:	f029 fd1b 	bl	802a58c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000b56:	2200      	movs	r2, #0
 8000b58:	2104      	movs	r1, #4
 8000b5a:	2001      	movs	r0, #1
 8000b5c:	f00d fdfd 	bl	800e75a <osMessageQueueNew>
 8000b60:	4b07      	ldr	r3, [pc, #28]	@ (8000b80 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000b62:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b64:	b918      	cbnz	r0, 8000b6e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000b66:	4b07      	ldr	r3, [pc, #28]	@ (8000b84 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000b68:	4a03      	ldr	r2, [pc, #12]	@ (8000b78 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b6a:	212c      	movs	r1, #44	@ 0x2c
 8000b6c:	e7f0      	b.n	8000b50 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000b6e:	bd08      	pop	{r3, pc}
 8000b70:	200003c0 	.word	0x200003c0
 8000b74:	0802b869 	.word	0x0802b869
 8000b78:	0802b8b2 	.word	0x0802b8b2
 8000b7c:	0802b8e1 	.word	0x0802b8e1
 8000b80:	200003bc 	.word	0x200003bc
 8000b84:	0802b938 	.word	0x0802b938

08000b88 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000b88:	4b02      	ldr	r3, [pc, #8]	@ (8000b94 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000b8a:	f04f 31ff 	mov.w	r1, #4294967295
 8000b8e:	6818      	ldr	r0, [r3, #0]
 8000b90:	f00d bd8e 	b.w	800e6b0 <osSemaphoreAcquire>
 8000b94:	200003c0 	.word	0x200003c0

08000b98 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000b98:	4b01      	ldr	r3, [pc, #4]	@ (8000ba0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000b9a:	6818      	ldr	r0, [r3, #0]
 8000b9c:	f00d bdb4 	b.w	800e708 <osSemaphoreRelease>
 8000ba0:	200003c0 	.word	0x200003c0

08000ba4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000ba4:	4b02      	ldr	r3, [pc, #8]	@ (8000bb0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000ba6:	2100      	movs	r1, #0
 8000ba8:	6818      	ldr	r0, [r3, #0]
 8000baa:	f00d bd81 	b.w	800e6b0 <osSemaphoreAcquire>
 8000bae:	bf00      	nop
 8000bb0:	200003c0 	.word	0x200003c0

08000bb4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000bb4:	f7ff bff0 	b.w	8000b98 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000bb8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000bb8:	4803      	ldr	r0, [pc, #12]	@ (8000bc8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000bba:	4904      	ldr	r1, [pc, #16]	@ (8000bcc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000bbc:	6800      	ldr	r0, [r0, #0]
 8000bbe:	2300      	movs	r3, #0
 8000bc0:	461a      	mov	r2, r3
 8000bc2:	f00d be05 	b.w	800e7d0 <osMessageQueuePut>
 8000bc6:	bf00      	nop
 8000bc8:	200003bc 	.word	0x200003bc
 8000bcc:	20000004 	.word	0x20000004

08000bd0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000bd0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000bd2:	4c08      	ldr	r4, [pc, #32]	@ (8000bf4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000bd4:	2300      	movs	r3, #0
 8000bd6:	461a      	mov	r2, r3
 8000bd8:	a901      	add	r1, sp, #4
 8000bda:	6820      	ldr	r0, [r4, #0]
 8000bdc:	f00d fe29 	bl	800e832 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000be0:	6820      	ldr	r0, [r4, #0]
 8000be2:	f04f 33ff 	mov.w	r3, #4294967295
 8000be6:	2200      	movs	r2, #0
 8000be8:	a901      	add	r1, sp, #4
 8000bea:	f00d fe22 	bl	800e832 <osMessageQueueGet>
}
 8000bee:	b002      	add	sp, #8
 8000bf0:	bd10      	pop	{r4, pc}
 8000bf2:	bf00      	nop
 8000bf4:	200003bc 	.word	0x200003bc

08000bf8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000bf8:	6803      	ldr	r3, [r0, #0]
 8000bfa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000bfc:	4718      	bx	r3

08000bfe <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000bfe:	2001      	movs	r0, #1
 8000c00:	4770      	bx	lr

08000c02 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000c02:	6803      	ldr	r3, [r0, #0]
 8000c04:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000c06:	4718      	bx	r3

08000c08 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8000c08:	e7fe      	b.n	8000c08 <DMA2D_XferErrorCallback>

08000c0a <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000c0a:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8000c0e:	4770      	bx	lr

08000c10 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000c10:	4b05      	ldr	r3, [pc, #20]	@ (8000c28 <_ZN8STM32DMAD1Ev+0x18>)
 8000c12:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c14:	4b05      	ldr	r3, [pc, #20]	@ (8000c2c <_ZN8STM32DMAD1Ev+0x1c>)
 8000c16:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c1a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000c1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000c22:	f3bf 8f6f 	isb	sy
}
 8000c26:	4770      	bx	lr
 8000c28:	0802cdf0 	.word	0x0802cdf0
 8000c2c:	e000e100 	.word	0xe000e100

08000c30 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000c30:	b510      	push	{r4, lr}
 8000c32:	4604      	mov	r4, r0
}
 8000c34:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8000c38:	f7ff ffea 	bl	8000c10 <_ZN8STM32DMAD1Ev>
 8000c3c:	4620      	mov	r0, r4
 8000c3e:	f028 fd69 	bl	8029714 <_ZdlPvj>
 8000c42:	4620      	mov	r0, r4
 8000c44:	bd10      	pop	{r4, pc}
	...

08000c48 <_ZN8STM32DMA10initializeEv>:
{
 8000c48:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000c4a:	2300      	movs	r3, #0
 8000c4c:	9301      	str	r3, [sp, #4]
 8000c4e:	4b0e      	ldr	r3, [pc, #56]	@ (8000c88 <_ZN8STM32DMA10initializeEv+0x40>)
 8000c50:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c52:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c56:	631a      	str	r2, [r3, #48]	@ 0x30
 8000c58:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c5a:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8000c5e:	9201      	str	r2, [sp, #4]
 8000c60:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000c62:	691a      	ldr	r2, [r3, #16]
 8000c64:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c68:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000c6a:	691a      	ldr	r2, [r3, #16]
 8000c6c:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8000c70:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000c72:	4b06      	ldr	r3, [pc, #24]	@ (8000c8c <_ZN8STM32DMA10initializeEv+0x44>)
 8000c74:	4a06      	ldr	r2, [pc, #24]	@ (8000c90 <_ZN8STM32DMA10initializeEv+0x48>)
 8000c76:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000c78:	4a06      	ldr	r2, [pc, #24]	@ (8000c94 <_ZN8STM32DMA10initializeEv+0x4c>)
 8000c7a:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c7c:	4b06      	ldr	r3, [pc, #24]	@ (8000c98 <_ZN8STM32DMA10initializeEv+0x50>)
 8000c7e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c82:	609a      	str	r2, [r3, #8]
}
 8000c84:	b002      	add	sp, #8
 8000c86:	4770      	bx	lr
 8000c88:	40023800 	.word	0x40023800
 8000c8c:	20002ff8 	.word	0x20002ff8
 8000c90:	08000ee9 	.word	0x08000ee9
 8000c94:	08000c09 	.word	0x08000c09
 8000c98:	e000e100 	.word	0xe000e100

08000c9c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000c9c:	b508      	push	{r3, lr}
    switch (format)
 8000c9e:	280a      	cmp	r0, #10
 8000ca0:	d809      	bhi.n	8000cb6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000ca2:	e8df f000 	tbb	[pc, r0]
 8000ca6:	1006      	.short	0x1006
 8000ca8:	0808080e 	.word	0x0808080e
 8000cac:	10101008 	.word	0x10101008
 8000cb0:	10          	.byte	0x10
 8000cb1:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000cb2:	2002      	movs	r0, #2
}
 8000cb4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000cb6:	4b05      	ldr	r3, [pc, #20]	@ (8000ccc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000cb8:	4a05      	ldr	r2, [pc, #20]	@ (8000cd0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000cba:	4806      	ldr	r0, [pc, #24]	@ (8000cd4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000cbc:	2190      	movs	r1, #144	@ 0x90
 8000cbe:	f029 fc65 	bl	802a58c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000cc2:	2000      	movs	r0, #0
 8000cc4:	e7f6      	b.n	8000cb4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000cc6:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000cc8:	e7f4      	b.n	8000cb4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000cca:	bf00      	nop
 8000ccc:	0802b97a 	.word	0x0802b97a
 8000cd0:	0802b995 	.word	0x0802b995
 8000cd4:	0802b9e0 	.word	0x0802b9e0

08000cd8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000cd8:	b538      	push	{r3, r4, r5, lr}
 8000cda:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000cdc:	7f88      	ldrb	r0, [r1, #30]
 8000cde:	f7ff ffdd 	bl	8000c9c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000ce2:	8aa5      	ldrh	r5, [r4, #20]
 8000ce4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000ce6:	4b16      	ldr	r3, [pc, #88]	@ (8000d40 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ce8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cea:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cec:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000cf0:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cf2:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cf4:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cf6:	1b52      	subs	r2, r2, r5
 8000cf8:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000cfa:	6825      	ldr	r5, [r4, #0]
 8000cfc:	2d08      	cmp	r5, #8
 8000cfe:	d10e      	bne.n	8000d1e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d00:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d02:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d04:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d06:	7f20      	ldrb	r0, [r4, #28]
 8000d08:	4a0e      	ldr	r2, [pc, #56]	@ (8000d44 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d0a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d0e:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000d10:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d12:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d14:	4a0c      	ldr	r2, [pc, #48]	@ (8000d48 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d16:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d18:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d1a:	601a      	str	r2, [r3, #0]
    }
}
 8000d1c:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000d1e:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d20:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000d22:	611a      	str	r2, [r3, #16]
 8000d24:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000d26:	0a0a      	lsrs	r2, r1, #8
 8000d28:	0948      	lsrs	r0, r1, #5
 8000d2a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8000d2e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8000d32:	4302      	orrs	r2, r0
 8000d34:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000d38:	430a      	orrs	r2, r1
 8000d3a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d3c:	4a03      	ldr	r2, [pc, #12]	@ (8000d4c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000d3e:	e7ec      	b.n	8000d1a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000d40:	4002b000 	.word	0x4002b000
 8000d44:	00010009 	.word	0x00010009
 8000d48:	00022301 	.word	0x00022301
 8000d4c:	00032301 	.word	0x00032301

08000d50 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d50:	b508      	push	{r3, lr}
    switch (format)
 8000d52:	280b      	cmp	r0, #11
 8000d54:	d80b      	bhi.n	8000d6e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d56:	e8df f000 	tbb	[pc, r0]
 8000d5a:	1206      	.short	0x1206
 8000d5c:	0a0a0a10 	.word	0x0a0a0a10
 8000d60:	0808080a 	.word	0x0808080a
 8000d64:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000d66:	2002      	movs	r0, #2
}
 8000d68:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000d6a:	2005      	movs	r0, #5
        break;
 8000d6c:	e7fc      	b.n	8000d68 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000d6e:	4b05      	ldr	r3, [pc, #20]	@ (8000d84 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000d70:	4a05      	ldr	r2, [pc, #20]	@ (8000d88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000d72:	4806      	ldr	r0, [pc, #24]	@ (8000d8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000d74:	216f      	movs	r1, #111	@ 0x6f
 8000d76:	f029 fc09 	bl	802a58c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000d7a:	2000      	movs	r0, #0
 8000d7c:	e7f4      	b.n	8000d68 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000d7e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000d80:	e7f2      	b.n	8000d68 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000d82:	bf00      	nop
 8000d84:	0802b97a 	.word	0x0802b97a
 8000d88:	0802ba35 	.word	0x0802ba35
 8000d8c:	0802b9e0 	.word	0x0802b9e0

08000d90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8000d90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000d94:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000d98:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000d9a:	4640      	mov	r0, r8
 8000d9c:	f7ff ffd8 	bl	8000d50 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000da0:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000da2:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000da4:	4638      	mov	r0, r7
 8000da6:	f7ff ffd3 	bl	8000d50 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000daa:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000dac:	4638      	mov	r0, r7
 8000dae:	f7ff ff75 	bl	8000c9c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000db2:	8aa1      	ldrh	r1, [r4, #20]
 8000db4:	8b62      	ldrh	r2, [r4, #26]
 8000db6:	4b44      	ldr	r3, [pc, #272]	@ (8000ec8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000db8:	1a52      	subs	r2, r2, r1
 8000dba:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dbc:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000dbe:	8b22      	ldrh	r2, [r4, #24]
 8000dc0:	1a52      	subs	r2, r2, r1
 8000dc2:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dc4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000dc6:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dc8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000dcc:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dce:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000dd0:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dd2:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000dd4:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8000dd6:	6820      	ldr	r0, [r4, #0]
 8000dd8:	2880      	cmp	r0, #128	@ 0x80
 8000dda:	d028      	beq.n	8000e2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000ddc:	7f22      	ldrb	r2, [r4, #28]
 8000dde:	d80f      	bhi.n	8000e00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8000de0:	2820      	cmp	r0, #32
 8000de2:	d067      	beq.n	8000eb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000de4:	2840      	cmp	r0, #64	@ 0x40
 8000de6:	d065      	beq.n	8000eb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000de8:	2804      	cmp	r0, #4
 8000dea:	d01a      	beq.n	8000e22 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dec:	4b36      	ldr	r3, [pc, #216]	@ (8000ec8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dee:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000df2:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000df6:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000df8:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000dfa:	d061      	beq.n	8000ec0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000dfc:	4a33      	ldr	r2, [pc, #204]	@ (8000ecc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000dfe:	e044      	b.n	8000e8a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8000e00:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8000e04:	d004      	beq.n	8000e10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8000e06:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8000e0a:	d1ef      	bne.n	8000dec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e0c:	4830      	ldr	r0, [pc, #192]	@ (8000ed0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000e0e:	e000      	b.n	8000e12 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e10:	4830      	ldr	r0, [pc, #192]	@ (8000ed4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e12:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8000e16:	61da      	str	r2, [r3, #28]
 8000e18:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000e1a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e1c:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e1e:	6159      	str	r1, [r3, #20]
 8000e20:	e032      	b.n	8000e88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e22:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000e26:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e2a:	61da      	str	r2, [r3, #28]
 8000e2c:	e7f6      	b.n	8000e1c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000e2e:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000e30:	1d02      	adds	r2, r0, #4
 8000e32:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e34:	7f22      	ldrb	r2, [r4, #28]
 8000e36:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e3a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8000e3e:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e40:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e42:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000e44:	7801      	ldrb	r1, [r0, #0]
 8000e46:	b141      	cbz	r1, 8000e5a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8000e48:	2901      	cmp	r1, #1
 8000e4a:	d021      	beq.n	8000e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8000e4c:	4b22      	ldr	r3, [pc, #136]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000e4e:	4a23      	ldr	r2, [pc, #140]	@ (8000edc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000e50:	4823      	ldr	r0, [pc, #140]	@ (8000ee0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000e52:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 8000e56:	f029 fb99 	bl	802a58c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e5a:	69da      	ldr	r2, [r3, #28]
 8000e5c:	8841      	ldrh	r1, [r0, #2]
 8000e5e:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000e62:	3901      	subs	r1, #1
 8000e64:	f022 0210 	bic.w	r2, r2, #16
 8000e68:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000e6c:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000e6e:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000e70:	4b15      	ldr	r3, [pc, #84]	@ (8000ec8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000e72:	69da      	ldr	r2, [r3, #28]
 8000e74:	f042 0220 	orr.w	r2, r2, #32
 8000e78:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000e7a:	69da      	ldr	r2, [r3, #28]
 8000e7c:	0692      	lsls	r2, r2, #26
 8000e7e:	d4fc      	bmi.n	8000e7a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000e80:	2210      	movs	r2, #16
 8000e82:	609a      	str	r2, [r3, #8]
            if (blend)
 8000e84:	2900      	cmp	r1, #0
 8000e86:	d0b9      	beq.n	8000dfc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e88:	4a16      	ldr	r2, [pc, #88]	@ (8000ee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e8a:	601a      	str	r2, [r3, #0]
}
 8000e8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8000e90:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e94:	69da      	ldr	r2, [r3, #28]
 8000e96:	8840      	ldrh	r0, [r0, #2]
 8000e98:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000e9c:	f100 30ff 	add.w	r0, r0, #4294967295
 8000ea0:	f022 0210 	bic.w	r2, r2, #16
 8000ea4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000ea8:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000eac:	bf18      	it	ne
 8000eae:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000eb0:	61da      	str	r2, [r3, #28]
                break;
 8000eb2:	e7dd      	b.n	8000e70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eb4:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000eb8:	4b03      	ldr	r3, [pc, #12]	@ (8000ec8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000eba:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8000ebe:	e7b4      	b.n	8000e2a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000ec0:	f242 3201 	movw	r2, #8961	@ 0x2301
 8000ec4:	e7e1      	b.n	8000e8a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000ec6:	bf00      	nop
 8000ec8:	4002b000 	.word	0x4002b000
 8000ecc:	00012301 	.word	0x00012301
 8000ed0:	00020009 	.word	0x00020009
 8000ed4:	0002000a 	.word	0x0002000a
 8000ed8:	0802ba7f 	.word	0x0802ba7f
 8000edc:	0802ba99 	.word	0x0802ba99
 8000ee0:	0802b9e0 	.word	0x0802b9e0
 8000ee4:	00022301 	.word	0x00022301

08000ee8 <DMA2D_XferCpltCallback>:
        return instance;
 8000ee8:	4b02      	ldr	r3, [pc, #8]	@ (8000ef4 <DMA2D_XferCpltCallback+0xc>)
 8000eea:	681b      	ldr	r3, [r3, #0]
 8000eec:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000eee:	6803      	ldr	r3, [r0, #0]
 8000ef0:	695b      	ldr	r3, [r3, #20]
 8000ef2:	4718      	bx	r3
 8000ef4:	20013f4c 	.word	0x20013f4c

08000ef8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000ef8:	b570      	push	{r4, r5, r6, lr}
 8000efa:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000efc:	4625      	mov	r5, r4
 8000efe:	4b0a      	ldr	r3, [pc, #40]	@ (8000f28 <_ZN8STM32DMAC1Ev+0x30>)
 8000f00:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000f02:	2600      	movs	r6, #0
 8000f04:	6060      	str	r0, [r4, #4]
 8000f06:	7226      	strb	r6, [r4, #8]
 8000f08:	7266      	strb	r6, [r4, #9]
 8000f0a:	f845 3b20 	str.w	r3, [r5], #32
 8000f0e:	2260      	movs	r2, #96	@ 0x60
 8000f10:	4629      	mov	r1, r5
 8000f12:	f010 fdb9 	bl	8011a88 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000f16:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8000f1a:	60ee      	str	r6, [r5, #12]
 8000f1c:	3524      	adds	r5, #36	@ 0x24
 8000f1e:	429d      	cmp	r5, r3
 8000f20:	d1fb      	bne.n	8000f1a <_ZN8STM32DMAC1Ev+0x22>
}
 8000f22:	4620      	mov	r0, r4
 8000f24:	bd70      	pop	{r4, r5, r6, pc}
 8000f26:	bf00      	nop
 8000f28:	0802cdf0 	.word	0x0802cdf0

08000f2c <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f2c:	4b03      	ldr	r3, [pc, #12]	@ (8000f3c <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000f2e:	681a      	ldr	r2, [r3, #0]
 8000f30:	07d2      	lsls	r2, r2, #31
 8000f32:	d4fc      	bmi.n	8000f2e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f34:	2223      	movs	r2, #35	@ 0x23
 8000f36:	609a      	str	r2, [r3, #8]
}
 8000f38:	4770      	bx	lr
 8000f3a:	bf00      	nop
 8000f3c:	4002b000 	.word	0x4002b000

08000f40 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8000f40:	4770      	bx	lr
	...

08000f44 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000f44:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f46:	4c0f      	ldr	r4, [pc, #60]	@ (8000f84 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000f48:	6825      	ldr	r5, [r4, #0]
 8000f4a:	07ed      	lsls	r5, r5, #31
 8000f4c:	d4fc      	bmi.n	8000f48 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f4e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f50:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f52:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f54:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f58:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000f5a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f5c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f5e:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000f60:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8000f62:	d00a      	beq.n	8000f7a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f64:	4908      	ldr	r1, [pc, #32]	@ (8000f88 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f66:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f68:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000f6c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000f6e:	4b07      	ldr	r3, [pc, #28]	@ (8000f8c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000f70:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000f72:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000f74:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f76:	6023      	str	r3, [r4, #0]
    }
}
 8000f78:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000f7a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000f7c:	9b03      	ldr	r3, [sp, #12]
 8000f7e:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f80:	4b03      	ldr	r3, [pc, #12]	@ (8000f90 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000f82:	e7f8      	b.n	8000f76 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000f84:	4002b000 	.word	0x4002b000
 8000f88:	00010009 	.word	0x00010009
 8000f8c:	00020001 	.word	0x00020001
 8000f90:	00030001 	.word	0x00030001

08000f94 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 8000f94:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f96:	4c0e      	ldr	r4, [pc, #56]	@ (8000fd0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8000f98:	6825      	ldr	r5, [r4, #0]
 8000f9a:	07ed      	lsls	r5, r5, #31
 8000f9c:	d4fc      	bmi.n	8000f98 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f9e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fa0:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fa2:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fa4:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fa8:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8000faa:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fac:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fae:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000fb0:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8000fb2:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 8000fb4:	d008      	beq.n	8000fc8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fb6:	061b      	lsls	r3, r3, #24
 8000fb8:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8000fbc:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8000fbe:	4b05      	ldr	r3, [pc, #20]	@ (8000fd4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fc0:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8000fc2:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fc4:	6023      	str	r3, [r4, #0]
    }
}
 8000fc6:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fc8:	4b03      	ldr	r3, [pc, #12]	@ (8000fd8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 8000fca:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fcc:	2301      	movs	r3, #1
 8000fce:	e7f9      	b.n	8000fc4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 8000fd0:	4002b000 	.word	0x4002b000
 8000fd4:	00020001 	.word	0x00020001
 8000fd8:	ff020002 	.word	0xff020002

08000fdc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fdc:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fde:	4c0b      	ldr	r4, [pc, #44]	@ (800100c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 8000fe0:	6825      	ldr	r5, [r4, #0]
 8000fe2:	07ed      	lsls	r5, r5, #31
 8000fe4:	d4fc      	bmi.n	8000fe0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fe6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fe8:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fea:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fec:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fee:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000ff2:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000ff4:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000ff8:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000ffa:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000ffc:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8000ffe:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001000:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001002:	4b03      	ldr	r3, [pc, #12]	@ (8001010 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001004:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8001006:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001008:	6023      	str	r3, [r4, #0]
}
 800100a:	bd30      	pop	{r4, r5, pc}
 800100c:	4002b000 	.word	0x4002b000
 8001010:	00020001 	.word	0x00020001

08001014 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001014:	2001      	movs	r0, #1
 8001016:	4770      	bx	lr

08001018 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001018:	2040      	movs	r0, #64	@ 0x40
 800101a:	4770      	bx	lr

0800101c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800101c:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8001020:	3008      	adds	r0, #8
 8001022:	4770      	bx	lr

08001024 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001024:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8001028:	3008      	adds	r0, #8
 800102a:	4770      	bx	lr

0800102c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13Screen5x5ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800102c:	2001      	movs	r0, #1
 800102e:	4770      	bx	lr

08001030 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Screen5x5ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001030:	f641 1024 	movw	r0, #6436	@ 0x1924
 8001034:	4770      	bx	lr

08001036 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Screen5x5ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001036:	f641 1324 	movw	r3, #6436	@ 0x1924
 800103a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800103e:	3008      	adds	r0, #8
 8001040:	4770      	bx	lr

08001042 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13Screen5x5ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001042:	f641 1324 	movw	r3, #6436	@ 0x1924
 8001046:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800104a:	3008      	adds	r0, #8
 800104c:	4770      	bx	lr

0800104e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI27SelectedGameDesignPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800104e:	2001      	movs	r0, #1
 8001050:	4770      	bx	lr

08001052 <_ZN8touchgfx9PartitionINS_4meta8TypeListI27SelectedGameDesignPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001052:	2010      	movs	r0, #16
 8001054:	4770      	bx	lr

08001056 <_ZN8touchgfx9PartitionINS_4meta8TypeListI27SelectedGameDesignPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001056:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800105a:	3008      	adds	r0, #8
 800105c:	4770      	bx	lr

0800105e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI27SelectedGameDesignPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800105e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001062:	3008      	adds	r0, #8
 8001064:	4770      	bx	lr

08001066 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoChosing_modeScreenNoTransition();
 8001066:	4608      	mov	r0, r1
 8001068:	f001 bff6 	b.w	8003058 <_ZN23FrontendApplicationBase34gotoChosing_modeScreenNoTransitionEv>

0800106c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800106c:	b510      	push	{r4, lr}
 800106e:	4b03      	ldr	r3, [pc, #12]	@ (800107c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001070:	6003      	str	r3, [r0, #0]
 8001072:	4604      	mov	r4, r0
 8001074:	f00f fb37 	bl	80106e6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001078:	4620      	mov	r0, r4
 800107a:	bd10      	pop	{r4, pc}
 800107c:	0802cea8 	.word	0x0802cea8

08001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001080:	b510      	push	{r4, lr}
 8001082:	4604      	mov	r4, r0
 8001084:	f7ff fff2 	bl	800106c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001088:	4620      	mov	r0, r4
 800108a:	2148      	movs	r1, #72	@ 0x48
 800108c:	f028 fb42 	bl	8029714 <_ZdlPvj>
 8001090:	4620      	mov	r0, r4
 8001092:	bd10      	pop	{r4, pc}

08001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Screen5x5ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001094:	b510      	push	{r4, lr}
 8001096:	4b03      	ldr	r3, [pc, #12]	@ (80010a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Screen5x5ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001098:	6003      	str	r3, [r0, #0]
 800109a:	4604      	mov	r4, r0
 800109c:	f00f fb23 	bl	80106e6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010a0:	4620      	mov	r0, r4
 80010a2:	bd10      	pop	{r4, pc}
 80010a4:	0802ce74 	.word	0x0802ce74

080010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Screen5x5ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010a8:	b510      	push	{r4, lr}
 80010aa:	4604      	mov	r4, r0
 80010ac:	f7ff fff2 	bl	8001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Screen5x5ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010b0:	4620      	mov	r0, r4
 80010b2:	f641 112c 	movw	r1, #6444	@ 0x192c
 80010b6:	f028 fb2d 	bl	8029714 <_ZdlPvj>
 80010ba:	4620      	mov	r0, r4
 80010bc:	bd10      	pop	{r4, pc}
	...

080010c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI27SelectedGameDesignPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80010c0:	b510      	push	{r4, lr}
 80010c2:	4b03      	ldr	r3, [pc, #12]	@ (80010d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI27SelectedGameDesignPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010c4:	6003      	str	r3, [r0, #0]
 80010c6:	4604      	mov	r4, r0
 80010c8:	f00f fb0d 	bl	80106e6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010cc:	4620      	mov	r0, r4
 80010ce:	bd10      	pop	{r4, pc}
 80010d0:	0802ce40 	.word	0x0802ce40

080010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI27SelectedGameDesignPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010d4:	b510      	push	{r4, lr}
 80010d6:	4604      	mov	r4, r0
 80010d8:	f7ff fff2 	bl	80010c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI27SelectedGameDesignPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010dc:	4620      	mov	r0, r4
 80010de:	2118      	movs	r1, #24
 80010e0:	f028 fb18 	bl	8029714 <_ZdlPvj>
 80010e4:	4620      	mov	r0, r4
 80010e6:	bd10      	pop	{r4, pc}

080010e8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80010e8:	b510      	push	{r4, lr}
 80010ea:	4b09      	ldr	r3, [pc, #36]	@ (8001110 <_ZN12FrontendHeapD1Ev+0x28>)
 80010ec:	6003      	str	r3, [r0, #0]
 80010ee:	4604      	mov	r4, r0
 80010f0:	f500 50ca 	add.w	r0, r0, #6464	@ 0x1940
 80010f4:	3018      	adds	r0, #24
 80010f6:	f7ff ffb9 	bl	800106c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80010fa:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 80010fe:	f7ff ffc9 	bl	8001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13Screen5x5ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001102:	f104 0014 	add.w	r0, r4, #20
 8001106:	f7ff ffdb 	bl	80010c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI27SelectedGameDesignPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800110a:	4620      	mov	r0, r4
 800110c:	bd10      	pop	{r4, pc}
 800110e:	bf00      	nop
 8001110:	0802cedc 	.word	0x0802cedc

08001114 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001114:	b508      	push	{r3, lr}
 8001116:	4802      	ldr	r0, [pc, #8]	@ (8001120 <__tcf_0+0xc>)
 8001118:	f7ff ffe6 	bl	80010e8 <_ZN12FrontendHeapD1Ev>
 800111c:	bd08      	pop	{r3, pc}
 800111e:	bf00      	nop
 8001120:	2000129c 	.word	0x2000129c

08001124 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001124:	b510      	push	{r4, lr}
 8001126:	4604      	mov	r4, r0
 8001128:	f7ff ffde 	bl	80010e8 <_ZN12FrontendHeapD1Ev>
 800112c:	4620      	mov	r0, r4
 800112e:	f44f 51d8 	mov.w	r1, #6912	@ 0x1b00
 8001132:	f028 faef 	bl	8029714 <_ZdlPvj>
 8001136:	4620      	mov	r0, r4
 8001138:	bd10      	pop	{r4, pc}
	...

0800113c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800113c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001140:	f001 faaa 	bl	8002698 <_ZN14BitmapDatabase11getInstanceEv>
 8001144:	4605      	mov	r5, r0
 8001146:	f001 faab 	bl	80026a0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800114a:	2400      	movs	r4, #0
 800114c:	4601      	mov	r1, r0
 800114e:	4623      	mov	r3, r4
 8001150:	4628      	mov	r0, r5
 8001152:	4622      	mov	r2, r4
 8001154:	9400      	str	r4, [sp, #0]
 8001156:	f019 fa2b 	bl	801a5b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800115a:	4b27      	ldr	r3, [pc, #156]	@ (80011f8 <touchgfx_init+0xbc>)
 800115c:	4a27      	ldr	r2, [pc, #156]	@ (80011fc <touchgfx_init+0xc0>)
 800115e:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001160:	4620      	mov	r0, r4
 8001162:	f006 f85f 	bl	8007224 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 8001166:	4d26      	ldr	r5, [pc, #152]	@ (8001200 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8001168:	4b26      	ldr	r3, [pc, #152]	@ (8001204 <touchgfx_init+0xc8>)
 800116a:	4a27      	ldr	r2, [pc, #156]	@ (8001208 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 800116c:	4827      	ldr	r0, [pc, #156]	@ (800120c <touchgfx_init+0xd0>)
 800116e:	609a      	str	r2, [r3, #8]
 8001170:	f019 f986 	bl	801a480 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001174:	682b      	ldr	r3, [r5, #0]
 8001176:	f3bf 8f5b 	dmb	ish
 800117a:	07db      	lsls	r3, r3, #31
 800117c:	d436      	bmi.n	80011ec <touchgfx_init+0xb0>
 800117e:	4628      	mov	r0, r5
 8001180:	f028 faca 	bl	8029718 <__cxa_guard_acquire>
 8001184:	b390      	cbz	r0, 80011ec <touchgfx_init+0xb0>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001186:	4c22      	ldr	r4, [pc, #136]	@ (8001210 <touchgfx_init+0xd4>)
          screenStorage(scr),
          transitionStorage(tra),
 8001188:	4f22      	ldr	r7, [pc, #136]	@ (8001214 <touchgfx_init+0xd8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800118a:	4b23      	ldr	r3, [pc, #140]	@ (8001218 <touchgfx_init+0xdc>)
 800118c:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 800118e:	f107 064c 	add.w	r6, r7, #76	@ 0x4c
        : presenterStorage(pres),
 8001192:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8001196:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
        : presenterStorage(pres),
 800119a:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 800119c:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80011a0:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80011a2:	6126      	str	r6, [r4, #16]
 80011a4:	f00f faa0 	bl	80106e8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011a8:	4b1c      	ldr	r3, [pc, #112]	@ (800121c <touchgfx_init+0xe0>)
 80011aa:	6163      	str	r3, [r4, #20]
 80011ac:	4640      	mov	r0, r8
 80011ae:	f00f fa9b 	bl	80106e8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011b2:	4b1b      	ldr	r3, [pc, #108]	@ (8001220 <touchgfx_init+0xe4>)
 80011b4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80011b6:	4638      	mov	r0, r7
 80011b8:	f00f fa96 	bl	80106e8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011bc:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 80011c0:	4a18      	ldr	r2, [pc, #96]	@ (8001224 <touchgfx_init+0xe8>)
 80011c2:	f8c3 2958 	str.w	r2, [r3, #2392]	@ 0x958
 80011c6:	f504 50cd 	add.w	r0, r4, #6560	@ 0x19a0
 80011ca:	f007 fb9f 	bl	800890c <_ZN5ModelC1Ev>
 80011ce:	4622      	mov	r2, r4
 80011d0:	f504 51cd 	add.w	r1, r4, #6560	@ 0x19a0
 80011d4:	4630      	mov	r0, r6
 80011d6:	f006 fe13 	bl	8007e00 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80011da:	4630      	mov	r0, r6
 80011dc:	f001 ff3c 	bl	8003058 <_ZN23FrontendApplicationBase34gotoChosing_modeScreenNoTransitionEv>
        static FrontendHeap instance;
 80011e0:	4811      	ldr	r0, [pc, #68]	@ (8001228 <touchgfx_init+0xec>)
 80011e2:	f029 f9f1 	bl	802a5c8 <atexit>
 80011e6:	4628      	mov	r0, r5
 80011e8:	f028 faa2 	bl	8029730 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80011ec:	480f      	ldr	r0, [pc, #60]	@ (800122c <touchgfx_init+0xf0>)
}
 80011ee:	b002      	add	sp, #8
 80011f0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80011f4:	f7ff bbe6 	b.w	80009c4 <_ZN11TouchGFXHAL10initializeEv>
 80011f8:	20013fb0 	.word	0x20013fb0
 80011fc:	20000448 	.word	0x20000448
 8001200:	20001298 	.word	0x20001298
 8001204:	20000468 	.word	0x20000468
 8001208:	2000044c 	.word	0x2000044c
 800120c:	20000008 	.word	0x20000008
 8001210:	2000129c 	.word	0x2000129c
 8001214:	20002bf4 	.word	0x20002bf4
 8001218:	0802cedc 	.word	0x0802cedc
 800121c:	0802ce40 	.word	0x0802ce40
 8001220:	0802ce74 	.word	0x0802ce74
 8001224:	0802cea8 	.word	0x0802cea8
 8001228:	08001115 	.word	0x08001115
 800122c:	200003c4 	.word	0x200003c4

08001230 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001230:	4770      	bx	lr
	...

08001234 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001234:	4801      	ldr	r0, [pc, #4]	@ (800123c <touchgfx_taskEntry+0x8>)
 8001236:	f7ff bbd3 	b.w	80009e0 <_ZN11TouchGFXHAL9taskEntryEv>
 800123a:	bf00      	nop
 800123c:	200003c4 	.word	0x200003c4

08001240 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001240:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001242:	4e26      	ldr	r6, [pc, #152]	@ (80012dc <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8001244:	4c26      	ldr	r4, [pc, #152]	@ (80012e0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 8001246:	4d27      	ldr	r5, [pc, #156]	@ (80012e4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8001248:	4b27      	ldr	r3, [pc, #156]	@ (80012e8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800124a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 800124c:	4630      	mov	r0, r6
 800124e:	f7ff fe53 	bl	8000ef8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001252:	4628      	mov	r0, r5
 8001254:	f01e fab2 	bl	801f7bc <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 8001258:	4824      	ldr	r0, [pc, #144]	@ (80012ec <_GLOBAL__sub_I_touchgfx_init+0xac>)
 800125a:	f016 fe79 	bl	8017f50 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 800125e:	4b24      	ldr	r3, [pc, #144]	@ (80012f0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 8001260:	4824      	ldr	r0, [pc, #144]	@ (80012f4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 8001262:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001264:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001266:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 800126a:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 800126e:	4922      	ldr	r1, [pc, #136]	@ (80012f8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001270:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8001272:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 8001276:	4921      	ldr	r1, [pc, #132]	@ (80012fc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 8001278:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 800127c:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 8001280:	491f      	ldr	r1, [pc, #124]	@ (8001300 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001282:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 8001286:	491f      	ldr	r1, [pc, #124]	@ (8001304 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001288:	481f      	ldr	r0, [pc, #124]	@ (8001308 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 800128a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800128c:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 800128e:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001292:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001296:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800129a:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 800129e:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 80012a2:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80012a6:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 80012aa:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 80012ae:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 80012b0:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 80012b4:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 80012b6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012ba:	8001      	strh	r1, [r0, #0]
 80012bc:	4813      	ldr	r0, [pc, #76]	@ (800130c <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 80012be:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80012c0:	4813      	ldr	r0, [pc, #76]	@ (8001310 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 80012c2:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80012c6:	8001      	strh	r1, [r0, #0]
 80012c8:	4812      	ldr	r0, [pc, #72]	@ (8001314 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 80012ca:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80012cc:	4912      	ldr	r1, [pc, #72]	@ (8001318 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 80012ce:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80012d0:	2201      	movs	r2, #1
 80012d2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80012d6:	4a11      	ldr	r2, [pc, #68]	@ (800131c <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80012d8:	601a      	str	r2, [r3, #0]
}
 80012da:	bd70      	pop	{r4, r5, r6, pc}
 80012dc:	200004f4 	.word	0x200004f4
 80012e0:	20001294 	.word	0x20001294
 80012e4:	20000468 	.word	0x20000468
 80012e8:	0802b6e8 	.word	0x0802b6e8
 80012ec:	2000044c 	.word	0x2000044c
 80012f0:	200003c4 	.word	0x200003c4
 80012f4:	01010000 	.word	0x01010000
 80012f8:	01000001 	.word	0x01000001
 80012fc:	00500400 	.word	0x00500400
 8001300:	0014001a 	.word	0x0014001a
 8001304:	20013f4c 	.word	0x20013f4c
 8001308:	20013f40 	.word	0x20013f40
 800130c:	20013f46 	.word	0x20013f46
 8001310:	20013f42 	.word	0x20013f42
 8001314:	20013f48 	.word	0x20013f48
 8001318:	20013f44 	.word	0x20013f44
 800131c:	0802cd04 	.word	0x0802cd04

08001320 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001320:	4801      	ldr	r0, [pc, #4]	@ (8001328 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001322:	f7ff bc75 	b.w	8000c10 <_ZN8STM32DMAD1Ev>
 8001326:	bf00      	nop
 8001328:	200004f4 	.word	0x200004f4

0800132c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800132c:	2000      	movs	r0, #0
 800132e:	4770      	bx	lr

08001330 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001330:	8081      	strh	r1, [r0, #4]
    }
 8001332:	4770      	bx	lr

08001334 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001334:	80c1      	strh	r1, [r0, #6]
    }
 8001336:	4770      	bx	lr

08001338 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001338:	8101      	strh	r1, [r0, #8]
    }
 800133a:	4770      	bx	lr

0800133c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800133c:	8141      	strh	r1, [r0, #10]
    }
 800133e:	4770      	bx	lr

08001340 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001340:	4770      	bx	lr

08001342 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001342:	4770      	bx	lr

08001344 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001344:	4770      	bx	lr

08001346 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001346:	4770      	bx	lr

08001348 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001348:	4770      	bx	lr

0800134a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800134a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800134c:	88c4      	ldrh	r4, [r0, #6]
 800134e:	6803      	ldr	r3, [r0, #0]
 8001350:	1b12      	subs	r2, r2, r4
 8001352:	8884      	ldrh	r4, [r0, #4]
 8001354:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001356:	1b09      	subs	r1, r1, r4
 8001358:	b212      	sxth	r2, r2
    }
 800135a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800135e:	b209      	sxth	r1, r1
 8001360:	4718      	bx	r3

08001362 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001362:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001366:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001368:	f04f 33ff 	mov.w	r3, #4294967295
 800136c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800136e:	6813      	ldr	r3, [r2, #0]
 8001370:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001372:	6010      	str	r0, [r2, #0]
    }
 8001374:	4770      	bx	lr

08001376 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001376:	2000      	movs	r0, #0
 8001378:	4770      	bx	lr

0800137a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800137a:	888b      	ldrh	r3, [r1, #4]
 800137c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800137e:	2001      	movs	r0, #1
 8001380:	4770      	bx	lr

08001382 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001382:	4770      	bx	lr

08001384 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001384:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 8001388:	4770      	bx	lr

0800138a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800138a:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 800138e:	4770      	bx	lr

08001390 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001390:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001392:	2200      	movs	r2, #0
        return rect.width;
 8001394:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8001398:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800139c:	8002      	strh	r2, [r0, #0]
 800139e:	8042      	strh	r2, [r0, #2]
 80013a0:	8084      	strh	r4, [r0, #4]
 80013a2:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80013a4:	bd10      	pop	{r4, pc}

080013a6 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80013a6:	2200      	movs	r2, #0
 80013a8:	8002      	strh	r2, [r0, #0]
 80013aa:	8042      	strh	r2, [r0, #2]
 80013ac:	8082      	strh	r2, [r0, #4]
 80013ae:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80013b0:	4770      	bx	lr

080013b2 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 80013b2:	7701      	strb	r1, [r0, #28]
    }
 80013b4:	4770      	bx	lr

080013b6 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 80013b6:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 80013ba:	4770      	bx	lr

080013bc <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 80013bc:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 80013c0:	4770      	bx	lr

080013c2 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 80013c2:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 80013c6:	4770      	bx	lr

080013c8 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 80013c8:	2001      	movs	r0, #1
 80013ca:	4770      	bx	lr

080013cc <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 80013cc:	3098      	adds	r0, #152	@ 0x98
 80013ce:	4770      	bx	lr

080013d0 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 80013d0:	308c      	adds	r0, #140	@ 0x8c
 80013d2:	4770      	bx	lr

080013d4 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 80013d4:	3084      	adds	r0, #132	@ 0x84
 80013d6:	4770      	bx	lr

080013d8 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 80013d8:	4770      	bx	lr

080013da <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80013da:	4770      	bx	lr

080013dc <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80013dc:	4770      	bx	lr
	...

080013e0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013e0:	4b03      	ldr	r3, [pc, #12]	@ (80013f0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80013e2:	2290      	movs	r2, #144	@ 0x90
 80013e4:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 80013e8:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80013ec:	4770      	bx	lr
 80013ee:	bf00      	nop
 80013f0:	e000e100 	.word	0xe000e100

080013f4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 80013f4:	4a09      	ldr	r2, [pc, #36]	@ (800141c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80013f6:	490a      	ldr	r1, [pc, #40]	@ (8001420 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80013f8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 80013fa:	480a      	ldr	r0, [pc, #40]	@ (8001424 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 80013fc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001400:	3b01      	subs	r3, #1
 8001402:	b29b      	uxth	r3, r3
 8001404:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001406:	6911      	ldr	r1, [r2, #16]
 8001408:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800140c:	3901      	subs	r1, #1
 800140e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001410:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001412:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001414:	f043 0301 	orr.w	r3, r3, #1
 8001418:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800141a:	4770      	bx	lr
 800141c:	40016800 	.word	0x40016800
 8001420:	20002d9e 	.word	0x20002d9e
 8001424:	20002d9c 	.word	0x20002d9c

08001428 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001428:	4b01      	ldr	r3, [pc, #4]	@ (8001430 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800142a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 800142e:	4770      	bx	lr
 8001430:	40016800 	.word	0x40016800

08001434 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001434:	4b02      	ldr	r3, [pc, #8]	@ (8001440 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001436:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001438:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800143c:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800143e:	4770      	bx	lr
 8001440:	40016800 	.word	0x40016800

08001444 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001444:	b510      	push	{r4, lr}
 8001446:	212c      	movs	r1, #44	@ 0x2c
 8001448:	4604      	mov	r4, r0
 800144a:	f028 f963 	bl	8029714 <_ZdlPvj>
 800144e:	4620      	mov	r0, r4
 8001450:	bd10      	pop	{r4, pc}

08001452 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001452:	b510      	push	{r4, lr}
 8001454:	21bc      	movs	r1, #188	@ 0xbc
 8001456:	4604      	mov	r4, r0
 8001458:	f028 f95c 	bl	8029714 <_ZdlPvj>
 800145c:	4620      	mov	r0, r4
 800145e:	bd10      	pop	{r4, pc}

08001460 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001460:	b570      	push	{r4, r5, r6, lr}
 8001462:	4604      	mov	r4, r0
    HAL::initialize();
 8001464:	f00f fc3d 	bl	8010ce2 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001468:	6823      	ldr	r3, [r4, #0]
 800146a:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 800146c:	f015 fa96 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
 8001470:	4601      	mov	r1, r0
 8001472:	4620      	mov	r0, r4
 8001474:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001476:	6823      	ldr	r3, [r4, #0]
 8001478:	4a05      	ldr	r2, [pc, #20]	@ (8001490 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800147a:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 800147e:	4620      	mov	r0, r4
 8001480:	46ac      	mov	ip, r5
 8001482:	2300      	movs	r3, #0
}
 8001484:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001488:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 800148c:	4760      	bx	ip
 800148e:	bf00      	nop
 8001490:	d004b000 	.word	0xd004b000

08001494 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001494:	f00f bc0c 	b.w	8010cb0 <_ZN8touchgfx3HAL10beginFrameEv>

08001498 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001498:	f00f bc16 	b.w	8010cc8 <_ZN8touchgfx3HAL8endFrameEv>

0800149c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800149c:	f00f bbd2 	b.w	8010c44 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080014a0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80014a0:	f00f bd41 	b.w	8010f26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080014a4 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80014a4:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014a8:	b112      	cbz	r2, 80014b0 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80014aa:	6803      	ldr	r3, [r0, #0]
 80014ac:	695b      	ldr	r3, [r3, #20]
 80014ae:	4718      	bx	r3
    }
 80014b0:	4770      	bx	lr

080014b2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80014b2:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014b6:	b11a      	cbz	r2, 80014c0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80014b8:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80014bc:	b102      	cbz	r2, 80014c0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80014be:	6018      	str	r0, [r3, #0]
        }
    }
 80014c0:	4770      	bx	lr
	...

080014c4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014c4:	4b03      	ldr	r3, [pc, #12]	@ (80014d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80014c6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014ca:	609a      	str	r2, [r3, #8]
 80014cc:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014d0:	609a      	str	r2, [r3, #8]
}
 80014d2:	4770      	bx	lr
 80014d4:	e000e100 	.word	0xe000e100

080014d8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014d8:	4b08      	ldr	r3, [pc, #32]	@ (80014fc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80014da:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014de:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014e2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014e6:	f3bf 8f6f 	isb	sy
 80014ea:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014ee:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014f6:	f3bf 8f6f 	isb	sy
}
 80014fa:	4770      	bx	lr
 80014fc:	e000e100 	.word	0xe000e100

08001500 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001500:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001502:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001504:	4e12      	ldr	r6, [pc, #72]	@ (8001550 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001506:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001508:	4b12      	ldr	r3, [pc, #72]	@ (8001554 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800150a:	6003      	str	r3, [r0, #0]
 800150c:	6833      	ldr	r3, [r6, #0]
 800150e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 8001512:	4605      	mov	r5, r0
 8001514:	b10a      	cbz	r2, 800151a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001516:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001518:	b900      	cbnz	r0, 800151c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800151a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800151c:	6803      	ldr	r3, [r0, #0]
 800151e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001520:	4798      	blx	r3
        return auxiliaryLCD;
 8001522:	6833      	ldr	r3, [r6, #0]
 8001524:	fab0 f480 	clz	r4, r0
 8001528:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800152a:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 800152c:	b130      	cbz	r0, 800153c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800152e:	6803      	ldr	r3, [r0, #0]
 8001530:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001532:	4798      	blx	r3
 8001534:	2800      	cmp	r0, #0
 8001536:	bf08      	it	eq
 8001538:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 800153c:	b92c      	cbnz	r4, 800154a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800153e:	4b06      	ldr	r3, [pc, #24]	@ (8001558 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001540:	4a06      	ldr	r2, [pc, #24]	@ (800155c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001542:	4807      	ldr	r0, [pc, #28]	@ (8001560 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001544:	212c      	movs	r1, #44	@ 0x2c
 8001546:	f029 f821 	bl	802a58c <__assert_func>
    }
 800154a:	4628      	mov	r0, r5
 800154c:	bd70      	pop	{r4, r5, r6, pc}
 800154e:	bf00      	nop
 8001550:	20013f4c 	.word	0x20013f4c
 8001554:	0802cef0 	.word	0x0802cef0
 8001558:	0802bad7 	.word	0x0802bad7
 800155c:	0802bb35 	.word	0x0802bb35
 8001560:	0802bb6e 	.word	0x0802bb6e

08001564 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001564:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 8001566:	4e25      	ldr	r6, [pc, #148]	@ (80015fc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001568:	6835      	ldr	r5, [r6, #0]
 800156a:	f3bf 8f5b 	dmb	ish
 800156e:	f015 0501 	ands.w	r5, r5, #1
 8001572:	d140      	bne.n	80015f6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8001574:	4630      	mov	r0, r6
 8001576:	f028 f8cf 	bl	8029718 <__cxa_guard_acquire>
 800157a:	2800      	cmp	r0, #0
 800157c:	d03b      	beq.n	80015f6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 800157e:	4c20      	ldr	r4, [pc, #128]	@ (8001600 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001580:	4b20      	ldr	r3, [pc, #128]	@ (8001604 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8001582:	6125      	str	r5, [r4, #16]
 8001584:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8001588:	e9c4 3500 	strd	r3, r5, [r4]
 800158c:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8001590:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8001592:	62a5      	str	r5, [r4, #40]	@ 0x28
 8001594:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 8001596:	f016 ffc0 	bl	801851a <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 800159a:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800159e:	f011 ff27 	bl	80133f0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80015a2:	4b19      	ldr	r3, [pc, #100]	@ (8001608 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 80015a4:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80015a6:	4620      	mov	r0, r4
 80015a8:	4b18      	ldr	r3, [pc, #96]	@ (800160c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 80015aa:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80015ae:	f7ff ffa7 	bl	8001500 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80015b2:	4b17      	ldr	r3, [pc, #92]	@ (8001610 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 80015b4:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 80015b8:	3324      	adds	r3, #36	@ 0x24
 80015ba:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 80015be:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 80015c2:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 80015c6:	2300      	movs	r3, #0
 80015c8:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 80015cc:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 80015d0:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 80015d4:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 80015d8:	480e      	ldr	r0, [pc, #56]	@ (8001614 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 80015da:	4b0f      	ldr	r3, [pc, #60]	@ (8001618 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80015dc:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 80015e0:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80015e4:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80015e8:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80015ec:	f028 ffec 	bl	802a5c8 <atexit>
 80015f0:	4630      	mov	r0, r6
 80015f2:	f028 f89d 	bl	8029730 <__cxa_guard_release>
}
 80015f6:	4802      	ldr	r0, [pc, #8]	@ (8001600 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 80015f8:	bd70      	pop	{r4, r5, r6, pc}
 80015fa:	bf00      	nop
 80015fc:	20002da0 	.word	0x20002da0
 8001600:	20002da4 	.word	0x20002da4
 8001604:	0802e290 	.word	0x0802e290
 8001608:	0802cf10 	.word	0x0802cf10
 800160c:	0802cf88 	.word	0x0802cf88
 8001610:	0802e244 	.word	0x0802e244
 8001614:	080013dd 	.word	0x080013dd
 8001618:	0802e224 	.word	0x0802e224

0800161c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800161c:	b538      	push	{r3, r4, r5, lr}
        return instance;
 800161e:	4c18      	ldr	r4, [pc, #96]	@ (8001680 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 8001620:	6823      	ldr	r3, [r4, #0]
 8001622:	b35b      	cbz	r3, 800167c <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001624:	4b17      	ldr	r3, [pc, #92]	@ (8001684 <HAL_LTDC_LineEventCallback+0x68>)
 8001626:	4a18      	ldr	r2, [pc, #96]	@ (8001688 <HAL_LTDC_LineEventCallback+0x6c>)
 8001628:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800162a:	8811      	ldrh	r1, [r2, #0]
 800162c:	428b      	cmp	r3, r1
 800162e:	d116      	bne.n	800165e <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001630:	4b16      	ldr	r3, [pc, #88]	@ (800168c <HAL_LTDC_LineEventCallback+0x70>)
 8001632:	8819      	ldrh	r1, [r3, #0]
 8001634:	f00b fd86 	bl	800d144 <HAL_LTDC_ProgramLineEvent>
 8001638:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 800163a:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 800163e:	2500      	movs	r5, #0
        vSyncCnt++;
 8001640:	3201      	adds	r2, #1
 8001642:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001646:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800164a:	f7ff fab5 	bl	8000bb8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800164e:	6820      	ldr	r0, [r4, #0]
 8001650:	f010 f8c4 	bl	80117dc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001654:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001656:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800165a:	f7ff b8f5 	b.w	8000848 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800165e:	f00b fd71 	bl	800d144 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001662:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8001664:	6823      	ldr	r3, [r4, #0]
 8001666:	4620      	mov	r0, r4
 8001668:	6a1b      	ldr	r3, [r3, #32]
 800166a:	4798      	blx	r3
        isFrontPorchEntered = true;
 800166c:	2301      	movs	r3, #1
 800166e:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001672:	2000      	movs	r0, #0
    }
 8001674:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001678:	f7ff b910 	b.w	800089c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800167c:	bd38      	pop	{r3, r4, r5, pc}
 800167e:	bf00      	nop
 8001680:	20013f4c 	.word	0x20013f4c
 8001684:	40016800 	.word	0x40016800
 8001688:	20002d9e 	.word	0x20002d9e
 800168c:	20002d9c 	.word	0x20002d9c

08001690 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001690:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001692:	4b06      	ldr	r3, [pc, #24]	@ (80016ac <SPI5_Write+0x1c>)
{
 8001694:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001698:	681b      	ldr	r3, [r3, #0]
 800169a:	4805      	ldr	r0, [pc, #20]	@ (80016b0 <SPI5_Write+0x20>)
 800169c:	2201      	movs	r2, #1
 800169e:	f10d 0106 	add.w	r1, sp, #6
 80016a2:	f00c faef 	bl	800dc84 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 80016a6:	b003      	add	sp, #12
 80016a8:	f85d fb04 	ldr.w	pc, [sp], #4
 80016ac:	2000000c 	.word	0x2000000c
 80016b0:	20002ea4 	.word	0x20002ea4

080016b4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80016b4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 80016b6:	2064      	movs	r0, #100	@ 0x64
 80016b8:	f00c ffa4 	bl	800e604 <osDelay>
  for(;;)
 80016bc:	e7fb      	b.n	80016b6 <StartDefaultTask+0x2>
	...

080016c0 <SystemClock_Config>:
{
 80016c0:	b530      	push	{r4, r5, lr}
 80016c2:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80016c4:	2210      	movs	r2, #16
 80016c6:	2100      	movs	r1, #0
 80016c8:	a80a      	add	r0, sp, #40	@ 0x28
 80016ca:	f029 f966 	bl	802a99a <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80016ce:	2214      	movs	r2, #20
 80016d0:	2100      	movs	r1, #0
 80016d2:	a803      	add	r0, sp, #12
 80016d4:	f029 f961 	bl	802a99a <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80016d8:	2400      	movs	r4, #0
 80016da:	4b1e      	ldr	r3, [pc, #120]	@ (8001754 <SystemClock_Config+0x94>)
 80016dc:	9401      	str	r4, [sp, #4]
 80016de:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80016e0:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80016e4:	641a      	str	r2, [r3, #64]	@ 0x40
 80016e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80016e8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80016ec:	9301      	str	r3, [sp, #4]
 80016ee:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80016f0:	4b19      	ldr	r3, [pc, #100]	@ (8001758 <SystemClock_Config+0x98>)
 80016f2:	9402      	str	r4, [sp, #8]
 80016f4:	681a      	ldr	r2, [r3, #0]
 80016f6:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 80016fa:	601a      	str	r2, [r3, #0]
 80016fc:	681b      	ldr	r3, [r3, #0]
 80016fe:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001702:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001704:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001706:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001708:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800170c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001710:	2502      	movs	r5, #2
 8001712:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001716:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001718:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 360;
 800171c:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 8001720:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001724:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001726:	2304      	movs	r3, #4
 8001728:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800172a:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800172c:	f00b fd62 	bl	800d1f4 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001730:	f00b fd26 	bl	800d180 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001734:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001736:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800173a:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 800173e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001742:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001746:	2105      	movs	r1, #5
 8001748:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800174a:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800174c:	f00b ff2e 	bl	800d5ac <HAL_RCC_ClockConfig>
}
 8001750:	b015      	add	sp, #84	@ 0x54
 8001752:	bd30      	pop	{r4, r5, pc}
 8001754:	40023800 	.word	0x40023800
 8001758:	40007000 	.word	0x40007000

0800175c <main>:
{
 800175c:	b580      	push	{r7, lr}
 800175e:	b09a      	sub	sp, #104	@ 0x68
  HAL_Init();
 8001760:	f00a fc62 	bl	800c028 <HAL_Init>
  SystemClock_Config();
 8001764:	f7ff ffac 	bl	80016c0 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001768:	2214      	movs	r2, #20
 800176a:	2100      	movs	r1, #0
 800176c:	a80d      	add	r0, sp, #52	@ 0x34
 800176e:	f029 f914 	bl	802a99a <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001772:	2400      	movs	r4, #0
 8001774:	4bc8      	ldr	r3, [pc, #800]	@ (8001a98 <main+0x33c>)
 8001776:	9400      	str	r4, [sp, #0]
 8001778:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800177a:	48c8      	ldr	r0, [pc, #800]	@ (8001a9c <main+0x340>)
  hi2c3.Instance = I2C3;
 800177c:	4dc8      	ldr	r5, [pc, #800]	@ (8001aa0 <main+0x344>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800177e:	f8df 835c 	ldr.w	r8, [pc, #860]	@ 8001adc <main+0x380>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001782:	f042 0210 	orr.w	r2, r2, #16
 8001786:	631a      	str	r2, [r3, #48]	@ 0x30
 8001788:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800178a:	f002 0210 	and.w	r2, r2, #16
 800178e:	9200      	str	r2, [sp, #0]
 8001790:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001792:	9401      	str	r4, [sp, #4]
 8001794:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001796:	f042 0220 	orr.w	r2, r2, #32
 800179a:	631a      	str	r2, [r3, #48]	@ 0x30
 800179c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800179e:	f002 0220 	and.w	r2, r2, #32
 80017a2:	9201      	str	r2, [sp, #4]
 80017a4:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80017a6:	9402      	str	r4, [sp, #8]
 80017a8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80017aa:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80017ae:	631a      	str	r2, [r3, #48]	@ 0x30
 80017b0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80017b2:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 80017b6:	9202      	str	r2, [sp, #8]
 80017b8:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80017ba:	9403      	str	r4, [sp, #12]
 80017bc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80017be:	f042 0204 	orr.w	r2, r2, #4
 80017c2:	631a      	str	r2, [r3, #48]	@ 0x30
 80017c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80017c6:	f002 0204 	and.w	r2, r2, #4
 80017ca:	9203      	str	r2, [sp, #12]
 80017cc:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80017ce:	9404      	str	r4, [sp, #16]
 80017d0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80017d2:	f042 0201 	orr.w	r2, r2, #1
 80017d6:	631a      	str	r2, [r3, #48]	@ 0x30
 80017d8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80017da:	f002 0201 	and.w	r2, r2, #1
 80017de:	9204      	str	r2, [sp, #16]
 80017e0:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80017e2:	9405      	str	r4, [sp, #20]
 80017e4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80017e6:	f042 0202 	orr.w	r2, r2, #2
 80017ea:	631a      	str	r2, [r3, #48]	@ 0x30
 80017ec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80017ee:	f002 0202 	and.w	r2, r2, #2
 80017f2:	9205      	str	r2, [sp, #20]
 80017f4:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80017f6:	9406      	str	r4, [sp, #24]
 80017f8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80017fa:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80017fe:	631a      	str	r2, [r3, #48]	@ 0x30
 8001800:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001802:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001806:	9206      	str	r2, [sp, #24]
 8001808:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800180a:	9407      	str	r4, [sp, #28]
 800180c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800180e:	f042 0208 	orr.w	r2, r2, #8
 8001812:	631a      	str	r2, [r3, #48]	@ 0x30
 8001814:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001816:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800181a:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800181c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800181e:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001820:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001822:	f00a fe87 	bl	800c534 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001826:	489f      	ldr	r0, [pc, #636]	@ (8001aa4 <main+0x348>)
 8001828:	2201      	movs	r2, #1
 800182a:	2102      	movs	r1, #2
 800182c:	f00a fe82 	bl	800c534 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001830:	4622      	mov	r2, r4
 8001832:	489c      	ldr	r0, [pc, #624]	@ (8001aa4 <main+0x348>)
 8001834:	2104      	movs	r1, #4
 8001836:	f00a fe7d 	bl	800c534 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800183a:	4622      	mov	r2, r4
 800183c:	489a      	ldr	r0, [pc, #616]	@ (8001aa8 <main+0x34c>)
 800183e:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8001842:	f00a fe77 	bl	800c534 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001846:	2601      	movs	r6, #1
 8001848:	233c      	movs	r3, #60	@ 0x3c
 800184a:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800184e:	4893      	ldr	r0, [pc, #588]	@ (8001a9c <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001850:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001852:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001854:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 8001856:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001858:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800185a:	f00a fd81 	bl	800c360 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 800185e:	4891      	ldr	r0, [pc, #580]	@ (8001aa4 <main+0x348>)
 8001860:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001862:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001866:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 800186a:	f00a fd79 	bl	800c360 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800186e:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001870:	488c      	ldr	r0, [pc, #560]	@ (8001aa4 <main+0x348>)
 8001872:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001874:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001878:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800187c:	f00a fd70 	bl	800c360 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0 | GPIO_PIN_6 | GPIO_PIN_2;
 8001880:	2345      	movs	r3, #69	@ 0x45
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001882:	488a      	ldr	r0, [pc, #552]	@ (8001aac <main+0x350>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001884:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001886:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001888:	e9cd 340d 	strd	r3, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800188c:	f00a fd68 	bl	800c360 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_10 | GPIO_PIN_12;
 8001890:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001894:	4886      	ldr	r0, [pc, #536]	@ (8001ab0 <main+0x354>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001896:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001898:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800189a:	e9cd 340d 	strd	r3, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800189e:	f00a fd5f 	bl	800c360 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80018a2:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80018a4:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80018a8:	487f      	ldr	r0, [pc, #508]	@ (8001aa8 <main+0x34c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80018aa:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80018ae:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80018b2:	f00a fd55 	bl	800c360 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80018b6:	487f      	ldr	r0, [pc, #508]	@ (8001ab4 <main+0x358>)
 80018b8:	4b7f      	ldr	r3, [pc, #508]	@ (8001ab8 <main+0x35c>)
 80018ba:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80018bc:	f00a fc46 	bl	800c14c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80018c0:	f8df e21c 	ldr.w	lr, [pc, #540]	@ 8001ae0 <main+0x384>
 80018c4:	4b7d      	ldr	r3, [pc, #500]	@ (8001abc <main+0x360>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80018c6:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80018c8:	e9c5 e300 	strd	lr, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80018cc:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80018ce:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80018d2:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80018d6:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80018da:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80018de:	f00b f837 	bl	800c950 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80018e2:	2110      	movs	r1, #16
 80018e4:	4628      	mov	r0, r5
 80018e6:	f00b fa7b 	bl	800cde0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80018ea:	4621      	mov	r1, r4
 80018ec:	4628      	mov	r0, r5
  hspi5.Instance = SPI5;
 80018ee:	4d74      	ldr	r5, [pc, #464]	@ (8001ac0 <main+0x364>)
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80018f0:	f00b fa95 	bl	800ce1e <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80018f4:	f44f 7382 	mov.w	r3, #260	@ 0x104
 80018f8:	e9c5 8300 	strd	r8, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80018fc:	f44f 7900 	mov.w	r9, #512	@ 0x200
 8001900:	2318      	movs	r3, #24
 8001902:	e9c5 9306 	strd	r9, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001906:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 8001908:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800190a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800190e:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001912:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001916:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.CRCPolynomial = 10;
 8001918:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800191a:	f00c f957 	bl	800dbcc <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 800191e:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001920:	4622      	mov	r2, r4
 8001922:	4639      	mov	r1, r7
 8001924:	485f      	ldr	r0, [pc, #380]	@ (8001aa4 <main+0x348>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001926:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 800192a:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 800192e:	f00a fe01 	bl	800c534 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 8001932:	4632      	mov	r2, r6
 8001934:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001938:	a909      	add	r1, sp, #36	@ 0x24
 800193a:	4628      	mov	r0, r5
 800193c:	f00c f9a2 	bl	800dc84 <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 8001940:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001944:	4632      	mov	r2, r6
 8001946:	a90d      	add	r1, sp, #52	@ 0x34
 8001948:	4628      	mov	r0, r5
 800194a:	f00c fb47 	bl	800dfdc <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 800194e:	4632      	mov	r2, r6
 8001950:	4639      	mov	r1, r7
 8001952:	4854      	ldr	r0, [pc, #336]	@ (8001aa4 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001954:	4d5b      	ldr	r5, [pc, #364]	@ (8001ac4 <main+0x368>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001956:	f00a fded 	bl	800c534 <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 800195a:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 800195e:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 8001960:	bf04      	itt	eq
 8001962:	4b59      	ldreq	r3, [pc, #356]	@ (8001ac8 <main+0x36c>)
 8001964:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001966:	4b59      	ldr	r3, [pc, #356]	@ (8001acc <main+0x370>)
 8001968:	2601      	movs	r6, #1
 800196a:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800196e:	2210      	movs	r2, #16
 8001970:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001972:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001974:	e9c5 2304 	strd	r2, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001978:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800197c:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001980:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001984:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001988:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 800198c:	2702      	movs	r7, #2
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800198e:	f04f 0904 	mov.w	r9, #4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001992:	62ab      	str	r3, [r5, #40]	@ 0x28
  SdramTiming.WriteRecoveryTime = 3;
 8001994:	f04f 0a03 	mov.w	sl, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001998:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800199a:	a90d      	add	r1, sp, #52	@ 0x34
 800199c:	4628      	mov	r0, r5
  SdramTiming.ExitSelfRefreshDelay = 7;
 800199e:	e9cd 730d 	strd	r7, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 80019a2:	e9cd 930f 	strd	r9, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019a6:	f04f 0808 	mov.w	r8, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80019aa:	e9c5 4902 	strd	r4, r9, [r5, #8]
  SdramTiming.RPDelay = 2;
 80019ae:	e9cd a711 	strd	sl, r7, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 80019b2:	9713      	str	r7, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80019b4:	f00b ffee 	bl	800d994 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019b8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80019bc:	a909      	add	r1, sp, #36	@ 0x24
 80019be:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 80019c0:	e9cd 860a 	strd	r8, r6, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 80019c4:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 80019c6:	9609      	str	r6, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80019c8:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019ca:	f00c f803 	bl	800d9d4 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80019ce:	4630      	mov	r0, r6
 80019d0:	f00a fb56 	bl	800c080 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019d4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80019d8:	a909      	add	r1, sp, #36	@ 0x24
 80019da:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019dc:	e9cd 7809 	strd	r7, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80019e0:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019e4:	f00b fff6 	bl	800d9d4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019e8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80019ec:	a909      	add	r1, sp, #36	@ 0x24
 80019ee:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019f0:	e9cd a809 	strd	sl, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 80019f4:	e9cd 940b 	strd	r9, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019f8:	f00b ffec 	bl	800d9d4 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80019fc:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8001a00:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001a02:	9b08      	ldr	r3, [sp, #32]
 8001a04:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001a06:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001a0a:	a909      	add	r1, sp, #36	@ 0x24
 8001a0c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001a0e:	e9cd 9809 	strd	r9, r8, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8001a12:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001a14:	f00b ffde 	bl	800d9d4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001a18:	f240 516a 	movw	r1, #1386	@ 0x56a
 8001a1c:	4628      	mov	r0, r5
 8001a1e:	f00b fff7 	bl	800da10 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001a22:	2234      	movs	r2, #52	@ 0x34
 8001a24:	eb0d 0002 	add.w	r0, sp, r2
 8001a28:	4621      	mov	r1, r4
 8001a2a:	f028 ffb6 	bl	802a99a <memset>
  hltdc.Instance = LTDC;
 8001a2e:	4d28      	ldr	r5, [pc, #160]	@ (8001ad0 <main+0x374>)
 8001a30:	4b28      	ldr	r3, [pc, #160]	@ (8001ad4 <main+0x378>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001a32:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001a34:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001a38:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001a3a:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001a3e:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001a40:	e9c5 3a07 	strd	r3, sl, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001a44:	f240 110d 	movw	r1, #269	@ 0x10d
 8001a48:	f240 1343 	movw	r3, #323	@ 0x143
 8001a4c:	e9c5 1309 	strd	r1, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 8001a50:	f240 1017 	movw	r0, #279	@ 0x117
 8001a54:	f240 1347 	movw	r3, #327	@ 0x147
 8001a58:	e9c5 030b 	strd	r0, r3, [r5, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001a5c:	4628      	mov	r0, r5
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001a5e:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8001a62:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8001a64:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001a68:	f00b fa74 	bl	800cf54 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001a6c:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001a6e:	f44f 6c80 	mov.w	ip, #1024	@ 0x400
  pLayerCfg.WindowX1 = 240;
 8001a72:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 8001a74:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001a78:	2105      	movs	r1, #5
 8001a7a:	e9cd c114 	strd	ip, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowY1 = 320;
 8001a7e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001a82:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.WindowY0 = 0;
 8001a84:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.ImageWidth = 240;
 8001a88:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001a8c:	4628      	mov	r0, r5
 8001a8e:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8001a90:	4d11      	ldr	r5, [pc, #68]	@ (8001ad8 <main+0x37c>)
  pLayerCfg.ImageHeight = 320;
 8001a92:	9318      	str	r3, [sp, #96]	@ 0x60
 8001a94:	e026      	b.n	8001ae4 <main+0x388>
 8001a96:	bf00      	nop
 8001a98:	40023800 	.word	0x40023800
 8001a9c:	40021000 	.word	0x40021000
 8001aa0:	20002fa4 	.word	0x20002fa4
 8001aa4:	40020800 	.word	0x40020800
 8001aa8:	40020c00 	.word	0x40020c00
 8001aac:	40020000 	.word	0x40020000
 8001ab0:	40020400 	.word	0x40020400
 8001ab4:	20003038 	.word	0x20003038
 8001ab8:	40023000 	.word	0x40023000
 8001abc:	000186a0 	.word	0x000186a0
 8001ac0:	20002ea4 	.word	0x20002ea4
 8001ac4:	20002e70 	.word	0x20002e70
 8001ac8:	20002e64 	.word	0x20002e64
 8001acc:	a0000140 	.word	0xa0000140
 8001ad0:	20002efc 	.word	0x20002efc
 8001ad4:	40016800 	.word	0x40016800
 8001ad8:	20002e60 	.word	0x20002e60
 8001adc:	40015000 	.word	0x40015000
 8001ae0:	40005c00 	.word	0x40005c00
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001ae4:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  pLayerCfg.WindowX0 = 0;
 8001ae8:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001aea:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001aee:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001af2:	f00b fafa 	bl	800d0ea <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001af6:	4b17      	ldr	r3, [pc, #92]	@ (8001b54 <main+0x3f8>)
 8001af8:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001afa:	681b      	ldr	r3, [r3, #0]
 8001afc:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001afe:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001b00:	4d15      	ldr	r5, [pc, #84]	@ (8001b58 <main+0x3fc>)
  LcdDrv->DisplayOff();
 8001b02:	68db      	ldr	r3, [r3, #12]
 8001b04:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001b06:	4b15      	ldr	r3, [pc, #84]	@ (8001b5c <main+0x400>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001b08:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001b0a:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001b0e:	e9c5 7402 	strd	r7, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001b12:	e9c5 470a 	strd	r4, r7, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001b16:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001b1a:	f00a fb27 	bl	800c16c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001b1e:	4631      	mov	r1, r6
 8001b20:	4628      	mov	r0, r5
 8001b22:	f00a fbd9 	bl	800c2d8 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8001b26:	f7fe fdc3 	bl	80006b0 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001b2a:	f7fe fdc0 	bl	80006ae <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8001b2e:	f00c fcf9 	bl	800e524 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001b32:	4a0b      	ldr	r2, [pc, #44]	@ (8001b60 <main+0x404>)
 8001b34:	480b      	ldr	r0, [pc, #44]	@ (8001b64 <main+0x408>)
 8001b36:	4621      	mov	r1, r4
 8001b38:	f00c fd20 	bl	800e57c <osThreadNew>
 8001b3c:	4b0a      	ldr	r3, [pc, #40]	@ (8001b68 <main+0x40c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001b3e:	4a0b      	ldr	r2, [pc, #44]	@ (8001b6c <main+0x410>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001b40:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001b42:	4621      	mov	r1, r4
 8001b44:	480a      	ldr	r0, [pc, #40]	@ (8001b70 <main+0x414>)
 8001b46:	f00c fd19 	bl	800e57c <osThreadNew>
 8001b4a:	4b0a      	ldr	r3, [pc, #40]	@ (8001b74 <main+0x418>)
 8001b4c:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001b4e:	f00c fcfb 	bl	800e548 <osKernelStart>
  while (1)
 8001b52:	e7fe      	b.n	8001b52 <main+0x3f6>
 8001b54:	20000030 	.word	0x20000030
 8001b58:	20002ff8 	.word	0x20002ff8
 8001b5c:	4002b000 	.word	0x4002b000
 8001b60:	0802cff0 	.word	0x0802cff0
 8001b64:	080016b5 	.word	0x080016b5
 8001b68:	20002e6c 	.word	0x20002e6c
 8001b6c:	0802cfcc 	.word	0x0802cfcc
 8001b70:	080006bf 	.word	0x080006bf
 8001b74:	20002e68 	.word	0x20002e68

08001b78 <IOE_Init>:
void IOE_Init(void)
 8001b78:	4770      	bx	lr

08001b7a <IOE_ITConfig>:
void IOE_ITConfig(void)
 8001b7a:	4770      	bx	lr

08001b7c <IOE_Write>:
{
 8001b7c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001b7e:	4b09      	ldr	r3, [pc, #36]	@ (8001ba4 <IOE_Write+0x28>)
 8001b80:	f88d 2017 	strb.w	r2, [sp, #23]
 8001b84:	681b      	ldr	r3, [r3, #0]
 8001b86:	9302      	str	r3, [sp, #8]
 8001b88:	f10d 0217 	add.w	r2, sp, #23
 8001b8c:	2301      	movs	r3, #1
 8001b8e:	9200      	str	r2, [sp, #0]
 8001b90:	9301      	str	r3, [sp, #4]
 8001b92:	460a      	mov	r2, r1
 8001b94:	4601      	mov	r1, r0
 8001b96:	4804      	ldr	r0, [pc, #16]	@ (8001ba8 <IOE_Write+0x2c>)
 8001b98:	f00a ff82 	bl	800caa0 <HAL_I2C_Mem_Write>
}
 8001b9c:	b007      	add	sp, #28
 8001b9e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001ba2:	bf00      	nop
 8001ba4:	20000010 	.word	0x20000010
 8001ba8:	20002fa4 	.word	0x20002fa4

08001bac <IOE_Read>:
{
 8001bac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001bae:	2300      	movs	r3, #0
 8001bb0:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001bb4:	4b08      	ldr	r3, [pc, #32]	@ (8001bd8 <IOE_Read+0x2c>)
 8001bb6:	681b      	ldr	r3, [r3, #0]
 8001bb8:	9302      	str	r3, [sp, #8]
{
 8001bba:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001bbc:	2301      	movs	r3, #1
 8001bbe:	f10d 0117 	add.w	r1, sp, #23
 8001bc2:	9100      	str	r1, [sp, #0]
 8001bc4:	9301      	str	r3, [sp, #4]
 8001bc6:	4601      	mov	r1, r0
 8001bc8:	4804      	ldr	r0, [pc, #16]	@ (8001bdc <IOE_Read+0x30>)
 8001bca:	f00a fff9 	bl	800cbc0 <HAL_I2C_Mem_Read>
}
 8001bce:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001bd2:	b007      	add	sp, #28
 8001bd4:	f85d fb04 	ldr.w	pc, [sp], #4
 8001bd8:	20000010 	.word	0x20000010
 8001bdc:	20002fa4 	.word	0x20002fa4

08001be0 <IOE_ReadMultiple>:
{
 8001be0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001be2:	4c08      	ldr	r4, [pc, #32]	@ (8001c04 <IOE_ReadMultiple+0x24>)
 8001be4:	6824      	ldr	r4, [r4, #0]
 8001be6:	9200      	str	r2, [sp, #0]
 8001be8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001bec:	460a      	mov	r2, r1
 8001bee:	2301      	movs	r3, #1
 8001bf0:	4601      	mov	r1, r0
 8001bf2:	4805      	ldr	r0, [pc, #20]	@ (8001c08 <IOE_ReadMultiple+0x28>)
 8001bf4:	f00a ffe4 	bl	800cbc0 <HAL_I2C_Mem_Read>
}
 8001bf8:	3800      	subs	r0, #0
 8001bfa:	bf18      	it	ne
 8001bfc:	2001      	movne	r0, #1
 8001bfe:	b004      	add	sp, #16
 8001c00:	bd10      	pop	{r4, pc}
 8001c02:	bf00      	nop
 8001c04:	20000010 	.word	0x20000010
 8001c08:	20002fa4 	.word	0x20002fa4

08001c0c <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8001c0c:	f00a ba38 	b.w	800c080 <HAL_Delay>

08001c10 <LCD_IO_Init>:
{
 8001c10:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c12:	4c06      	ldr	r4, [pc, #24]	@ (8001c2c <LCD_IO_Init+0x1c>)
 8001c14:	2200      	movs	r2, #0
 8001c16:	4620      	mov	r0, r4
 8001c18:	2104      	movs	r1, #4
 8001c1a:	f00a fc8b 	bl	800c534 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001c1e:	4620      	mov	r0, r4
 8001c20:	2201      	movs	r2, #1
}
 8001c22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001c26:	2104      	movs	r1, #4
 8001c28:	f00a bc84 	b.w	800c534 <HAL_GPIO_WritePin>
 8001c2c:	40020800 	.word	0x40020800

08001c30 <LCD_IO_WriteData>:
{
 8001c30:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c32:	4d0b      	ldr	r5, [pc, #44]	@ (8001c60 <LCD_IO_WriteData+0x30>)
{
 8001c34:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001c36:	2201      	movs	r2, #1
 8001c38:	480a      	ldr	r0, [pc, #40]	@ (8001c64 <LCD_IO_WriteData+0x34>)
 8001c3a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001c3e:	f00a fc79 	bl	800c534 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c42:	2200      	movs	r2, #0
 8001c44:	2104      	movs	r1, #4
 8001c46:	4628      	mov	r0, r5
 8001c48:	f00a fc74 	bl	800c534 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001c4c:	4620      	mov	r0, r4
 8001c4e:	f7ff fd1f 	bl	8001690 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001c52:	4628      	mov	r0, r5
 8001c54:	2201      	movs	r2, #1
}
 8001c56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001c5a:	2104      	movs	r1, #4
 8001c5c:	f00a bc6a 	b.w	800c534 <HAL_GPIO_WritePin>
 8001c60:	40020800 	.word	0x40020800
 8001c64:	40020c00 	.word	0x40020c00

08001c68 <LCD_IO_WriteReg>:
{
 8001c68:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c6a:	4d0b      	ldr	r5, [pc, #44]	@ (8001c98 <LCD_IO_WriteReg+0x30>)
{
 8001c6c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001c6e:	2200      	movs	r2, #0
 8001c70:	480a      	ldr	r0, [pc, #40]	@ (8001c9c <LCD_IO_WriteReg+0x34>)
 8001c72:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001c76:	f00a fc5d 	bl	800c534 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c7a:	2200      	movs	r2, #0
 8001c7c:	2104      	movs	r1, #4
 8001c7e:	4628      	mov	r0, r5
 8001c80:	f00a fc58 	bl	800c534 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001c84:	4620      	mov	r0, r4
 8001c86:	f7ff fd03 	bl	8001690 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001c8a:	4628      	mov	r0, r5
 8001c8c:	2201      	movs	r2, #1
}
 8001c8e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001c92:	2104      	movs	r1, #4
 8001c94:	f00a bc4e 	b.w	800c534 <HAL_GPIO_WritePin>
 8001c98:	40020800 	.word	0x40020800
 8001c9c:	40020c00 	.word	0x40020c00

08001ca0 <LCD_IO_ReadData>:
{
 8001ca0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ca2:	4e14      	ldr	r6, [pc, #80]	@ (8001cf4 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ca4:	4f14      	ldr	r7, [pc, #80]	@ (8001cf8 <LCD_IO_ReadData+0x58>)
{
 8001ca6:	4605      	mov	r5, r0
 8001ca8:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001caa:	4630      	mov	r0, r6
 8001cac:	2200      	movs	r2, #0
 8001cae:	2104      	movs	r1, #4
 8001cb0:	f00a fc40 	bl	800c534 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001cb4:	2200      	movs	r2, #0
 8001cb6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001cba:	4638      	mov	r0, r7
 8001cbc:	f00a fc3a 	bl	800c534 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001cc0:	4628      	mov	r0, r5
 8001cc2:	f7ff fce5 	bl	8001690 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001cc6:	4b0d      	ldr	r3, [pc, #52]	@ (8001cfc <LCD_IO_ReadData+0x5c>)
 8001cc8:	480d      	ldr	r0, [pc, #52]	@ (8001d00 <LCD_IO_ReadData+0x60>)
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	4622      	mov	r2, r4
 8001cce:	a901      	add	r1, sp, #4
 8001cd0:	f00c f984 	bl	800dfdc <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001cd4:	4638      	mov	r0, r7
 8001cd6:	2201      	movs	r2, #1
 8001cd8:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8001cdc:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001cde:	f00a fc29 	bl	800c534 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ce2:	4630      	mov	r0, r6
 8001ce4:	2201      	movs	r2, #1
 8001ce6:	2104      	movs	r1, #4
 8001ce8:	f00a fc24 	bl	800c534 <HAL_GPIO_WritePin>
}
 8001cec:	4620      	mov	r0, r4
 8001cee:	b003      	add	sp, #12
 8001cf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cf2:	bf00      	nop
 8001cf4:	40020800 	.word	0x40020800
 8001cf8:	40020c00 	.word	0x40020c00
 8001cfc:	2000000c 	.word	0x2000000c
 8001d00:	20002ea4 	.word	0x20002ea4

08001d04 <LCD_Delay>:
  HAL_Delay(Delay);
 8001d04:	f00a b9bc 	b.w	800c080 <HAL_Delay>

08001d08 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 8001d08:	6802      	ldr	r2, [r0, #0]
 8001d0a:	4b03      	ldr	r3, [pc, #12]	@ (8001d18 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001d0c:	429a      	cmp	r2, r3
 8001d0e:	d101      	bne.n	8001d14 <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 8001d10:	f00a b9a4 	b.w	800c05c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001d14:	4770      	bx	lr
 8001d16:	bf00      	nop
 8001d18:	40001000 	.word	0x40001000

08001d1c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001d1c:	4770      	bx	lr
	...

08001d20 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001d20:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001d22:	4b0e      	ldr	r3, [pc, #56]	@ (8001d5c <HAL_MspInit+0x3c>)
 8001d24:	2200      	movs	r2, #0
 8001d26:	9200      	str	r2, [sp, #0]
 8001d28:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8001d2a:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 8001d2e:	6459      	str	r1, [r3, #68]	@ 0x44
 8001d30:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8001d32:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 8001d36:	9100      	str	r1, [sp, #0]
 8001d38:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001d3a:	9201      	str	r2, [sp, #4]
 8001d3c:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 8001d3e:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 8001d42:	6419      	str	r1, [r3, #64]	@ 0x40
 8001d44:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001d46:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001d4a:	9301      	str	r3, [sp, #4]
 8001d4c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001d4e:	210f      	movs	r1, #15
 8001d50:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001d54:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001d56:	f00a b9b9 	b.w	800c0cc <HAL_NVIC_SetPriority>
 8001d5a:	bf00      	nop
 8001d5c:	40023800 	.word	0x40023800

08001d60 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001d60:	6802      	ldr	r2, [r0, #0]
 8001d62:	4b09      	ldr	r3, [pc, #36]	@ (8001d88 <HAL_CRC_MspInit+0x28>)
 8001d64:	429a      	cmp	r2, r3
{
 8001d66:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001d68:	d10b      	bne.n	8001d82 <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001d6a:	2300      	movs	r3, #0
 8001d6c:	9301      	str	r3, [sp, #4]
 8001d6e:	4b07      	ldr	r3, [pc, #28]	@ (8001d8c <HAL_CRC_MspInit+0x2c>)
 8001d70:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001d72:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8001d76:	631a      	str	r2, [r3, #48]	@ 0x30
 8001d78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d7a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001d7e:	9301      	str	r3, [sp, #4]
 8001d80:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8001d82:	b002      	add	sp, #8
 8001d84:	4770      	bx	lr
 8001d86:	bf00      	nop
 8001d88:	40023000 	.word	0x40023000
 8001d8c:	40023800 	.word	0x40023800

08001d90 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001d90:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001d92:	4b0f      	ldr	r3, [pc, #60]	@ (8001dd0 <HAL_DMA2D_MspInit+0x40>)
 8001d94:	6802      	ldr	r2, [r0, #0]
 8001d96:	429a      	cmp	r2, r3
 8001d98:	d116      	bne.n	8001dc8 <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001d9a:	2200      	movs	r2, #0
 8001d9c:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8001da0:	9201      	str	r2, [sp, #4]
 8001da2:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8001da4:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8001da8:	6319      	str	r1, [r3, #48]	@ 0x30
 8001daa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001dac:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001db0:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001db2:	2105      	movs	r1, #5
 8001db4:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001db6:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001db8:	f00a f988 	bl	800c0cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001dbc:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 8001dbe:	b003      	add	sp, #12
 8001dc0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001dc4:	f00a b9b4 	b.w	800c130 <HAL_NVIC_EnableIRQ>
}
 8001dc8:	b003      	add	sp, #12
 8001dca:	f85d fb04 	ldr.w	pc, [sp], #4
 8001dce:	bf00      	nop
 8001dd0:	4002b000 	.word	0x4002b000

08001dd4 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001dd4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001dd8:	4604      	mov	r4, r0
 8001dda:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ddc:	2214      	movs	r2, #20
 8001dde:	2100      	movs	r1, #0
 8001de0:	a803      	add	r0, sp, #12
 8001de2:	f028 fdda 	bl	802a99a <memset>
  if(hi2c->Instance==I2C3)
 8001de6:	6822      	ldr	r2, [r4, #0]
 8001de8:	4b24      	ldr	r3, [pc, #144]	@ (8001e7c <HAL_I2C_MspInit+0xa8>)
 8001dea:	429a      	cmp	r2, r3
 8001dec:	d143      	bne.n	8001e76 <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001dee:	4c24      	ldr	r4, [pc, #144]	@ (8001e80 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001df0:	4824      	ldr	r0, [pc, #144]	@ (8001e84 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001df2:	2500      	movs	r5, #0
 8001df4:	9500      	str	r5, [sp, #0]
 8001df6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001df8:	f043 0304 	orr.w	r3, r3, #4
 8001dfc:	6323      	str	r3, [r4, #48]	@ 0x30
 8001dfe:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001e00:	f003 0304 	and.w	r3, r3, #4
 8001e04:	9300      	str	r3, [sp, #0]
 8001e06:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e08:	9501      	str	r5, [sp, #4]
 8001e0a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001e0c:	f043 0301 	orr.w	r3, r3, #1
 8001e10:	6323      	str	r3, [r4, #48]	@ 0x30
 8001e12:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001e14:	f003 0301 	and.w	r3, r3, #1
 8001e18:	9301      	str	r3, [sp, #4]
 8001e1a:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001e1c:	f04f 0912 	mov.w	r9, #18
 8001e20:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e24:	f04f 0801 	mov.w	r8, #1
 8001e28:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001e2a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e2c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001e2e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e32:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001e36:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e38:	f00a fa92 	bl	800c360 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001e3c:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e40:	4811      	ldr	r0, [pc, #68]	@ (8001e88 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001e42:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e44:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001e46:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e4a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e4e:	f00a fa87 	bl	800c360 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001e52:	9502      	str	r5, [sp, #8]
 8001e54:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001e56:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001e5a:	6423      	str	r3, [r4, #64]	@ 0x40
 8001e5c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001e5e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001e62:	9302      	str	r3, [sp, #8]
 8001e64:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001e66:	6a23      	ldr	r3, [r4, #32]
 8001e68:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001e6c:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001e6e:	6a23      	ldr	r3, [r4, #32]
 8001e70:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8001e74:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 8001e76:	b009      	add	sp, #36	@ 0x24
 8001e78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001e7c:	40005c00 	.word	0x40005c00
 8001e80:	40023800 	.word	0x40023800
 8001e84:	40020800 	.word	0x40020800
 8001e88:	40020000 	.word	0x40020000

08001e8c <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001e8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e8e:	b099      	sub	sp, #100	@ 0x64
 8001e90:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e92:	2214      	movs	r2, #20
 8001e94:	2100      	movs	r1, #0
 8001e96:	a807      	add	r0, sp, #28
 8001e98:	f028 fd7f 	bl	802a99a <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001e9c:	2230      	movs	r2, #48	@ 0x30
 8001e9e:	eb0d 0002 	add.w	r0, sp, r2
 8001ea2:	2100      	movs	r1, #0
 8001ea4:	f028 fd79 	bl	802a99a <memset>
  if(hltdc->Instance==LTDC)
 8001ea8:	6822      	ldr	r2, [r4, #0]
 8001eaa:	4b5e      	ldr	r3, [pc, #376]	@ (8002024 <HAL_LTDC_MspInit+0x198>)
 8001eac:	429a      	cmp	r2, r3
 8001eae:	f040 80b7 	bne.w	8002020 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001eb2:	2308      	movs	r3, #8
 8001eb4:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001eb6:	23c0      	movs	r3, #192	@ 0xc0
 8001eb8:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001eba:	2304      	movs	r3, #4
 8001ebc:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001ebe:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ec0:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8001ec4:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001ec6:	f00b fc39 	bl	800d73c <HAL_RCCEx_PeriphCLKConfig>
 8001eca:	b108      	cbz	r0, 8001ed0 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8001ecc:	f7ff ff26 	bl	8001d1c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001ed0:	4b55      	ldr	r3, [pc, #340]	@ (8002028 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ed2:	4856      	ldr	r0, [pc, #344]	@ (800202c <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001ed4:	2400      	movs	r4, #0
 8001ed6:	9400      	str	r4, [sp, #0]
 8001ed8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001eda:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8001ede:	645a      	str	r2, [r3, #68]	@ 0x44
 8001ee0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001ee2:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8001ee6:	9200      	str	r2, [sp, #0]
 8001ee8:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001eea:	9401      	str	r4, [sp, #4]
 8001eec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001eee:	f042 0220 	orr.w	r2, r2, #32
 8001ef2:	631a      	str	r2, [r3, #48]	@ 0x30
 8001ef4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001ef6:	f002 0220 	and.w	r2, r2, #32
 8001efa:	9201      	str	r2, [sp, #4]
 8001efc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001efe:	9402      	str	r4, [sp, #8]
 8001f00:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001f02:	f042 0201 	orr.w	r2, r2, #1
 8001f06:	631a      	str	r2, [r3, #48]	@ 0x30
 8001f08:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001f0a:	f002 0201 	and.w	r2, r2, #1
 8001f0e:	9202      	str	r2, [sp, #8]
 8001f10:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001f12:	9403      	str	r4, [sp, #12]
 8001f14:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001f16:	f042 0202 	orr.w	r2, r2, #2
 8001f1a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001f1c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001f1e:	f002 0202 	and.w	r2, r2, #2
 8001f22:	9203      	str	r2, [sp, #12]
 8001f24:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001f26:	9404      	str	r4, [sp, #16]
 8001f28:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001f2a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001f2e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001f30:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001f32:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001f36:	9204      	str	r2, [sp, #16]
 8001f38:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f3a:	9405      	str	r4, [sp, #20]
 8001f3c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001f3e:	f042 0204 	orr.w	r2, r2, #4
 8001f42:	631a      	str	r2, [r3, #48]	@ 0x30
 8001f44:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001f46:	f002 0204 	and.w	r2, r2, #4
 8001f4a:	9205      	str	r2, [sp, #20]
 8001f4c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f4e:	9406      	str	r4, [sp, #24]
 8001f50:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001f52:	f042 0208 	orr.w	r2, r2, #8
 8001f56:	631a      	str	r2, [r3, #48]	@ 0x30
 8001f58:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f5a:	f003 0308 	and.w	r3, r3, #8
 8001f5e:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f60:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f62:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f64:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f66:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f68:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f6c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f6e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f72:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f76:	f00a f9f3 	bl	800c360 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001f7a:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f7e:	482c      	ldr	r0, [pc, #176]	@ (8002030 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f80:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f82:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f84:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001f88:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f8a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f8e:	f00a f9e7 	bl	800c360 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001f92:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f94:	4827      	ldr	r0, [pc, #156]	@ (8002034 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001f96:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f98:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f9a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f9e:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fa2:	f00a f9dd 	bl	800c360 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001fa6:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001faa:	4822      	ldr	r0, [pc, #136]	@ (8002034 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001fac:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fae:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fb0:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001fb4:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fb8:	f00a f9d2 	bl	800c360 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001fbc:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fc0:	481d      	ldr	r0, [pc, #116]	@ (8002038 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001fc2:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fc4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fc6:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001fca:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fce:	f00a f9c7 	bl	800c360 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001fd2:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fd4:	4819      	ldr	r0, [pc, #100]	@ (800203c <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001fd6:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fd8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fda:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001fde:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe2:	f00a f9bd 	bl	800c360 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001fe6:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fe8:	4815      	ldr	r0, [pc, #84]	@ (8002040 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001fea:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fec:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fee:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ff2:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ff6:	f00a f9b3 	bl	800c360 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001ffa:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ffe:	480e      	ldr	r0, [pc, #56]	@ (8002038 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002000:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002002:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002004:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002008:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800200c:	f00a f9a8 	bl	800c360 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002010:	2058      	movs	r0, #88	@ 0x58
 8002012:	4622      	mov	r2, r4
 8002014:	2105      	movs	r1, #5
 8002016:	f00a f859 	bl	800c0cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800201a:	2058      	movs	r0, #88	@ 0x58
 800201c:	f00a f888 	bl	800c130 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 8002020:	b019      	add	sp, #100	@ 0x64
 8002022:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002024:	40016800 	.word	0x40016800
 8002028:	40023800 	.word	0x40023800
 800202c:	40021400 	.word	0x40021400
 8002030:	40020000 	.word	0x40020000
 8002034:	40020400 	.word	0x40020400
 8002038:	40021800 	.word	0x40021800
 800203c:	40020800 	.word	0x40020800
 8002040:	40020c00 	.word	0x40020c00

08002044 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002044:	b510      	push	{r4, lr}
 8002046:	4604      	mov	r4, r0
 8002048:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800204a:	2214      	movs	r2, #20
 800204c:	2100      	movs	r1, #0
 800204e:	a803      	add	r0, sp, #12
 8002050:	f028 fca3 	bl	802a99a <memset>
  if(hspi->Instance==SPI5)
 8002054:	6822      	ldr	r2, [r4, #0]
 8002056:	4b14      	ldr	r3, [pc, #80]	@ (80020a8 <HAL_SPI_MspInit+0x64>)
 8002058:	429a      	cmp	r2, r3
 800205a:	d123      	bne.n	80020a4 <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 800205c:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8002060:	2100      	movs	r1, #0
 8002062:	9101      	str	r1, [sp, #4]
 8002064:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002066:	4811      	ldr	r0, [pc, #68]	@ (80020ac <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002068:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 800206c:	645a      	str	r2, [r3, #68]	@ 0x44
 800206e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002070:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8002074:	9201      	str	r2, [sp, #4]
 8002076:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002078:	9102      	str	r1, [sp, #8]
 800207a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800207c:	f042 0220 	orr.w	r2, r2, #32
 8002080:	631a      	str	r2, [r3, #48]	@ 0x30
 8002082:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002084:	f003 0320 	and.w	r3, r3, #32
 8002088:	9302      	str	r3, [sp, #8]
 800208a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800208c:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8002090:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002092:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002094:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002098:	2305      	movs	r3, #5
 800209a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800209e:	a903      	add	r1, sp, #12
 80020a0:	f00a f95e 	bl	800c360 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 80020a4:	b008      	add	sp, #32
 80020a6:	bd10      	pop	{r4, pc}
 80020a8:	40015000 	.word	0x40015000
 80020ac:	40021400 	.word	0x40021400

080020b0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80020b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80020b4:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80020b6:	2300      	movs	r3, #0
 80020b8:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80020ba:	4b2b      	ldr	r3, [pc, #172]	@ (8002168 <HAL_SDRAM_MspInit+0xb8>)
 80020bc:	681c      	ldr	r4, [r3, #0]
 80020be:	2c00      	cmp	r4, #0
 80020c0:	d14f      	bne.n	8002162 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 80020c2:	f04f 0801 	mov.w	r8, #1
 80020c6:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 80020ca:	4b28      	ldr	r3, [pc, #160]	@ (800216c <HAL_SDRAM_MspInit+0xbc>)
 80020cc:	9400      	str	r4, [sp, #0]
 80020ce:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020d0:	4827      	ldr	r0, [pc, #156]	@ (8002170 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80020d2:	ea42 0208 	orr.w	r2, r2, r8
 80020d6:	639a      	str	r2, [r3, #56]	@ 0x38
 80020d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80020da:	ea03 0308 	and.w	r3, r3, r8
 80020de:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020e0:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020e2:	2603      	movs	r6, #3
 80020e4:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 80020e6:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020e8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020ea:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 80020ee:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020f2:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020f6:	f00a f933 	bl	800c360 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020fa:	481e      	ldr	r0, [pc, #120]	@ (8002174 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020fc:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020fe:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002100:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002104:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002108:	f00a f92a 	bl	800c360 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800210c:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002110:	4819      	ldr	r0, [pc, #100]	@ (8002178 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002112:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002114:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002116:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800211a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800211e:	f00a f91f 	bl	800c360 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002122:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002126:	4815      	ldr	r0, [pc, #84]	@ (800217c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002128:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800212a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800212c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002130:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002134:	f00a f914 	bl	800c360 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002138:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800213c:	4810      	ldr	r0, [pc, #64]	@ (8002180 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800213e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002140:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002142:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002146:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800214a:	f00a f909 	bl	800c360 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800214e:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002150:	480c      	ldr	r0, [pc, #48]	@ (8002184 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002152:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002154:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002156:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800215a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800215e:	f00a f8ff 	bl	800c360 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002162:	b006      	add	sp, #24
 8002164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002168:	20003040 	.word	0x20003040
 800216c:	40023800 	.word	0x40023800
 8002170:	40021400 	.word	0x40021400
 8002174:	40020800 	.word	0x40020800
 8002178:	40021800 	.word	0x40021800
 800217c:	40021000 	.word	0x40021000
 8002180:	40020c00 	.word	0x40020c00
 8002184:	40020400 	.word	0x40020400

08002188 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002188:	b570      	push	{r4, r5, r6, lr}
 800218a:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 800218c:	2300      	movs	r3, #0
 800218e:	9302      	str	r3, [sp, #8]
 8002190:	4b20      	ldr	r3, [pc, #128]	@ (8002214 <HAL_InitTick+0x8c>)
 8002192:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002194:	f042 0210 	orr.w	r2, r2, #16
 8002198:	641a      	str	r2, [r3, #64]	@ 0x40
 800219a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800219c:	f003 0310 	and.w	r3, r3, #16
 80021a0:	9302      	str	r3, [sp, #8]
{
 80021a2:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80021a4:	a901      	add	r1, sp, #4
 80021a6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80021a8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80021aa:	f00b faa9 	bl	800d700 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80021ae:	9b06      	ldr	r3, [sp, #24]
 80021b0:	bb4b      	cbnz	r3, 8002206 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80021b2:	f00b fa95 	bl	800d6e0 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80021b6:	4e18      	ldr	r6, [pc, #96]	@ (8002218 <HAL_InitTick+0x90>)
 80021b8:	4b18      	ldr	r3, [pc, #96]	@ (800221c <HAL_InitTick+0x94>)
 80021ba:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80021bc:	f240 33e7 	movw	r3, #999	@ 0x3e7
 80021c0:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80021c2:	4b17      	ldr	r3, [pc, #92]	@ (8002220 <HAL_InitTick+0x98>)
 80021c4:	fbb0 f3f3 	udiv	r3, r0, r3
 80021c8:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80021ca:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80021cc:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 80021ce:	2300      	movs	r3, #0
 80021d0:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80021d2:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80021d4:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 80021d6:	f00c f8d1 	bl	800e37c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80021da:	4604      	mov	r4, r0
 80021dc:	b980      	cbnz	r0, 8002200 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 80021de:	4630      	mov	r0, r6
 80021e0:	f00b ffa2 	bl	800e128 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80021e4:	4604      	mov	r4, r0
 80021e6:	b958      	cbnz	r0, 8002200 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80021e8:	2036      	movs	r0, #54	@ 0x36
 80021ea:	f009 ffa1 	bl	800c130 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80021ee:	2d0f      	cmp	r5, #15
 80021f0:	d80d      	bhi.n	800220e <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80021f2:	4622      	mov	r2, r4
 80021f4:	4629      	mov	r1, r5
 80021f6:	2036      	movs	r0, #54	@ 0x36
 80021f8:	f009 ff68 	bl	800c0cc <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80021fc:	4b09      	ldr	r3, [pc, #36]	@ (8002224 <HAL_InitTick+0x9c>)
 80021fe:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8002200:	4620      	mov	r0, r4
 8002202:	b008      	add	sp, #32
 8002204:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002206:	f00b fa6b 	bl	800d6e0 <HAL_RCC_GetPCLK1Freq>
 800220a:	0040      	lsls	r0, r0, #1
 800220c:	e7d3      	b.n	80021b6 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 800220e:	2401      	movs	r4, #1
 8002210:	e7f6      	b.n	8002200 <HAL_InitTick+0x78>
 8002212:	bf00      	nop
 8002214:	40023800 	.word	0x40023800
 8002218:	20003044 	.word	0x20003044
 800221c:	40001000 	.word	0x40001000
 8002220:	000f4240 	.word	0x000f4240
 8002224:	20000098 	.word	0x20000098

08002228 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002228:	4770      	bx	lr

0800222a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800222a:	e7fe      	b.n	800222a <HardFault_Handler>

0800222c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800222c:	e7fe      	b.n	800222c <MemManage_Handler>

0800222e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800222e:	e7fe      	b.n	800222e <BusFault_Handler>

08002230 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002230:	e7fe      	b.n	8002230 <UsageFault_Handler>

08002232 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8002232:	4770      	bx	lr

08002234 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002234:	4801      	ldr	r0, [pc, #4]	@ (800223c <TIM6_DAC_IRQHandler+0x8>)
 8002236:	f00b bfb5 	b.w	800e1a4 <HAL_TIM_IRQHandler>
 800223a:	bf00      	nop
 800223c:	20003044 	.word	0x20003044

08002240 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002240:	4801      	ldr	r0, [pc, #4]	@ (8002248 <LTDC_IRQHandler+0x8>)
 8002242:	f00a bef5 	b.w	800d030 <HAL_LTDC_IRQHandler>
 8002246:	bf00      	nop
 8002248:	20002efc 	.word	0x20002efc

0800224c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800224c:	4801      	ldr	r0, [pc, #4]	@ (8002254 <DMA2D_IRQHandler+0x8>)
 800224e:	f009 bfb9 	b.w	800c1c4 <HAL_DMA2D_IRQHandler>
 8002252:	bf00      	nop
 8002254:	20002ff8 	.word	0x20002ff8

08002258 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002258:	2001      	movs	r0, #1
 800225a:	4770      	bx	lr

0800225c <_kill>:

int _kill(int pid, int sig)
{
 800225c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800225e:	f028 fc3f 	bl	802aae0 <__errno>
 8002262:	2316      	movs	r3, #22
 8002264:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002266:	f04f 30ff 	mov.w	r0, #4294967295
 800226a:	bd08      	pop	{r3, pc}

0800226c <_exit>:

void _exit (int status)
{
 800226c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800226e:	f028 fc37 	bl	802aae0 <__errno>
 8002272:	2316      	movs	r3, #22
 8002274:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002276:	e7fe      	b.n	8002276 <_exit+0xa>

08002278 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002278:	b570      	push	{r4, r5, r6, lr}
 800227a:	460d      	mov	r5, r1
 800227c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800227e:	460e      	mov	r6, r1
 8002280:	1b73      	subs	r3, r6, r5
 8002282:	429c      	cmp	r4, r3
 8002284:	dc01      	bgt.n	800228a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002286:	4620      	mov	r0, r4
 8002288:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800228a:	f3af 8000 	nop.w
 800228e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002292:	e7f5      	b.n	8002280 <_read+0x8>

08002294 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002294:	b570      	push	{r4, r5, r6, lr}
 8002296:	460d      	mov	r5, r1
 8002298:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800229a:	460e      	mov	r6, r1
 800229c:	1b73      	subs	r3, r6, r5
 800229e:	429c      	cmp	r4, r3
 80022a0:	dc01      	bgt.n	80022a6 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80022a2:	4620      	mov	r0, r4
 80022a4:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80022a6:	f816 0b01 	ldrb.w	r0, [r6], #1
 80022aa:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80022ae:	e7f5      	b.n	800229c <_write+0x8>

080022b0 <_close>:

int _close(int file)
{
	return -1;
}
 80022b0:	f04f 30ff 	mov.w	r0, #4294967295
 80022b4:	4770      	bx	lr

080022b6 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80022b6:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80022ba:	604b      	str	r3, [r1, #4]
	return 0;
}
 80022bc:	2000      	movs	r0, #0
 80022be:	4770      	bx	lr

080022c0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80022c0:	2001      	movs	r0, #1
 80022c2:	4770      	bx	lr

080022c4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80022c4:	2000      	movs	r0, #0
 80022c6:	4770      	bx	lr

080022c8 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80022c8:	4a0a      	ldr	r2, [pc, #40]	@ (80022f4 <_sbrk+0x2c>)
 80022ca:	6811      	ldr	r1, [r2, #0]
{
 80022cc:	b508      	push	{r3, lr}
 80022ce:	4603      	mov	r3, r0
	if (heap_end == 0)
 80022d0:	b909      	cbnz	r1, 80022d6 <_sbrk+0xe>
		heap_end = &end;
 80022d2:	4909      	ldr	r1, [pc, #36]	@ (80022f8 <_sbrk+0x30>)
 80022d4:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80022d6:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80022d8:	4669      	mov	r1, sp
 80022da:	4403      	add	r3, r0
 80022dc:	428b      	cmp	r3, r1
 80022de:	d906      	bls.n	80022ee <_sbrk+0x26>
	{
		errno = ENOMEM;
 80022e0:	f028 fbfe 	bl	802aae0 <__errno>
 80022e4:	230c      	movs	r3, #12
 80022e6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80022e8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80022ec:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80022ee:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80022f0:	e7fc      	b.n	80022ec <_sbrk+0x24>
 80022f2:	bf00      	nop
 80022f4:	2000308c 	.word	0x2000308c
 80022f8:	20014c90 	.word	0x20014c90

080022fc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SCORE = 4;         // verdanab_10_4bpp
    static const touchgfx::FontId BEST = 4;          // verdanab_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 5;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80022fc:	4770      	bx	lr

080022fe <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80022fe:	b508      	push	{r3, lr}
    switch (typography)
 8002300:	2908      	cmp	r1, #8
 8002302:	d81a      	bhi.n	800233a <_ZN23ApplicationFontProvider7getFontEt+0x3c>
 8002304:	e8df f001 	tbb	[pc, r1]
 8002308:	0d090511 	.word	0x0d090511
 800230c:	15151511 	.word	0x15151511
 8002310:	15          	.byte	0x15
 8002311:	00          	.byte	0x00
    case Typography::DEFAULT:
        // verdanab_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
    case Typography::LARGE:
        // verdanab_25_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002312:	f005 fbe1 	bl	8007ad8 <_ZN17TypedTextDatabase8getFontsEv>
 8002316:	6840      	ldr	r0, [r0, #4]
        // verdanab_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
    default:
        return 0;
    }
}
 8002318:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800231a:	f005 fbdd 	bl	8007ad8 <_ZN17TypedTextDatabase8getFontsEv>
 800231e:	6880      	ldr	r0, [r0, #8]
 8002320:	e7fa      	b.n	8002318 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002322:	f005 fbd9 	bl	8007ad8 <_ZN17TypedTextDatabase8getFontsEv>
 8002326:	68c0      	ldr	r0, [r0, #12]
 8002328:	e7f6      	b.n	8002318 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800232a:	f005 fbd5 	bl	8007ad8 <_ZN17TypedTextDatabase8getFontsEv>
 800232e:	6800      	ldr	r0, [r0, #0]
 8002330:	e7f2      	b.n	8002318 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 8002332:	f005 fbd1 	bl	8007ad8 <_ZN17TypedTextDatabase8getFontsEv>
 8002336:	6900      	ldr	r0, [r0, #16]
 8002338:	e7ee      	b.n	8002318 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
    switch (typography)
 800233a:	2000      	movs	r0, #0
 800233c:	e7ec      	b.n	8002318 <_ZN23ApplicationFontProvider7getFontEt+0x1a>

0800233e <_ZN23ApplicationFontProviderD0Ev>:
 800233e:	b510      	push	{r4, lr}
 8002340:	2104      	movs	r1, #4
 8002342:	4604      	mov	r4, r0
 8002344:	f027 f9e6 	bl	8029714 <_ZdlPvj>
 8002348:	4620      	mov	r0, r4
 800234a:	bd10      	pop	{r4, pc}

0800234c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800234c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800234e:	4770      	bx	lr

08002350 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002350:	4770      	bx	lr

08002352 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002352:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002354:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 8002356:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002358:	466d      	mov	r5, sp
        rect.width = width;
 800235a:	8101      	strh	r1, [r0, #8]
 800235c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002360:	4601      	mov	r1, r0
    virtual void setWidth(int16_t width)
 8002362:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002364:	4628      	mov	r0, r5
 8002366:	4798      	blx	r3
 8002368:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800236c:	343c      	adds	r4, #60	@ 0x3c
 800236e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002372:	b005      	add	sp, #20
 8002374:	bd30      	pop	{r4, r5, pc}

08002376 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002376:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002378:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 800237a:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800237c:	466d      	mov	r5, sp
        rect.height = height;
 800237e:	8141      	strh	r1, [r0, #10]
 8002380:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8002384:	4601      	mov	r1, r0
    virtual void setHeight(int16_t height)
 8002386:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002388:	4628      	mov	r0, r5
 800238a:	4798      	blx	r3
 800238c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002390:	343c      	adds	r4, #60	@ 0x3c
 8002392:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002396:	b005      	add	sp, #20
 8002398:	bd30      	pop	{r4, r5, pc}

0800239a <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800239a:	2200      	movs	r2, #0
 800239c:	8002      	strh	r2, [r0, #0]
 800239e:	8042      	strh	r2, [r0, #2]
 80023a0:	8082      	strh	r2, [r0, #4]
 80023a2:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80023a4:	4770      	bx	lr

080023a6 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80023a6:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
 80023aa:	4770      	bx	lr

080023ac <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80023ac:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80023ae:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80023b0:	4604      	mov	r4, r0
        setX(x);
 80023b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80023b4:	4615      	mov	r5, r2
        setX(x);
 80023b6:	4798      	blx	r3
        setBaselineY(baselineY);
 80023b8:	6823      	ldr	r3, [r4, #0]
 80023ba:	4629      	mov	r1, r5
 80023bc:	4620      	mov	r0, r4
 80023be:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
    }
 80023c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80023c4:	4718      	bx	r3

080023c6 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80023c6:	2000      	movs	r0, #0
 80023c8:	4770      	bx	lr

080023ca <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80023ca:	6c80      	ldr	r0, [r0, #72]	@ 0x48
 80023cc:	4770      	bx	lr

080023ce <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80023ce:	4770      	bx	lr

080023d0 <_ZN8BestBaseD1Ev>:
}

BestBase::~BestBase()
{

}
 80023d0:	4770      	bx	lr

080023d2 <_ZN8BestBase10initializeEv>:

void BestBase::initialize()
{

}
 80023d2:	4770      	bx	lr

080023d4 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80023d4:	b510      	push	{r4, lr}
    }
 80023d6:	2108      	movs	r1, #8
    virtual ~TypedText()
 80023d8:	4604      	mov	r4, r0
    }
 80023da:	f027 f99b 	bl	8029714 <_ZdlPvj>
 80023de:	4620      	mov	r0, r4
 80023e0:	bd10      	pop	{r4, pc}

080023e2 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80023e2:	b510      	push	{r4, lr}
 80023e4:	214c      	movs	r1, #76	@ 0x4c
 80023e6:	4604      	mov	r4, r0
 80023e8:	f027 f994 	bl	8029714 <_ZdlPvj>
 80023ec:	4620      	mov	r0, r4
 80023ee:	bd10      	pop	{r4, pc}

080023f0 <_ZN8BestBaseD0Ev>:
BestBase::~BestBase()
 80023f0:	b510      	push	{r4, lr}
}
 80023f2:	f44f 7180 	mov.w	r1, #256	@ 0x100
BestBase::~BestBase()
 80023f6:	4604      	mov	r4, r0
}
 80023f8:	f027 f98c 	bl	8029714 <_ZdlPvj>
 80023fc:	4620      	mov	r0, r4
 80023fe:	bd10      	pop	{r4, pc}

08002400 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002400:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002402:	f7ff f84f 	bl	80014a4 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002406:	bd08      	pop	{r3, pc}

08002408 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002408:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800240a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800240c:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800240e:	4b12      	ldr	r3, [pc, #72]	@ (8002458 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002410:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002412:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002414:	b28d      	uxth	r5, r1
 8002416:	b92b      	cbnz	r3, 8002424 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002418:	4b10      	ldr	r3, [pc, #64]	@ (800245c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800241a:	4a11      	ldr	r2, [pc, #68]	@ (8002460 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800241c:	216c      	movs	r1, #108	@ 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800241e:	4811      	ldr	r0, [pc, #68]	@ (8002464 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002420:	f028 f8b4 	bl	802a58c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002424:	4910      	ldr	r1, [pc, #64]	@ (8002468 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002426:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002428:	8809      	ldrh	r1, [r1, #0]
 800242a:	4291      	cmp	r1, r2
 800242c:	d803      	bhi.n	8002436 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800242e:	4b0f      	ldr	r3, [pc, #60]	@ (800246c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002430:	4a0b      	ldr	r2, [pc, #44]	@ (8002460 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002432:	216d      	movs	r1, #109	@ 0x6d
 8002434:	e7f3      	b.n	800241e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002436:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800243a:	4b0d      	ldr	r3, [pc, #52]	@ (8002470 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800243c:	681b      	ldr	r3, [r3, #0]
 800243e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002442:	6803      	ldr	r3, [r0, #0]
 8002444:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002446:	4798      	blx	r3
 8002448:	1a29      	subs	r1, r5, r0
 800244a:	4633      	mov	r3, r6
 800244c:	4620      	mov	r0, r4
 800244e:	b209      	sxth	r1, r1
    }
 8002450:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002454:	4718      	bx	r3
 8002456:	bf00      	nop
 8002458:	20013fa4 	.word	0x20013fa4
 800245c:	0802bbe5 	.word	0x0802bbe5
 8002460:	0802bc27 	.word	0x0802bc27
 8002464:	0802bc62 	.word	0x0802bc62
 8002468:	20013fa8 	.word	0x20013fa8
 800246c:	0802bca9 	.word	0x0802bca9
 8002470:	20013fac 	.word	0x20013fac

08002474 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002474:	2200      	movs	r2, #0
 8002476:	f04f 31ff 	mov.w	r1, #4294967295
 800247a:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800247e:	6082      	str	r2, [r0, #8]
    }
 8002480:	4770      	bx	lr
	...

08002484 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8002484:	4a07      	ldr	r2, [pc, #28]	@ (80024a4 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 8002486:	6002      	str	r2, [r0, #0]
 8002488:	2200      	movs	r2, #0
 800248a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800248e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002492:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002496:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 800249a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800249e:	8482      	strh	r2, [r0, #36]	@ 0x24
    }
 80024a0:	4770      	bx	lr
 80024a2:	bf00      	nop
 80024a4:	0802e5fc 	.word	0x0802e5fc

080024a8 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80024a8:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80024aa:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80024ac:	4604      	mov	r4, r0
        setX(x);
 80024ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setXY(int16_t x, int16_t y)
 80024b0:	4615      	mov	r5, r2
        setX(x);
 80024b2:	4798      	blx	r3
        setY(y);
 80024b4:	6823      	ldr	r3, [r4, #0]
 80024b6:	4629      	mov	r1, r5
 80024b8:	4620      	mov	r0, r4
 80024ba:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
    }
 80024bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80024c0:	4718      	bx	r3
	...

080024c4 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80024c4:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80024c6:	2226      	movs	r2, #38	@ 0x26
    TextArea()
 80024c8:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80024ca:	2100      	movs	r1, #0
 80024cc:	f028 fa65 	bl	802a99a <memset>
class Widget : public Drawable
 80024d0:	4620      	mov	r0, r4
 80024d2:	f7ff ffd7 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 80024d6:	4b0a      	ldr	r3, [pc, #40]	@ (8002500 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80024d8:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80024da:	4b0a      	ldr	r3, [pc, #40]	@ (8002504 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80024dc:	62a3      	str	r3, [r4, #40]	@ 0x28
 80024de:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80024e2:	85a3      	strh	r3, [r4, #44]	@ 0x2c
 80024e4:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
 80024e8:	2300      	movs	r3, #0
 80024ea:	e9c4 320c 	strd	r3, r2, [r4, #48]	@ 0x30
 80024ee:	8723      	strh	r3, [r4, #56]	@ 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80024f0:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80024f4:	e9c4 2310 	strd	r2, r3, [r4, #64]	@ 0x40
 80024f8:	63e3      	str	r3, [r4, #60]	@ 0x3c
    }
 80024fa:	4620      	mov	r0, r4
 80024fc:	bd10      	pop	{r4, pc}
 80024fe:	bf00      	nop
 8002500:	0802e3c4 	.word	0x0802e3c4
 8002504:	0802d030 	.word	0x0802d030

08002508 <_ZN8BestBaseC1Ev>:
BestBase::BestBase()
 8002508:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800250c:	4604      	mov	r4, r0
 800250e:	b086      	sub	sp, #24
 8002510:	4626      	mov	r6, r4
          firstChild(0)
 8002512:	2500      	movs	r5, #0
 8002514:	f7ff ffb6 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 8002518:	4b52      	ldr	r3, [pc, #328]	@ (8002664 <_ZN8BestBaseC1Ev+0x15c>)
 800251a:	62a5      	str	r5, [r4, #40]	@ 0x28
 800251c:	f846 3b2c 	str.w	r3, [r6], #44
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002520:	4629      	mov	r1, r5
 8002522:	2226      	movs	r2, #38	@ 0x26
 8002524:	4630      	mov	r0, r6
 8002526:	f028 fa38 	bl	802a99a <memset>
 800252a:	4630      	mov	r0, r6
 800252c:	f7ff ffaa 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 8002530:	4b4d      	ldr	r3, [pc, #308]	@ (8002668 <_ZN8BestBaseC1Ev+0x160>)
 8002532:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002534:	f104 0858 	add.w	r8, r4, #88	@ 0x58
 8002538:	23ff      	movs	r3, #255	@ 0xff
 800253a:	f884 3052 	strb.w	r3, [r4, #82]	@ 0x52
        : TextArea()
 800253e:	f104 07a0 	add.w	r7, r4, #160	@ 0xa0
        : color(col)
 8002542:	6565      	str	r5, [r4, #84]	@ 0x54
 8002544:	4640      	mov	r0, r8
 8002546:	f7ff ffbd 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 800254a:	4638      	mov	r0, r7
 800254c:	f7ff ffba 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002550:	4b46      	ldr	r3, [pc, #280]	@ (800266c <_ZN8BestBaseC1Ev+0x164>)
 8002552:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
        rect.width = width;
 8002556:	4b46      	ldr	r3, [pc, #280]	@ (8002670 <_ZN8BestBaseC1Ev+0x168>)
 8002558:	60a3      	str	r3, [r4, #8]
        setXY(x, y);
 800255a:	462a      	mov	r2, r5
 800255c:	4629      	mov	r1, r5
 800255e:	4630      	mov	r0, r6
 8002560:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
 8002564:	f7ff ffa0 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002568:	4630      	mov	r0, r6
 800256a:	212d      	movs	r1, #45	@ 0x2d
 800256c:	f7fe fee4 	bl	8001338 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002570:	4630      	mov	r0, r6
 8002572:	211e      	movs	r1, #30
 8002574:	f7fe fee2 	bl	800133c <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002578:	f04f 33ff 	mov.w	r3, #4294967295
 800257c:	6563      	str	r3, [r4, #84]	@ 0x54
    add(box1);
 800257e:	4631      	mov	r1, r6
 8002580:	4620      	mov	r0, r4
 8002582:	f00e f8c3 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        boundingArea = calculateBoundingArea();
 8002586:	466e      	mov	r6, sp
    textArea1.setXY(9, 0);
 8002588:	462a      	mov	r2, r5
 800258a:	2109      	movs	r1, #9
 800258c:	4640      	mov	r0, r8
        color = newColor;
 800258e:	f04f 4a7f 	mov.w	sl, #4278190080	@ 0xff000000
 8002592:	f7ff ff89 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 8002596:	f8a4 508c 	strh.w	r5, [r4, #140]	@ 0x8c
        boundingArea = calculateBoundingArea();
 800259a:	4641      	mov	r1, r8
 800259c:	4630      	mov	r0, r6
        color = newColor;
 800259e:	f8c4 a088 	str.w	sl, [r4, #136]	@ 0x88
        boundingArea = calculateBoundingArea();
 80025a2:	f011 f8cd 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80025a6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80025aa:	f104 0394 	add.w	r3, r4, #148	@ 0x94
 80025ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80025b2:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8002694 <_ZN8BestBaseC1Ev+0x18c>
 80025b6:	f8cd 9010 	str.w	r9, [sp, #16]
 80025ba:	231e      	movs	r3, #30
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HEMW));
 80025bc:	a904      	add	r1, sp, #16
 80025be:	4640      	mov	r0, r8
 80025c0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80025c4:	f011 fb56 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1);
 80025c8:	4641      	mov	r1, r8
 80025ca:	4620      	mov	r0, r4
 80025cc:	f00e f89e 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bestText.setXY(9, 15);
 80025d0:	220f      	movs	r2, #15
 80025d2:	2109      	movs	r1, #9
 80025d4:	4638      	mov	r0, r7
 80025d6:	f7ff ff67 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80025da:	f8d4 30a0 	ldr.w	r3, [r4, #160]	@ 0xa0
        linespace = space;
 80025de:	f8a4 50d4 	strh.w	r5, [r4, #212]	@ 0xd4
        boundingArea = calculateBoundingArea();
 80025e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 80025e6:	f8c4 a0d0 	str.w	sl, [r4, #208]	@ 0xd0
        boundingArea = calculateBoundingArea();
 80025ea:	4639      	mov	r1, r7
 80025ec:	4630      	mov	r0, r6
 80025ee:	4798      	blx	r3
 80025f0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80025f4:	f104 03dc 	add.w	r3, r4, #220	@ 0xdc
 80025f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80025fc:	4b1d      	ldr	r3, [pc, #116]	@ (8002674 <_ZN8BestBaseC1Ev+0x16c>)
 80025fe:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(bestTextBuffer, BESTTEXT_SIZE, "%s", touchgfx::TypedText(T_BEST).getText());
 8002600:	f104 05ec 	add.w	r5, r4, #236	@ 0xec
 8002604:	b92b      	cbnz	r3, 8002612 <_ZN8BestBaseC1Ev+0x10a>
 8002606:	4b1c      	ldr	r3, [pc, #112]	@ (8002678 <_ZN8BestBaseC1Ev+0x170>)
 8002608:	4a1c      	ldr	r2, [pc, #112]	@ (800267c <_ZN8BestBaseC1Ev+0x174>)
 800260a:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800260c:	481c      	ldr	r0, [pc, #112]	@ (8002680 <_ZN8BestBaseC1Ev+0x178>)
 800260e:	f027 ffbd 	bl	802a58c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002612:	4b1c      	ldr	r3, [pc, #112]	@ (8002684 <_ZN8BestBaseC1Ev+0x17c>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002614:	881b      	ldrh	r3, [r3, #0]
 8002616:	2b1c      	cmp	r3, #28
 8002618:	d803      	bhi.n	8002622 <_ZN8BestBaseC1Ev+0x11a>
 800261a:	4b1b      	ldr	r3, [pc, #108]	@ (8002688 <_ZN8BestBaseC1Ev+0x180>)
 800261c:	4a17      	ldr	r2, [pc, #92]	@ (800267c <_ZN8BestBaseC1Ev+0x174>)
 800261e:	2161      	movs	r1, #97	@ 0x61
 8002620:	e7f4      	b.n	800260c <_ZN8BestBaseC1Ev+0x104>
        return texts->getText(typedTextId);
 8002622:	4b1a      	ldr	r3, [pc, #104]	@ (800268c <_ZN8BestBaseC1Ev+0x184>)
 8002624:	211c      	movs	r1, #28
 8002626:	6818      	ldr	r0, [r3, #0]
 8002628:	f004 fe38 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 800262c:	4a18      	ldr	r2, [pc, #96]	@ (8002690 <_ZN8BestBaseC1Ev+0x188>)
 800262e:	4603      	mov	r3, r0
 8002630:	210a      	movs	r1, #10
 8002632:	4628      	mov	r0, r5
 8002634:	f017 ff17 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    bestText.resizeToCurrentText();
 8002638:	4638      	mov	r0, r7
        wc1 = value;
 800263a:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
 800263e:	f011 faf9 	bl	8013c34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002642:	231d      	movs	r3, #29
    bestText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R8M0));
 8002644:	a904      	add	r1, sp, #16
 8002646:	4638      	mov	r0, r7
 8002648:	f8ad 3014 	strh.w	r3, [sp, #20]
 800264c:	f8cd 9010 	str.w	r9, [sp, #16]
 8002650:	f011 fb10 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(bestText);
 8002654:	4620      	mov	r0, r4
 8002656:	4639      	mov	r1, r7
 8002658:	f00e f858 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800265c:	4620      	mov	r0, r4
 800265e:	b006      	add	sp, #24
 8002660:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002664:	0802d0d0 	.word	0x0802d0d0
 8002668:	0802e454 	.word	0x0802e454
 800266c:	0802d040 	.word	0x0802d040
 8002670:	001e002d 	.word	0x001e002d
 8002674:	20013fa4 	.word	0x20013fa4
 8002678:	0802bbe5 	.word	0x0802bbe5
 800267c:	0802bce7 	.word	0x0802bce7
 8002680:	0802bc62 	.word	0x0802bc62
 8002684:	20013fa8 	.word	0x20013fa8
 8002688:	0802bca9 	.word	0x0802bca9
 800268c:	20013fb0 	.word	0x20013fb0
 8002690:	0802bd32 	.word	0x0802bd32
 8002694:	0802d030 	.word	0x0802d030

08002698 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002698:	4800      	ldr	r0, [pc, #0]	@ (800269c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800269a:	4770      	bx	lr
 800269c:	0802d15c 	.word	0x0802d15c

080026a0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80026a0:	2002      	movs	r0, #2
 80026a2:	4770      	bx	lr

080026a4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80026a4:	b513      	push	{r0, r1, r4, lr}
 80026a6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80026a8:	b151      	cbz	r1, 80026c0 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80026aa:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80026ac:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80026ae:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80026b2:	aa01      	add	r2, sp, #4
 80026b4:	689c      	ldr	r4, [r3, #8]
 80026b6:	f10d 0303 	add.w	r3, sp, #3
 80026ba:	47a0      	blx	r4
        return glyph;
    }
 80026bc:	b002      	add	sp, #8
 80026be:	bd10      	pop	{r4, pc}
            return 0;
 80026c0:	4608      	mov	r0, r1
 80026c2:	e7fb      	b.n	80026bc <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080026c4 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80026c4:	89c0      	ldrh	r0, [r0, #14]
 80026c6:	4770      	bx	lr

080026c8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80026c8:	8a00      	ldrh	r0, [r0, #16]
 80026ca:	4770      	bx	lr

080026cc <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80026cc:	88c0      	ldrh	r0, [r0, #6]
 80026ce:	4770      	bx	lr

080026d0 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80026d0:	8880      	ldrh	r0, [r0, #4]
 80026d2:	4770      	bx	lr

080026d4 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80026d4:	7a80      	ldrb	r0, [r0, #10]
    }
 80026d6:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 80026da:	4770      	bx	lr

080026dc <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80026dc:	7a80      	ldrb	r0, [r0, #10]
    }
 80026de:	09c0      	lsrs	r0, r0, #7
 80026e0:	4770      	bx	lr

080026e2 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 80026e2:	2000      	movs	r0, #0
 80026e4:	4770      	bx	lr
	...

080026e8 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 80026e8:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80026f0 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 80026ec:	4770      	bx	lr
 80026ee:	bf00      	nop
 80026f0:	00000000 	.word	0x00000000

080026f4 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80026f4:	4770      	bx	lr

080026f6 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80026f6:	4770      	bx	lr

080026f8 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80026f8:	4770      	bx	lr

080026fa <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80026fa:	4770      	bx	lr

080026fc <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80026fc:	4770      	bx	lr

080026fe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 80026fe:	4770      	bx	lr

08002700 <_ZN8touchgfx8CallbackI20Chosing_modeViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002700:	4770      	bx	lr

08002702 <_ZN20Chosing_modeViewBaseD1Ev>:
}

Chosing_modeViewBase::~Chosing_modeViewBase()
{

}
 8002702:	4770      	bx	lr

08002704 <_ZN20Chosing_modeViewBase11setupScreenEv>:

void Chosing_modeViewBase::setupScreen()
{

}
 8002704:	4770      	bx	lr

08002706 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed() const
    {
        return pressed;
 8002706:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800270a:	b14b      	cbz	r3, 8002720 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 800270c:	f100 026c 	add.w	r2, r0, #108	@ 0x6c
 8002710:	6812      	ldr	r2, [r2, #0]
 8002712:	65c2      	str	r2, [r0, #92]	@ 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002714:	b13b      	cbz	r3, 8002726 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002716:	f100 0374 	add.w	r3, r0, #116	@ 0x74
 800271a:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 800271c:	6603      	str	r3, [r0, #96]	@ 0x60
        T::handlePressedUpdated();
    }
 800271e:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002720:	f100 0268 	add.w	r2, r0, #104	@ 0x68
 8002724:	e7f4      	b.n	8002710 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002726:	f100 0370 	add.w	r3, r0, #112	@ 0x70
 800272a:	e7f6      	b.n	800271a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

0800272c <_ZN8touchgfx8CallbackI20Chosing_modeViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800272c:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800272e:	68c2      	ldr	r2, [r0, #12]
 8002730:	6844      	ldr	r4, [r0, #4]
 8002732:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002734:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002736:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800273a:	07d2      	lsls	r2, r2, #31
 800273c:	bf48      	it	mi
 800273e:	5962      	ldrmi	r2, [r4, r5]
 8002740:	689b      	ldr	r3, [r3, #8]
    }
 8002742:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002744:	bf48      	it	mi
 8002746:	58d3      	ldrmi	r3, [r2, r3]
 8002748:	4718      	bx	r3

0800274a <_ZNK8touchgfx8CallbackI20Chosing_modeViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    /**
     * Query if this object is valid.
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
 800274a:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 800274c:	6840      	ldr	r0, [r0, #4]
 800274e:	b130      	cbz	r0, 800275e <_ZNK8touchgfx8CallbackI20Chosing_modeViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002750:	689a      	ldr	r2, [r3, #8]
 8002752:	b91a      	cbnz	r2, 800275c <_ZNK8touchgfx8CallbackI20Chosing_modeViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8002754:	68d8      	ldr	r0, [r3, #12]
 8002756:	f000 0001 	and.w	r0, r0, #1
 800275a:	4770      	bx	lr
 800275c:	2001      	movs	r0, #1
    }
 800275e:	4770      	bx	lr

08002760 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002760:	f890 302d 	ldrb.w	r3, [r0, #45]	@ 0x2d
 8002764:	f880 305a 	strb.w	r3, [r0, #90]	@ 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002768:	4770      	bx	lr

0800276a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 800276a:	b510      	push	{r4, lr}
 800276c:	2178      	movs	r1, #120	@ 0x78
 800276e:	4604      	mov	r4, r0
 8002770:	f026 ffd0 	bl	8029714 <_ZdlPvj>
 8002774:	4620      	mov	r0, r4
 8002776:	bd10      	pop	{r4, pc}

08002778 <_ZN8touchgfx8CallbackI20Chosing_modeViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002778:	b510      	push	{r4, lr}
 800277a:	2110      	movs	r1, #16
 800277c:	4604      	mov	r4, r0
 800277e:	f026 ffc9 	bl	8029714 <_ZdlPvj>
 8002782:	4620      	mov	r0, r4
 8002784:	bd10      	pop	{r4, pc}

08002786 <_ZN20Chosing_modeViewBaseD0Ev>:
Chosing_modeViewBase::~Chosing_modeViewBase()
 8002786:	b510      	push	{r4, lr}
}
 8002788:	f44f 714c 	mov.w	r1, #816	@ 0x330
Chosing_modeViewBase::~Chosing_modeViewBase()
 800278c:	4604      	mov	r4, r0
}
 800278e:	f026 ffc1 	bl	8029714 <_ZdlPvj>
 8002792:	4620      	mov	r0, r4
 8002794:	bd10      	pop	{r4, pc}

08002796 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002796:	b510      	push	{r4, lr}
 8002798:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 800279a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800279c:	b150      	cbz	r0, 80027b4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 800279e:	6803      	ldr	r3, [r0, #0]
 80027a0:	68db      	ldr	r3, [r3, #12]
 80027a2:	4798      	blx	r3
 80027a4:	b130      	cbz	r0, 80027b4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 80027a6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80027a8:	6803      	ldr	r3, [r0, #0]
 80027aa:	4621      	mov	r1, r4
 80027ac:	689b      	ldr	r3, [r3, #8]
        }
    }
 80027ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 80027b2:	4718      	bx	r3
    }
 80027b4:	bd10      	pop	{r4, pc}

080027b6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 80027b6:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80027b8:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 80027ba:	f890 602c 	ldrb.w	r6, [r0, #44]	@ 0x2c
 80027be:	4604      	mov	r4, r0
 80027c0:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80027c2:	b90b      	cbnz	r3, 80027c8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x12>
 80027c4:	b116      	cbz	r6, 80027cc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
        {
            executeAction();
        }
    }
 80027c6:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80027c8:	2e00      	cmp	r6, #0
 80027ca:	d0fc      	beq.n	80027c6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 80027cc:	fab3 f383 	clz	r3, r3
 80027d0:	095b      	lsrs	r3, r3, #5
 80027d2:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
        handlePressedUpdated();
 80027d6:	6823      	ldr	r3, [r4, #0]
 80027d8:	4620      	mov	r0, r4
 80027da:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80027de:	4798      	blx	r3
            invalidate();
 80027e0:	6823      	ldr	r3, [r4, #0]
 80027e2:	4620      	mov	r0, r4
 80027e4:	695b      	ldr	r3, [r3, #20]
 80027e6:	4798      	blx	r3
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 80027e8:	2e00      	cmp	r6, #0
 80027ea:	d0ec      	beq.n	80027c6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
 80027ec:	792b      	ldrb	r3, [r5, #4]
 80027ee:	2b01      	cmp	r3, #1
 80027f0:	d1e9      	bne.n	80027c6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 80027f2:	6823      	ldr	r3, [r4, #0]
 80027f4:	4620      	mov	r0, r4
 80027f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
    }
 80027fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 80027fe:	4718      	bx	r3

08002800 <_ZN20Chosing_modeViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Chosing_modeViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8002800:	b538      	push	{r3, r4, r5, lr}
    if (&src == &flexButton1)
 8002802:	f100 03e0 	add.w	r3, r0, #224	@ 0xe0
 8002806:	4299      	cmp	r1, r3
{
 8002808:	4604      	mov	r4, r0
 800280a:	460d      	mov	r5, r1
    if (&src == &flexButton1)
 800280c:	d103      	bne.n	8002816 <_ZN20Chosing_modeViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~Chosing_modeViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800280e:	f014 f8c5 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When flexButton1 clicked change screen to SelectedGameDesign
        //Go to SelectedGameDesign with screen transition towards East
        application().gotoSelectedGameDesignScreenSlideTransitionEast();
 8002812:	f000 fcc1 	bl	8003198 <_ZN23FrontendApplicationBase47gotoSelectedGameDesignScreenSlideTransitionEastEv>
    }
    if (&src == &flexButton2)
 8002816:	f504 73ac 	add.w	r3, r4, #344	@ 0x158
 800281a:	429d      	cmp	r5, r3
 800281c:	d103      	bne.n	8002826 <_ZN20Chosing_modeViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
 800281e:	f014 f8bd 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When flexButton2 clicked change screen to Screen5x5_superMerging
        //Go to Screen5x5_superMerging with screen transition towards East
        application().gotoScreen5x5_superMergingScreenSlideTransitionEast();
 8002822:	f000 fc69 	bl	80030f8 <_ZN23FrontendApplicationBase51gotoScreen5x5_superMergingScreenSlideTransitionEastEv>
    }
    if (&src == &flexButton3)
 8002826:	f504 74e8 	add.w	r4, r4, #464	@ 0x1d0
 800282a:	42a5      	cmp	r5, r4
 800282c:	d105      	bne.n	800283a <_ZN20Chosing_modeViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3a>
 800282e:	f014 f8b5 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When flexButton3 clicked change screen to Screen5x5_letterMerging
        //Go to Screen5x5_letterMerging with screen transition towards East
        application().gotoScreen5x5_letterMergingScreenSlideTransitionEast();
    }
}
 8002832:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoScreen5x5_letterMergingScreenSlideTransitionEast();
 8002836:	f000 bc8f 	b.w	8003158 <_ZN23FrontendApplicationBase52gotoScreen5x5_letterMergingScreenSlideTransitionEastEv>
}
 800283a:	bd38      	pop	{r3, r4, r5, pc}

0800283c <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800283c:	b570      	push	{r4, r5, r6, lr}
 800283e:	4604      	mov	r4, r0
 8002840:	461d      	mov	r5, r3
 8002842:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002846:	f7ff fe2f 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800284a:	6823      	ldr	r3, [r4, #0]
 800284c:	4629      	mov	r1, r5
 800284e:	4620      	mov	r0, r4
 8002850:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002852:	4798      	blx	r3
        setHeight(height);
 8002854:	6823      	ldr	r3, [r4, #0]
 8002856:	4631      	mov	r1, r6
 8002858:	4620      	mov	r0, r4
 800285a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 800285c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002860:	4718      	bx	r3
	...

08002864 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002864:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002866:	2226      	movs	r2, #38	@ 0x26
    Box()
 8002868:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 800286a:	2100      	movs	r1, #0
 800286c:	f028 f895 	bl	802a99a <memset>
 8002870:	4620      	mov	r0, r4
 8002872:	f7ff fe07 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 8002876:	4b04      	ldr	r3, [pc, #16]	@ (8002888 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002878:	6023      	str	r3, [r4, #0]
 800287a:	23ff      	movs	r3, #255	@ 0xff
 800287c:	f884 3026 	strb.w	r3, [r4, #38]	@ 0x26
 8002880:	2300      	movs	r3, #0
 8002882:	62a3      	str	r3, [r4, #40]	@ 0x28
    }
 8002884:	4620      	mov	r0, r4
 8002886:	bd10      	pop	{r4, pc}
 8002888:	0802e454 	.word	0x0802e454

0800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 800288c:	b570      	push	{r4, r5, r6, lr}
 800288e:	4604      	mov	r4, r0
 8002890:	f7ff fdf8 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 8002894:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
        : T(), up(), down()
 8002898:	4626      	mov	r6, r4
 800289a:	85a3      	strh	r3, [r4, #44]	@ 0x2c
        touchable = touch;
 800289c:	2301      	movs	r3, #1
 800289e:	2500      	movs	r5, #0
 80028a0:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 80028a4:	4b0d      	ldr	r3, [pc, #52]	@ (80028dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x50>)
 80028a6:	62a5      	str	r5, [r4, #40]	@ 0x28
 80028a8:	6325      	str	r5, [r4, #48]	@ 0x30
 80028aa:	f846 3b34 	str.w	r3, [r6], #52
        : Box(), borderColor(0), borderSize(0)
 80028ae:	4630      	mov	r0, r6
 80028b0:	f7ff ffd8 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 80028b4:	4b0a      	ldr	r3, [pc, #40]	@ (80028e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x54>)
 80028b6:	6363      	str	r3, [r4, #52]	@ 0x34
        borderBox.setXY(0, 0);
 80028b8:	462a      	mov	r2, r5
 80028ba:	4629      	mov	r1, r5
 80028bc:	4630      	mov	r0, r6
        : color(0)
 80028be:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
 80028c2:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
        : color(col)
 80028c6:	6625      	str	r5, [r4, #96]	@ 0x60
 80028c8:	f8a4 5064 	strh.w	r5, [r4, #100]	@ 0x64
 80028cc:	f7ff fdec 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 80028d0:	4620      	mov	r0, r4
 80028d2:	4631      	mov	r1, r6
 80028d4:	f00d ff1a 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80028d8:	4620      	mov	r0, r4
 80028da:	bd70      	pop	{r4, r5, r6, pc}
 80028dc:	0802d18c 	.word	0x0802d18c
 80028e0:	0802e4bc 	.word	0x0802e4bc

080028e4 <_ZN20Chosing_modeViewBaseC1Ev>:
Chosing_modeViewBase::Chosing_modeViewBase() :
 80028e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80028e8:	4604      	mov	r4, r0
 80028ea:	b08f      	sub	sp, #60	@ 0x3c
    flexButtonCallback(this, &Chosing_modeViewBase::flexButtonCallbackHandler)
 80028ec:	46a0      	mov	r8, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80028ee:	2500      	movs	r5, #0
 80028f0:	f016 f8ca 	bl	8018a88 <_ZN8touchgfx6ScreenC1Ev>
 80028f4:	4bac      	ldr	r3, [pc, #688]	@ (8002ba8 <_ZN20Chosing_modeViewBaseC1Ev+0x2c4>)
 80028f6:	63e5      	str	r5, [r4, #60]	@ 0x3c
 80028f8:	f848 3b40 	str.w	r3, [r8], #64
 80028fc:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 8002900:	4640      	mov	r0, r8
 8002902:	f7ff ffaf 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 8002906:	f104 0798 	add.w	r7, r4, #152	@ 0x98
 800290a:	4650      	mov	r0, sl
 800290c:	f7ff ffaa 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 8002910:	4638      	mov	r0, r7
 8002912:	f7ff fdd7 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8002916:	f104 03e0 	add.w	r3, r4, #224	@ 0xe0
 800291a:	4618      	mov	r0, r3
 800291c:	9304      	str	r3, [sp, #16]
 800291e:	f7ff ffb5 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002922:	f504 73ac 	add.w	r3, r4, #344	@ 0x158
 8002926:	4618      	mov	r0, r3
 8002928:	9305      	str	r3, [sp, #20]
 800292a:	f7ff ffaf 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800292e:	f504 73e8 	add.w	r3, r4, #464	@ 0x1d0
 8002932:	4618      	mov	r0, r3
 8002934:	9306      	str	r3, [sp, #24]
 8002936:	f7ff ffa9 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800293a:	f504 7312 	add.w	r3, r4, #584	@ 0x248
 800293e:	4618      	mov	r0, r3
 8002940:	9302      	str	r3, [sp, #8]
 8002942:	f7ff fdbf 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8002946:	f504 7324 	add.w	r3, r4, #656	@ 0x290
 800294a:	f504 7936 	add.w	r9, r4, #728	@ 0x2d8
 800294e:	4618      	mov	r0, r3
 8002950:	9303      	str	r3, [sp, #12]
 8002952:	f7ff fdb7 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8002956:	4648      	mov	r0, r9
 8002958:	f7ff fdb4 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800295c:	4b93      	ldr	r3, [pc, #588]	@ (8002bac <_ZN20Chosing_modeViewBaseC1Ev+0x2c8>)
 800295e:	e9c4 34c8 	strd	r3, r4, [r4, #800]	@ 0x320
 8002962:	4b93      	ldr	r3, [pc, #588]	@ (8002bb0 <_ZN20Chosing_modeViewBaseC1Ev+0x2cc>)
    __background.setPosition(0, 0, 240, 320);
 8002964:	f44f 7ba0 	mov.w	fp, #320	@ 0x140
 8002968:	e9c4 35ca 	strd	r3, r5, [r4, #808]	@ 0x328
 800296c:	462a      	mov	r2, r5
 800296e:	f8cd b000 	str.w	fp, [sp]
 8002972:	4629      	mov	r1, r5
 8002974:	4640      	mov	r0, r8
 8002976:	23f0      	movs	r3, #240	@ 0xf0
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002978:	1d26      	adds	r6, r4, #4
 800297a:	f7ff ff5f 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800297e:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002982:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002984:	4641      	mov	r1, r8
 8002986:	4630      	mov	r0, r6
 8002988:	f00d fec0 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 240, 320);
 800298c:	462a      	mov	r2, r5
 800298e:	f8cd b000 	str.w	fp, [sp]
 8002992:	4629      	mov	r1, r5
 8002994:	4650      	mov	r0, sl
 8002996:	23f0      	movs	r3, #240	@ 0xf0
 8002998:	f7ff ff50 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800299c:	4b85      	ldr	r3, [pc, #532]	@ (8002bb4 <_ZN20Chosing_modeViewBaseC1Ev+0x2d0>)
 800299e:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 80029a2:	4651      	mov	r1, sl
 80029a4:	4630      	mov	r0, r6
 80029a6:	f00d feb1 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(54, 28);
 80029aa:	221c      	movs	r2, #28
 80029ac:	4638      	mov	r0, r7
 80029ae:	2136      	movs	r1, #54	@ 0x36
 80029b0:	f7ff fd7a 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80029b4:	f10d 0820 	add.w	r8, sp, #32
        color = newColor;
 80029b8:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80029bc:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
        boundingArea = calculateBoundingArea();
 80029c0:	4639      	mov	r1, r7
 80029c2:	4640      	mov	r0, r8
        linespace = space;
 80029c4:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        boundingArea = calculateBoundingArea();
 80029c8:	f010 feba 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80029cc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80029d0:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
 80029d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80029d8:	f8df b1ec 	ldr.w	fp, [pc, #492]	@ 8002bc8 <_ZN20Chosing_modeViewBaseC1Ev+0x2e4>
 80029dc:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 80029e0:	2329      	movs	r3, #41	@ 0x29
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y624));
 80029e2:	a90c      	add	r1, sp, #48	@ 0x30
 80029e4:	4638      	mov	r0, r7
 80029e6:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80029ea:	f011 f943 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80029ee:	4639      	mov	r1, r7
 80029f0:	4630      	mov	r0, r6
        borderBox.setPosition(x, y, width, height);
 80029f2:	2732      	movs	r7, #50	@ 0x32
 80029f4:	f00d fe8a 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029f8:	462a      	mov	r2, r5
 80029fa:	4629      	mov	r1, r5
 80029fc:	f504 708a 	add.w	r0, r4, #276	@ 0x114
 8002a00:	9700      	str	r7, [sp, #0]
 8002a02:	2384      	movs	r3, #132	@ 0x84
 8002a04:	f7ff ff1a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8002a08:	4b6b      	ldr	r3, [pc, #428]	@ (8002bb8 <_ZN20Chosing_modeViewBaseC1Ev+0x2d4>)
 8002a0a:	4a6c      	ldr	r2, [pc, #432]	@ (8002bbc <_ZN20Chosing_modeViewBaseC1Ev+0x2d8>)
        borderDown = borderColorPressed;
 8002a0c:	496c      	ldr	r1, [pc, #432]	@ (8002bc0 <_ZN20Chosing_modeViewBaseC1Ev+0x2dc>)
 8002a0e:	486d      	ldr	r0, [pc, #436]	@ (8002bc4 <_ZN20Chosing_modeViewBaseC1Ev+0x2e0>)
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002a10:	f04f 0a05 	mov.w	sl, #5
        down = colorPressed;
 8002a14:	e9c4 3252 	strd	r3, r2, [r4, #328]	@ 0x148
        borderDown = borderColorPressed;
 8002a18:	e9c4 1054 	strd	r1, r0, [r4, #336]	@ 0x150
 8002a1c:	f8a4 a144 	strh.w	sl, [r4, #324]	@ 0x144
        handlePressedUpdated();
 8002a20:	9804      	ldr	r0, [sp, #16]
 8002a22:	f7ff fe70 	bl	8002706 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton1.setAction(flexButtonCallback);
 8002a26:	f504 7c48 	add.w	ip, r4, #800	@ 0x320
        action = &callback;
 8002a2a:	f8c4 c110 	str.w	ip, [r4, #272]	@ 0x110
    flexButton1.setPosition(54, 82, 132, 50);
 8002a2e:	9804      	ldr	r0, [sp, #16]
 8002a30:	9700      	str	r7, [sp, #0]
 8002a32:	2384      	movs	r3, #132	@ 0x84
 8002a34:	2252      	movs	r2, #82	@ 0x52
 8002a36:	2136      	movs	r1, #54	@ 0x36
    flexButton1.setAction(flexButtonCallback);
 8002a38:	f8cd c01c 	str.w	ip, [sp, #28]
    flexButton1.setPosition(54, 82, 132, 50);
 8002a3c:	f7ff fefe 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8002a40:	9904      	ldr	r1, [sp, #16]
 8002a42:	4630      	mov	r0, r6
 8002a44:	f00d fe62 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8002a48:	462a      	mov	r2, r5
 8002a4a:	4629      	mov	r1, r5
 8002a4c:	f504 70c6 	add.w	r0, r4, #396	@ 0x18c
 8002a50:	9700      	str	r7, [sp, #0]
 8002a52:	2384      	movs	r3, #132	@ 0x84
 8002a54:	f7ff fef2 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8002a58:	4b57      	ldr	r3, [pc, #348]	@ (8002bb8 <_ZN20Chosing_modeViewBaseC1Ev+0x2d4>)
 8002a5a:	4a58      	ldr	r2, [pc, #352]	@ (8002bbc <_ZN20Chosing_modeViewBaseC1Ev+0x2d8>)
        borderDown = borderColorPressed;
 8002a5c:	4958      	ldr	r1, [pc, #352]	@ (8002bc0 <_ZN20Chosing_modeViewBaseC1Ev+0x2dc>)
 8002a5e:	4859      	ldr	r0, [pc, #356]	@ (8002bc4 <_ZN20Chosing_modeViewBaseC1Ev+0x2e0>)
 8002a60:	f8a4 a1bc 	strh.w	sl, [r4, #444]	@ 0x1bc
        down = colorPressed;
 8002a64:	e9c4 3270 	strd	r3, r2, [r4, #448]	@ 0x1c0
        borderDown = borderColorPressed;
 8002a68:	e9c4 1072 	strd	r1, r0, [r4, #456]	@ 0x1c8
        handlePressedUpdated();
 8002a6c:	9805      	ldr	r0, [sp, #20]
 8002a6e:	f7ff fe4a 	bl	8002706 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
 8002a72:	9b07      	ldr	r3, [sp, #28]
 8002a74:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
    flexButton2.setPosition(54, 148, 132, 50);
 8002a78:	9805      	ldr	r0, [sp, #20]
 8002a7a:	9700      	str	r7, [sp, #0]
 8002a7c:	2384      	movs	r3, #132	@ 0x84
 8002a7e:	2294      	movs	r2, #148	@ 0x94
 8002a80:	2136      	movs	r1, #54	@ 0x36
 8002a82:	f7ff fedb 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8002a86:	9905      	ldr	r1, [sp, #20]
 8002a88:	4630      	mov	r0, r6
 8002a8a:	f00d fe3f 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8002a8e:	462a      	mov	r2, r5
 8002a90:	4629      	mov	r1, r5
 8002a92:	f504 7001 	add.w	r0, r4, #516	@ 0x204
 8002a96:	9700      	str	r7, [sp, #0]
 8002a98:	2384      	movs	r3, #132	@ 0x84
 8002a9a:	f7ff fecf 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8002a9e:	4b46      	ldr	r3, [pc, #280]	@ (8002bb8 <_ZN20Chosing_modeViewBaseC1Ev+0x2d4>)
 8002aa0:	4a46      	ldr	r2, [pc, #280]	@ (8002bbc <_ZN20Chosing_modeViewBaseC1Ev+0x2d8>)
        borderDown = borderColorPressed;
 8002aa2:	4947      	ldr	r1, [pc, #284]	@ (8002bc0 <_ZN20Chosing_modeViewBaseC1Ev+0x2dc>)
 8002aa4:	4847      	ldr	r0, [pc, #284]	@ (8002bc4 <_ZN20Chosing_modeViewBaseC1Ev+0x2e0>)
 8002aa6:	f8a4 a234 	strh.w	sl, [r4, #564]	@ 0x234
        down = colorPressed;
 8002aaa:	e9c4 328e 	strd	r3, r2, [r4, #568]	@ 0x238
        borderDown = borderColorPressed;
 8002aae:	e9c4 1090 	strd	r1, r0, [r4, #576]	@ 0x240
        handlePressedUpdated();
 8002ab2:	9806      	ldr	r0, [sp, #24]
 8002ab4:	f7ff fe27 	bl	8002706 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
 8002ab8:	9b07      	ldr	r3, [sp, #28]
 8002aba:	f8c4 3200 	str.w	r3, [r4, #512]	@ 0x200
    flexButton3.setPosition(54, 218, 132, 50);
 8002abe:	9806      	ldr	r0, [sp, #24]
 8002ac0:	9700      	str	r7, [sp, #0]
 8002ac2:	2384      	movs	r3, #132	@ 0x84
 8002ac4:	22da      	movs	r2, #218	@ 0xda
 8002ac6:	2136      	movs	r1, #54	@ 0x36
 8002ac8:	f7ff feb8 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8002acc:	9906      	ldr	r1, [sp, #24]
 8002ace:	4630      	mov	r0, r6
 8002ad0:	f00d fe1c 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_1.setXY(90, 100);
 8002ad4:	9802      	ldr	r0, [sp, #8]
 8002ad6:	2264      	movs	r2, #100	@ 0x64
 8002ad8:	215a      	movs	r1, #90	@ 0x5a
 8002ada:	f7ff fce5 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8002ade:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 8002ae2:	9902      	ldr	r1, [sp, #8]
        color = newColor;
 8002ae4:	f8c4 3278 	str.w	r3, [r4, #632]	@ 0x278
        boundingArea = calculateBoundingArea();
 8002ae8:	4640      	mov	r0, r8
        linespace = space;
 8002aea:	f8a4 527c 	strh.w	r5, [r4, #636]	@ 0x27c
        boundingArea = calculateBoundingArea();
 8002aee:	f010 fe27 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002af2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002af6:	f504 7321 	add.w	r3, r4, #644	@ 0x284
 8002afa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002afe:	2328      	movs	r3, #40	@ 0x28
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GOHS));
 8002b00:	9802      	ldr	r0, [sp, #8]
 8002b02:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8002b06:	a90c      	add	r1, sp, #48	@ 0x30
 8002b08:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8002b0c:	f011 f8b2 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b10:	9902      	ldr	r1, [sp, #8]
 8002b12:	4630      	mov	r0, r6
 8002b14:	f00d fdfa 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(62, 166);
 8002b18:	9803      	ldr	r0, [sp, #12]
 8002b1a:	22a6      	movs	r2, #166	@ 0xa6
 8002b1c:	213e      	movs	r1, #62	@ 0x3e
 8002b1e:	f7ff fcc3 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8002b22:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 8002b26:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8002b28:	f8c4 32c0 	str.w	r3, [r4, #704]	@ 0x2c0
        boundingArea = calculateBoundingArea();
 8002b2c:	4640      	mov	r0, r8
        linespace = space;
 8002b2e:	f8a4 52c4 	strh.w	r5, [r4, #708]	@ 0x2c4
        boundingArea = calculateBoundingArea();
 8002b32:	f010 fe05 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002b36:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002b3a:	f504 7333 	add.w	r3, r4, #716	@ 0x2cc
 8002b3e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002b42:	2327      	movs	r3, #39	@ 0x27
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NNX4));
 8002b44:	9803      	ldr	r0, [sp, #12]
 8002b46:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8002b4a:	a90c      	add	r1, sp, #48	@ 0x30
 8002b4c:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8002b50:	f011 f890 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b54:	9903      	ldr	r1, [sp, #12]
 8002b56:	4630      	mov	r0, r6
 8002b58:	f00d fdd8 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(94, 236);
 8002b5c:	22ec      	movs	r2, #236	@ 0xec
 8002b5e:	4648      	mov	r0, r9
 8002b60:	215e      	movs	r1, #94	@ 0x5e
 8002b62:	f7ff fca1 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8002b66:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002b6a:	f8c4 3308 	str.w	r3, [r4, #776]	@ 0x308
        boundingArea = calculateBoundingArea();
 8002b6e:	4649      	mov	r1, r9
 8002b70:	4640      	mov	r0, r8
        linespace = space;
 8002b72:	f8a4 530c 	strh.w	r5, [r4, #780]	@ 0x30c
        boundingArea = calculateBoundingArea();
 8002b76:	f010 fde3 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002b7a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002b7e:	f504 7345 	add.w	r3, r4, #788	@ 0x314
 8002b82:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002b86:	2326      	movs	r3, #38	@ 0x26
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I11J));
 8002b88:	a90c      	add	r1, sp, #48	@ 0x30
 8002b8a:	4648      	mov	r0, r9
 8002b8c:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8002b90:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8002b94:	f011 f86e 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b98:	4630      	mov	r0, r6
 8002b9a:	4649      	mov	r1, r9
 8002b9c:	f00d fdb6 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002ba0:	4620      	mov	r0, r4
 8002ba2:	b00f      	add	sp, #60	@ 0x3c
 8002ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ba8:	0802d240 	.word	0x0802d240
 8002bac:	0802d228 	.word	0x0802d228
 8002bb0:	08002801 	.word	0x08002801
 8002bb4:	ff735858 	.word	0xff735858
 8002bb8:	ff006699 	.word	0xff006699
 8002bbc:	ff0099cc 	.word	0xff0099cc
 8002bc0:	ff003366 	.word	0xff003366
 8002bc4:	ff336699 	.word	0xff336699
 8002bc8:	0802d030 	.word	0x0802d030

08002bcc <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002bcc:	4770      	bx	lr

08002bce <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002bce:	4770      	bx	lr

08002bd0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002bd0:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002bd4:	6808      	ldr	r0, [r1, #0]
 8002bd6:	6849      	ldr	r1, [r1, #4]
 8002bd8:	c303      	stmia	r3!, {r0, r1}
    }
 8002bda:	4770      	bx	lr

08002bdc <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002bdc:	4770      	bx	lr

08002bde <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002bde:	4770      	bx	lr

08002be0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002be0:	6041      	str	r1, [r0, #4]
    }
 8002be2:	4770      	bx	lr

08002be4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002be4:	4770      	bx	lr

08002be6 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002be6:	4770      	bx	lr

08002be8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8002be8:	4b06      	ldr	r3, [pc, #24]	@ (8002c04 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002bea:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002bee:	2300      	movs	r3, #0
 8002bf0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Chosing_mode

void FrontendApplicationBase::gotoChosing_modeScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoChosing_modeScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002bf4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002bf8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002bfc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoChosing_modeScreenNoTransition();
    }
 8002c00:	4770      	bx	lr
 8002c02:	bf00      	nop
 8002c04:	080034bd 	.word	0x080034bd

08002c08 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002c08:	2301      	movs	r3, #1
 8002c0a:	7203      	strb	r3, [r0, #8]
    }
 8002c0c:	4770      	bx	lr

08002c0e <_ZN8touchgfx15BlockTransition8tearDownEv>:
        }
    }

    virtual void tearDown()
    {
    }
 8002c0e:	4770      	bx	lr

08002c10 <_ZN8touchgfx15BlockTransition4initEv>:

    virtual void init()
    {
        Transition::init();
    }
 8002c10:	4770      	bx	lr

08002c12 <_ZN8touchgfx15BlockTransition10invalidateEv>:
     * Block transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8002c12:	4770      	bx	lr

08002c14 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
 8002c14:	4770      	bx	lr

08002c16 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EED1Ev>:
{
/**
 * A Transition that slides the new screen over the previous \e from the given direction.
 */
template <Direction templateDirection>
class CoverTransition : public Transition
 8002c16:	4770      	bx	lr

08002c18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8002c18:	4770      	bx	lr

08002c1a <_ZN8touchgfx15BlockTransitionD1Ev>:
class BlockTransition : public Transition
 8002c1a:	4770      	bx	lr

08002c1c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002c1c:	4770      	bx	lr

08002c1e <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv>:

            d = d->getNextSibling();
        }
    }

    virtual void init()
 8002c1e:	b538      	push	{r3, r4, r5, lr}
 8002c20:	4605      	mov	r5, r0
    {
        Transition::init();

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 8002c22:	6840      	ldr	r0, [r0, #4]
 8002c24:	6803      	ldr	r3, [r0, #0]
 8002c26:	69db      	ldr	r3, [r3, #28]
 8002c28:	4798      	blx	r3
 8002c2a:	4604      	mov	r4, r0
        while (d)
 8002c2c:	b904      	cbnz	r4, 8002c30 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0x12>
                break;
            }

            d = d->getNextSibling();
        }
    }
 8002c2e:	bd38      	pop	{r3, r4, r5, pc}
                d->setX(d->getX() - targetValue);
 8002c30:	88a1      	ldrh	r1, [r4, #4]
 8002c32:	89ab      	ldrh	r3, [r5, #12]
 8002c34:	1ac9      	subs	r1, r1, r3
 8002c36:	6823      	ldr	r3, [r4, #0]
 8002c38:	4620      	mov	r0, r4
 8002c3a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002c3c:	b209      	sxth	r1, r1
 8002c3e:	4798      	blx	r3
        return nextSibling;
 8002c40:	69a4      	ldr	r4, [r4, #24]
 8002c42:	e7f3      	b.n	8002c2c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0xe>

08002c44 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
    {
        Transition::init();
    }
 8002c44:	4770      	bx	lr

08002c46 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002c46:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002c48:	68c2      	ldr	r2, [r0, #12]
 8002c4a:	6841      	ldr	r1, [r0, #4]
 8002c4c:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002c4e:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002c50:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002c54:	07d2      	lsls	r2, r2, #31
 8002c56:	bf48      	it	mi
 8002c58:	590a      	ldrmi	r2, [r1, r4]
 8002c5a:	689b      	ldr	r3, [r3, #8]
    }
 8002c5c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002c60:	bf48      	it	mi
 8002c62:	58d3      	ldrmi	r3, [r2, r3]
 8002c64:	4718      	bx	r3

08002c66 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002c66:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002c68:	6840      	ldr	r0, [r0, #4]
 8002c6a:	b130      	cbz	r0, 8002c7a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002c6c:	689a      	ldr	r2, [r3, #8]
 8002c6e:	b91a      	cbnz	r2, 8002c78 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002c70:	68d8      	ldr	r0, [r3, #12]
 8002c72:	f000 0001 	and.w	r0, r0, #1
 8002c76:	4770      	bx	lr
 8002c78:	2001      	movs	r0, #1
    }
 8002c7a:	4770      	bx	lr

08002c7c <_ZN8touchgfx15BlockTransitionD0Ev>:
 8002c7c:	b510      	push	{r4, lr}
 8002c7e:	2114      	movs	r1, #20
 8002c80:	4604      	mov	r4, r0
 8002c82:	f026 fd47 	bl	8029714 <_ZdlPvj>
 8002c86:	4620      	mov	r0, r4
 8002c88:	bd10      	pop	{r4, pc}

08002c8a <_ZN8touchgfx12NoTransitionD0Ev>:
 8002c8a:	b510      	push	{r4, lr}
 8002c8c:	210c      	movs	r1, #12
 8002c8e:	4604      	mov	r4, r0
 8002c90:	f026 fd40 	bl	8029714 <_ZdlPvj>
 8002c94:	4620      	mov	r0, r4
 8002c96:	bd10      	pop	{r4, pc}

08002c98 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EED0Ev>:
class CoverTransition : public Transition
 8002c98:	b510      	push	{r4, lr}
 8002c9a:	2110      	movs	r1, #16
 8002c9c:	4604      	mov	r4, r0
 8002c9e:	f026 fd39 	bl	8029714 <_ZdlPvj>
 8002ca2:	4620      	mov	r0, r4
 8002ca4:	bd10      	pop	{r4, pc}

08002ca6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8002ca6:	b510      	push	{r4, lr}
 8002ca8:	2114      	movs	r1, #20
 8002caa:	4604      	mov	r4, r0
 8002cac:	f026 fd32 	bl	8029714 <_ZdlPvj>
 8002cb0:	4620      	mov	r0, r4
 8002cb2:	bd10      	pop	{r4, pc}

08002cb4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002cb4:	b510      	push	{r4, lr}
 8002cb6:	2110      	movs	r1, #16
 8002cb8:	4604      	mov	r4, r0
 8002cba:	f026 fd2b 	bl	8029714 <_ZdlPvj>
 8002cbe:	4620      	mov	r0, r4
 8002cc0:	bd10      	pop	{r4, pc}

08002cc2 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002cc2:	b510      	push	{r4, lr}
 8002cc4:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002cc8:	4604      	mov	r4, r0
 8002cca:	f026 fd23 	bl	8029714 <_ZdlPvj>
 8002cce:	4620      	mov	r0, r4
 8002cd0:	bd10      	pop	{r4, pc}

08002cd2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 8002cd2:	b510      	push	{r4, lr}
 8002cd4:	2140      	movs	r1, #64	@ 0x40
 8002cd6:	4604      	mov	r4, r0
 8002cd8:	f026 fd1c 	bl	8029714 <_ZdlPvj>
 8002cdc:	4620      	mov	r0, r4
 8002cde:	bd10      	pop	{r4, pc}

08002ce0 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002ce0:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002ce2:	f013 fe5b 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
 8002ce6:	6803      	ldr	r3, [r0, #0]
    }
 8002ce8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002cec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002cee:	4718      	bx	r3

08002cf0 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE10invalidateEv>:

    virtual void invalidate()
 8002cf0:	b510      	push	{r4, lr}
    {
        // The last step when finalizing a transition (see MVPApplication::finalizeTransition)
        // is to call invalidate on the transition. For the CoverTransition we want to erase any
        // invalidated areas that might have been added when setting up the new screen, which
        // is the first step of finalizing a transition (see MVPApplication::finalizeTransition).
        Application::getInstance()->clearCachedAreas();
 8002cf2:	f013 fe53 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
 8002cf6:	6803      	ldr	r3, [r0, #0]
    }
 8002cf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->clearCachedAreas();
 8002cfc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002cfe:	4718      	bx	r3

08002d00 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:

    virtual void invalidate()
 8002d00:	b510      	push	{r4, lr}
    {
        // The last step when finalizing a transition (see MVPApplication::finalizeTransition)
        // is to call invalidate on the transition. For the WipeTransition we want to erase any
        // invalidated areas that might have been added when setting up the new screen, which
        // is the first step of finalizing a transition (see MVPApplication::finalizeTransition).
        Application::getInstance()->clearCachedAreas();
 8002d02:	f013 fe4b 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
 8002d06:	6803      	ldr	r3, [r0, #0]
    }
 8002d08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->clearCachedAreas();
 8002d0c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002d0e:	4718      	bx	r3

08002d10 <_ZN8touchgfx15BlockTransition15handleTickEventEv>:
    virtual void handleTickEvent()
 8002d10:	b570      	push	{r4, r5, r6, lr}
 8002d12:	4604      	mov	r4, r0
 8002d14:	b0b2      	sub	sp, #200	@ 0xc8
        const int indeces[animationSteps] = { 20, 11, 47, 14, 10, 0, 18, 28, 13, 6, 2, 41,
 8002d16:	491e      	ldr	r1, [pc, #120]	@ (8002d90 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x80>)
 8002d18:	22c0      	movs	r2, #192	@ 0xc0
 8002d1a:	a802      	add	r0, sp, #8
 8002d1c:	f027 ff0d 	bl	802ab3a <memcpy>
        if (animationCounter >= animationSteps)
 8002d20:	7c23      	ldrb	r3, [r4, #16]
 8002d22:	2b2f      	cmp	r3, #47	@ 0x2f
 8002d24:	d903      	bls.n	8002d2e <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1e>
            done = true;
 8002d26:	2301      	movs	r3, #1
 8002d28:	7223      	strb	r3, [r4, #8]
    }
 8002d2a:	b032      	add	sp, #200	@ 0xc8
 8002d2c:	bd70      	pop	{r4, r5, r6, pc}
        if (animationCounter == 0 && HAL::USE_DOUBLE_BUFFERING)
 8002d2e:	b933      	cbnz	r3, 8002d3e <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x2e>
 8002d30:	4b18      	ldr	r3, [pc, #96]	@ (8002d94 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x84>)
 8002d32:	781b      	ldrb	r3, [r3, #0]
 8002d34:	b11b      	cbz	r3, 8002d3e <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x2e>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002d36:	f013 fe31 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
 8002d3a:	f013 fe35 	bl	80169a8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
        while (blocks_per_tick-- > 0 && animationCounter <= animationSteps)
 8002d3e:	2502      	movs	r5, #2
 8002d40:	7c23      	ldrb	r3, [r4, #16]
 8002d42:	2b30      	cmp	r3, #48	@ 0x30
 8002d44:	d8f1      	bhi.n	8002d2a <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1a>
            const int index = indeces[animationCounter];
 8002d46:	aa32      	add	r2, sp, #200	@ 0xc8
 8002d48:	eb02 0383 	add.w	r3, r2, r3, lsl #2
            const int16_t x = (index % blocksHorizontal) * blockWidth;
 8002d4c:	89e6      	ldrh	r6, [r4, #14]
            const int index = indeces[animationCounter];
 8002d4e:	f853 3cc0 	ldr.w	r3, [r3, #-192]
            const int16_t x = (index % blocksHorizontal) * blockWidth;
 8002d52:	8960      	ldrh	r0, [r4, #10]
 8002d54:	fb93 f2f6 	sdiv	r2, r3, r6
 8002d58:	fb06 3312 	mls	r3, r6, r2, r3
 8002d5c:	fb13 f300 	smulbb	r3, r3, r0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d60:	f8ad 0004 	strh.w	r0, [sp, #4]
            screenContainer->invalidateRect(invRect);
 8002d64:	6860      	ldr	r0, [r4, #4]
            const int16_t y = (index / blocksHorizontal) * blockHeight;
 8002d66:	89a1      	ldrh	r1, [r4, #12]
 8002d68:	f8ad 3000 	strh.w	r3, [sp]
            screenContainer->invalidateRect(invRect);
 8002d6c:	6803      	ldr	r3, [r0, #0]
 8002d6e:	f8ad 1006 	strh.w	r1, [sp, #6]
            const int16_t y = (index / blocksHorizontal) * blockHeight;
 8002d72:	fb12 f201 	smulbb	r2, r2, r1
            screenContainer->invalidateRect(invRect);
 8002d76:	691b      	ldr	r3, [r3, #16]
 8002d78:	f8ad 2002 	strh.w	r2, [sp, #2]
 8002d7c:	4669      	mov	r1, sp
 8002d7e:	4798      	blx	r3
            animationCounter++;
 8002d80:	7c23      	ldrb	r3, [r4, #16]
        while (blocks_per_tick-- > 0 && animationCounter <= animationSteps)
 8002d82:	2d01      	cmp	r5, #1
            animationCounter++;
 8002d84:	f103 0301 	add.w	r3, r3, #1
 8002d88:	7423      	strb	r3, [r4, #16]
        while (blocks_per_tick-- > 0 && animationCounter <= animationSteps)
 8002d8a:	d0ce      	beq.n	8002d2a <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1a>
 8002d8c:	2501      	movs	r5, #1
 8002d8e:	e7d7      	b.n	8002d40 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x30>
 8002d90:	0802b5e0 	.word	0x0802b5e0
 8002d94:	20013f4a 	.word	0x20013f4a

08002d98 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002d98:	b513      	push	{r0, r1, r4, lr}
 8002d9a:	4604      	mov	r4, r0
        animationCounter++;
 8002d9c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8002d9e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002da0:	3001      	adds	r0, #1
 8002da2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002da4:	4298      	cmp	r0, r3
        animationCounter++;
 8002da6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8002da8:	d905      	bls.n	8002db6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8002daa:	2301      	movs	r3, #1
 8002dac:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002dae:	2300      	movs	r3, #0
 8002db0:	72a3      	strb	r3, [r4, #10]
    }
 8002db2:	b002      	add	sp, #8
 8002db4:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002db6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002dba:	2100      	movs	r1, #0
 8002dbc:	f016 f816 	bl	8018dec <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002dc0:	07c3      	lsls	r3, r0, #31
 8002dc2:	d507      	bpl.n	8002dd4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x3c>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002dc4:	2800      	cmp	r0, #0
 8002dc6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002dca:	bfc8      	it	gt
 8002dcc:	2301      	movgt	r3, #1
 8002dce:	fa13 f080 	uxtah	r0, r3, r0
 8002dd2:	b200      	sxth	r0, r0
                rect.x = HAL::DISPLAY_WIDTH - calculatedValue;
 8002dd4:	4a14      	ldr	r2, [pc, #80]	@ (8002e28 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x90>)
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002dd6:	81e0      	strh	r0, [r4, #14]
                rect.x = HAL::DISPLAY_WIDTH - calculatedValue;
 8002dd8:	8812      	ldrh	r2, [r2, #0]
        : x(0), y(0), width(0), height(0)
 8002dda:	2300      	movs	r3, #0
 8002ddc:	f8ad 3002 	strh.w	r3, [sp, #2]
 8002de0:	b283      	uxth	r3, r0
 8002de2:	1ad2      	subs	r2, r2, r3
 8002de4:	f8ad 2000 	strh.w	r2, [sp]
                rect.width = calculatedValue - prevCalculatedValue;
 8002de8:	8a22      	ldrh	r2, [r4, #16]
        prevCalculatedValue = calculatedValue;
 8002dea:	8220      	strh	r0, [r4, #16]
                rect.width = calculatedValue - prevCalculatedValue;
 8002dec:	1a9b      	subs	r3, r3, r2
 8002dee:	f8ad 3004 	strh.w	r3, [sp, #4]
                rect.height = HAL::DISPLAY_HEIGHT;
 8002df2:	4b0e      	ldr	r3, [pc, #56]	@ (8002e2c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
 8002df4:	881b      	ldrh	r3, [r3, #0]
 8002df6:	f8ad 3006 	strh.w	r3, [sp, #6]
        Application::getInstance()->invalidateArea(rect);
 8002dfa:	f013 fdcf 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
 8002dfe:	6803      	ldr	r3, [r0, #0]
 8002e00:	aa02      	add	r2, sp, #8
 8002e02:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e04:	e912 0006 	ldmdb	r2, {r1, r2}
 8002e08:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002e0a:	7aa3      	ldrb	r3, [r4, #10]
 8002e0c:	2b01      	cmp	r3, #1
 8002e0e:	d1d0      	bne.n	8002db2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8002e10:	4b07      	ldr	r3, [pc, #28]	@ (8002e30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
 8002e12:	781b      	ldrb	r3, [r3, #0]
 8002e14:	2b00      	cmp	r3, #0
 8002e16:	d0cc      	beq.n	8002db2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002e18:	f013 fdc0 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002e1c:	b002      	add	sp, #8
 8002e1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002e22:	f013 bdc1 	b.w	80169a8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
 8002e26:	bf00      	nop
 8002e28:	20013f40 	.word	0x20013f40
 8002e2c:	20013f42 	.word	0x20013f42
 8002e30:	20013f4a 	.word	0x20013f4a

08002e34 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002e34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002e36:	4605      	mov	r5, r0
        animationCounter++;
 8002e38:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8002e3a:	7a6b      	ldrb	r3, [r5, #9]
        animationCounter++;
 8002e3c:	3001      	adds	r0, #1
 8002e3e:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002e40:	4298      	cmp	r0, r3
        animationCounter++;
 8002e42:	72a8      	strb	r0, [r5, #10]
        if (animationCounter > animationSteps)
 8002e44:	d905      	bls.n	8002e52 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8002e46:	2301      	movs	r3, #1
 8002e48:	722b      	strb	r3, [r5, #8]
            animationCounter = 0;
 8002e4a:	2300      	movs	r3, #0
 8002e4c:	72ab      	strb	r3, [r5, #10]
    }
 8002e4e:	b003      	add	sp, #12
 8002e50:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002e52:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
        const int16_t oldValue = calculatedValue;
 8002e56:	f9b5 400e 	ldrsh.w	r4, [r5, #14]
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002e5a:	2100      	movs	r1, #0
 8002e5c:	f015 ffc6 	bl	8018dec <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002e60:	07c3      	lsls	r3, r0, #31
 8002e62:	d507      	bpl.n	8002e74 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x40>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002e64:	2800      	cmp	r0, #0
 8002e66:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002e6a:	bfc8      	it	gt
 8002e6c:	2301      	movgt	r3, #1
 8002e6e:	fa13 f080 	uxtah	r0, r3, r0
 8002e72:	b200      	sxth	r0, r0
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002e74:	7aab      	ldrb	r3, [r5, #10]
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002e76:	81e8      	strh	r0, [r5, #14]
        const int16_t relativeValue = calculatedValue - oldValue;
 8002e78:	1b04      	subs	r4, r0, r4
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002e7a:	2b01      	cmp	r3, #1
        const int16_t relativeValue = calculatedValue - oldValue;
 8002e7c:	b2a4      	uxth	r4, r4
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002e7e:	d106      	bne.n	8002e8e <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5a>
 8002e80:	4b17      	ldr	r3, [pc, #92]	@ (8002ee0 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xac>)
 8002e82:	781b      	ldrb	r3, [r3, #0]
 8002e84:	b11b      	cbz	r3, 8002e8e <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8002e86:	f013 fd89 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
 8002e8a:	f013 fd8d 	bl	80169a8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            rect.x = HAL::DISPLAY_WIDTH + calculatedValue;
 8002e8e:	4a15      	ldr	r2, [pc, #84]	@ (8002ee4 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb0>)
 8002e90:	2300      	movs	r3, #0
 8002e92:	8812      	ldrh	r2, [r2, #0]
 8002e94:	f8ad 3002 	strh.w	r3, [sp, #2]
 8002e98:	89eb      	ldrh	r3, [r5, #14]
 8002e9a:	441a      	add	r2, r3
            rect.width = -calculatedValue;
 8002e9c:	425b      	negs	r3, r3
 8002e9e:	f8ad 3004 	strh.w	r3, [sp, #4]
            rect.height = HAL::DISPLAY_HEIGHT;
 8002ea2:	4b11      	ldr	r3, [pc, #68]	@ (8002ee8 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb4>)
            rect.x = HAL::DISPLAY_WIDTH + calculatedValue;
 8002ea4:	f8ad 2000 	strh.w	r2, [sp]
            rect.height = HAL::DISPLAY_HEIGHT;
 8002ea8:	881b      	ldrh	r3, [r3, #0]
 8002eaa:	f8ad 3006 	strh.w	r3, [sp, #6]
        Application::getInstance()->invalidateArea(rect);
 8002eae:	f013 fd75 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
 8002eb2:	6803      	ldr	r3, [r0, #0]
 8002eb4:	aa02      	add	r2, sp, #8
 8002eb6:	e912 0006 	ldmdb	r2, {r1, r2}
 8002eba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ebc:	4798      	blx	r3
        Drawable* d = screenContainer->getFirstChild();
 8002ebe:	6868      	ldr	r0, [r5, #4]
 8002ec0:	6803      	ldr	r3, [r0, #0]
 8002ec2:	69db      	ldr	r3, [r3, #28]
 8002ec4:	4798      	blx	r3
 8002ec6:	4605      	mov	r5, r0
        while (d)
 8002ec8:	2d00      	cmp	r5, #0
 8002eca:	d0c0      	beq.n	8002e4e <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
                d->setX(d->getX() + relativeValue);
 8002ecc:	88a9      	ldrh	r1, [r5, #4]
 8002ece:	682b      	ldr	r3, [r5, #0]
 8002ed0:	4421      	add	r1, r4
 8002ed2:	4628      	mov	r0, r5
 8002ed4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ed6:	b209      	sxth	r1, r1
 8002ed8:	4798      	blx	r3
 8002eda:	69ad      	ldr	r5, [r5, #24]
 8002edc:	e7f4      	b.n	8002ec8 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>
 8002ede:	bf00      	nop
 8002ee0:	20013f4a 	.word	0x20013f4a
 8002ee4:	20013f40 	.word	0x20013f40
 8002ee8:	20013f42 	.word	0x20013f42

08002eec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8002eec:	4b05      	ldr	r3, [pc, #20]	@ (8002f04 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 8002eee:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 8002ef0:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8002ef2:	b12b      	cbz	r3, 8002f00 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 8002ef4:	6840      	ldr	r0, [r0, #4]
 8002ef6:	b118      	cbz	r0, 8002f00 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
        {
            screenContainer->remove(snapshot);
 8002ef8:	6803      	ldr	r3, [r0, #0]
 8002efa:	310c      	adds	r1, #12
 8002efc:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8002efe:	4718      	bx	r3
        }
    }
 8002f00:	4770      	bx	lr
 8002f02:	bf00      	nop
 8002f04:	20013f4b 	.word	0x20013f4b

08002f08 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
 8002f08:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 8002f0a:	b570      	push	{r4, r5, r6, lr}
 8002f0c:	4605      	mov	r5, r0
        if (done)
 8002f0e:	b9bb      	cbnz	r3, 8002f40 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 8002f10:	6840      	ldr	r0, [r0, #4]
 8002f12:	6803      	ldr	r3, [r0, #0]
 8002f14:	69db      	ldr	r3, [r3, #28]
 8002f16:	4798      	blx	r3
 8002f18:	4604      	mov	r4, r0
        while (d)
 8002f1a:	b93c      	cbnz	r4, 8002f2c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x24>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
 8002f1c:	6868      	ldr	r0, [r5, #4]
 8002f1e:	6803      	ldr	r3, [r0, #0]
 8002f20:	f105 010c 	add.w	r1, r5, #12
 8002f24:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
    }
 8002f26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 8002f2a:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
 8002f2c:	88a1      	ldrh	r1, [r4, #4]
 8002f2e:	8f6b      	ldrh	r3, [r5, #58]	@ 0x3a
 8002f30:	1ac9      	subs	r1, r1, r3
 8002f32:	6823      	ldr	r3, [r4, #0]
 8002f34:	4620      	mov	r0, r4
 8002f36:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f38:	b209      	sxth	r1, r1
 8002f3a:	4798      	blx	r3
 8002f3c:	69a4      	ldr	r4, [r4, #24]
 8002f3e:	e7ec      	b.n	8002f1a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x12>
    }
 8002f40:	bd70      	pop	{r4, r5, r6, pc}

08002f42 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002f42:	b510      	push	{r4, lr}
 8002f44:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002f46:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002f4a:	b158      	cbz	r0, 8002f64 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002f4c:	6803      	ldr	r3, [r0, #0]
 8002f4e:	68db      	ldr	r3, [r3, #12]
 8002f50:	4798      	blx	r3
 8002f52:	b138      	cbz	r0, 8002f64 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002f54:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8002f58:	6803      	ldr	r3, [r0, #0]
 8002f5a:	689b      	ldr	r3, [r3, #8]
 8002f5c:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002f5e:	2300      	movs	r3, #0
 8002f60:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8002f64:	bd10      	pop	{r4, pc}

08002f66 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002f66:	b570      	push	{r4, r5, r6, lr}
 8002f68:	4604      	mov	r4, r0
        animationCounter++;
 8002f6a:	f890 0039 	ldrb.w	r0, [r0, #57]	@ 0x39
        if (animationCounter > animationSteps)
 8002f6e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
        animationCounter++;
 8002f72:	3001      	adds	r0, #1
 8002f74:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002f76:	4298      	cmp	r0, r3
        animationCounter++;
 8002f78:	f884 0039 	strb.w	r0, [r4, #57]	@ 0x39
        if (animationCounter > animationSteps)
 8002f7c:	d905      	bls.n	8002f8a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
 8002f7e:	2301      	movs	r3, #1
 8002f80:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002f82:	2300      	movs	r3, #0
 8002f84:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
    }
 8002f88:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002f8a:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	@ 0x3a
 8002f8e:	2100      	movs	r1, #0
 8002f90:	f015 ff2c 	bl	8018dec <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002f94:	07c3      	lsls	r3, r0, #31
 8002f96:	d506      	bpl.n	8002fa6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x40>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002f98:	2800      	cmp	r0, #0
 8002f9a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002f9e:	bfc8      	it	gt
 8002fa0:	2301      	movgt	r3, #1
 8002fa2:	4418      	add	r0, r3
 8002fa4:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 8002fa6:	8a23      	ldrh	r3, [r4, #16]
 8002fa8:	1ac0      	subs	r0, r0, r3
 8002faa:	87a0      	strh	r0, [r4, #60]	@ 0x3c
        Drawable* d = screenContainer->getFirstChild();
 8002fac:	6860      	ldr	r0, [r4, #4]
 8002fae:	6803      	ldr	r3, [r0, #0]
 8002fb0:	69db      	ldr	r3, [r3, #28]
 8002fb2:	4798      	blx	r3
 8002fb4:	4605      	mov	r5, r0
        while (d)
 8002fb6:	b92d      	cbnz	r5, 8002fc4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
 8002fb8:	6860      	ldr	r0, [r4, #4]
        screenContainer->invalidate();
 8002fba:	6803      	ldr	r3, [r0, #0]
    }
 8002fbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 8002fc0:	695b      	ldr	r3, [r3, #20]
 8002fc2:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
 8002fc4:	88a9      	ldrh	r1, [r5, #4]
 8002fc6:	8fa3      	ldrh	r3, [r4, #60]	@ 0x3c
 8002fc8:	4419      	add	r1, r3
 8002fca:	682b      	ldr	r3, [r5, #0]
 8002fcc:	4628      	mov	r0, r5
 8002fce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002fd0:	b209      	sxth	r1, r1
 8002fd2:	4798      	blx	r3
 8002fd4:	69ad      	ldr	r5, [r5, #24]
 8002fd6:	e7ee      	b.n	8002fb6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x50>

08002fd8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002fd8:	4b04      	ldr	r3, [pc, #16]	@ (8002fec <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002fda:	681b      	ldr	r3, [r3, #0]
 8002fdc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002fe0:	b10a      	cbz	r2, 8002fe6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002fe2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8002fe4:	b900      	cbnz	r0, 8002fe8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002fe6:	6898      	ldr	r0, [r3, #8]
    }
 8002fe8:	4770      	bx	lr
 8002fea:	bf00      	nop
 8002fec:	20013f4c 	.word	0x20013f4c

08002ff0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002ff0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002ff2:	4617      	mov	r7, r2
 8002ff4:	4604      	mov	r4, r0
 8002ff6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002ff8:	f013 fe04 	bl	8016c04 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002ffc:	4b12      	ldr	r3, [pc, #72]	@ (8003048 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002ffe:	601c      	str	r4, [r3, #0]
      model(m)
 8003000:	4b12      	ldr	r3, [pc, #72]	@ (800304c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003002:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003004:	4b12      	ldr	r3, [pc, #72]	@ (8003050 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
        : currentPresenter(0),
 8003006:	2500      	movs	r5, #0
 8003008:	e9c4 3551 	strd	r3, r5, [r4, #324]	@ 0x144
        return instance;
 800300c:	4b11      	ldr	r3, [pc, #68]	@ (8003054 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 800300e:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
 8003012:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003014:	6803      	ldr	r3, [r0, #0]
 8003016:	2101      	movs	r1, #1
 8003018:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800301a:	e9c4 554f 	strd	r5, r5, [r4, #316]	@ 0x13c
      model(m)
 800301e:	e9c4 7655 	strd	r7, r6, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003022:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003024:	4628      	mov	r0, r5
 8003026:	f004 f8fd 	bl	8007224 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800302a:	f7ff ffd5 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 800302e:	f01e fa6e 	bl	802150e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8003032:	f7ff ffd1 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 8003036:	f01e fae5 	bl	8021604 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 800303a:	f7ff ffcd 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 800303e:	f01e faed 	bl	802161c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8003042:	4620      	mov	r0, r4
 8003044:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003046:	bf00      	nop
 8003048:	20013fa0 	.word	0x20013fa0
 800304c:	0802d28c 	.word	0x0802d28c
 8003050:	0802d274 	.word	0x0802d274
 8003054:	20013f4c 	.word	0x20013f4c

08003058 <_ZN23FrontendApplicationBase34gotoChosing_modeScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003058:	4b06      	ldr	r3, [pc, #24]	@ (8003074 <_ZN23FrontendApplicationBase34gotoChosing_modeScreenNoTransitionEv+0x1c>)
 800305a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800305e:	2300      	movs	r3, #0
 8003060:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003064:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003068:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800306c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003070:	4770      	bx	lr
 8003072:	bf00      	nop
 8003074:	080034bd 	.word	0x080034bd

08003078 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenCoverTransitionEastEv>:
 8003078:	4b06      	ldr	r3, [pc, #24]	@ (8003094 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenCoverTransitionEastEv+0x1c>)
 800307a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800307e:	2300      	movs	r3, #0
 8003080:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
}

void FrontendApplicationBase::gotoChosing_modeScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoChosing_modeScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003084:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003088:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800308c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003090:	4770      	bx	lr
 8003092:	bf00      	nop
 8003094:	08003b1d 	.word	0x08003b1d

08003098 <_ZN23FrontendApplicationBase40gotoChosing_modeScreenWipeTransitionEastEv>:
 8003098:	4b06      	ldr	r3, [pc, #24]	@ (80030b4 <_ZN23FrontendApplicationBase40gotoChosing_modeScreenWipeTransitionEastEv+0x1c>)
 800309a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800309e:	2300      	movs	r3, #0
 80030a0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
}

void FrontendApplicationBase::gotoChosing_modeScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoChosing_modeScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80030a4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80030a8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80030ac:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80030b0:	4770      	bx	lr
 80030b2:	bf00      	nop
 80030b4:	0800335d 	.word	0x0800335d

080030b8 <_ZN23FrontendApplicationBase37gotoChosing_modeScreenBlockTransitionEv>:
 80030b8:	4b06      	ldr	r3, [pc, #24]	@ (80030d4 <_ZN23FrontendApplicationBase37gotoChosing_modeScreenBlockTransitionEv+0x1c>)
 80030ba:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80030be:	2300      	movs	r3, #0
 80030c0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
}

void FrontendApplicationBase::gotoChosing_modeScreenBlockTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoChosing_modeScreenBlockTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80030c4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80030c8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80030cc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80030d0:	4770      	bx	lr
 80030d2:	bf00      	nop
 80030d4:	080031e5 	.word	0x080031e5

080030d8 <_ZN23FrontendApplicationBase38gotoScreen5x5ScreenCoverTransitionEastEv>:
 80030d8:	4b06      	ldr	r3, [pc, #24]	@ (80030f4 <_ZN23FrontendApplicationBase38gotoScreen5x5ScreenCoverTransitionEastEv+0x1c>)
 80030da:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80030de:	2300      	movs	r3, #0
 80030e0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen5x5

void FrontendApplicationBase::gotoScreen5x5ScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen5x5ScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80030e4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80030e8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80030ec:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80030f0:	4770      	bx	lr
 80030f2:	bf00      	nop
 80030f4:	080039e1 	.word	0x080039e1

080030f8 <_ZN23FrontendApplicationBase51gotoScreen5x5_superMergingScreenSlideTransitionEastEv>:
 80030f8:	4b06      	ldr	r3, [pc, #24]	@ (8003114 <_ZN23FrontendApplicationBase51gotoScreen5x5_superMergingScreenSlideTransitionEastEv+0x1c>)
 80030fa:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80030fe:	2300      	movs	r3, #0
 8003100:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen5x5_superMerging

void FrontendApplicationBase::gotoScreen5x5_superMergingScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen5x5_superMergingScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003104:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003108:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800310c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003110:	4770      	bx	lr
 8003112:	bf00      	nop
 8003114:	08004079 	.word	0x08004079

08003118 <_ZN23FrontendApplicationBase38gotoScreen3x3ScreenCoverTransitionEastEv>:
 8003118:	4b06      	ldr	r3, [pc, #24]	@ (8003134 <_ZN23FrontendApplicationBase38gotoScreen3x3ScreenCoverTransitionEastEv+0x1c>)
 800311a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800311e:	2300      	movs	r3, #0
 8003120:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen3x3

void FrontendApplicationBase::gotoScreen3x3ScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen3x3ScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003124:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003128:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800312c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003130:	4770      	bx	lr
 8003132:	bf00      	nop
 8003134:	080038a5 	.word	0x080038a5

08003138 <_ZN23FrontendApplicationBase39gotoMainScreenScreenCoverTransitionEastEv>:
 8003138:	4b06      	ldr	r3, [pc, #24]	@ (8003154 <_ZN23FrontendApplicationBase39gotoMainScreenScreenCoverTransitionEastEv+0x1c>)
 800313a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800313e:	2300      	movs	r3, #0
 8003140:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// MainScreen

void FrontendApplicationBase::gotoMainScreenScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003144:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003148:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800314c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003150:	4770      	bx	lr
 8003152:	bf00      	nop
 8003154:	08003769 	.word	0x08003769

08003158 <_ZN23FrontendApplicationBase52gotoScreen5x5_letterMergingScreenSlideTransitionEastEv>:
 8003158:	4b06      	ldr	r3, [pc, #24]	@ (8003174 <_ZN23FrontendApplicationBase52gotoScreen5x5_letterMergingScreenSlideTransitionEastEv+0x1c>)
 800315a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800315e:	2300      	movs	r3, #0
 8003160:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen5x5_letterMerging

void FrontendApplicationBase::gotoScreen5x5_letterMergingScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen5x5_letterMergingScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003164:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003168:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800316c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003170:	4770      	bx	lr
 8003172:	bf00      	nop
 8003174:	08003f3d 	.word	0x08003f3d

08003178 <_ZN23FrontendApplicationBase43gotoGameOverScreenScreenSlideTransitionEastEv>:
 8003178:	4b06      	ldr	r3, [pc, #24]	@ (8003194 <_ZN23FrontendApplicationBase43gotoGameOverScreenScreenSlideTransitionEastEv+0x1c>)
 800317a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800317e:	2300      	movs	r3, #0
 8003180:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// GameOverScreen

void FrontendApplicationBase::gotoGameOverScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGameOverScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003184:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8003188:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800318c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8003190:	4770      	bx	lr
 8003192:	bf00      	nop
 8003194:	08003e05 	.word	0x08003e05

08003198 <_ZN23FrontendApplicationBase47gotoSelectedGameDesignScreenSlideTransitionEastEv>:
 8003198:	4b06      	ldr	r3, [pc, #24]	@ (80031b4 <_ZN23FrontendApplicationBase47gotoSelectedGameDesignScreenSlideTransitionEastEv+0x1c>)
 800319a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800319e:	2300      	movs	r3, #0
 80031a0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// SelectedGameDesign

void FrontendApplicationBase::gotoSelectedGameDesignScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSelectedGameDesignScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80031a4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80031a8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80031ac:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80031b0:	4770      	bx	lr
 80031b2:	bf00      	nop
 80031b4:	08003ccd 	.word	0x08003ccd

080031b8 <_ZN23FrontendApplicationBase47gotoSelectedGameDesignScreenCoverTransitionEastEv>:
 80031b8:	4b06      	ldr	r3, [pc, #24]	@ (80031d4 <_ZN23FrontendApplicationBase47gotoSelectedGameDesignScreenCoverTransitionEastEv+0x1c>)
 80031ba:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80031be:	2300      	movs	r3, #0
 80031c0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
}

void FrontendApplicationBase::gotoSelectedGameDesignScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSelectedGameDesignScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80031c4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80031c8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80031cc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80031d0:	4770      	bx	lr
 80031d2:	bf00      	nop
 80031d4:	08003631 	.word	0x08003631

080031d8 <_ZN8touchgfx17AbstractPartition2atI16Chosing_modeViewEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80031d8:	6803      	ldr	r3, [r0, #0]
 80031da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80031dc:	4718      	bx	r3

080031de <_ZN8touchgfx17AbstractPartition2atI21Chosing_modePresenterEERT_t>:
 80031de:	6803      	ldr	r3, [r0, #0]
 80031e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80031e2:	4718      	bx	r3

080031e4 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv>:
{
 80031e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Chosing_modeView, Chosing_modePresenter, touchgfx::BlockTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80031e8:	e9d0 6955 	ldrd	r6, r9, [r0, #340]	@ 0x154
{
 80031ec:	4605      	mov	r5, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80031ee:	68b0      	ldr	r0, [r6, #8]
 80031f0:	6803      	ldr	r3, [r0, #0]
 80031f2:	6a1b      	ldr	r3, [r3, #32]
 80031f4:	4798      	blx	r3
 80031f6:	f5b0 7f4d 	cmp.w	r0, #820	@ 0x334
 80031fa:	d205      	bcs.n	8003208 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x24>
 80031fc:	4b4d      	ldr	r3, [pc, #308]	@ (8003334 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x150>)
 80031fe:	4a4e      	ldr	r2, [pc, #312]	@ (8003338 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x154>)
 8003200:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003202:	484e      	ldr	r0, [pc, #312]	@ (800333c <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x158>)
 8003204:	f027 f9c2 	bl	802a58c <__assert_func>
 8003208:	6870      	ldr	r0, [r6, #4]
 800320a:	6803      	ldr	r3, [r0, #0]
 800320c:	6a1b      	ldr	r3, [r3, #32]
 800320e:	4798      	blx	r3
 8003210:	280f      	cmp	r0, #15
 8003212:	d803      	bhi.n	800321c <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x38>
 8003214:	4b4a      	ldr	r3, [pc, #296]	@ (8003340 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x15c>)
 8003216:	4a48      	ldr	r2, [pc, #288]	@ (8003338 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x154>)
 8003218:	21a4      	movs	r1, #164	@ 0xa4
 800321a:	e7f2      	b.n	8003202 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800321c:	68f0      	ldr	r0, [r6, #12]
 800321e:	6803      	ldr	r3, [r0, #0]
 8003220:	6a1b      	ldr	r3, [r3, #32]
 8003222:	4798      	blx	r3
 8003224:	2813      	cmp	r0, #19
 8003226:	d803      	bhi.n	8003230 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x4c>
 8003228:	4b46      	ldr	r3, [pc, #280]	@ (8003344 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x160>)
 800322a:	4a43      	ldr	r2, [pc, #268]	@ (8003338 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x154>)
 800322c:	21a5      	movs	r1, #165	@ 0xa5
 800322e:	e7e8      	b.n	8003202 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003230:	f013 fbb4 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003234:	f8df 8120 	ldr.w	r8, [pc, #288]	@ 8003358 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x174>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8003238:	3004      	adds	r0, #4
 800323a:	f013 fc15 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800323e:	f8d8 0000 	ldr.w	r0, [r8]
 8003242:	b110      	cbz	r0, 800324a <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8003244:	6803      	ldr	r3, [r0, #0]
 8003246:	68db      	ldr	r3, [r3, #12]
 8003248:	4798      	blx	r3
    if (*currentTrans)
 800324a:	f8d8 0000 	ldr.w	r0, [r8]
 800324e:	b110      	cbz	r0, 8003256 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8003250:	6803      	ldr	r3, [r0, #0]
 8003252:	681b      	ldr	r3, [r3, #0]
 8003254:	4798      	blx	r3
    if (*currentScreen)
 8003256:	4f3c      	ldr	r7, [pc, #240]	@ (8003348 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x164>)
 8003258:	6838      	ldr	r0, [r7, #0]
 800325a:	b110      	cbz	r0, 8003262 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x7e>
        (*currentScreen)->tearDownScreen();
 800325c:	6803      	ldr	r3, [r0, #0]
 800325e:	695b      	ldr	r3, [r3, #20]
 8003260:	4798      	blx	r3
    if (*currentPresenter)
 8003262:	f8d5 013c 	ldr.w	r0, [r5, #316]	@ 0x13c
 8003266:	b110      	cbz	r0, 800326e <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x8a>
        (*currentPresenter)->deactivate();
 8003268:	6803      	ldr	r3, [r0, #0]
 800326a:	685b      	ldr	r3, [r3, #4]
 800326c:	4798      	blx	r3
    if (*currentScreen)
 800326e:	6838      	ldr	r0, [r7, #0]
 8003270:	b110      	cbz	r0, 8003278 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x94>
        (*currentScreen)->~Screen();
 8003272:	6803      	ldr	r3, [r0, #0]
 8003274:	681b      	ldr	r3, [r3, #0]
 8003276:	4798      	blx	r3
    if (*currentPresenter)
 8003278:	f8d5 013c 	ldr.w	r0, [r5, #316]	@ 0x13c
 800327c:	b110      	cbz	r0, 8003284 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0xa0>
        (*currentPresenter)->~Presenter();
 800327e:	6803      	ldr	r3, [r0, #0]
 8003280:	689b      	ldr	r3, [r3, #8]
 8003282:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003284:	68f0      	ldr	r0, [r6, #12]
 8003286:	6803      	ldr	r3, [r0, #0]
 8003288:	2100      	movs	r1, #0
 800328a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800328c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800328e:	2300      	movs	r3, #0
 8003290:	6043      	str	r3, [r0, #4]
 8003292:	7203      	strb	r3, [r0, #8]
          animationCounter(0)
 8003294:	7403      	strb	r3, [r0, #16]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 8003296:	4b2d      	ldr	r3, [pc, #180]	@ (800334c <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x168>)
          animationCounter(0)
 8003298:	4a2d      	ldr	r2, [pc, #180]	@ (8003350 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x16c>)
 800329a:	6002      	str	r2, [r0, #0]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 800329c:	881a      	ldrh	r2, [r3, #0]
 800329e:	4b2d      	ldr	r3, [pc, #180]	@ (8003354 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x170>)
 80032a0:	881b      	ldrh	r3, [r3, #0]
 80032a2:	429a      	cmp	r2, r3
 80032a4:	4604      	mov	r4, r0
 80032a6:	d93d      	bls.n	8003324 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0x140>
            blockWidth = (HAL::DISPLAY_WIDTH + 7) / 8;
 80032a8:	3207      	adds	r2, #7
            blockHeight = (HAL::DISPLAY_HEIGHT + 5) / 6;
 80032aa:	2106      	movs	r1, #6
 80032ac:	3305      	adds	r3, #5
            blockWidth = (HAL::DISPLAY_WIDTH + 7) / 8;
 80032ae:	08d2      	lsrs	r2, r2, #3
            blockHeight = (HAL::DISPLAY_HEIGHT + 5) / 6;
 80032b0:	fbb3 f3f1 	udiv	r3, r3, r1
 80032b4:	2108      	movs	r1, #8
 80032b6:	b29b      	uxth	r3, r3
            blockWidth = (HAL::DISPLAY_WIDTH + 7) / 8;
 80032b8:	8162      	strh	r2, [r4, #10]
            blockHeight = (HAL::DISPLAY_HEIGHT + 5) / 6;
 80032ba:	81a3      	strh	r3, [r4, #12]
            blocksHorizontal = 8;
 80032bc:	81e1      	strh	r1, [r4, #14]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80032be:	68b0      	ldr	r0, [r6, #8]
 80032c0:	2100      	movs	r1, #0
 80032c2:	f7ff ff89 	bl	80031d8 <_ZN8touchgfx17AbstractPartition2atI16Chosing_modeViewEERT_t>
 80032c6:	4682      	mov	sl, r0
 80032c8:	f004 fc92 	bl	8007bf0 <_ZN16Chosing_modeViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80032cc:	6870      	ldr	r0, [r6, #4]
 80032ce:	2100      	movs	r1, #0
 80032d0:	f7ff ff85 	bl	80031de <_ZN8touchgfx17AbstractPartition2atI21Chosing_modePresenterEERT_t>
 80032d4:	4651      	mov	r1, sl
 80032d6:	4606      	mov	r6, r0
 80032d8:	f004 fc68 	bl	8007bac <_ZN21Chosing_modePresenterC1ER16Chosing_modeView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 80032dc:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80032de:	f8c5 613c 	str.w	r6, [r5, #316]	@ 0x13c
    *currentTrans = newTransition;
 80032e2:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 80032e6:	f8c7 a000 	str.w	sl, [r7]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80032ea:	f8c9 3000 	str.w	r3, [r9]
    newScreen->setupScreen();
 80032ee:	f8da 3000 	ldr.w	r3, [sl]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80032f2:	f8c6 9008 	str.w	r9, [r6, #8]
 80032f6:	4650      	mov	r0, sl
 80032f8:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80032fa:	f8ca 603c 	str.w	r6, [sl, #60]	@ 0x3c
 80032fe:	4798      	blx	r3
    newPresenter->activate();
 8003300:	6833      	ldr	r3, [r6, #0]
 8003302:	4630      	mov	r0, r6
 8003304:	681b      	ldr	r3, [r3, #0]
 8003306:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003308:	4621      	mov	r1, r4
 800330a:	4650      	mov	r0, sl
 800330c:	f015 fd68 	bl	8018de0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003310:	6823      	ldr	r3, [r4, #0]
 8003312:	4620      	mov	r0, r4
 8003314:	691b      	ldr	r3, [r3, #16]
 8003316:	4798      	blx	r3
    newTransition->invalidate();
 8003318:	6823      	ldr	r3, [r4, #0]
 800331a:	4620      	mov	r0, r4
 800331c:	695b      	ldr	r3, [r3, #20]
}
 800331e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003322:	4718      	bx	r3
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 8003324:	3307      	adds	r3, #7
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8003326:	3205      	adds	r2, #5
 8003328:	2106      	movs	r1, #6
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 800332a:	08db      	lsrs	r3, r3, #3
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 800332c:	fbb2 f2f1 	udiv	r2, r2, r1
 8003330:	b292      	uxth	r2, r2
            blocksHorizontal = 6;
 8003332:	e7c1      	b.n	80032b8 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenBlockTransitionImplEv+0xd4>
 8003334:	0802bd35 	.word	0x0802bd35
 8003338:	0802bdc3 	.word	0x0802bdc3
 800333c:	0802bea2 	.word	0x0802bea2
 8003340:	0802bee9 	.word	0x0802bee9
 8003344:	0802bf8c 	.word	0x0802bf8c
 8003348:	20013f90 	.word	0x20013f90
 800334c:	20013f40 	.word	0x20013f40
 8003350:	0802d304 	.word	0x0802d304
 8003354:	20013f42 	.word	0x20013f42
 8003358:	20013f94 	.word	0x20013f94

0800335c <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv>:
{
 800335c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Chosing_modeView, Chosing_modePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003360:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003364:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003366:	68b0      	ldr	r0, [r6, #8]
 8003368:	6803      	ldr	r3, [r0, #0]
 800336a:	6a1b      	ldr	r3, [r3, #32]
 800336c:	4798      	blx	r3
 800336e:	f5b0 7f4d 	cmp.w	r0, #820	@ 0x334
 8003372:	d205      	bcs.n	8003380 <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x24>
 8003374:	4b48      	ldr	r3, [pc, #288]	@ (8003498 <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x13c>)
 8003376:	4a49      	ldr	r2, [pc, #292]	@ (800349c <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x140>)
 8003378:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800337a:	4849      	ldr	r0, [pc, #292]	@ (80034a0 <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x144>)
 800337c:	f027 f906 	bl	802a58c <__assert_func>
 8003380:	6870      	ldr	r0, [r6, #4]
 8003382:	6803      	ldr	r3, [r0, #0]
 8003384:	6a1b      	ldr	r3, [r3, #32]
 8003386:	4798      	blx	r3
 8003388:	280f      	cmp	r0, #15
 800338a:	d803      	bhi.n	8003394 <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x38>
 800338c:	4b45      	ldr	r3, [pc, #276]	@ (80034a4 <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x148>)
 800338e:	4a43      	ldr	r2, [pc, #268]	@ (800349c <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x140>)
 8003390:	21a4      	movs	r1, #164	@ 0xa4
 8003392:	e7f2      	b.n	800337a <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003394:	68f0      	ldr	r0, [r6, #12]
 8003396:	6803      	ldr	r3, [r0, #0]
 8003398:	6a1b      	ldr	r3, [r3, #32]
 800339a:	4798      	blx	r3
 800339c:	2813      	cmp	r0, #19
 800339e:	d803      	bhi.n	80033a8 <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x4c>
 80033a0:	4b41      	ldr	r3, [pc, #260]	@ (80034a8 <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x14c>)
 80033a2:	4a3e      	ldr	r2, [pc, #248]	@ (800349c <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x140>)
 80033a4:	21a5      	movs	r1, #165	@ 0xa5
 80033a6:	e7e8      	b.n	800337a <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80033a8:	f013 faf8 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80033ac:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 80034b4 <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x158>
 80033b0:	3004      	adds	r0, #4
 80033b2:	f013 fb59 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80033b6:	f8d9 0000 	ldr.w	r0, [r9]
 80033ba:	b110      	cbz	r0, 80033c2 <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80033bc:	6803      	ldr	r3, [r0, #0]
 80033be:	68db      	ldr	r3, [r3, #12]
 80033c0:	4798      	blx	r3
    if (*currentTrans)
 80033c2:	f8d9 0000 	ldr.w	r0, [r9]
 80033c6:	b110      	cbz	r0, 80033ce <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80033c8:	6803      	ldr	r3, [r0, #0]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	4798      	blx	r3
    if (*currentScreen)
 80033ce:	f8df 80e8 	ldr.w	r8, [pc, #232]	@ 80034b8 <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x15c>
 80033d2:	f8d8 0000 	ldr.w	r0, [r8]
 80033d6:	b110      	cbz	r0, 80033de <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80033d8:	6803      	ldr	r3, [r0, #0]
 80033da:	695b      	ldr	r3, [r3, #20]
 80033dc:	4798      	blx	r3
    if (*currentPresenter)
 80033de:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80033e2:	b110      	cbz	r0, 80033ea <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80033e4:	6803      	ldr	r3, [r0, #0]
 80033e6:	685b      	ldr	r3, [r3, #4]
 80033e8:	4798      	blx	r3
    if (*currentScreen)
 80033ea:	f8d8 0000 	ldr.w	r0, [r8]
 80033ee:	b110      	cbz	r0, 80033f6 <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80033f0:	6803      	ldr	r3, [r0, #0]
 80033f2:	681b      	ldr	r3, [r3, #0]
 80033f4:	4798      	blx	r3
    if (*currentPresenter)
 80033f6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80033fa:	b110      	cbz	r0, 8003402 <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80033fc:	6803      	ldr	r3, [r0, #0]
 80033fe:	689b      	ldr	r3, [r3, #8]
 8003400:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003402:	68f0      	ldr	r0, [r6, #12]
 8003404:	6803      	ldr	r3, [r0, #0]
 8003406:	2100      	movs	r1, #0
 8003408:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800340a:	4798      	blx	r3
          prevCalculatedValue(0)
 800340c:	4b27      	ldr	r3, [pc, #156]	@ (80034ac <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x150>)
 800340e:	6003      	str	r3, [r0, #0]
 8003410:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8003414:	8103      	strh	r3, [r0, #8]
            targetValue = HAL::DISPLAY_WIDTH;
 8003416:	4b26      	ldr	r3, [pc, #152]	@ (80034b0 <_ZN23FrontendApplicationBase44gotoChosing_modeScreenWipeTransitionEastImplEv+0x154>)
 8003418:	f04f 0b00 	mov.w	fp, #0
 800341c:	881b      	ldrh	r3, [r3, #0]
          animationCounter(0),
 800341e:	f880 b00a 	strb.w	fp, [r0, #10]
 8003422:	4604      	mov	r4, r0
            targetValue = HAL::DISPLAY_WIDTH;
 8003424:	8183      	strh	r3, [r0, #12]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003426:	4659      	mov	r1, fp
 8003428:	f8c0 b004 	str.w	fp, [r0, #4]
          calculatedValue(0),
 800342c:	f8a0 b00e 	strh.w	fp, [r0, #14]
          prevCalculatedValue(0)
 8003430:	f8a0 b010 	strh.w	fp, [r0, #16]
 8003434:	68b0      	ldr	r0, [r6, #8]
 8003436:	f7ff fecf 	bl	80031d8 <_ZN8touchgfx17AbstractPartition2atI16Chosing_modeViewEERT_t>
 800343a:	4605      	mov	r5, r0
 800343c:	f004 fbd8 	bl	8007bf0 <_ZN16Chosing_modeViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003440:	4659      	mov	r1, fp
 8003442:	6870      	ldr	r0, [r6, #4]
 8003444:	f7ff fecb 	bl	80031de <_ZN8touchgfx17AbstractPartition2atI21Chosing_modePresenterEERT_t>
 8003448:	4629      	mov	r1, r5
 800344a:	4606      	mov	r6, r0
 800344c:	f004 fbae 	bl	8007bac <_ZN21Chosing_modePresenterC1ER16Chosing_modeView>
    model->bind(newPresenter);
 8003450:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003452:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003456:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800345a:	f8c8 5000 	str.w	r5, [r8]
 800345e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003462:	682b      	ldr	r3, [r5, #0]
 8003464:	f8c6 a008 	str.w	sl, [r6, #8]
 8003468:	4628      	mov	r0, r5
 800346a:	68db      	ldr	r3, [r3, #12]
 800346c:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800346e:	4798      	blx	r3
    newPresenter->activate();
 8003470:	6833      	ldr	r3, [r6, #0]
 8003472:	4630      	mov	r0, r6
 8003474:	681b      	ldr	r3, [r3, #0]
 8003476:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003478:	4621      	mov	r1, r4
 800347a:	4628      	mov	r0, r5
 800347c:	f015 fcb0 	bl	8018de0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003480:	6823      	ldr	r3, [r4, #0]
 8003482:	4620      	mov	r0, r4
 8003484:	691b      	ldr	r3, [r3, #16]
 8003486:	4798      	blx	r3
    newTransition->invalidate();
 8003488:	6823      	ldr	r3, [r4, #0]
 800348a:	695b      	ldr	r3, [r3, #20]
 800348c:	4620      	mov	r0, r4
}
 800348e:	b001      	add	sp, #4
 8003490:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003494:	4718      	bx	r3
 8003496:	bf00      	nop
 8003498:	0802bd35 	.word	0x0802bd35
 800349c:	0802c02f 	.word	0x0802c02f
 80034a0:	0802bea2 	.word	0x0802bea2
 80034a4:	0802bee9 	.word	0x0802bee9
 80034a8:	0802bf8c 	.word	0x0802bf8c
 80034ac:	0802d328 	.word	0x0802d328
 80034b0:	20013f40 	.word	0x20013f40
 80034b4:	20013f94 	.word	0x20013f94
 80034b8:	20013f90 	.word	0x20013f90

080034bc <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv>:
{
 80034bc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Chosing_modeView, Chosing_modePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80034c0:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80034c4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80034c6:	68b0      	ldr	r0, [r6, #8]
 80034c8:	6803      	ldr	r3, [r0, #0]
 80034ca:	6a1b      	ldr	r3, [r3, #32]
 80034cc:	4798      	blx	r3
 80034ce:	f5b0 7f4d 	cmp.w	r0, #820	@ 0x334
 80034d2:	d205      	bcs.n	80034e0 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x24>
 80034d4:	4b43      	ldr	r3, [pc, #268]	@ (80035e4 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x128>)
 80034d6:	4a44      	ldr	r2, [pc, #272]	@ (80035e8 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x12c>)
 80034d8:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80034da:	4844      	ldr	r0, [pc, #272]	@ (80035ec <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x130>)
 80034dc:	f027 f856 	bl	802a58c <__assert_func>
 80034e0:	6870      	ldr	r0, [r6, #4]
 80034e2:	6803      	ldr	r3, [r0, #0]
 80034e4:	6a1b      	ldr	r3, [r3, #32]
 80034e6:	4798      	blx	r3
 80034e8:	280f      	cmp	r0, #15
 80034ea:	d803      	bhi.n	80034f4 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x38>
 80034ec:	4b40      	ldr	r3, [pc, #256]	@ (80035f0 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x134>)
 80034ee:	4a3e      	ldr	r2, [pc, #248]	@ (80035e8 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x12c>)
 80034f0:	21a4      	movs	r1, #164	@ 0xa4
 80034f2:	e7f2      	b.n	80034da <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80034f4:	68f0      	ldr	r0, [r6, #12]
 80034f6:	6803      	ldr	r3, [r0, #0]
 80034f8:	6a1b      	ldr	r3, [r3, #32]
 80034fa:	4798      	blx	r3
 80034fc:	280b      	cmp	r0, #11
 80034fe:	d803      	bhi.n	8003508 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x4c>
 8003500:	4b3c      	ldr	r3, [pc, #240]	@ (80035f4 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x138>)
 8003502:	4a39      	ldr	r2, [pc, #228]	@ (80035e8 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x12c>)
 8003504:	21a5      	movs	r1, #165	@ 0xa5
 8003506:	e7e8      	b.n	80034da <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003508:	f013 fa48 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800350c:	f8df 90ec 	ldr.w	r9, [pc, #236]	@ 80035fc <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x140>
 8003510:	3004      	adds	r0, #4
 8003512:	f013 faa9 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003516:	f8d9 0000 	ldr.w	r0, [r9]
 800351a:	b110      	cbz	r0, 8003522 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 800351c:	6803      	ldr	r3, [r0, #0]
 800351e:	68db      	ldr	r3, [r3, #12]
 8003520:	4798      	blx	r3
    if (*currentTrans)
 8003522:	f8d9 0000 	ldr.w	r0, [r9]
 8003526:	b110      	cbz	r0, 800352e <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8003528:	6803      	ldr	r3, [r0, #0]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	4798      	blx	r3
    if (*currentScreen)
 800352e:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8003600 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x144>
 8003532:	f8d8 0000 	ldr.w	r0, [r8]
 8003536:	b110      	cbz	r0, 800353e <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003538:	6803      	ldr	r3, [r0, #0]
 800353a:	695b      	ldr	r3, [r3, #20]
 800353c:	4798      	blx	r3
    if (*currentPresenter)
 800353e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003542:	b110      	cbz	r0, 800354a <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003544:	6803      	ldr	r3, [r0, #0]
 8003546:	685b      	ldr	r3, [r3, #4]
 8003548:	4798      	blx	r3
    if (*currentScreen)
 800354a:	f8d8 0000 	ldr.w	r0, [r8]
 800354e:	b110      	cbz	r0, 8003556 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003550:	6803      	ldr	r3, [r0, #0]
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	4798      	blx	r3
    if (*currentPresenter)
 8003556:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800355a:	b110      	cbz	r0, 8003562 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800355c:	6803      	ldr	r3, [r0, #0]
 800355e:	689b      	ldr	r3, [r3, #8]
 8003560:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003562:	68f0      	ldr	r0, [r6, #12]
 8003564:	6803      	ldr	r3, [r0, #0]
 8003566:	2100      	movs	r1, #0
 8003568:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800356a:	4798      	blx	r3
 800356c:	f04f 0b00 	mov.w	fp, #0
 8003570:	4b21      	ldr	r3, [pc, #132]	@ (80035f8 <_ZN23FrontendApplicationBase38gotoChosing_modeScreenNoTransitionImplEv+0x13c>)
 8003572:	6003      	str	r3, [r0, #0]
 8003574:	4604      	mov	r4, r0
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003576:	4659      	mov	r1, fp
 8003578:	f8c0 b004 	str.w	fp, [r0, #4]
 800357c:	f880 b008 	strb.w	fp, [r0, #8]
 8003580:	68b0      	ldr	r0, [r6, #8]
 8003582:	f7ff fe29 	bl	80031d8 <_ZN8touchgfx17AbstractPartition2atI16Chosing_modeViewEERT_t>
 8003586:	4605      	mov	r5, r0
 8003588:	f004 fb32 	bl	8007bf0 <_ZN16Chosing_modeViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800358c:	4659      	mov	r1, fp
 800358e:	6870      	ldr	r0, [r6, #4]
 8003590:	f7ff fe25 	bl	80031de <_ZN8touchgfx17AbstractPartition2atI21Chosing_modePresenterEERT_t>
 8003594:	4629      	mov	r1, r5
 8003596:	4606      	mov	r6, r0
 8003598:	f004 fb08 	bl	8007bac <_ZN21Chosing_modePresenterC1ER16Chosing_modeView>
    model->bind(newPresenter);
 800359c:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800359e:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80035a2:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80035a6:	f8c8 5000 	str.w	r5, [r8]
 80035aa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80035ae:	682b      	ldr	r3, [r5, #0]
 80035b0:	f8c6 a008 	str.w	sl, [r6, #8]
 80035b4:	4628      	mov	r0, r5
 80035b6:	68db      	ldr	r3, [r3, #12]
 80035b8:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80035ba:	4798      	blx	r3
    newPresenter->activate();
 80035bc:	6833      	ldr	r3, [r6, #0]
 80035be:	4630      	mov	r0, r6
 80035c0:	681b      	ldr	r3, [r3, #0]
 80035c2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80035c4:	4621      	mov	r1, r4
 80035c6:	4628      	mov	r0, r5
 80035c8:	f015 fc0a 	bl	8018de0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80035cc:	6823      	ldr	r3, [r4, #0]
 80035ce:	4620      	mov	r0, r4
 80035d0:	691b      	ldr	r3, [r3, #16]
 80035d2:	4798      	blx	r3
    newTransition->invalidate();
 80035d4:	6823      	ldr	r3, [r4, #0]
 80035d6:	695b      	ldr	r3, [r3, #20]
 80035d8:	4620      	mov	r0, r4
}
 80035da:	b001      	add	sp, #4
 80035dc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035e0:	4718      	bx	r3
 80035e2:	bf00      	nop
 80035e4:	0802bd35 	.word	0x0802bd35
 80035e8:	0802c11d 	.word	0x0802c11d
 80035ec:	0802bea2 	.word	0x0802bea2
 80035f0:	0802bee9 	.word	0x0802bee9
 80035f4:	0802bf8c 	.word	0x0802bf8c
 80035f8:	0802d2e0 	.word	0x0802d2e0
 80035fc:	20013f94 	.word	0x20013f94
 8003600:	20013f90 	.word	0x20013f90

08003604 <_ZN8touchgfx17AbstractPartition2atINS_15CoverTransitionILNS_9DirectionE2EEEEERT_t>:
 8003604:	6803      	ldr	r3, [r0, #0]
 8003606:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003608:	4718      	bx	r3
	...

0800360c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EEC1Eh>:
 800360c:	2200      	movs	r2, #0
    CoverTransition(const uint8_t transitionSteps = 20)
 800360e:	b510      	push	{r4, lr}
 8003610:	6042      	str	r2, [r0, #4]
 8003612:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003614:	7282      	strb	r2, [r0, #10]
          calculatedValue(0)
 8003616:	81c2      	strh	r2, [r0, #14]
            targetValue = -HAL::DISPLAY_WIDTH;
 8003618:	4a03      	ldr	r2, [pc, #12]	@ (8003628 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EEC1Eh+0x1c>)
          calculatedValue(0)
 800361a:	4c04      	ldr	r4, [pc, #16]	@ (800362c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EEC1Eh+0x20>)
            targetValue = -HAL::DISPLAY_WIDTH;
 800361c:	8812      	ldrh	r2, [r2, #0]
          calculatedValue(0)
 800361e:	6004      	str	r4, [r0, #0]
            targetValue = -HAL::DISPLAY_WIDTH;
 8003620:	4252      	negs	r2, r2
          animationSteps(transitionSteps),
 8003622:	7241      	strb	r1, [r0, #9]
            targetValue = -HAL::DISPLAY_WIDTH;
 8003624:	8182      	strh	r2, [r0, #12]
    }
 8003626:	bd10      	pop	{r4, pc}
 8003628:	20013f40 	.word	0x20013f40
 800362c:	0802d34c 	.word	0x0802d34c

08003630 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv>:

void FrontendApplicationBase::gotoSelectedGameDesignScreenCoverTransitionEastImpl()
{
 8003630:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<SelectedGameDesignView, SelectedGameDesignPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003634:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003638:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800363a:	68b0      	ldr	r0, [r6, #8]
 800363c:	6803      	ldr	r3, [r0, #0]
 800363e:	6a1b      	ldr	r3, [r3, #32]
 8003640:	4798      	blx	r3
 8003642:	f5b0 7f7d 	cmp.w	r0, #1012	@ 0x3f4
 8003646:	d205      	bcs.n	8003654 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x24>
 8003648:	4b40      	ldr	r3, [pc, #256]	@ (800374c <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x11c>)
 800364a:	4a41      	ldr	r2, [pc, #260]	@ (8003750 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x120>)
 800364c:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800364e:	4841      	ldr	r0, [pc, #260]	@ (8003754 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x124>)
 8003650:	f026 ff9c 	bl	802a58c <__assert_func>
 8003654:	6870      	ldr	r0, [r6, #4]
 8003656:	6803      	ldr	r3, [r0, #0]
 8003658:	6a1b      	ldr	r3, [r3, #32]
 800365a:	4798      	blx	r3
 800365c:	280f      	cmp	r0, #15
 800365e:	d803      	bhi.n	8003668 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x38>
 8003660:	4b3d      	ldr	r3, [pc, #244]	@ (8003758 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x128>)
 8003662:	4a3b      	ldr	r2, [pc, #236]	@ (8003750 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x120>)
 8003664:	21a4      	movs	r1, #164	@ 0xa4
 8003666:	e7f2      	b.n	800364e <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003668:	68f0      	ldr	r0, [r6, #12]
 800366a:	6803      	ldr	r3, [r0, #0]
 800366c:	6a1b      	ldr	r3, [r3, #32]
 800366e:	4798      	blx	r3
 8003670:	280f      	cmp	r0, #15
 8003672:	d803      	bhi.n	800367c <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x4c>
 8003674:	4b39      	ldr	r3, [pc, #228]	@ (800375c <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x12c>)
 8003676:	4a36      	ldr	r2, [pc, #216]	@ (8003750 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x120>)
 8003678:	21a5      	movs	r1, #165	@ 0xa5
 800367a:	e7e8      	b.n	800364e <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800367c:	f013 f98e 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003680:	f8df 90dc 	ldr.w	r9, [pc, #220]	@ 8003760 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x130>
 8003684:	3004      	adds	r0, #4
 8003686:	f013 f9ef 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800368a:	f8d9 0000 	ldr.w	r0, [r9]
 800368e:	b110      	cbz	r0, 8003696 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003690:	6803      	ldr	r3, [r0, #0]
 8003692:	68db      	ldr	r3, [r3, #12]
 8003694:	4798      	blx	r3
    if (*currentTrans)
 8003696:	f8d9 0000 	ldr.w	r0, [r9]
 800369a:	b110      	cbz	r0, 80036a2 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800369c:	6803      	ldr	r3, [r0, #0]
 800369e:	681b      	ldr	r3, [r3, #0]
 80036a0:	4798      	blx	r3
    if (*currentScreen)
 80036a2:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8003764 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x134>
 80036a6:	f8d8 0000 	ldr.w	r0, [r8]
 80036aa:	b110      	cbz	r0, 80036b2 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80036ac:	6803      	ldr	r3, [r0, #0]
 80036ae:	695b      	ldr	r3, [r3, #20]
 80036b0:	4798      	blx	r3
    if (*currentPresenter)
 80036b2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80036b6:	b110      	cbz	r0, 80036be <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80036b8:	6803      	ldr	r3, [r0, #0]
 80036ba:	685b      	ldr	r3, [r3, #4]
 80036bc:	4798      	blx	r3
    if (*currentScreen)
 80036be:	f8d8 0000 	ldr.w	r0, [r8]
 80036c2:	b110      	cbz	r0, 80036ca <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80036c4:	6803      	ldr	r3, [r0, #0]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	4798      	blx	r3
    if (*currentPresenter)
 80036ca:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80036ce:	b110      	cbz	r0, 80036d6 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenCoverTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80036d0:	6803      	ldr	r3, [r0, #0]
 80036d2:	689b      	ldr	r3, [r3, #8]
 80036d4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80036d6:	68f0      	ldr	r0, [r6, #12]
 80036d8:	2100      	movs	r1, #0
 80036da:	f7ff ff93 	bl	8003604 <_ZN8touchgfx17AbstractPartition2atINS_15CoverTransitionILNS_9DirectionE2EEEEERT_t>
 80036de:	2114      	movs	r1, #20
 80036e0:	4604      	mov	r4, r0
 80036e2:	f7ff ff93 	bl	800360c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80036e6:	68b0      	ldr	r0, [r6, #8]
 80036e8:	6803      	ldr	r3, [r0, #0]
 80036ea:	2100      	movs	r1, #0
 80036ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036ee:	4798      	blx	r3
 80036f0:	4605      	mov	r5, r0
 80036f2:	f007 fc47 	bl	800af84 <_ZN22SelectedGameDesignViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80036f6:	6870      	ldr	r0, [r6, #4]
 80036f8:	6803      	ldr	r3, [r0, #0]
 80036fa:	2100      	movs	r1, #0
 80036fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80036fe:	4798      	blx	r3
 8003700:	4629      	mov	r1, r5
 8003702:	4606      	mov	r6, r0
 8003704:	f007 fc1c 	bl	800af40 <_ZN27SelectedGameDesignPresenterC1ER22SelectedGameDesignView>
    model->bind(newPresenter);
 8003708:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 800370a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800370e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003712:	f8c8 5000 	str.w	r5, [r8]
 8003716:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800371a:	682b      	ldr	r3, [r5, #0]
 800371c:	f8c6 a008 	str.w	sl, [r6, #8]
 8003720:	4628      	mov	r0, r5
 8003722:	68db      	ldr	r3, [r3, #12]
 8003724:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003726:	4798      	blx	r3
    newPresenter->activate();
 8003728:	6833      	ldr	r3, [r6, #0]
 800372a:	4630      	mov	r0, r6
 800372c:	681b      	ldr	r3, [r3, #0]
 800372e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003730:	4621      	mov	r1, r4
 8003732:	4628      	mov	r0, r5
 8003734:	f015 fb54 	bl	8018de0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003738:	6823      	ldr	r3, [r4, #0]
 800373a:	4620      	mov	r0, r4
 800373c:	691b      	ldr	r3, [r3, #16]
 800373e:	4798      	blx	r3
    newTransition->invalidate();
 8003740:	6823      	ldr	r3, [r4, #0]
 8003742:	4620      	mov	r0, r4
 8003744:	695b      	ldr	r3, [r3, #20]
}
 8003746:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800374a:	4718      	bx	r3
 800374c:	0802bd35 	.word	0x0802bd35
 8003750:	0802c1f9 	.word	0x0802c1f9
 8003754:	0802bea2 	.word	0x0802bea2
 8003758:	0802bee9 	.word	0x0802bee9
 800375c:	0802bf8c 	.word	0x0802bf8c
 8003760:	20013f94 	.word	0x20013f94
 8003764:	20013f90 	.word	0x20013f90

08003768 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv>:
{
 8003768:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MainScreenView, MainScreenPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800376c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003770:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003772:	68b0      	ldr	r0, [r6, #8]
 8003774:	6803      	ldr	r3, [r0, #0]
 8003776:	6a1b      	ldr	r3, [r3, #32]
 8003778:	4798      	blx	r3
 800377a:	f241 2343 	movw	r3, #4675	@ 0x1243
 800377e:	4298      	cmp	r0, r3
 8003780:	d805      	bhi.n	800378e <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x26>
 8003782:	4b41      	ldr	r3, [pc, #260]	@ (8003888 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x120>)
 8003784:	4a41      	ldr	r2, [pc, #260]	@ (800388c <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x124>)
 8003786:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003788:	4841      	ldr	r0, [pc, #260]	@ (8003890 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x128>)
 800378a:	f026 feff 	bl	802a58c <__assert_func>
 800378e:	6870      	ldr	r0, [r6, #4]
 8003790:	6803      	ldr	r3, [r0, #0]
 8003792:	6a1b      	ldr	r3, [r3, #32]
 8003794:	4798      	blx	r3
 8003796:	280f      	cmp	r0, #15
 8003798:	d803      	bhi.n	80037a2 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x3a>
 800379a:	4b3e      	ldr	r3, [pc, #248]	@ (8003894 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x12c>)
 800379c:	4a3b      	ldr	r2, [pc, #236]	@ (800388c <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x124>)
 800379e:	21a4      	movs	r1, #164	@ 0xa4
 80037a0:	e7f2      	b.n	8003788 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80037a2:	68f0      	ldr	r0, [r6, #12]
 80037a4:	6803      	ldr	r3, [r0, #0]
 80037a6:	6a1b      	ldr	r3, [r3, #32]
 80037a8:	4798      	blx	r3
 80037aa:	280f      	cmp	r0, #15
 80037ac:	d803      	bhi.n	80037b6 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x4e>
 80037ae:	4b3a      	ldr	r3, [pc, #232]	@ (8003898 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x130>)
 80037b0:	4a36      	ldr	r2, [pc, #216]	@ (800388c <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x124>)
 80037b2:	21a5      	movs	r1, #165	@ 0xa5
 80037b4:	e7e8      	b.n	8003788 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80037b6:	f013 f8f1 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80037ba:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 800389c <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x134>
 80037be:	3004      	adds	r0, #4
 80037c0:	f013 f952 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80037c4:	f8d9 0000 	ldr.w	r0, [r9]
 80037c8:	b110      	cbz	r0, 80037d0 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80037ca:	6803      	ldr	r3, [r0, #0]
 80037cc:	68db      	ldr	r3, [r3, #12]
 80037ce:	4798      	blx	r3
    if (*currentTrans)
 80037d0:	f8d9 0000 	ldr.w	r0, [r9]
 80037d4:	b110      	cbz	r0, 80037dc <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80037d6:	6803      	ldr	r3, [r0, #0]
 80037d8:	681b      	ldr	r3, [r3, #0]
 80037da:	4798      	blx	r3
    if (*currentScreen)
 80037dc:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 80038a0 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x138>
 80037e0:	f8d8 0000 	ldr.w	r0, [r8]
 80037e4:	b110      	cbz	r0, 80037ec <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80037e6:	6803      	ldr	r3, [r0, #0]
 80037e8:	695b      	ldr	r3, [r3, #20]
 80037ea:	4798      	blx	r3
    if (*currentPresenter)
 80037ec:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 80037f0:	b110      	cbz	r0, 80037f8 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80037f2:	6803      	ldr	r3, [r0, #0]
 80037f4:	685b      	ldr	r3, [r3, #4]
 80037f6:	4798      	blx	r3
    if (*currentScreen)
 80037f8:	f8d8 0000 	ldr.w	r0, [r8]
 80037fc:	b110      	cbz	r0, 8003804 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80037fe:	6803      	ldr	r3, [r0, #0]
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	4798      	blx	r3
    if (*currentPresenter)
 8003804:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003808:	b110      	cbz	r0, 8003810 <_ZN23FrontendApplicationBase43gotoMainScreenScreenCoverTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800380a:	6803      	ldr	r3, [r0, #0]
 800380c:	689b      	ldr	r3, [r3, #8]
 800380e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003810:	68f0      	ldr	r0, [r6, #12]
 8003812:	2100      	movs	r1, #0
 8003814:	f7ff fef6 	bl	8003604 <_ZN8touchgfx17AbstractPartition2atINS_15CoverTransitionILNS_9DirectionE2EEEEERT_t>
 8003818:	2114      	movs	r1, #20
 800381a:	4604      	mov	r4, r0
 800381c:	f7ff fef6 	bl	800360c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003820:	68b0      	ldr	r0, [r6, #8]
 8003822:	6803      	ldr	r3, [r0, #0]
 8003824:	2100      	movs	r1, #0
 8003826:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003828:	4798      	blx	r3
 800382a:	4605      	mov	r5, r0
 800382c:	f004 fbb4 	bl	8007f98 <_ZN14MainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003830:	6870      	ldr	r0, [r6, #4]
 8003832:	6803      	ldr	r3, [r0, #0]
 8003834:	2100      	movs	r1, #0
 8003836:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003838:	4798      	blx	r3
 800383a:	4629      	mov	r1, r5
 800383c:	4606      	mov	r6, r0
 800383e:	f004 fb7b 	bl	8007f38 <_ZN19MainScreenPresenterC1ER14MainScreenView>
    model->bind(newPresenter);
 8003842:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003844:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003848:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800384c:	f8c8 5000 	str.w	r5, [r8]
 8003850:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003854:	682b      	ldr	r3, [r5, #0]
 8003856:	f8c6 a008 	str.w	sl, [r6, #8]
 800385a:	4628      	mov	r0, r5
 800385c:	68db      	ldr	r3, [r3, #12]
 800385e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003860:	4798      	blx	r3
    newPresenter->activate();
 8003862:	6833      	ldr	r3, [r6, #0]
 8003864:	4630      	mov	r0, r6
 8003866:	681b      	ldr	r3, [r3, #0]
 8003868:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800386a:	4621      	mov	r1, r4
 800386c:	4628      	mov	r0, r5
 800386e:	f015 fab7 	bl	8018de0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003872:	6823      	ldr	r3, [r4, #0]
 8003874:	4620      	mov	r0, r4
 8003876:	691b      	ldr	r3, [r3, #16]
 8003878:	4798      	blx	r3
    newTransition->invalidate();
 800387a:	6823      	ldr	r3, [r4, #0]
 800387c:	4620      	mov	r0, r4
 800387e:	695b      	ldr	r3, [r3, #20]
}
 8003880:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003884:	4718      	bx	r3
 8003886:	bf00      	nop
 8003888:	0802bd35 	.word	0x0802bd35
 800388c:	0802c2f4 	.word	0x0802c2f4
 8003890:	0802bea2 	.word	0x0802bea2
 8003894:	0802bee9 	.word	0x0802bee9
 8003898:	0802bf8c 	.word	0x0802bf8c
 800389c:	20013f94 	.word	0x20013f94
 80038a0:	20013f90 	.word	0x20013f90

080038a4 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv>:
{
 80038a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen3x3View, Screen3x3Presenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80038a8:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80038ac:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80038ae:	68b0      	ldr	r0, [r6, #8]
 80038b0:	6803      	ldr	r3, [r0, #0]
 80038b2:	6a1b      	ldr	r3, [r3, #32]
 80038b4:	4798      	blx	r3
 80038b6:	f640 4303 	movw	r3, #3075	@ 0xc03
 80038ba:	4298      	cmp	r0, r3
 80038bc:	d805      	bhi.n	80038ca <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x26>
 80038be:	4b41      	ldr	r3, [pc, #260]	@ (80039c4 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x120>)
 80038c0:	4a41      	ldr	r2, [pc, #260]	@ (80039c8 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x124>)
 80038c2:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80038c4:	4841      	ldr	r0, [pc, #260]	@ (80039cc <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x128>)
 80038c6:	f026 fe61 	bl	802a58c <__assert_func>
 80038ca:	6870      	ldr	r0, [r6, #4]
 80038cc:	6803      	ldr	r3, [r0, #0]
 80038ce:	6a1b      	ldr	r3, [r3, #32]
 80038d0:	4798      	blx	r3
 80038d2:	280f      	cmp	r0, #15
 80038d4:	d803      	bhi.n	80038de <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x3a>
 80038d6:	4b3e      	ldr	r3, [pc, #248]	@ (80039d0 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x12c>)
 80038d8:	4a3b      	ldr	r2, [pc, #236]	@ (80039c8 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x124>)
 80038da:	21a4      	movs	r1, #164	@ 0xa4
 80038dc:	e7f2      	b.n	80038c4 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80038de:	68f0      	ldr	r0, [r6, #12]
 80038e0:	6803      	ldr	r3, [r0, #0]
 80038e2:	6a1b      	ldr	r3, [r3, #32]
 80038e4:	4798      	blx	r3
 80038e6:	280f      	cmp	r0, #15
 80038e8:	d803      	bhi.n	80038f2 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x4e>
 80038ea:	4b3a      	ldr	r3, [pc, #232]	@ (80039d4 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x130>)
 80038ec:	4a36      	ldr	r2, [pc, #216]	@ (80039c8 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x124>)
 80038ee:	21a5      	movs	r1, #165	@ 0xa5
 80038f0:	e7e8      	b.n	80038c4 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80038f2:	f013 f853 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80038f6:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 80039d8 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x134>
 80038fa:	3004      	adds	r0, #4
 80038fc:	f013 f8b4 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003900:	f8d9 0000 	ldr.w	r0, [r9]
 8003904:	b110      	cbz	r0, 800390c <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003906:	6803      	ldr	r3, [r0, #0]
 8003908:	68db      	ldr	r3, [r3, #12]
 800390a:	4798      	blx	r3
    if (*currentTrans)
 800390c:	f8d9 0000 	ldr.w	r0, [r9]
 8003910:	b110      	cbz	r0, 8003918 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003912:	6803      	ldr	r3, [r0, #0]
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	4798      	blx	r3
    if (*currentScreen)
 8003918:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 80039dc <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x138>
 800391c:	f8d8 0000 	ldr.w	r0, [r8]
 8003920:	b110      	cbz	r0, 8003928 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003922:	6803      	ldr	r3, [r0, #0]
 8003924:	695b      	ldr	r3, [r3, #20]
 8003926:	4798      	blx	r3
    if (*currentPresenter)
 8003928:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800392c:	b110      	cbz	r0, 8003934 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800392e:	6803      	ldr	r3, [r0, #0]
 8003930:	685b      	ldr	r3, [r3, #4]
 8003932:	4798      	blx	r3
    if (*currentScreen)
 8003934:	f8d8 0000 	ldr.w	r0, [r8]
 8003938:	b110      	cbz	r0, 8003940 <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800393a:	6803      	ldr	r3, [r0, #0]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	4798      	blx	r3
    if (*currentPresenter)
 8003940:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003944:	b110      	cbz	r0, 800394c <_ZN23FrontendApplicationBase42gotoScreen3x3ScreenCoverTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003946:	6803      	ldr	r3, [r0, #0]
 8003948:	689b      	ldr	r3, [r3, #8]
 800394a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800394c:	68f0      	ldr	r0, [r6, #12]
 800394e:	2100      	movs	r1, #0
 8003950:	f7ff fe58 	bl	8003604 <_ZN8touchgfx17AbstractPartition2atINS_15CoverTransitionILNS_9DirectionE2EEEEERT_t>
 8003954:	2114      	movs	r1, #20
 8003956:	4604      	mov	r4, r0
 8003958:	f7ff fe58 	bl	800360c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800395c:	68b0      	ldr	r0, [r6, #8]
 800395e:	6803      	ldr	r3, [r0, #0]
 8003960:	2100      	movs	r1, #0
 8003962:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003964:	4798      	blx	r3
 8003966:	4605      	mov	r5, r0
 8003968:	f005 f84e 	bl	8008a08 <_ZN13Screen3x3ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800396c:	6870      	ldr	r0, [r6, #4]
 800396e:	6803      	ldr	r3, [r0, #0]
 8003970:	2100      	movs	r1, #0
 8003972:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003974:	4798      	blx	r3
 8003976:	4629      	mov	r1, r5
 8003978:	4606      	mov	r6, r0
 800397a:	f005 f815 	bl	80089a8 <_ZN18Screen3x3PresenterC1ER13Screen3x3View>
    model->bind(newPresenter);
 800397e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003980:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003984:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003988:	f8c8 5000 	str.w	r5, [r8]
 800398c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003990:	682b      	ldr	r3, [r5, #0]
 8003992:	f8c6 a008 	str.w	sl, [r6, #8]
 8003996:	4628      	mov	r0, r5
 8003998:	68db      	ldr	r3, [r3, #12]
 800399a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 800399c:	4798      	blx	r3
    newPresenter->activate();
 800399e:	6833      	ldr	r3, [r6, #0]
 80039a0:	4630      	mov	r0, r6
 80039a2:	681b      	ldr	r3, [r3, #0]
 80039a4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80039a6:	4621      	mov	r1, r4
 80039a8:	4628      	mov	r0, r5
 80039aa:	f015 fa19 	bl	8018de0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80039ae:	6823      	ldr	r3, [r4, #0]
 80039b0:	4620      	mov	r0, r4
 80039b2:	691b      	ldr	r3, [r3, #16]
 80039b4:	4798      	blx	r3
    newTransition->invalidate();
 80039b6:	6823      	ldr	r3, [r4, #0]
 80039b8:	4620      	mov	r0, r4
 80039ba:	695b      	ldr	r3, [r3, #20]
}
 80039bc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80039c0:	4718      	bx	r3
 80039c2:	bf00      	nop
 80039c4:	0802bd35 	.word	0x0802bd35
 80039c8:	0802c3df 	.word	0x0802c3df
 80039cc:	0802bea2 	.word	0x0802bea2
 80039d0:	0802bee9 	.word	0x0802bee9
 80039d4:	0802bf8c 	.word	0x0802bf8c
 80039d8:	20013f94 	.word	0x20013f94
 80039dc:	20013f90 	.word	0x20013f90

080039e0 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv>:
{
 80039e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen5x5View, Screen5x5Presenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80039e4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 80039e8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80039ea:	68b0      	ldr	r0, [r6, #8]
 80039ec:	6803      	ldr	r3, [r0, #0]
 80039ee:	6a1b      	ldr	r3, [r3, #32]
 80039f0:	4798      	blx	r3
 80039f2:	f641 1323 	movw	r3, #6435	@ 0x1923
 80039f6:	4298      	cmp	r0, r3
 80039f8:	d805      	bhi.n	8003a06 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x26>
 80039fa:	4b41      	ldr	r3, [pc, #260]	@ (8003b00 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x120>)
 80039fc:	4a41      	ldr	r2, [pc, #260]	@ (8003b04 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x124>)
 80039fe:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003a00:	4841      	ldr	r0, [pc, #260]	@ (8003b08 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x128>)
 8003a02:	f026 fdc3 	bl	802a58c <__assert_func>
 8003a06:	6870      	ldr	r0, [r6, #4]
 8003a08:	6803      	ldr	r3, [r0, #0]
 8003a0a:	6a1b      	ldr	r3, [r3, #32]
 8003a0c:	4798      	blx	r3
 8003a0e:	280f      	cmp	r0, #15
 8003a10:	d803      	bhi.n	8003a1a <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x3a>
 8003a12:	4b3e      	ldr	r3, [pc, #248]	@ (8003b0c <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x12c>)
 8003a14:	4a3b      	ldr	r2, [pc, #236]	@ (8003b04 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x124>)
 8003a16:	21a4      	movs	r1, #164	@ 0xa4
 8003a18:	e7f2      	b.n	8003a00 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003a1a:	68f0      	ldr	r0, [r6, #12]
 8003a1c:	6803      	ldr	r3, [r0, #0]
 8003a1e:	6a1b      	ldr	r3, [r3, #32]
 8003a20:	4798      	blx	r3
 8003a22:	280f      	cmp	r0, #15
 8003a24:	d803      	bhi.n	8003a2e <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x4e>
 8003a26:	4b3a      	ldr	r3, [pc, #232]	@ (8003b10 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x130>)
 8003a28:	4a36      	ldr	r2, [pc, #216]	@ (8003b04 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x124>)
 8003a2a:	21a5      	movs	r1, #165	@ 0xa5
 8003a2c:	e7e8      	b.n	8003a00 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003a2e:	f012 ffb5 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003a32:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8003b14 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x134>
 8003a36:	3004      	adds	r0, #4
 8003a38:	f013 f816 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003a3c:	f8d9 0000 	ldr.w	r0, [r9]
 8003a40:	b110      	cbz	r0, 8003a48 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003a42:	6803      	ldr	r3, [r0, #0]
 8003a44:	68db      	ldr	r3, [r3, #12]
 8003a46:	4798      	blx	r3
    if (*currentTrans)
 8003a48:	f8d9 0000 	ldr.w	r0, [r9]
 8003a4c:	b110      	cbz	r0, 8003a54 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003a4e:	6803      	ldr	r3, [r0, #0]
 8003a50:	681b      	ldr	r3, [r3, #0]
 8003a52:	4798      	blx	r3
    if (*currentScreen)
 8003a54:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8003b18 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x138>
 8003a58:	f8d8 0000 	ldr.w	r0, [r8]
 8003a5c:	b110      	cbz	r0, 8003a64 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003a5e:	6803      	ldr	r3, [r0, #0]
 8003a60:	695b      	ldr	r3, [r3, #20]
 8003a62:	4798      	blx	r3
    if (*currentPresenter)
 8003a64:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003a68:	b110      	cbz	r0, 8003a70 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003a6a:	6803      	ldr	r3, [r0, #0]
 8003a6c:	685b      	ldr	r3, [r3, #4]
 8003a6e:	4798      	blx	r3
    if (*currentScreen)
 8003a70:	f8d8 0000 	ldr.w	r0, [r8]
 8003a74:	b110      	cbz	r0, 8003a7c <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003a76:	6803      	ldr	r3, [r0, #0]
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	4798      	blx	r3
    if (*currentPresenter)
 8003a7c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003a80:	b110      	cbz	r0, 8003a88 <_ZN23FrontendApplicationBase42gotoScreen5x5ScreenCoverTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003a82:	6803      	ldr	r3, [r0, #0]
 8003a84:	689b      	ldr	r3, [r3, #8]
 8003a86:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003a88:	68f0      	ldr	r0, [r6, #12]
 8003a8a:	2100      	movs	r1, #0
 8003a8c:	f7ff fdba 	bl	8003604 <_ZN8touchgfx17AbstractPartition2atINS_15CoverTransitionILNS_9DirectionE2EEEEERT_t>
 8003a90:	2114      	movs	r1, #20
 8003a92:	4604      	mov	r4, r0
 8003a94:	f7ff fdba 	bl	800360c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003a98:	68b0      	ldr	r0, [r6, #8]
 8003a9a:	6803      	ldr	r3, [r0, #0]
 8003a9c:	2100      	movs	r1, #0
 8003a9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003aa0:	4798      	blx	r3
 8003aa2:	4605      	mov	r5, r0
 8003aa4:	f005 fc68 	bl	8009378 <_ZN13Screen5x5ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003aa8:	6870      	ldr	r0, [r6, #4]
 8003aaa:	6803      	ldr	r3, [r0, #0]
 8003aac:	2100      	movs	r1, #0
 8003aae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ab0:	4798      	blx	r3
 8003ab2:	4629      	mov	r1, r5
 8003ab4:	4606      	mov	r6, r0
 8003ab6:	f005 fc2f 	bl	8009318 <_ZN18Screen5x5PresenterC1ER13Screen5x5View>
    model->bind(newPresenter);
 8003aba:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003abc:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003ac0:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003ac4:	f8c8 5000 	str.w	r5, [r8]
 8003ac8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003acc:	682b      	ldr	r3, [r5, #0]
 8003ace:	f8c6 a008 	str.w	sl, [r6, #8]
 8003ad2:	4628      	mov	r0, r5
 8003ad4:	68db      	ldr	r3, [r3, #12]
 8003ad6:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003ad8:	4798      	blx	r3
    newPresenter->activate();
 8003ada:	6833      	ldr	r3, [r6, #0]
 8003adc:	4630      	mov	r0, r6
 8003ade:	681b      	ldr	r3, [r3, #0]
 8003ae0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003ae2:	4621      	mov	r1, r4
 8003ae4:	4628      	mov	r0, r5
 8003ae6:	f015 f97b 	bl	8018de0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003aea:	6823      	ldr	r3, [r4, #0]
 8003aec:	4620      	mov	r0, r4
 8003aee:	691b      	ldr	r3, [r3, #16]
 8003af0:	4798      	blx	r3
    newTransition->invalidate();
 8003af2:	6823      	ldr	r3, [r4, #0]
 8003af4:	4620      	mov	r0, r4
 8003af6:	695b      	ldr	r3, [r3, #20]
}
 8003af8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003afc:	4718      	bx	r3
 8003afe:	bf00      	nop
 8003b00:	0802bd35 	.word	0x0802bd35
 8003b04:	0802c4c8 	.word	0x0802c4c8
 8003b08:	0802bea2 	.word	0x0802bea2
 8003b0c:	0802bee9 	.word	0x0802bee9
 8003b10:	0802bf8c 	.word	0x0802bf8c
 8003b14:	20013f94 	.word	0x20013f94
 8003b18:	20013f90 	.word	0x20013f90

08003b1c <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv>:
{
 8003b1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Chosing_modeView, Chosing_modePresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003b20:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003b24:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003b26:	68b0      	ldr	r0, [r6, #8]
 8003b28:	6803      	ldr	r3, [r0, #0]
 8003b2a:	6a1b      	ldr	r3, [r3, #32]
 8003b2c:	4798      	blx	r3
 8003b2e:	f5b0 7f4d 	cmp.w	r0, #820	@ 0x334
 8003b32:	d205      	bcs.n	8003b40 <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x24>
 8003b34:	4b3f      	ldr	r3, [pc, #252]	@ (8003c34 <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x118>)
 8003b36:	4a40      	ldr	r2, [pc, #256]	@ (8003c38 <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x11c>)
 8003b38:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003b3a:	4840      	ldr	r0, [pc, #256]	@ (8003c3c <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x120>)
 8003b3c:	f026 fd26 	bl	802a58c <__assert_func>
 8003b40:	6870      	ldr	r0, [r6, #4]
 8003b42:	6803      	ldr	r3, [r0, #0]
 8003b44:	6a1b      	ldr	r3, [r3, #32]
 8003b46:	4798      	blx	r3
 8003b48:	280f      	cmp	r0, #15
 8003b4a:	d803      	bhi.n	8003b54 <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x38>
 8003b4c:	4b3c      	ldr	r3, [pc, #240]	@ (8003c40 <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x124>)
 8003b4e:	4a3a      	ldr	r2, [pc, #232]	@ (8003c38 <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x11c>)
 8003b50:	21a4      	movs	r1, #164	@ 0xa4
 8003b52:	e7f2      	b.n	8003b3a <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003b54:	68f0      	ldr	r0, [r6, #12]
 8003b56:	6803      	ldr	r3, [r0, #0]
 8003b58:	6a1b      	ldr	r3, [r3, #32]
 8003b5a:	4798      	blx	r3
 8003b5c:	280f      	cmp	r0, #15
 8003b5e:	d803      	bhi.n	8003b68 <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x4c>
 8003b60:	4b38      	ldr	r3, [pc, #224]	@ (8003c44 <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x128>)
 8003b62:	4a35      	ldr	r2, [pc, #212]	@ (8003c38 <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x11c>)
 8003b64:	21a5      	movs	r1, #165	@ 0xa5
 8003b66:	e7e8      	b.n	8003b3a <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003b68:	f012 ff18 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003b6c:	f8df 90d8 	ldr.w	r9, [pc, #216]	@ 8003c48 <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x12c>
 8003b70:	3004      	adds	r0, #4
 8003b72:	f012 ff79 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003b76:	f8d9 0000 	ldr.w	r0, [r9]
 8003b7a:	b110      	cbz	r0, 8003b82 <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003b7c:	6803      	ldr	r3, [r0, #0]
 8003b7e:	68db      	ldr	r3, [r3, #12]
 8003b80:	4798      	blx	r3
    if (*currentTrans)
 8003b82:	f8d9 0000 	ldr.w	r0, [r9]
 8003b86:	b110      	cbz	r0, 8003b8e <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003b88:	6803      	ldr	r3, [r0, #0]
 8003b8a:	681b      	ldr	r3, [r3, #0]
 8003b8c:	4798      	blx	r3
    if (*currentScreen)
 8003b8e:	f8df 80bc 	ldr.w	r8, [pc, #188]	@ 8003c4c <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x130>
 8003b92:	f8d8 0000 	ldr.w	r0, [r8]
 8003b96:	b110      	cbz	r0, 8003b9e <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003b98:	6803      	ldr	r3, [r0, #0]
 8003b9a:	695b      	ldr	r3, [r3, #20]
 8003b9c:	4798      	blx	r3
    if (*currentPresenter)
 8003b9e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003ba2:	b110      	cbz	r0, 8003baa <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003ba4:	6803      	ldr	r3, [r0, #0]
 8003ba6:	685b      	ldr	r3, [r3, #4]
 8003ba8:	4798      	blx	r3
    if (*currentScreen)
 8003baa:	f8d8 0000 	ldr.w	r0, [r8]
 8003bae:	b110      	cbz	r0, 8003bb6 <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003bb0:	6803      	ldr	r3, [r0, #0]
 8003bb2:	681b      	ldr	r3, [r3, #0]
 8003bb4:	4798      	blx	r3
    if (*currentPresenter)
 8003bb6:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003bba:	b110      	cbz	r0, 8003bc2 <_ZN23FrontendApplicationBase45gotoChosing_modeScreenCoverTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003bbc:	6803      	ldr	r3, [r0, #0]
 8003bbe:	689b      	ldr	r3, [r3, #8]
 8003bc0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003bc2:	68f0      	ldr	r0, [r6, #12]
 8003bc4:	2100      	movs	r1, #0
 8003bc6:	f7ff fd1d 	bl	8003604 <_ZN8touchgfx17AbstractPartition2atINS_15CoverTransitionILNS_9DirectionE2EEEEERT_t>
 8003bca:	2114      	movs	r1, #20
 8003bcc:	4604      	mov	r4, r0
 8003bce:	f7ff fd1d 	bl	800360c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003bd2:	2100      	movs	r1, #0
 8003bd4:	68b0      	ldr	r0, [r6, #8]
 8003bd6:	f7ff faff 	bl	80031d8 <_ZN8touchgfx17AbstractPartition2atI16Chosing_modeViewEERT_t>
 8003bda:	4605      	mov	r5, r0
 8003bdc:	f004 f808 	bl	8007bf0 <_ZN16Chosing_modeViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003be0:	6870      	ldr	r0, [r6, #4]
 8003be2:	2100      	movs	r1, #0
 8003be4:	f7ff fafb 	bl	80031de <_ZN8touchgfx17AbstractPartition2atI21Chosing_modePresenterEERT_t>
 8003be8:	4629      	mov	r1, r5
 8003bea:	4606      	mov	r6, r0
 8003bec:	f003 ffde 	bl	8007bac <_ZN21Chosing_modePresenterC1ER16Chosing_modeView>
    model->bind(newPresenter);
 8003bf0:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003bf2:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003bf6:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003bfa:	f8c8 5000 	str.w	r5, [r8]
 8003bfe:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003c02:	682b      	ldr	r3, [r5, #0]
 8003c04:	f8c6 a008 	str.w	sl, [r6, #8]
 8003c08:	4628      	mov	r0, r5
 8003c0a:	68db      	ldr	r3, [r3, #12]
 8003c0c:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003c0e:	4798      	blx	r3
    newPresenter->activate();
 8003c10:	6833      	ldr	r3, [r6, #0]
 8003c12:	4630      	mov	r0, r6
 8003c14:	681b      	ldr	r3, [r3, #0]
 8003c16:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003c18:	4621      	mov	r1, r4
 8003c1a:	4628      	mov	r0, r5
 8003c1c:	f015 f8e0 	bl	8018de0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003c20:	6823      	ldr	r3, [r4, #0]
 8003c22:	4620      	mov	r0, r4
 8003c24:	691b      	ldr	r3, [r3, #16]
 8003c26:	4798      	blx	r3
    newTransition->invalidate();
 8003c28:	6823      	ldr	r3, [r4, #0]
 8003c2a:	4620      	mov	r0, r4
 8003c2c:	695b      	ldr	r3, [r3, #20]
}
 8003c2e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c32:	4718      	bx	r3
 8003c34:	0802bd35 	.word	0x0802bd35
 8003c38:	0802c5b1 	.word	0x0802c5b1
 8003c3c:	0802bea2 	.word	0x0802bea2
 8003c40:	0802bee9 	.word	0x0802bee9
 8003c44:	0802bf8c 	.word	0x0802bf8c
 8003c48:	20013f94 	.word	0x20013f94
 8003c4c:	20013f90 	.word	0x20013f90

08003c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>:
 8003c50:	6803      	ldr	r3, [r0, #0]
 8003c52:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003c54:	4718      	bx	r3
	...

08003c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8003c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
          relativeValue(0)
 8003c5c:	4605      	mov	r5, r0
 8003c5e:	2600      	movs	r6, #0
 8003c60:	4b16      	ldr	r3, [pc, #88]	@ (8003cbc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x64>)
 8003c62:	6046      	str	r6, [r0, #4]
 8003c64:	7206      	strb	r6, [r0, #8]
 8003c66:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8003c6a:	4604      	mov	r4, r0
          snapshot(),
 8003c6c:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8003c6e:	460f      	mov	r7, r1
          snapshot(),
 8003c70:	f00f fc66 	bl	8013540 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
 8003c74:	4b12      	ldr	r3, [pc, #72]	@ (8003cc0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x68>)
          animationSteps(transitionSteps),
 8003c76:	f884 7038 	strb.w	r7, [r4, #56]	@ 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 8003c7a:	781b      	ldrb	r3, [r3, #0]
          animationCounter(0),
 8003c7c:	f884 6039 	strb.w	r6, [r4, #57]	@ 0x39
          relativeValue(0)
 8003c80:	87a6      	strh	r6, [r4, #60]	@ 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 8003c82:	b923      	cbnz	r3, 8003c8e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x36>
            done = true;
 8003c84:	2301      	movs	r3, #1
 8003c86:	7223      	strb	r3, [r4, #8]
    }
 8003c88:	4620      	mov	r0, r4
 8003c8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003c8e:	4b0d      	ldr	r3, [pc, #52]	@ (8003cc4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x6c>)
 8003c90:	4f0d      	ldr	r7, [pc, #52]	@ (8003cc8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x70>)
 8003c92:	f9b3 8000 	ldrsh.w	r8, [r3]
        setX(x);
 8003c96:	68e3      	ldr	r3, [r4, #12]
        setWidth(width);
 8003c98:	f9b7 1000 	ldrsh.w	r1, [r7]
 8003c9c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
        rect.x = x;
 8003c9e:	6126      	str	r6, [r4, #16]
        setWidth(width);
 8003ca0:	4628      	mov	r0, r5
 8003ca2:	4798      	blx	r3
        setHeight(height);
 8003ca4:	68e3      	ldr	r3, [r4, #12]
 8003ca6:	4641      	mov	r1, r8
 8003ca8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003caa:	4628      	mov	r0, r5
 8003cac:	4798      	blx	r3
        snapshot.makeSnapshot();
 8003cae:	4628      	mov	r0, r5
 8003cb0:	f00f fbc1 	bl	8013436 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
 8003cb4:	883b      	ldrh	r3, [r7, #0]
 8003cb6:	425b      	negs	r3, r3
 8003cb8:	8763      	strh	r3, [r4, #58]	@ 0x3a
    }
 8003cba:	e7e5      	b.n	8003c88 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x30>
 8003cbc:	0802d370 	.word	0x0802d370
 8003cc0:	20013f4b 	.word	0x20013f4b
 8003cc4:	20013f42 	.word	0x20013f42
 8003cc8:	20013f40 	.word	0x20013f40

08003ccc <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv>:
{
 8003ccc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<SelectedGameDesignView, SelectedGameDesignPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003cd0:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003cd4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003cd6:	68b0      	ldr	r0, [r6, #8]
 8003cd8:	6803      	ldr	r3, [r0, #0]
 8003cda:	6a1b      	ldr	r3, [r3, #32]
 8003cdc:	4798      	blx	r3
 8003cde:	f5b0 7f7d 	cmp.w	r0, #1012	@ 0x3f4
 8003ce2:	d205      	bcs.n	8003cf0 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x24>
 8003ce4:	4b40      	ldr	r3, [pc, #256]	@ (8003de8 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x11c>)
 8003ce6:	4a41      	ldr	r2, [pc, #260]	@ (8003dec <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x120>)
 8003ce8:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003cea:	4841      	ldr	r0, [pc, #260]	@ (8003df0 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x124>)
 8003cec:	f026 fc4e 	bl	802a58c <__assert_func>
 8003cf0:	6870      	ldr	r0, [r6, #4]
 8003cf2:	6803      	ldr	r3, [r0, #0]
 8003cf4:	6a1b      	ldr	r3, [r3, #32]
 8003cf6:	4798      	blx	r3
 8003cf8:	280f      	cmp	r0, #15
 8003cfa:	d803      	bhi.n	8003d04 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x38>
 8003cfc:	4b3d      	ldr	r3, [pc, #244]	@ (8003df4 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x128>)
 8003cfe:	4a3b      	ldr	r2, [pc, #236]	@ (8003dec <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x120>)
 8003d00:	21a4      	movs	r1, #164	@ 0xa4
 8003d02:	e7f2      	b.n	8003cea <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003d04:	68f0      	ldr	r0, [r6, #12]
 8003d06:	6803      	ldr	r3, [r0, #0]
 8003d08:	6a1b      	ldr	r3, [r3, #32]
 8003d0a:	4798      	blx	r3
 8003d0c:	283f      	cmp	r0, #63	@ 0x3f
 8003d0e:	d803      	bhi.n	8003d18 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x4c>
 8003d10:	4b39      	ldr	r3, [pc, #228]	@ (8003df8 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x12c>)
 8003d12:	4a36      	ldr	r2, [pc, #216]	@ (8003dec <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x120>)
 8003d14:	21a5      	movs	r1, #165	@ 0xa5
 8003d16:	e7e8      	b.n	8003cea <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003d18:	f012 fe40 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003d1c:	f8df 90dc 	ldr.w	r9, [pc, #220]	@ 8003dfc <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x130>
 8003d20:	3004      	adds	r0, #4
 8003d22:	f012 fea1 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003d26:	f8d9 0000 	ldr.w	r0, [r9]
 8003d2a:	b110      	cbz	r0, 8003d32 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003d2c:	6803      	ldr	r3, [r0, #0]
 8003d2e:	68db      	ldr	r3, [r3, #12]
 8003d30:	4798      	blx	r3
    if (*currentTrans)
 8003d32:	f8d9 0000 	ldr.w	r0, [r9]
 8003d36:	b110      	cbz	r0, 8003d3e <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003d38:	6803      	ldr	r3, [r0, #0]
 8003d3a:	681b      	ldr	r3, [r3, #0]
 8003d3c:	4798      	blx	r3
    if (*currentScreen)
 8003d3e:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8003e00 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x134>
 8003d42:	f8d8 0000 	ldr.w	r0, [r8]
 8003d46:	b110      	cbz	r0, 8003d4e <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003d48:	6803      	ldr	r3, [r0, #0]
 8003d4a:	695b      	ldr	r3, [r3, #20]
 8003d4c:	4798      	blx	r3
    if (*currentPresenter)
 8003d4e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003d52:	b110      	cbz	r0, 8003d5a <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003d54:	6803      	ldr	r3, [r0, #0]
 8003d56:	685b      	ldr	r3, [r3, #4]
 8003d58:	4798      	blx	r3
    if (*currentScreen)
 8003d5a:	f8d8 0000 	ldr.w	r0, [r8]
 8003d5e:	b110      	cbz	r0, 8003d66 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003d60:	6803      	ldr	r3, [r0, #0]
 8003d62:	681b      	ldr	r3, [r3, #0]
 8003d64:	4798      	blx	r3
    if (*currentPresenter)
 8003d66:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003d6a:	b110      	cbz	r0, 8003d72 <_ZN23FrontendApplicationBase51gotoSelectedGameDesignScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003d6c:	6803      	ldr	r3, [r0, #0]
 8003d6e:	689b      	ldr	r3, [r3, #8]
 8003d70:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003d72:	68f0      	ldr	r0, [r6, #12]
 8003d74:	2100      	movs	r1, #0
 8003d76:	f7ff ff6b 	bl	8003c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8003d7a:	2114      	movs	r1, #20
 8003d7c:	4604      	mov	r4, r0
 8003d7e:	f7ff ff6b 	bl	8003c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003d82:	68b0      	ldr	r0, [r6, #8]
 8003d84:	6803      	ldr	r3, [r0, #0]
 8003d86:	2100      	movs	r1, #0
 8003d88:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d8a:	4798      	blx	r3
 8003d8c:	4605      	mov	r5, r0
 8003d8e:	f007 f8f9 	bl	800af84 <_ZN22SelectedGameDesignViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003d92:	6870      	ldr	r0, [r6, #4]
 8003d94:	6803      	ldr	r3, [r0, #0]
 8003d96:	2100      	movs	r1, #0
 8003d98:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d9a:	4798      	blx	r3
 8003d9c:	4629      	mov	r1, r5
 8003d9e:	4606      	mov	r6, r0
 8003da0:	f007 f8ce 	bl	800af40 <_ZN27SelectedGameDesignPresenterC1ER22SelectedGameDesignView>
    model->bind(newPresenter);
 8003da4:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003da6:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003daa:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003dae:	f8c8 5000 	str.w	r5, [r8]
 8003db2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003db6:	682b      	ldr	r3, [r5, #0]
 8003db8:	f8c6 a008 	str.w	sl, [r6, #8]
 8003dbc:	4628      	mov	r0, r5
 8003dbe:	68db      	ldr	r3, [r3, #12]
 8003dc0:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003dc2:	4798      	blx	r3
    newPresenter->activate();
 8003dc4:	6833      	ldr	r3, [r6, #0]
 8003dc6:	4630      	mov	r0, r6
 8003dc8:	681b      	ldr	r3, [r3, #0]
 8003dca:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003dcc:	4621      	mov	r1, r4
 8003dce:	4628      	mov	r0, r5
 8003dd0:	f015 f806 	bl	8018de0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003dd4:	6823      	ldr	r3, [r4, #0]
 8003dd6:	4620      	mov	r0, r4
 8003dd8:	691b      	ldr	r3, [r3, #16]
 8003dda:	4798      	blx	r3
    newTransition->invalidate();
 8003ddc:	6823      	ldr	r3, [r4, #0]
 8003dde:	4620      	mov	r0, r4
 8003de0:	695b      	ldr	r3, [r3, #20]
}
 8003de2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003de6:	4718      	bx	r3
 8003de8:	0802bd35 	.word	0x0802bd35
 8003dec:	0802c6a0 	.word	0x0802c6a0
 8003df0:	0802bea2 	.word	0x0802bea2
 8003df4:	0802bee9 	.word	0x0802bee9
 8003df8:	0802bf8c 	.word	0x0802bf8c
 8003dfc:	20013f94 	.word	0x20013f94
 8003e00:	20013f90 	.word	0x20013f90

08003e04 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv>:
{
 8003e04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<GameOverScreenView, GameOverScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e08:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003e0c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e0e:	68b0      	ldr	r0, [r6, #8]
 8003e10:	6803      	ldr	r3, [r0, #0]
 8003e12:	6a1b      	ldr	r3, [r3, #32]
 8003e14:	4798      	blx	r3
 8003e16:	f5b0 7f4c 	cmp.w	r0, #816	@ 0x330
 8003e1a:	d205      	bcs.n	8003e28 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x24>
 8003e1c:	4b40      	ldr	r3, [pc, #256]	@ (8003f20 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x11c>)
 8003e1e:	4a41      	ldr	r2, [pc, #260]	@ (8003f24 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x120>)
 8003e20:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003e22:	4841      	ldr	r0, [pc, #260]	@ (8003f28 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x124>)
 8003e24:	f026 fbb2 	bl	802a58c <__assert_func>
 8003e28:	6870      	ldr	r0, [r6, #4]
 8003e2a:	6803      	ldr	r3, [r0, #0]
 8003e2c:	6a1b      	ldr	r3, [r3, #32]
 8003e2e:	4798      	blx	r3
 8003e30:	280f      	cmp	r0, #15
 8003e32:	d803      	bhi.n	8003e3c <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x38>
 8003e34:	4b3d      	ldr	r3, [pc, #244]	@ (8003f2c <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x128>)
 8003e36:	4a3b      	ldr	r2, [pc, #236]	@ (8003f24 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x120>)
 8003e38:	21a4      	movs	r1, #164	@ 0xa4
 8003e3a:	e7f2      	b.n	8003e22 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003e3c:	68f0      	ldr	r0, [r6, #12]
 8003e3e:	6803      	ldr	r3, [r0, #0]
 8003e40:	6a1b      	ldr	r3, [r3, #32]
 8003e42:	4798      	blx	r3
 8003e44:	283f      	cmp	r0, #63	@ 0x3f
 8003e46:	d803      	bhi.n	8003e50 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x4c>
 8003e48:	4b39      	ldr	r3, [pc, #228]	@ (8003f30 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x12c>)
 8003e4a:	4a36      	ldr	r2, [pc, #216]	@ (8003f24 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x120>)
 8003e4c:	21a5      	movs	r1, #165	@ 0xa5
 8003e4e:	e7e8      	b.n	8003e22 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003e50:	f012 fda4 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003e54:	f8df 90dc 	ldr.w	r9, [pc, #220]	@ 8003f34 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x130>
 8003e58:	3004      	adds	r0, #4
 8003e5a:	f012 fe05 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003e5e:	f8d9 0000 	ldr.w	r0, [r9]
 8003e62:	b110      	cbz	r0, 8003e6a <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003e64:	6803      	ldr	r3, [r0, #0]
 8003e66:	68db      	ldr	r3, [r3, #12]
 8003e68:	4798      	blx	r3
    if (*currentTrans)
 8003e6a:	f8d9 0000 	ldr.w	r0, [r9]
 8003e6e:	b110      	cbz	r0, 8003e76 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003e70:	6803      	ldr	r3, [r0, #0]
 8003e72:	681b      	ldr	r3, [r3, #0]
 8003e74:	4798      	blx	r3
    if (*currentScreen)
 8003e76:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8003f38 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x134>
 8003e7a:	f8d8 0000 	ldr.w	r0, [r8]
 8003e7e:	b110      	cbz	r0, 8003e86 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003e80:	6803      	ldr	r3, [r0, #0]
 8003e82:	695b      	ldr	r3, [r3, #20]
 8003e84:	4798      	blx	r3
    if (*currentPresenter)
 8003e86:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003e8a:	b110      	cbz	r0, 8003e92 <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003e8c:	6803      	ldr	r3, [r0, #0]
 8003e8e:	685b      	ldr	r3, [r3, #4]
 8003e90:	4798      	blx	r3
    if (*currentScreen)
 8003e92:	f8d8 0000 	ldr.w	r0, [r8]
 8003e96:	b110      	cbz	r0, 8003e9e <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003e98:	6803      	ldr	r3, [r0, #0]
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	4798      	blx	r3
    if (*currentPresenter)
 8003e9e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003ea2:	b110      	cbz	r0, 8003eaa <_ZN23FrontendApplicationBase47gotoGameOverScreenScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003ea4:	6803      	ldr	r3, [r0, #0]
 8003ea6:	689b      	ldr	r3, [r3, #8]
 8003ea8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003eaa:	68f0      	ldr	r0, [r6, #12]
 8003eac:	2100      	movs	r1, #0
 8003eae:	f7ff fecf 	bl	8003c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8003eb2:	2114      	movs	r1, #20
 8003eb4:	4604      	mov	r4, r0
 8003eb6:	f7ff fecf 	bl	8003c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003eba:	68b0      	ldr	r0, [r6, #8]
 8003ebc:	6803      	ldr	r3, [r0, #0]
 8003ebe:	2100      	movs	r1, #0
 8003ec0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ec2:	4798      	blx	r3
 8003ec4:	4605      	mov	r5, r0
 8003ec6:	f003 fff9 	bl	8007ebc <_ZN18GameOverScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003eca:	6870      	ldr	r0, [r6, #4]
 8003ecc:	6803      	ldr	r3, [r0, #0]
 8003ece:	2100      	movs	r1, #0
 8003ed0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ed2:	4798      	blx	r3
 8003ed4:	4629      	mov	r1, r5
 8003ed6:	4606      	mov	r6, r0
 8003ed8:	f003 ffaa 	bl	8007e30 <_ZN23GameOverScreenPresenterC1ER18GameOverScreenView>
    model->bind(newPresenter);
 8003edc:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8003ede:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8003ee2:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8003ee6:	f8c8 5000 	str.w	r5, [r8]
 8003eea:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003eee:	682b      	ldr	r3, [r5, #0]
 8003ef0:	f8c6 a008 	str.w	sl, [r6, #8]
 8003ef4:	4628      	mov	r0, r5
 8003ef6:	68db      	ldr	r3, [r3, #12]
 8003ef8:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8003efa:	4798      	blx	r3
    newPresenter->activate();
 8003efc:	6833      	ldr	r3, [r6, #0]
 8003efe:	4630      	mov	r0, r6
 8003f00:	681b      	ldr	r3, [r3, #0]
 8003f02:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f04:	4621      	mov	r1, r4
 8003f06:	4628      	mov	r0, r5
 8003f08:	f014 ff6a 	bl	8018de0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f0c:	6823      	ldr	r3, [r4, #0]
 8003f0e:	4620      	mov	r0, r4
 8003f10:	691b      	ldr	r3, [r3, #16]
 8003f12:	4798      	blx	r3
    newTransition->invalidate();
 8003f14:	6823      	ldr	r3, [r4, #0]
 8003f16:	4620      	mov	r0, r4
 8003f18:	695b      	ldr	r3, [r3, #20]
}
 8003f1a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f1e:	4718      	bx	r3
 8003f20:	0802bd35 	.word	0x0802bd35
 8003f24:	0802c79b 	.word	0x0802c79b
 8003f28:	0802bea2 	.word	0x0802bea2
 8003f2c:	0802bee9 	.word	0x0802bee9
 8003f30:	0802bf8c 	.word	0x0802bf8c
 8003f34:	20013f94 	.word	0x20013f94
 8003f38:	20013f90 	.word	0x20013f90

08003f3c <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv>:
{
 8003f3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen5x5_letterMergingView, Screen5x5_letterMergingPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003f40:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8003f44:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003f46:	68b0      	ldr	r0, [r6, #8]
 8003f48:	6803      	ldr	r3, [r0, #0]
 8003f4a:	6a1b      	ldr	r3, [r3, #32]
 8003f4c:	4798      	blx	r3
 8003f4e:	f241 1333 	movw	r3, #4403	@ 0x1133
 8003f52:	4298      	cmp	r0, r3
 8003f54:	d805      	bhi.n	8003f62 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x26>
 8003f56:	4b41      	ldr	r3, [pc, #260]	@ (800405c <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x120>)
 8003f58:	4a41      	ldr	r2, [pc, #260]	@ (8004060 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x124>)
 8003f5a:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003f5c:	4841      	ldr	r0, [pc, #260]	@ (8004064 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x128>)
 8003f5e:	f026 fb15 	bl	802a58c <__assert_func>
 8003f62:	6870      	ldr	r0, [r6, #4]
 8003f64:	6803      	ldr	r3, [r0, #0]
 8003f66:	6a1b      	ldr	r3, [r3, #32]
 8003f68:	4798      	blx	r3
 8003f6a:	280f      	cmp	r0, #15
 8003f6c:	d803      	bhi.n	8003f76 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x3a>
 8003f6e:	4b3e      	ldr	r3, [pc, #248]	@ (8004068 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x12c>)
 8003f70:	4a3b      	ldr	r2, [pc, #236]	@ (8004060 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x124>)
 8003f72:	21a4      	movs	r1, #164	@ 0xa4
 8003f74:	e7f2      	b.n	8003f5c <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003f76:	68f0      	ldr	r0, [r6, #12]
 8003f78:	6803      	ldr	r3, [r0, #0]
 8003f7a:	6a1b      	ldr	r3, [r3, #32]
 8003f7c:	4798      	blx	r3
 8003f7e:	283f      	cmp	r0, #63	@ 0x3f
 8003f80:	d803      	bhi.n	8003f8a <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x4e>
 8003f82:	4b3a      	ldr	r3, [pc, #232]	@ (800406c <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x130>)
 8003f84:	4a36      	ldr	r2, [pc, #216]	@ (8004060 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x124>)
 8003f86:	21a5      	movs	r1, #165	@ 0xa5
 8003f88:	e7e8      	b.n	8003f5c <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003f8a:	f012 fd07 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003f8e:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8004070 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x134>
 8003f92:	3004      	adds	r0, #4
 8003f94:	f012 fd68 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003f98:	f8d9 0000 	ldr.w	r0, [r9]
 8003f9c:	b110      	cbz	r0, 8003fa4 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003f9e:	6803      	ldr	r3, [r0, #0]
 8003fa0:	68db      	ldr	r3, [r3, #12]
 8003fa2:	4798      	blx	r3
    if (*currentTrans)
 8003fa4:	f8d9 0000 	ldr.w	r0, [r9]
 8003fa8:	b110      	cbz	r0, 8003fb0 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003faa:	6803      	ldr	r3, [r0, #0]
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	4798      	blx	r3
    if (*currentScreen)
 8003fb0:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 8004074 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x138>
 8003fb4:	f8d8 0000 	ldr.w	r0, [r8]
 8003fb8:	b110      	cbz	r0, 8003fc0 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003fba:	6803      	ldr	r3, [r0, #0]
 8003fbc:	695b      	ldr	r3, [r3, #20]
 8003fbe:	4798      	blx	r3
    if (*currentPresenter)
 8003fc0:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003fc4:	b110      	cbz	r0, 8003fcc <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003fc6:	6803      	ldr	r3, [r0, #0]
 8003fc8:	685b      	ldr	r3, [r3, #4]
 8003fca:	4798      	blx	r3
    if (*currentScreen)
 8003fcc:	f8d8 0000 	ldr.w	r0, [r8]
 8003fd0:	b110      	cbz	r0, 8003fd8 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003fd2:	6803      	ldr	r3, [r0, #0]
 8003fd4:	681b      	ldr	r3, [r3, #0]
 8003fd6:	4798      	blx	r3
    if (*currentPresenter)
 8003fd8:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8003fdc:	b110      	cbz	r0, 8003fe4 <_ZN23FrontendApplicationBase56gotoScreen5x5_letterMergingScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003fde:	6803      	ldr	r3, [r0, #0]
 8003fe0:	689b      	ldr	r3, [r3, #8]
 8003fe2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003fe4:	68f0      	ldr	r0, [r6, #12]
 8003fe6:	2100      	movs	r1, #0
 8003fe8:	f7ff fe32 	bl	8003c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8003fec:	2114      	movs	r1, #20
 8003fee:	4604      	mov	r4, r0
 8003ff0:	f7ff fe32 	bl	8003c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003ff4:	68b0      	ldr	r0, [r6, #8]
 8003ff6:	6803      	ldr	r3, [r0, #0]
 8003ff8:	2100      	movs	r1, #0
 8003ffa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ffc:	4798      	blx	r3
 8003ffe:	4605      	mov	r5, r0
 8004000:	f005 fede 	bl	8009dc0 <_ZN27Screen5x5_letterMergingViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004004:	6870      	ldr	r0, [r6, #4]
 8004006:	6803      	ldr	r3, [r0, #0]
 8004008:	2100      	movs	r1, #0
 800400a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800400c:	4798      	blx	r3
 800400e:	4629      	mov	r1, r5
 8004010:	4606      	mov	r6, r0
 8004012:	f005 fea5 	bl	8009d60 <_ZN32Screen5x5_letterMergingPresenterC1ER27Screen5x5_letterMergingView>
    model->bind(newPresenter);
 8004016:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004018:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 800401c:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8004020:	f8c8 5000 	str.w	r5, [r8]
 8004024:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004028:	682b      	ldr	r3, [r5, #0]
 800402a:	f8c6 a008 	str.w	sl, [r6, #8]
 800402e:	4628      	mov	r0, r5
 8004030:	68db      	ldr	r3, [r3, #12]
 8004032:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004034:	4798      	blx	r3
    newPresenter->activate();
 8004036:	6833      	ldr	r3, [r6, #0]
 8004038:	4630      	mov	r0, r6
 800403a:	681b      	ldr	r3, [r3, #0]
 800403c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800403e:	4621      	mov	r1, r4
 8004040:	4628      	mov	r0, r5
 8004042:	f014 fecd 	bl	8018de0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004046:	6823      	ldr	r3, [r4, #0]
 8004048:	4620      	mov	r0, r4
 800404a:	691b      	ldr	r3, [r3, #16]
 800404c:	4798      	blx	r3
    newTransition->invalidate();
 800404e:	6823      	ldr	r3, [r4, #0]
 8004050:	4620      	mov	r0, r4
 8004052:	695b      	ldr	r3, [r3, #20]
}
 8004054:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004058:	4718      	bx	r3
 800405a:	bf00      	nop
 800405c:	0802bd35 	.word	0x0802bd35
 8004060:	0802c88e 	.word	0x0802c88e
 8004064:	0802bea2 	.word	0x0802bea2
 8004068:	0802bee9 	.word	0x0802bee9
 800406c:	0802bf8c 	.word	0x0802bf8c
 8004070:	20013f94 	.word	0x20013f94
 8004074:	20013f90 	.word	0x20013f90

08004078 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv>:
{
 8004078:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen5x5_superMergingView, Screen5x5_superMergingPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800407c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8004080:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004082:	68b0      	ldr	r0, [r6, #8]
 8004084:	6803      	ldr	r3, [r0, #0]
 8004086:	6a1b      	ldr	r3, [r3, #32]
 8004088:	4798      	blx	r3
 800408a:	f641 0363 	movw	r3, #6243	@ 0x1863
 800408e:	4298      	cmp	r0, r3
 8004090:	d805      	bhi.n	800409e <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x26>
 8004092:	4b41      	ldr	r3, [pc, #260]	@ (8004198 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x120>)
 8004094:	4a41      	ldr	r2, [pc, #260]	@ (800419c <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x124>)
 8004096:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004098:	4841      	ldr	r0, [pc, #260]	@ (80041a0 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x128>)
 800409a:	f026 fa77 	bl	802a58c <__assert_func>
 800409e:	6870      	ldr	r0, [r6, #4]
 80040a0:	6803      	ldr	r3, [r0, #0]
 80040a2:	6a1b      	ldr	r3, [r3, #32]
 80040a4:	4798      	blx	r3
 80040a6:	280f      	cmp	r0, #15
 80040a8:	d803      	bhi.n	80040b2 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x3a>
 80040aa:	4b3e      	ldr	r3, [pc, #248]	@ (80041a4 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x12c>)
 80040ac:	4a3b      	ldr	r2, [pc, #236]	@ (800419c <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x124>)
 80040ae:	21a4      	movs	r1, #164	@ 0xa4
 80040b0:	e7f2      	b.n	8004098 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80040b2:	68f0      	ldr	r0, [r6, #12]
 80040b4:	6803      	ldr	r3, [r0, #0]
 80040b6:	6a1b      	ldr	r3, [r3, #32]
 80040b8:	4798      	blx	r3
 80040ba:	283f      	cmp	r0, #63	@ 0x3f
 80040bc:	d803      	bhi.n	80040c6 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x4e>
 80040be:	4b3a      	ldr	r3, [pc, #232]	@ (80041a8 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x130>)
 80040c0:	4a36      	ldr	r2, [pc, #216]	@ (800419c <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x124>)
 80040c2:	21a5      	movs	r1, #165	@ 0xa5
 80040c4:	e7e8      	b.n	8004098 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80040c6:	f012 fc69 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80040ca:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 80041ac <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x134>
 80040ce:	3004      	adds	r0, #4
 80040d0:	f012 fcca 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80040d4:	f8d9 0000 	ldr.w	r0, [r9]
 80040d8:	b110      	cbz	r0, 80040e0 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80040da:	6803      	ldr	r3, [r0, #0]
 80040dc:	68db      	ldr	r3, [r3, #12]
 80040de:	4798      	blx	r3
    if (*currentTrans)
 80040e0:	f8d9 0000 	ldr.w	r0, [r9]
 80040e4:	b110      	cbz	r0, 80040ec <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80040e6:	6803      	ldr	r3, [r0, #0]
 80040e8:	681b      	ldr	r3, [r3, #0]
 80040ea:	4798      	blx	r3
    if (*currentScreen)
 80040ec:	f8df 80c0 	ldr.w	r8, [pc, #192]	@ 80041b0 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x138>
 80040f0:	f8d8 0000 	ldr.w	r0, [r8]
 80040f4:	b110      	cbz	r0, 80040fc <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80040f6:	6803      	ldr	r3, [r0, #0]
 80040f8:	695b      	ldr	r3, [r3, #20]
 80040fa:	4798      	blx	r3
    if (*currentPresenter)
 80040fc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004100:	b110      	cbz	r0, 8004108 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004102:	6803      	ldr	r3, [r0, #0]
 8004104:	685b      	ldr	r3, [r3, #4]
 8004106:	4798      	blx	r3
    if (*currentScreen)
 8004108:	f8d8 0000 	ldr.w	r0, [r8]
 800410c:	b110      	cbz	r0, 8004114 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800410e:	6803      	ldr	r3, [r0, #0]
 8004110:	681b      	ldr	r3, [r3, #0]
 8004112:	4798      	blx	r3
    if (*currentPresenter)
 8004114:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8004118:	b110      	cbz	r0, 8004120 <_ZN23FrontendApplicationBase55gotoScreen5x5_superMergingScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800411a:	6803      	ldr	r3, [r0, #0]
 800411c:	689b      	ldr	r3, [r3, #8]
 800411e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004120:	68f0      	ldr	r0, [r6, #12]
 8004122:	2100      	movs	r1, #0
 8004124:	f7ff fd94 	bl	8003c50 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8004128:	2114      	movs	r1, #20
 800412a:	4604      	mov	r4, r0
 800412c:	f7ff fd94 	bl	8003c58 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004130:	68b0      	ldr	r0, [r6, #8]
 8004132:	6803      	ldr	r3, [r0, #0]
 8004134:	2100      	movs	r1, #0
 8004136:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004138:	4798      	blx	r3
 800413a:	4605      	mov	r5, r0
 800413c:	f006 fb3c 	bl	800a7b8 <_ZN26Screen5x5_superMergingViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004140:	6870      	ldr	r0, [r6, #4]
 8004142:	6803      	ldr	r3, [r0, #0]
 8004144:	2100      	movs	r1, #0
 8004146:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004148:	4798      	blx	r3
 800414a:	4629      	mov	r1, r5
 800414c:	4606      	mov	r6, r0
 800414e:	f006 fb03 	bl	800a758 <_ZN31Screen5x5_superMergingPresenterC1ER26Screen5x5_superMergingView>
    model->bind(newPresenter);
 8004152:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8004154:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8004158:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 800415c:	f8c8 5000 	str.w	r5, [r8]
 8004160:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004164:	682b      	ldr	r3, [r5, #0]
 8004166:	f8c6 a008 	str.w	sl, [r6, #8]
 800416a:	4628      	mov	r0, r5
 800416c:	68db      	ldr	r3, [r3, #12]
 800416e:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8004170:	4798      	blx	r3
    newPresenter->activate();
 8004172:	6833      	ldr	r3, [r6, #0]
 8004174:	4630      	mov	r0, r6
 8004176:	681b      	ldr	r3, [r3, #0]
 8004178:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800417a:	4621      	mov	r1, r4
 800417c:	4628      	mov	r0, r5
 800417e:	f014 fe2f 	bl	8018de0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004182:	6823      	ldr	r3, [r4, #0]
 8004184:	4620      	mov	r0, r4
 8004186:	691b      	ldr	r3, [r3, #16]
 8004188:	4798      	blx	r3
    newTransition->invalidate();
 800418a:	6823      	ldr	r3, [r4, #0]
 800418c:	4620      	mov	r0, r4
 800418e:	695b      	ldr	r3, [r3, #20]
}
 8004190:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004194:	4718      	bx	r3
 8004196:	bf00      	nop
 8004198:	0802bd35 	.word	0x0802bd35
 800419c:	0802c993 	.word	0x0802c993
 80041a0:	0802bea2 	.word	0x0802bea2
 80041a4:	0802bee9 	.word	0x0802bee9
 80041a8:	0802bf8c 	.word	0x0802bf8c
 80041ac:	20013f94 	.word	0x20013f94
 80041b0:	20013f90 	.word	0x20013f90

080041b4 <_ZN8touchgfx8CallbackI22GameOverScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80041b4:	4770      	bx	lr

080041b6 <_ZN22GameOverScreenViewBaseD1Ev>:
}

GameOverScreenViewBase::~GameOverScreenViewBase()
{

}
 80041b6:	4770      	bx	lr

080041b8 <_ZN22GameOverScreenViewBase11setupScreenEv>:

void GameOverScreenViewBase::setupScreen()
{

}
 80041b8:	4770      	bx	lr

080041ba <_ZN8touchgfx8CallbackI22GameOverScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80041ba:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80041bc:	68c2      	ldr	r2, [r0, #12]
 80041be:	6844      	ldr	r4, [r0, #4]
 80041c0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80041c2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80041c4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80041c8:	07d2      	lsls	r2, r2, #31
 80041ca:	bf48      	it	mi
 80041cc:	5962      	ldrmi	r2, [r4, r5]
 80041ce:	689b      	ldr	r3, [r3, #8]
    }
 80041d0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80041d2:	bf48      	it	mi
 80041d4:	58d3      	ldrmi	r3, [r2, r3]
 80041d6:	4718      	bx	r3

080041d8 <_ZNK8touchgfx8CallbackI22GameOverScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80041d8:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80041da:	6840      	ldr	r0, [r0, #4]
 80041dc:	b130      	cbz	r0, 80041ec <_ZNK8touchgfx8CallbackI22GameOverScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80041de:	689a      	ldr	r2, [r3, #8]
 80041e0:	b91a      	cbnz	r2, 80041ea <_ZNK8touchgfx8CallbackI22GameOverScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80041e2:	68d8      	ldr	r0, [r3, #12]
 80041e4:	f000 0001 	and.w	r0, r0, #1
 80041e8:	4770      	bx	lr
 80041ea:	2001      	movs	r0, #1
    }
 80041ec:	4770      	bx	lr

080041ee <_ZN8touchgfx8CallbackI22GameOverScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80041ee:	b510      	push	{r4, lr}
 80041f0:	2110      	movs	r1, #16
 80041f2:	4604      	mov	r4, r0
 80041f4:	f025 fa8e 	bl	8029714 <_ZdlPvj>
 80041f8:	4620      	mov	r0, r4
 80041fa:	bd10      	pop	{r4, pc}

080041fc <_ZN22GameOverScreenViewBaseD0Ev>:
GameOverScreenViewBase::~GameOverScreenViewBase()
 80041fc:	b510      	push	{r4, lr}
}
 80041fe:	f44f 714c 	mov.w	r1, #816	@ 0x330
GameOverScreenViewBase::~GameOverScreenViewBase()
 8004202:	4604      	mov	r4, r0
}
 8004204:	f025 fa86 	bl	8029714 <_ZdlPvj>
 8004208:	4620      	mov	r0, r4
 800420a:	bd10      	pop	{r4, pc}

0800420c <_ZN22GameOverScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void GameOverScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &menu)
 800420c:	f500 700e 	add.w	r0, r0, #568	@ 0x238
 8004210:	4288      	cmp	r0, r1
{
 8004212:	b508      	push	{r3, lr}
    if (&src == &menu)
 8004214:	d105      	bne.n	8004222 <_ZN22GameOverScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~GameOverScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004216:	f012 fbc1 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When menu clicked change screen to Chosing_mode
        //Go to Chosing_mode with block transition
        application().gotoChosing_modeScreenBlockTransition();
    }
}
 800421a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoChosing_modeScreenBlockTransition();
 800421e:	f7fe bf4b 	b.w	80030b8 <_ZN23FrontendApplicationBase37gotoChosing_modeScreenBlockTransitionEv>
}
 8004222:	bd08      	pop	{r3, pc}

08004224 <_ZN22GameOverScreenViewBaseC1Ev>:
GameOverScreenViewBase::GameOverScreenViewBase() :
 8004224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004228:	4604      	mov	r4, r0
 800422a:	b08d      	sub	sp, #52	@ 0x34
    flexButtonCallback(this, &GameOverScreenViewBase::flexButtonCallbackHandler)
 800422c:	46a0      	mov	r8, r4
        : presenter(0)
 800422e:	2500      	movs	r5, #0
 8004230:	f014 fc2a 	bl	8018a88 <_ZN8touchgfx6ScreenC1Ev>
 8004234:	4b83      	ldr	r3, [pc, #524]	@ (8004444 <_ZN22GameOverScreenViewBaseC1Ev+0x220>)
 8004236:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8004238:	f848 3b40 	str.w	r3, [r8], #64
 800423c:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 8004240:	4640      	mov	r0, r8
 8004242:	f104 0798 	add.w	r7, r4, #152	@ 0x98
 8004246:	f7fe fb0d 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 800424a:	4650      	mov	r0, sl
 800424c:	f7fe fb0a 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 8004250:	f104 09e0 	add.w	r9, r4, #224	@ 0xe0
 8004254:	4638      	mov	r0, r7
 8004256:	f7fe f935 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 800425a:	f504 76ac 	add.w	r6, r4, #344	@ 0x158
 800425e:	4648      	mov	r0, r9
 8004260:	f7fe fb14 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8004264:	4630      	mov	r0, r6
 8004266:	f7fe f92d 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 800426a:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 800426e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004270:	f8df b1fc 	ldr.w	fp, [pc, #508]	@ 8004470 <_ZN22GameOverScreenViewBaseC1Ev+0x24c>
        : TextArea()
 8004274:	9302      	str	r3, [sp, #8]
 8004276:	f7fe f925 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 800427a:	f504 73f6 	add.w	r3, r4, #492	@ 0x1ec
        : TextAreaWithWildcardBase(), wc1(0)
 800427e:	f8c4 b1a0 	str.w	fp, [r4, #416]	@ 0x1a0
        : TextArea()
 8004282:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004284:	f8c4 51e8 	str.w	r5, [r4, #488]	@ 0x1e8
        : TextArea()
 8004288:	9303      	str	r3, [sp, #12]
 800428a:	f7fe f91b 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 800428e:	f504 730e 	add.w	r3, r4, #568	@ 0x238
        : TextAreaWithWildcardBase(), wc1(0)
 8004292:	f8c4 b1ec 	str.w	fp, [r4, #492]	@ 0x1ec
 8004296:	4618      	mov	r0, r3
 8004298:	f8c4 5234 	str.w	r5, [r4, #564]	@ 0x234
 800429c:	9305      	str	r3, [sp, #20]
 800429e:	f7fe faf5 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80042a2:	f504 732c 	add.w	r3, r4, #688	@ 0x2b0
 80042a6:	4618      	mov	r0, r3
 80042a8:	9304      	str	r3, [sp, #16]
 80042aa:	f7fe f90b 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80042ae:	4b66      	ldr	r3, [pc, #408]	@ (8004448 <_ZN22GameOverScreenViewBaseC1Ev+0x224>)
 80042b0:	e9c4 34c8 	strd	r3, r4, [r4, #800]	@ 0x320
 80042b4:	4b65      	ldr	r3, [pc, #404]	@ (800444c <_ZN22GameOverScreenViewBaseC1Ev+0x228>)
 80042b6:	e9c4 35ca 	strd	r3, r5, [r4, #808]	@ 0x328
    __background.setPosition(0, 0, 240, 320);
 80042ba:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80042be:	462a      	mov	r2, r5
 80042c0:	4640      	mov	r0, r8
 80042c2:	9300      	str	r3, [sp, #0]
 80042c4:	4629      	mov	r1, r5
 80042c6:	23f0      	movs	r3, #240	@ 0xf0
 80042c8:	f7fe fab8 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80042cc:	f104 0b04 	add.w	fp, r4, #4
 80042d0:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80042d4:	4641      	mov	r1, r8
 80042d6:	66a3      	str	r3, [r4, #104]	@ 0x68
 80042d8:	4658      	mov	r0, fp
 80042da:	f00c fa17 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 240, 320);
 80042de:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80042e2:	462a      	mov	r2, r5
 80042e4:	4650      	mov	r0, sl
 80042e6:	9300      	str	r3, [sp, #0]
 80042e8:	4629      	mov	r1, r5
 80042ea:	23f0      	movs	r3, #240	@ 0xf0
 80042ec:	f7fe faa6 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80042f0:	4b57      	ldr	r3, [pc, #348]	@ (8004450 <_ZN22GameOverScreenViewBaseC1Ev+0x22c>)
 80042f2:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 80042f6:	4651      	mov	r1, sl
 80042f8:	4658      	mov	r0, fp
 80042fa:	f00c fa07 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(38, 46);
 80042fe:	222e      	movs	r2, #46	@ 0x2e
 8004300:	4638      	mov	r0, r7
 8004302:	2126      	movs	r1, #38	@ 0x26
 8004304:	f7fe f8d0 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004308:	f10d 0818 	add.w	r8, sp, #24
        color = newColor;
 800430c:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 8004310:	4639      	mov	r1, r7
        color = newColor;
 8004312:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
        boundingArea = calculateBoundingArea();
 8004316:	4640      	mov	r0, r8
        linespace = space;
 8004318:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        boundingArea = calculateBoundingArea();
 800431c:	f00f fa10 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004320:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004324:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
 8004328:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800432c:	4b49      	ldr	r3, [pc, #292]	@ (8004454 <_ZN22GameOverScreenViewBaseC1Ev+0x230>)
 800432e:	930a      	str	r3, [sp, #40]	@ 0x28
 8004330:	f04f 020a 	mov.w	r2, #10
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1ICF));
 8004334:	4638      	mov	r0, r7
 8004336:	a90a      	add	r1, sp, #40	@ 0x28
 8004338:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800433c:	f00f fc9a 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004340:	4639      	mov	r1, r7
 8004342:	4658      	mov	r0, fp
        borderBox.setPosition(x, y, width, height);
 8004344:	2735      	movs	r7, #53	@ 0x35
 8004346:	f00c f9e1 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800434a:	236e      	movs	r3, #110	@ 0x6e
 800434c:	4629      	mov	r1, r5
 800434e:	462a      	mov	r2, r5
 8004350:	f504 708a 	add.w	r0, r4, #276	@ 0x114
 8004354:	9700      	str	r7, [sp, #0]
 8004356:	f7fe fa71 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800435a:	f04f 0205 	mov.w	r2, #5
 800435e:	f8a4 2144 	strh.w	r2, [r4, #324]	@ 0x144
        up = colorReleased;
 8004362:	4a3d      	ldr	r2, [pc, #244]	@ (8004458 <_ZN22GameOverScreenViewBaseC1Ev+0x234>)
 8004364:	f8c4 2148 	str.w	r2, [r4, #328]	@ 0x148
        down = colorPressed;
 8004368:	f502 524c 	add.w	r2, r2, #13056	@ 0x3300
 800436c:	3233      	adds	r2, #51	@ 0x33
 800436e:	f8c4 214c 	str.w	r2, [r4, #332]	@ 0x14c
        borderUp = borderColorReleased;
 8004372:	f5a2 42cc 	sub.w	r2, r2, #26112	@ 0x6600
 8004376:	3a66      	subs	r2, #102	@ 0x66
 8004378:	f8c4 2150 	str.w	r2, [r4, #336]	@ 0x150
        borderDown = borderColorPressed;
 800437c:	f102 1233 	add.w	r2, r2, #3342387	@ 0x330033
 8004380:	f502 524c 	add.w	r2, r2, #13056	@ 0x3300
        handlePressedUpdated();
 8004384:	4648      	mov	r0, r9
        borderDown = borderColorPressed;
 8004386:	f8c4 2154 	str.w	r2, [r4, #340]	@ 0x154
        handlePressedUpdated();
 800438a:	f7fe f9bc 	bl	8002706 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton2.setPosition(65, 98, 110, 53);
 800438e:	236e      	movs	r3, #110	@ 0x6e
 8004390:	2262      	movs	r2, #98	@ 0x62
 8004392:	4648      	mov	r0, r9
 8004394:	2141      	movs	r1, #65	@ 0x41
 8004396:	9700      	str	r7, [sp, #0]
 8004398:	f7fe fa50 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800439c:	4649      	mov	r1, r9
 800439e:	4658      	mov	r0, fp
 80043a0:	f00c f9b4 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(84, 111);
 80043a4:	226f      	movs	r2, #111	@ 0x6f
 80043a6:	2154      	movs	r1, #84	@ 0x54
 80043a8:	4630      	mov	r0, r6
 80043aa:	f7fe f87d 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80043ae:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 80043b2:	f8c4 2188 	str.w	r2, [r4, #392]	@ 0x188
        boundingArea = calculateBoundingArea();
 80043b6:	4631      	mov	r1, r6
 80043b8:	4640      	mov	r0, r8
        linespace = space;
 80043ba:	f8a4 518c 	strh.w	r5, [r4, #396]	@ 0x18c
        boundingArea = calculateBoundingArea();
 80043be:	f00f f9bf 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80043c2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80043c6:	f504 73ca 	add.w	r3, r4, #404	@ 0x194
 80043ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80043ce:	4b21      	ldr	r3, [pc, #132]	@ (8004454 <_ZN22GameOverScreenViewBaseC1Ev+0x230>)
 80043d0:	930a      	str	r3, [sp, #40]	@ 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RJ5I));
 80043d2:	a90a      	add	r1, sp, #40	@ 0x28
 80043d4:	2309      	movs	r3, #9
 80043d6:	4630      	mov	r0, r6
 80043d8:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80043dc:	f00f fc4a 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80043e0:	4631      	mov	r1, r6
 80043e2:	4658      	mov	r0, fp
 80043e4:	f00c f992 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scoreText.setXY(84, 129);
 80043e8:	2281      	movs	r2, #129	@ 0x81
 80043ea:	9802      	ldr	r0, [sp, #8]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80043ec:	f8df 9084 	ldr.w	r9, [pc, #132]	@ 8004474 <_ZN22GameOverScreenViewBaseC1Ev+0x250>
 80043f0:	2154      	movs	r1, #84	@ 0x54
 80043f2:	f7fe f859 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80043f6:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80043fa:	f8c4 31d0 	str.w	r3, [r4, #464]	@ 0x1d0
        boundingArea = calculateBoundingArea();
 80043fe:	f8d4 31a0 	ldr.w	r3, [r4, #416]	@ 0x1a0
 8004402:	9902      	ldr	r1, [sp, #8]
 8004404:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 8004408:	f8a4 51d4 	strh.w	r5, [r4, #468]	@ 0x1d4
        boundingArea = calculateBoundingArea();
 800440c:	4640      	mov	r0, r8
 800440e:	4798      	blx	r3
 8004410:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004414:	f504 73ee 	add.w	r3, r4, #476	@ 0x1dc
 8004418:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800441c:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(scoreTextBuffer, SCORETEXT_SIZE, "%s", touchgfx::TypedText(T_SCORE).getText());
 8004420:	f504 7a3e 	add.w	sl, r4, #760	@ 0x2f8
 8004424:	b92b      	cbnz	r3, 8004432 <_ZN22GameOverScreenViewBaseC1Ev+0x20e>
 8004426:	4b0d      	ldr	r3, [pc, #52]	@ (800445c <_ZN22GameOverScreenViewBaseC1Ev+0x238>)
 8004428:	4a0d      	ldr	r2, [pc, #52]	@ (8004460 <_ZN22GameOverScreenViewBaseC1Ev+0x23c>)
 800442a:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800442c:	480d      	ldr	r0, [pc, #52]	@ (8004464 <_ZN22GameOverScreenViewBaseC1Ev+0x240>)
 800442e:	f026 f8ad 	bl	802a58c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8004432:	4f0d      	ldr	r7, [pc, #52]	@ (8004468 <_ZN22GameOverScreenViewBaseC1Ev+0x244>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004434:	883b      	ldrh	r3, [r7, #0]
 8004436:	2b1f      	cmp	r3, #31
 8004438:	d81e      	bhi.n	8004478 <_ZN22GameOverScreenViewBaseC1Ev+0x254>
 800443a:	4b0c      	ldr	r3, [pc, #48]	@ (800446c <_ZN22GameOverScreenViewBaseC1Ev+0x248>)
 800443c:	4a08      	ldr	r2, [pc, #32]	@ (8004460 <_ZN22GameOverScreenViewBaseC1Ev+0x23c>)
 800443e:	2161      	movs	r1, #97	@ 0x61
 8004440:	e7f4      	b.n	800442c <_ZN22GameOverScreenViewBaseC1Ev+0x208>
 8004442:	bf00      	nop
 8004444:	0802d3ac 	.word	0x0802d3ac
 8004448:	0802d394 	.word	0x0802d394
 800444c:	0800420d 	.word	0x0800420d
 8004450:	ffb0543e 	.word	0xffb0543e
 8004454:	0802d030 	.word	0x0802d030
 8004458:	ff006699 	.word	0xff006699
 800445c:	0802bbe5 	.word	0x0802bbe5
 8004460:	0802bce7 	.word	0x0802bce7
 8004464:	0802bc62 	.word	0x0802bc62
 8004468:	20013fa8 	.word	0x20013fa8
 800446c:	0802bca9 	.word	0x0802bca9
 8004470:	0802d040 	.word	0x0802d040
 8004474:	20013fa4 	.word	0x20013fa4
        return texts->getText(typedTextId);
 8004478:	4e58      	ldr	r6, [pc, #352]	@ (80045dc <_ZN22GameOverScreenViewBaseC1Ev+0x3b8>)
 800447a:	211f      	movs	r1, #31
 800447c:	6830      	ldr	r0, [r6, #0]
 800447e:	f002 ff0d 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 8004482:	4a57      	ldr	r2, [pc, #348]	@ (80045e0 <_ZN22GameOverScreenViewBaseC1Ev+0x3bc>)
 8004484:	4603      	mov	r3, r0
 8004486:	210a      	movs	r1, #10
 8004488:	4650      	mov	r0, sl
 800448a:	f015 ffec 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    scoreText.resizeToCurrentText();
 800448e:	9802      	ldr	r0, [sp, #8]
        wc1 = value;
 8004490:	f8c4 a1e8 	str.w	sl, [r4, #488]	@ 0x1e8
 8004494:	f00f fbce 	bl	8013c34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004498:	4b52      	ldr	r3, [pc, #328]	@ (80045e4 <_ZN22GameOverScreenViewBaseC1Ev+0x3c0>)
    scoreText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I5ZC));
 800449a:	9802      	ldr	r0, [sp, #8]
 800449c:	930a      	str	r3, [sp, #40]	@ 0x28
 800449e:	a90a      	add	r1, sp, #40	@ 0x28
 80044a0:	2308      	movs	r3, #8
 80044a2:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80044a6:	f00f fbe5 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80044aa:	9902      	ldr	r1, [sp, #8]
 80044ac:	4658      	mov	r0, fp
 80044ae:	f00c f92d 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bestText.setXY(131, 129);
 80044b2:	9803      	ldr	r0, [sp, #12]
 80044b4:	2281      	movs	r2, #129	@ 0x81
 80044b6:	2183      	movs	r1, #131	@ 0x83
 80044b8:	f7fd fff6 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80044bc:	f8d4 31ec 	ldr.w	r3, [r4, #492]	@ 0x1ec
 80044c0:	9903      	ldr	r1, [sp, #12]
 80044c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        linespace = space;
 80044c6:	f8a4 5220 	strh.w	r5, [r4, #544]	@ 0x220
        color = newColor;
 80044ca:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
 80044ce:	f8c4 221c 	str.w	r2, [r4, #540]	@ 0x21c
        boundingArea = calculateBoundingArea();
 80044d2:	4640      	mov	r0, r8
 80044d4:	4798      	blx	r3
 80044d6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80044da:	f504 730a 	add.w	r3, r4, #552	@ 0x228
 80044de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80044e2:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(bestTextBuffer, BESTTEXT_SIZE, "%s", touchgfx::TypedText(T_BEST).getText());
 80044e6:	f504 7a43 	add.w	sl, r4, #780	@ 0x30c
 80044ea:	2b00      	cmp	r3, #0
 80044ec:	d09b      	beq.n	8004426 <_ZN22GameOverScreenViewBaseC1Ev+0x202>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80044ee:	883b      	ldrh	r3, [r7, #0]
 80044f0:	2b1c      	cmp	r3, #28
 80044f2:	d9a2      	bls.n	800443a <_ZN22GameOverScreenViewBaseC1Ev+0x216>
        return texts->getText(typedTextId);
 80044f4:	6830      	ldr	r0, [r6, #0]
        : typedTextId(id)
 80044f6:	4f3b      	ldr	r7, [pc, #236]	@ (80045e4 <_ZN22GameOverScreenViewBaseC1Ev+0x3c0>)
        return texts->getText(typedTextId);
 80044f8:	211c      	movs	r1, #28
 80044fa:	f002 fecf 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 80044fe:	4a38      	ldr	r2, [pc, #224]	@ (80045e0 <_ZN22GameOverScreenViewBaseC1Ev+0x3bc>)
 8004500:	4603      	mov	r3, r0
 8004502:	210a      	movs	r1, #10
 8004504:	4650      	mov	r0, sl
 8004506:	f015 ffae 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    bestText.resizeToCurrentText();
 800450a:	9803      	ldr	r0, [sp, #12]
 800450c:	f8c4 a234 	str.w	sl, [r4, #564]	@ 0x234
 8004510:	f00f fb90 	bl	8013c34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004514:	2307      	movs	r3, #7
    bestText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AS23));
 8004516:	9803      	ldr	r0, [sp, #12]
 8004518:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800451c:	a90a      	add	r1, sp, #40	@ 0x28
        borderBox.setPosition(x, y, width, height);
 800451e:	2639      	movs	r6, #57	@ 0x39
 8004520:	970a      	str	r7, [sp, #40]	@ 0x28
 8004522:	f00f fba7 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004526:	9903      	ldr	r1, [sp, #12]
 8004528:	4658      	mov	r0, fp
 800452a:	f00c f8ef 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800452e:	462a      	mov	r2, r5
 8004530:	4629      	mov	r1, r5
 8004532:	f504 701b 	add.w	r0, r4, #620	@ 0x26c
 8004536:	9600      	str	r6, [sp, #0]
 8004538:	236e      	movs	r3, #110	@ 0x6e
 800453a:	f7fe f97f 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800453e:	f04f 0305 	mov.w	r3, #5
 8004542:	f8a4 329c 	strh.w	r3, [r4, #668]	@ 0x29c
        up = colorReleased;
 8004546:	4b28      	ldr	r3, [pc, #160]	@ (80045e8 <_ZN22GameOverScreenViewBaseC1Ev+0x3c4>)
 8004548:	f8c4 32a0 	str.w	r3, [r4, #672]	@ 0x2a0
        down = colorPressed;
 800454c:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8004550:	3333      	adds	r3, #51	@ 0x33
 8004552:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
        borderUp = borderColorReleased;
 8004556:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 800455a:	3b66      	subs	r3, #102	@ 0x66
 800455c:	f8c4 32a8 	str.w	r3, [r4, #680]	@ 0x2a8
        borderDown = borderColorPressed;
 8004560:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8004564:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
        handlePressedUpdated();
 8004568:	9805      	ldr	r0, [sp, #20]
        borderDown = borderColorPressed;
 800456a:	f8c4 32ac 	str.w	r3, [r4, #684]	@ 0x2ac
        handlePressedUpdated();
 800456e:	f7fe f8ca 	bl	8002706 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    menu.setAction(flexButtonCallback);
 8004572:	f504 7348 	add.w	r3, r4, #800	@ 0x320
 8004576:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
    menu.setPosition(65, 178, 110, 57);
 800457a:	9805      	ldr	r0, [sp, #20]
 800457c:	9600      	str	r6, [sp, #0]
 800457e:	236e      	movs	r3, #110	@ 0x6e
 8004580:	22b2      	movs	r2, #178	@ 0xb2
 8004582:	2141      	movs	r1, #65	@ 0x41
 8004584:	f7fe f95a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004588:	9905      	ldr	r1, [sp, #20]
 800458a:	4658      	mov	r0, fp
 800458c:	f00c f8be 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2_1.setXY(82, 194);
 8004590:	9804      	ldr	r0, [sp, #16]
 8004592:	22c2      	movs	r2, #194	@ 0xc2
 8004594:	2152      	movs	r1, #82	@ 0x52
 8004596:	f7fd ff87 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800459a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 800459e:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 80045a0:	f8c4 32e0 	str.w	r3, [r4, #736]	@ 0x2e0
        boundingArea = calculateBoundingArea();
 80045a4:	4640      	mov	r0, r8
        linespace = space;
 80045a6:	f8a4 52e4 	strh.w	r5, [r4, #740]	@ 0x2e4
        boundingArea = calculateBoundingArea();
 80045aa:	f00f f8c9 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80045ae:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80045b2:	f504 733b 	add.w	r3, r4, #748	@ 0x2ec
 80045b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80045ba:	2306      	movs	r3, #6
    textArea2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9X6R));
 80045bc:	9804      	ldr	r0, [sp, #16]
 80045be:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80045c2:	a90a      	add	r1, sp, #40	@ 0x28
 80045c4:	970a      	str	r7, [sp, #40]	@ 0x28
 80045c6:	f00f fb55 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80045ca:	4658      	mov	r0, fp
 80045cc:	9904      	ldr	r1, [sp, #16]
 80045ce:	f00c f89d 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80045d2:	4620      	mov	r0, r4
 80045d4:	b00d      	add	sp, #52	@ 0x34
 80045d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80045da:	bf00      	nop
 80045dc:	20013fb0 	.word	0x20013fb0
 80045e0:	0802bd32 	.word	0x0802bd32
 80045e4:	0802d030 	.word	0x0802d030
 80045e8:	ff006699 	.word	0xff006699

080045ec <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80045ec:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 80045ee:	4770      	bx	lr

080045f0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80045f0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80045f2:	4770      	bx	lr

080045f4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80045f4:	4770      	bx	lr

080045f6 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 80045f6:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 80045f8:	880b      	ldrh	r3, [r1, #0]
{
 80045fa:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 80045fc:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 80045fe:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8004600:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 8004602:	b29b      	uxth	r3, r3
    return pixels + offset;
 8004604:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 8004608:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 800460c:	4418      	add	r0, r3
 800460e:	bd10      	pop	{r4, pc}

08004610 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004610:	b510      	push	{r4, lr}
 8004612:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8004614:	b1ba      	cbz	r2, 8004646 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004616:	7b10      	ldrb	r0, [r2, #12]
 8004618:	b168      	cbz	r0, 8004636 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800461a:	7b53      	ldrb	r3, [r2, #13]
 800461c:	7ad2      	ldrb	r2, [r2, #11]
 800461e:	021b      	lsls	r3, r3, #8
 8004620:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004624:	431a      	orrs	r2, r3
 8004626:	6a23      	ldr	r3, [r4, #32]
 8004628:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 800462c:	881a      	ldrh	r2, [r3, #0]
 800462e:	428a      	cmp	r2, r1
 8004630:	d102      	bne.n	8004638 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004632:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8004636:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004638:	d805      	bhi.n	8004646 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800463a:	3801      	subs	r0, #1
 800463c:	b280      	uxth	r0, r0
 800463e:	3304      	adds	r3, #4
 8004640:	2800      	cmp	r0, #0
 8004642:	d1f3      	bne.n	800462c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8004644:	e7f7      	b.n	8004636 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004646:	2000      	movs	r0, #0
 8004648:	e7f5      	b.n	8004636 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800464a <_ZN8touchgfx13GeneratedFontD0Ev>:
 800464a:	b510      	push	{r4, lr}
 800464c:	212c      	movs	r1, #44	@ 0x2c
 800464e:	4604      	mov	r4, r0
 8004650:	f025 f860 	bl	8029714 <_ZdlPvj>
 8004654:	4620      	mov	r0, r4
 8004656:	bd10      	pop	{r4, pc}

08004658 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004658:	b530      	push	{r4, r5, lr}
 800465a:	b08b      	sub	sp, #44	@ 0x2c
 800465c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800465e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8004662:	9508      	str	r5, [sp, #32]
 8004664:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8004668:	9507      	str	r5, [sp, #28]
 800466a:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800466e:	9506      	str	r5, [sp, #24]
 8004670:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8004674:	9505      	str	r5, [sp, #20]
 8004676:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800467a:	9504      	str	r5, [sp, #16]
 800467c:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8004680:	9503      	str	r5, [sp, #12]
 8004682:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8004686:	9502      	str	r5, [sp, #8]
 8004688:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 800468c:	9501      	str	r5, [sp, #4]
 800468e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8004692:	9500      	str	r5, [sp, #0]
 8004694:	f013 fffe 	bl	8018694 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8004698:	4b06      	ldr	r3, [pc, #24]	@ (80046b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800469a:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 800469c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800469e:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80046a0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80046a2:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80046a4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80046a6:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 80046a8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80046aa:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 80046ac:	4620      	mov	r0, r4
 80046ae:	b00b      	add	sp, #44	@ 0x2c
 80046b0:	bd30      	pop	{r4, r5, pc}
 80046b2:	bf00      	nop
 80046b4:	0802d3e0 	.word	0x0802d3e0

080046b8 <_ZN18MainScreenViewBase9resetGameEv>:
     * Virtual Action Handlers
     */
    virtual void resetGame()
    {
        // Override and implement this function in MainScreen
    }
 80046b8:	4770      	bx	lr

080046ba <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80046ba:	4770      	bx	lr

080046bc <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 80046bc:	4770      	bx	lr

080046be <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80046be:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80046c0:	68c2      	ldr	r2, [r0, #12]
 80046c2:	6844      	ldr	r4, [r0, #4]
 80046c4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80046c6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80046c8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80046cc:	07d2      	lsls	r2, r2, #31
 80046ce:	bf48      	it	mi
 80046d0:	5962      	ldrmi	r2, [r4, r5]
 80046d2:	689b      	ldr	r3, [r3, #8]
    }
 80046d4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80046d6:	bf48      	it	mi
 80046d8:	58d3      	ldrmi	r3, [r2, r3]
 80046da:	4718      	bx	r3

080046dc <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80046dc:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80046de:	6840      	ldr	r0, [r0, #4]
 80046e0:	b130      	cbz	r0, 80046f0 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80046e2:	689a      	ldr	r2, [r3, #8]
 80046e4:	b91a      	cbnz	r2, 80046ee <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80046e6:	68d8      	ldr	r0, [r3, #12]
 80046e8:	f000 0001 	and.w	r0, r0, #1
 80046ec:	4770      	bx	lr
 80046ee:	2001      	movs	r0, #1
    }
 80046f0:	4770      	bx	lr

080046f2 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80046f2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80046f4:	68c2      	ldr	r2, [r0, #12]
 80046f6:	6844      	ldr	r4, [r0, #4]
 80046f8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80046fa:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80046fc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004700:	07d2      	lsls	r2, r2, #31
 8004702:	bf48      	it	mi
 8004704:	5962      	ldrmi	r2, [r4, r5]
 8004706:	689b      	ldr	r3, [r3, #8]
    }
 8004708:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800470a:	bf48      	it	mi
 800470c:	58d3      	ldrmi	r3, [r2, r3]
 800470e:	4718      	bx	r3

08004710 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 8004710:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8004712:	6840      	ldr	r0, [r0, #4]
 8004714:	b130      	cbz	r0, 8004724 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004716:	689a      	ldr	r2, [r3, #8]
 8004718:	b91a      	cbnz	r2, 8004722 <_ZNK8touchgfx8CallbackI18MainScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x12>
 800471a:	68d8      	ldr	r0, [r3, #12]
 800471c:	f000 0001 	and.w	r0, r0, #1
 8004720:	4770      	bx	lr
 8004722:	2001      	movs	r0, #1
    }
 8004724:	4770      	bx	lr

08004726 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004726:	b510      	push	{r4, lr}
 8004728:	2110      	movs	r1, #16
 800472a:	4604      	mov	r4, r0
 800472c:	f024 fff2 	bl	8029714 <_ZdlPvj>
 8004730:	4620      	mov	r0, r4
 8004732:	bd10      	pop	{r4, pc}

08004734 <_ZN8touchgfx8CallbackI18MainScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8004734:	b510      	push	{r4, lr}
 8004736:	2110      	movs	r1, #16
 8004738:	4604      	mov	r4, r0
 800473a:	f024 ffeb 	bl	8029714 <_ZdlPvj>
 800473e:	4620      	mov	r0, r4
 8004740:	bd10      	pop	{r4, pc}

08004742 <_ZN18MainScreenViewBase11setupScreenEv>:
{

}

void MainScreenViewBase::setupScreen()
{
 8004742:	b510      	push	{r4, lr}
 8004744:	4604      	mov	r4, r0
    bestContainer.initialize();
 8004746:	f500 70fe 	add.w	r0, r0, #508	@ 0x1fc
 800474a:	f003 fa17 	bl	8007b7c <_ZN4Best10initializeEv>
    scoreContainer.initialize();
 800474e:	f504 7044 	add.w	r0, r4, #784	@ 0x310
 8004752:	f004 f911 	bl	8008978 <_ZN5Score10initializeEv>
    tile00.initialize();
 8004756:	f204 40fc 	addw	r0, r4, #1276	@ 0x4fc
 800475a:	f006 fe0c 	bl	800b376 <_ZN4Tile10initializeEv>
    tile01.initialize();
 800475e:	f504 60b9 	add.w	r0, r4, #1480	@ 0x5c8
 8004762:	f006 fe08 	bl	800b376 <_ZN4Tile10initializeEv>
    tile02.initialize();
 8004766:	f204 6094 	addw	r0, r4, #1684	@ 0x694
 800476a:	f006 fe04 	bl	800b376 <_ZN4Tile10initializeEv>
    tile03.initialize();
 800476e:	f504 60ec 	add.w	r0, r4, #1888	@ 0x760
 8004772:	f006 fe00 	bl	800b376 <_ZN4Tile10initializeEv>
    tile10.initialize();
 8004776:	f604 002c 	addw	r0, r4, #2092	@ 0x82c
 800477a:	f006 fdfc 	bl	800b376 <_ZN4Tile10initializeEv>
    tile11.initialize();
 800477e:	f604 00f8 	addw	r0, r4, #2296	@ 0x8f8
 8004782:	f006 fdf8 	bl	800b376 <_ZN4Tile10initializeEv>
    tile12.initialize();
 8004786:	f604 10c4 	addw	r0, r4, #2500	@ 0x9c4
 800478a:	f006 fdf4 	bl	800b376 <_ZN4Tile10initializeEv>
    tile13.initialize();
 800478e:	f504 6029 	add.w	r0, r4, #2704	@ 0xa90
 8004792:	f006 fdf0 	bl	800b376 <_ZN4Tile10initializeEv>
    tile20.initialize();
 8004796:	f604 305c 	addw	r0, r4, #2908	@ 0xb5c
 800479a:	f006 fdec 	bl	800b376 <_ZN4Tile10initializeEv>
    tile21.initialize();
 800479e:	f604 4028 	addw	r0, r4, #3112	@ 0xc28
 80047a2:	f006 fde8 	bl	800b376 <_ZN4Tile10initializeEv>
    tile22.initialize();
 80047a6:	f604 40f4 	addw	r0, r4, #3316	@ 0xcf4
 80047aa:	f006 fde4 	bl	800b376 <_ZN4Tile10initializeEv>
    tile23.initialize();
 80047ae:	f504 605c 	add.w	r0, r4, #3520	@ 0xdc0
 80047b2:	f006 fde0 	bl	800b376 <_ZN4Tile10initializeEv>
    tile30.initialize();
 80047b6:	f604 608c 	addw	r0, r4, #3724	@ 0xe8c
 80047ba:	f006 fddc 	bl	800b376 <_ZN4Tile10initializeEv>
    tile31.initialize();
 80047be:	f604 7058 	addw	r0, r4, #3928	@ 0xf58
 80047c2:	f006 fdd8 	bl	800b376 <_ZN4Tile10initializeEv>
    tile32.initialize();
 80047c6:	f504 5081 	add.w	r0, r4, #4128	@ 0x1020
 80047ca:	3004      	adds	r0, #4
 80047cc:	f006 fdd3 	bl	800b376 <_ZN4Tile10initializeEv>
    tile33.initialize();
 80047d0:	f504 5087 	add.w	r0, r4, #4320	@ 0x10e0
 80047d4:	3010      	adds	r0, #16
}
 80047d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    tile33.initialize();
 80047da:	f006 bdcc 	b.w	800b376 <_ZN4Tile10initializeEv>

080047de <_ZN18MainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
 80047de:	f100 026c 	add.w	r2, r0, #108	@ 0x6c
 80047e2:	428a      	cmp	r2, r1
{
 80047e4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel1)
 80047e6:	d108      	bne.n	80047fa <_ZN18MainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1c>
    {
        //Interaction1
        //When buttonWithLabel1 clicked call virtual function
        //Call resetGame
        resetGame();
 80047e8:	6803      	ldr	r3, [r0, #0]
 80047ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80047ec:	4798      	blx	r3

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80047ee:	f012 f8d5 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When buttonWithLabel1 clicked change screen to GameOverScreen
        //Go to GameOverScreen with screen transition towards East
        application().gotoGameOverScreenScreenSlideTransitionEast();
    }
}
 80047f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoGameOverScreenScreenSlideTransitionEast();
 80047f6:	f7fe bcbf 	b.w	8003178 <_ZN23FrontendApplicationBase43gotoGameOverScreenScreenSlideTransitionEastEv>
}
 80047fa:	bd08      	pop	{r3, pc}

080047fc <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MainScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 80047fc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &flexButton1_1)
 80047fe:	f500 73ac 	add.w	r3, r0, #344	@ 0x158
 8004802:	4299      	cmp	r1, r3
{
 8004804:	4604      	mov	r4, r0
 8004806:	460d      	mov	r5, r1
    if (&src == &flexButton1_1)
 8004808:	d103      	bne.n	8004812 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
 800480a:	f012 f8c7 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When flexButton1_1 clicked change screen to SelectedGameDesign
        //Go to SelectedGameDesign with screen transition towards East
        application().gotoSelectedGameDesignScreenCoverTransitionEast();
 800480e:	f7fe fcd3 	bl	80031b8 <_ZN23FrontendApplicationBase47gotoSelectedGameDesignScreenCoverTransitionEastEv>
    }
    if (&src == &flexButton1_1_1)
 8004812:	34e0      	adds	r4, #224	@ 0xe0
 8004814:	42a5      	cmp	r5, r4
 8004816:	d105      	bne.n	8004824 <_ZN18MainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x28>
 8004818:	f012 f8c0 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction4
        //When flexButton1_1_1 clicked change screen to Chosing_mode
        //Go to Chosing_mode with screen transition towards East
        application().gotoChosing_modeScreenWipeTransitionEast();
    }
}
 800481c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoChosing_modeScreenWipeTransitionEast();
 8004820:	f7fe bc3a 	b.w	8003098 <_ZN23FrontendApplicationBase40gotoChosing_modeScreenWipeTransitionEastEv>
}
 8004824:	bd38      	pop	{r3, r4, r5, pc}
	...

08004828 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8004828:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        return typedTextId < numberOfTypedTexts;
 800482a:	4b19      	ldr	r3, [pc, #100]	@ (8004890 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x68>)
 800482c:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
    {
        if (typedText.hasValidId())
 800482e:	881b      	ldrh	r3, [r3, #0]
 8004830:	428b      	cmp	r3, r1
    void updateTextPosition()
 8004832:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8004834:	d92a      	bls.n	800488c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004836:	4b17      	ldr	r3, [pc, #92]	@ (8004894 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	b92b      	cbnz	r3, 8004848 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 800483c:	4b16      	ldr	r3, [pc, #88]	@ (8004898 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 800483e:	4a17      	ldr	r2, [pc, #92]	@ (800489c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8004840:	4817      	ldr	r0, [pc, #92]	@ (80048a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8004842:	216c      	movs	r1, #108	@ 0x6c
 8004844:	f025 fea2 	bl	802a58c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8004848:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800484c:	4b15      	ldr	r3, [pc, #84]	@ (80048a4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800484e:	681b      	ldr	r3, [r3, #0]
 8004850:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8004854:	4b14      	ldr	r3, [pc, #80]	@ (80048a8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8004856:	6818      	ldr	r0, [r3, #0]
 8004858:	f002 fd20 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800485c:	682b      	ldr	r3, [r5, #0]
 800485e:	4607      	mov	r7, r0
 8004860:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004862:	4628      	mov	r0, r5
 8004864:	4798      	blx	r3
 8004866:	682b      	ldr	r3, [r5, #0]
 8004868:	4604      	mov	r4, r0
 800486a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800486c:	4639      	mov	r1, r7
 800486e:	4628      	mov	r0, r5
 8004870:	4798      	blx	r3
 8004872:	682b      	ldr	r3, [r5, #0]
 8004874:	fb14 f400 	smulbb	r4, r4, r0
 8004878:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800487a:	4639      	mov	r1, r7
 800487c:	4628      	mov	r0, r5
 800487e:	4798      	blx	r3
 8004880:	b2a4      	uxth	r4, r4
 8004882:	1823      	adds	r3, r4, r0
 8004884:	b21b      	sxth	r3, r3
 8004886:	f8a6 3046 	strh.w	r3, [r6, #70]	@ 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800488a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800488c:	2300      	movs	r3, #0
 800488e:	e7fa      	b.n	8004886 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8004890:	20013fa8 	.word	0x20013fa8
 8004894:	20013fa4 	.word	0x20013fa4
 8004898:	0802bbe5 	.word	0x0802bbe5
 800489c:	0802bc27 	.word	0x0802bc27
 80048a0:	0802bc62 	.word	0x0802bc62
 80048a4:	20013fac 	.word	0x20013fac
 80048a8:	20013fb0 	.word	0x20013fb0

080048ac <_ZN4TileD1Ev>:
#include <touchgfx/Application.hpp>
class Tile : public TileBase
{
public:
    Tile();
    virtual ~Tile() {}
 80048ac:	b510      	push	{r4, lr}
 80048ae:	4b03      	ldr	r3, [pc, #12]	@ (80048bc <_ZN4TileD1Ev+0x10>)
 80048b0:	6003      	str	r3, [r0, #0]
 80048b2:	4604      	mov	r4, r0
 80048b4:	f002 ff6e 	bl	8007794 <_ZN8TileBaseD1Ev>
 80048b8:	4620      	mov	r0, r4
 80048ba:	bd10      	pop	{r4, pc}
 80048bc:	0802de04 	.word	0x0802de04

080048c0 <_ZN18MainScreenViewBaseD1Ev>:
MainScreenViewBase::~MainScreenViewBase()
 80048c0:	4b2a      	ldr	r3, [pc, #168]	@ (800496c <_ZN18MainScreenViewBaseD1Ev+0xac>)
 80048c2:	b510      	push	{r4, lr}
 80048c4:	4604      	mov	r4, r0
 80048c6:	6003      	str	r3, [r0, #0]
}
 80048c8:	f500 5087 	add.w	r0, r0, #4320	@ 0x10e0
 80048cc:	3010      	adds	r0, #16
 80048ce:	f7ff ffed 	bl	80048ac <_ZN4TileD1Ev>
 80048d2:	f504 5081 	add.w	r0, r4, #4128	@ 0x1020
 80048d6:	3004      	adds	r0, #4
 80048d8:	f7ff ffe8 	bl	80048ac <_ZN4TileD1Ev>
 80048dc:	f604 7058 	addw	r0, r4, #3928	@ 0xf58
 80048e0:	f7ff ffe4 	bl	80048ac <_ZN4TileD1Ev>
 80048e4:	f604 608c 	addw	r0, r4, #3724	@ 0xe8c
 80048e8:	f7ff ffe0 	bl	80048ac <_ZN4TileD1Ev>
 80048ec:	f504 605c 	add.w	r0, r4, #3520	@ 0xdc0
 80048f0:	f7ff ffdc 	bl	80048ac <_ZN4TileD1Ev>
 80048f4:	f604 40f4 	addw	r0, r4, #3316	@ 0xcf4
 80048f8:	f7ff ffd8 	bl	80048ac <_ZN4TileD1Ev>
 80048fc:	f604 4028 	addw	r0, r4, #3112	@ 0xc28
 8004900:	f7ff ffd4 	bl	80048ac <_ZN4TileD1Ev>
 8004904:	f604 305c 	addw	r0, r4, #2908	@ 0xb5c
 8004908:	f7ff ffd0 	bl	80048ac <_ZN4TileD1Ev>
 800490c:	f504 6029 	add.w	r0, r4, #2704	@ 0xa90
 8004910:	f7ff ffcc 	bl	80048ac <_ZN4TileD1Ev>
 8004914:	f604 10c4 	addw	r0, r4, #2500	@ 0x9c4
 8004918:	f7ff ffc8 	bl	80048ac <_ZN4TileD1Ev>
 800491c:	f604 00f8 	addw	r0, r4, #2296	@ 0x8f8
 8004920:	f7ff ffc4 	bl	80048ac <_ZN4TileD1Ev>
 8004924:	f604 002c 	addw	r0, r4, #2092	@ 0x82c
 8004928:	f7ff ffc0 	bl	80048ac <_ZN4TileD1Ev>
 800492c:	f504 60ec 	add.w	r0, r4, #1888	@ 0x760
 8004930:	f7ff ffbc 	bl	80048ac <_ZN4TileD1Ev>
 8004934:	f204 6094 	addw	r0, r4, #1684	@ 0x694
 8004938:	f7ff ffb8 	bl	80048ac <_ZN4TileD1Ev>
 800493c:	f504 60b9 	add.w	r0, r4, #1480	@ 0x5c8
 8004940:	f7ff ffb4 	bl	80048ac <_ZN4TileD1Ev>
 8004944:	f204 40fc 	addw	r0, r4, #1276	@ 0x4fc
 8004948:	f7ff ffb0 	bl	80048ac <_ZN4TileD1Ev>

class Score : public ScoreBase
{
public:
    Score();
    virtual ~Score() {}
 800494c:	4b08      	ldr	r3, [pc, #32]	@ (8004970 <_ZN18MainScreenViewBaseD1Ev+0xb0>)
 800494e:	f8c4 3310 	str.w	r3, [r4, #784]	@ 0x310
 8004952:	f504 7044 	add.w	r0, r4, #784	@ 0x310
 8004956:	f000 fa67 	bl	8004e28 <_ZN9ScoreBaseD1Ev>

class Best : public BestBase
{
public:
    Best();
    virtual ~Best() {}
 800495a:	4b06      	ldr	r3, [pc, #24]	@ (8004974 <_ZN18MainScreenViewBaseD1Ev+0xb4>)
 800495c:	f8c4 31fc 	str.w	r3, [r4, #508]	@ 0x1fc
 8004960:	f504 70fe 	add.w	r0, r4, #508	@ 0x1fc
 8004964:	f7fd fd34 	bl	80023d0 <_ZN8BestBaseD1Ev>
 8004968:	4620      	mov	r0, r4
 800496a:	bd10      	pop	{r4, pc}
 800496c:	0802d478 	.word	0x0802d478
 8004970:	0802dba4 	.word	0x0802dba4
 8004974:	0802d9a4 	.word	0x0802d9a4

08004978 <_ZN18MainScreenViewBaseD0Ev>:
MainScreenViewBase::~MainScreenViewBase()
 8004978:	b510      	push	{r4, lr}
 800497a:	4604      	mov	r4, r0
}
 800497c:	f7ff ffa0 	bl	80048c0 <_ZN18MainScreenViewBaseD1Ev>
 8004980:	4620      	mov	r0, r4
 8004982:	f241 11dc 	movw	r1, #4572	@ 0x11dc
 8004986:	f024 fec5 	bl	8029714 <_ZdlPvj>
 800498a:	4620      	mov	r0, r4
 800498c:	bd10      	pop	{r4, pc}

0800498e <_ZN4TileD0Ev>:
 800498e:	b510      	push	{r4, lr}
 8004990:	4604      	mov	r4, r0
 8004992:	f7ff ff8b 	bl	80048ac <_ZN4TileD1Ev>
 8004996:	4620      	mov	r0, r4
 8004998:	21cc      	movs	r1, #204	@ 0xcc
 800499a:	f024 febb 	bl	8029714 <_ZdlPvj>
 800499e:	4620      	mov	r0, r4
 80049a0:	bd10      	pop	{r4, pc}
	...

080049a4 <_ZN18MainScreenViewBaseC1Ev>:
MainScreenViewBase::MainScreenViewBase() :
 80049a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049a8:	4604      	mov	r4, r0
 80049aa:	b09f      	sub	sp, #124	@ 0x7c
    flexButtonCallback(this, &MainScreenViewBase::flexButtonCallbackHandler)
 80049ac:	46a0      	mov	r8, r4
 80049ae:	2600      	movs	r6, #0
 80049b0:	f014 f86a 	bl	8018a88 <_ZN8touchgfx6ScreenC1Ev>
 80049b4:	4bdd      	ldr	r3, [pc, #884]	@ (8004d2c <_ZN18MainScreenViewBaseC1Ev+0x388>)
 80049b6:	63e6      	str	r6, [r4, #60]	@ 0x3c
 80049b8:	f848 3b40 	str.w	r3, [r8], #64
 80049bc:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 80049c0:	4640      	mov	r0, r8
 80049c2:	f7fd ff4f 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 80049c6:	4638      	mov	r0, r7
 80049c8:	f00f fc3c 	bl	8014244 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80049cc:	f104 03b4 	add.w	r3, r4, #180	@ 0xb4
 80049d0:	4618      	mov	r0, r3
 80049d2:	f504 79ac 	add.w	r9, r4, #344	@ 0x158
 80049d6:	9304      	str	r3, [sp, #16]
 80049d8:	f7fd ff44 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 80049dc:	f104 00e0 	add.w	r0, r4, #224	@ 0xe0
 80049e0:	f7fd ff54 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80049e4:	4648      	mov	r0, r9
 80049e6:	f7fd ff51 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80049ea:	f504 73e8 	add.w	r3, r4, #464	@ 0x1d0
 80049ee:	4618      	mov	r0, r3
 80049f0:	9305      	str	r3, [sp, #20]
 80049f2:	f7fd ff37 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 80049f6:	f504 73fe 	add.w	r3, r4, #508	@ 0x1fc
 80049fa:	4618      	mov	r0, r3
 80049fc:	9306      	str	r3, [sp, #24]
 80049fe:	f003 f8a1 	bl	8007b44 <_ZN4BestC1Ev>
 8004a02:	f504 7344 	add.w	r3, r4, #784	@ 0x310
 8004a06:	4618      	mov	r0, r3
 8004a08:	9307      	str	r3, [sp, #28]
 8004a0a:	f003 ff99 	bl	8008940 <_ZN5ScoreC1Ev>
 8004a0e:	f204 4324 	addw	r3, r4, #1060	@ 0x424
 8004a12:	4618      	mov	r0, r3
 8004a14:	9302      	str	r3, [sp, #8]
 8004a16:	f7fd fd55 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8004a1a:	f204 406c 	addw	r0, r4, #1132	@ 0x46c
 8004a1e:	f7fd fd51 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8004a22:	f204 43b4 	addw	r3, r4, #1204	@ 0x4b4
 8004a26:	4618      	mov	r0, r3
 8004a28:	9303      	str	r3, [sp, #12]
 8004a2a:	f7fd fd4b 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8004a2e:	f204 43fc 	addw	r3, r4, #1276	@ 0x4fc
 8004a32:	4618      	mov	r0, r3
 8004a34:	9308      	str	r3, [sp, #32]
 8004a36:	f006 fbf5 	bl	800b224 <_ZN4TileC1Ev>
 8004a3a:	f504 63b9 	add.w	r3, r4, #1480	@ 0x5c8
 8004a3e:	4618      	mov	r0, r3
 8004a40:	9309      	str	r3, [sp, #36]	@ 0x24
 8004a42:	f006 fbef 	bl	800b224 <_ZN4TileC1Ev>
 8004a46:	f204 6394 	addw	r3, r4, #1684	@ 0x694
 8004a4a:	4618      	mov	r0, r3
 8004a4c:	930a      	str	r3, [sp, #40]	@ 0x28
 8004a4e:	f006 fbe9 	bl	800b224 <_ZN4TileC1Ev>
 8004a52:	f504 63ec 	add.w	r3, r4, #1888	@ 0x760
 8004a56:	4618      	mov	r0, r3
 8004a58:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004a5a:	f006 fbe3 	bl	800b224 <_ZN4TileC1Ev>
 8004a5e:	f604 032c 	addw	r3, r4, #2092	@ 0x82c
 8004a62:	4618      	mov	r0, r3
 8004a64:	930c      	str	r3, [sp, #48]	@ 0x30
 8004a66:	f006 fbdd 	bl	800b224 <_ZN4TileC1Ev>
 8004a6a:	f604 03f8 	addw	r3, r4, #2296	@ 0x8f8
 8004a6e:	4618      	mov	r0, r3
 8004a70:	930d      	str	r3, [sp, #52]	@ 0x34
 8004a72:	f006 fbd7 	bl	800b224 <_ZN4TileC1Ev>
 8004a76:	f604 13c4 	addw	r3, r4, #2500	@ 0x9c4
 8004a7a:	4618      	mov	r0, r3
 8004a7c:	930e      	str	r3, [sp, #56]	@ 0x38
 8004a7e:	f006 fbd1 	bl	800b224 <_ZN4TileC1Ev>
 8004a82:	f504 6329 	add.w	r3, r4, #2704	@ 0xa90
 8004a86:	4618      	mov	r0, r3
 8004a88:	930f      	str	r3, [sp, #60]	@ 0x3c
 8004a8a:	f006 fbcb 	bl	800b224 <_ZN4TileC1Ev>
 8004a8e:	f604 335c 	addw	r3, r4, #2908	@ 0xb5c
 8004a92:	4618      	mov	r0, r3
 8004a94:	9310      	str	r3, [sp, #64]	@ 0x40
 8004a96:	f006 fbc5 	bl	800b224 <_ZN4TileC1Ev>
 8004a9a:	f604 4328 	addw	r3, r4, #3112	@ 0xc28
 8004a9e:	4618      	mov	r0, r3
 8004aa0:	9311      	str	r3, [sp, #68]	@ 0x44
 8004aa2:	f006 fbbf 	bl	800b224 <_ZN4TileC1Ev>
 8004aa6:	f604 43f4 	addw	r3, r4, #3316	@ 0xcf4
 8004aaa:	4618      	mov	r0, r3
 8004aac:	9312      	str	r3, [sp, #72]	@ 0x48
 8004aae:	f006 fbb9 	bl	800b224 <_ZN4TileC1Ev>
 8004ab2:	f504 635c 	add.w	r3, r4, #3520	@ 0xdc0
 8004ab6:	4618      	mov	r0, r3
 8004ab8:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004aba:	f006 fbb3 	bl	800b224 <_ZN4TileC1Ev>
 8004abe:	f604 638c 	addw	r3, r4, #3724	@ 0xe8c
 8004ac2:	4618      	mov	r0, r3
 8004ac4:	9314      	str	r3, [sp, #80]	@ 0x50
 8004ac6:	f504 5b81 	add.w	fp, r4, #4128	@ 0x1020
 8004aca:	f006 fbab 	bl	800b224 <_ZN4TileC1Ev>
 8004ace:	f604 7358 	addw	r3, r4, #3928	@ 0xf58
 8004ad2:	4618      	mov	r0, r3
 8004ad4:	f10b 0b04 	add.w	fp, fp, #4
 8004ad8:	f504 5a87 	add.w	sl, r4, #4320	@ 0x10e0
 8004adc:	9315      	str	r3, [sp, #84]	@ 0x54
 8004ade:	f10a 0a10 	add.w	sl, sl, #16
 8004ae2:	f006 fb9f 	bl	800b224 <_ZN4TileC1Ev>
 8004ae6:	4658      	mov	r0, fp
 8004ae8:	f006 fb9c 	bl	800b224 <_ZN4TileC1Ev>
 8004aec:	4650      	mov	r0, sl
 8004aee:	f006 fb99 	bl	800b224 <_ZN4TileC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004af2:	4a8f      	ldr	r2, [pc, #572]	@ (8004d30 <_ZN18MainScreenViewBaseC1Ev+0x38c>)
 8004af4:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8004af8:	e9c3 246f 	strd	r2, r4, [r3, #444]	@ 0x1bc
 8004afc:	4a8d      	ldr	r2, [pc, #564]	@ (8004d34 <_ZN18MainScreenViewBaseC1Ev+0x390>)
 8004afe:	e9c3 2671 	strd	r2, r6, [r3, #452]	@ 0x1c4
 8004b02:	4a8d      	ldr	r2, [pc, #564]	@ (8004d38 <_ZN18MainScreenViewBaseC1Ev+0x394>)
 8004b04:	e9c3 2473 	strd	r2, r4, [r3, #460]	@ 0x1cc
 8004b08:	4a8c      	ldr	r2, [pc, #560]	@ (8004d3c <_ZN18MainScreenViewBaseC1Ev+0x398>)
 8004b0a:	e9c3 2675 	strd	r2, r6, [r3, #468]	@ 0x1d4
    __background.setPosition(0, 0, 240, 320);
 8004b0e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8004b12:	4632      	mov	r2, r6
 8004b14:	9300      	str	r3, [sp, #0]
 8004b16:	4631      	mov	r1, r6
 8004b18:	4640      	mov	r0, r8
 8004b1a:	23f0      	movs	r3, #240	@ 0xf0
 8004b1c:	1d25      	adds	r5, r4, #4
 8004b1e:	f7fd fe8d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004b22:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8004b26:	66a3      	str	r3, [r4, #104]	@ 0x68
 8004b28:	4641      	mov	r1, r8
 8004b2a:	4628      	mov	r0, r5
 8004b2c:	f00b fdee 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(0, 30);
 8004b30:	4631      	mov	r1, r6
 8004b32:	4638      	mov	r0, r7
 8004b34:	221e      	movs	r2, #30
 8004b36:	f7fd fcb7 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 8004b3a:	aa1c      	add	r2, sp, #112	@ 0x70
 8004b3c:	a91b      	add	r1, sp, #108	@ 0x6c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8004b3e:	2301      	movs	r3, #1
 8004b40:	4638      	mov	r0, r7
 8004b42:	f8ad 3070 	strh.w	r3, [sp, #112]	@ 0x70
 8004b46:	f8ad 606c 	strh.w	r6, [sp, #108]	@ 0x6c
 8004b4a:	f00f f8f0 	bl	8013d2e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8004b4e:	230e      	movs	r3, #14
 8004b50:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
        updateTextPosition();
 8004b54:	4638      	mov	r0, r7
 8004b56:	f7ff fe67 	bl	8004828 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 8004b5a:	4a79      	ldr	r2, [pc, #484]	@ (8004d40 <_ZN18MainScreenViewBaseC1Ev+0x39c>)
 8004b5c:	f04f 33ff 	mov.w	r3, #4294967295
 8004b60:	e9c4 232a 	strd	r2, r3, [r4, #168]	@ 0xa8
    buttonWithLabel1.setAction(buttonCallback);
 8004b64:	f504 538d 	add.w	r3, r4, #4512	@ 0x11a0
 8004b68:	331c      	adds	r3, #28
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8004b6a:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8004b6e:	4639      	mov	r1, r7
 8004b70:	4628      	mov	r0, r5
    box3.setPosition(0, 0, 240, 80);
 8004b72:	2750      	movs	r7, #80	@ 0x50
 8004b74:	f00b fdca 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b78:	4632      	mov	r2, r6
 8004b7a:	9804      	ldr	r0, [sp, #16]
 8004b7c:	9700      	str	r7, [sp, #0]
 8004b7e:	4631      	mov	r1, r6
 8004b80:	23f0      	movs	r3, #240	@ 0xf0
 8004b82:	f7fd fe5b 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004b86:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8004b8a:	9904      	ldr	r1, [sp, #16]
 8004b8c:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
 8004b90:	4628      	mov	r0, r5
        borderBox.setPosition(x, y, width, height);
 8004b92:	f04f 0822 	mov.w	r8, #34	@ 0x22
 8004b96:	f00b fdb9 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b9a:	4632      	mov	r2, r6
 8004b9c:	4631      	mov	r1, r6
 8004b9e:	f8cd 8000 	str.w	r8, [sp]
 8004ba2:	f504 70c6 	add.w	r0, r4, #396	@ 0x18c
 8004ba6:	2364      	movs	r3, #100	@ 0x64
 8004ba8:	f7fd fe48 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004bac:	2305      	movs	r3, #5
 8004bae:	f8a4 31bc 	strh.w	r3, [r4, #444]	@ 0x1bc
        up = colorReleased;
 8004bb2:	4b64      	ldr	r3, [pc, #400]	@ (8004d44 <_ZN18MainScreenViewBaseC1Ev+0x3a0>)
 8004bb4:	f8c4 31c0 	str.w	r3, [r4, #448]	@ 0x1c0
        down = colorPressed;
 8004bb8:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8004bbc:	3333      	adds	r3, #51	@ 0x33
 8004bbe:	f8c4 31c4 	str.w	r3, [r4, #452]	@ 0x1c4
        borderUp = borderColorReleased;
 8004bc2:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 8004bc6:	3b66      	subs	r3, #102	@ 0x66
 8004bc8:	f8c4 31c8 	str.w	r3, [r4, #456]	@ 0x1c8
        borderDown = borderColorPressed;
 8004bcc:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8004bd0:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8004bd4:	f8c4 31cc 	str.w	r3, [r4, #460]	@ 0x1cc
        handlePressedUpdated();
 8004bd8:	4648      	mov	r0, r9
 8004bda:	f7fd fd94 	bl	8002706 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton1_1.setAction(flexButtonCallback);
 8004bde:	f504 538e 	add.w	r3, r4, #4544	@ 0x11c0
 8004be2:	330c      	adds	r3, #12
 8004be4:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
    flexButton1_1.setPosition(70, 36, 100, 34);
 8004be8:	2224      	movs	r2, #36	@ 0x24
 8004bea:	f8cd 8000 	str.w	r8, [sp]
 8004bee:	2364      	movs	r3, #100	@ 0x64
 8004bf0:	4648      	mov	r0, r9
 8004bf2:	2146      	movs	r1, #70	@ 0x46
 8004bf4:	f7fd fe22 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004bf8:	4649      	mov	r1, r9
 8004bfa:	4628      	mov	r0, r5
 8004bfc:	f00b fd86 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(0, 80, 240, 240);
 8004c00:	23f0      	movs	r3, #240	@ 0xf0
 8004c02:	463a      	mov	r2, r7
 8004c04:	9805      	ldr	r0, [sp, #20]
 8004c06:	9300      	str	r3, [sp, #0]
 8004c08:	4631      	mov	r1, r6
 8004c0a:	f7fd fe17 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004c0e:	4b4e      	ldr	r3, [pc, #312]	@ (8004d48 <_ZN18MainScreenViewBaseC1Ev+0x3a4>)
 8004c10:	f8c4 31f8 	str.w	r3, [r4, #504]	@ 0x1f8
 8004c14:	9905      	ldr	r1, [sp, #20]
        : typedTextId(id)
 8004c16:	f8df 9138 	ldr.w	r9, [pc, #312]	@ 8004d50 <_ZN18MainScreenViewBaseC1Ev+0x3ac>
 8004c1a:	4628      	mov	r0, r5
 8004c1c:	f00b fd76 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bestContainer.setXY(173, 6);
 8004c20:	9806      	ldr	r0, [sp, #24]
 8004c22:	2206      	movs	r2, #6
 8004c24:	21ad      	movs	r1, #173	@ 0xad
 8004c26:	f7fd fc3f 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004c2a:	9906      	ldr	r1, [sp, #24]
 8004c2c:	4628      	mov	r0, r5
 8004c2e:	f00b fd6d 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scoreContainer.setXY(128, 6);
 8004c32:	9807      	ldr	r0, [sp, #28]
 8004c34:	2206      	movs	r2, #6
 8004c36:	2180      	movs	r1, #128	@ 0x80
 8004c38:	f7fd fc36 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004c3c:	9907      	ldr	r1, [sp, #28]
 8004c3e:	4628      	mov	r0, r5
 8004c40:	f00b fd64 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(16, 9);
 8004c44:	9802      	ldr	r0, [sp, #8]
 8004c46:	2209      	movs	r2, #9
 8004c48:	2110      	movs	r1, #16
 8004c4a:	f7fd fc2d 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004c4e:	f10d 0858 	add.w	r8, sp, #88	@ 0x58
        color = newColor;
 8004c52:	4b3e      	ldr	r3, [pc, #248]	@ (8004d4c <_ZN18MainScreenViewBaseC1Ev+0x3a8>)
        boundingArea = calculateBoundingArea();
 8004c54:	9902      	ldr	r1, [sp, #8]
        color = newColor;
 8004c56:	f8c4 3454 	str.w	r3, [r4, #1108]	@ 0x454
        boundingArea = calculateBoundingArea();
 8004c5a:	4640      	mov	r0, r8
        linespace = space;
 8004c5c:	f8a4 6458 	strh.w	r6, [r4, #1112]	@ 0x458
        boundingArea = calculateBoundingArea();
 8004c60:	f00e fd6e 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004c64:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004c68:	f504 638c 	add.w	r3, r4, #1120	@ 0x460
 8004c6c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004c70:	2311      	movs	r3, #17
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U95O));
 8004c72:	9802      	ldr	r0, [sp, #8]
 8004c74:	f8ad 3074 	strh.w	r3, [sp, #116]	@ 0x74
 8004c78:	a91c      	add	r1, sp, #112	@ 0x70
 8004c7a:	f8cd 9070 	str.w	r9, [sp, #112]	@ 0x70
 8004c7e:	f00e fff9 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004c82:	9902      	ldr	r1, [sp, #8]
 8004c84:	4628      	mov	r0, r5
 8004c86:	f00b fd41 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2_1.setXY(100, 44);
 8004c8a:	9803      	ldr	r0, [sp, #12]
 8004c8c:	222c      	movs	r2, #44	@ 0x2c
 8004c8e:	2164      	movs	r1, #100	@ 0x64
 8004c90:	f7fd fc0a 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004c94:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 8004c98:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8004c9a:	f8c4 34e4 	str.w	r3, [r4, #1252]	@ 0x4e4
        boundingArea = calculateBoundingArea();
 8004c9e:	4640      	mov	r0, r8
        linespace = space;
 8004ca0:	f8a4 64e8 	strh.w	r6, [r4, #1256]	@ 0x4e8
        boundingArea = calculateBoundingArea();
 8004ca4:	f00e fd4c 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004ca8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004cac:	f504 639e 	add.w	r3, r4, #1264	@ 0x4f0
 8004cb0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004cb4:	230f      	movs	r3, #15
    textArea2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G6Y9));
 8004cb6:	9803      	ldr	r0, [sp, #12]
 8004cb8:	f8ad 3074 	strh.w	r3, [sp, #116]	@ 0x74
 8004cbc:	a91c      	add	r1, sp, #112	@ 0x70
 8004cbe:	f8cd 9070 	str.w	r9, [sp, #112]	@ 0x70
 8004cc2:	f00e ffd7 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004cc6:	9903      	ldr	r1, [sp, #12]
 8004cc8:	4628      	mov	r0, r5
 8004cca:	f00b fd1f 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile00.setXY(0, 80);
 8004cce:	463a      	mov	r2, r7
 8004cd0:	9808      	ldr	r0, [sp, #32]
 8004cd2:	4631      	mov	r1, r6
 8004cd4:	f7fd fbe8 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004cd8:	9908      	ldr	r1, [sp, #32]
 8004cda:	4628      	mov	r0, r5
 8004cdc:	f00b fd16 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile01.setXY(60, 80);
 8004ce0:	463a      	mov	r2, r7
 8004ce2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004ce4:	213c      	movs	r1, #60	@ 0x3c
 8004ce6:	f7fd fbdf 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004cea:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004cec:	4628      	mov	r0, r5
 8004cee:	f00b fd0d 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile02.setXY(120, 80);
 8004cf2:	463a      	mov	r2, r7
 8004cf4:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004cf6:	2178      	movs	r1, #120	@ 0x78
 8004cf8:	f7fd fbd6 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004cfc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004cfe:	4628      	mov	r0, r5
 8004d00:	f00b fd04 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile03.setXY(180, 80);
 8004d04:	463a      	mov	r2, r7
 8004d06:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8004d08:	21b4      	movs	r1, #180	@ 0xb4
 8004d0a:	f7fd fbcd 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004d0e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004d10:	4628      	mov	r0, r5
 8004d12:	f00b fcfb 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile10.setXY(0, 140);
 8004d16:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8004d18:	228c      	movs	r2, #140	@ 0x8c
 8004d1a:	4631      	mov	r1, r6
 8004d1c:	f7fd fbc4 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004d20:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8004d22:	4628      	mov	r0, r5
 8004d24:	f00b fcf2 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile11.setXY(60, 140);
 8004d28:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8004d2a:	e013      	b.n	8004d54 <_ZN18MainScreenViewBaseC1Ev+0x3b0>
 8004d2c:	0802d478 	.word	0x0802d478
 8004d30:	0802d448 	.word	0x0802d448
 8004d34:	080047df 	.word	0x080047df
 8004d38:	0802d460 	.word	0x0802d460
 8004d3c:	080047fd 	.word	0x080047fd
 8004d40:	ffb56767 	.word	0xffb56767
 8004d44:	ff006699 	.word	0xff006699
 8004d48:	ff776e65 	.word	0xff776e65
 8004d4c:	ffe36e1b 	.word	0xffe36e1b
 8004d50:	0802d030 	.word	0x0802d030
 8004d54:	228c      	movs	r2, #140	@ 0x8c
 8004d56:	213c      	movs	r1, #60	@ 0x3c
 8004d58:	f7fd fba6 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004d5c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8004d5e:	4628      	mov	r0, r5
 8004d60:	f00b fcd4 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile12.setXY(120, 140);
 8004d64:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8004d66:	228c      	movs	r2, #140	@ 0x8c
 8004d68:	2178      	movs	r1, #120	@ 0x78
 8004d6a:	f7fd fb9d 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004d6e:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8004d70:	4628      	mov	r0, r5
 8004d72:	f00b fccb 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile13.setXY(180, 140);
 8004d76:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8004d78:	228c      	movs	r2, #140	@ 0x8c
 8004d7a:	21b4      	movs	r1, #180	@ 0xb4
 8004d7c:	f7fd fb94 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004d80:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8004d82:	4628      	mov	r0, r5
 8004d84:	f00b fcc2 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile20.setXY(0, 200);
 8004d88:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8004d8a:	22c8      	movs	r2, #200	@ 0xc8
 8004d8c:	4631      	mov	r1, r6
 8004d8e:	f7fd fb8b 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004d92:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8004d94:	4628      	mov	r0, r5
 8004d96:	f00b fcb9 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile21.setXY(60, 200);
 8004d9a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8004d9c:	22c8      	movs	r2, #200	@ 0xc8
 8004d9e:	213c      	movs	r1, #60	@ 0x3c
 8004da0:	f7fd fb82 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004da4:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8004da6:	4628      	mov	r0, r5
 8004da8:	f00b fcb0 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile22.setXY(120, 200);
 8004dac:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8004dae:	22c8      	movs	r2, #200	@ 0xc8
 8004db0:	2178      	movs	r1, #120	@ 0x78
 8004db2:	f7fd fb79 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004db6:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8004db8:	4628      	mov	r0, r5
 8004dba:	f00b fca7 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile23.setXY(180, 200);
 8004dbe:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8004dc0:	22c8      	movs	r2, #200	@ 0xc8
 8004dc2:	21b4      	movs	r1, #180	@ 0xb4
 8004dc4:	f7fd fb70 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004dc8:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8004dca:	4628      	mov	r0, r5
 8004dcc:	f00b fc9e 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile30.setXY(0, 260);
 8004dd0:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8004dd2:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8004dd6:	4631      	mov	r1, r6
 8004dd8:	f7fd fb66 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004ddc:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8004dde:	4628      	mov	r0, r5
 8004de0:	f00b fc94 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile31.setXY(60, 260);
 8004de4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8004de6:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8004dea:	213c      	movs	r1, #60	@ 0x3c
 8004dec:	f7fd fb5c 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004df0:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8004df2:	4628      	mov	r0, r5
 8004df4:	f00b fc8a 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile32.setXY(120, 260);
 8004df8:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8004dfc:	4658      	mov	r0, fp
 8004dfe:	2178      	movs	r1, #120	@ 0x78
 8004e00:	f7fd fb52 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004e04:	4659      	mov	r1, fp
 8004e06:	4628      	mov	r0, r5
 8004e08:	f00b fc80 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile33.setXY(180, 260);
 8004e0c:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8004e10:	4650      	mov	r0, sl
 8004e12:	21b4      	movs	r1, #180	@ 0xb4
 8004e14:	f7fd fb48 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004e18:	4628      	mov	r0, r5
 8004e1a:	4651      	mov	r1, sl
 8004e1c:	f00b fc76 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004e20:	4620      	mov	r0, r4
 8004e22:	b01f      	add	sp, #124	@ 0x7c
 8004e24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004e28 <_ZN9ScoreBaseD1Ev>:
}

ScoreBase::~ScoreBase()
{

}
 8004e28:	4770      	bx	lr

08004e2a <_ZN9ScoreBase10initializeEv>:

void ScoreBase::initialize()
{

}
 8004e2a:	4770      	bx	lr

08004e2c <_ZN9ScoreBaseD0Ev>:
ScoreBase::~ScoreBase()
 8004e2c:	b510      	push	{r4, lr}
}
 8004e2e:	f44f 7180 	mov.w	r1, #256	@ 0x100
ScoreBase::~ScoreBase()
 8004e32:	4604      	mov	r4, r0
}
 8004e34:	f024 fc6e 	bl	8029714 <_ZdlPvj>
 8004e38:	4620      	mov	r0, r4
 8004e3a:	bd10      	pop	{r4, pc}

08004e3c <_ZN9ScoreBaseC1Ev>:
ScoreBase::ScoreBase()
 8004e3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e40:	4604      	mov	r4, r0
 8004e42:	b086      	sub	sp, #24
 8004e44:	4626      	mov	r6, r4
 8004e46:	2500      	movs	r5, #0
 8004e48:	f7fd fb1c 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 8004e4c:	4b52      	ldr	r3, [pc, #328]	@ (8004f98 <_ZN9ScoreBaseC1Ev+0x15c>)
 8004e4e:	62a5      	str	r5, [r4, #40]	@ 0x28
 8004e50:	f846 3b2c 	str.w	r3, [r6], #44
        : Widget(), alpha(255), color(0)
 8004e54:	4629      	mov	r1, r5
 8004e56:	2226      	movs	r2, #38	@ 0x26
 8004e58:	4630      	mov	r0, r6
 8004e5a:	f025 fd9e 	bl	802a99a <memset>
 8004e5e:	4630      	mov	r0, r6
 8004e60:	f7fd fb10 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 8004e64:	4b4d      	ldr	r3, [pc, #308]	@ (8004f9c <_ZN9ScoreBaseC1Ev+0x160>)
 8004e66:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8004e68:	f104 0858 	add.w	r8, r4, #88	@ 0x58
 8004e6c:	23ff      	movs	r3, #255	@ 0xff
 8004e6e:	f884 3052 	strb.w	r3, [r4, #82]	@ 0x52
        : TextArea()
 8004e72:	f104 07a0 	add.w	r7, r4, #160	@ 0xa0
        : color(col)
 8004e76:	6565      	str	r5, [r4, #84]	@ 0x54
 8004e78:	4640      	mov	r0, r8
 8004e7a:	f7fd fb23 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8004e7e:	4638      	mov	r0, r7
 8004e80:	f7fd fb20 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004e84:	4b46      	ldr	r3, [pc, #280]	@ (8004fa0 <_ZN9ScoreBaseC1Ev+0x164>)
 8004e86:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
        rect.width = width;
 8004e8a:	4b46      	ldr	r3, [pc, #280]	@ (8004fa4 <_ZN9ScoreBaseC1Ev+0x168>)
 8004e8c:	60a3      	str	r3, [r4, #8]
        setXY(x, y);
 8004e8e:	462a      	mov	r2, r5
 8004e90:	4629      	mov	r1, r5
 8004e92:	4630      	mov	r0, r6
 8004e94:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
 8004e98:	f7fd fb06 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8004e9c:	4630      	mov	r0, r6
 8004e9e:	212d      	movs	r1, #45	@ 0x2d
 8004ea0:	f7fc fa4a 	bl	8001338 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8004ea4:	4630      	mov	r0, r6
 8004ea6:	211e      	movs	r1, #30
 8004ea8:	f7fc fa48 	bl	800133c <_ZN8touchgfx8Drawable9setHeightEs>
        color = newColor;
 8004eac:	f04f 33ff 	mov.w	r3, #4294967295
 8004eb0:	6563      	str	r3, [r4, #84]	@ 0x54
    add(box1);
 8004eb2:	4631      	mov	r1, r6
 8004eb4:	4620      	mov	r0, r4
 8004eb6:	f00b fc29 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004eba:	466e      	mov	r6, sp
    textArea1.setXY(6, 0);
 8004ebc:	462a      	mov	r2, r5
 8004ebe:	2106      	movs	r1, #6
 8004ec0:	4640      	mov	r0, r8
        color = newColor;
 8004ec2:	f04f 4a7f 	mov.w	sl, #4278190080	@ 0xff000000
 8004ec6:	f7fd faef 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 8004eca:	f8a4 508c 	strh.w	r5, [r4, #140]	@ 0x8c
        boundingArea = calculateBoundingArea();
 8004ece:	4641      	mov	r1, r8
 8004ed0:	4630      	mov	r0, r6
        color = newColor;
 8004ed2:	f8c4 a088 	str.w	sl, [r4, #136]	@ 0x88
        boundingArea = calculateBoundingArea();
 8004ed6:	f00e fc33 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004eda:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004ede:	f104 0394 	add.w	r3, r4, #148	@ 0x94
 8004ee2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004ee6:	f8df 90e0 	ldr.w	r9, [pc, #224]	@ 8004fc8 <_ZN9ScoreBaseC1Ev+0x18c>
 8004eea:	f8cd 9010 	str.w	r9, [sp, #16]
 8004eee:	2321      	movs	r3, #33	@ 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7W03));
 8004ef0:	a904      	add	r1, sp, #16
 8004ef2:	4640      	mov	r0, r8
 8004ef4:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004ef8:	f00e febc 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1);
 8004efc:	4641      	mov	r1, r8
 8004efe:	4620      	mov	r0, r4
 8004f00:	f00b fc04 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scoreText.setXY(9, 15);
 8004f04:	220f      	movs	r2, #15
 8004f06:	2109      	movs	r1, #9
 8004f08:	4638      	mov	r0, r7
 8004f0a:	f7fd facd 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8004f0e:	f8d4 30a0 	ldr.w	r3, [r4, #160]	@ 0xa0
        linespace = space;
 8004f12:	f8a4 50d4 	strh.w	r5, [r4, #212]	@ 0xd4
        boundingArea = calculateBoundingArea();
 8004f16:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
 8004f1a:	f8c4 a0d0 	str.w	sl, [r4, #208]	@ 0xd0
        boundingArea = calculateBoundingArea();
 8004f1e:	4639      	mov	r1, r7
 8004f20:	4630      	mov	r0, r6
 8004f22:	4798      	blx	r3
 8004f24:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004f28:	f104 03dc 	add.w	r3, r4, #220	@ 0xdc
 8004f2c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004f30:	4b1d      	ldr	r3, [pc, #116]	@ (8004fa8 <_ZN9ScoreBaseC1Ev+0x16c>)
 8004f32:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(scoreTextBuffer, SCORETEXT_SIZE, "%s", touchgfx::TypedText(T_SCORE).getText());
 8004f34:	f104 05ec 	add.w	r5, r4, #236	@ 0xec
 8004f38:	b92b      	cbnz	r3, 8004f46 <_ZN9ScoreBaseC1Ev+0x10a>
 8004f3a:	4b1c      	ldr	r3, [pc, #112]	@ (8004fac <_ZN9ScoreBaseC1Ev+0x170>)
 8004f3c:	4a1c      	ldr	r2, [pc, #112]	@ (8004fb0 <_ZN9ScoreBaseC1Ev+0x174>)
 8004f3e:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004f40:	481c      	ldr	r0, [pc, #112]	@ (8004fb4 <_ZN9ScoreBaseC1Ev+0x178>)
 8004f42:	f025 fb23 	bl	802a58c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8004f46:	4b1c      	ldr	r3, [pc, #112]	@ (8004fb8 <_ZN9ScoreBaseC1Ev+0x17c>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004f48:	881b      	ldrh	r3, [r3, #0]
 8004f4a:	2b1f      	cmp	r3, #31
 8004f4c:	d803      	bhi.n	8004f56 <_ZN9ScoreBaseC1Ev+0x11a>
 8004f4e:	4b1b      	ldr	r3, [pc, #108]	@ (8004fbc <_ZN9ScoreBaseC1Ev+0x180>)
 8004f50:	4a17      	ldr	r2, [pc, #92]	@ (8004fb0 <_ZN9ScoreBaseC1Ev+0x174>)
 8004f52:	2161      	movs	r1, #97	@ 0x61
 8004f54:	e7f4      	b.n	8004f40 <_ZN9ScoreBaseC1Ev+0x104>
        return texts->getText(typedTextId);
 8004f56:	4b1a      	ldr	r3, [pc, #104]	@ (8004fc0 <_ZN9ScoreBaseC1Ev+0x184>)
 8004f58:	211f      	movs	r1, #31
 8004f5a:	6818      	ldr	r0, [r3, #0]
 8004f5c:	f002 f99e 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 8004f60:	4a18      	ldr	r2, [pc, #96]	@ (8004fc4 <_ZN9ScoreBaseC1Ev+0x188>)
 8004f62:	4603      	mov	r3, r0
 8004f64:	210a      	movs	r1, #10
 8004f66:	4628      	mov	r0, r5
 8004f68:	f015 fa7d 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    scoreText.resizeToCurrentText();
 8004f6c:	4638      	mov	r0, r7
        wc1 = value;
 8004f6e:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
 8004f72:	f00e fe5f 	bl	8013c34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004f76:	2320      	movs	r3, #32
    scoreText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SXWG));
 8004f78:	a904      	add	r1, sp, #16
 8004f7a:	4638      	mov	r0, r7
 8004f7c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004f80:	f8cd 9010 	str.w	r9, [sp, #16]
 8004f84:	f00e fe76 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(scoreText);
 8004f88:	4620      	mov	r0, r4
 8004f8a:	4639      	mov	r1, r7
 8004f8c:	f00b fbbe 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004f90:	4620      	mov	r0, r4
 8004f92:	b006      	add	sp, #24
 8004f94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004f98:	0802d4b0 	.word	0x0802d4b0
 8004f9c:	0802e454 	.word	0x0802e454
 8004fa0:	0802d040 	.word	0x0802d040
 8004fa4:	001e002d 	.word	0x001e002d
 8004fa8:	20013fa4 	.word	0x20013fa4
 8004fac:	0802bbe5 	.word	0x0802bbe5
 8004fb0:	0802bce7 	.word	0x0802bce7
 8004fb4:	0802bc62 	.word	0x0802bc62
 8004fb8:	20013fa8 	.word	0x20013fa8
 8004fbc:	0802bca9 	.word	0x0802bca9
 8004fc0:	20013fb0 	.word	0x20013fb0
 8004fc4:	0802bd32 	.word	0x0802bd32
 8004fc8:	0802d030 	.word	0x0802d030

08004fcc <_ZN8touchgfx8CallbackI17Screen3x3ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004fcc:	4770      	bx	lr

08004fce <_ZN8touchgfx8CallbackI17Screen3x3ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004fce:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004fd0:	68c2      	ldr	r2, [r0, #12]
 8004fd2:	6844      	ldr	r4, [r0, #4]
 8004fd4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004fd6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8004fd8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004fdc:	07d2      	lsls	r2, r2, #31
 8004fde:	bf48      	it	mi
 8004fe0:	5962      	ldrmi	r2, [r4, r5]
 8004fe2:	689b      	ldr	r3, [r3, #8]
    }
 8004fe4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004fe6:	bf48      	it	mi
 8004fe8:	58d3      	ldrmi	r3, [r2, r3]
 8004fea:	4718      	bx	r3

08004fec <_ZNK8touchgfx8CallbackI17Screen3x3ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8004fec:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8004fee:	6840      	ldr	r0, [r0, #4]
 8004ff0:	b130      	cbz	r0, 8005000 <_ZNK8touchgfx8CallbackI17Screen3x3ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8004ff2:	689a      	ldr	r2, [r3, #8]
 8004ff4:	b91a      	cbnz	r2, 8004ffe <_ZNK8touchgfx8CallbackI17Screen3x3ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8004ff6:	68d8      	ldr	r0, [r3, #12]
 8004ff8:	f000 0001 	and.w	r0, r0, #1
 8004ffc:	4770      	bx	lr
 8004ffe:	2001      	movs	r0, #1
    }
 8005000:	4770      	bx	lr

08005002 <_ZN8touchgfx8CallbackI17Screen3x3ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005002:	b510      	push	{r4, lr}
 8005004:	2110      	movs	r1, #16
 8005006:	4604      	mov	r4, r0
 8005008:	f024 fb84 	bl	8029714 <_ZdlPvj>
 800500c:	4620      	mov	r0, r4
 800500e:	bd10      	pop	{r4, pc}

08005010 <_ZN17Screen3x3ViewBase11setupScreenEv>:
{

}

void Screen3x3ViewBase::setupScreen()
{
 8005010:	b510      	push	{r4, lr}
 8005012:	4604      	mov	r4, r0
    scoreContainer.initialize();
 8005014:	f500 70e8 	add.w	r0, r0, #464	@ 0x1d0
 8005018:	f003 fcae 	bl	8008978 <_ZN5Score10initializeEv>
    bestContainer.initialize();
 800501c:	f504 7039 	add.w	r0, r4, #740	@ 0x2e4
 8005020:	f002 fdac 	bl	8007b7c <_ZN4Best10initializeEv>
    tile3x31.initialize();
 8005024:	f504 6091 	add.w	r0, r4, #1160	@ 0x488
 8005028:	f006 fa9d 	bl	800b566 <_ZN7Tile3x310initializeEv>
    tile3x32.initialize();
 800502c:	f204 5054 	addw	r0, r4, #1364	@ 0x554
 8005030:	f006 fa99 	bl	800b566 <_ZN7Tile3x310initializeEv>
    tile3x33.initialize();
 8005034:	f504 60c4 	add.w	r0, r4, #1568	@ 0x620
 8005038:	f006 fa95 	bl	800b566 <_ZN7Tile3x310initializeEv>
    tile3x34.initialize();
 800503c:	f204 60ec 	addw	r0, r4, #1772	@ 0x6ec
 8005040:	f006 fa91 	bl	800b566 <_ZN7Tile3x310initializeEv>
    tile3x35.initialize();
 8005044:	f504 60f7 	add.w	r0, r4, #1976	@ 0x7b8
 8005048:	f006 fa8d 	bl	800b566 <_ZN7Tile3x310initializeEv>
    tile3x36.initialize();
 800504c:	f604 0084 	addw	r0, r4, #2180	@ 0x884
 8005050:	f006 fa89 	bl	800b566 <_ZN7Tile3x310initializeEv>
    tile3x37.initialize();
 8005054:	f504 6015 	add.w	r0, r4, #2384	@ 0x950
 8005058:	f006 fa85 	bl	800b566 <_ZN7Tile3x310initializeEv>
    tile3x38.initialize();
 800505c:	f604 201c 	addw	r0, r4, #2588	@ 0xa1c
 8005060:	f006 fa81 	bl	800b566 <_ZN7Tile3x310initializeEv>
    tile3x39.initialize();
 8005064:	f604 20e8 	addw	r0, r4, #2792	@ 0xae8
}
 8005068:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    tile3x39.initialize();
 800506c:	f006 ba7b 	b.w	800b566 <_ZN7Tile3x310initializeEv>

08005070 <_ZN17Screen3x3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen3x3ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1_1)
 8005070:	30e4      	adds	r0, #228	@ 0xe4
 8005072:	4288      	cmp	r0, r1
{
 8005074:	b508      	push	{r3, lr}
    if (&src == &flexButton1_1)
 8005076:	d105      	bne.n	8005084 <_ZN17Screen3x3ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    virtual ~Screen3x3ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005078:	f011 fc90 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
//        //Interaction2
//        //When flexButton1_1_1 clicked change screen to Chosing_mode
//        //Go to Chosing_mode with screen transition towards East
//        application().gotoChosing_modeScreenWipeTransitionEast();
//    }
}
 800507c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoSelectedGameDesignScreenCoverTransitionEast();
 8005080:	f7fe b89a 	b.w	80031b8 <_ZN23FrontendApplicationBase47gotoSelectedGameDesignScreenCoverTransitionEastEv>
}
 8005084:	bd08      	pop	{r3, pc}
	...

08005088 <_ZN7Tile3x3D1Ev>:
#include <touchgfx/Application.hpp>
class Tile3x3 : public Tile3x3Base
{
public:
    Tile3x3();
    virtual ~Tile3x3() {}
 8005088:	b510      	push	{r4, lr}
 800508a:	4b03      	ldr	r3, [pc, #12]	@ (8005098 <_ZN7Tile3x3D1Ev+0x10>)
 800508c:	6003      	str	r3, [r0, #0]
 800508e:	4604      	mov	r4, r0
 8005090:	f002 f912 	bl	80072b8 <_ZN11Tile3x3BaseD1Ev>
 8005094:	4620      	mov	r0, r4
 8005096:	bd10      	pop	{r4, pc}
 8005098:	0802de98 	.word	0x0802de98

0800509c <_ZN17Screen3x3ViewBaseD1Ev>:
Screen3x3ViewBase::~Screen3x3ViewBase()
 800509c:	4b1b      	ldr	r3, [pc, #108]	@ (800510c <_ZN17Screen3x3ViewBaseD1Ev+0x70>)
 800509e:	b510      	push	{r4, lr}
 80050a0:	4604      	mov	r4, r0
 80050a2:	6003      	str	r3, [r0, #0]
}
 80050a4:	f600 20e8 	addw	r0, r0, #2792	@ 0xae8
 80050a8:	f7ff ffee 	bl	8005088 <_ZN7Tile3x3D1Ev>
 80050ac:	f604 201c 	addw	r0, r4, #2588	@ 0xa1c
 80050b0:	f7ff ffea 	bl	8005088 <_ZN7Tile3x3D1Ev>
 80050b4:	f504 6015 	add.w	r0, r4, #2384	@ 0x950
 80050b8:	f7ff ffe6 	bl	8005088 <_ZN7Tile3x3D1Ev>
 80050bc:	f604 0084 	addw	r0, r4, #2180	@ 0x884
 80050c0:	f7ff ffe2 	bl	8005088 <_ZN7Tile3x3D1Ev>
 80050c4:	f504 60f7 	add.w	r0, r4, #1976	@ 0x7b8
 80050c8:	f7ff ffde 	bl	8005088 <_ZN7Tile3x3D1Ev>
 80050cc:	f204 60ec 	addw	r0, r4, #1772	@ 0x6ec
 80050d0:	f7ff ffda 	bl	8005088 <_ZN7Tile3x3D1Ev>
 80050d4:	f504 60c4 	add.w	r0, r4, #1568	@ 0x620
 80050d8:	f7ff ffd6 	bl	8005088 <_ZN7Tile3x3D1Ev>
 80050dc:	f204 5054 	addw	r0, r4, #1364	@ 0x554
 80050e0:	f7ff ffd2 	bl	8005088 <_ZN7Tile3x3D1Ev>
 80050e4:	f504 6091 	add.w	r0, r4, #1160	@ 0x488
 80050e8:	f7ff ffce 	bl	8005088 <_ZN7Tile3x3D1Ev>
 80050ec:	4b08      	ldr	r3, [pc, #32]	@ (8005110 <_ZN17Screen3x3ViewBaseD1Ev+0x74>)
 80050ee:	f8c4 32e4 	str.w	r3, [r4, #740]	@ 0x2e4
 80050f2:	f504 7039 	add.w	r0, r4, #740	@ 0x2e4
 80050f6:	f7fd f96b 	bl	80023d0 <_ZN8BestBaseD1Ev>
 80050fa:	4b06      	ldr	r3, [pc, #24]	@ (8005114 <_ZN17Screen3x3ViewBaseD1Ev+0x78>)
 80050fc:	f8c4 31d0 	str.w	r3, [r4, #464]	@ 0x1d0
 8005100:	f504 70e8 	add.w	r0, r4, #464	@ 0x1d0
 8005104:	f7ff fe90 	bl	8004e28 <_ZN9ScoreBaseD1Ev>
 8005108:	4620      	mov	r0, r4
 800510a:	bd10      	pop	{r4, pc}
 800510c:	0802d55c 	.word	0x0802d55c
 8005110:	0802d9a4 	.word	0x0802d9a4
 8005114:	0802dba4 	.word	0x0802dba4

08005118 <_ZN17Screen3x3ViewBaseD0Ev>:
Screen3x3ViewBase::~Screen3x3ViewBase()
 8005118:	b510      	push	{r4, lr}
 800511a:	4604      	mov	r4, r0
}
 800511c:	f7ff ffbe 	bl	800509c <_ZN17Screen3x3ViewBaseD1Ev>
 8005120:	4620      	mov	r0, r4
 8005122:	f640 31c4 	movw	r1, #3012	@ 0xbc4
 8005126:	f024 faf5 	bl	8029714 <_ZdlPvj>
 800512a:	4620      	mov	r0, r4
 800512c:	bd10      	pop	{r4, pc}

0800512e <_ZN7Tile3x3D0Ev>:
 800512e:	b510      	push	{r4, lr}
 8005130:	4604      	mov	r4, r0
 8005132:	f7ff ffa9 	bl	8005088 <_ZN7Tile3x3D1Ev>
 8005136:	4620      	mov	r0, r4
 8005138:	21cc      	movs	r1, #204	@ 0xcc
 800513a:	f024 faeb 	bl	8029714 <_ZdlPvj>
 800513e:	4620      	mov	r0, r4
 8005140:	bd10      	pop	{r4, pc}
	...

08005144 <_ZN17Screen3x3ViewBaseC1Ev>:
Screen3x3ViewBase::Screen3x3ViewBase() :
 8005144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005148:	4604      	mov	r4, r0
 800514a:	b095      	sub	sp, #84	@ 0x54
    flexButtonCallback(this, &Screen3x3ViewBase::flexButtonCallbackHandler)
 800514c:	46a1      	mov	r9, r4
 800514e:	2600      	movs	r6, #0
 8005150:	f013 fc9a 	bl	8018a88 <_ZN8touchgfx6ScreenC1Ev>
 8005154:	4bb9      	ldr	r3, [pc, #740]	@ (800543c <_ZN17Screen3x3ViewBaseC1Ev+0x2f8>)
 8005156:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8005158:	f849 3b40 	str.w	r3, [r9], #64
 800515c:	4648      	mov	r0, r9
 800515e:	f7fd fb81 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 8005162:	f104 0ae4 	add.w	sl, r4, #228	@ 0xe4
 8005166:	f104 006c 	add.w	r0, r4, #108	@ 0x6c
 800516a:	f7fd fb8f 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800516e:	f504 7bae 	add.w	fp, r4, #348	@ 0x15c
 8005172:	4650      	mov	r0, sl
 8005174:	f7fd fb8a 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8005178:	f504 78c4 	add.w	r8, r4, #392	@ 0x188
 800517c:	4658      	mov	r0, fp
 800517e:	f7fd fb71 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 8005182:	4640      	mov	r0, r8
 8005184:	f7fd f99e 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005188:	f504 73e8 	add.w	r3, r4, #464	@ 0x1d0
 800518c:	4618      	mov	r0, r3
 800518e:	9303      	str	r3, [sp, #12]
 8005190:	f003 fbd6 	bl	8008940 <_ZN5ScoreC1Ev>
 8005194:	f504 7339 	add.w	r3, r4, #740	@ 0x2e4
 8005198:	4618      	mov	r0, r3
 800519a:	f504 6788 	add.w	r7, r4, #1088	@ 0x440
 800519e:	9304      	str	r3, [sp, #16]
 80051a0:	f002 fcd0 	bl	8007b44 <_ZN4BestC1Ev>
 80051a4:	f504 707e 	add.w	r0, r4, #1016	@ 0x3f8
 80051a8:	f7fd f98c 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 80051ac:	4638      	mov	r0, r7
 80051ae:	f7fd f989 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 80051b2:	f504 6391 	add.w	r3, r4, #1160	@ 0x488
 80051b6:	4618      	mov	r0, r3
 80051b8:	9305      	str	r3, [sp, #20]
 80051ba:	f006 f92b 	bl	800b414 <_ZN7Tile3x3C1Ev>
 80051be:	f204 5354 	addw	r3, r4, #1364	@ 0x554
 80051c2:	4618      	mov	r0, r3
 80051c4:	9306      	str	r3, [sp, #24]
 80051c6:	f006 f925 	bl	800b414 <_ZN7Tile3x3C1Ev>
 80051ca:	f504 63c4 	add.w	r3, r4, #1568	@ 0x620
 80051ce:	4618      	mov	r0, r3
 80051d0:	9307      	str	r3, [sp, #28]
 80051d2:	f006 f91f 	bl	800b414 <_ZN7Tile3x3C1Ev>
 80051d6:	f204 63ec 	addw	r3, r4, #1772	@ 0x6ec
 80051da:	4618      	mov	r0, r3
 80051dc:	9308      	str	r3, [sp, #32]
 80051de:	f006 f919 	bl	800b414 <_ZN7Tile3x3C1Ev>
 80051e2:	f504 63f7 	add.w	r3, r4, #1976	@ 0x7b8
 80051e6:	4618      	mov	r0, r3
 80051e8:	9309      	str	r3, [sp, #36]	@ 0x24
 80051ea:	f006 f913 	bl	800b414 <_ZN7Tile3x3C1Ev>
 80051ee:	f604 0384 	addw	r3, r4, #2180	@ 0x884
 80051f2:	4618      	mov	r0, r3
 80051f4:	930a      	str	r3, [sp, #40]	@ 0x28
 80051f6:	f006 f90d 	bl	800b414 <_ZN7Tile3x3C1Ev>
 80051fa:	f504 6315 	add.w	r3, r4, #2384	@ 0x950
 80051fe:	4618      	mov	r0, r3
 8005200:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005202:	f006 f907 	bl	800b414 <_ZN7Tile3x3C1Ev>
 8005206:	f604 231c 	addw	r3, r4, #2588	@ 0xa1c
 800520a:	4618      	mov	r0, r3
 800520c:	930c      	str	r3, [sp, #48]	@ 0x30
 800520e:	f006 f901 	bl	800b414 <_ZN7Tile3x3C1Ev>
 8005212:	f604 23e8 	addw	r3, r4, #2792	@ 0xae8
 8005216:	4618      	mov	r0, r3
 8005218:	930d      	str	r3, [sp, #52]	@ 0x34
 800521a:	f006 f8fb 	bl	800b414 <_ZN7Tile3x3C1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800521e:	4b88      	ldr	r3, [pc, #544]	@ (8005440 <_ZN17Screen3x3ViewBaseC1Ev+0x2fc>)
 8005220:	f8c4 3bb4 	str.w	r3, [r4, #2996]	@ 0xbb4
 8005224:	4b87      	ldr	r3, [pc, #540]	@ (8005444 <_ZN17Screen3x3ViewBaseC1Ev+0x300>)
 8005226:	f8c4 3bbc 	str.w	r3, [r4, #3004]	@ 0xbbc
    __background.setPosition(0, 0, 240, 320);
 800522a:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800522e:	4632      	mov	r2, r6
 8005230:	f8c4 4bb8 	str.w	r4, [r4, #3000]	@ 0xbb8
 8005234:	f8c4 6bc0 	str.w	r6, [r4, #3008]	@ 0xbc0
 8005238:	4631      	mov	r1, r6
 800523a:	9300      	str	r3, [sp, #0]
 800523c:	4648      	mov	r0, r9
 800523e:	23f0      	movs	r3, #240	@ 0xf0
 8005240:	1d25      	adds	r5, r4, #4
 8005242:	f7fd fafb 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005246:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800524a:	66a3      	str	r3, [r4, #104]	@ 0x68
 800524c:	4649      	mov	r1, r9
 800524e:	4628      	mov	r0, r5
        borderBox.setPosition(x, y, width, height);
 8005250:	f04f 0922 	mov.w	r9, #34	@ 0x22
 8005254:	f00b fa5a 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005258:	4632      	mov	r2, r6
 800525a:	4631      	mov	r1, r6
 800525c:	f8cd 9000 	str.w	r9, [sp]
 8005260:	f504 708c 	add.w	r0, r4, #280	@ 0x118
 8005264:	2364      	movs	r3, #100	@ 0x64
 8005266:	f7fd fae9 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800526a:	2305      	movs	r3, #5
 800526c:	f8a4 3148 	strh.w	r3, [r4, #328]	@ 0x148
        up = colorReleased;
 8005270:	4b75      	ldr	r3, [pc, #468]	@ (8005448 <_ZN17Screen3x3ViewBaseC1Ev+0x304>)
 8005272:	f8c4 314c 	str.w	r3, [r4, #332]	@ 0x14c
        down = colorPressed;
 8005276:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 800527a:	3333      	adds	r3, #51	@ 0x33
 800527c:	f8c4 3150 	str.w	r3, [r4, #336]	@ 0x150
        borderUp = borderColorReleased;
 8005280:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 8005284:	3b66      	subs	r3, #102	@ 0x66
 8005286:	f8c4 3154 	str.w	r3, [r4, #340]	@ 0x154
        borderDown = borderColorPressed;
 800528a:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 800528e:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8005292:	f8c4 3158 	str.w	r3, [r4, #344]	@ 0x158
        handlePressedUpdated();
 8005296:	4650      	mov	r0, sl
 8005298:	f7fd fa35 	bl	8002706 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton1_1.setAction(flexButtonCallback);
 800529c:	f604 33b4 	addw	r3, r4, #2996	@ 0xbb4
 80052a0:	f8c4 3114 	str.w	r3, [r4, #276]	@ 0x114
    flexButton1_1.setPosition(70, 36, 100, 34);
 80052a4:	2224      	movs	r2, #36	@ 0x24
 80052a6:	f8cd 9000 	str.w	r9, [sp]
 80052aa:	2364      	movs	r3, #100	@ 0x64
 80052ac:	4650      	mov	r0, sl
 80052ae:	2146      	movs	r1, #70	@ 0x46
 80052b0:	f7fd fac4 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    box2.setPosition(0, 80, 240, 240);
 80052b4:	f04f 09f0 	mov.w	r9, #240	@ 0xf0
 80052b8:	4651      	mov	r1, sl
 80052ba:	4628      	mov	r0, r5
 80052bc:	f00b fa26 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80052c0:	464b      	mov	r3, r9
 80052c2:	2250      	movs	r2, #80	@ 0x50
 80052c4:	4631      	mov	r1, r6
 80052c6:	4658      	mov	r0, fp
 80052c8:	f8cd 9000 	str.w	r9, [sp]
 80052cc:	f7fd fab6 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80052d0:	4b5e      	ldr	r3, [pc, #376]	@ (800544c <_ZN17Screen3x3ViewBaseC1Ev+0x308>)
 80052d2:	f8c4 3184 	str.w	r3, [r4, #388]	@ 0x184
 80052d6:	4659      	mov	r1, fp
 80052d8:	4628      	mov	r0, r5
 80052da:	f00b fa17 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(11, 6);
 80052de:	2206      	movs	r2, #6
 80052e0:	4640      	mov	r0, r8
 80052e2:	210b      	movs	r1, #11
 80052e4:	f7fd f8e0 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80052e8:	f10d 0a38 	add.w	sl, sp, #56	@ 0x38
        color = newColor;
 80052ec:	4b58      	ldr	r3, [pc, #352]	@ (8005450 <_ZN17Screen3x3ViewBaseC1Ev+0x30c>)
 80052ee:	f8c4 31b8 	str.w	r3, [r4, #440]	@ 0x1b8
        boundingArea = calculateBoundingArea();
 80052f2:	4641      	mov	r1, r8
 80052f4:	4650      	mov	r0, sl
        linespace = space;
 80052f6:	f8a4 61bc 	strh.w	r6, [r4, #444]	@ 0x1bc
        boundingArea = calculateBoundingArea();
 80052fa:	f00e fa21 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80052fe:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005302:	f504 73e2 	add.w	r3, r4, #452	@ 0x1c4
 8005306:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800530a:	f8df b148 	ldr.w	fp, [pc, #328]	@ 8005454 <_ZN17Screen3x3ViewBaseC1Ev+0x310>
 800530e:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
 8005312:	2314      	movs	r3, #20
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FQMJ));
 8005314:	a912      	add	r1, sp, #72	@ 0x48
 8005316:	4640      	mov	r0, r8
 8005318:	f8ad 304c 	strh.w	r3, [sp, #76]	@ 0x4c
 800531c:	f00e fcaa 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005320:	4641      	mov	r1, r8
 8005322:	4628      	mov	r0, r5
 8005324:	f00b f9f2 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scoreContainer.setXY(117, 3);
 8005328:	9803      	ldr	r0, [sp, #12]
 800532a:	2203      	movs	r2, #3
 800532c:	2175      	movs	r1, #117	@ 0x75
 800532e:	f7fd f8bb 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005332:	9903      	ldr	r1, [sp, #12]
 8005334:	4628      	mov	r0, r5
 8005336:	f00b f9e9 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bestContainer.setXY(162, 3);
 800533a:	9804      	ldr	r0, [sp, #16]
 800533c:	2203      	movs	r2, #3
 800533e:	21a2      	movs	r1, #162	@ 0xa2
 8005340:	f7fd f8b2 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005344:	9904      	ldr	r1, [sp, #16]
 8005346:	4628      	mov	r0, r5
 8005348:	f00b f9e0 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2_1.setXY(100, 44);
 800534c:	222c      	movs	r2, #44	@ 0x2c
 800534e:	4638      	mov	r0, r7
 8005350:	2164      	movs	r1, #100	@ 0x64
 8005352:	f7fd f8a9 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005356:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800535a:	f8c4 3470 	str.w	r3, [r4, #1136]	@ 0x470
        boundingArea = calculateBoundingArea();
 800535e:	4639      	mov	r1, r7
 8005360:	4650      	mov	r0, sl
        linespace = space;
 8005362:	f8a4 6474 	strh.w	r6, [r4, #1140]	@ 0x474
        boundingArea = calculateBoundingArea();
 8005366:	f00e f9eb 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800536a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800536e:	f204 437c 	addw	r3, r4, #1148	@ 0x47c
 8005372:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005376:	2312      	movs	r3, #18
    textArea2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OG6A));
 8005378:	a912      	add	r1, sp, #72	@ 0x48
 800537a:	4638      	mov	r0, r7
 800537c:	f8ad 304c 	strh.w	r3, [sp, #76]	@ 0x4c
 8005380:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
 8005384:	f00e fc76 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005388:	4639      	mov	r1, r7
 800538a:	4628      	mov	r0, r5
 800538c:	f00b f9be 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile3x31.setXY(0, 80);
 8005390:	9805      	ldr	r0, [sp, #20]
 8005392:	2250      	movs	r2, #80	@ 0x50
 8005394:	4631      	mov	r1, r6
 8005396:	f7fd f887 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800539a:	9905      	ldr	r1, [sp, #20]
 800539c:	4628      	mov	r0, r5
 800539e:	f00b f9b5 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile3x32.setXY(80, 80);
 80053a2:	2250      	movs	r2, #80	@ 0x50
 80053a4:	4611      	mov	r1, r2
 80053a6:	9806      	ldr	r0, [sp, #24]
 80053a8:	f7fd f87e 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80053ac:	9906      	ldr	r1, [sp, #24]
 80053ae:	4628      	mov	r0, r5
 80053b0:	f00b f9ac 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile3x33.setXY(160, 80);
 80053b4:	9807      	ldr	r0, [sp, #28]
 80053b6:	2250      	movs	r2, #80	@ 0x50
 80053b8:	21a0      	movs	r1, #160	@ 0xa0
 80053ba:	f7fd f875 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80053be:	9907      	ldr	r1, [sp, #28]
 80053c0:	4628      	mov	r0, r5
 80053c2:	f00b f9a3 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile3x34.setXY(0, 160);
 80053c6:	9808      	ldr	r0, [sp, #32]
 80053c8:	22a0      	movs	r2, #160	@ 0xa0
 80053ca:	4631      	mov	r1, r6
 80053cc:	f7fd f86c 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80053d0:	9908      	ldr	r1, [sp, #32]
 80053d2:	4628      	mov	r0, r5
 80053d4:	f00b f99a 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile3x35.setXY(0, 240);
 80053d8:	464a      	mov	r2, r9
 80053da:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80053dc:	4631      	mov	r1, r6
 80053de:	f7fd f863 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80053e2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80053e4:	4628      	mov	r0, r5
 80053e6:	f00b f991 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile3x36.setXY(160, 160);
 80053ea:	22a0      	movs	r2, #160	@ 0xa0
 80053ec:	4611      	mov	r1, r2
 80053ee:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80053f0:	f7fd f85a 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80053f4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80053f6:	4628      	mov	r0, r5
 80053f8:	f00b f988 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile3x37.setXY(80, 240);
 80053fc:	464a      	mov	r2, r9
 80053fe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8005400:	2150      	movs	r1, #80	@ 0x50
 8005402:	f7fd f851 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005406:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8005408:	4628      	mov	r0, r5
 800540a:	f00b f97f 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile3x38.setXY(80, 160);
 800540e:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8005410:	22a0      	movs	r2, #160	@ 0xa0
 8005412:	2150      	movs	r1, #80	@ 0x50
 8005414:	f7fd f848 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005418:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800541a:	4628      	mov	r0, r5
 800541c:	f00b f976 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile3x39.setXY(160, 240);
 8005420:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8005422:	464a      	mov	r2, r9
 8005424:	21a0      	movs	r1, #160	@ 0xa0
 8005426:	f7fd f83f 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800542a:	4628      	mov	r0, r5
 800542c:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800542e:	f00b f96d 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005432:	4620      	mov	r0, r4
 8005434:	b015      	add	sp, #84	@ 0x54
 8005436:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800543a:	bf00      	nop
 800543c:	0802d55c 	.word	0x0802d55c
 8005440:	0802d544 	.word	0x0802d544
 8005444:	08005071 	.word	0x08005071
 8005448:	ff006699 	.word	0xff006699
 800544c:	ff776e65 	.word	0xff776e65
 8005450:	ffe36e1b 	.word	0xffe36e1b
 8005454:	0802d030 	.word	0x0802d030

08005458 <_ZN8touchgfx8CallbackI17Screen5x5ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005458:	4770      	bx	lr

0800545a <_ZN8touchgfx8CallbackI17Screen5x5ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800545a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800545c:	68c2      	ldr	r2, [r0, #12]
 800545e:	6844      	ldr	r4, [r0, #4]
 8005460:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005462:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005464:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005468:	07d2      	lsls	r2, r2, #31
 800546a:	bf48      	it	mi
 800546c:	5962      	ldrmi	r2, [r4, r5]
 800546e:	689b      	ldr	r3, [r3, #8]
    }
 8005470:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005472:	bf48      	it	mi
 8005474:	58d3      	ldrmi	r3, [r2, r3]
 8005476:	4718      	bx	r3

08005478 <_ZNK8touchgfx8CallbackI17Screen5x5ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8005478:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 800547a:	6840      	ldr	r0, [r0, #4]
 800547c:	b130      	cbz	r0, 800548c <_ZNK8touchgfx8CallbackI17Screen5x5ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 800547e:	689a      	ldr	r2, [r3, #8]
 8005480:	b91a      	cbnz	r2, 800548a <_ZNK8touchgfx8CallbackI17Screen5x5ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8005482:	68d8      	ldr	r0, [r3, #12]
 8005484:	f000 0001 	and.w	r0, r0, #1
 8005488:	4770      	bx	lr
 800548a:	2001      	movs	r0, #1
    }
 800548c:	4770      	bx	lr

0800548e <_ZN8touchgfx8CallbackI17Screen5x5ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800548e:	b510      	push	{r4, lr}
 8005490:	2110      	movs	r1, #16
 8005492:	4604      	mov	r4, r0
 8005494:	f024 f93e 	bl	8029714 <_ZdlPvj>
 8005498:	4620      	mov	r0, r4
 800549a:	bd10      	pop	{r4, pc}

0800549c <_ZN17Screen5x5ViewBase11setupScreenEv>:
{

}

void Screen5x5ViewBase::setupScreen()
{
 800549c:	b510      	push	{r4, lr}
 800549e:	4604      	mov	r4, r0
    tile5x51.initialize();
 80054a0:	3098      	adds	r0, #152	@ 0x98
 80054a2:	f006 f958 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x52.initialize();
 80054a6:	f504 70b2 	add.w	r0, r4, #356	@ 0x164
 80054aa:	f006 f954 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x53.initialize();
 80054ae:	f504 700c 	add.w	r0, r4, #560	@ 0x230
 80054b2:	f006 f950 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x54.initialize();
 80054b6:	f504 703f 	add.w	r0, r4, #764	@ 0x2fc
 80054ba:	f006 f94c 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x55.initialize();
 80054be:	f504 7072 	add.w	r0, r4, #968	@ 0x3c8
 80054c2:	f006 f948 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x56.initialize();
 80054c6:	f204 4094 	addw	r0, r4, #1172	@ 0x494
 80054ca:	f006 f944 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x57.initialize();
 80054ce:	f504 60ac 	add.w	r0, r4, #1376	@ 0x560
 80054d2:	f006 f940 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x58.initialize();
 80054d6:	f204 602c 	addw	r0, r4, #1580	@ 0x62c
 80054da:	f006 f93c 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x59.initialize();
 80054de:	f504 60df 	add.w	r0, r4, #1784	@ 0x6f8
 80054e2:	f006 f938 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x510.initialize();
 80054e6:	f204 70c4 	addw	r0, r4, #1988	@ 0x7c4
 80054ea:	f006 f934 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x511.initialize();
 80054ee:	f504 6009 	add.w	r0, r4, #2192	@ 0x890
 80054f2:	f006 f930 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x512.initialize();
 80054f6:	f604 105c 	addw	r0, r4, #2396	@ 0x95c
 80054fa:	f006 f92c 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x513.initialize();
 80054fe:	f604 2028 	addw	r0, r4, #2600	@ 0xa28
 8005502:	f006 f928 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x514.initialize();
 8005506:	f604 20f4 	addw	r0, r4, #2804	@ 0xaf4
 800550a:	f006 f924 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x515.initialize();
 800550e:	f504 603c 	add.w	r0, r4, #3008	@ 0xbc0
 8005512:	f006 f920 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x516.initialize();
 8005516:	f604 408c 	addw	r0, r4, #3212	@ 0xc8c
 800551a:	f006 f91c 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x517.initialize();
 800551e:	f604 5058 	addw	r0, r4, #3416	@ 0xd58
 8005522:	f006 f918 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x518.initialize();
 8005526:	f604 6024 	addw	r0, r4, #3620	@ 0xe24
 800552a:	f006 f914 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x519.initialize();
 800552e:	f504 606f 	add.w	r0, r4, #3824	@ 0xef0
 8005532:	f006 f910 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x520.initialize();
 8005536:	f604 70bc 	addw	r0, r4, #4028	@ 0xfbc
 800553a:	f006 f90c 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x521.initialize();
 800553e:	f504 5084 	add.w	r0, r4, #4224	@ 0x1080
 8005542:	3008      	adds	r0, #8
 8005544:	f006 f907 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x522.initialize();
 8005548:	f504 508a 	add.w	r0, r4, #4416	@ 0x1140
 800554c:	3014      	adds	r0, #20
 800554e:	f006 f902 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x523.initialize();
 8005552:	f504 5091 	add.w	r0, r4, #4640	@ 0x1220
 8005556:	f006 f8fe 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x524.initialize();
 800555a:	f504 5097 	add.w	r0, r4, #4832	@ 0x12e0
 800555e:	300c      	adds	r0, #12
 8005560:	f006 f8f9 	bl	800b756 <_ZN7Tile5x510initializeEv>
    tile5x525.initialize();
 8005564:	f504 509d 	add.w	r0, r4, #5024	@ 0x13a0
 8005568:	3018      	adds	r0, #24
 800556a:	f006 f8f4 	bl	800b756 <_ZN7Tile5x510initializeEv>
    scoreContainer.initialize();
 800556e:	f504 50b2 	add.w	r0, r4, #5696	@ 0x1640
 8005572:	300c      	adds	r0, #12
 8005574:	f003 fa00 	bl	8008978 <_ZN5Score10initializeEv>
    bestContainer.initialize();
 8005578:	f504 50bb 	add.w	r0, r4, #5984	@ 0x1760
}
 800557c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bestContainer.initialize();
 8005580:	f002 bafc 	b.w	8007b7c <_ZN4Best10initializeEv>

08005584 <_ZN17Screen5x5ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen5x5ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8005584:	b538      	push	{r3, r4, r5, lr}
    if (&src == &flexButton1)
 8005586:	f500 53a4 	add.w	r3, r0, #5248	@ 0x1480
 800558a:	3304      	adds	r3, #4
 800558c:	4299      	cmp	r1, r3
{
 800558e:	4604      	mov	r4, r0
 8005590:	460d      	mov	r5, r1
    if (&src == &flexButton1)
 8005592:	d103      	bne.n	800559c <_ZN17Screen5x5ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x18>
    virtual ~Screen5x5ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005594:	f011 fa02 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When flexButton1 clicked change screen to Chosing_mode
        //Go to Chosing_mode with screen transition towards East
        application().gotoChosing_modeScreenCoverTransitionEast();
 8005598:	f7fd fd6e 	bl	8003078 <_ZN23FrontendApplicationBase41gotoChosing_modeScreenCoverTransitionEastEv>
    }
    if (&src == &flexButton2)
 800559c:	f504 50a7 	add.w	r0, r4, #5344	@ 0x14e0
 80055a0:	301c      	adds	r0, #28
 80055a2:	4285      	cmp	r5, r0
 80055a4:	d105      	bne.n	80055b2 <_ZN17Screen5x5ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
 80055a6:	f011 f9f9 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When flexButton2 clicked change screen to SelectedGameDesign
        //Go to SelectedGameDesign with screen transition towards East
        application().gotoSelectedGameDesignScreenCoverTransitionEast();
    }
}
 80055aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoSelectedGameDesignScreenCoverTransitionEast();
 80055ae:	f7fd be03 	b.w	80031b8 <_ZN23FrontendApplicationBase47gotoSelectedGameDesignScreenCoverTransitionEastEv>
}
 80055b2:	bd38      	pop	{r3, r4, r5, pc}

080055b4 <_ZN7Tile5x5D1Ev>:
#include <touchgfx/Application.hpp>
class Tile5x5 : public Tile5x5Base
{
public:
    Tile5x5();
    virtual ~Tile5x5() {}
 80055b4:	b510      	push	{r4, lr}
 80055b6:	4b03      	ldr	r3, [pc, #12]	@ (80055c4 <_ZN7Tile5x5D1Ev+0x10>)
 80055b8:	6003      	str	r3, [r0, #0]
 80055ba:	4604      	mov	r4, r0
 80055bc:	f001 ff4c 	bl	8007458 <_ZN11Tile5x5BaseD1Ev>
 80055c0:	4620      	mov	r0, r4
 80055c2:	bd10      	pop	{r4, pc}
 80055c4:	0802df2c 	.word	0x0802df2c

080055c8 <_ZN17Screen5x5ViewBaseD1Ev>:
Screen5x5ViewBase::~Screen5x5ViewBase()
 80055c8:	b538      	push	{r3, r4, r5, lr}
 80055ca:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
 80055ce:	4b3e      	ldr	r3, [pc, #248]	@ (80056c8 <_ZN17Screen5x5ViewBaseD1Ev+0x100>)
 80055d0:	6003      	str	r3, [r0, #0]
 80055d2:	4b3e      	ldr	r3, [pc, #248]	@ (80056cc <_ZN17Screen5x5ViewBaseD1Ev+0x104>)
 80055d4:	f8c5 3760 	str.w	r3, [r5, #1888]	@ 0x760
 80055d8:	4604      	mov	r4, r0
 80055da:	f500 50bb 	add.w	r0, r0, #5984	@ 0x1760
 80055de:	f7fc fef7 	bl	80023d0 <_ZN8BestBaseD1Ev>
 80055e2:	4b3b      	ldr	r3, [pc, #236]	@ (80056d0 <_ZN17Screen5x5ViewBaseD1Ev+0x108>)
 80055e4:	f8c5 364c 	str.w	r3, [r5, #1612]	@ 0x64c
 80055e8:	f504 50b2 	add.w	r0, r4, #5696	@ 0x1640
 80055ec:	300c      	adds	r0, #12
 80055ee:	f7ff fc1b 	bl	8004e28 <_ZN9ScoreBaseD1Ev>
}
 80055f2:	f504 509d 	add.w	r0, r4, #5024	@ 0x13a0
 80055f6:	3018      	adds	r0, #24
 80055f8:	f7ff ffdc 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 80055fc:	f504 5097 	add.w	r0, r4, #4832	@ 0x12e0
 8005600:	300c      	adds	r0, #12
 8005602:	f7ff ffd7 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 8005606:	f504 5091 	add.w	r0, r4, #4640	@ 0x1220
 800560a:	f7ff ffd3 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 800560e:	f504 508a 	add.w	r0, r4, #4416	@ 0x1140
 8005612:	3014      	adds	r0, #20
 8005614:	f7ff ffce 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 8005618:	f504 5084 	add.w	r0, r4, #4224	@ 0x1080
 800561c:	3008      	adds	r0, #8
 800561e:	f7ff ffc9 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 8005622:	f604 70bc 	addw	r0, r4, #4028	@ 0xfbc
 8005626:	f7ff ffc5 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 800562a:	f504 606f 	add.w	r0, r4, #3824	@ 0xef0
 800562e:	f7ff ffc1 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 8005632:	f604 6024 	addw	r0, r4, #3620	@ 0xe24
 8005636:	f7ff ffbd 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 800563a:	f604 5058 	addw	r0, r4, #3416	@ 0xd58
 800563e:	f7ff ffb9 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 8005642:	f604 408c 	addw	r0, r4, #3212	@ 0xc8c
 8005646:	f7ff ffb5 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 800564a:	f504 603c 	add.w	r0, r4, #3008	@ 0xbc0
 800564e:	f7ff ffb1 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 8005652:	f604 20f4 	addw	r0, r4, #2804	@ 0xaf4
 8005656:	f7ff ffad 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 800565a:	f604 2028 	addw	r0, r4, #2600	@ 0xa28
 800565e:	f7ff ffa9 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 8005662:	f604 105c 	addw	r0, r4, #2396	@ 0x95c
 8005666:	f7ff ffa5 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 800566a:	f504 6009 	add.w	r0, r4, #2192	@ 0x890
 800566e:	f7ff ffa1 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 8005672:	f204 70c4 	addw	r0, r4, #1988	@ 0x7c4
 8005676:	f7ff ff9d 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 800567a:	f504 60df 	add.w	r0, r4, #1784	@ 0x6f8
 800567e:	f7ff ff99 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 8005682:	f204 602c 	addw	r0, r4, #1580	@ 0x62c
 8005686:	f7ff ff95 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 800568a:	f504 60ac 	add.w	r0, r4, #1376	@ 0x560
 800568e:	f7ff ff91 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 8005692:	f204 4094 	addw	r0, r4, #1172	@ 0x494
 8005696:	f7ff ff8d 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 800569a:	f504 7072 	add.w	r0, r4, #968	@ 0x3c8
 800569e:	f7ff ff89 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 80056a2:	f504 703f 	add.w	r0, r4, #764	@ 0x2fc
 80056a6:	f7ff ff85 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 80056aa:	f504 700c 	add.w	r0, r4, #560	@ 0x230
 80056ae:	f7ff ff81 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 80056b2:	f504 70b2 	add.w	r0, r4, #356	@ 0x164
 80056b6:	f7ff ff7d 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 80056ba:	f104 0098 	add.w	r0, r4, #152	@ 0x98
 80056be:	f7ff ff79 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 80056c2:	4620      	mov	r0, r4
 80056c4:	bd38      	pop	{r3, r4, r5, pc}
 80056c6:	bf00      	nop
 80056c8:	0802d5a8 	.word	0x0802d5a8
 80056cc:	0802d9a4 	.word	0x0802d9a4
 80056d0:	0802dba4 	.word	0x0802dba4

080056d4 <_ZN17Screen5x5ViewBaseD0Ev>:
Screen5x5ViewBase::~Screen5x5ViewBase()
 80056d4:	b510      	push	{r4, lr}
 80056d6:	4604      	mov	r4, r0
}
 80056d8:	f7ff ff76 	bl	80055c8 <_ZN17Screen5x5ViewBaseD1Ev>
 80056dc:	4620      	mov	r0, r4
 80056de:	f641 0184 	movw	r1, #6276	@ 0x1884
 80056e2:	f024 f817 	bl	8029714 <_ZdlPvj>
 80056e6:	4620      	mov	r0, r4
 80056e8:	bd10      	pop	{r4, pc}

080056ea <_ZN7Tile5x5D0Ev>:
 80056ea:	b510      	push	{r4, lr}
 80056ec:	4604      	mov	r4, r0
 80056ee:	f7ff ff61 	bl	80055b4 <_ZN7Tile5x5D1Ev>
 80056f2:	4620      	mov	r0, r4
 80056f4:	21cc      	movs	r1, #204	@ 0xcc
 80056f6:	f024 f80d 	bl	8029714 <_ZdlPvj>
 80056fa:	4620      	mov	r0, r4
 80056fc:	bd10      	pop	{r4, pc}
	...

08005700 <_ZN17Screen5x5ViewBaseC1Ev>:
Screen5x5ViewBase::Screen5x5ViewBase() :
 8005700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005704:	4604      	mov	r4, r0
 8005706:	b0a5      	sub	sp, #148	@ 0x94
    flexButtonCallback(this, &Screen5x5ViewBase::flexButtonCallbackHandler)
 8005708:	46a0      	mov	r8, r4
 800570a:	2700      	movs	r7, #0
 800570c:	f013 f9bc 	bl	8018a88 <_ZN8touchgfx6ScreenC1Ev>
 8005710:	4bd7      	ldr	r3, [pc, #860]	@ (8005a70 <_ZN17Screen5x5ViewBaseC1Ev+0x370>)
 8005712:	63e7      	str	r7, [r4, #60]	@ 0x3c
 8005714:	f848 3b40 	str.w	r3, [r8], #64
 8005718:	4640      	mov	r0, r8
 800571a:	f7fd f8a3 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 800571e:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8005722:	4618      	mov	r0, r3
 8005724:	9307      	str	r3, [sp, #28]
 8005726:	f7fd f89d 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 800572a:	f104 0398 	add.w	r3, r4, #152	@ 0x98
 800572e:	4618      	mov	r0, r3
 8005730:	9308      	str	r3, [sp, #32]
 8005732:	f005 ff67 	bl	800b604 <_ZN7Tile5x5C1Ev>
 8005736:	f504 73b2 	add.w	r3, r4, #356	@ 0x164
 800573a:	4618      	mov	r0, r3
 800573c:	9309      	str	r3, [sp, #36]	@ 0x24
 800573e:	f005 ff61 	bl	800b604 <_ZN7Tile5x5C1Ev>
 8005742:	f504 730c 	add.w	r3, r4, #560	@ 0x230
 8005746:	4618      	mov	r0, r3
 8005748:	930a      	str	r3, [sp, #40]	@ 0x28
 800574a:	f005 ff5b 	bl	800b604 <_ZN7Tile5x5C1Ev>
 800574e:	f504 733f 	add.w	r3, r4, #764	@ 0x2fc
 8005752:	4618      	mov	r0, r3
 8005754:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005756:	f005 ff55 	bl	800b604 <_ZN7Tile5x5C1Ev>
 800575a:	f504 7372 	add.w	r3, r4, #968	@ 0x3c8
 800575e:	4618      	mov	r0, r3
 8005760:	930c      	str	r3, [sp, #48]	@ 0x30
 8005762:	f005 ff4f 	bl	800b604 <_ZN7Tile5x5C1Ev>
 8005766:	f204 4394 	addw	r3, r4, #1172	@ 0x494
 800576a:	4618      	mov	r0, r3
 800576c:	930d      	str	r3, [sp, #52]	@ 0x34
 800576e:	f005 ff49 	bl	800b604 <_ZN7Tile5x5C1Ev>
 8005772:	f504 63ac 	add.w	r3, r4, #1376	@ 0x560
 8005776:	4618      	mov	r0, r3
 8005778:	930e      	str	r3, [sp, #56]	@ 0x38
 800577a:	f005 ff43 	bl	800b604 <_ZN7Tile5x5C1Ev>
 800577e:	f204 632c 	addw	r3, r4, #1580	@ 0x62c
 8005782:	4618      	mov	r0, r3
 8005784:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005786:	f005 ff3d 	bl	800b604 <_ZN7Tile5x5C1Ev>
 800578a:	f504 63df 	add.w	r3, r4, #1784	@ 0x6f8
 800578e:	4618      	mov	r0, r3
 8005790:	9310      	str	r3, [sp, #64]	@ 0x40
 8005792:	f005 ff37 	bl	800b604 <_ZN7Tile5x5C1Ev>
 8005796:	f204 73c4 	addw	r3, r4, #1988	@ 0x7c4
 800579a:	4618      	mov	r0, r3
 800579c:	9311      	str	r3, [sp, #68]	@ 0x44
 800579e:	f005 ff31 	bl	800b604 <_ZN7Tile5x5C1Ev>
 80057a2:	f504 6309 	add.w	r3, r4, #2192	@ 0x890
 80057a6:	4618      	mov	r0, r3
 80057a8:	9312      	str	r3, [sp, #72]	@ 0x48
 80057aa:	f005 ff2b 	bl	800b604 <_ZN7Tile5x5C1Ev>
 80057ae:	f604 135c 	addw	r3, r4, #2396	@ 0x95c
 80057b2:	4618      	mov	r0, r3
 80057b4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80057b6:	f005 ff25 	bl	800b604 <_ZN7Tile5x5C1Ev>
 80057ba:	f604 2328 	addw	r3, r4, #2600	@ 0xa28
 80057be:	4618      	mov	r0, r3
 80057c0:	9314      	str	r3, [sp, #80]	@ 0x50
 80057c2:	f005 ff1f 	bl	800b604 <_ZN7Tile5x5C1Ev>
 80057c6:	f604 23f4 	addw	r3, r4, #2804	@ 0xaf4
 80057ca:	4618      	mov	r0, r3
 80057cc:	9315      	str	r3, [sp, #84]	@ 0x54
 80057ce:	f005 ff19 	bl	800b604 <_ZN7Tile5x5C1Ev>
 80057d2:	f504 633c 	add.w	r3, r4, #3008	@ 0xbc0
 80057d6:	4618      	mov	r0, r3
 80057d8:	9316      	str	r3, [sp, #88]	@ 0x58
 80057da:	f005 ff13 	bl	800b604 <_ZN7Tile5x5C1Ev>
 80057de:	f604 438c 	addw	r3, r4, #3212	@ 0xc8c
 80057e2:	4618      	mov	r0, r3
 80057e4:	9317      	str	r3, [sp, #92]	@ 0x5c
 80057e6:	f005 ff0d 	bl	800b604 <_ZN7Tile5x5C1Ev>
 80057ea:	f604 5358 	addw	r3, r4, #3416	@ 0xd58
 80057ee:	4618      	mov	r0, r3
 80057f0:	9318      	str	r3, [sp, #96]	@ 0x60
 80057f2:	f005 ff07 	bl	800b604 <_ZN7Tile5x5C1Ev>
 80057f6:	f604 6324 	addw	r3, r4, #3620	@ 0xe24
 80057fa:	4618      	mov	r0, r3
 80057fc:	9319      	str	r3, [sp, #100]	@ 0x64
 80057fe:	f005 ff01 	bl	800b604 <_ZN7Tile5x5C1Ev>
 8005802:	f504 636f 	add.w	r3, r4, #3824	@ 0xef0
 8005806:	4618      	mov	r0, r3
 8005808:	931a      	str	r3, [sp, #104]	@ 0x68
 800580a:	f005 fefb 	bl	800b604 <_ZN7Tile5x5C1Ev>
 800580e:	f604 73bc 	addw	r3, r4, #4028	@ 0xfbc
 8005812:	4618      	mov	r0, r3
 8005814:	931b      	str	r3, [sp, #108]	@ 0x6c
 8005816:	f005 fef5 	bl	800b604 <_ZN7Tile5x5C1Ev>
 800581a:	f504 5384 	add.w	r3, r4, #4224	@ 0x1080
 800581e:	3308      	adds	r3, #8
 8005820:	4618      	mov	r0, r3
 8005822:	9302      	str	r3, [sp, #8]
 8005824:	f005 feee 	bl	800b604 <_ZN7Tile5x5C1Ev>
 8005828:	f504 538a 	add.w	r3, r4, #4416	@ 0x1140
 800582c:	3314      	adds	r3, #20
 800582e:	4618      	mov	r0, r3
 8005830:	9303      	str	r3, [sp, #12]
 8005832:	f005 fee7 	bl	800b604 <_ZN7Tile5x5C1Ev>
 8005836:	f504 5391 	add.w	r3, r4, #4640	@ 0x1220
 800583a:	4618      	mov	r0, r3
 800583c:	931c      	str	r3, [sp, #112]	@ 0x70
 800583e:	f005 fee1 	bl	800b604 <_ZN7Tile5x5C1Ev>
 8005842:	f504 5397 	add.w	r3, r4, #4832	@ 0x12e0
 8005846:	330c      	adds	r3, #12
 8005848:	4618      	mov	r0, r3
 800584a:	9304      	str	r3, [sp, #16]
 800584c:	f005 feda 	bl	800b604 <_ZN7Tile5x5C1Ev>
 8005850:	f504 539d 	add.w	r3, r4, #5024	@ 0x13a0
 8005854:	3318      	adds	r3, #24
 8005856:	4618      	mov	r0, r3
 8005858:	9305      	str	r3, [sp, #20]
 800585a:	f504 59a7 	add.w	r9, r4, #5344	@ 0x14e0
 800585e:	f005 fed1 	bl	800b604 <_ZN7Tile5x5C1Ev>
 8005862:	f504 50a4 	add.w	r0, r4, #5248	@ 0x1480
 8005866:	f109 091c 	add.w	r9, r9, #28
 800586a:	3004      	adds	r0, #4
 800586c:	f7fd f80e 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8005870:	4648      	mov	r0, r9
 8005872:	f7fd f80b 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8005876:	f504 5aad 	add.w	sl, r4, #5536	@ 0x15a0
 800587a:	f504 50ab 	add.w	r0, r4, #5472	@ 0x1560
 800587e:	f10a 0a1c 	add.w	sl, sl, #28
 8005882:	f504 5bb0 	add.w	fp, r4, #5632	@ 0x1600
 8005886:	3014      	adds	r0, #20
 8005888:	f10b 0b04 	add.w	fp, fp, #4
 800588c:	f7fc fe1a 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005890:	4650      	mov	r0, sl
 8005892:	f7fc fe17 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005896:	4658      	mov	r0, fp
 8005898:	f7fc fe14 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 800589c:	f504 53b2 	add.w	r3, r4, #5696	@ 0x1640
 80058a0:	330c      	adds	r3, #12
 80058a2:	4618      	mov	r0, r3
 80058a4:	9306      	str	r3, [sp, #24]
 80058a6:	f003 f84b 	bl	8008940 <_ZN5ScoreC1Ev>
 80058aa:	f504 53bb 	add.w	r3, r4, #5984	@ 0x1760
        : pobject(pObject), pmemfun(pmemfun_1)
 80058ae:	f504 5680 	add.w	r6, r4, #4096	@ 0x1000
 80058b2:	4618      	mov	r0, r3
 80058b4:	931d      	str	r3, [sp, #116]	@ 0x74
 80058b6:	f002 f945 	bl	8007b44 <_ZN4BestC1Ev>
 80058ba:	4b6e      	ldr	r3, [pc, #440]	@ (8005a74 <_ZN17Screen5x5ViewBaseC1Ev+0x374>)
 80058bc:	f8c6 3874 	str.w	r3, [r6, #2164]	@ 0x874
 80058c0:	4b6d      	ldr	r3, [pc, #436]	@ (8005a78 <_ZN17Screen5x5ViewBaseC1Ev+0x378>)
 80058c2:	f8c6 387c 	str.w	r3, [r6, #2172]	@ 0x87c
    __background.setPosition(0, 0, 240, 320);
 80058c6:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80058ca:	463a      	mov	r2, r7
 80058cc:	f8c6 4878 	str.w	r4, [r6, #2168]	@ 0x878
 80058d0:	f8c6 7880 	str.w	r7, [r6, #2176]	@ 0x880
 80058d4:	4639      	mov	r1, r7
 80058d6:	9300      	str	r3, [sp, #0]
 80058d8:	4640      	mov	r0, r8
 80058da:	23f0      	movs	r3, #240	@ 0xf0
 80058dc:	1d25      	adds	r5, r4, #4
 80058de:	f7fc ffad 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80058e2:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80058e6:	66a3      	str	r3, [r4, #104]	@ 0x68
 80058e8:	4641      	mov	r1, r8
 80058ea:	4628      	mov	r0, r5
 80058ec:	f00a ff0e 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(0, 80, 240, 240);
 80058f0:	23f0      	movs	r3, #240	@ 0xf0
 80058f2:	9807      	ldr	r0, [sp, #28]
 80058f4:	9300      	str	r3, [sp, #0]
 80058f6:	2250      	movs	r2, #80	@ 0x50
 80058f8:	4639      	mov	r1, r7
 80058fa:	f7fc ff9f 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80058fe:	4b5f      	ldr	r3, [pc, #380]	@ (8005a7c <_ZN17Screen5x5ViewBaseC1Ev+0x37c>)
 8005900:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8005904:	9907      	ldr	r1, [sp, #28]
 8005906:	4628      	mov	r0, r5
 8005908:	f00a ff00 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x51.setXY(0, 80);
 800590c:	9808      	ldr	r0, [sp, #32]
 800590e:	2250      	movs	r2, #80	@ 0x50
 8005910:	4639      	mov	r1, r7
 8005912:	f7fc fdc9 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005916:	9908      	ldr	r1, [sp, #32]
 8005918:	4628      	mov	r0, r5
 800591a:	f00a fef7 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x52.setXY(48, 80);
 800591e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005920:	2250      	movs	r2, #80	@ 0x50
 8005922:	2130      	movs	r1, #48	@ 0x30
 8005924:	f7fc fdc0 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005928:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800592a:	4628      	mov	r0, r5
 800592c:	f00a feee 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x53.setXY(96, 80);
 8005930:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8005932:	2250      	movs	r2, #80	@ 0x50
 8005934:	2160      	movs	r1, #96	@ 0x60
 8005936:	f7fc fdb7 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800593a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800593c:	4628      	mov	r0, r5
 800593e:	f00a fee5 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x54.setXY(144, 80);
 8005942:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8005944:	2250      	movs	r2, #80	@ 0x50
 8005946:	2190      	movs	r1, #144	@ 0x90
 8005948:	f7fc fdae 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800594c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800594e:	4628      	mov	r0, r5
 8005950:	f00a fedc 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x55.setXY(192, 80);
 8005954:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8005956:	2250      	movs	r2, #80	@ 0x50
 8005958:	21c0      	movs	r1, #192	@ 0xc0
 800595a:	f7fc fda5 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800595e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8005960:	4628      	mov	r0, r5
 8005962:	f00a fed3 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x56.setXY(0, 128);
 8005966:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8005968:	2280      	movs	r2, #128	@ 0x80
 800596a:	4639      	mov	r1, r7
 800596c:	f7fc fd9c 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005970:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8005972:	4628      	mov	r0, r5
 8005974:	f00a feca 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x57.setXY(48, 128);
 8005978:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800597a:	2280      	movs	r2, #128	@ 0x80
 800597c:	2130      	movs	r1, #48	@ 0x30
 800597e:	f7fc fd93 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005982:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8005984:	4628      	mov	r0, r5
 8005986:	f00a fec1 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x58.setXY(96, 128);
 800598a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 800598c:	2280      	movs	r2, #128	@ 0x80
 800598e:	2160      	movs	r1, #96	@ 0x60
 8005990:	f7fc fd8a 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005994:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8005996:	4628      	mov	r0, r5
 8005998:	f00a feb8 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x59.setXY(144, 128);
 800599c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800599e:	2280      	movs	r2, #128	@ 0x80
 80059a0:	2190      	movs	r1, #144	@ 0x90
 80059a2:	f7fc fd81 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80059a6:	9910      	ldr	r1, [sp, #64]	@ 0x40
 80059a8:	4628      	mov	r0, r5
 80059aa:	f00a feaf 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x510.setXY(192, 128);
 80059ae:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80059b0:	2280      	movs	r2, #128	@ 0x80
 80059b2:	21c0      	movs	r1, #192	@ 0xc0
 80059b4:	f7fc fd78 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80059b8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80059ba:	4628      	mov	r0, r5
 80059bc:	f00a fea6 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x511.setXY(0, 176);
 80059c0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80059c2:	22b0      	movs	r2, #176	@ 0xb0
 80059c4:	4639      	mov	r1, r7
 80059c6:	f7fc fd6f 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80059ca:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80059cc:	4628      	mov	r0, r5
 80059ce:	f00a fe9d 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x512.setXY(48, 176);
 80059d2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80059d4:	22b0      	movs	r2, #176	@ 0xb0
 80059d6:	2130      	movs	r1, #48	@ 0x30
 80059d8:	f7fc fd66 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80059dc:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80059de:	4628      	mov	r0, r5
 80059e0:	f00a fe94 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x513.setXY(96, 176);
 80059e4:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80059e6:	22b0      	movs	r2, #176	@ 0xb0
 80059e8:	2160      	movs	r1, #96	@ 0x60
 80059ea:	f7fc fd5d 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80059ee:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80059f0:	4628      	mov	r0, r5
 80059f2:	f00a fe8b 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x514.setXY(144, 176);
 80059f6:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80059f8:	22b0      	movs	r2, #176	@ 0xb0
 80059fa:	2190      	movs	r1, #144	@ 0x90
 80059fc:	f7fc fd54 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005a00:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8005a02:	4628      	mov	r0, r5
 8005a04:	f00a fe82 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x515.setXY(192, 176);
 8005a08:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8005a0a:	22b0      	movs	r2, #176	@ 0xb0
 8005a0c:	21c0      	movs	r1, #192	@ 0xc0
 8005a0e:	f7fc fd4b 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005a12:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8005a14:	4628      	mov	r0, r5
 8005a16:	f00a fe79 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x516.setXY(0, 224);
 8005a1a:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8005a1c:	22e0      	movs	r2, #224	@ 0xe0
 8005a1e:	4639      	mov	r1, r7
 8005a20:	f7fc fd42 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005a24:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8005a26:	4628      	mov	r0, r5
 8005a28:	f00a fe70 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x517.setXY(48, 224);
 8005a2c:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8005a2e:	22e0      	movs	r2, #224	@ 0xe0
 8005a30:	2130      	movs	r1, #48	@ 0x30
 8005a32:	f7fc fd39 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005a36:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8005a38:	4628      	mov	r0, r5
 8005a3a:	f00a fe67 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x518.setXY(96, 224);
 8005a3e:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8005a40:	22e0      	movs	r2, #224	@ 0xe0
 8005a42:	2160      	movs	r1, #96	@ 0x60
 8005a44:	f7fc fd30 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005a48:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8005a4a:	4628      	mov	r0, r5
 8005a4c:	f00a fe5e 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x519.setXY(144, 224);
 8005a50:	981a      	ldr	r0, [sp, #104]	@ 0x68
 8005a52:	22e0      	movs	r2, #224	@ 0xe0
 8005a54:	2190      	movs	r1, #144	@ 0x90
 8005a56:	f7fc fd27 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005a5a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8005a5c:	4628      	mov	r0, r5
 8005a5e:	f00a fe55 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x520.setXY(192, 224);
 8005a62:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8005a64:	22e0      	movs	r2, #224	@ 0xe0
 8005a66:	21c0      	movs	r1, #192	@ 0xc0
 8005a68:	f7fc fd1e 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005a6c:	e008      	b.n	8005a80 <_ZN17Screen5x5ViewBaseC1Ev+0x380>
 8005a6e:	bf00      	nop
 8005a70:	0802d5a8 	.word	0x0802d5a8
 8005a74:	0802d590 	.word	0x0802d590
 8005a78:	08005585 	.word	0x08005585
 8005a7c:	ff776e65 	.word	0xff776e65
 8005a80:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8005a82:	4628      	mov	r0, r5
 8005a84:	f00a fe42 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x521.setXY(0, 272);
 8005a88:	9802      	ldr	r0, [sp, #8]
 8005a8a:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8005a8e:	4639      	mov	r1, r7
 8005a90:	f7fc fd0a 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005a94:	9902      	ldr	r1, [sp, #8]
 8005a96:	4628      	mov	r0, r5
 8005a98:	f00a fe38 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x522.setXY(48, 272);
 8005a9c:	9803      	ldr	r0, [sp, #12]
 8005a9e:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8005aa2:	2130      	movs	r1, #48	@ 0x30
 8005aa4:	f7fc fd00 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005aa8:	9903      	ldr	r1, [sp, #12]
 8005aaa:	4628      	mov	r0, r5
 8005aac:	f00a fe2e 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x523.setXY(96, 272);
 8005ab0:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8005ab2:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8005ab6:	2160      	movs	r1, #96	@ 0x60
 8005ab8:	f7fc fcf6 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005abc:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8005abe:	4628      	mov	r0, r5
 8005ac0:	f00a fe24 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x524.setXY(144, 272);
 8005ac4:	9804      	ldr	r0, [sp, #16]
 8005ac6:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8005aca:	2190      	movs	r1, #144	@ 0x90
 8005acc:	f7fc fcec 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005ad0:	9904      	ldr	r1, [sp, #16]
 8005ad2:	4628      	mov	r0, r5
 8005ad4:	f00a fe1a 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x525.setXY(192, 272);
 8005ad8:	9805      	ldr	r0, [sp, #20]
 8005ada:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8005ade:	21c0      	movs	r1, #192	@ 0xc0
 8005ae0:	f7fc fce2 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        borderBox.setPosition(x, y, width, height);
 8005ae4:	f04f 0822 	mov.w	r8, #34	@ 0x22
 8005ae8:	9905      	ldr	r1, [sp, #20]
 8005aea:	4628      	mov	r0, r5
 8005aec:	f00a fe0e 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005af0:	463a      	mov	r2, r7
 8005af2:	4639      	mov	r1, r7
 8005af4:	f8cd 8000 	str.w	r8, [sp]
 8005af8:	f109 0034 	add.w	r0, r9, #52	@ 0x34
 8005afc:	2364      	movs	r3, #100	@ 0x64
 8005afe:	f7fc fe9d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b02:	2305      	movs	r3, #5
 8005b04:	f8a6 3560 	strh.w	r3, [r6, #1376]	@ 0x560
        up = colorReleased;
 8005b08:	4b41      	ldr	r3, [pc, #260]	@ (8005c10 <_ZN17Screen5x5ViewBaseC1Ev+0x510>)
 8005b0a:	f8c6 3564 	str.w	r3, [r6, #1380]	@ 0x564
        down = colorPressed;
 8005b0e:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8005b12:	3333      	adds	r3, #51	@ 0x33
 8005b14:	f8c6 3568 	str.w	r3, [r6, #1384]	@ 0x568
        borderUp = borderColorReleased;
 8005b18:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 8005b1c:	3b66      	subs	r3, #102	@ 0x66
 8005b1e:	f8c6 356c 	str.w	r3, [r6, #1388]	@ 0x56c
        borderDown = borderColorPressed;
 8005b22:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8005b26:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8005b2a:	f8c6 3570 	str.w	r3, [r6, #1392]	@ 0x570
        handlePressedUpdated();
 8005b2e:	4648      	mov	r0, r9
 8005b30:	f7fc fde9 	bl	8002706 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton2.setAction(flexButtonCallback);
 8005b34:	f504 53c3 	add.w	r3, r4, #6240	@ 0x1860
 8005b38:	3314      	adds	r3, #20
 8005b3a:	f8c6 352c 	str.w	r3, [r6, #1324]	@ 0x52c
    flexButton2.setPosition(70, 36, 100, 34);
 8005b3e:	2224      	movs	r2, #36	@ 0x24
 8005b40:	2364      	movs	r3, #100	@ 0x64
 8005b42:	f8cd 8000 	str.w	r8, [sp]
 8005b46:	4648      	mov	r0, r9
 8005b48:	2146      	movs	r1, #70	@ 0x46
 8005b4a:	f7fc fe77 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b4e:	4649      	mov	r1, r9
 8005b50:	4628      	mov	r0, r5
 8005b52:	f00a fddb 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2_1.setXY(100, 44);
 8005b56:	222c      	movs	r2, #44	@ 0x2c
 8005b58:	4650      	mov	r0, sl
 8005b5a:	2164      	movs	r1, #100	@ 0x64
 8005b5c:	f7fc fca4 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005b60:	f10d 0878 	add.w	r8, sp, #120	@ 0x78
        color = newColor;
 8005b64:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8005b68:	f8c6 35ec 	str.w	r3, [r6, #1516]	@ 0x5ec
        boundingArea = calculateBoundingArea();
 8005b6c:	4651      	mov	r1, sl
 8005b6e:	4640      	mov	r0, r8
        linespace = space;
 8005b70:	f8a6 75f0 	strh.w	r7, [r6, #1520]	@ 0x5f0
        boundingArea = calculateBoundingArea();
 8005b74:	f00d fde4 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005b78:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005b7c:	f10a 033c 	add.w	r3, sl, #60	@ 0x3c
 8005b80:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005b84:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 8005c18 <_ZN17Screen5x5ViewBaseC1Ev+0x518>
 8005b88:	f8cd 9088 	str.w	r9, [sp, #136]	@ 0x88
 8005b8c:	2316      	movs	r3, #22
    textArea2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EOZQ));
 8005b8e:	a922      	add	r1, sp, #136	@ 0x88
 8005b90:	4650      	mov	r0, sl
 8005b92:	f8ad 308c 	strh.w	r3, [sp, #140]	@ 0x8c
 8005b96:	f00e f86d 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b9a:	4651      	mov	r1, sl
 8005b9c:	4628      	mov	r0, r5
 8005b9e:	f00a fdb5 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(12, 6);
 8005ba2:	2206      	movs	r2, #6
 8005ba4:	4658      	mov	r0, fp
 8005ba6:	210c      	movs	r1, #12
 8005ba8:	f7fc fc7e 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005bac:	4b19      	ldr	r3, [pc, #100]	@ (8005c14 <_ZN17Screen5x5ViewBaseC1Ev+0x514>)
 8005bae:	f8c6 3634 	str.w	r3, [r6, #1588]	@ 0x634
        boundingArea = calculateBoundingArea();
 8005bb2:	4659      	mov	r1, fp
 8005bb4:	4640      	mov	r0, r8
        linespace = space;
 8005bb6:	f8a6 7638 	strh.w	r7, [r6, #1592]	@ 0x638
        boundingArea = calculateBoundingArea();
 8005bba:	f00d fdc1 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005bbe:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005bc2:	f504 53b2 	add.w	r3, r4, #5696	@ 0x1640
 8005bc6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005bca:	2315      	movs	r3, #21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5LKX));
 8005bcc:	a922      	add	r1, sp, #136	@ 0x88
 8005bce:	4658      	mov	r0, fp
 8005bd0:	f8ad 308c 	strh.w	r3, [sp, #140]	@ 0x8c
 8005bd4:	f8cd 9088 	str.w	r9, [sp, #136]	@ 0x88
 8005bd8:	f00e f84c 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005bdc:	4659      	mov	r1, fp
 8005bde:	4628      	mov	r0, r5
 8005be0:	f00a fd94 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scoreContainer.setXY(123, 6);
 8005be4:	9806      	ldr	r0, [sp, #24]
 8005be6:	2206      	movs	r2, #6
 8005be8:	217b      	movs	r1, #123	@ 0x7b
 8005bea:	f7fc fc5d 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005bee:	9906      	ldr	r1, [sp, #24]
 8005bf0:	4628      	mov	r0, r5
 8005bf2:	f00a fd8b 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bestContainer.setXY(168, 6);
 8005bf6:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8005bf8:	2206      	movs	r2, #6
 8005bfa:	21a8      	movs	r1, #168	@ 0xa8
 8005bfc:	f7fc fc54 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8005c00:	4628      	mov	r0, r5
 8005c02:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8005c04:	f00a fd82 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005c08:	4620      	mov	r0, r4
 8005c0a:	b025      	add	sp, #148	@ 0x94
 8005c0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c10:	ff006699 	.word	0xff006699
 8005c14:	ffe36e1b 	.word	0xffe36e1b
 8005c18:	0802d030 	.word	0x0802d030

08005c1c <_ZN8touchgfx8CallbackI31Screen5x5_letterMergingViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005c1c:	4770      	bx	lr

08005c1e <_ZN8touchgfx8CallbackI31Screen5x5_letterMergingViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005c1e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005c20:	68c2      	ldr	r2, [r0, #12]
 8005c22:	6844      	ldr	r4, [r0, #4]
 8005c24:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005c26:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005c28:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005c2c:	07d2      	lsls	r2, r2, #31
 8005c2e:	bf48      	it	mi
 8005c30:	5962      	ldrmi	r2, [r4, r5]
 8005c32:	689b      	ldr	r3, [r3, #8]
    }
 8005c34:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005c36:	bf48      	it	mi
 8005c38:	58d3      	ldrmi	r3, [r2, r3]
 8005c3a:	4718      	bx	r3

08005c3c <_ZNK8touchgfx8CallbackI31Screen5x5_letterMergingViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8005c3c:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8005c3e:	6840      	ldr	r0, [r0, #4]
 8005c40:	b130      	cbz	r0, 8005c50 <_ZNK8touchgfx8CallbackI31Screen5x5_letterMergingViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8005c42:	689a      	ldr	r2, [r3, #8]
 8005c44:	b91a      	cbnz	r2, 8005c4e <_ZNK8touchgfx8CallbackI31Screen5x5_letterMergingViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8005c46:	68d8      	ldr	r0, [r3, #12]
 8005c48:	f000 0001 	and.w	r0, r0, #1
 8005c4c:	4770      	bx	lr
 8005c4e:	2001      	movs	r0, #1
    }
 8005c50:	4770      	bx	lr

08005c52 <_ZN8touchgfx8CallbackI31Screen5x5_letterMergingViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005c52:	b510      	push	{r4, lr}
 8005c54:	2110      	movs	r1, #16
 8005c56:	4604      	mov	r4, r0
 8005c58:	f023 fd5c 	bl	8029714 <_ZdlPvj>
 8005c5c:	4620      	mov	r0, r4
 8005c5e:	bd10      	pop	{r4, pc}

08005c60 <_ZN31Screen5x5_letterMergingViewBase11setupScreenEv>:
{

}

void Screen5x5_letterMergingViewBase::setupScreen()
{
 8005c60:	b510      	push	{r4, lr}
 8005c62:	4604      	mov	r4, r0
    tile_letter1.initialize();
 8005c64:	f500 70c2 	add.w	r0, r0, #388	@ 0x184
 8005c68:	f005 ff27 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter2.initialize();
 8005c6c:	f504 7013 	add.w	r0, r4, #588	@ 0x24c
 8005c70:	f005 ff23 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter3.initialize();
 8005c74:	f504 7045 	add.w	r0, r4, #788	@ 0x314
 8005c78:	f005 ff1f 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter4.initialize();
 8005c7c:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 8005c80:	f005 ff1b 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter5.initialize();
 8005c84:	f204 40a4 	addw	r0, r4, #1188	@ 0x4a4
 8005c88:	f005 ff17 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter6.initialize();
 8005c8c:	f204 506c 	addw	r0, r4, #1388	@ 0x56c
 8005c90:	f005 ff13 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter7.initialize();
 8005c94:	f204 6034 	addw	r0, r4, #1588	@ 0x634
 8005c98:	f005 ff0f 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter8.initialize();
 8005c9c:	f204 60fc 	addw	r0, r4, #1788	@ 0x6fc
 8005ca0:	f005 ff0b 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter9.initialize();
 8005ca4:	f204 70c4 	addw	r0, r4, #1988	@ 0x7c4
 8005ca8:	f005 ff07 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter10.initialize();
 8005cac:	f604 008c 	addw	r0, r4, #2188	@ 0x88c
 8005cb0:	f005 ff03 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter11.initialize();
 8005cb4:	f604 1054 	addw	r0, r4, #2388	@ 0x954
 8005cb8:	f005 feff 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter12.initialize();
 8005cbc:	f604 201c 	addw	r0, r4, #2588	@ 0xa1c
 8005cc0:	f005 fefb 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter13.initialize();
 8005cc4:	f604 20e4 	addw	r0, r4, #2788	@ 0xae4
 8005cc8:	f005 fef7 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter14.initialize();
 8005ccc:	f604 30ac 	addw	r0, r4, #2988	@ 0xbac
 8005cd0:	f005 fef3 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter15.initialize();
 8005cd4:	f604 4074 	addw	r0, r4, #3188	@ 0xc74
 8005cd8:	f005 feef 	bl	800baba <_ZN11Tile_letter10initializeEv>
    tile_letter16.initialize();
 8005cdc:	f604 503c 	addw	r0, r4, #3388	@ 0xd3c
 8005ce0:	f005 feeb 	bl	800baba <_ZN11Tile_letter10initializeEv>
    scoreContainer.initialize();
 8005ce4:	f604 6004 	addw	r0, r4, #3588	@ 0xe04
 8005ce8:	f002 fe46 	bl	8008978 <_ZN5Score10initializeEv>
    bestContainer.initialize();
 8005cec:	f604 7018 	addw	r0, r4, #3864	@ 0xf18
}
 8005cf0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bestContainer.initialize();
 8005cf4:	f001 bf42 	b.w	8007b7c <_ZN4Best10initializeEv>

08005cf8 <_ZN31Screen5x5_letterMergingViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen5x5_letterMergingViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1_1_1)
 8005cf8:	30e0      	adds	r0, #224	@ 0xe0
 8005cfa:	4288      	cmp	r0, r1
{
 8005cfc:	b508      	push	{r3, lr}
    if (&src == &flexButton1_1_1)
 8005cfe:	d105      	bne.n	8005d0c <_ZN31Screen5x5_letterMergingViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    virtual ~Screen5x5_letterMergingViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005d00:	f010 fe4c 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When flexButton1_1_1 clicked change screen to Chosing_mode
        //Go to Chosing_mode with screen transition towards East
        application().gotoChosing_modeScreenWipeTransitionEast();
    }
}
 8005d04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoChosing_modeScreenWipeTransitionEast();
 8005d08:	f7fd b9c6 	b.w	8003098 <_ZN23FrontendApplicationBase40gotoChosing_modeScreenWipeTransitionEastEv>
}
 8005d0c:	bd08      	pop	{r3, pc}
	...

08005d10 <_ZN11Tile_letterD1Ev>:
#include <touchgfx/Application.hpp>
class Tile_letter : public Tile_letterBase
{
public:
    Tile_letter();
    virtual ~Tile_letter() {}
 8005d10:	b510      	push	{r4, lr}
 8005d12:	4b03      	ldr	r3, [pc, #12]	@ (8005d20 <_ZN11Tile_letterD1Ev+0x10>)
 8005d14:	6003      	str	r3, [r0, #0]
 8005d16:	4604      	mov	r4, r0
 8005d18:	f001 fe0c 	bl	8007934 <_ZN15Tile_letterBaseD1Ev>
 8005d1c:	4620      	mov	r0, r4
 8005d1e:	bd10      	pop	{r4, pc}
 8005d20:	0802e07c 	.word	0x0802e07c

08005d24 <_ZN31Screen5x5_letterMergingViewBaseD1Ev>:
Screen5x5_letterMergingViewBase::~Screen5x5_letterMergingViewBase()
 8005d24:	4b29      	ldr	r3, [pc, #164]	@ (8005dcc <_ZN31Screen5x5_letterMergingViewBaseD1Ev+0xa8>)
 8005d26:	b510      	push	{r4, lr}
 8005d28:	6003      	str	r3, [r0, #0]
 8005d2a:	4b29      	ldr	r3, [pc, #164]	@ (8005dd0 <_ZN31Screen5x5_letterMergingViewBaseD1Ev+0xac>)
 8005d2c:	f8c0 3f18 	str.w	r3, [r0, #3864]	@ 0xf18
 8005d30:	4604      	mov	r4, r0
 8005d32:	f600 7018 	addw	r0, r0, #3864	@ 0xf18
 8005d36:	f7fc fb4b 	bl	80023d0 <_ZN8BestBaseD1Ev>
 8005d3a:	4b26      	ldr	r3, [pc, #152]	@ (8005dd4 <_ZN31Screen5x5_letterMergingViewBaseD1Ev+0xb0>)
 8005d3c:	f8c4 3e04 	str.w	r3, [r4, #3588]	@ 0xe04
 8005d40:	f604 6004 	addw	r0, r4, #3588	@ 0xe04
 8005d44:	f7ff f870 	bl	8004e28 <_ZN9ScoreBaseD1Ev>
}
 8005d48:	f604 503c 	addw	r0, r4, #3388	@ 0xd3c
 8005d4c:	f7ff ffe0 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005d50:	f604 4074 	addw	r0, r4, #3188	@ 0xc74
 8005d54:	f7ff ffdc 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005d58:	f604 30ac 	addw	r0, r4, #2988	@ 0xbac
 8005d5c:	f7ff ffd8 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005d60:	f604 20e4 	addw	r0, r4, #2788	@ 0xae4
 8005d64:	f7ff ffd4 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005d68:	f604 201c 	addw	r0, r4, #2588	@ 0xa1c
 8005d6c:	f7ff ffd0 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005d70:	f604 1054 	addw	r0, r4, #2388	@ 0x954
 8005d74:	f7ff ffcc 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005d78:	f604 008c 	addw	r0, r4, #2188	@ 0x88c
 8005d7c:	f7ff ffc8 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005d80:	f204 70c4 	addw	r0, r4, #1988	@ 0x7c4
 8005d84:	f7ff ffc4 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005d88:	f204 60fc 	addw	r0, r4, #1788	@ 0x6fc
 8005d8c:	f7ff ffc0 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005d90:	f204 6034 	addw	r0, r4, #1588	@ 0x634
 8005d94:	f7ff ffbc 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005d98:	f204 506c 	addw	r0, r4, #1388	@ 0x56c
 8005d9c:	f7ff ffb8 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005da0:	f204 40a4 	addw	r0, r4, #1188	@ 0x4a4
 8005da4:	f7ff ffb4 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005da8:	f504 7077 	add.w	r0, r4, #988	@ 0x3dc
 8005dac:	f7ff ffb0 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005db0:	f504 7045 	add.w	r0, r4, #788	@ 0x314
 8005db4:	f7ff ffac 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005db8:	f504 7013 	add.w	r0, r4, #588	@ 0x24c
 8005dbc:	f7ff ffa8 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005dc0:	f504 70c2 	add.w	r0, r4, #388	@ 0x184
 8005dc4:	f7ff ffa4 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005dc8:	4620      	mov	r0, r4
 8005dca:	bd10      	pop	{r4, pc}
 8005dcc:	0802d5f4 	.word	0x0802d5f4
 8005dd0:	0802d9a4 	.word	0x0802d9a4
 8005dd4:	0802dba4 	.word	0x0802dba4

08005dd8 <_ZN31Screen5x5_letterMergingViewBaseD0Ev>:
Screen5x5_letterMergingViewBase::~Screen5x5_letterMergingViewBase()
 8005dd8:	b510      	push	{r4, lr}
 8005dda:	4604      	mov	r4, r0
}
 8005ddc:	f7ff ffa2 	bl	8005d24 <_ZN31Screen5x5_letterMergingViewBaseD1Ev>
 8005de0:	4620      	mov	r0, r4
 8005de2:	f241 01cc 	movw	r1, #4300	@ 0x10cc
 8005de6:	f023 fc95 	bl	8029714 <_ZdlPvj>
 8005dea:	4620      	mov	r0, r4
 8005dec:	bd10      	pop	{r4, pc}

08005dee <_ZN11Tile_letterD0Ev>:
 8005dee:	b510      	push	{r4, lr}
 8005df0:	4604      	mov	r4, r0
 8005df2:	f7ff ff8d 	bl	8005d10 <_ZN11Tile_letterD1Ev>
 8005df6:	4620      	mov	r0, r4
 8005df8:	21c8      	movs	r1, #200	@ 0xc8
 8005dfa:	f023 fc8b 	bl	8029714 <_ZdlPvj>
 8005dfe:	4620      	mov	r0, r4
 8005e00:	bd10      	pop	{r4, pc}
	...

08005e04 <_ZN31Screen5x5_letterMergingViewBaseC1Ev>:
Screen5x5_letterMergingViewBase::Screen5x5_letterMergingViewBase() :
 8005e04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005e08:	4604      	mov	r4, r0
 8005e0a:	b0a1      	sub	sp, #132	@ 0x84
    flexButtonCallback(this, &Screen5x5_letterMergingViewBase::flexButtonCallbackHandler)
 8005e0c:	46a2      	mov	sl, r4
 8005e0e:	2500      	movs	r5, #0
 8005e10:	f012 fe3a 	bl	8018a88 <_ZN8touchgfx6ScreenC1Ev>
 8005e14:	4bdc      	ldr	r3, [pc, #880]	@ (8006188 <_ZN31Screen5x5_letterMergingViewBaseC1Ev+0x384>)
 8005e16:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8005e18:	f84a 3b40 	str.w	r3, [sl], #64
 8005e1c:	f104 096c 	add.w	r9, r4, #108	@ 0x6c
 8005e20:	4650      	mov	r0, sl
 8005e22:	f7fc fd1f 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 8005e26:	4648      	mov	r0, r9
 8005e28:	f00e fa0c 	bl	8014244 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005e2c:	f104 03b4 	add.w	r3, r4, #180	@ 0xb4
 8005e30:	f104 08e0 	add.w	r8, r4, #224	@ 0xe0
 8005e34:	4618      	mov	r0, r3
 8005e36:	9304      	str	r3, [sp, #16]
 8005e38:	f7fc fd14 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 8005e3c:	4640      	mov	r0, r8
 8005e3e:	f7fc fb21 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 8005e42:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 8005e46:	f8a4 310c 	strh.w	r3, [r4, #268]	@ 0x10c
        touchable = touch;
 8005e4a:	f04f 0301 	mov.w	r3, #1
 8005e4e:	f884 3104 	strb.w	r3, [r4, #260]	@ 0x104
        : T(), up(), down()
 8005e52:	4bce      	ldr	r3, [pc, #824]	@ (800618c <_ZN31Screen5x5_letterMergingViewBaseC1Ev+0x388>)
 8005e54:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
        : Box(), borderColor(0), borderSize(0)
 8005e58:	f504 738a 	add.w	r3, r4, #276	@ 0x114
 8005e5c:	f8c4 5108 	str.w	r5, [r4, #264]	@ 0x108
 8005e60:	f8c4 5110 	str.w	r5, [r4, #272]	@ 0x110
 8005e64:	4618      	mov	r0, r3
 8005e66:	9303      	str	r3, [sp, #12]
 8005e68:	f7fc fcfc 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 8005e6c:	4bc8      	ldr	r3, [pc, #800]	@ (8006190 <_ZN31Screen5x5_letterMergingViewBaseC1Ev+0x38c>)
 8005e6e:	f8c4 3114 	str.w	r3, [r4, #276]	@ 0x114
        borderBox.setXY(0, 0);
 8005e72:	462a      	mov	r2, r5
 8005e74:	9803      	ldr	r0, [sp, #12]
 8005e76:	f8c4 5140 	str.w	r5, [r4, #320]	@ 0x140
 8005e7a:	4629      	mov	r1, r5
        : color(0)
 8005e7c:	e9c4 5552 	strd	r5, r5, [r4, #328]	@ 0x148
 8005e80:	e9c4 5554 	strd	r5, r5, [r4, #336]	@ 0x150
 8005e84:	f8a4 5144 	strh.w	r5, [r4, #324]	@ 0x144
 8005e88:	f7fc fb0e 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8005e8c:	9903      	ldr	r1, [sp, #12]
 8005e8e:	4640      	mov	r0, r8
 8005e90:	f00a fc3c 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005e94:	f504 73ac 	add.w	r3, r4, #344	@ 0x158
 8005e98:	4618      	mov	r0, r3
 8005e9a:	9305      	str	r3, [sp, #20]
 8005e9c:	f7fc fce2 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 8005ea0:	f504 73c2 	add.w	r3, r4, #388	@ 0x184
 8005ea4:	4618      	mov	r0, r3
 8005ea6:	9306      	str	r3, [sp, #24]
 8005ea8:	f005 fd90 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005eac:	f504 7313 	add.w	r3, r4, #588	@ 0x24c
 8005eb0:	4618      	mov	r0, r3
 8005eb2:	9307      	str	r3, [sp, #28]
 8005eb4:	f005 fd8a 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005eb8:	f504 7345 	add.w	r3, r4, #788	@ 0x314
 8005ebc:	4618      	mov	r0, r3
 8005ebe:	9308      	str	r3, [sp, #32]
 8005ec0:	f005 fd84 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005ec4:	f504 7377 	add.w	r3, r4, #988	@ 0x3dc
 8005ec8:	4618      	mov	r0, r3
 8005eca:	9309      	str	r3, [sp, #36]	@ 0x24
 8005ecc:	f005 fd7e 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005ed0:	f204 43a4 	addw	r3, r4, #1188	@ 0x4a4
 8005ed4:	4618      	mov	r0, r3
 8005ed6:	930a      	str	r3, [sp, #40]	@ 0x28
 8005ed8:	f005 fd78 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005edc:	f204 536c 	addw	r3, r4, #1388	@ 0x56c
 8005ee0:	4618      	mov	r0, r3
 8005ee2:	930b      	str	r3, [sp, #44]	@ 0x2c
 8005ee4:	f005 fd72 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005ee8:	f204 6334 	addw	r3, r4, #1588	@ 0x634
 8005eec:	4618      	mov	r0, r3
 8005eee:	930c      	str	r3, [sp, #48]	@ 0x30
 8005ef0:	f005 fd6c 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005ef4:	f204 63fc 	addw	r3, r4, #1788	@ 0x6fc
 8005ef8:	4618      	mov	r0, r3
 8005efa:	930d      	str	r3, [sp, #52]	@ 0x34
 8005efc:	f005 fd66 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005f00:	f204 73c4 	addw	r3, r4, #1988	@ 0x7c4
 8005f04:	4618      	mov	r0, r3
 8005f06:	930e      	str	r3, [sp, #56]	@ 0x38
 8005f08:	f005 fd60 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005f0c:	f604 038c 	addw	r3, r4, #2188	@ 0x88c
 8005f10:	4618      	mov	r0, r3
 8005f12:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005f14:	f005 fd5a 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005f18:	f604 1354 	addw	r3, r4, #2388	@ 0x954
 8005f1c:	4618      	mov	r0, r3
 8005f1e:	9310      	str	r3, [sp, #64]	@ 0x40
 8005f20:	f005 fd54 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005f24:	f604 231c 	addw	r3, r4, #2588	@ 0xa1c
 8005f28:	4618      	mov	r0, r3
 8005f2a:	9311      	str	r3, [sp, #68]	@ 0x44
 8005f2c:	f005 fd4e 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005f30:	f604 23e4 	addw	r3, r4, #2788	@ 0xae4
 8005f34:	4618      	mov	r0, r3
 8005f36:	9312      	str	r3, [sp, #72]	@ 0x48
 8005f38:	f005 fd48 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005f3c:	f604 33ac 	addw	r3, r4, #2988	@ 0xbac
 8005f40:	4618      	mov	r0, r3
 8005f42:	9313      	str	r3, [sp, #76]	@ 0x4c
 8005f44:	f005 fd42 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005f48:	f604 4374 	addw	r3, r4, #3188	@ 0xc74
 8005f4c:	4618      	mov	r0, r3
 8005f4e:	9314      	str	r3, [sp, #80]	@ 0x50
 8005f50:	f005 fd3c 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005f54:	f604 533c 	addw	r3, r4, #3388	@ 0xd3c
 8005f58:	4618      	mov	r0, r3
 8005f5a:	9315      	str	r3, [sp, #84]	@ 0x54
 8005f5c:	f005 fd36 	bl	800b9cc <_ZN11Tile_letterC1Ev>
 8005f60:	f604 6304 	addw	r3, r4, #3588	@ 0xe04
 8005f64:	4618      	mov	r0, r3
 8005f66:	9316      	str	r3, [sp, #88]	@ 0x58
 8005f68:	f002 fcea 	bl	8008940 <_ZN5ScoreC1Ev>
 8005f6c:	f604 7318 	addw	r3, r4, #3864	@ 0xf18
 8005f70:	4618      	mov	r0, r3
 8005f72:	9317      	str	r3, [sp, #92]	@ 0x5c
 8005f74:	f001 fde6 	bl	8007b44 <_ZN4BestC1Ev>
 8005f78:	f504 5381 	add.w	r3, r4, #4128	@ 0x1020
 8005f7c:	330c      	adds	r3, #12
 8005f7e:	f504 5b83 	add.w	fp, r4, #4192	@ 0x1060
 8005f82:	f10b 0b14 	add.w	fp, fp, #20
 8005f86:	4618      	mov	r0, r3
 8005f88:	9302      	str	r3, [sp, #8]
 8005f8a:	f7fc fa9b 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8005f8e:	4658      	mov	r0, fp
 8005f90:	f7fc fa98 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005f94:	4b7f      	ldr	r3, [pc, #508]	@ (8006194 <_ZN31Screen5x5_letterMergingViewBaseC1Ev+0x390>)
 8005f96:	f504 5780 	add.w	r7, r4, #4096	@ 0x1000
 8005f9a:	e9c7 342f 	strd	r3, r4, [r7, #188]	@ 0xbc
 8005f9e:	4b7e      	ldr	r3, [pc, #504]	@ (8006198 <_ZN31Screen5x5_letterMergingViewBaseC1Ev+0x394>)
 8005fa0:	e9c7 3531 	strd	r3, r5, [r7, #196]	@ 0xc4
    __background.setPosition(0, 0, 240, 320);
 8005fa4:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8005fa8:	462a      	mov	r2, r5
 8005faa:	9300      	str	r3, [sp, #0]
 8005fac:	4629      	mov	r1, r5
 8005fae:	4650      	mov	r0, sl
 8005fb0:	23f0      	movs	r3, #240	@ 0xf0
 8005fb2:	1d26      	adds	r6, r4, #4
 8005fb4:	f7fc fc42 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005fb8:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8005fbc:	66a3      	str	r3, [r4, #104]	@ 0x68
 8005fbe:	4651      	mov	r1, sl
 8005fc0:	4630      	mov	r0, r6
 8005fc2:	f00a fba3 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(0, 30);
 8005fc6:	4629      	mov	r1, r5
 8005fc8:	4648      	mov	r0, r9
 8005fca:	221e      	movs	r2, #30
 8005fcc:	f7fc fa6c 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 8005fd0:	aa1e      	add	r2, sp, #120	@ 0x78
 8005fd2:	a91d      	add	r1, sp, #116	@ 0x74
 8005fd4:	f04f 0301 	mov.w	r3, #1
 8005fd8:	4648      	mov	r0, r9
 8005fda:	f8ad 3078 	strh.w	r3, [sp, #120]	@ 0x78
 8005fde:	f8ad 5074 	strh.w	r5, [sp, #116]	@ 0x74
 8005fe2:	f00d fea4 	bl	8013d2e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005fe6:	230b      	movs	r3, #11
 8005fe8:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
        updateTextPosition();
 8005fec:	4648      	mov	r0, r9
 8005fee:	f7fe fc1b 	bl	8004828 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 8005ff2:	4a6a      	ldr	r2, [pc, #424]	@ (800619c <_ZN31Screen5x5_letterMergingViewBaseC1Ev+0x398>)
 8005ff4:	f04f 33ff 	mov.w	r3, #4294967295
 8005ff8:	e9c4 232a 	strd	r2, r3, [r4, #168]	@ 0xa8
 8005ffc:	4649      	mov	r1, r9
 8005ffe:	4630      	mov	r0, r6
    box3.setPosition(0, 0, 240, 80);
 8006000:	f04f 0950 	mov.w	r9, #80	@ 0x50
 8006004:	f00a fb82 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006008:	462a      	mov	r2, r5
 800600a:	9804      	ldr	r0, [sp, #16]
 800600c:	f8cd 9000 	str.w	r9, [sp]
 8006010:	4629      	mov	r1, r5
 8006012:	23f0      	movs	r3, #240	@ 0xf0
 8006014:	f7fc fc12 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006018:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 800601c:	9904      	ldr	r1, [sp, #16]
 800601e:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
 8006022:	4630      	mov	r0, r6
        borderBox.setPosition(x, y, width, height);
 8006024:	f04f 0a1b 	mov.w	sl, #27
 8006028:	f00a fb70 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800602c:	462a      	mov	r2, r5
 800602e:	4629      	mov	r1, r5
 8006030:	9803      	ldr	r0, [sp, #12]
 8006032:	f8cd a000 	str.w	sl, [sp]
 8006036:	2378      	movs	r3, #120	@ 0x78
 8006038:	f7fc fc00 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 800603c:	2305      	movs	r3, #5
 800603e:	f8a4 3144 	strh.w	r3, [r4, #324]	@ 0x144
        up = colorReleased;
 8006042:	4b57      	ldr	r3, [pc, #348]	@ (80061a0 <_ZN31Screen5x5_letterMergingViewBaseC1Ev+0x39c>)
 8006044:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
        down = colorPressed;
 8006048:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 800604c:	3333      	adds	r3, #51	@ 0x33
 800604e:	f8c4 314c 	str.w	r3, [r4, #332]	@ 0x14c
        borderUp = borderColorReleased;
 8006052:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 8006056:	3b66      	subs	r3, #102	@ 0x66
 8006058:	f8c4 3150 	str.w	r3, [r4, #336]	@ 0x150
        borderDown = borderColorPressed;
 800605c:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 8006060:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 8006064:	f8c4 3154 	str.w	r3, [r4, #340]	@ 0x154
        handlePressedUpdated();
 8006068:	4640      	mov	r0, r8
 800606a:	f7fc fb4c 	bl	8002706 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton1_1_1.setAction(flexButtonCallback);
 800606e:	f504 5385 	add.w	r3, r4, #4256	@ 0x10a0
 8006072:	331c      	adds	r3, #28
        action = &callback;
 8006074:	f8c4 3110 	str.w	r3, [r4, #272]	@ 0x110
    flexButton1_1_1.setPosition(60, 44, 120, 27);
 8006078:	222c      	movs	r2, #44	@ 0x2c
 800607a:	2378      	movs	r3, #120	@ 0x78
 800607c:	4640      	mov	r0, r8
 800607e:	f8cd a000 	str.w	sl, [sp]
 8006082:	213c      	movs	r1, #60	@ 0x3c
 8006084:	f7fc fbda 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006088:	4641      	mov	r1, r8
 800608a:	4630      	mov	r0, r6
 800608c:	f00a fb3e 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(0, 80, 240, 240);
 8006090:	23f0      	movs	r3, #240	@ 0xf0
 8006092:	464a      	mov	r2, r9
 8006094:	9805      	ldr	r0, [sp, #20]
 8006096:	9300      	str	r3, [sp, #0]
 8006098:	4629      	mov	r1, r5
 800609a:	f7fc fbcf 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800609e:	4b41      	ldr	r3, [pc, #260]	@ (80061a4 <_ZN31Screen5x5_letterMergingViewBaseC1Ev+0x3a0>)
 80060a0:	f8c4 3180 	str.w	r3, [r4, #384]	@ 0x180
 80060a4:	9905      	ldr	r1, [sp, #20]
 80060a6:	4630      	mov	r0, r6
 80060a8:	f00a fb30 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter1.setXY(0, 80);
 80060ac:	464a      	mov	r2, r9
 80060ae:	9806      	ldr	r0, [sp, #24]
 80060b0:	4629      	mov	r1, r5
 80060b2:	f7fc f9f9 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80060b6:	9906      	ldr	r1, [sp, #24]
 80060b8:	4630      	mov	r0, r6
 80060ba:	f00a fb27 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter2.setXY(60, 80);
 80060be:	464a      	mov	r2, r9
 80060c0:	9807      	ldr	r0, [sp, #28]
 80060c2:	213c      	movs	r1, #60	@ 0x3c
 80060c4:	f7fc f9f0 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80060c8:	9907      	ldr	r1, [sp, #28]
 80060ca:	4630      	mov	r0, r6
 80060cc:	f00a fb1e 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter3.setXY(120, 80);
 80060d0:	464a      	mov	r2, r9
 80060d2:	9808      	ldr	r0, [sp, #32]
 80060d4:	2178      	movs	r1, #120	@ 0x78
 80060d6:	f7fc f9e7 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80060da:	9908      	ldr	r1, [sp, #32]
 80060dc:	4630      	mov	r0, r6
 80060de:	f00a fb15 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter4.setXY(180, 80);
 80060e2:	464a      	mov	r2, r9
 80060e4:	9809      	ldr	r0, [sp, #36]	@ 0x24
        : typedTextId(id)
 80060e6:	f8df 90c0 	ldr.w	r9, [pc, #192]	@ 80061a8 <_ZN31Screen5x5_letterMergingViewBaseC1Ev+0x3a4>
 80060ea:	21b4      	movs	r1, #180	@ 0xb4
 80060ec:	f7fc f9dc 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80060f0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80060f2:	4630      	mov	r0, r6
 80060f4:	f00a fb0a 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter5.setXY(0, 140);
 80060f8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80060fa:	228c      	movs	r2, #140	@ 0x8c
 80060fc:	4629      	mov	r1, r5
 80060fe:	f7fc f9d3 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006102:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006104:	4630      	mov	r0, r6
 8006106:	f00a fb01 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter6.setXY(60, 140);
 800610a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800610c:	228c      	movs	r2, #140	@ 0x8c
 800610e:	213c      	movs	r1, #60	@ 0x3c
 8006110:	f7fc f9ca 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006114:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006116:	4630      	mov	r0, r6
 8006118:	f00a faf8 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter7.setXY(120, 140);
 800611c:	980c      	ldr	r0, [sp, #48]	@ 0x30
 800611e:	228c      	movs	r2, #140	@ 0x8c
 8006120:	2178      	movs	r1, #120	@ 0x78
 8006122:	f7fc f9c1 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006126:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8006128:	4630      	mov	r0, r6
 800612a:	f00a faef 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter8.setXY(180, 140);
 800612e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8006130:	228c      	movs	r2, #140	@ 0x8c
 8006132:	21b4      	movs	r1, #180	@ 0xb4
 8006134:	f7fc f9b8 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006138:	990d      	ldr	r1, [sp, #52]	@ 0x34
 800613a:	4630      	mov	r0, r6
 800613c:	f00a fae6 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter9.setXY(0, 200);
 8006140:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8006142:	22c8      	movs	r2, #200	@ 0xc8
 8006144:	4629      	mov	r1, r5
 8006146:	f7fc f9af 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800614a:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800614c:	4630      	mov	r0, r6
 800614e:	f00a fadd 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter10.setXY(60, 200);
 8006152:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8006154:	22c8      	movs	r2, #200	@ 0xc8
 8006156:	213c      	movs	r1, #60	@ 0x3c
 8006158:	f7fc f9a6 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800615c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800615e:	4630      	mov	r0, r6
 8006160:	f00a fad4 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter11.setXY(120, 200);
 8006164:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8006166:	22c8      	movs	r2, #200	@ 0xc8
 8006168:	2178      	movs	r1, #120	@ 0x78
 800616a:	f7fc f99d 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800616e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8006170:	4630      	mov	r0, r6
 8006172:	f00a facb 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter12.setXY(180, 200);
 8006176:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8006178:	22c8      	movs	r2, #200	@ 0xc8
 800617a:	21b4      	movs	r1, #180	@ 0xb4
 800617c:	f7fc f994 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006180:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8006182:	4630      	mov	r0, r6
 8006184:	e012      	b.n	80061ac <_ZN31Screen5x5_letterMergingViewBaseC1Ev+0x3a8>
 8006186:	bf00      	nop
 8006188:	0802d5f4 	.word	0x0802d5f4
 800618c:	0802d18c 	.word	0x0802d18c
 8006190:	0802e4bc 	.word	0x0802e4bc
 8006194:	0802d5dc 	.word	0x0802d5dc
 8006198:	08005cf9 	.word	0x08005cf9
 800619c:	ffb56767 	.word	0xffb56767
 80061a0:	ff006699 	.word	0xff006699
 80061a4:	ff776e65 	.word	0xff776e65
 80061a8:	0802d030 	.word	0x0802d030
 80061ac:	f00a faae 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter13.setXY(0, 260);
 80061b0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80061b2:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80061b6:	4629      	mov	r1, r5
 80061b8:	f7fc f976 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80061bc:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80061be:	4630      	mov	r0, r6
 80061c0:	f00a faa4 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter14.setXY(60, 260);
 80061c4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80061c6:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80061ca:	213c      	movs	r1, #60	@ 0x3c
 80061cc:	f7fc f96c 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80061d0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80061d2:	4630      	mov	r0, r6
 80061d4:	f00a fa9a 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter15.setXY(120, 260);
 80061d8:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80061da:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80061de:	2178      	movs	r1, #120	@ 0x78
 80061e0:	f7fc f962 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80061e4:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80061e6:	4630      	mov	r0, r6
 80061e8:	f00a fa90 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile_letter16.setXY(180, 260);
 80061ec:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80061ee:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80061f2:	21b4      	movs	r1, #180	@ 0xb4
 80061f4:	f7fc f958 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80061f8:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80061fa:	4630      	mov	r0, r6
 80061fc:	f00a fa86 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scoreContainer.setXY(135, 6);
 8006200:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8006202:	2206      	movs	r2, #6
 8006204:	2187      	movs	r1, #135	@ 0x87
 8006206:	f7fc f94f 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800620a:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800620c:	4630      	mov	r0, r6
 800620e:	f00a fa7d 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bestContainer.setXY(180, 6);
 8006212:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8006214:	2206      	movs	r2, #6
 8006216:	21b4      	movs	r1, #180	@ 0xb4
 8006218:	f7fc f946 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800621c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800621e:	4630      	mov	r0, r6
 8006220:	f00a fa74 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(10, 12);
 8006224:	9802      	ldr	r0, [sp, #8]
 8006226:	220c      	movs	r2, #12
 8006228:	210a      	movs	r1, #10
 800622a:	f7fc f93d 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800622e:	f10d 0860 	add.w	r8, sp, #96	@ 0x60
        color = newColor;
 8006232:	4b20      	ldr	r3, [pc, #128]	@ (80062b4 <_ZN31Screen5x5_letterMergingViewBaseC1Ev+0x4b0>)
        boundingArea = calculateBoundingArea();
 8006234:	9902      	ldr	r1, [sp, #8]
        color = newColor;
 8006236:	65fb      	str	r3, [r7, #92]	@ 0x5c
        boundingArea = calculateBoundingArea();
 8006238:	4640      	mov	r0, r8
        linespace = space;
 800623a:	f8a7 5060 	strh.w	r5, [r7, #96]	@ 0x60
        boundingArea = calculateBoundingArea();
 800623e:	f00d fa7f 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006242:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006246:	9b02      	ldr	r3, [sp, #8]
 8006248:	f8cd 9078 	str.w	r9, [sp, #120]	@ 0x78
 800624c:	333c      	adds	r3, #60	@ 0x3c
 800624e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006252:	230d      	movs	r3, #13
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O7HF));
 8006254:	9802      	ldr	r0, [sp, #8]
 8006256:	f8ad 307c 	strh.w	r3, [sp, #124]	@ 0x7c
 800625a:	a91e      	add	r1, sp, #120	@ 0x78
 800625c:	f00d fd0a 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006260:	9902      	ldr	r1, [sp, #8]
 8006262:	4630      	mov	r0, r6
 8006264:	f00a fa52 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2_1_1.setXY(97, 48);
 8006268:	2230      	movs	r2, #48	@ 0x30
 800626a:	4658      	mov	r0, fp
 800626c:	2161      	movs	r1, #97	@ 0x61
 800626e:	f7fc f91b 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006272:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8006276:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
        boundingArea = calculateBoundingArea();
 800627a:	4659      	mov	r1, fp
 800627c:	4640      	mov	r0, r8
        linespace = space;
 800627e:	f8a7 50a8 	strh.w	r5, [r7, #168]	@ 0xa8
        boundingArea = calculateBoundingArea();
 8006282:	f00d fa5d 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006286:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800628a:	f10b 033c 	add.w	r3, fp, #60	@ 0x3c
 800628e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006292:	230c      	movs	r3, #12
    textArea2_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OTN7));
 8006294:	a91e      	add	r1, sp, #120	@ 0x78
 8006296:	4658      	mov	r0, fp
 8006298:	f8ad 307c 	strh.w	r3, [sp, #124]	@ 0x7c
 800629c:	f8cd 9078 	str.w	r9, [sp, #120]	@ 0x78
 80062a0:	f00d fce8 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80062a4:	4630      	mov	r0, r6
 80062a6:	4659      	mov	r1, fp
 80062a8:	f00a fa30 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80062ac:	4620      	mov	r0, r4
 80062ae:	b021      	add	sp, #132	@ 0x84
 80062b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062b4:	ffe36e1b 	.word	0xffe36e1b

080062b8 <_ZN8touchgfx8CallbackI30Screen5x5_superMergingViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80062b8:	4770      	bx	lr

080062ba <_ZN8touchgfx8CallbackI30Screen5x5_superMergingViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80062ba:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80062bc:	68c2      	ldr	r2, [r0, #12]
 80062be:	6844      	ldr	r4, [r0, #4]
 80062c0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80062c2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80062c4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80062c8:	07d2      	lsls	r2, r2, #31
 80062ca:	bf48      	it	mi
 80062cc:	5962      	ldrmi	r2, [r4, r5]
 80062ce:	689b      	ldr	r3, [r3, #8]
    }
 80062d0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80062d2:	bf48      	it	mi
 80062d4:	58d3      	ldrmi	r3, [r2, r3]
 80062d6:	4718      	bx	r3

080062d8 <_ZNK8touchgfx8CallbackI30Screen5x5_superMergingViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 80062d8:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 80062da:	6840      	ldr	r0, [r0, #4]
 80062dc:	b130      	cbz	r0, 80062ec <_ZNK8touchgfx8CallbackI30Screen5x5_superMergingViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80062de:	689a      	ldr	r2, [r3, #8]
 80062e0:	b91a      	cbnz	r2, 80062ea <_ZNK8touchgfx8CallbackI30Screen5x5_superMergingViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 80062e2:	68d8      	ldr	r0, [r3, #12]
 80062e4:	f000 0001 	and.w	r0, r0, #1
 80062e8:	4770      	bx	lr
 80062ea:	2001      	movs	r0, #1
    }
 80062ec:	4770      	bx	lr

080062ee <_ZN8touchgfx8CallbackI30Screen5x5_superMergingViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80062ee:	b510      	push	{r4, lr}
 80062f0:	2110      	movs	r1, #16
 80062f2:	4604      	mov	r4, r0
 80062f4:	f023 fa0e 	bl	8029714 <_ZdlPvj>
 80062f8:	4620      	mov	r0, r4
 80062fa:	bd10      	pop	{r4, pc}

080062fc <_ZN30Screen5x5_superMergingViewBase11setupScreenEv>:
{

}

void Screen5x5_superMergingViewBase::setupScreen()
{
 80062fc:	b510      	push	{r4, lr}
 80062fe:	4604      	mov	r4, r0
    scoreContainer.initialize();
 8006300:	f500 70d0 	add.w	r0, r0, #416	@ 0x1a0
 8006304:	f002 fb38 	bl	8008978 <_ZN5Score10initializeEv>
    bestContainer.initialize();
 8006308:	f504 702d 	add.w	r0, r4, #692	@ 0x2b4
 800630c:	f001 fc36 	bl	8007b7c <_ZN4Best10initializeEv>
    tile5x5_Super1.initialize();
 8006310:	f504 7072 	add.w	r0, r4, #968	@ 0x3c8
 8006314:	f005 fb11 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super2.initialize();
 8006318:	f204 4094 	addw	r0, r4, #1172	@ 0x494
 800631c:	f005 fb0d 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super3.initialize();
 8006320:	f504 60ac 	add.w	r0, r4, #1376	@ 0x560
 8006324:	f005 fb09 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super4.initialize();
 8006328:	f204 602c 	addw	r0, r4, #1580	@ 0x62c
 800632c:	f005 fb05 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super5.initialize();
 8006330:	f504 60df 	add.w	r0, r4, #1784	@ 0x6f8
 8006334:	f005 fb01 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super6.initialize();
 8006338:	f204 70c4 	addw	r0, r4, #1988	@ 0x7c4
 800633c:	f005 fafd 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super7.initialize();
 8006340:	f504 6009 	add.w	r0, r4, #2192	@ 0x890
 8006344:	f005 faf9 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super8.initialize();
 8006348:	f604 105c 	addw	r0, r4, #2396	@ 0x95c
 800634c:	f005 faf5 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super9.initialize();
 8006350:	f604 2028 	addw	r0, r4, #2600	@ 0xa28
 8006354:	f005 faf1 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super10.initialize();
 8006358:	f604 20f4 	addw	r0, r4, #2804	@ 0xaf4
 800635c:	f005 faed 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super11.initialize();
 8006360:	f504 603c 	add.w	r0, r4, #3008	@ 0xbc0
 8006364:	f005 fae9 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super12.initialize();
 8006368:	f604 408c 	addw	r0, r4, #3212	@ 0xc8c
 800636c:	f005 fae5 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super13.initialize();
 8006370:	f604 5058 	addw	r0, r4, #3416	@ 0xd58
 8006374:	f005 fae1 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super14.initialize();
 8006378:	f604 6024 	addw	r0, r4, #3620	@ 0xe24
 800637c:	f005 fadd 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super15.initialize();
 8006380:	f504 606f 	add.w	r0, r4, #3824	@ 0xef0
 8006384:	f005 fad9 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super16.initialize();
 8006388:	f604 70bc 	addw	r0, r4, #4028	@ 0xfbc
 800638c:	f005 fad5 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super17.initialize();
 8006390:	f504 5084 	add.w	r0, r4, #4224	@ 0x1080
 8006394:	3008      	adds	r0, #8
 8006396:	f005 fad0 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super18.initialize();
 800639a:	f504 508a 	add.w	r0, r4, #4416	@ 0x1140
 800639e:	3014      	adds	r0, #20
 80063a0:	f005 facb 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super19.initialize();
 80063a4:	f504 5091 	add.w	r0, r4, #4640	@ 0x1220
 80063a8:	f005 fac7 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super20.initialize();
 80063ac:	f504 5097 	add.w	r0, r4, #4832	@ 0x12e0
 80063b0:	300c      	adds	r0, #12
 80063b2:	f005 fac2 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super21.initialize();
 80063b6:	f504 509d 	add.w	r0, r4, #5024	@ 0x13a0
 80063ba:	3018      	adds	r0, #24
 80063bc:	f005 fabd 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super22.initialize();
 80063c0:	f504 50a4 	add.w	r0, r4, #5248	@ 0x1480
 80063c4:	3004      	adds	r0, #4
 80063c6:	f005 fab8 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super23.initialize();
 80063ca:	f504 50aa 	add.w	r0, r4, #5440	@ 0x1540
 80063ce:	3010      	adds	r0, #16
 80063d0:	f005 fab3 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super24.initialize();
 80063d4:	f504 50b0 	add.w	r0, r4, #5632	@ 0x1600
 80063d8:	301c      	adds	r0, #28
 80063da:	f005 faae 	bl	800b93a <_ZN13Tile5x5_Super10initializeEv>
    tile5x5_Super25.initialize();
 80063de:	f504 50b7 	add.w	r0, r4, #5856	@ 0x16e0
 80063e2:	3008      	adds	r0, #8
}
 80063e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    tile5x5_Super25.initialize();
 80063e8:	f005 baa7 	b.w	800b93a <_ZN13Tile5x5_Super10initializeEv>

080063ec <_ZN30Screen5x5_superMergingViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen5x5_superMergingViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1_1_1)
 80063ec:	3098      	adds	r0, #152	@ 0x98
 80063ee:	4288      	cmp	r0, r1
{
 80063f0:	b508      	push	{r3, lr}
    if (&src == &flexButton1_1_1)
 80063f2:	d105      	bne.n	8006400 <_ZN30Screen5x5_superMergingViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14>
    virtual ~Screen5x5_superMergingViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80063f4:	f010 fad2 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When flexButton1_1_1 clicked change screen to Chosing_mode
        //Go to Chosing_mode with screen transition towards East
        application().gotoChosing_modeScreenWipeTransitionEast();
    }
}
 80063f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoChosing_modeScreenWipeTransitionEast();
 80063fc:	f7fc be4c 	b.w	8003098 <_ZN23FrontendApplicationBase40gotoChosing_modeScreenWipeTransitionEastEv>
}
 8006400:	bd08      	pop	{r3, pc}
	...

08006404 <_ZN13Tile5x5_SuperD1Ev>:
#include <touchgfx/Application.hpp>
class Tile5x5_Super : public Tile5x5_SuperBase
{
public:
    Tile5x5_Super();
    virtual ~Tile5x5_Super() {}
 8006404:	b510      	push	{r4, lr}
 8006406:	4b03      	ldr	r3, [pc, #12]	@ (8006414 <_ZN13Tile5x5_SuperD1Ev+0x10>)
 8006408:	6003      	str	r3, [r0, #0]
 800640a:	4604      	mov	r4, r0
 800640c:	f001 f8f4 	bl	80075f8 <_ZN17Tile5x5_SuperBaseD1Ev>
 8006410:	4620      	mov	r0, r4
 8006412:	bd10      	pop	{r4, pc}
 8006414:	0802dfc0 	.word	0x0802dfc0

08006418 <_ZN30Screen5x5_superMergingViewBaseD1Ev>:
Screen5x5_superMergingViewBase::~Screen5x5_superMergingViewBase()
 8006418:	4b3f      	ldr	r3, [pc, #252]	@ (8006518 <_ZN30Screen5x5_superMergingViewBaseD1Ev+0x100>)
 800641a:	b510      	push	{r4, lr}
 800641c:	4604      	mov	r4, r0
 800641e:	6003      	str	r3, [r0, #0]
}
 8006420:	f500 50b7 	add.w	r0, r0, #5856	@ 0x16e0
 8006424:	3008      	adds	r0, #8
 8006426:	f7ff ffed 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 800642a:	f504 50b0 	add.w	r0, r4, #5632	@ 0x1600
 800642e:	301c      	adds	r0, #28
 8006430:	f7ff ffe8 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 8006434:	f504 50aa 	add.w	r0, r4, #5440	@ 0x1540
 8006438:	3010      	adds	r0, #16
 800643a:	f7ff ffe3 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 800643e:	f504 50a4 	add.w	r0, r4, #5248	@ 0x1480
 8006442:	3004      	adds	r0, #4
 8006444:	f7ff ffde 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 8006448:	f504 509d 	add.w	r0, r4, #5024	@ 0x13a0
 800644c:	3018      	adds	r0, #24
 800644e:	f7ff ffd9 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 8006452:	f504 5097 	add.w	r0, r4, #4832	@ 0x12e0
 8006456:	300c      	adds	r0, #12
 8006458:	f7ff ffd4 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 800645c:	f504 5091 	add.w	r0, r4, #4640	@ 0x1220
 8006460:	f7ff ffd0 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 8006464:	f504 508a 	add.w	r0, r4, #4416	@ 0x1140
 8006468:	3014      	adds	r0, #20
 800646a:	f7ff ffcb 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 800646e:	f504 5084 	add.w	r0, r4, #4224	@ 0x1080
 8006472:	3008      	adds	r0, #8
 8006474:	f7ff ffc6 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 8006478:	f604 70bc 	addw	r0, r4, #4028	@ 0xfbc
 800647c:	f7ff ffc2 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 8006480:	f504 606f 	add.w	r0, r4, #3824	@ 0xef0
 8006484:	f7ff ffbe 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 8006488:	f604 6024 	addw	r0, r4, #3620	@ 0xe24
 800648c:	f7ff ffba 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 8006490:	f604 5058 	addw	r0, r4, #3416	@ 0xd58
 8006494:	f7ff ffb6 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 8006498:	f604 408c 	addw	r0, r4, #3212	@ 0xc8c
 800649c:	f7ff ffb2 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 80064a0:	f504 603c 	add.w	r0, r4, #3008	@ 0xbc0
 80064a4:	f7ff ffae 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 80064a8:	f604 20f4 	addw	r0, r4, #2804	@ 0xaf4
 80064ac:	f7ff ffaa 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 80064b0:	f604 2028 	addw	r0, r4, #2600	@ 0xa28
 80064b4:	f7ff ffa6 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 80064b8:	f604 105c 	addw	r0, r4, #2396	@ 0x95c
 80064bc:	f7ff ffa2 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 80064c0:	f504 6009 	add.w	r0, r4, #2192	@ 0x890
 80064c4:	f7ff ff9e 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 80064c8:	f204 70c4 	addw	r0, r4, #1988	@ 0x7c4
 80064cc:	f7ff ff9a 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 80064d0:	f504 60df 	add.w	r0, r4, #1784	@ 0x6f8
 80064d4:	f7ff ff96 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 80064d8:	f204 602c 	addw	r0, r4, #1580	@ 0x62c
 80064dc:	f7ff ff92 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 80064e0:	f504 60ac 	add.w	r0, r4, #1376	@ 0x560
 80064e4:	f7ff ff8e 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 80064e8:	f204 4094 	addw	r0, r4, #1172	@ 0x494
 80064ec:	f7ff ff8a 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 80064f0:	f504 7072 	add.w	r0, r4, #968	@ 0x3c8
 80064f4:	f7ff ff86 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 80064f8:	4b08      	ldr	r3, [pc, #32]	@ (800651c <_ZN30Screen5x5_superMergingViewBaseD1Ev+0x104>)
 80064fa:	f8c4 32b4 	str.w	r3, [r4, #692]	@ 0x2b4
 80064fe:	f504 702d 	add.w	r0, r4, #692	@ 0x2b4
 8006502:	f7fb ff65 	bl	80023d0 <_ZN8BestBaseD1Ev>
 8006506:	4b06      	ldr	r3, [pc, #24]	@ (8006520 <_ZN30Screen5x5_superMergingViewBaseD1Ev+0x108>)
 8006508:	f8c4 31a0 	str.w	r3, [r4, #416]	@ 0x1a0
 800650c:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 8006510:	f7fe fc8a 	bl	8004e28 <_ZN9ScoreBaseD1Ev>
 8006514:	4620      	mov	r0, r4
 8006516:	bd10      	pop	{r4, pc}
 8006518:	0802d640 	.word	0x0802d640
 800651c:	0802d9a4 	.word	0x0802d9a4
 8006520:	0802dba4 	.word	0x0802dba4

08006524 <_ZN30Screen5x5_superMergingViewBaseD0Ev>:
Screen5x5_superMergingViewBase::~Screen5x5_superMergingViewBase()
 8006524:	b510      	push	{r4, lr}
 8006526:	4604      	mov	r4, r0
}
 8006528:	f7ff ff76 	bl	8006418 <_ZN30Screen5x5_superMergingViewBaseD1Ev>
 800652c:	4620      	mov	r0, r4
 800652e:	f241 71c4 	movw	r1, #6084	@ 0x17c4
 8006532:	f023 f8ef 	bl	8029714 <_ZdlPvj>
 8006536:	4620      	mov	r0, r4
 8006538:	bd10      	pop	{r4, pc}

0800653a <_ZN13Tile5x5_SuperD0Ev>:
 800653a:	b510      	push	{r4, lr}
 800653c:	4604      	mov	r4, r0
 800653e:	f7ff ff61 	bl	8006404 <_ZN13Tile5x5_SuperD1Ev>
 8006542:	4620      	mov	r0, r4
 8006544:	21cc      	movs	r1, #204	@ 0xcc
 8006546:	f023 f8e5 	bl	8029714 <_ZdlPvj>
 800654a:	4620      	mov	r0, r4
 800654c:	bd10      	pop	{r4, pc}
	...

08006550 <_ZN30Screen5x5_superMergingViewBaseC1Ev>:
Screen5x5_superMergingViewBase::Screen5x5_superMergingViewBase() :
 8006550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006554:	4604      	mov	r4, r0
 8006556:	b0a5      	sub	sp, #148	@ 0x94
    flexButtonCallback(this, &Screen5x5_superMergingViewBase::flexButtonCallbackHandler)
 8006558:	46a0      	mov	r8, r4
 800655a:	2600      	movs	r6, #0
 800655c:	f012 fa94 	bl	8018a88 <_ZN8touchgfx6ScreenC1Ev>
 8006560:	4bdd      	ldr	r3, [pc, #884]	@ (80068d8 <_ZN30Screen5x5_superMergingViewBaseC1Ev+0x388>)
 8006562:	63e6      	str	r6, [r4, #60]	@ 0x3c
 8006564:	f848 3b40 	str.w	r3, [r8], #64
 8006568:	4640      	mov	r0, r8
 800656a:	f7fc f97b 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 800656e:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
 8006572:	f104 0798 	add.w	r7, r4, #152	@ 0x98
 8006576:	4618      	mov	r0, r3
 8006578:	930a      	str	r3, [sp, #40]	@ 0x28
 800657a:	f7fc f973 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 800657e:	4638      	mov	r0, r7
 8006580:	f7fb ff80 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 8006584:	f44f 437f 	mov.w	r3, #65280	@ 0xff00
 8006588:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
 800658c:	2301      	movs	r3, #1
 800658e:	f884 30bc 	strb.w	r3, [r4, #188]	@ 0xbc
        : T(), up(), down()
 8006592:	4bd2      	ldr	r3, [pc, #840]	@ (80068dc <_ZN30Screen5x5_superMergingViewBaseC1Ev+0x38c>)
 8006594:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
        : Box(), borderColor(0), borderSize(0)
 8006598:	f104 03cc 	add.w	r3, r4, #204	@ 0xcc
 800659c:	f8c4 60c0 	str.w	r6, [r4, #192]	@ 0xc0
 80065a0:	f8c4 60c8 	str.w	r6, [r4, #200]	@ 0xc8
 80065a4:	4618      	mov	r0, r3
 80065a6:	9309      	str	r3, [sp, #36]	@ 0x24
 80065a8:	f7fc f95c 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 80065ac:	4bcc      	ldr	r3, [pc, #816]	@ (80068e0 <_ZN30Screen5x5_superMergingViewBaseC1Ev+0x390>)
 80065ae:	f8c4 30cc 	str.w	r3, [r4, #204]	@ 0xcc
        borderBox.setXY(0, 0);
 80065b2:	4632      	mov	r2, r6
 80065b4:	9809      	ldr	r0, [sp, #36]	@ 0x24
        : color(col)
 80065b6:	f8c4 60f8 	str.w	r6, [r4, #248]	@ 0xf8
 80065ba:	4631      	mov	r1, r6
        : color(0)
 80065bc:	e9c4 6640 	strd	r6, r6, [r4, #256]	@ 0x100
 80065c0:	e9c4 6642 	strd	r6, r6, [r4, #264]	@ 0x108
 80065c4:	f8a4 60fc 	strh.w	r6, [r4, #252]	@ 0xfc
 80065c8:	f7fb ff6e 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 80065cc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80065ce:	4638      	mov	r0, r7
 80065d0:	f00a f89c 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80065d4:	f504 7388 	add.w	r3, r4, #272	@ 0x110
 80065d8:	4618      	mov	r0, r3
 80065da:	9302      	str	r3, [sp, #8]
 80065dc:	f7fb ff72 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 80065e0:	f504 73ac 	add.w	r3, r4, #344	@ 0x158
 80065e4:	4618      	mov	r0, r3
 80065e6:	9303      	str	r3, [sp, #12]
 80065e8:	f7fb ff6c 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 80065ec:	f504 73d0 	add.w	r3, r4, #416	@ 0x1a0
 80065f0:	4618      	mov	r0, r3
 80065f2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80065f4:	f002 f9a4 	bl	8008940 <_ZN5ScoreC1Ev>
 80065f8:	f504 732d 	add.w	r3, r4, #692	@ 0x2b4
 80065fc:	4618      	mov	r0, r3
 80065fe:	930c      	str	r3, [sp, #48]	@ 0x30
 8006600:	f001 faa0 	bl	8007b44 <_ZN4BestC1Ev>
 8006604:	f504 7372 	add.w	r3, r4, #968	@ 0x3c8
 8006608:	4618      	mov	r0, r3
 800660a:	930d      	str	r3, [sp, #52]	@ 0x34
 800660c:	f005 f8ec 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 8006610:	f204 4394 	addw	r3, r4, #1172	@ 0x494
 8006614:	4618      	mov	r0, r3
 8006616:	930e      	str	r3, [sp, #56]	@ 0x38
 8006618:	f005 f8e6 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 800661c:	f504 63ac 	add.w	r3, r4, #1376	@ 0x560
 8006620:	4618      	mov	r0, r3
 8006622:	930f      	str	r3, [sp, #60]	@ 0x3c
 8006624:	f005 f8e0 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 8006628:	f204 632c 	addw	r3, r4, #1580	@ 0x62c
 800662c:	4618      	mov	r0, r3
 800662e:	9310      	str	r3, [sp, #64]	@ 0x40
 8006630:	f005 f8da 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 8006634:	f504 63df 	add.w	r3, r4, #1784	@ 0x6f8
 8006638:	4618      	mov	r0, r3
 800663a:	9311      	str	r3, [sp, #68]	@ 0x44
 800663c:	f005 f8d4 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 8006640:	f204 73c4 	addw	r3, r4, #1988	@ 0x7c4
 8006644:	4618      	mov	r0, r3
 8006646:	9312      	str	r3, [sp, #72]	@ 0x48
 8006648:	f005 f8ce 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 800664c:	f504 6309 	add.w	r3, r4, #2192	@ 0x890
 8006650:	4618      	mov	r0, r3
 8006652:	9313      	str	r3, [sp, #76]	@ 0x4c
 8006654:	f005 f8c8 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 8006658:	f604 135c 	addw	r3, r4, #2396	@ 0x95c
 800665c:	4618      	mov	r0, r3
 800665e:	9314      	str	r3, [sp, #80]	@ 0x50
 8006660:	f005 f8c2 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 8006664:	f604 2328 	addw	r3, r4, #2600	@ 0xa28
 8006668:	4618      	mov	r0, r3
 800666a:	9315      	str	r3, [sp, #84]	@ 0x54
 800666c:	f005 f8bc 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 8006670:	f604 23f4 	addw	r3, r4, #2804	@ 0xaf4
 8006674:	4618      	mov	r0, r3
 8006676:	9316      	str	r3, [sp, #88]	@ 0x58
 8006678:	f005 f8b6 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 800667c:	f504 633c 	add.w	r3, r4, #3008	@ 0xbc0
 8006680:	4618      	mov	r0, r3
 8006682:	9317      	str	r3, [sp, #92]	@ 0x5c
 8006684:	f005 f8b0 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 8006688:	f604 438c 	addw	r3, r4, #3212	@ 0xc8c
 800668c:	4618      	mov	r0, r3
 800668e:	9318      	str	r3, [sp, #96]	@ 0x60
 8006690:	f005 f8aa 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 8006694:	f604 5358 	addw	r3, r4, #3416	@ 0xd58
 8006698:	4618      	mov	r0, r3
 800669a:	9319      	str	r3, [sp, #100]	@ 0x64
 800669c:	f005 f8a4 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 80066a0:	f604 6324 	addw	r3, r4, #3620	@ 0xe24
 80066a4:	4618      	mov	r0, r3
 80066a6:	931a      	str	r3, [sp, #104]	@ 0x68
 80066a8:	f005 f89e 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 80066ac:	f504 636f 	add.w	r3, r4, #3824	@ 0xef0
 80066b0:	4618      	mov	r0, r3
 80066b2:	931b      	str	r3, [sp, #108]	@ 0x6c
 80066b4:	f005 f898 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 80066b8:	f604 73bc 	addw	r3, r4, #4028	@ 0xfbc
 80066bc:	4618      	mov	r0, r3
 80066be:	931c      	str	r3, [sp, #112]	@ 0x70
 80066c0:	f005 f892 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 80066c4:	f504 5384 	add.w	r3, r4, #4224	@ 0x1080
 80066c8:	3308      	adds	r3, #8
 80066ca:	4618      	mov	r0, r3
 80066cc:	9304      	str	r3, [sp, #16]
 80066ce:	f005 f88b 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 80066d2:	f504 538a 	add.w	r3, r4, #4416	@ 0x1140
 80066d6:	3314      	adds	r3, #20
 80066d8:	4618      	mov	r0, r3
 80066da:	9305      	str	r3, [sp, #20]
 80066dc:	f005 f884 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 80066e0:	f504 5391 	add.w	r3, r4, #4640	@ 0x1220
 80066e4:	4618      	mov	r0, r3
 80066e6:	931d      	str	r3, [sp, #116]	@ 0x74
 80066e8:	f005 f87e 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 80066ec:	f504 5397 	add.w	r3, r4, #4832	@ 0x12e0
 80066f0:	330c      	adds	r3, #12
 80066f2:	4618      	mov	r0, r3
 80066f4:	9306      	str	r3, [sp, #24]
 80066f6:	f005 f877 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 80066fa:	f504 539d 	add.w	r3, r4, #5024	@ 0x13a0
 80066fe:	3318      	adds	r3, #24
 8006700:	4618      	mov	r0, r3
 8006702:	9307      	str	r3, [sp, #28]
 8006704:	f005 f870 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 8006708:	f504 53a4 	add.w	r3, r4, #5248	@ 0x1480
 800670c:	3304      	adds	r3, #4
 800670e:	f504 59aa 	add.w	r9, r4, #5440	@ 0x1540
 8006712:	4618      	mov	r0, r3
 8006714:	f109 0910 	add.w	r9, r9, #16
 8006718:	f504 5ab0 	add.w	sl, r4, #5632	@ 0x1600
 800671c:	9308      	str	r3, [sp, #32]
 800671e:	f10a 0a1c 	add.w	sl, sl, #28
 8006722:	f005 f861 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 8006726:	f504 5bb7 	add.w	fp, r4, #5856	@ 0x16e0
 800672a:	4648      	mov	r0, r9
 800672c:	f005 f85c 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 8006730:	f10b 0b08 	add.w	fp, fp, #8
 8006734:	4650      	mov	r0, sl
 8006736:	f005 f857 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
 800673a:	4658      	mov	r0, fp
 800673c:	f005 f854 	bl	800b7e8 <_ZN13Tile5x5_SuperC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006740:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8006744:	4a67      	ldr	r2, [pc, #412]	@ (80068e4 <_ZN30Screen5x5_superMergingViewBaseC1Ev+0x394>)
 8006746:	f8c3 27b4 	str.w	r2, [r3, #1972]	@ 0x7b4
 800674a:	4a67      	ldr	r2, [pc, #412]	@ (80068e8 <_ZN30Screen5x5_superMergingViewBaseC1Ev+0x398>)
 800674c:	f8c3 47b8 	str.w	r4, [r3, #1976]	@ 0x7b8
 8006750:	f8c3 27bc 	str.w	r2, [r3, #1980]	@ 0x7bc
 8006754:	f8c3 67c0 	str.w	r6, [r3, #1984]	@ 0x7c0
    __background.setPosition(0, 0, 240, 320);
 8006758:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800675c:	4632      	mov	r2, r6
 800675e:	9300      	str	r3, [sp, #0]
 8006760:	4631      	mov	r1, r6
 8006762:	4640      	mov	r0, r8
 8006764:	23f0      	movs	r3, #240	@ 0xf0
 8006766:	1d25      	adds	r5, r4, #4
 8006768:	f7fc f868 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800676c:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8006770:	66a3      	str	r3, [r4, #104]	@ 0x68
 8006772:	4641      	mov	r1, r8
 8006774:	4628      	mov	r0, r5
 8006776:	f009 ffc9 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box2.setPosition(0, 80, 240, 240);
 800677a:	23f0      	movs	r3, #240	@ 0xf0
 800677c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800677e:	9300      	str	r3, [sp, #0]
 8006780:	2250      	movs	r2, #80	@ 0x50
 8006782:	4631      	mov	r1, r6
 8006784:	f7fc f85a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006788:	4b58      	ldr	r3, [pc, #352]	@ (80068ec <_ZN30Screen5x5_superMergingViewBaseC1Ev+0x39c>)
 800678a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800678c:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8006790:	4628      	mov	r0, r5
        borderBox.setPosition(x, y, width, height);
 8006792:	f04f 081b 	mov.w	r8, #27
 8006796:	f009 ffb9 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800679a:	4632      	mov	r2, r6
 800679c:	4631      	mov	r1, r6
 800679e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80067a0:	f8cd 8000 	str.w	r8, [sp]
 80067a4:	2378      	movs	r3, #120	@ 0x78
 80067a6:	f7fc f849 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 80067aa:	2305      	movs	r3, #5
 80067ac:	f8a4 30fc 	strh.w	r3, [r4, #252]	@ 0xfc
        up = colorReleased;
 80067b0:	4b4f      	ldr	r3, [pc, #316]	@ (80068f0 <_ZN30Screen5x5_superMergingViewBaseC1Ev+0x3a0>)
 80067b2:	f8c4 3100 	str.w	r3, [r4, #256]	@ 0x100
        down = colorPressed;
 80067b6:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 80067ba:	3333      	adds	r3, #51	@ 0x33
 80067bc:	f8c4 3104 	str.w	r3, [r4, #260]	@ 0x104
        borderUp = borderColorReleased;
 80067c0:	f5a3 43cc 	sub.w	r3, r3, #26112	@ 0x6600
 80067c4:	3b66      	subs	r3, #102	@ 0x66
 80067c6:	f8c4 3108 	str.w	r3, [r4, #264]	@ 0x108
        borderDown = borderColorPressed;
 80067ca:	f103 1333 	add.w	r3, r3, #3342387	@ 0x330033
 80067ce:	f503 534c 	add.w	r3, r3, #13056	@ 0x3300
 80067d2:	f8c4 310c 	str.w	r3, [r4, #268]	@ 0x10c
        handlePressedUpdated();
 80067d6:	4638      	mov	r0, r7
 80067d8:	f7fb ff95 	bl	8002706 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton1_1_1.setAction(flexButtonCallback);
 80067dc:	f504 53bd 	add.w	r3, r4, #6048	@ 0x17a0
 80067e0:	3314      	adds	r3, #20
        action = &callback;
 80067e2:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
    flexButton1_1_1.setPosition(60, 44, 120, 27);
 80067e6:	222c      	movs	r2, #44	@ 0x2c
 80067e8:	2378      	movs	r3, #120	@ 0x78
 80067ea:	f8cd 8000 	str.w	r8, [sp]
 80067ee:	4638      	mov	r0, r7
 80067f0:	213c      	movs	r1, #60	@ 0x3c
 80067f2:	f7fc f823 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80067f6:	4639      	mov	r1, r7
 80067f8:	4628      	mov	r0, r5
 80067fa:	f009 ff87 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(99, 48);
 80067fe:	9802      	ldr	r0, [sp, #8]
 8006800:	f8df 80f4 	ldr.w	r8, [pc, #244]	@ 80068f8 <_ZN30Screen5x5_superMergingViewBaseC1Ev+0x3a8>
 8006804:	2230      	movs	r2, #48	@ 0x30
 8006806:	2163      	movs	r1, #99	@ 0x63
 8006808:	f7fb fe4e 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800680c:	af1e      	add	r7, sp, #120	@ 0x78
        color = newColor;
 800680e:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
        boundingArea = calculateBoundingArea();
 8006812:	9902      	ldr	r1, [sp, #8]
        color = newColor;
 8006814:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
        boundingArea = calculateBoundingArea();
 8006818:	4638      	mov	r0, r7
        linespace = space;
 800681a:	f8a4 6144 	strh.w	r6, [r4, #324]	@ 0x144
        boundingArea = calculateBoundingArea();
 800681e:	f00c ff8f 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006822:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006826:	f504 73a6 	add.w	r3, r4, #332	@ 0x14c
 800682a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800682e:	2319      	movs	r3, #25
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YSHL));
 8006830:	9802      	ldr	r0, [sp, #8]
 8006832:	f8ad 308c 	strh.w	r3, [sp, #140]	@ 0x8c
 8006836:	a922      	add	r1, sp, #136	@ 0x88
 8006838:	f8cd 8088 	str.w	r8, [sp, #136]	@ 0x88
 800683c:	f00d fa1a 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006840:	9902      	ldr	r1, [sp, #8]
 8006842:	4628      	mov	r0, r5
 8006844:	f009 ff62 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(6, 12);
 8006848:	9803      	ldr	r0, [sp, #12]
 800684a:	220c      	movs	r2, #12
 800684c:	2106      	movs	r1, #6
 800684e:	f7fb fe2b 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006852:	4b28      	ldr	r3, [pc, #160]	@ (80068f4 <_ZN30Screen5x5_superMergingViewBaseC1Ev+0x3a4>)
        boundingArea = calculateBoundingArea();
 8006854:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8006856:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
        boundingArea = calculateBoundingArea();
 800685a:	4638      	mov	r0, r7
        linespace = space;
 800685c:	f8a4 618c 	strh.w	r6, [r4, #396]	@ 0x18c
        boundingArea = calculateBoundingArea();
 8006860:	f00c ff6e 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006864:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006868:	f504 73ca 	add.w	r3, r4, #404	@ 0x194
 800686c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006870:	2318      	movs	r3, #24
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HPBJ));
 8006872:	9803      	ldr	r0, [sp, #12]
 8006874:	f8ad 308c 	strh.w	r3, [sp, #140]	@ 0x8c
 8006878:	a922      	add	r1, sp, #136	@ 0x88
 800687a:	f8cd 8088 	str.w	r8, [sp, #136]	@ 0x88
 800687e:	f00d f9f9 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006882:	9903      	ldr	r1, [sp, #12]
 8006884:	4628      	mov	r0, r5
 8006886:	f009 ff41 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scoreContainer.setXY(135, 6);
 800688a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800688c:	2206      	movs	r2, #6
 800688e:	2187      	movs	r1, #135	@ 0x87
 8006890:	f7fb fe0a 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006894:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006896:	4628      	mov	r0, r5
 8006898:	f009 ff38 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bestContainer.setXY(180, 6);
 800689c:	980c      	ldr	r0, [sp, #48]	@ 0x30
 800689e:	2206      	movs	r2, #6
 80068a0:	21b4      	movs	r1, #180	@ 0xb4
 80068a2:	f7fb fe01 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80068a6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80068a8:	4628      	mov	r0, r5
 80068aa:	f009 ff2f 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super1.setXY(3, 80);
 80068ae:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80068b0:	2250      	movs	r2, #80	@ 0x50
 80068b2:	2103      	movs	r1, #3
 80068b4:	f7fb fdf8 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80068b8:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80068ba:	4628      	mov	r0, r5
 80068bc:	f009 ff26 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super2.setXY(49, 80);
 80068c0:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80068c2:	2250      	movs	r2, #80	@ 0x50
 80068c4:	2131      	movs	r1, #49	@ 0x31
 80068c6:	f7fb fdef 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80068ca:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80068cc:	4628      	mov	r0, r5
 80068ce:	f009 ff1d 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super3.setXY(96, 80);
 80068d2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80068d4:	2250      	movs	r2, #80	@ 0x50
 80068d6:	e011      	b.n	80068fc <_ZN30Screen5x5_superMergingViewBaseC1Ev+0x3ac>
 80068d8:	0802d640 	.word	0x0802d640
 80068dc:	0802d18c 	.word	0x0802d18c
 80068e0:	0802e4bc 	.word	0x0802e4bc
 80068e4:	0802d628 	.word	0x0802d628
 80068e8:	080063ed 	.word	0x080063ed
 80068ec:	ff776e65 	.word	0xff776e65
 80068f0:	ff006699 	.word	0xff006699
 80068f4:	ffe36e1b 	.word	0xffe36e1b
 80068f8:	0802d030 	.word	0x0802d030
 80068fc:	2160      	movs	r1, #96	@ 0x60
 80068fe:	f7fb fdd3 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006902:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8006904:	4628      	mov	r0, r5
 8006906:	f009 ff01 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super4.setXY(144, 80);
 800690a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800690c:	2250      	movs	r2, #80	@ 0x50
 800690e:	2190      	movs	r1, #144	@ 0x90
 8006910:	f7fb fdca 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006914:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8006916:	4628      	mov	r0, r5
 8006918:	f009 fef8 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super5.setXY(192, 80);
 800691c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 800691e:	2250      	movs	r2, #80	@ 0x50
 8006920:	21c0      	movs	r1, #192	@ 0xc0
 8006922:	f7fb fdc1 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006926:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8006928:	4628      	mov	r0, r5
 800692a:	f009 feef 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super6.setXY(3, 128);
 800692e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8006930:	2280      	movs	r2, #128	@ 0x80
 8006932:	2103      	movs	r1, #3
 8006934:	f7fb fdb8 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006938:	9912      	ldr	r1, [sp, #72]	@ 0x48
 800693a:	4628      	mov	r0, r5
 800693c:	f009 fee6 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super7.setXY(50, 128);
 8006940:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8006942:	2280      	movs	r2, #128	@ 0x80
 8006944:	2132      	movs	r1, #50	@ 0x32
 8006946:	f7fb fdaf 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800694a:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 800694c:	4628      	mov	r0, r5
 800694e:	f009 fedd 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super8.setXY(96, 128);
 8006952:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8006954:	2280      	movs	r2, #128	@ 0x80
 8006956:	2160      	movs	r1, #96	@ 0x60
 8006958:	f7fb fda6 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800695c:	9914      	ldr	r1, [sp, #80]	@ 0x50
 800695e:	4628      	mov	r0, r5
 8006960:	f009 fed4 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super9.setXY(144, 128);
 8006964:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8006966:	2280      	movs	r2, #128	@ 0x80
 8006968:	2190      	movs	r1, #144	@ 0x90
 800696a:	f7fb fd9d 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 800696e:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8006970:	4628      	mov	r0, r5
 8006972:	f009 fecb 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super10.setXY(192, 128);
 8006976:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8006978:	2280      	movs	r2, #128	@ 0x80
 800697a:	21c0      	movs	r1, #192	@ 0xc0
 800697c:	f7fb fd94 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006980:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8006982:	4628      	mov	r0, r5
 8006984:	f009 fec2 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super11.setXY(3, 176);
 8006988:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800698a:	22b0      	movs	r2, #176	@ 0xb0
 800698c:	2103      	movs	r1, #3
 800698e:	f7fb fd8b 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006992:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8006994:	4628      	mov	r0, r5
 8006996:	f009 feb9 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super12.setXY(49, 176);
 800699a:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800699c:	22b0      	movs	r2, #176	@ 0xb0
 800699e:	2131      	movs	r1, #49	@ 0x31
 80069a0:	f7fb fd82 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80069a4:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80069a6:	4628      	mov	r0, r5
 80069a8:	f009 feb0 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super13.setXY(96, 176);
 80069ac:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80069ae:	22b0      	movs	r2, #176	@ 0xb0
 80069b0:	2160      	movs	r1, #96	@ 0x60
 80069b2:	f7fb fd79 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80069b6:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80069b8:	4628      	mov	r0, r5
 80069ba:	f009 fea7 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super14.setXY(144, 176);
 80069be:	981a      	ldr	r0, [sp, #104]	@ 0x68
 80069c0:	22b0      	movs	r2, #176	@ 0xb0
 80069c2:	2190      	movs	r1, #144	@ 0x90
 80069c4:	f7fb fd70 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80069c8:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80069ca:	4628      	mov	r0, r5
 80069cc:	f009 fe9e 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super15.setXY(192, 176);
 80069d0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80069d2:	22b0      	movs	r2, #176	@ 0xb0
 80069d4:	21c0      	movs	r1, #192	@ 0xc0
 80069d6:	f7fb fd67 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80069da:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 80069dc:	4628      	mov	r0, r5
 80069de:	f009 fe95 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super16.setXY(3, 224);
 80069e2:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80069e4:	22e0      	movs	r2, #224	@ 0xe0
 80069e6:	2103      	movs	r1, #3
 80069e8:	f7fb fd5e 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80069ec:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80069ee:	4628      	mov	r0, r5
 80069f0:	f009 fe8c 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super17.setXY(50, 224);
 80069f4:	9804      	ldr	r0, [sp, #16]
 80069f6:	22e0      	movs	r2, #224	@ 0xe0
 80069f8:	2132      	movs	r1, #50	@ 0x32
 80069fa:	f7fb fd55 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80069fe:	9904      	ldr	r1, [sp, #16]
 8006a00:	4628      	mov	r0, r5
 8006a02:	f009 fe83 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super18.setXY(97, 224);
 8006a06:	9805      	ldr	r0, [sp, #20]
 8006a08:	22e0      	movs	r2, #224	@ 0xe0
 8006a0a:	2161      	movs	r1, #97	@ 0x61
 8006a0c:	f7fb fd4c 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006a10:	9905      	ldr	r1, [sp, #20]
 8006a12:	4628      	mov	r0, r5
 8006a14:	f009 fe7a 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super19.setXY(145, 224);
 8006a18:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8006a1a:	22e0      	movs	r2, #224	@ 0xe0
 8006a1c:	2191      	movs	r1, #145	@ 0x91
 8006a1e:	f7fb fd43 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006a22:	991d      	ldr	r1, [sp, #116]	@ 0x74
 8006a24:	4628      	mov	r0, r5
 8006a26:	f009 fe71 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super20.setXY(192, 224);
 8006a2a:	9806      	ldr	r0, [sp, #24]
 8006a2c:	22e0      	movs	r2, #224	@ 0xe0
 8006a2e:	21c0      	movs	r1, #192	@ 0xc0
 8006a30:	f7fb fd3a 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006a34:	9906      	ldr	r1, [sp, #24]
 8006a36:	4628      	mov	r0, r5
 8006a38:	f009 fe68 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super21.setXY(3, 272);
 8006a3c:	9807      	ldr	r0, [sp, #28]
 8006a3e:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8006a42:	2103      	movs	r1, #3
 8006a44:	f7fb fd30 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006a48:	9907      	ldr	r1, [sp, #28]
 8006a4a:	4628      	mov	r0, r5
 8006a4c:	f009 fe5e 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super22.setXY(50, 272);
 8006a50:	9808      	ldr	r0, [sp, #32]
 8006a52:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8006a56:	2132      	movs	r1, #50	@ 0x32
 8006a58:	f7fb fd26 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006a5c:	9908      	ldr	r1, [sp, #32]
 8006a5e:	4628      	mov	r0, r5
 8006a60:	f009 fe54 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super23.setXY(98, 272);
 8006a64:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8006a68:	4648      	mov	r0, r9
 8006a6a:	2162      	movs	r1, #98	@ 0x62
 8006a6c:	f7fb fd1c 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006a70:	4649      	mov	r1, r9
 8006a72:	4628      	mov	r0, r5
 8006a74:	f009 fe4a 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super24.setXY(145, 272);
 8006a78:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8006a7c:	4650      	mov	r0, sl
 8006a7e:	2191      	movs	r1, #145	@ 0x91
 8006a80:	f7fb fd12 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006a84:	4651      	mov	r1, sl
 8006a86:	4628      	mov	r0, r5
 8006a88:	f009 fe40 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tile5x5_Super25.setXY(192, 272);
 8006a8c:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8006a90:	4658      	mov	r0, fp
 8006a92:	21c0      	movs	r1, #192	@ 0xc0
 8006a94:	f7fb fd08 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006a98:	4628      	mov	r0, r5
 8006a9a:	4659      	mov	r1, fp
 8006a9c:	f009 fe36 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006aa0:	4620      	mov	r0, r4
 8006aa2:	b025      	add	sp, #148	@ 0x94
 8006aa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006aa8 <_ZN8touchgfx8CallbackI26SelectedGameDesignViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006aa8:	4770      	bx	lr

08006aaa <_ZN26SelectedGameDesignViewBaseD1Ev>:
}

SelectedGameDesignViewBase::~SelectedGameDesignViewBase()
{

}
 8006aaa:	4770      	bx	lr

08006aac <_ZN26SelectedGameDesignViewBase11setupScreenEv>:

void SelectedGameDesignViewBase::setupScreen()
{

}
 8006aac:	4770      	bx	lr

08006aae <_ZN8touchgfx8CallbackI26SelectedGameDesignViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006aae:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006ab0:	68c2      	ldr	r2, [r0, #12]
 8006ab2:	6844      	ldr	r4, [r0, #4]
 8006ab4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006ab6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006ab8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006abc:	07d2      	lsls	r2, r2, #31
 8006abe:	bf48      	it	mi
 8006ac0:	5962      	ldrmi	r2, [r4, r5]
 8006ac2:	689b      	ldr	r3, [r3, #8]
    }
 8006ac4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006ac6:	bf48      	it	mi
 8006ac8:	58d3      	ldrmi	r3, [r2, r3]
 8006aca:	4718      	bx	r3

08006acc <_ZNK8touchgfx8CallbackI26SelectedGameDesignViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 8006acc:	4603      	mov	r3, r0
        return (pobject != 0) && (pmemfun != 0);
 8006ace:	6840      	ldr	r0, [r0, #4]
 8006ad0:	b130      	cbz	r0, 8006ae0 <_ZNK8touchgfx8CallbackI26SelectedGameDesignViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8006ad2:	689a      	ldr	r2, [r3, #8]
 8006ad4:	b91a      	cbnz	r2, 8006ade <_ZNK8touchgfx8CallbackI26SelectedGameDesignViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x12>
 8006ad6:	68d8      	ldr	r0, [r3, #12]
 8006ad8:	f000 0001 	and.w	r0, r0, #1
 8006adc:	4770      	bx	lr
 8006ade:	2001      	movs	r0, #1
    }
 8006ae0:	4770      	bx	lr

08006ae2 <_ZN8touchgfx8CallbackI26SelectedGameDesignViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006ae2:	b510      	push	{r4, lr}
 8006ae4:	2110      	movs	r1, #16
 8006ae6:	4604      	mov	r4, r0
 8006ae8:	f022 fe14 	bl	8029714 <_ZdlPvj>
 8006aec:	4620      	mov	r0, r4
 8006aee:	bd10      	pop	{r4, pc}

08006af0 <_ZN26SelectedGameDesignViewBaseD0Ev>:
SelectedGameDesignViewBase::~SelectedGameDesignViewBase()
 8006af0:	b510      	push	{r4, lr}
}
 8006af2:	f44f 717c 	mov.w	r1, #1008	@ 0x3f0
SelectedGameDesignViewBase::~SelectedGameDesignViewBase()
 8006af6:	4604      	mov	r4, r0
}
 8006af8:	f022 fe0c 	bl	8029714 <_ZdlPvj>
 8006afc:	4620      	mov	r0, r4
 8006afe:	bd10      	pop	{r4, pc}

08006b00 <_ZN26SelectedGameDesignViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void SelectedGameDesignViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 8006b00:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btn3x3)
 8006b02:	f100 03e0 	add.w	r3, r0, #224	@ 0xe0
 8006b06:	4299      	cmp	r1, r3
{
 8006b08:	4604      	mov	r4, r0
 8006b0a:	460d      	mov	r5, r1
    if (&src == &btn3x3)
 8006b0c:	d103      	bne.n	8006b16 <_ZN26SelectedGameDesignViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    virtual ~SelectedGameDesignViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006b0e:	f00f ff45 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When btn3x3 clicked change screen to Screen3x3
        //Go to Screen3x3 with screen transition towards East
        application().gotoScreen3x3ScreenCoverTransitionEast();
 8006b12:	f7fc fb01 	bl	8003118 <_ZN23FrontendApplicationBase38gotoScreen3x3ScreenCoverTransitionEastEv>
    }
    if (&src == &btn4x4)
 8006b16:	f504 73ac 	add.w	r3, r4, #344	@ 0x158
 8006b1a:	429d      	cmp	r5, r3
 8006b1c:	d103      	bne.n	8006b26 <_ZN26SelectedGameDesignViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
 8006b1e:	f00f ff3d 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When btn4x4 clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards East
        application().gotoMainScreenScreenCoverTransitionEast();
 8006b22:	f7fc fb09 	bl	8003138 <_ZN23FrontendApplicationBase39gotoMainScreenScreenCoverTransitionEastEv>
    }
    if (&src == &btn5x5)
 8006b26:	f504 73e8 	add.w	r3, r4, #464	@ 0x1d0
 8006b2a:	429d      	cmp	r5, r3
 8006b2c:	d103      	bne.n	8006b36 <_ZN26SelectedGameDesignViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
 8006b2e:	f00f ff35 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When btn5x5 clicked change screen to Screen5x5
        //Go to Screen5x5 with screen transition towards East
        application().gotoScreen5x5ScreenCoverTransitionEast();
 8006b32:	f7fc fad1 	bl	80030d8 <_ZN23FrontendApplicationBase38gotoScreen5x5ScreenCoverTransitionEastEv>
    }
    if (&src == &flexButton1)
 8006b36:	f504 7448 	add.w	r4, r4, #800	@ 0x320
 8006b3a:	42a5      	cmp	r5, r4
 8006b3c:	d105      	bne.n	8006b4a <_ZN26SelectedGameDesignViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x4a>
 8006b3e:	f00f ff2d 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction4
        //When flexButton1 clicked change screen to Chosing_mode
        //Go to Chosing_mode with screen transition towards East
        application().gotoChosing_modeScreenWipeTransitionEast();
    }
}
 8006b42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoChosing_modeScreenWipeTransitionEast();
 8006b46:	f7fc baa7 	b.w	8003098 <_ZN23FrontendApplicationBase40gotoChosing_modeScreenWipeTransitionEastEv>
}
 8006b4a:	bd38      	pop	{r3, r4, r5, pc}

08006b4c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8006b4c:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8006b4e:	6703      	str	r3, [r0, #112]	@ 0x70
        borderDown = borderColorPressed;
 8006b50:	9b01      	ldr	r3, [sp, #4]
 8006b52:	6743      	str	r3, [r0, #116]	@ 0x74
        handlePressedUpdated();
 8006b54:	6803      	ldr	r3, [r0, #0]
    }
 8006b56:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8006b5a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        down = colorPressed;
 8006b5e:	e9c0 121a 	strd	r1, r2, [r0, #104]	@ 0x68
        handlePressedUpdated();
 8006b62:	4718      	bx	r3

08006b64 <_ZN26SelectedGameDesignViewBaseC1Ev>:
SelectedGameDesignViewBase::SelectedGameDesignViewBase() :
 8006b64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b68:	4604      	mov	r4, r0
 8006b6a:	b093      	sub	sp, #76	@ 0x4c
    flexButtonCallback(this, &SelectedGameDesignViewBase::flexButtonCallbackHandler)
 8006b6c:	46a0      	mov	r8, r4
 8006b6e:	2500      	movs	r5, #0
 8006b70:	f011 ff8a 	bl	8018a88 <_ZN8touchgfx6ScreenC1Ev>
 8006b74:	4bd0      	ldr	r3, [pc, #832]	@ (8006eb8 <_ZN26SelectedGameDesignViewBaseC1Ev+0x354>)
 8006b76:	63e5      	str	r5, [r4, #60]	@ 0x3c
 8006b78:	f848 3b40 	str.w	r3, [r8], #64
 8006b7c:	f104 0a6c 	add.w	sl, r4, #108	@ 0x6c
 8006b80:	4640      	mov	r0, r8
 8006b82:	f7fb fe6f 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 8006b86:	f104 0798 	add.w	r7, r4, #152	@ 0x98
 8006b8a:	4650      	mov	r0, sl
 8006b8c:	f7fb fe6a 	bl	8002864 <_ZN8touchgfx3BoxC1Ev>
 8006b90:	4638      	mov	r0, r7
 8006b92:	f7fb fc97 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006b96:	f104 03e0 	add.w	r3, r4, #224	@ 0xe0
 8006b9a:	4618      	mov	r0, r3
 8006b9c:	9307      	str	r3, [sp, #28]
 8006b9e:	f7fb fe75 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8006ba2:	f504 73ac 	add.w	r3, r4, #344	@ 0x158
 8006ba6:	4618      	mov	r0, r3
 8006ba8:	9308      	str	r3, [sp, #32]
 8006baa:	f7fb fe6f 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8006bae:	f504 73e8 	add.w	r3, r4, #464	@ 0x1d0
 8006bb2:	4618      	mov	r0, r3
 8006bb4:	9309      	str	r3, [sp, #36]	@ 0x24
 8006bb6:	f7fb fe69 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8006bba:	f504 7312 	add.w	r3, r4, #584	@ 0x248
 8006bbe:	4618      	mov	r0, r3
 8006bc0:	9303      	str	r3, [sp, #12]
 8006bc2:	f7fb fc7f 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006bc6:	f504 7324 	add.w	r3, r4, #656	@ 0x290
 8006bca:	4618      	mov	r0, r3
 8006bcc:	9304      	str	r3, [sp, #16]
 8006bce:	f7fb fc79 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006bd2:	f504 7336 	add.w	r3, r4, #728	@ 0x2d8
 8006bd6:	4618      	mov	r0, r3
 8006bd8:	9305      	str	r3, [sp, #20]
 8006bda:	f7fb fc73 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
 8006bde:	f504 7348 	add.w	r3, r4, #800	@ 0x320
 8006be2:	4618      	mov	r0, r3
 8006be4:	930a      	str	r3, [sp, #40]	@ 0x28
 8006be6:	f7fb fe51 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8006bea:	f504 7366 	add.w	r3, r4, #920	@ 0x398
 8006bee:	4618      	mov	r0, r3
 8006bf0:	9306      	str	r3, [sp, #24]
 8006bf2:	f7fb fc67 	bl	80024c4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006bf6:	4bb1      	ldr	r3, [pc, #708]	@ (8006ebc <_ZN26SelectedGameDesignViewBaseC1Ev+0x358>)
 8006bf8:	e9c4 34f8 	strd	r3, r4, [r4, #992]	@ 0x3e0
 8006bfc:	4bb0      	ldr	r3, [pc, #704]	@ (8006ec0 <_ZN26SelectedGameDesignViewBaseC1Ev+0x35c>)
    __background.setPosition(0, 0, 240, 320);
 8006bfe:	f44f 7ba0 	mov.w	fp, #320	@ 0x140
 8006c02:	1d26      	adds	r6, r4, #4
 8006c04:	f04f 497f 	mov.w	r9, #4278190080	@ 0xff000000
 8006c08:	e9c4 35fa 	strd	r3, r5, [r4, #1000]	@ 0x3e8
 8006c0c:	462a      	mov	r2, r5
 8006c0e:	f8cd b000 	str.w	fp, [sp]
 8006c12:	23f0      	movs	r3, #240	@ 0xf0
 8006c14:	4629      	mov	r1, r5
 8006c16:	4640      	mov	r0, r8
 8006c18:	f7fb fe10 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c1c:	4641      	mov	r1, r8
 8006c1e:	4630      	mov	r0, r6
 8006c20:	f8c4 9068 	str.w	r9, [r4, #104]	@ 0x68
 8006c24:	f009 fd72 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 240, 320);
 8006c28:	462a      	mov	r2, r5
 8006c2a:	f8cd b000 	str.w	fp, [sp]
 8006c2e:	4629      	mov	r1, r5
 8006c30:	4650      	mov	r0, sl
 8006c32:	23f0      	movs	r3, #240	@ 0xf0
 8006c34:	f7fb fe02 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c38:	4ba2      	ldr	r3, [pc, #648]	@ (8006ec4 <_ZN26SelectedGameDesignViewBaseC1Ev+0x360>)
 8006c3a:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8006c3e:	4651      	mov	r1, sl
 8006c40:	4630      	mov	r0, r6
 8006c42:	f10d 0830 	add.w	r8, sp, #48	@ 0x30
 8006c46:	f009 fd61 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(71, 24);
 8006c4a:	2218      	movs	r2, #24
 8006c4c:	4638      	mov	r0, r7
 8006c4e:	2147      	movs	r1, #71	@ 0x47
 8006c50:	f7fb fc2a 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006c54:	4639      	mov	r1, r7
 8006c56:	4640      	mov	r0, r8
        color = newColor;
 8006c58:	f8c4 90c8 	str.w	r9, [r4, #200]	@ 0xc8
        linespace = space;
 8006c5c:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        boundingArea = calculateBoundingArea();
 8006c60:	f00c fd6e 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006c64:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006c68:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
 8006c6c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006c70:	f8df a260 	ldr.w	sl, [pc, #608]	@ 8006ed4 <_ZN26SelectedGameDesignViewBaseC1Ev+0x370>
 8006c74:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 8006c78:	f04f 0b05 	mov.w	fp, #5
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JX2K));
 8006c7c:	a910      	add	r1, sp, #64	@ 0x40
 8006c7e:	4638      	mov	r0, r7
 8006c80:	f8ad b044 	strh.w	fp, [sp, #68]	@ 0x44
 8006c84:	f00c fff6 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c88:	4639      	mov	r1, r7
 8006c8a:	4630      	mov	r0, r6
        borderBox.setPosition(x, y, width, height);
 8006c8c:	2732      	movs	r7, #50	@ 0x32
 8006c8e:	f009 fd3d 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c92:	463b      	mov	r3, r7
 8006c94:	462a      	mov	r2, r5
 8006c96:	4629      	mov	r1, r5
 8006c98:	f504 708a 	add.w	r0, r4, #276	@ 0x114
 8006c9c:	9700      	str	r7, [sp, #0]
 8006c9e:	f7fb fdcd 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    btn3x3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006ca2:	4b89      	ldr	r3, [pc, #548]	@ (8006ec8 <_ZN26SelectedGameDesignViewBaseC1Ev+0x364>)
 8006ca4:	f8a4 b144 	strh.w	fp, [r4, #324]	@ 0x144
 8006ca8:	9300      	str	r3, [sp, #0]
 8006caa:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8006cae:	9807      	ldr	r0, [sp, #28]
 8006cb0:	4a86      	ldr	r2, [pc, #536]	@ (8006ecc <_ZN26SelectedGameDesignViewBaseC1Ev+0x368>)
 8006cb2:	4987      	ldr	r1, [pc, #540]	@ (8006ed0 <_ZN26SelectedGameDesignViewBaseC1Ev+0x36c>)
 8006cb4:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8006cb8:	f7ff ff48 	bl	8006b4c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    btn3x3.setAction(flexButtonCallback);
 8006cbc:	f504 7278 	add.w	r2, r4, #992	@ 0x3e0
 8006cc0:	f8c4 2110 	str.w	r2, [r4, #272]	@ 0x110
    btn3x3.setPosition(95, 62, 50, 50);
 8006cc4:	463b      	mov	r3, r7
 8006cc6:	9807      	ldr	r0, [sp, #28]
    btn3x3.setAction(flexButtonCallback);
 8006cc8:	920b      	str	r2, [sp, #44]	@ 0x2c
    btn3x3.setPosition(95, 62, 50, 50);
 8006cca:	9700      	str	r7, [sp, #0]
 8006ccc:	223e      	movs	r2, #62	@ 0x3e
 8006cce:	215f      	movs	r1, #95	@ 0x5f
 8006cd0:	f7fb fdb4 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006cd4:	9907      	ldr	r1, [sp, #28]
 8006cd6:	4630      	mov	r0, r6
 8006cd8:	f009 fd18 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006cdc:	463b      	mov	r3, r7
 8006cde:	462a      	mov	r2, r5
 8006ce0:	4629      	mov	r1, r5
 8006ce2:	f504 70c6 	add.w	r0, r4, #396	@ 0x18c
 8006ce6:	9700      	str	r7, [sp, #0]
 8006ce8:	f7fb fda8 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    btn4x4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006cec:	4b76      	ldr	r3, [pc, #472]	@ (8006ec8 <_ZN26SelectedGameDesignViewBaseC1Ev+0x364>)
 8006cee:	f8a4 b1bc 	strh.w	fp, [r4, #444]	@ 0x1bc
 8006cf2:	9300      	str	r3, [sp, #0]
 8006cf4:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8006cf8:	9808      	ldr	r0, [sp, #32]
 8006cfa:	4a74      	ldr	r2, [pc, #464]	@ (8006ecc <_ZN26SelectedGameDesignViewBaseC1Ev+0x368>)
 8006cfc:	4974      	ldr	r1, [pc, #464]	@ (8006ed0 <_ZN26SelectedGameDesignViewBaseC1Ev+0x36c>)
 8006cfe:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8006d02:	f7ff ff23 	bl	8006b4c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8006d06:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8006d08:	f8c4 2188 	str.w	r2, [r4, #392]	@ 0x188
    btn4x4.setPosition(95, 126, 50, 50);
 8006d0c:	463b      	mov	r3, r7
 8006d0e:	9808      	ldr	r0, [sp, #32]
 8006d10:	9700      	str	r7, [sp, #0]
 8006d12:	227e      	movs	r2, #126	@ 0x7e
 8006d14:	215f      	movs	r1, #95	@ 0x5f
 8006d16:	f7fb fd91 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d1a:	9908      	ldr	r1, [sp, #32]
 8006d1c:	4630      	mov	r0, r6
 8006d1e:	f009 fcf5 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006d22:	463b      	mov	r3, r7
 8006d24:	462a      	mov	r2, r5
 8006d26:	4629      	mov	r1, r5
 8006d28:	f504 7001 	add.w	r0, r4, #516	@ 0x204
 8006d2c:	9700      	str	r7, [sp, #0]
 8006d2e:	f7fb fd85 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    btn5x5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006d32:	4b65      	ldr	r3, [pc, #404]	@ (8006ec8 <_ZN26SelectedGameDesignViewBaseC1Ev+0x364>)
 8006d34:	f8a4 b234 	strh.w	fp, [r4, #564]	@ 0x234
 8006d38:	9300      	str	r3, [sp, #0]
 8006d3a:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8006d3e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006d40:	4a62      	ldr	r2, [pc, #392]	@ (8006ecc <_ZN26SelectedGameDesignViewBaseC1Ev+0x368>)
 8006d42:	4963      	ldr	r1, [pc, #396]	@ (8006ed0 <_ZN26SelectedGameDesignViewBaseC1Ev+0x36c>)
 8006d44:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8006d48:	f7ff ff00 	bl	8006b4c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8006d4c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8006d4e:	f8c4 2200 	str.w	r2, [r4, #512]	@ 0x200
    btn5x5.setPosition(95, 187, 50, 50);
 8006d52:	463b      	mov	r3, r7
 8006d54:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006d56:	9700      	str	r7, [sp, #0]
 8006d58:	22bb      	movs	r2, #187	@ 0xbb
 8006d5a:	215f      	movs	r1, #95	@ 0x5f
 8006d5c:	f7fb fd6e 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d60:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8006d62:	4630      	mov	r0, r6
 8006d64:	f009 fcd2 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_1.setXY(104, 78);
 8006d68:	9803      	ldr	r0, [sp, #12]
 8006d6a:	224e      	movs	r2, #78	@ 0x4e
 8006d6c:	2168      	movs	r1, #104	@ 0x68
 8006d6e:	f7fb fb9b 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006d72:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8006d74:	f8c4 9278 	str.w	r9, [r4, #632]	@ 0x278
        boundingArea = calculateBoundingArea();
 8006d78:	4640      	mov	r0, r8
        linespace = space;
 8006d7a:	f8a4 527c 	strh.w	r5, [r4, #636]	@ 0x27c
        boundingArea = calculateBoundingArea();
 8006d7e:	f00c fcdf 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d82:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d86:	f504 7321 	add.w	r3, r4, #644	@ 0x284
 8006d8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d8e:	2304      	movs	r3, #4
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X8CX));
 8006d90:	9803      	ldr	r0, [sp, #12]
 8006d92:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8006d96:	a910      	add	r1, sp, #64	@ 0x40
 8006d98:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 8006d9c:	f00c ff6a 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006da0:	9903      	ldr	r1, [sp, #12]
 8006da2:	4630      	mov	r0, r6
 8006da4:	f009 fcb2 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(104, 142);
 8006da8:	9804      	ldr	r0, [sp, #16]
 8006daa:	228e      	movs	r2, #142	@ 0x8e
 8006dac:	2168      	movs	r1, #104	@ 0x68
 8006dae:	f7fb fb7b 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006db2:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8006db4:	f8c4 92c0 	str.w	r9, [r4, #704]	@ 0x2c0
        boundingArea = calculateBoundingArea();
 8006db8:	4640      	mov	r0, r8
        linespace = space;
 8006dba:	f8a4 52c4 	strh.w	r5, [r4, #708]	@ 0x2c4
        boundingArea = calculateBoundingArea();
 8006dbe:	f00c fcbf 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006dc2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006dc6:	f504 7333 	add.w	r3, r4, #716	@ 0x2cc
 8006dca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006dce:	2303      	movs	r3, #3
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KCEC));
 8006dd0:	9804      	ldr	r0, [sp, #16]
 8006dd2:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8006dd6:	a910      	add	r1, sp, #64	@ 0x40
 8006dd8:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 8006ddc:	f00c ff4a 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006de0:	9904      	ldr	r1, [sp, #16]
 8006de2:	4630      	mov	r0, r6
 8006de4:	f009 fc92 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_2.setXY(104, 203);
 8006de8:	9805      	ldr	r0, [sp, #20]
 8006dea:	22cb      	movs	r2, #203	@ 0xcb
 8006dec:	2168      	movs	r1, #104	@ 0x68
 8006dee:	f7fb fb5b 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006df2:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8006df4:	f8c4 9308 	str.w	r9, [r4, #776]	@ 0x308
        boundingArea = calculateBoundingArea();
 8006df8:	4640      	mov	r0, r8
        linespace = space;
 8006dfa:	f8a4 530c 	strh.w	r5, [r4, #780]	@ 0x30c
        boundingArea = calculateBoundingArea();
 8006dfe:	f00c fc9f 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e02:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e06:	f504 7345 	add.w	r3, r4, #788	@ 0x314
 8006e0a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e0e:	2302      	movs	r3, #2
    textArea1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y1K1));
 8006e10:	9805      	ldr	r0, [sp, #20]
 8006e12:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8006e16:	a910      	add	r1, sp, #64	@ 0x40
 8006e18:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 8006e1c:	f00c ff2a 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e20:	9905      	ldr	r1, [sp, #20]
 8006e22:	4630      	mov	r0, r6
 8006e24:	f009 fc72 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006e28:	463b      	mov	r3, r7
 8006e2a:	462a      	mov	r2, r5
 8006e2c:	4629      	mov	r1, r5
 8006e2e:	f504 7055 	add.w	r0, r4, #852	@ 0x354
 8006e32:	9700      	str	r7, [sp, #0]
 8006e34:	f7fb fd02 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006e38:	4b23      	ldr	r3, [pc, #140]	@ (8006ec8 <_ZN26SelectedGameDesignViewBaseC1Ev+0x364>)
 8006e3a:	f8a4 b384 	strh.w	fp, [r4, #900]	@ 0x384
 8006e3e:	9300      	str	r3, [sp, #0]
 8006e40:	f1a3 1333 	sub.w	r3, r3, #3342387	@ 0x330033
 8006e44:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006e46:	4a21      	ldr	r2, [pc, #132]	@ (8006ecc <_ZN26SelectedGameDesignViewBaseC1Ev+0x368>)
 8006e48:	4921      	ldr	r1, [pc, #132]	@ (8006ed0 <_ZN26SelectedGameDesignViewBaseC1Ev+0x36c>)
 8006e4a:	f5a3 534c 	sub.w	r3, r3, #13056	@ 0x3300
 8006e4e:	f7ff fe7d 	bl	8006b4c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8006e52:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006e54:	f8c4 3350 	str.w	r3, [r4, #848]	@ 0x350
    flexButton1.setPosition(95, 246, 50, 50);
 8006e58:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006e5a:	9700      	str	r7, [sp, #0]
 8006e5c:	463b      	mov	r3, r7
 8006e5e:	22f6      	movs	r2, #246	@ 0xf6
 8006e60:	215f      	movs	r1, #95	@ 0x5f
 8006e62:	f7fb fceb 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e66:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006e68:	4630      	mov	r0, r6
 8006e6a:	f009 fc4f 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(100, 262);
 8006e6e:	9806      	ldr	r0, [sp, #24]
 8006e70:	f44f 7283 	mov.w	r2, #262	@ 0x106
 8006e74:	2164      	movs	r1, #100	@ 0x64
 8006e76:	f7fb fb17 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8006e7a:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8006e7c:	f8c4 93c8 	str.w	r9, [r4, #968]	@ 0x3c8
        boundingArea = calculateBoundingArea();
 8006e80:	4640      	mov	r0, r8
        linespace = space;
 8006e82:	f8a4 53cc 	strh.w	r5, [r4, #972]	@ 0x3cc
        boundingArea = calculateBoundingArea();
 8006e86:	f00c fc5b 	bl	8013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e8a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e8e:	f504 7375 	add.w	r3, r4, #980	@ 0x3d4
 8006e92:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e96:	2301      	movs	r3, #1
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L2SX));
 8006e98:	9806      	ldr	r0, [sp, #24]
 8006e9a:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8006e9e:	a910      	add	r1, sp, #64	@ 0x40
 8006ea0:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 8006ea4:	f00c fee6 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ea8:	4630      	mov	r0, r6
 8006eaa:	9906      	ldr	r1, [sp, #24]
 8006eac:	f009 fc2e 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006eb0:	4620      	mov	r0, r4
 8006eb2:	b013      	add	sp, #76	@ 0x4c
 8006eb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006eb8:	0802d68c 	.word	0x0802d68c
 8006ebc:	0802d674 	.word	0x0802d674
 8006ec0:	08006b01 	.word	0x08006b01
 8006ec4:	ff705454 	.word	0xff705454
 8006ec8:	ff336699 	.word	0xff336699
 8006ecc:	ff0099cc 	.word	0xff0099cc
 8006ed0:	ff006699 	.word	0xff006699
 8006ed4:	0802d030 	.word	0x0802d030

08006ed8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006ed8:	4770      	bx	lr
	...

08006edc <_Z23getFont_verdana_10_4bppv>:
{
 8006edc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006ede:	4d16      	ldr	r5, [pc, #88]	@ (8006f38 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8006ee0:	682c      	ldr	r4, [r5, #0]
 8006ee2:	f014 0401 	ands.w	r4, r4, #1
{
 8006ee6:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006ee8:	f3bf 8f5b 	dmb	ish
 8006eec:	d120      	bne.n	8006f30 <_Z23getFont_verdana_10_4bppv+0x54>
 8006eee:	4628      	mov	r0, r5
 8006ef0:	f022 fc12 	bl	8029718 <__cxa_guard_acquire>
 8006ef4:	b1e0      	cbz	r0, 8006f30 <_Z23getFont_verdana_10_4bppv+0x54>
 8006ef6:	233f      	movs	r3, #63	@ 0x3f
 8006ef8:	9309      	str	r3, [sp, #36]	@ 0x24
 8006efa:	4b10      	ldr	r3, [pc, #64]	@ (8006f3c <_Z23getFont_verdana_10_4bppv+0x60>)
 8006efc:	9308      	str	r3, [sp, #32]
 8006efe:	4b10      	ldr	r3, [pc, #64]	@ (8006f40 <_Z23getFont_verdana_10_4bppv+0x64>)
 8006f00:	4910      	ldr	r1, [pc, #64]	@ (8006f44 <_Z23getFont_verdana_10_4bppv+0x68>)
 8006f02:	4811      	ldr	r0, [pc, #68]	@ (8006f48 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8006f04:	940a      	str	r4, [sp, #40]	@ 0x28
 8006f06:	2201      	movs	r2, #1
 8006f08:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8006f0c:	2304      	movs	r3, #4
 8006f0e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8006f12:	230a      	movs	r3, #10
 8006f14:	9300      	str	r3, [sp, #0]
 8006f16:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8006f1a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8006f1e:	9405      	str	r4, [sp, #20]
 8006f20:	f7fd fb9a 	bl	8004658 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006f24:	4809      	ldr	r0, [pc, #36]	@ (8006f4c <_Z23getFont_verdana_10_4bppv+0x70>)
 8006f26:	f023 fb4f 	bl	802a5c8 <atexit>
 8006f2a:	4628      	mov	r0, r5
 8006f2c:	f022 fc00 	bl	8029730 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8006f30:	4805      	ldr	r0, [pc, #20]	@ (8006f48 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8006f32:	b00f      	add	sp, #60	@ 0x3c
 8006f34:	bd30      	pop	{r4, r5, pc}
 8006f36:	bf00      	nop
 8006f38:	20003090 	.word	0x20003090
 8006f3c:	08030f24 	.word	0x08030f24
 8006f40:	08030f38 	.word	0x08030f38
 8006f44:	08030960 	.word	0x08030960
 8006f48:	20003094 	.word	0x20003094
 8006f4c:	08006ed9 	.word	0x08006ed9

08006f50 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdanab_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdanab_10_4bpp();

touchgfx::GeneratedFont& getFont_verdanab_10_4bpp()
{
    static touchgfx::GeneratedFont verdanab_10_4bpp(glyphs_verdanab_10_4bpp, 45, 12, 10, 0, 0, 4, 1, 0, 1, unicodes_verdanab_10_4bpp, kerning_verdanab_10_4bpp, 63, 0, 0, 0);
 8006f50:	4770      	bx	lr
	...

08006f54 <_Z24getFont_verdanab_10_4bppv>:
{
 8006f54:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdanab_10_4bpp(glyphs_verdanab_10_4bpp, 45, 12, 10, 0, 0, 4, 1, 0, 1, unicodes_verdanab_10_4bpp, kerning_verdanab_10_4bpp, 63, 0, 0, 0);
 8006f56:	4d17      	ldr	r5, [pc, #92]	@ (8006fb4 <_Z24getFont_verdanab_10_4bppv+0x60>)
 8006f58:	682c      	ldr	r4, [r5, #0]
 8006f5a:	f014 0401 	ands.w	r4, r4, #1
{
 8006f5e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdanab_10_4bpp(glyphs_verdanab_10_4bpp, 45, 12, 10, 0, 0, 4, 1, 0, 1, unicodes_verdanab_10_4bpp, kerning_verdanab_10_4bpp, 63, 0, 0, 0);
 8006f60:	f3bf 8f5b 	dmb	ish
 8006f64:	d122      	bne.n	8006fac <_Z24getFont_verdanab_10_4bppv+0x58>
 8006f66:	4628      	mov	r0, r5
 8006f68:	f022 fbd6 	bl	8029718 <__cxa_guard_acquire>
 8006f6c:	b1f0      	cbz	r0, 8006fac <_Z24getFont_verdanab_10_4bppv+0x58>
 8006f6e:	233f      	movs	r3, #63	@ 0x3f
 8006f70:	9309      	str	r3, [sp, #36]	@ 0x24
 8006f72:	4b11      	ldr	r3, [pc, #68]	@ (8006fb8 <_Z24getFont_verdanab_10_4bppv+0x64>)
 8006f74:	9308      	str	r3, [sp, #32]
 8006f76:	4b11      	ldr	r3, [pc, #68]	@ (8006fbc <_Z24getFont_verdanab_10_4bppv+0x68>)
 8006f78:	9307      	str	r3, [sp, #28]
 8006f7a:	2301      	movs	r3, #1
 8006f7c:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8006f80:	9304      	str	r3, [sp, #16]
 8006f82:	2304      	movs	r3, #4
 8006f84:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8006f88:	230a      	movs	r3, #10
 8006f8a:	490d      	ldr	r1, [pc, #52]	@ (8006fc0 <_Z24getFont_verdanab_10_4bppv+0x6c>)
 8006f8c:	9300      	str	r3, [sp, #0]
 8006f8e:	222d      	movs	r2, #45	@ 0x2d
 8006f90:	230c      	movs	r3, #12
 8006f92:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8006f96:	480b      	ldr	r0, [pc, #44]	@ (8006fc4 <_Z24getFont_verdanab_10_4bppv+0x70>)
 8006f98:	940a      	str	r4, [sp, #40]	@ 0x28
 8006f9a:	9401      	str	r4, [sp, #4]
 8006f9c:	f7fd fb5c 	bl	8004658 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006fa0:	4809      	ldr	r0, [pc, #36]	@ (8006fc8 <_Z24getFont_verdanab_10_4bppv+0x74>)
 8006fa2:	f023 fb11 	bl	802a5c8 <atexit>
 8006fa6:	4628      	mov	r0, r5
 8006fa8:	f022 fbc2 	bl	8029730 <__cxa_guard_release>
    return verdanab_10_4bpp;
}
 8006fac:	4805      	ldr	r0, [pc, #20]	@ (8006fc4 <_Z24getFont_verdanab_10_4bppv+0x70>)
 8006fae:	b00f      	add	sp, #60	@ 0x3c
 8006fb0:	bd30      	pop	{r4, r5, pc}
 8006fb2:	bf00      	nop
 8006fb4:	200030c0 	.word	0x200030c0
 8006fb8:	08030f28 	.word	0x08030f28
 8006fbc:	08030f3c 	.word	0x08030f3c
 8006fc0:	08030970 	.word	0x08030970
 8006fc4:	200030c4 	.word	0x200030c4
 8006fc8:	08006f51 	.word	0x08006f51

08006fcc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdanab_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdanab_15_4bpp();

touchgfx::GeneratedFont& getFont_verdanab_15_4bpp()
{
    static touchgfx::GeneratedFont verdanab_15_4bpp(glyphs_verdanab_15_4bpp, 23, 18, 15, 0, 0, 4, 1, 0, 1, unicodes_verdanab_15_4bpp, kerning_verdanab_15_4bpp, 63, 0, 0, 0);
 8006fcc:	4770      	bx	lr
	...

08006fd0 <_Z24getFont_verdanab_15_4bppv>:
{
 8006fd0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdanab_15_4bpp(glyphs_verdanab_15_4bpp, 23, 18, 15, 0, 0, 4, 1, 0, 1, unicodes_verdanab_15_4bpp, kerning_verdanab_15_4bpp, 63, 0, 0, 0);
 8006fd2:	4d17      	ldr	r5, [pc, #92]	@ (8007030 <_Z24getFont_verdanab_15_4bppv+0x60>)
 8006fd4:	682c      	ldr	r4, [r5, #0]
 8006fd6:	f014 0401 	ands.w	r4, r4, #1
{
 8006fda:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdanab_15_4bpp(glyphs_verdanab_15_4bpp, 23, 18, 15, 0, 0, 4, 1, 0, 1, unicodes_verdanab_15_4bpp, kerning_verdanab_15_4bpp, 63, 0, 0, 0);
 8006fdc:	f3bf 8f5b 	dmb	ish
 8006fe0:	d122      	bne.n	8007028 <_Z24getFont_verdanab_15_4bppv+0x58>
 8006fe2:	4628      	mov	r0, r5
 8006fe4:	f022 fb98 	bl	8029718 <__cxa_guard_acquire>
 8006fe8:	b1f0      	cbz	r0, 8007028 <_Z24getFont_verdanab_15_4bppv+0x58>
 8006fea:	233f      	movs	r3, #63	@ 0x3f
 8006fec:	9309      	str	r3, [sp, #36]	@ 0x24
 8006fee:	4b11      	ldr	r3, [pc, #68]	@ (8007034 <_Z24getFont_verdanab_15_4bppv+0x64>)
 8006ff0:	9308      	str	r3, [sp, #32]
 8006ff2:	4b11      	ldr	r3, [pc, #68]	@ (8007038 <_Z24getFont_verdanab_15_4bppv+0x68>)
 8006ff4:	9307      	str	r3, [sp, #28]
 8006ff6:	2301      	movs	r3, #1
 8006ff8:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8006ffc:	9304      	str	r3, [sp, #16]
 8006ffe:	2304      	movs	r3, #4
 8007000:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007004:	230f      	movs	r3, #15
 8007006:	490d      	ldr	r1, [pc, #52]	@ (800703c <_Z24getFont_verdanab_15_4bppv+0x6c>)
 8007008:	9300      	str	r3, [sp, #0]
 800700a:	2217      	movs	r2, #23
 800700c:	2312      	movs	r3, #18
 800700e:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8007012:	480b      	ldr	r0, [pc, #44]	@ (8007040 <_Z24getFont_verdanab_15_4bppv+0x70>)
 8007014:	940a      	str	r4, [sp, #40]	@ 0x28
 8007016:	9401      	str	r4, [sp, #4]
 8007018:	f7fd fb1e 	bl	8004658 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800701c:	4809      	ldr	r0, [pc, #36]	@ (8007044 <_Z24getFont_verdanab_15_4bppv+0x74>)
 800701e:	f023 fad3 	bl	802a5c8 <atexit>
 8007022:	4628      	mov	r0, r5
 8007024:	f022 fb84 	bl	8029730 <__cxa_guard_release>
    return verdanab_15_4bpp;
}
 8007028:	4805      	ldr	r0, [pc, #20]	@ (8007040 <_Z24getFont_verdanab_15_4bppv+0x70>)
 800702a:	b00f      	add	sp, #60	@ 0x3c
 800702c:	bd30      	pop	{r4, r5, pc}
 800702e:	bf00      	nop
 8007030:	200030f0 	.word	0x200030f0
 8007034:	08030f2c 	.word	0x08030f2c
 8007038:	08030f40 	.word	0x08030f40
 800703c:	08030be8 	.word	0x08030be8
 8007040:	200030f4 	.word	0x200030f4
 8007044:	08006fcd 	.word	0x08006fcd

08007048 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdanab_24_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdanab_24_4bpp();

touchgfx::GeneratedFont& getFont_verdanab_24_4bpp()
{
    static touchgfx::GeneratedFont verdanab_24_4bpp(glyphs_verdanab_24_4bpp, 8, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_verdanab_24_4bpp, kerning_verdanab_24_4bpp, 63, 0, 0, 0);
 8007048:	4770      	bx	lr
	...

0800704c <_Z24getFont_verdanab_24_4bppv>:
{
 800704c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdanab_24_4bpp(glyphs_verdanab_24_4bpp, 8, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_verdanab_24_4bpp, kerning_verdanab_24_4bpp, 63, 0, 0, 0);
 800704e:	4d16      	ldr	r5, [pc, #88]	@ (80070a8 <_Z24getFont_verdanab_24_4bppv+0x5c>)
 8007050:	682c      	ldr	r4, [r5, #0]
 8007052:	f014 0401 	ands.w	r4, r4, #1
{
 8007056:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdanab_24_4bpp(glyphs_verdanab_24_4bpp, 8, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_verdanab_24_4bpp, kerning_verdanab_24_4bpp, 63, 0, 0, 0);
 8007058:	f3bf 8f5b 	dmb	ish
 800705c:	d121      	bne.n	80070a2 <_Z24getFont_verdanab_24_4bppv+0x56>
 800705e:	4628      	mov	r0, r5
 8007060:	f022 fb5a 	bl	8029718 <__cxa_guard_acquire>
 8007064:	b1e8      	cbz	r0, 80070a2 <_Z24getFont_verdanab_24_4bppv+0x56>
 8007066:	233f      	movs	r3, #63	@ 0x3f
 8007068:	9309      	str	r3, [sp, #36]	@ 0x24
 800706a:	4b10      	ldr	r3, [pc, #64]	@ (80070ac <_Z24getFont_verdanab_24_4bppv+0x60>)
 800706c:	9308      	str	r3, [sp, #32]
 800706e:	4b10      	ldr	r3, [pc, #64]	@ (80070b0 <_Z24getFont_verdanab_24_4bppv+0x64>)
 8007070:	4910      	ldr	r1, [pc, #64]	@ (80070b4 <_Z24getFont_verdanab_24_4bppv+0x68>)
 8007072:	4811      	ldr	r0, [pc, #68]	@ (80070b8 <_Z24getFont_verdanab_24_4bppv+0x6c>)
 8007074:	940a      	str	r4, [sp, #40]	@ 0x28
 8007076:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800707a:	2201      	movs	r2, #1
 800707c:	2304      	movs	r3, #4
 800707e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007082:	2318      	movs	r3, #24
 8007084:	9300      	str	r3, [sp, #0]
 8007086:	2208      	movs	r2, #8
 8007088:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800708c:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007090:	9405      	str	r4, [sp, #20]
 8007092:	f7fd fae1 	bl	8004658 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007096:	4809      	ldr	r0, [pc, #36]	@ (80070bc <_Z24getFont_verdanab_24_4bppv+0x70>)
 8007098:	f023 fa96 	bl	802a5c8 <atexit>
 800709c:	4628      	mov	r0, r5
 800709e:	f022 fb47 	bl	8029730 <__cxa_guard_release>
    return verdanab_24_4bpp;
}
 80070a2:	4805      	ldr	r0, [pc, #20]	@ (80070b8 <_Z24getFont_verdanab_24_4bppv+0x6c>)
 80070a4:	b00f      	add	sp, #60	@ 0x3c
 80070a6:	bd30      	pop	{r4, r5, pc}
 80070a8:	20003120 	.word	0x20003120
 80070ac:	08030f30 	.word	0x08030f30
 80070b0:	08030f44 	.word	0x08030f44
 80070b4:	08030d2c 	.word	0x08030d2c
 80070b8:	20003124 	.word	0x20003124
 80070bc:	08007049 	.word	0x08007049

080070c0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdanab_25_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdanab_25_4bpp();

touchgfx::GeneratedFont& getFont_verdanab_25_4bpp()
{
    static touchgfx::GeneratedFont verdanab_25_4bpp(glyphs_verdanab_25_4bpp, 28, 25, 25, 0, 0, 4, 1, 0, 0, unicodes_verdanab_25_4bpp, kerning_verdanab_25_4bpp, 63, 0, 0, 0);
 80070c0:	4770      	bx	lr
	...

080070c4 <_Z24getFont_verdanab_25_4bppv>:
{
 80070c4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdanab_25_4bpp(glyphs_verdanab_25_4bpp, 28, 25, 25, 0, 0, 4, 1, 0, 0, unicodes_verdanab_25_4bpp, kerning_verdanab_25_4bpp, 63, 0, 0, 0);
 80070c6:	4d16      	ldr	r5, [pc, #88]	@ (8007120 <_Z24getFont_verdanab_25_4bppv+0x5c>)
 80070c8:	682c      	ldr	r4, [r5, #0]
 80070ca:	f014 0401 	ands.w	r4, r4, #1
{
 80070ce:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdanab_25_4bpp(glyphs_verdanab_25_4bpp, 28, 25, 25, 0, 0, 4, 1, 0, 0, unicodes_verdanab_25_4bpp, kerning_verdanab_25_4bpp, 63, 0, 0, 0);
 80070d0:	f3bf 8f5b 	dmb	ish
 80070d4:	d121      	bne.n	800711a <_Z24getFont_verdanab_25_4bppv+0x56>
 80070d6:	4628      	mov	r0, r5
 80070d8:	f022 fb1e 	bl	8029718 <__cxa_guard_acquire>
 80070dc:	b1e8      	cbz	r0, 800711a <_Z24getFont_verdanab_25_4bppv+0x56>
 80070de:	233f      	movs	r3, #63	@ 0x3f
 80070e0:	9309      	str	r3, [sp, #36]	@ 0x24
 80070e2:	4b10      	ldr	r3, [pc, #64]	@ (8007124 <_Z24getFont_verdanab_25_4bppv+0x60>)
 80070e4:	9308      	str	r3, [sp, #32]
 80070e6:	4b10      	ldr	r3, [pc, #64]	@ (8007128 <_Z24getFont_verdanab_25_4bppv+0x64>)
 80070e8:	4910      	ldr	r1, [pc, #64]	@ (800712c <_Z24getFont_verdanab_25_4bppv+0x68>)
 80070ea:	4811      	ldr	r0, [pc, #68]	@ (8007130 <_Z24getFont_verdanab_25_4bppv+0x6c>)
 80070ec:	940a      	str	r4, [sp, #40]	@ 0x28
 80070ee:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80070f2:	2201      	movs	r2, #1
 80070f4:	2304      	movs	r3, #4
 80070f6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80070fa:	2319      	movs	r3, #25
 80070fc:	9300      	str	r3, [sp, #0]
 80070fe:	221c      	movs	r2, #28
 8007100:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8007104:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007108:	9405      	str	r4, [sp, #20]
 800710a:	f7fd faa5 	bl	8004658 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800710e:	4809      	ldr	r0, [pc, #36]	@ (8007134 <_Z24getFont_verdanab_25_4bppv+0x70>)
 8007110:	f023 fa5a 	bl	802a5c8 <atexit>
 8007114:	4628      	mov	r0, r5
 8007116:	f022 fb0b 	bl	8029730 <__cxa_guard_release>
    return verdanab_25_4bpp;
}
 800711a:	4805      	ldr	r0, [pc, #20]	@ (8007130 <_Z24getFont_verdanab_25_4bppv+0x6c>)
 800711c:	b00f      	add	sp, #60	@ 0x3c
 800711e:	bd30      	pop	{r4, r5, pc}
 8007120:	20003150 	.word	0x20003150
 8007124:	08030f34 	.word	0x08030f34
 8007128:	08030f48 	.word	0x08030f48
 800712c:	08030d9c 	.word	0x08030d9c
 8007130:	20003154 	.word	0x20003154
 8007134:	080070c1 	.word	0x080070c1

08007138 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8007138:	2000      	movs	r0, #0
 800713a:	4770      	bx	lr

0800713c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 800713c:	2000      	movs	r0, #0
 800713e:	4770      	bx	lr

08007140 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007140:	b40e      	push	{r1, r2, r3}
 8007142:	b503      	push	{r0, r1, lr}
 8007144:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007146:	2100      	movs	r1, #0
{
 8007148:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800714c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800714e:	f010 fd1f 	bl	8017b90 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007152:	b002      	add	sp, #8
 8007154:	f85d eb04 	ldr.w	lr, [sp], #4
 8007158:	b003      	add	sp, #12
 800715a:	4770      	bx	lr

0800715c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800715c:	b40c      	push	{r2, r3}
 800715e:	b507      	push	{r0, r1, r2, lr}
 8007160:	ab04      	add	r3, sp, #16
 8007162:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8007166:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8007168:	f010 fd12 	bl	8017b90 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800716c:	b003      	add	sp, #12
 800716e:	f85d eb04 	ldr.w	lr, [sp], #4
 8007172:	b002      	add	sp, #8
 8007174:	4770      	bx	lr
	...

08007178 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8007178:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 800717a:	b510      	push	{r4, lr}
 800717c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800717e:	b373      	cbz	r3, 80071de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8007180:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8007182:	b92b      	cbnz	r3, 8007190 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8007184:	4b18      	ldr	r3, [pc, #96]	@ (80071e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8007186:	4a19      	ldr	r2, [pc, #100]	@ (80071ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8007188:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800718a:	4819      	ldr	r0, [pc, #100]	@ (80071f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800718c:	f023 f9fe 	bl	802a58c <__assert_func>
            return buffer[pos];
 8007190:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8007192:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8007196:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8007198:	b30b      	cbz	r3, 80071de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800719a:	f012 fbac 	bl	80198f6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800719e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80071a0:	2b01      	cmp	r3, #1
 80071a2:	d803      	bhi.n	80071ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80071a4:	4b13      	ldr	r3, [pc, #76]	@ (80071f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80071a6:	4a14      	ldr	r2, [pc, #80]	@ (80071f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80071a8:	21cb      	movs	r1, #203	@ 0xcb
 80071aa:	e7ee      	b.n	800718a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80071ac:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80071ae:	1c53      	adds	r3, r2, #1
 80071b0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80071b2:	2b09      	cmp	r3, #9
 80071b4:	4619      	mov	r1, r3
 80071b6:	bf88      	it	hi
 80071b8:	f1a3 010a 	subhi.w	r1, r3, #10
 80071bc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80071c0:	f640 103f 	movw	r0, #2367	@ 0x93f
 80071c4:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 80071c6:	4281      	cmp	r1, r0
 80071c8:	d109      	bne.n	80071de <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80071ca:	2b0a      	cmp	r3, #10
 80071cc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80071d0:	bf28      	it	cs
 80071d2:	2300      	movcs	r3, #0
 80071d4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80071d8:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 80071da:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 80071dc:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80071de:	4620      	mov	r0, r4
}
 80071e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80071e4:	f012 ba8a 	b.w	80196fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 80071e8:	0802ca96 	.word	0x0802ca96
 80071ec:	0802ca9f 	.word	0x0802ca9f
 80071f0:	0802cb4a 	.word	0x0802cb4a
 80071f4:	0802cb94 	.word	0x0802cb94
 80071f8:	0802cba2 	.word	0x0802cba2

080071fc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80071fc:	f012 ba45 	b.w	801968a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08007200 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8007200:	b510      	push	{r4, lr}
 8007202:	b086      	sub	sp, #24
 8007204:	ac02      	add	r4, sp, #8
 8007206:	e884 0006 	stmia.w	r4, {r1, r2}
 800720a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800720c:	ab0a      	add	r3, sp, #40	@ 0x28
 800720e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8007210:	9301      	str	r3, [sp, #4]
 8007212:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007214:	9300      	str	r3, [sp, #0]
 8007216:	4621      	mov	r1, r4
 8007218:	9b08      	ldr	r3, [sp, #32]
 800721a:	f00e ff5d 	bl	80160d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800721e:	b006      	add	sp, #24
 8007220:	bd10      	pop	{r4, pc}
	...

08007224 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8007224:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8007226:	bb18      	cbnz	r0, 8007270 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8007228:	4b12      	ldr	r3, [pc, #72]	@ (8007274 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800722a:	4813      	ldr	r0, [pc, #76]	@ (8007278 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800722c:	681c      	ldr	r4, [r3, #0]
 800722e:	4913      	ldr	r1, [pc, #76]	@ (800727c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8007230:	b1b4      	cbz	r4, 8007260 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8007232:	6822      	ldr	r2, [r4, #0]
 8007234:	4422      	add	r2, r4
 8007236:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8007238:	6862      	ldr	r2, [r4, #4]
 800723a:	4422      	add	r2, r4
 800723c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800723e:	68a2      	ldr	r2, [r4, #8]
 8007240:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8007242:	4b0f      	ldr	r3, [pc, #60]	@ (8007280 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8007244:	2200      	movs	r2, #0
 8007246:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8007248:	f000 fc46 	bl	8007ad8 <_ZN17TypedTextDatabase8getFontsEv>
 800724c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800724e:	f000 fc41 	bl	8007ad4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8007252:	4b0c      	ldr	r3, [pc, #48]	@ (8007284 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8007254:	601c      	str	r4, [r3, #0]
        fonts = f;
 8007256:	4b0c      	ldr	r3, [pc, #48]	@ (8007288 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8007258:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800725a:	4b0c      	ldr	r3, [pc, #48]	@ (800728c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800725c:	8018      	strh	r0, [r3, #0]
    }
}
 800725e:	e007      	b.n	8007270 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8007260:	4b0b      	ldr	r3, [pc, #44]	@ (8007290 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8007262:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8007264:	4b0b      	ldr	r3, [pc, #44]	@ (8007294 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8007266:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8007268:	4b0b      	ldr	r3, [pc, #44]	@ (8007298 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800726a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800726c:	2c00      	cmp	r4, #0
 800726e:	d1e8      	bne.n	8007242 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8007270:	bd38      	pop	{r3, r4, r5, pc}
 8007272:	bf00      	nop
 8007274:	2000318c 	.word	0x2000318c
 8007278:	20003184 	.word	0x20003184
 800727c:	20003180 	.word	0x20003180
 8007280:	20003188 	.word	0x20003188
 8007284:	20013fa4 	.word	0x20013fa4
 8007288:	20013fac 	.word	0x20013fac
 800728c:	20013fa8 	.word	0x20013fa8
 8007290:	08030ff4 	.word	0x08030ff4
 8007294:	08030f4c 	.word	0x08030f4c
 8007298:	08031100 	.word	0x08031100

0800729c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800729c:	4b04      	ldr	r3, [pc, #16]	@ (80072b0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800729e:	681b      	ldr	r3, [r3, #0]
 80072a0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80072a4:	4b03      	ldr	r3, [pc, #12]	@ (80072b4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80072a6:	681b      	ldr	r3, [r3, #0]
}
 80072a8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80072ac:	4770      	bx	lr
 80072ae:	bf00      	nop
 80072b0:	20003180 	.word	0x20003180
 80072b4:	20003184 	.word	0x20003184

080072b8 <_ZN11Tile3x3BaseD1Ev>:
}

Tile3x3Base::~Tile3x3Base()
{

}
 80072b8:	4770      	bx	lr

080072ba <_ZN11Tile3x3Base10initializeEv>:

void Tile3x3Base::initialize()
{

}
 80072ba:	4770      	bx	lr

080072bc <_ZN11Tile3x3BaseD0Ev>:
Tile3x3Base::~Tile3x3Base()
 80072bc:	b510      	push	{r4, lr}
}
 80072be:	21c0      	movs	r1, #192	@ 0xc0
Tile3x3Base::~Tile3x3Base()
 80072c0:	4604      	mov	r4, r0
}
 80072c2:	f022 fa27 	bl	8029714 <_ZdlPvj>
 80072c6:	4620      	mov	r0, r4
 80072c8:	bd10      	pop	{r4, pc}
	...

080072cc <_ZN11Tile3x3BaseC1Ev>:
Tile3x3Base::Tile3x3Base()
 80072cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072d0:	4604      	mov	r4, r0
 80072d2:	b086      	sub	sp, #24
 80072d4:	4626      	mov	r6, r4
 80072d6:	2500      	movs	r5, #0
 80072d8:	f7fb f8d4 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 80072dc:	4b51      	ldr	r3, [pc, #324]	@ (8007424 <_ZN11Tile3x3BaseC1Ev+0x158>)
 80072de:	62a5      	str	r5, [r4, #40]	@ 0x28
 80072e0:	f846 3b2c 	str.w	r3, [r6], #44
        : Widget(), alpha(255), color(0)
 80072e4:	4629      	mov	r1, r5
 80072e6:	2226      	movs	r2, #38	@ 0x26
 80072e8:	4630      	mov	r0, r6
 80072ea:	f023 fb56 	bl	802a99a <memset>
 80072ee:	4630      	mov	r0, r6
 80072f0:	f7fb f8c8 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 80072f4:	23ff      	movs	r3, #255	@ 0xff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80072f6:	f104 0760 	add.w	r7, r4, #96	@ 0x60
 80072fa:	f884 3052 	strb.w	r3, [r4, #82]	@ 0x52
        : Box(), borderColor(0), borderSize(0)
 80072fe:	4b4a      	ldr	r3, [pc, #296]	@ (8007428 <_ZN11Tile3x3BaseC1Ev+0x15c>)
 8007300:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8007302:	4629      	mov	r1, r5
 8007304:	2226      	movs	r2, #38	@ 0x26
        : color(col)
 8007306:	6565      	str	r5, [r4, #84]	@ 0x54
 8007308:	65a5      	str	r5, [r4, #88]	@ 0x58
 800730a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800730e:	4638      	mov	r0, r7
 8007310:	f023 fb43 	bl	802a99a <memset>
 8007314:	4638      	mov	r0, r7
 8007316:	f7fb f8b5 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
        : typedTextId(id)
 800731a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800731e:	f8a4 308c 	strh.w	r3, [r4, #140]	@ 0x8c
 8007322:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
 8007326:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
        : TextAreaWithWildcardBase(), wc1(0)
 800732a:	4b40      	ldr	r3, [pc, #256]	@ (800742c <_ZN11Tile3x3BaseC1Ev+0x160>)
 800732c:	6623      	str	r3, [r4, #96]	@ 0x60
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800732e:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 8007332:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 8007336:	f8df 811c 	ldr.w	r8, [pc, #284]	@ 8007454 <_ZN11Tile3x3BaseC1Ev+0x188>
        : color(col)
 800733a:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        rect.width = width;
 800733e:	f04f 1350 	mov.w	r3, #5242960	@ 0x500050
        setXY(x, y);
 8007342:	462a      	mov	r2, r5
        rect.width = width;
 8007344:	60a3      	str	r3, [r4, #8]
        setXY(x, y);
 8007346:	4629      	mov	r1, r5
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8007348:	f8a4 5098 	strh.w	r5, [r4, #152]	@ 0x98
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800734c:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 8007350:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 8007354:	4630      	mov	r0, r6
 8007356:	f8c4 8088 	str.w	r8, [r4, #136]	@ 0x88
 800735a:	f7fb f8a5 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800735e:	2150      	movs	r1, #80	@ 0x50
 8007360:	4630      	mov	r0, r6
 8007362:	f7f9 ffe9 	bl	8001338 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007366:	2150      	movs	r1, #80	@ 0x50
 8007368:	4630      	mov	r0, r6
 800736a:	f7f9 ffe7 	bl	800133c <_ZN8touchgfx8Drawable9setHeightEs>
        color = newColor;
 800736e:	4b30      	ldr	r3, [pc, #192]	@ (8007430 <_ZN11Tile3x3BaseC1Ev+0x164>)
 8007370:	6563      	str	r3, [r4, #84]	@ 0x54
        borderColor = colorBorder;
 8007372:	f5a3 03ba 	sub.w	r3, r3, #6094848	@ 0x5d0000
 8007376:	f6a3 23d8 	subw	r3, r3, #2776	@ 0xad8
 800737a:	65a3      	str	r3, [r4, #88]	@ 0x58
        borderSize = size;
 800737c:	2303      	movs	r3, #3
 800737e:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
    add(boxWithBorder1);
 8007382:	4631      	mov	r1, r6
 8007384:	4620      	mov	r0, r4
 8007386:	f009 f9c1 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(27, 34);
 800738a:	2222      	movs	r2, #34	@ 0x22
 800738c:	211b      	movs	r1, #27
 800738e:	4638      	mov	r0, r7
 8007390:	f7fb f88a 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007394:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8007398:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        boundingArea = calculateBoundingArea();
 800739c:	6e23      	ldr	r3, [r4, #96]	@ 0x60
        linespace = space;
 800739e:	f8a4 5094 	strh.w	r5, [r4, #148]	@ 0x94
        boundingArea = calculateBoundingArea();
 80073a2:	466d      	mov	r5, sp
 80073a4:	4628      	mov	r0, r5
 80073a6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80073aa:	4639      	mov	r1, r7
 80073ac:	4798      	blx	r3
 80073ae:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80073b2:	f104 039c 	add.w	r3, r4, #156	@ 0x9c
 80073b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80073ba:	4b1e      	ldr	r3, [pc, #120]	@ (8007434 <_ZN11Tile3x3BaseC1Ev+0x168>)
 80073bc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_TILETEXT).getText());
 80073be:	f104 05ac 	add.w	r5, r4, #172	@ 0xac
 80073c2:	b92b      	cbnz	r3, 80073d0 <_ZN11Tile3x3BaseC1Ev+0x104>
 80073c4:	4b1c      	ldr	r3, [pc, #112]	@ (8007438 <_ZN11Tile3x3BaseC1Ev+0x16c>)
 80073c6:	4a1d      	ldr	r2, [pc, #116]	@ (800743c <_ZN11Tile3x3BaseC1Ev+0x170>)
 80073c8:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80073ca:	481d      	ldr	r0, [pc, #116]	@ (8007440 <_ZN11Tile3x3BaseC1Ev+0x174>)
 80073cc:	f023 f8de 	bl	802a58c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80073d0:	4b1c      	ldr	r3, [pc, #112]	@ (8007444 <_ZN11Tile3x3BaseC1Ev+0x178>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80073d2:	881b      	ldrh	r3, [r3, #0]
 80073d4:	2b22      	cmp	r3, #34	@ 0x22
 80073d6:	d803      	bhi.n	80073e0 <_ZN11Tile3x3BaseC1Ev+0x114>
 80073d8:	4b1b      	ldr	r3, [pc, #108]	@ (8007448 <_ZN11Tile3x3BaseC1Ev+0x17c>)
 80073da:	4a18      	ldr	r2, [pc, #96]	@ (800743c <_ZN11Tile3x3BaseC1Ev+0x170>)
 80073dc:	2161      	movs	r1, #97	@ 0x61
 80073de:	e7f4      	b.n	80073ca <_ZN11Tile3x3BaseC1Ev+0xfe>
        return texts->getText(typedTextId);
 80073e0:	4b1a      	ldr	r3, [pc, #104]	@ (800744c <_ZN11Tile3x3BaseC1Ev+0x180>)
 80073e2:	2122      	movs	r1, #34	@ 0x22
 80073e4:	6818      	ldr	r0, [r3, #0]
 80073e6:	f7ff ff59 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 80073ea:	4a19      	ldr	r2, [pc, #100]	@ (8007450 <_ZN11Tile3x3BaseC1Ev+0x184>)
 80073ec:	4603      	mov	r3, r0
 80073ee:	210a      	movs	r1, #10
 80073f0:	4628      	mov	r0, r5
 80073f2:	f013 f838 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1.resizeToCurrentText();
 80073f6:	4638      	mov	r0, r7
        wc1 = value;
 80073f8:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80073fc:	f00c fc1a 	bl	8013c34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007400:	231b      	movs	r3, #27
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ORTO));
 8007402:	a904      	add	r1, sp, #16
 8007404:	4638      	mov	r0, r7
 8007406:	f8ad 3014 	strh.w	r3, [sp, #20]
 800740a:	f8cd 8010 	str.w	r8, [sp, #16]
 800740e:	f00c fc31 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1);
 8007412:	4620      	mov	r0, r4
 8007414:	4639      	mov	r1, r7
 8007416:	f009 f979 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800741a:	4620      	mov	r0, r4
 800741c:	b006      	add	sp, #24
 800741e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007422:	bf00      	nop
 8007424:	0802d6c0 	.word	0x0802d6c0
 8007428:	0802e4bc 	.word	0x0802e4bc
 800742c:	0802d040 	.word	0x0802d040
 8007430:	ffd4793d 	.word	0xffd4793d
 8007434:	20013fa4 	.word	0x20013fa4
 8007438:	0802bbe5 	.word	0x0802bbe5
 800743c:	0802bce7 	.word	0x0802bce7
 8007440:	0802bc62 	.word	0x0802bc62
 8007444:	20013fa8 	.word	0x20013fa8
 8007448:	0802bca9 	.word	0x0802bca9
 800744c:	20013fb0 	.word	0x20013fb0
 8007450:	0802bd32 	.word	0x0802bd32
 8007454:	0802d030 	.word	0x0802d030

08007458 <_ZN11Tile5x5BaseD1Ev>:
}

Tile5x5Base::~Tile5x5Base()
{

}
 8007458:	4770      	bx	lr

0800745a <_ZN11Tile5x5Base10initializeEv>:

void Tile5x5Base::initialize()
{

}
 800745a:	4770      	bx	lr

0800745c <_ZN11Tile5x5BaseD0Ev>:
Tile5x5Base::~Tile5x5Base()
 800745c:	b510      	push	{r4, lr}
}
 800745e:	21c0      	movs	r1, #192	@ 0xc0
Tile5x5Base::~Tile5x5Base()
 8007460:	4604      	mov	r4, r0
}
 8007462:	f022 f957 	bl	8029714 <_ZdlPvj>
 8007466:	4620      	mov	r0, r4
 8007468:	bd10      	pop	{r4, pc}
	...

0800746c <_ZN11Tile5x5BaseC1Ev>:
Tile5x5Base::Tile5x5Base()
 800746c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007470:	4604      	mov	r4, r0
 8007472:	b086      	sub	sp, #24
 8007474:	4626      	mov	r6, r4
 8007476:	2500      	movs	r5, #0
 8007478:	f7fb f804 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 800747c:	4b51      	ldr	r3, [pc, #324]	@ (80075c4 <_ZN11Tile5x5BaseC1Ev+0x158>)
 800747e:	62a5      	str	r5, [r4, #40]	@ 0x28
 8007480:	f846 3b2c 	str.w	r3, [r6], #44
        : Widget(), alpha(255), color(0)
 8007484:	4629      	mov	r1, r5
 8007486:	2226      	movs	r2, #38	@ 0x26
 8007488:	4630      	mov	r0, r6
 800748a:	f023 fa86 	bl	802a99a <memset>
 800748e:	4630      	mov	r0, r6
 8007490:	f7fa fff8 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 8007494:	23ff      	movs	r3, #255	@ 0xff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8007496:	f104 0760 	add.w	r7, r4, #96	@ 0x60
 800749a:	f884 3052 	strb.w	r3, [r4, #82]	@ 0x52
        : Box(), borderColor(0), borderSize(0)
 800749e:	4b4a      	ldr	r3, [pc, #296]	@ (80075c8 <_ZN11Tile5x5BaseC1Ev+0x15c>)
 80074a0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80074a2:	4629      	mov	r1, r5
 80074a4:	2226      	movs	r2, #38	@ 0x26
        : color(col)
 80074a6:	6565      	str	r5, [r4, #84]	@ 0x54
 80074a8:	65a5      	str	r5, [r4, #88]	@ 0x58
 80074aa:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80074ae:	4638      	mov	r0, r7
 80074b0:	f023 fa73 	bl	802a99a <memset>
 80074b4:	4638      	mov	r0, r7
 80074b6:	f7fa ffe5 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 80074ba:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80074be:	f8a4 308c 	strh.w	r3, [r4, #140]	@ 0x8c
 80074c2:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
 80074c6:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
        : TextAreaWithWildcardBase(), wc1(0)
 80074ca:	4b40      	ldr	r3, [pc, #256]	@ (80075cc <_ZN11Tile5x5BaseC1Ev+0x160>)
 80074cc:	6623      	str	r3, [r4, #96]	@ 0x60
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80074ce:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 80074d2:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 80074d6:	f8df 811c 	ldr.w	r8, [pc, #284]	@ 80075f4 <_ZN11Tile5x5BaseC1Ev+0x188>
        : color(col)
 80074da:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        rect.width = width;
 80074de:	f04f 1330 	mov.w	r3, #3145776	@ 0x300030
        setXY(x, y);
 80074e2:	462a      	mov	r2, r5
        rect.width = width;
 80074e4:	60a3      	str	r3, [r4, #8]
        setXY(x, y);
 80074e6:	4629      	mov	r1, r5
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80074e8:	f8a4 5098 	strh.w	r5, [r4, #152]	@ 0x98
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80074ec:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80074f0:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80074f4:	4630      	mov	r0, r6
 80074f6:	f8c4 8088 	str.w	r8, [r4, #136]	@ 0x88
 80074fa:	f7fa ffd5 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80074fe:	2130      	movs	r1, #48	@ 0x30
 8007500:	4630      	mov	r0, r6
 8007502:	f7f9 ff19 	bl	8001338 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007506:	2130      	movs	r1, #48	@ 0x30
 8007508:	4630      	mov	r0, r6
 800750a:	f7f9 ff17 	bl	800133c <_ZN8touchgfx8Drawable9setHeightEs>
        color = newColor;
 800750e:	4b30      	ldr	r3, [pc, #192]	@ (80075d0 <_ZN11Tile5x5BaseC1Ev+0x164>)
 8007510:	6563      	str	r3, [r4, #84]	@ 0x54
        borderColor = colorBorder;
 8007512:	f5a3 03ba 	sub.w	r3, r3, #6094848	@ 0x5d0000
 8007516:	f6a3 23d8 	subw	r3, r3, #2776	@ 0xad8
 800751a:	65a3      	str	r3, [r4, #88]	@ 0x58
        borderSize = size;
 800751c:	2303      	movs	r3, #3
 800751e:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
    add(boxWithBorder1);
 8007522:	4631      	mov	r1, r6
 8007524:	4620      	mov	r0, r4
 8007526:	f009 f8f1 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(11, 18);
 800752a:	2212      	movs	r2, #18
 800752c:	210b      	movs	r1, #11
 800752e:	4638      	mov	r0, r7
 8007530:	f7fa ffba 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007534:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8007538:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        boundingArea = calculateBoundingArea();
 800753c:	6e23      	ldr	r3, [r4, #96]	@ 0x60
        linespace = space;
 800753e:	f8a4 5094 	strh.w	r5, [r4, #148]	@ 0x94
        boundingArea = calculateBoundingArea();
 8007542:	466d      	mov	r5, sp
 8007544:	4628      	mov	r0, r5
 8007546:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800754a:	4639      	mov	r1, r7
 800754c:	4798      	blx	r3
 800754e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007552:	f104 039c 	add.w	r3, r4, #156	@ 0x9c
 8007556:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800755a:	4b1e      	ldr	r3, [pc, #120]	@ (80075d4 <_ZN11Tile5x5BaseC1Ev+0x168>)
 800755c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_TILETEXT).getText());
 800755e:	f104 05ac 	add.w	r5, r4, #172	@ 0xac
 8007562:	b92b      	cbnz	r3, 8007570 <_ZN11Tile5x5BaseC1Ev+0x104>
 8007564:	4b1c      	ldr	r3, [pc, #112]	@ (80075d8 <_ZN11Tile5x5BaseC1Ev+0x16c>)
 8007566:	4a1d      	ldr	r2, [pc, #116]	@ (80075dc <_ZN11Tile5x5BaseC1Ev+0x170>)
 8007568:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800756a:	481d      	ldr	r0, [pc, #116]	@ (80075e0 <_ZN11Tile5x5BaseC1Ev+0x174>)
 800756c:	f023 f80e 	bl	802a58c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007570:	4b1c      	ldr	r3, [pc, #112]	@ (80075e4 <_ZN11Tile5x5BaseC1Ev+0x178>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007572:	881b      	ldrh	r3, [r3, #0]
 8007574:	2b22      	cmp	r3, #34	@ 0x22
 8007576:	d803      	bhi.n	8007580 <_ZN11Tile5x5BaseC1Ev+0x114>
 8007578:	4b1b      	ldr	r3, [pc, #108]	@ (80075e8 <_ZN11Tile5x5BaseC1Ev+0x17c>)
 800757a:	4a18      	ldr	r2, [pc, #96]	@ (80075dc <_ZN11Tile5x5BaseC1Ev+0x170>)
 800757c:	2161      	movs	r1, #97	@ 0x61
 800757e:	e7f4      	b.n	800756a <_ZN11Tile5x5BaseC1Ev+0xfe>
        return texts->getText(typedTextId);
 8007580:	4b1a      	ldr	r3, [pc, #104]	@ (80075ec <_ZN11Tile5x5BaseC1Ev+0x180>)
 8007582:	2122      	movs	r1, #34	@ 0x22
 8007584:	6818      	ldr	r0, [r3, #0]
 8007586:	f7ff fe89 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 800758a:	4a19      	ldr	r2, [pc, #100]	@ (80075f0 <_ZN11Tile5x5BaseC1Ev+0x184>)
 800758c:	4603      	mov	r3, r0
 800758e:	210a      	movs	r1, #10
 8007590:	4628      	mov	r0, r5
 8007592:	f012 ff68 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1.resizeToCurrentText();
 8007596:	4638      	mov	r0, r7
        wc1 = value;
 8007598:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 800759c:	f00c fb4a 	bl	8013c34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80075a0:	231a      	movs	r3, #26
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E2FP));
 80075a2:	a904      	add	r1, sp, #16
 80075a4:	4638      	mov	r0, r7
 80075a6:	f8ad 3014 	strh.w	r3, [sp, #20]
 80075aa:	f8cd 8010 	str.w	r8, [sp, #16]
 80075ae:	f00c fb61 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1);
 80075b2:	4620      	mov	r0, r4
 80075b4:	4639      	mov	r1, r7
 80075b6:	f009 f8a9 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80075ba:	4620      	mov	r0, r4
 80075bc:	b006      	add	sp, #24
 80075be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80075c2:	bf00      	nop
 80075c4:	0802d754 	.word	0x0802d754
 80075c8:	0802e4bc 	.word	0x0802e4bc
 80075cc:	0802d040 	.word	0x0802d040
 80075d0:	ffd4793d 	.word	0xffd4793d
 80075d4:	20013fa4 	.word	0x20013fa4
 80075d8:	0802bbe5 	.word	0x0802bbe5
 80075dc:	0802bce7 	.word	0x0802bce7
 80075e0:	0802bc62 	.word	0x0802bc62
 80075e4:	20013fa8 	.word	0x20013fa8
 80075e8:	0802bca9 	.word	0x0802bca9
 80075ec:	20013fb0 	.word	0x20013fb0
 80075f0:	0802bd32 	.word	0x0802bd32
 80075f4:	0802d030 	.word	0x0802d030

080075f8 <_ZN17Tile5x5_SuperBaseD1Ev>:
}

Tile5x5_SuperBase::~Tile5x5_SuperBase()
{

}
 80075f8:	4770      	bx	lr

080075fa <_ZN17Tile5x5_SuperBase10initializeEv>:

void Tile5x5_SuperBase::initialize()
{

}
 80075fa:	4770      	bx	lr

080075fc <_ZN17Tile5x5_SuperBaseD0Ev>:
Tile5x5_SuperBase::~Tile5x5_SuperBase()
 80075fc:	b510      	push	{r4, lr}
}
 80075fe:	21c0      	movs	r1, #192	@ 0xc0
Tile5x5_SuperBase::~Tile5x5_SuperBase()
 8007600:	4604      	mov	r4, r0
}
 8007602:	f022 f887 	bl	8029714 <_ZdlPvj>
 8007606:	4620      	mov	r0, r4
 8007608:	bd10      	pop	{r4, pc}
	...

0800760c <_ZN17Tile5x5_SuperBaseC1Ev>:
Tile5x5_SuperBase::Tile5x5_SuperBase()
 800760c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007610:	4604      	mov	r4, r0
 8007612:	b086      	sub	sp, #24
 8007614:	4626      	mov	r6, r4
 8007616:	2500      	movs	r5, #0
 8007618:	f7fa ff34 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 800761c:	4b50      	ldr	r3, [pc, #320]	@ (8007760 <_ZN17Tile5x5_SuperBaseC1Ev+0x154>)
 800761e:	62a5      	str	r5, [r4, #40]	@ 0x28
 8007620:	f846 3b2c 	str.w	r3, [r6], #44
        : Widget(), alpha(255), color(0)
 8007624:	2226      	movs	r2, #38	@ 0x26
 8007626:	4629      	mov	r1, r5
 8007628:	4630      	mov	r0, r6
 800762a:	f023 f9b6 	bl	802a99a <memset>
 800762e:	4630      	mov	r0, r6
 8007630:	f7fa ff28 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 8007634:	23ff      	movs	r3, #255	@ 0xff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8007636:	f104 0760 	add.w	r7, r4, #96	@ 0x60
 800763a:	f884 3052 	strb.w	r3, [r4, #82]	@ 0x52
        : Box(), borderColor(0), borderSize(0)
 800763e:	4b49      	ldr	r3, [pc, #292]	@ (8007764 <_ZN17Tile5x5_SuperBaseC1Ev+0x158>)
 8007640:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8007642:	2226      	movs	r2, #38	@ 0x26
 8007644:	4629      	mov	r1, r5
        : color(col)
 8007646:	6565      	str	r5, [r4, #84]	@ 0x54
 8007648:	65a5      	str	r5, [r4, #88]	@ 0x58
 800764a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800764e:	4638      	mov	r0, r7
 8007650:	f023 f9a3 	bl	802a99a <memset>
 8007654:	4638      	mov	r0, r7
 8007656:	f7fa ff15 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 800765a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800765e:	f8a4 308c 	strh.w	r3, [r4, #140]	@ 0x8c
 8007662:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
 8007666:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
        : TextAreaWithWildcardBase(), wc1(0)
 800766a:	4b3f      	ldr	r3, [pc, #252]	@ (8007768 <_ZN17Tile5x5_SuperBaseC1Ev+0x15c>)
 800766c:	6623      	str	r3, [r4, #96]	@ 0x60
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800766e:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 8007672:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 8007676:	f8df 8118 	ldr.w	r8, [pc, #280]	@ 8007790 <_ZN17Tile5x5_SuperBaseC1Ev+0x184>
 800767a:	f8c4 8088 	str.w	r8, [r4, #136]	@ 0x88
        rect.width = width;
 800767e:	f04f 1330 	mov.w	r3, #3145776	@ 0x300030
        setXY(x, y);
 8007682:	462a      	mov	r2, r5
        rect.width = width;
 8007684:	60a3      	str	r3, [r4, #8]
        setXY(x, y);
 8007686:	4630      	mov	r0, r6
 8007688:	4629      	mov	r1, r5
        : color(col)
 800768a:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800768e:	f8a4 5098 	strh.w	r5, [r4, #152]	@ 0x98
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8007692:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 8007696:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 800769a:	f7fa ff05 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800769e:	4630      	mov	r0, r6
 80076a0:	2130      	movs	r1, #48	@ 0x30
 80076a2:	f7f9 fe49 	bl	8001338 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80076a6:	4630      	mov	r0, r6
 80076a8:	2130      	movs	r1, #48	@ 0x30
 80076aa:	f7f9 fe47 	bl	800133c <_ZN8touchgfx8Drawable9setHeightEs>
        color = newColor;
 80076ae:	4b2f      	ldr	r3, [pc, #188]	@ (800776c <_ZN17Tile5x5_SuperBaseC1Ev+0x160>)
 80076b0:	6563      	str	r3, [r4, #84]	@ 0x54
        borderColor = colorBorder;
 80076b2:	f5a3 03ba 	sub.w	r3, r3, #6094848	@ 0x5d0000
 80076b6:	f6a3 23d8 	subw	r3, r3, #2776	@ 0xad8
 80076ba:	65a3      	str	r3, [r4, #88]	@ 0x58
        borderSize = size;
 80076bc:	2303      	movs	r3, #3
 80076be:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
    add(boxWithBorder1);
 80076c2:	4631      	mov	r1, r6
 80076c4:	4620      	mov	r0, r4
 80076c6:	f009 f821 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(11, 18);
 80076ca:	2212      	movs	r2, #18
 80076cc:	210b      	movs	r1, #11
 80076ce:	4638      	mov	r0, r7
 80076d0:	f7fa feea 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80076d4:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 80076d8:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        boundingArea = calculateBoundingArea();
 80076dc:	6e23      	ldr	r3, [r4, #96]	@ 0x60
        linespace = space;
 80076de:	f8a4 5094 	strh.w	r5, [r4, #148]	@ 0x94
        boundingArea = calculateBoundingArea();
 80076e2:	466e      	mov	r6, sp
 80076e4:	4630      	mov	r0, r6
 80076e6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80076ea:	4639      	mov	r1, r7
 80076ec:	4798      	blx	r3
 80076ee:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80076f2:	f104 039c 	add.w	r3, r4, #156	@ 0x9c
 80076f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80076fa:	4b1d      	ldr	r3, [pc, #116]	@ (8007770 <_ZN17Tile5x5_SuperBaseC1Ev+0x164>)
 80076fc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_TILETEXT).getText());
 80076fe:	f104 06ac 	add.w	r6, r4, #172	@ 0xac
 8007702:	b92b      	cbnz	r3, 8007710 <_ZN17Tile5x5_SuperBaseC1Ev+0x104>
 8007704:	4b1b      	ldr	r3, [pc, #108]	@ (8007774 <_ZN17Tile5x5_SuperBaseC1Ev+0x168>)
 8007706:	4a1c      	ldr	r2, [pc, #112]	@ (8007778 <_ZN17Tile5x5_SuperBaseC1Ev+0x16c>)
 8007708:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800770a:	481c      	ldr	r0, [pc, #112]	@ (800777c <_ZN17Tile5x5_SuperBaseC1Ev+0x170>)
 800770c:	f022 ff3e 	bl	802a58c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007710:	4b1b      	ldr	r3, [pc, #108]	@ (8007780 <_ZN17Tile5x5_SuperBaseC1Ev+0x174>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007712:	881b      	ldrh	r3, [r3, #0]
 8007714:	2b22      	cmp	r3, #34	@ 0x22
 8007716:	d803      	bhi.n	8007720 <_ZN17Tile5x5_SuperBaseC1Ev+0x114>
 8007718:	4b1a      	ldr	r3, [pc, #104]	@ (8007784 <_ZN17Tile5x5_SuperBaseC1Ev+0x178>)
 800771a:	4a17      	ldr	r2, [pc, #92]	@ (8007778 <_ZN17Tile5x5_SuperBaseC1Ev+0x16c>)
 800771c:	2161      	movs	r1, #97	@ 0x61
 800771e:	e7f4      	b.n	800770a <_ZN17Tile5x5_SuperBaseC1Ev+0xfe>
        return texts->getText(typedTextId);
 8007720:	4b19      	ldr	r3, [pc, #100]	@ (8007788 <_ZN17Tile5x5_SuperBaseC1Ev+0x17c>)
 8007722:	2122      	movs	r1, #34	@ 0x22
 8007724:	6818      	ldr	r0, [r3, #0]
 8007726:	f7ff fdb9 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 800772a:	4a18      	ldr	r2, [pc, #96]	@ (800778c <_ZN17Tile5x5_SuperBaseC1Ev+0x180>)
 800772c:	4603      	mov	r3, r0
 800772e:	210a      	movs	r1, #10
 8007730:	4630      	mov	r0, r6
 8007732:	f012 fe98 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1.resizeToCurrentText();
 8007736:	4638      	mov	r0, r7
        wc1 = value;
 8007738:	f8c4 60a8 	str.w	r6, [r4, #168]	@ 0xa8
 800773c:	f00c fa7a 	bl	8013c34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZBAW));
 8007740:	a904      	add	r1, sp, #16
 8007742:	4638      	mov	r0, r7
        : typedTextId(id)
 8007744:	f8cd 8010 	str.w	r8, [sp, #16]
 8007748:	f8ad 5014 	strh.w	r5, [sp, #20]
 800774c:	f00c fa92 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1);
 8007750:	4620      	mov	r0, r4
 8007752:	4639      	mov	r1, r7
 8007754:	f008 ffda 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007758:	4620      	mov	r0, r4
 800775a:	b006      	add	sp, #24
 800775c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007760:	0802d7e8 	.word	0x0802d7e8
 8007764:	0802e4bc 	.word	0x0802e4bc
 8007768:	0802d040 	.word	0x0802d040
 800776c:	ffd4793d 	.word	0xffd4793d
 8007770:	20013fa4 	.word	0x20013fa4
 8007774:	0802bbe5 	.word	0x0802bbe5
 8007778:	0802bce7 	.word	0x0802bce7
 800777c:	0802bc62 	.word	0x0802bc62
 8007780:	20013fa8 	.word	0x20013fa8
 8007784:	0802bca9 	.word	0x0802bca9
 8007788:	20013fb0 	.word	0x20013fb0
 800778c:	0802bd32 	.word	0x0802bd32
 8007790:	0802d030 	.word	0x0802d030

08007794 <_ZN8TileBaseD1Ev>:
}

TileBase::~TileBase()
{

}
 8007794:	4770      	bx	lr

08007796 <_ZN8TileBase10initializeEv>:

void TileBase::initialize()
{

}
 8007796:	4770      	bx	lr

08007798 <_ZN8TileBaseD0Ev>:
TileBase::~TileBase()
 8007798:	b510      	push	{r4, lr}
}
 800779a:	21c0      	movs	r1, #192	@ 0xc0
TileBase::~TileBase()
 800779c:	4604      	mov	r4, r0
}
 800779e:	f021 ffb9 	bl	8029714 <_ZdlPvj>
 80077a2:	4620      	mov	r0, r4
 80077a4:	bd10      	pop	{r4, pc}
	...

080077a8 <_ZN8TileBaseC1Ev>:
TileBase::TileBase()
 80077a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80077ac:	4604      	mov	r4, r0
 80077ae:	b086      	sub	sp, #24
 80077b0:	4626      	mov	r6, r4
 80077b2:	2500      	movs	r5, #0
 80077b4:	f7fa fe66 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 80077b8:	4b51      	ldr	r3, [pc, #324]	@ (8007900 <_ZN8TileBaseC1Ev+0x158>)
 80077ba:	62a5      	str	r5, [r4, #40]	@ 0x28
 80077bc:	f846 3b2c 	str.w	r3, [r6], #44
        : Widget(), alpha(255), color(0)
 80077c0:	4629      	mov	r1, r5
 80077c2:	2226      	movs	r2, #38	@ 0x26
 80077c4:	4630      	mov	r0, r6
 80077c6:	f023 f8e8 	bl	802a99a <memset>
 80077ca:	4630      	mov	r0, r6
 80077cc:	f7fa fe5a 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 80077d0:	23ff      	movs	r3, #255	@ 0xff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80077d2:	f104 0760 	add.w	r7, r4, #96	@ 0x60
 80077d6:	f884 3052 	strb.w	r3, [r4, #82]	@ 0x52
        : Box(), borderColor(0), borderSize(0)
 80077da:	4b4a      	ldr	r3, [pc, #296]	@ (8007904 <_ZN8TileBaseC1Ev+0x15c>)
 80077dc:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80077de:	4629      	mov	r1, r5
 80077e0:	2226      	movs	r2, #38	@ 0x26
        : color(col)
 80077e2:	6565      	str	r5, [r4, #84]	@ 0x54
 80077e4:	65a5      	str	r5, [r4, #88]	@ 0x58
 80077e6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80077ea:	4638      	mov	r0, r7
 80077ec:	f023 f8d5 	bl	802a99a <memset>
 80077f0:	4638      	mov	r0, r7
 80077f2:	f7fa fe47 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 80077f6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80077fa:	f8a4 308c 	strh.w	r3, [r4, #140]	@ 0x8c
 80077fe:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
 8007802:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
        : TextAreaWithWildcardBase(), wc1(0)
 8007806:	4b40      	ldr	r3, [pc, #256]	@ (8007908 <_ZN8TileBaseC1Ev+0x160>)
 8007808:	6623      	str	r3, [r4, #96]	@ 0x60
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800780a:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 800780e:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 8007812:	f8df 811c 	ldr.w	r8, [pc, #284]	@ 8007930 <_ZN8TileBaseC1Ev+0x188>
        : color(col)
 8007816:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        rect.width = width;
 800781a:	f04f 133c 	mov.w	r3, #3932220	@ 0x3c003c
        setXY(x, y);
 800781e:	462a      	mov	r2, r5
        rect.width = width;
 8007820:	60a3      	str	r3, [r4, #8]
        setXY(x, y);
 8007822:	4629      	mov	r1, r5
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8007824:	f8a4 5098 	strh.w	r5, [r4, #152]	@ 0x98
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8007828:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 800782c:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 8007830:	4630      	mov	r0, r6
 8007832:	f8c4 8088 	str.w	r8, [r4, #136]	@ 0x88
 8007836:	f7fa fe37 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800783a:	213c      	movs	r1, #60	@ 0x3c
 800783c:	4630      	mov	r0, r6
 800783e:	f7f9 fd7b 	bl	8001338 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007842:	213c      	movs	r1, #60	@ 0x3c
 8007844:	4630      	mov	r0, r6
 8007846:	f7f9 fd79 	bl	800133c <_ZN8touchgfx8Drawable9setHeightEs>
        color = newColor;
 800784a:	4b30      	ldr	r3, [pc, #192]	@ (800790c <_ZN8TileBaseC1Ev+0x164>)
 800784c:	6563      	str	r3, [r4, #84]	@ 0x54
        borderColor = colorBorder;
 800784e:	f5a3 03ba 	sub.w	r3, r3, #6094848	@ 0x5d0000
 8007852:	f6a3 23d8 	subw	r3, r3, #2776	@ 0xad8
 8007856:	65a3      	str	r3, [r4, #88]	@ 0x58
        borderSize = size;
 8007858:	2303      	movs	r3, #3
 800785a:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
    add(boxWithBorder1);
 800785e:	4631      	mov	r1, r6
 8007860:	4620      	mov	r0, r4
 8007862:	f008 ff53 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(17, 24);
 8007866:	2218      	movs	r2, #24
 8007868:	2111      	movs	r1, #17
 800786a:	4638      	mov	r0, r7
 800786c:	f7fa fe1c 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007870:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8007874:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        boundingArea = calculateBoundingArea();
 8007878:	6e23      	ldr	r3, [r4, #96]	@ 0x60
        linespace = space;
 800787a:	f8a4 5094 	strh.w	r5, [r4, #148]	@ 0x94
        boundingArea = calculateBoundingArea();
 800787e:	466d      	mov	r5, sp
 8007880:	4628      	mov	r0, r5
 8007882:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8007886:	4639      	mov	r1, r7
 8007888:	4798      	blx	r3
 800788a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800788e:	f104 039c 	add.w	r3, r4, #156	@ 0x9c
 8007892:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007896:	4b1e      	ldr	r3, [pc, #120]	@ (8007910 <_ZN8TileBaseC1Ev+0x168>)
 8007898:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_TILETEXT).getText());
 800789a:	f104 05ac 	add.w	r5, r4, #172	@ 0xac
 800789e:	b92b      	cbnz	r3, 80078ac <_ZN8TileBaseC1Ev+0x104>
 80078a0:	4b1c      	ldr	r3, [pc, #112]	@ (8007914 <_ZN8TileBaseC1Ev+0x16c>)
 80078a2:	4a1d      	ldr	r2, [pc, #116]	@ (8007918 <_ZN8TileBaseC1Ev+0x170>)
 80078a4:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80078a6:	481d      	ldr	r0, [pc, #116]	@ (800791c <_ZN8TileBaseC1Ev+0x174>)
 80078a8:	f022 fe70 	bl	802a58c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80078ac:	4b1c      	ldr	r3, [pc, #112]	@ (8007920 <_ZN8TileBaseC1Ev+0x178>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80078ae:	881b      	ldrh	r3, [r3, #0]
 80078b0:	2b22      	cmp	r3, #34	@ 0x22
 80078b2:	d803      	bhi.n	80078bc <_ZN8TileBaseC1Ev+0x114>
 80078b4:	4b1b      	ldr	r3, [pc, #108]	@ (8007924 <_ZN8TileBaseC1Ev+0x17c>)
 80078b6:	4a18      	ldr	r2, [pc, #96]	@ (8007918 <_ZN8TileBaseC1Ev+0x170>)
 80078b8:	2161      	movs	r1, #97	@ 0x61
 80078ba:	e7f4      	b.n	80078a6 <_ZN8TileBaseC1Ev+0xfe>
        return texts->getText(typedTextId);
 80078bc:	4b1a      	ldr	r3, [pc, #104]	@ (8007928 <_ZN8TileBaseC1Ev+0x180>)
 80078be:	2122      	movs	r1, #34	@ 0x22
 80078c0:	6818      	ldr	r0, [r3, #0]
 80078c2:	f7ff fceb 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 80078c6:	4a19      	ldr	r2, [pc, #100]	@ (800792c <_ZN8TileBaseC1Ev+0x184>)
 80078c8:	4603      	mov	r3, r0
 80078ca:	210a      	movs	r1, #10
 80078cc:	4628      	mov	r0, r5
 80078ce:	f012 fdca 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1.resizeToCurrentText();
 80078d2:	4638      	mov	r0, r7
        wc1 = value;
 80078d4:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80078d8:	f00c f9ac 	bl	8013c34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80078dc:	2323      	movs	r3, #35	@ 0x23
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_68S1));
 80078de:	a904      	add	r1, sp, #16
 80078e0:	4638      	mov	r0, r7
 80078e2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80078e6:	f8cd 8010 	str.w	r8, [sp, #16]
 80078ea:	f00c f9c3 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1);
 80078ee:	4620      	mov	r0, r4
 80078f0:	4639      	mov	r1, r7
 80078f2:	f008 ff0b 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80078f6:	4620      	mov	r0, r4
 80078f8:	b006      	add	sp, #24
 80078fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078fe:	bf00      	nop
 8007900:	0802d87c 	.word	0x0802d87c
 8007904:	0802e4bc 	.word	0x0802e4bc
 8007908:	0802d040 	.word	0x0802d040
 800790c:	ffd4793d 	.word	0xffd4793d
 8007910:	20013fa4 	.word	0x20013fa4
 8007914:	0802bbe5 	.word	0x0802bbe5
 8007918:	0802bce7 	.word	0x0802bce7
 800791c:	0802bc62 	.word	0x0802bc62
 8007920:	20013fa8 	.word	0x20013fa8
 8007924:	0802bca9 	.word	0x0802bca9
 8007928:	20013fb0 	.word	0x20013fb0
 800792c:	0802bd32 	.word	0x0802bd32
 8007930:	0802d030 	.word	0x0802d030

08007934 <_ZN15Tile_letterBaseD1Ev>:
}

Tile_letterBase::~Tile_letterBase()
{

}
 8007934:	4770      	bx	lr

08007936 <_ZN15Tile_letterBase10initializeEv>:

void Tile_letterBase::initialize()
{

}
 8007936:	4770      	bx	lr

08007938 <_ZN15Tile_letterBaseD0Ev>:
Tile_letterBase::~Tile_letterBase()
 8007938:	b510      	push	{r4, lr}
}
 800793a:	21b8      	movs	r1, #184	@ 0xb8
Tile_letterBase::~Tile_letterBase()
 800793c:	4604      	mov	r4, r0
}
 800793e:	f021 fee9 	bl	8029714 <_ZdlPvj>
 8007942:	4620      	mov	r0, r4
 8007944:	bd10      	pop	{r4, pc}
	...

08007948 <_ZN15Tile_letterBaseC1Ev>:
Tile_letterBase::Tile_letterBase()
 8007948:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800794c:	4604      	mov	r4, r0
 800794e:	b086      	sub	sp, #24
 8007950:	4626      	mov	r6, r4
 8007952:	2500      	movs	r5, #0
 8007954:	f7fa fd96 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 8007958:	4b51      	ldr	r3, [pc, #324]	@ (8007aa0 <_ZN15Tile_letterBaseC1Ev+0x158>)
 800795a:	62a5      	str	r5, [r4, #40]	@ 0x28
 800795c:	f846 3b2c 	str.w	r3, [r6], #44
        : Widget(), alpha(255), color(0)
 8007960:	4629      	mov	r1, r5
 8007962:	2226      	movs	r2, #38	@ 0x26
 8007964:	4630      	mov	r0, r6
 8007966:	f023 f818 	bl	802a99a <memset>
 800796a:	4630      	mov	r0, r6
 800796c:	f7fa fd8a 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 8007970:	23ff      	movs	r3, #255	@ 0xff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8007972:	f104 0760 	add.w	r7, r4, #96	@ 0x60
 8007976:	f884 3052 	strb.w	r3, [r4, #82]	@ 0x52
        : Box(), borderColor(0), borderSize(0)
 800797a:	4b4a      	ldr	r3, [pc, #296]	@ (8007aa4 <_ZN15Tile_letterBaseC1Ev+0x15c>)
 800797c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800797e:	4629      	mov	r1, r5
 8007980:	2226      	movs	r2, #38	@ 0x26
        : color(col)
 8007982:	6565      	str	r5, [r4, #84]	@ 0x54
 8007984:	65a5      	str	r5, [r4, #88]	@ 0x58
 8007986:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 800798a:	4638      	mov	r0, r7
 800798c:	f023 f805 	bl	802a99a <memset>
 8007990:	4638      	mov	r0, r7
 8007992:	f7fa fd77 	bl	8002484 <_ZN8touchgfx8DrawableC1Ev>
 8007996:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800799a:	f8a4 308c 	strh.w	r3, [r4, #140]	@ 0x8c
 800799e:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
 80079a2:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
        : TextAreaWithWildcardBase(), wc1(0)
 80079a6:	4b40      	ldr	r3, [pc, #256]	@ (8007aa8 <_ZN15Tile_letterBaseC1Ev+0x160>)
 80079a8:	6623      	str	r3, [r4, #96]	@ 0x60
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80079aa:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 80079ae:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 80079b2:	f8df 811c 	ldr.w	r8, [pc, #284]	@ 8007ad0 <_ZN15Tile_letterBaseC1Ev+0x188>
        : color(col)
 80079b6:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        rect.width = width;
 80079ba:	f04f 133c 	mov.w	r3, #3932220	@ 0x3c003c
        setXY(x, y);
 80079be:	462a      	mov	r2, r5
        rect.width = width;
 80079c0:	60a3      	str	r3, [r4, #8]
        setXY(x, y);
 80079c2:	4629      	mov	r1, r5
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80079c4:	f8a4 5098 	strh.w	r5, [r4, #152]	@ 0x98
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80079c8:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80079cc:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80079d0:	4630      	mov	r0, r6
 80079d2:	f8c4 8088 	str.w	r8, [r4, #136]	@ 0x88
 80079d6:	f7fa fd67 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80079da:	213c      	movs	r1, #60	@ 0x3c
 80079dc:	4630      	mov	r0, r6
 80079de:	f7f9 fcab 	bl	8001338 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80079e2:	213c      	movs	r1, #60	@ 0x3c
 80079e4:	4630      	mov	r0, r6
 80079e6:	f7f9 fca9 	bl	800133c <_ZN8touchgfx8Drawable9setHeightEs>
        color = newColor;
 80079ea:	4b30      	ldr	r3, [pc, #192]	@ (8007aac <_ZN15Tile_letterBaseC1Ev+0x164>)
 80079ec:	6563      	str	r3, [r4, #84]	@ 0x54
        borderColor = colorBorder;
 80079ee:	f5a3 03ba 	sub.w	r3, r3, #6094848	@ 0x5d0000
 80079f2:	f6a3 23d8 	subw	r3, r3, #2776	@ 0xad8
 80079f6:	65a3      	str	r3, [r4, #88]	@ 0x58
        borderSize = size;
 80079f8:	2303      	movs	r3, #3
 80079fa:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
    add(boxWithBorder1);
 80079fe:	4631      	mov	r1, r6
 8007a00:	4620      	mov	r0, r4
 8007a02:	f008 fe83 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(17, 24);
 8007a06:	2218      	movs	r2, #24
 8007a08:	2111      	movs	r1, #17
 8007a0a:	4638      	mov	r0, r7
 8007a0c:	f7fa fd4c 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007a10:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8007a14:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
        boundingArea = calculateBoundingArea();
 8007a18:	6e23      	ldr	r3, [r4, #96]	@ 0x60
        linespace = space;
 8007a1a:	f8a4 5094 	strh.w	r5, [r4, #148]	@ 0x94
        boundingArea = calculateBoundingArea();
 8007a1e:	466d      	mov	r5, sp
 8007a20:	4628      	mov	r0, r5
 8007a22:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8007a26:	4639      	mov	r1, r7
 8007a28:	4798      	blx	r3
 8007a2a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007a2e:	f104 039c 	add.w	r3, r4, #156	@ 0x9c
 8007a32:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007a36:	4b1e      	ldr	r3, [pc, #120]	@ (8007ab0 <_ZN15Tile_letterBaseC1Ev+0x168>)
 8007a38:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_LETTER).getText());
 8007a3a:	f104 05ac 	add.w	r5, r4, #172	@ 0xac
 8007a3e:	b92b      	cbnz	r3, 8007a4c <_ZN15Tile_letterBaseC1Ev+0x104>
 8007a40:	4b1c      	ldr	r3, [pc, #112]	@ (8007ab4 <_ZN15Tile_letterBaseC1Ev+0x16c>)
 8007a42:	4a1d      	ldr	r2, [pc, #116]	@ (8007ab8 <_ZN15Tile_letterBaseC1Ev+0x170>)
 8007a44:	2160      	movs	r1, #96	@ 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a46:	481d      	ldr	r0, [pc, #116]	@ (8007abc <_ZN15Tile_letterBaseC1Ev+0x174>)
 8007a48:	f022 fda0 	bl	802a58c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007a4c:	4b1c      	ldr	r3, [pc, #112]	@ (8007ac0 <_ZN15Tile_letterBaseC1Ev+0x178>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a4e:	881b      	ldrh	r3, [r3, #0]
 8007a50:	2b24      	cmp	r3, #36	@ 0x24
 8007a52:	d803      	bhi.n	8007a5c <_ZN15Tile_letterBaseC1Ev+0x114>
 8007a54:	4b1b      	ldr	r3, [pc, #108]	@ (8007ac4 <_ZN15Tile_letterBaseC1Ev+0x17c>)
 8007a56:	4a18      	ldr	r2, [pc, #96]	@ (8007ab8 <_ZN15Tile_letterBaseC1Ev+0x170>)
 8007a58:	2161      	movs	r1, #97	@ 0x61
 8007a5a:	e7f4      	b.n	8007a46 <_ZN15Tile_letterBaseC1Ev+0xfe>
        return texts->getText(typedTextId);
 8007a5c:	4b1a      	ldr	r3, [pc, #104]	@ (8007ac8 <_ZN15Tile_letterBaseC1Ev+0x180>)
 8007a5e:	2124      	movs	r1, #36	@ 0x24
 8007a60:	6818      	ldr	r0, [r3, #0]
 8007a62:	f7ff fc1b 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 8007a66:	4a19      	ldr	r2, [pc, #100]	@ (8007acc <_ZN15Tile_letterBaseC1Ev+0x184>)
 8007a68:	4603      	mov	r3, r0
 8007a6a:	2105      	movs	r1, #5
 8007a6c:	4628      	mov	r0, r5
 8007a6e:	f012 fcfa 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea1.resizeToCurrentText();
 8007a72:	4638      	mov	r0, r7
        wc1 = value;
 8007a74:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 8007a78:	f00c f8dc 	bl	8013c34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007a7c:	2325      	movs	r3, #37	@ 0x25
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XRQC));
 8007a7e:	a904      	add	r1, sp, #16
 8007a80:	4638      	mov	r0, r7
 8007a82:	f8ad 3014 	strh.w	r3, [sp, #20]
 8007a86:	f8cd 8010 	str.w	r8, [sp, #16]
 8007a8a:	f00c f8f3 	bl	8013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea1);
 8007a8e:	4620      	mov	r0, r4
 8007a90:	4639      	mov	r1, r7
 8007a92:	f008 fe3b 	bl	801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007a96:	4620      	mov	r0, r4
 8007a98:	b006      	add	sp, #24
 8007a9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007a9e:	bf00      	nop
 8007aa0:	0802d910 	.word	0x0802d910
 8007aa4:	0802e4bc 	.word	0x0802e4bc
 8007aa8:	0802d040 	.word	0x0802d040
 8007aac:	ffd4793d 	.word	0xffd4793d
 8007ab0:	20013fa4 	.word	0x20013fa4
 8007ab4:	0802bbe5 	.word	0x0802bbe5
 8007ab8:	0802bce7 	.word	0x0802bce7
 8007abc:	0802bc62 	.word	0x0802bc62
 8007ac0:	20013fa8 	.word	0x20013fa8
 8007ac4:	0802bca9 	.word	0x0802bca9
 8007ac8:	20013fb0 	.word	0x20013fb0
 8007acc:	0802bd32 	.word	0x0802bd32
 8007ad0:	0802d030 	.word	0x0802d030

08007ad4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8007ad4:	202a      	movs	r0, #42	@ 0x2a
 8007ad6:	4770      	bx	lr

08007ad8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8007ad8:	4800      	ldr	r0, [pc, #0]	@ (8007adc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8007ada:	4770      	bx	lr
 8007adc:	20003190 	.word	0x20003190

08007ae0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 4:
        touchgfx_fonts[4] = &(getFont_verdanab_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8007ae0:	b510      	push	{r4, lr}
    &(getFont_verdanab_15_4bpp()),
 8007ae2:	f7ff fa75 	bl	8006fd0 <_Z24getFont_verdanab_15_4bppv>
};
 8007ae6:	4c07      	ldr	r4, [pc, #28]	@ (8007b04 <_GLOBAL__sub_I_touchgfx_fonts+0x24>)
 8007ae8:	6020      	str	r0, [r4, #0]
    &(getFont_verdanab_25_4bpp()),
 8007aea:	f7ff faeb 	bl	80070c4 <_Z24getFont_verdanab_25_4bppv>
};
 8007aee:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8007af0:	f7ff f9f4 	bl	8006edc <_Z23getFont_verdana_10_4bppv>
};
 8007af4:	60a0      	str	r0, [r4, #8]
    &(getFont_verdanab_24_4bpp()),
 8007af6:	f7ff faa9 	bl	800704c <_Z24getFont_verdanab_24_4bppv>
};
 8007afa:	60e0      	str	r0, [r4, #12]
    &(getFont_verdanab_10_4bpp())
 8007afc:	f7ff fa2a 	bl	8006f54 <_Z24getFont_verdanab_10_4bppv>
};
 8007b00:	6120      	str	r0, [r4, #16]
} // namespace TypedTextDatabase
 8007b02:	bd10      	pop	{r4, pc}
 8007b04:	20003190 	.word	0x20003190

08007b08 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 8007b08:	b510      	push	{r4, lr}
    pointArray = 0;
 8007b0a:	2400      	movs	r4, #0
 8007b0c:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 8007b0e:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 8007b10:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 8007b12:	601c      	str	r4, [r3, #0]
}
 8007b14:	bd10      	pop	{r4, pc}
	...

08007b18 <_ZN4BestD1Ev>:
 8007b18:	b510      	push	{r4, lr}
 8007b1a:	4b03      	ldr	r3, [pc, #12]	@ (8007b28 <_ZN4BestD1Ev+0x10>)
 8007b1c:	6003      	str	r3, [r0, #0]
 8007b1e:	4604      	mov	r4, r0
 8007b20:	f7fa fc56 	bl	80023d0 <_ZN8BestBaseD1Ev>
 8007b24:	4620      	mov	r0, r4
 8007b26:	bd10      	pop	{r4, pc}
 8007b28:	0802d9a4 	.word	0x0802d9a4

08007b2c <_ZN4BestD0Ev>:
 8007b2c:	b510      	push	{r4, lr}
 8007b2e:	4604      	mov	r4, r0
 8007b30:	f7ff fff2 	bl	8007b18 <_ZN4BestD1Ev>
 8007b34:	4620      	mov	r0, r4
 8007b36:	f44f 718a 	mov.w	r1, #276	@ 0x114
 8007b3a:	f021 fdeb 	bl	8029714 <_ZdlPvj>
 8007b3e:	4620      	mov	r0, r4
 8007b40:	bd10      	pop	{r4, pc}
	...

08007b44 <_ZN4BestC1Ev>:
#include <gui/containers/Best.hpp>

Best::Best()
 8007b44:	b510      	push	{r4, lr}
 8007b46:	4604      	mov	r4, r0
 8007b48:	f7fa fcde 	bl	8002508 <_ZN8BestBaseC1Ev>
 8007b4c:	4b01      	ldr	r3, [pc, #4]	@ (8007b54 <_ZN4BestC1Ev+0x10>)
 8007b4e:	6023      	str	r3, [r4, #0]
{

}
 8007b50:	4620      	mov	r0, r4
 8007b52:	bd10      	pop	{r4, pc}
 8007b54:	0802d9a4 	.word	0x0802d9a4

08007b58 <_ZN4Best8setScoreEm>:
{
    BestBase::initialize();
    bestText.setWildcard(bestBuffer);
}
void Best::setScore(uint32_t best)
{
 8007b58:	b510      	push	{r4, lr}
 8007b5a:	460b      	mov	r3, r1
 8007b5c:	4604      	mov	r4, r0
    Unicode::snprintf(bestBuffer, sizeof(bestBuffer), "%u", best);
 8007b5e:	4a06      	ldr	r2, [pc, #24]	@ (8007b78 <_ZN4Best8setScoreEm+0x20>)
 8007b60:	2114      	movs	r1, #20
 8007b62:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 8007b66:	f012 fc7e 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    bestText.invalidate();  // Cập nhật lại hiển thị
 8007b6a:	f104 00a0 	add.w	r0, r4, #160	@ 0xa0
 8007b6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bestText.invalidate();  // Cập nhật lại hiển thị
 8007b72:	f010 b937 	b.w	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007b76:	bf00      	nop
 8007b78:	0802cc74 	.word	0x0802cc74

08007b7c <_ZN4Best10initializeEv>:
{
 8007b7c:	b510      	push	{r4, lr}
 8007b7e:	4604      	mov	r4, r0
    BestBase::initialize();
 8007b80:	f7fa fc27 	bl	80023d2 <_ZN8BestBase10initializeEv>
    bestText.setWildcard(bestBuffer);
 8007b84:	f504 7380 	add.w	r3, r4, #256	@ 0x100
 8007b88:	f8c4 30e8 	str.w	r3, [r4, #232]	@ 0xe8
}
 8007b8c:	bd10      	pop	{r4, pc}

08007b8e <_ZN21Chosing_modePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Chosing_modePresenter() {}
 8007b8e:	4770      	bx	lr

08007b90 <_ZThn4_N21Chosing_modePresenterD1Ev>:
 8007b90:	3804      	subs	r0, #4
 8007b92:	4770      	bx	lr

08007b94 <_ZN21Chosing_modePresenter10deactivateEv>:
}

void Chosing_modePresenter::activate()
{

}
 8007b94:	4770      	bx	lr

08007b96 <_ZN21Chosing_modePresenterD0Ev>:
 8007b96:	b510      	push	{r4, lr}
 8007b98:	2110      	movs	r1, #16
 8007b9a:	4604      	mov	r4, r0
 8007b9c:	f021 fdba 	bl	8029714 <_ZdlPvj>
 8007ba0:	4620      	mov	r0, r4
 8007ba2:	bd10      	pop	{r4, pc}

08007ba4 <_ZThn4_N21Chosing_modePresenterD0Ev>:
 8007ba4:	f1a0 0004 	sub.w	r0, r0, #4
 8007ba8:	e7f5      	b.n	8007b96 <_ZN21Chosing_modePresenterD0Ev>
	...

08007bac <_ZN21Chosing_modePresenterC1ER16Chosing_modeView>:
    ModelListener() : model(0) {}
 8007bac:	2200      	movs	r2, #0
 8007bae:	6082      	str	r2, [r0, #8]
    : view(v)
 8007bb0:	4a02      	ldr	r2, [pc, #8]	@ (8007bbc <_ZN21Chosing_modePresenterC1ER16Chosing_modeView+0x10>)
 8007bb2:	6002      	str	r2, [r0, #0]
 8007bb4:	3218      	adds	r2, #24
 8007bb6:	6042      	str	r2, [r0, #4]
 8007bb8:	60c1      	str	r1, [r0, #12]
}
 8007bba:	4770      	bx	lr
 8007bbc:	0802da38 	.word	0x0802da38

08007bc0 <_ZN16Chosing_modeView14tearDownScreenEv>:
}

void Chosing_modeView::tearDownScreen()
{
    Chosing_modeViewBase::tearDownScreen();
}
 8007bc0:	4770      	bx	lr
	...

08007bc4 <_ZN16Chosing_modeViewD1Ev>:

class Chosing_modeView : public Chosing_modeViewBase
{
public:
    Chosing_modeView();
    virtual ~Chosing_modeView() {}
 8007bc4:	b510      	push	{r4, lr}
 8007bc6:	4b03      	ldr	r3, [pc, #12]	@ (8007bd4 <_ZN16Chosing_modeViewD1Ev+0x10>)
 8007bc8:	6003      	str	r3, [r0, #0]
 8007bca:	4604      	mov	r4, r0
 8007bcc:	f7fa fd99 	bl	8002702 <_ZN20Chosing_modeViewBaseD1Ev>
 8007bd0:	4620      	mov	r0, r4
 8007bd2:	bd10      	pop	{r4, pc}
 8007bd4:	0802da60 	.word	0x0802da60

08007bd8 <_ZN16Chosing_modeViewD0Ev>:
 8007bd8:	b510      	push	{r4, lr}
 8007bda:	4604      	mov	r4, r0
 8007bdc:	f7ff fff2 	bl	8007bc4 <_ZN16Chosing_modeViewD1Ev>
 8007be0:	4620      	mov	r0, r4
 8007be2:	f44f 714d 	mov.w	r1, #820	@ 0x334
 8007be6:	f021 fd95 	bl	8029714 <_ZdlPvj>
 8007bea:	4620      	mov	r0, r4
 8007bec:	bd10      	pop	{r4, pc}
	...

08007bf0 <_ZN16Chosing_modeViewC1Ev>:
Chosing_modeView::Chosing_modeView()
 8007bf0:	b510      	push	{r4, lr}
 8007bf2:	4604      	mov	r4, r0
      currentIndex(0)
 8007bf4:	f7fa fe76 	bl	80028e4 <_ZN20Chosing_modeViewBaseC1Ev>
 8007bf8:	4b03      	ldr	r3, [pc, #12]	@ (8007c08 <_ZN16Chosing_modeViewC1Ev+0x18>)
 8007bfa:	6023      	str	r3, [r4, #0]
 8007bfc:	2300      	movs	r3, #0
 8007bfe:	f884 3330 	strb.w	r3, [r4, #816]	@ 0x330
}
 8007c02:	4620      	mov	r0, r4
 8007c04:	bd10      	pop	{r4, pc}
 8007c06:	bf00      	nop
 8007c08:	0802da60 	.word	0x0802da60

08007c0c <_ZN16Chosing_modeView10selectModeEv>:

    updateHighlight();
}

void Chosing_modeView::selectMode()
{
 8007c0c:	b508      	push	{r3, lr}
    if (currentIndex == 0)
 8007c0e:	f890 3330 	ldrb.w	r3, [r0, #816]	@ 0x330
 8007c12:	b92b      	cbnz	r3, 8007c20 <_ZN16Chosing_modeView10selectModeEv+0x14>
 8007c14:	f00e fec2 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    }
    else if (currentIndex == 2)
    {
        application().gotoScreen5x5_letterMergingScreenSlideTransitionEast();
    }
}
 8007c18:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoSelectedGameDesignScreenSlideTransitionEast();
 8007c1c:	f7fb babc 	b.w	8003198 <_ZN23FrontendApplicationBase47gotoSelectedGameDesignScreenSlideTransitionEastEv>
    else if (currentIndex == 1)
 8007c20:	2b01      	cmp	r3, #1
 8007c22:	d105      	bne.n	8007c30 <_ZN16Chosing_modeView10selectModeEv+0x24>
 8007c24:	f00e feba 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
}
 8007c28:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen5x5_superMergingScreenSlideTransitionEast();
 8007c2c:	f7fb ba64 	b.w	80030f8 <_ZN23FrontendApplicationBase51gotoScreen5x5_superMergingScreenSlideTransitionEastEv>
    else if (currentIndex == 2)
 8007c30:	2b02      	cmp	r3, #2
 8007c32:	d105      	bne.n	8007c40 <_ZN16Chosing_modeView10selectModeEv+0x34>
 8007c34:	f00e feb2 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
}
 8007c38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen5x5_letterMergingScreenSlideTransitionEast();
 8007c3c:	f7fb ba8c 	b.w	8003158 <_ZN23FrontendApplicationBase52gotoScreen5x5_letterMergingScreenSlideTransitionEastEv>
}
 8007c40:	bd08      	pop	{r3, pc}
	...

08007c44 <_ZN16Chosing_modeView15updateHighlightEv>:

void Chosing_modeView::updateHighlight()
{
 8007c44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    flexButton1.setBoxWithBorderColors(
 8007c48:	f8df 909c 	ldr.w	r9, [pc, #156]	@ 8007ce8 <_ZN16Chosing_modeView15updateHighlightEv+0xa4>
 8007c4c:	f890 2330 	ldrb.w	r2, [r0, #816]	@ 0x330
 8007c50:	4d22      	ldr	r5, [pc, #136]	@ (8007cdc <_ZN16Chosing_modeView15updateHighlightEv+0x98>)
        borderUp = borderColorReleased;
 8007c52:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8007cec <_ZN16Chosing_modeView15updateHighlightEv+0xa8>
 8007c56:	4f22      	ldr	r7, [pc, #136]	@ (8007ce0 <_ZN16Chosing_modeView15updateHighlightEv+0x9c>)
        borderDown = borderColorPressed;
 8007c58:	4e22      	ldr	r6, [pc, #136]	@ (8007ce4 <_ZN16Chosing_modeView15updateHighlightEv+0xa0>)
 8007c5a:	f8c0 6154 	str.w	r6, [r0, #340]	@ 0x154
 8007c5e:	2a00      	cmp	r2, #0
 8007c60:	bf14      	ite	ne
 8007c62:	462b      	movne	r3, r5
 8007c64:	464b      	moveq	r3, r9
        up = colorReleased;
 8007c66:	f8c0 3148 	str.w	r3, [r0, #328]	@ 0x148
        handlePressedUpdated();
 8007c6a:	f8d0 30e0 	ldr.w	r3, [r0, #224]	@ 0xe0
 8007c6e:	f100 0ae0 	add.w	sl, r0, #224	@ 0xe0
{
 8007c72:	4604      	mov	r4, r0
        borderUp = borderColorReleased;
 8007c74:	e9c0 8753 	strd	r8, r7, [r0, #332]	@ 0x14c
        handlePressedUpdated();
 8007c78:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8007c7c:	4650      	mov	r0, sl
 8007c7e:	4798      	blx	r3
        (currentIndex == 0) ? touchgfx::Color::getColorFromRGB(255, 0, 0)
                            : touchgfx::Color::getColorFromRGB(0, 102, 153),
        touchgfx::Color::getColorFromRGB(0, 153, 204),
        touchgfx::Color::getColorFromRGB(0, 51, 102),
        touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton1.invalidate();
 8007c80:	4650      	mov	r0, sl
 8007c82:	f010 f8af 	bl	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>

    flexButton2.setBoxWithBorderColors(
 8007c86:	f894 2330 	ldrb.w	r2, [r4, #816]	@ 0x330
 8007c8a:	2a01      	cmp	r2, #1
 8007c8c:	bf14      	ite	ne
 8007c8e:	462b      	movne	r3, r5
 8007c90:	464b      	moveq	r3, r9
        down = colorPressed;
 8007c92:	e9c4 3870 	strd	r3, r8, [r4, #448]	@ 0x1c0
        handlePressedUpdated();
 8007c96:	f8d4 3158 	ldr.w	r3, [r4, #344]	@ 0x158
 8007c9a:	f504 7aac 	add.w	sl, r4, #344	@ 0x158
 8007c9e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8007ca2:	4650      	mov	r0, sl
        borderDown = borderColorPressed;
 8007ca4:	e9c4 7672 	strd	r7, r6, [r4, #456]	@ 0x1c8
        handlePressedUpdated();
 8007ca8:	4798      	blx	r3
        (currentIndex == 1) ? touchgfx::Color::getColorFromRGB(255, 0, 0)
                            : touchgfx::Color::getColorFromRGB(0, 102, 153),
        touchgfx::Color::getColorFromRGB(0, 153, 204),
        touchgfx::Color::getColorFromRGB(0, 51, 102),
        touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton2.invalidate();
 8007caa:	4650      	mov	r0, sl
 8007cac:	f010 f89a 	bl	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>

    flexButton3.setBoxWithBorderColors(
 8007cb0:	f894 3330 	ldrb.w	r3, [r4, #816]	@ 0x330
 8007cb4:	2b02      	cmp	r3, #2
 8007cb6:	bf08      	it	eq
 8007cb8:	464d      	moveq	r5, r9
 8007cba:	f8d4 31d0 	ldr.w	r3, [r4, #464]	@ 0x1d0
 8007cbe:	f504 7ae8 	add.w	sl, r4, #464	@ 0x1d0
 8007cc2:	4650      	mov	r0, sl
        down = colorPressed;
 8007cc4:	e9c4 588e 	strd	r5, r8, [r4, #568]	@ 0x238
        borderDown = borderColorPressed;
 8007cc8:	e9c4 7690 	strd	r7, r6, [r4, #576]	@ 0x240
        handlePressedUpdated();
 8007ccc:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8007cd0:	4798      	blx	r3
        (currentIndex == 2) ? touchgfx::Color::getColorFromRGB(255, 0, 0)
                            : touchgfx::Color::getColorFromRGB(0, 102, 153),
        touchgfx::Color::getColorFromRGB(0, 153, 204),
        touchgfx::Color::getColorFromRGB(0, 51, 102),
        touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton3.invalidate();
 8007cd2:	4650      	mov	r0, sl
}
 8007cd4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    flexButton3.invalidate();
 8007cd8:	f010 b884 	b.w	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007cdc:	ff006699 	.word	0xff006699
 8007ce0:	ff003366 	.word	0xff003366
 8007ce4:	ff336699 	.word	0xff336699
 8007ce8:	ffff0000 	.word	0xffff0000
 8007cec:	ff0099cc 	.word	0xff0099cc

08007cf0 <_ZN16Chosing_modeView11setupScreenEv>:
{
 8007cf0:	b510      	push	{r4, lr}
 8007cf2:	4604      	mov	r4, r0
    Chosing_modeViewBase::setupScreen();
 8007cf4:	f7fa fd06 	bl	8002704 <_ZN20Chosing_modeViewBase11setupScreenEv>
    currentIndex = 0;
 8007cf8:	2300      	movs	r3, #0
 8007cfa:	f884 3330 	strb.w	r3, [r4, #816]	@ 0x330
    updateHighlight();
 8007cfe:	4620      	mov	r0, r4
}
 8007d00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateHighlight();
 8007d04:	f7ff bf9e 	b.w	8007c44 <_ZN16Chosing_modeView15updateHighlightEv>

08007d08 <_ZN16Chosing_modeView6moveUpEv>:
    if (currentIndex > 0)
 8007d08:	f890 3330 	ldrb.w	r3, [r0, #816]	@ 0x330
 8007d0c:	b12b      	cbz	r3, 8007d1a <_ZN16Chosing_modeView6moveUpEv+0x12>
        currentIndex--;
 8007d0e:	3b01      	subs	r3, #1
 8007d10:	b2db      	uxtb	r3, r3
 8007d12:	f880 3330 	strb.w	r3, [r0, #816]	@ 0x330
    updateHighlight();
 8007d16:	f7ff bf95 	b.w	8007c44 <_ZN16Chosing_modeView15updateHighlightEv>
        currentIndex = MODE_COUNT - 1;
 8007d1a:	2302      	movs	r3, #2
 8007d1c:	e7f9      	b.n	8007d12 <_ZN16Chosing_modeView6moveUpEv+0xa>

08007d1e <_ZN16Chosing_modeView8moveDownEv>:
    if (currentIndex < MODE_COUNT - 1)
 8007d1e:	f890 3330 	ldrb.w	r3, [r0, #816]	@ 0x330
 8007d22:	2b01      	cmp	r3, #1
        currentIndex++;
 8007d24:	bf9a      	itte	ls
 8007d26:	3301      	addls	r3, #1
 8007d28:	b2db      	uxtbls	r3, r3
        currentIndex = 0;
 8007d2a:	2300      	movhi	r3, #0
 8007d2c:	f880 3330 	strb.w	r3, [r0, #816]	@ 0x330
    updateHighlight();
 8007d30:	f7ff bf88 	b.w	8007c44 <_ZN16Chosing_modeView15updateHighlightEv>

08007d34 <_ZN16Chosing_modeView15handleTickEventEv>:

void Chosing_modeView::handleTickEvent()
{
 8007d34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}

    static uint8_t lastPB10;
    static uint8_t lastPB12;
    static uint8_t lastPA0;

    uint8_t PB10 = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10);
 8007d38:	f44f 6180 	mov.w	r1, #1024	@ 0x400
{
 8007d3c:	4605      	mov	r5, r0
    uint8_t PB10 = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10);
 8007d3e:	4820      	ldr	r0, [pc, #128]	@ (8007dc0 <_ZN16Chosing_modeView15handleTickEventEv+0x8c>)
 8007d40:	f8df a088 	ldr.w	sl, [pc, #136]	@ 8007dcc <_ZN16Chosing_modeView15handleTickEventEv+0x98>
 8007d44:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8007dd0 <_ZN16Chosing_modeView15handleTickEventEv+0x9c>
 8007d48:	f8df 8088 	ldr.w	r8, [pc, #136]	@ 8007dd4 <_ZN16Chosing_modeView15handleTickEventEv+0xa0>
 8007d4c:	f004 fbec 	bl	800c528 <HAL_GPIO_ReadPin>
    uint8_t PB12 = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12);
 8007d50:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
    uint8_t PB10 = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10);
 8007d54:	4607      	mov	r7, r0
    uint8_t PB12 = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12);
 8007d56:	481a      	ldr	r0, [pc, #104]	@ (8007dc0 <_ZN16Chosing_modeView15handleTickEventEv+0x8c>)
 8007d58:	f004 fbe6 	bl	800c528 <HAL_GPIO_ReadPin>
    uint8_t PA0 = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 8007d5c:	2101      	movs	r1, #1
    uint8_t PB12 = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12);
 8007d5e:	4606      	mov	r6, r0
    uint8_t PA0 = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 8007d60:	4818      	ldr	r0, [pc, #96]	@ (8007dc4 <_ZN16Chosing_modeView15handleTickEventEv+0x90>)
 8007d62:	f004 fbe1 	bl	800c528 <HAL_GPIO_ReadPin>

    if (firstTick)
 8007d66:	4b18      	ldr	r3, [pc, #96]	@ (8007dc8 <_ZN16Chosing_modeView15handleTickEventEv+0x94>)
 8007d68:	781a      	ldrb	r2, [r3, #0]
    uint8_t PA0 = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 8007d6a:	4604      	mov	r4, r0
    if (firstTick)
 8007d6c:	b14a      	cbz	r2, 8007d82 <_ZN16Chosing_modeView15handleTickEventEv+0x4e>
    {
        lastPB10 = PB10;
        lastPB12 = PB12;
        lastPA0 = PA0;
        firstTick = false;
 8007d6e:	2200      	movs	r2, #0
        lastPB10 = PB10;
 8007d70:	f88a 7000 	strb.w	r7, [sl]
        lastPB12 = PB12;
 8007d74:	f889 6000 	strb.w	r6, [r9]
        lastPA0 = PA0;
 8007d78:	f888 0000 	strb.w	r0, [r8]
        firstTick = false;
 8007d7c:	701a      	strb	r2, [r3, #0]
    if (PA0 == GPIO_PIN_RESET && lastPA0 == GPIO_PIN_SET)
    {
        selectMode();
    }
    lastPA0 = PA0;
}
 8007d7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (PB10 == GPIO_PIN_RESET && lastPB10 == GPIO_PIN_SET)
 8007d82:	b937      	cbnz	r7, 8007d92 <_ZN16Chosing_modeView15handleTickEventEv+0x5e>
 8007d84:	f89a 3000 	ldrb.w	r3, [sl]
 8007d88:	2b01      	cmp	r3, #1
 8007d8a:	d102      	bne.n	8007d92 <_ZN16Chosing_modeView15handleTickEventEv+0x5e>
        moveUp();
 8007d8c:	4628      	mov	r0, r5
 8007d8e:	f7ff ffbb 	bl	8007d08 <_ZN16Chosing_modeView6moveUpEv>
    lastPB10 = PB10;
 8007d92:	f88a 7000 	strb.w	r7, [sl]
    if (PB12 == GPIO_PIN_RESET && lastPB12 == GPIO_PIN_SET)
 8007d96:	b936      	cbnz	r6, 8007da6 <_ZN16Chosing_modeView15handleTickEventEv+0x72>
 8007d98:	f899 3000 	ldrb.w	r3, [r9]
 8007d9c:	2b01      	cmp	r3, #1
 8007d9e:	d102      	bne.n	8007da6 <_ZN16Chosing_modeView15handleTickEventEv+0x72>
        moveDown();
 8007da0:	4628      	mov	r0, r5
 8007da2:	f7ff ffbc 	bl	8007d1e <_ZN16Chosing_modeView8moveDownEv>
    lastPB12 = PB12;
 8007da6:	f889 6000 	strb.w	r6, [r9]
    if (PA0 == GPIO_PIN_RESET && lastPA0 == GPIO_PIN_SET)
 8007daa:	b934      	cbnz	r4, 8007dba <_ZN16Chosing_modeView15handleTickEventEv+0x86>
 8007dac:	f898 3000 	ldrb.w	r3, [r8]
 8007db0:	2b01      	cmp	r3, #1
 8007db2:	d102      	bne.n	8007dba <_ZN16Chosing_modeView15handleTickEventEv+0x86>
        selectMode();
 8007db4:	4628      	mov	r0, r5
 8007db6:	f7ff ff29 	bl	8007c0c <_ZN16Chosing_modeView10selectModeEv>
    lastPA0 = PA0;
 8007dba:	f888 4000 	strb.w	r4, [r8]
 8007dbe:	e7de      	b.n	8007d7e <_ZN16Chosing_modeView15handleTickEventEv+0x4a>
 8007dc0:	40020400 	.word	0x40020400
 8007dc4:	40020000 	.word	0x40020000
 8007dc8:	20000014 	.word	0x20000014
 8007dcc:	200031a6 	.word	0x200031a6
 8007dd0:	200031a5 	.word	0x200031a5
 8007dd4:	200031a4 	.word	0x200031a4

08007dd8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8007dd8:	4770      	bx	lr

08007dda <_ZN19FrontendApplicationD0Ev>:
 8007dda:	b510      	push	{r4, lr}
 8007ddc:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8007de0:	4604      	mov	r4, r0
 8007de2:	f021 fc97 	bl	8029714 <_ZdlPvj>
 8007de6:	4620      	mov	r0, r4
 8007de8:	bd10      	pop	{r4, pc}

08007dea <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8007dea:	b510      	push	{r4, lr}
 8007dec:	4604      	mov	r4, r0
    {
        model.tick();
 8007dee:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8007df2:	f000 fd8e 	bl	8008912 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8007df6:	4620      	mov	r0, r4
    }
 8007df8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8007dfc:	f00e be92 	b.w	8016b24 <_ZN8touchgfx11Application15handleTickEventEv>

08007e00 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8007e00:	b510      	push	{r4, lr}
 8007e02:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8007e04:	f7fb f8f4 	bl	8002ff0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8007e08:	4b01      	ldr	r3, [pc, #4]	@ (8007e10 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8007e0a:	6023      	str	r3, [r4, #0]
{

}
 8007e0c:	4620      	mov	r0, r4
 8007e0e:	bd10      	pop	{r4, pc}
 8007e10:	0802da94 	.word	0x0802da94

08007e14 <_ZN23GameOverScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~GameOverScreenPresenter() {}
 8007e14:	4770      	bx	lr

08007e16 <_ZThn4_N23GameOverScreenPresenterD1Ev>:
 8007e16:	3804      	subs	r0, #4
 8007e18:	4770      	bx	lr

08007e1a <_ZN23GameOverScreenPresenter10deactivateEv>:
}

void GameOverScreenPresenter::activate()
{

}
 8007e1a:	4770      	bx	lr

08007e1c <_ZN23GameOverScreenPresenterD0Ev>:
 8007e1c:	b510      	push	{r4, lr}
 8007e1e:	2110      	movs	r1, #16
 8007e20:	4604      	mov	r4, r0
 8007e22:	f021 fc77 	bl	8029714 <_ZdlPvj>
 8007e26:	4620      	mov	r0, r4
 8007e28:	bd10      	pop	{r4, pc}

08007e2a <_ZThn4_N23GameOverScreenPresenterD0Ev>:
 8007e2a:	f1a0 0004 	sub.w	r0, r0, #4
 8007e2e:	e7f5      	b.n	8007e1c <_ZN23GameOverScreenPresenterD0Ev>

08007e30 <_ZN23GameOverScreenPresenterC1ER18GameOverScreenView>:
 8007e30:	2200      	movs	r2, #0
 8007e32:	6082      	str	r2, [r0, #8]
    : view(v)
 8007e34:	4a02      	ldr	r2, [pc, #8]	@ (8007e40 <_ZN23GameOverScreenPresenterC1ER18GameOverScreenView+0x10>)
 8007e36:	6002      	str	r2, [r0, #0]
 8007e38:	3218      	adds	r2, #24
 8007e3a:	6042      	str	r2, [r0, #4]
 8007e3c:	60c1      	str	r1, [r0, #12]
}
 8007e3e:	4770      	bx	lr
 8007e40:	0802dae8 	.word	0x0802dae8

08007e44 <_ZN18GameOverScreenView14tearDownScreenEv>:
}

void GameOverScreenView::tearDownScreen()
{
    GameOverScreenViewBase::tearDownScreen();
}
 8007e44:	4770      	bx	lr
	...

08007e48 <_ZN18GameOverScreenView15handleTickEventEv>:
void GameOverScreenView::handleTickEvent()
{
 8007e48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    static uint32_t lastPressTime = 0;
    const uint32_t debounceDelay = 200; // Thời gian chống dội (ms)
    uint32_t currentTime = HAL_GetTick();
 8007e4a:	f004 f913 	bl	800c074 <HAL_GetTick>
    uint8_t currentState = 0;
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 1 : 0);  // PA0: BACK

    static uint8_t lastState = 0;

    if (currentTime - lastPressTime > debounceDelay)
 8007e4e:	4f0d      	ldr	r7, [pc, #52]	@ (8007e84 <_ZN18GameOverScreenView15handleTickEventEv+0x3c>)
    uint32_t currentTime = HAL_GetTick();
 8007e50:	4605      	mov	r5, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 1 : 0);  // PA0: BACK
 8007e52:	2101      	movs	r1, #1
 8007e54:	480c      	ldr	r0, [pc, #48]	@ (8007e88 <_ZN18GameOverScreenView15handleTickEventEv+0x40>)
 8007e56:	f004 fb67 	bl	800c528 <HAL_GPIO_ReadPin>
    if (currentTime - lastPressTime > debounceDelay)
 8007e5a:	683b      	ldr	r3, [r7, #0]
 8007e5c:	1aeb      	subs	r3, r5, r3
 8007e5e:	2bc8      	cmp	r3, #200	@ 0xc8
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 1 : 0);  // PA0: BACK
 8007e60:	4604      	mov	r4, r0
    if (currentTime - lastPressTime > debounceDelay)
 8007e62:	d90e      	bls.n	8007e82 <_ZN18GameOverScreenView15handleTickEventEv+0x3a>
    {
        if ((currentState & 1) && !(lastState & 1)) // PA0: BACK
 8007e64:	2801      	cmp	r0, #1
 8007e66:	4e09      	ldr	r6, [pc, #36]	@ (8007e8c <_ZN18GameOverScreenView15handleTickEventEv+0x44>)
 8007e68:	d107      	bne.n	8007e7a <_ZN18GameOverScreenView15handleTickEventEv+0x32>
 8007e6a:	7833      	ldrb	r3, [r6, #0]
 8007e6c:	07da      	lsls	r2, r3, #31
 8007e6e:	d404      	bmi.n	8007e7a <_ZN18GameOverScreenView15handleTickEventEv+0x32>
 8007e70:	f00e fd94 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        {
            application().gotoChosing_modeScreenBlockTransition();
 8007e74:	f7fb f920 	bl	80030b8 <_ZN23FrontendApplicationBase37gotoChosing_modeScreenBlockTransitionEv>
            lastPressTime = currentTime;
 8007e78:	603d      	str	r5, [r7, #0]
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 1 : 0);  // PA0: BACK
 8007e7a:	1e63      	subs	r3, r4, #1
 8007e7c:	425c      	negs	r4, r3
 8007e7e:	415c      	adcs	r4, r3
 8007e80:	7034      	strb	r4, [r6, #0]
        }

        lastState = currentState;
    }
}
 8007e82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007e84:	200031b4 	.word	0x200031b4
 8007e88:	40020000 	.word	0x40020000
 8007e8c:	200031b0 	.word	0x200031b0

08007e90 <_ZN18GameOverScreenViewD1Ev>:

class GameOverScreenView : public GameOverScreenViewBase
{
public:
    GameOverScreenView();
    virtual ~GameOverScreenView() {}
 8007e90:	b510      	push	{r4, lr}
 8007e92:	4b03      	ldr	r3, [pc, #12]	@ (8007ea0 <_ZN18GameOverScreenViewD1Ev+0x10>)
 8007e94:	6003      	str	r3, [r0, #0]
 8007e96:	4604      	mov	r4, r0
 8007e98:	f7fc f98d 	bl	80041b6 <_ZN22GameOverScreenViewBaseD1Ev>
 8007e9c:	4620      	mov	r0, r4
 8007e9e:	bd10      	pop	{r4, pc}
 8007ea0:	0802db10 	.word	0x0802db10

08007ea4 <_ZN18GameOverScreenViewD0Ev>:
 8007ea4:	b510      	push	{r4, lr}
 8007ea6:	4604      	mov	r4, r0
 8007ea8:	f7ff fff2 	bl	8007e90 <_ZN18GameOverScreenViewD1Ev>
 8007eac:	4620      	mov	r0, r4
 8007eae:	f44f 714c 	mov.w	r1, #816	@ 0x330
 8007eb2:	f021 fc2f 	bl	8029714 <_ZdlPvj>
 8007eb6:	4620      	mov	r0, r4
 8007eb8:	bd10      	pop	{r4, pc}
	...

08007ebc <_ZN18GameOverScreenViewC1Ev>:
GameOverScreenView::GameOverScreenView()
 8007ebc:	b510      	push	{r4, lr}
 8007ebe:	4604      	mov	r4, r0
 8007ec0:	f7fc f9b0 	bl	8004224 <_ZN22GameOverScreenViewBaseC1Ev>
 8007ec4:	4b01      	ldr	r3, [pc, #4]	@ (8007ecc <_ZN18GameOverScreenViewC1Ev+0x10>)
 8007ec6:	6023      	str	r3, [r4, #0]
}
 8007ec8:	4620      	mov	r0, r4
 8007eca:	bd10      	pop	{r4, pc}
 8007ecc:	0802db10 	.word	0x0802db10

08007ed0 <_ZN18GameOverScreenView11setupScreenEv>:
{   
 8007ed0:	b538      	push	{r3, r4, r5, lr}
    Unicode::snprintf(scoreTextBuffer, SCORETEXT_SIZE, "%u", GameGlobal::yourScore);
 8007ed2:	4d0f      	ldr	r5, [pc, #60]	@ (8007f10 <_ZN18GameOverScreenView11setupScreenEv+0x40>)
 8007ed4:	4b0f      	ldr	r3, [pc, #60]	@ (8007f14 <_ZN18GameOverScreenView11setupScreenEv+0x44>)
{   
 8007ed6:	4604      	mov	r4, r0
    Unicode::snprintf(scoreTextBuffer, SCORETEXT_SIZE, "%u", GameGlobal::yourScore);
 8007ed8:	462a      	mov	r2, r5
 8007eda:	681b      	ldr	r3, [r3, #0]
 8007edc:	210a      	movs	r1, #10
 8007ede:	f500 703e 	add.w	r0, r0, #760	@ 0x2f8
 8007ee2:	f012 fac0 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    Unicode::snprintf(bestTextBuffer, BESTTEXT_SIZE, "%u", GameGlobal::bestScore);
 8007ee6:	4b0c      	ldr	r3, [pc, #48]	@ (8007f18 <_ZN18GameOverScreenView11setupScreenEv+0x48>)
 8007ee8:	462a      	mov	r2, r5
 8007eea:	681b      	ldr	r3, [r3, #0]
 8007eec:	210a      	movs	r1, #10
 8007eee:	f504 7043 	add.w	r0, r4, #780	@ 0x30c
 8007ef2:	f012 fab8 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    scoreText.invalidate();
 8007ef6:	f504 70d0 	add.w	r0, r4, #416	@ 0x1a0
 8007efa:	f00f ff73 	bl	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
    bestText.invalidate();
 8007efe:	f504 70f6 	add.w	r0, r4, #492	@ 0x1ec
 8007f02:	f00f ff6f 	bl	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
    GameOverScreenViewBase::setupScreen();
 8007f06:	4620      	mov	r0, r4
}
 8007f08:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    GameOverScreenViewBase::setupScreen();
 8007f0c:	f7fc b954 	b.w	80041b8 <_ZN22GameOverScreenViewBase11setupScreenEv>
 8007f10:	0802cc74 	.word	0x0802cc74
 8007f14:	200031a8 	.word	0x200031a8
 8007f18:	200031ac 	.word	0x200031ac

08007f1c <_ZN19MainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainScreenPresenter() {}
 8007f1c:	4770      	bx	lr

08007f1e <_ZThn4_N19MainScreenPresenterD1Ev>:
 8007f1e:	3804      	subs	r0, #4
 8007f20:	4770      	bx	lr

08007f22 <_ZN19MainScreenPresenter10deactivateEv>:
}

void MainScreenPresenter::activate()
{

}
 8007f22:	4770      	bx	lr

08007f24 <_ZN19MainScreenPresenterD0Ev>:
 8007f24:	b510      	push	{r4, lr}
 8007f26:	2110      	movs	r1, #16
 8007f28:	4604      	mov	r4, r0
 8007f2a:	f021 fbf3 	bl	8029714 <_ZdlPvj>
 8007f2e:	4620      	mov	r0, r4
 8007f30:	bd10      	pop	{r4, pc}

08007f32 <_ZThn4_N19MainScreenPresenterD0Ev>:
 8007f32:	f1a0 0004 	sub.w	r0, r0, #4
 8007f36:	e7f5      	b.n	8007f24 <_ZN19MainScreenPresenterD0Ev>

08007f38 <_ZN19MainScreenPresenterC1ER14MainScreenView>:
 8007f38:	2200      	movs	r2, #0
 8007f3a:	6082      	str	r2, [r0, #8]
    : view(v)
 8007f3c:	4a02      	ldr	r2, [pc, #8]	@ (8007f48 <_ZN19MainScreenPresenterC1ER14MainScreenView+0x10>)
 8007f3e:	6002      	str	r2, [r0, #0]
 8007f40:	3218      	adds	r2, #24
 8007f42:	6042      	str	r2, [r0, #4]
 8007f44:	60c1      	str	r1, [r0, #12]
}
 8007f46:	4770      	bx	lr
 8007f48:	0802db44 	.word	0x0802db44

08007f4c <_ZN14MainScreenView14tearDownScreenEv>:
}

void MainScreenView::tearDownScreen()
{
    MainScreenViewBase::tearDownScreen();
}
 8007f4c:	4770      	bx	lr
	...

08007f50 <_ZN14MainScreenViewD1Ev>:
#include <stdint.h>
class MainScreenView : public MainScreenViewBase
{
public:
    MainScreenView();
    virtual ~MainScreenView() {}
 8007f50:	b510      	push	{r4, lr}
 8007f52:	4b03      	ldr	r3, [pc, #12]	@ (8007f60 <_ZN14MainScreenViewD1Ev+0x10>)
 8007f54:	6003      	str	r3, [r0, #0]
 8007f56:	4604      	mov	r4, r0
 8007f58:	f7fc fcb2 	bl	80048c0 <_ZN18MainScreenViewBaseD1Ev>
 8007f5c:	4620      	mov	r0, r4
 8007f5e:	bd10      	pop	{r4, pc}
 8007f60:	0802db6c 	.word	0x0802db6c

08007f64 <_ZN14MainScreenViewD0Ev>:
 8007f64:	b510      	push	{r4, lr}
 8007f66:	4604      	mov	r4, r0
 8007f68:	f7ff fff2 	bl	8007f50 <_ZN14MainScreenViewD1Ev>
 8007f6c:	4620      	mov	r0, r4
 8007f6e:	f241 2144 	movw	r1, #4676	@ 0x1244
 8007f72:	f021 fbcf 	bl	8029714 <_ZdlPvj>
 8007f76:	4620      	mov	r0, r4
 8007f78:	bd10      	pop	{r4, pc}
	...

08007f7c <_ZN14MainScreenView6myRandEv>:
    seed = seed * 1664525UL + 1013904223UL;
 8007f7c:	4b03      	ldr	r3, [pc, #12]	@ (8007f8c <_ZN14MainScreenView6myRandEv+0x10>)
 8007f7e:	4904      	ldr	r1, [pc, #16]	@ (8007f90 <_ZN14MainScreenView6myRandEv+0x14>)
 8007f80:	681a      	ldr	r2, [r3, #0]
 8007f82:	4804      	ldr	r0, [pc, #16]	@ (8007f94 <_ZN14MainScreenView6myRandEv+0x18>)
 8007f84:	fb01 0002 	mla	r0, r1, r2, r0
 8007f88:	6018      	str	r0, [r3, #0]
}
 8007f8a:	4770      	bx	lr
 8007f8c:	20000018 	.word	0x20000018
 8007f90:	0019660d 	.word	0x0019660d
 8007f94:	3c6ef35f 	.word	0x3c6ef35f

08007f98 <_ZN14MainScreenViewC1Ev>:
MainScreenView::MainScreenView()
 8007f98:	b510      	push	{r4, lr}
 8007f9a:	4604      	mov	r4, r0
 8007f9c:	f7fc fd02 	bl	80049a4 <_ZN18MainScreenViewBaseC1Ev>
 8007fa0:	4b25      	ldr	r3, [pc, #148]	@ (8008038 <_ZN14MainScreenViewC1Ev+0xa0>)
 8007fa2:	6023      	str	r3, [r4, #0]
 8007fa4:	2200      	movs	r2, #0
 8007fa6:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8007faa:	e9c3 228f 	strd	r2, r2, [r3, #572]	@ 0x23c
    tiles[0][0] = &tile00;
 8007fae:	f204 42fc 	addw	r2, r4, #1276	@ 0x4fc
 8007fb2:	f8c3 21dc 	str.w	r2, [r3, #476]	@ 0x1dc
    tiles[0][1] = &tile01;
 8007fb6:	f504 62b9 	add.w	r2, r4, #1480	@ 0x5c8
 8007fba:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
    tiles[0][2] = &tile02;
 8007fbe:	f204 6294 	addw	r2, r4, #1684	@ 0x694
 8007fc2:	f8c3 21e4 	str.w	r2, [r3, #484]	@ 0x1e4
    tiles[0][3] = &tile03;
 8007fc6:	f504 62ec 	add.w	r2, r4, #1888	@ 0x760
 8007fca:	f8c3 21e8 	str.w	r2, [r3, #488]	@ 0x1e8
    tiles[1][0] = &tile10;
 8007fce:	f604 022c 	addw	r2, r4, #2092	@ 0x82c
 8007fd2:	f8c3 21ec 	str.w	r2, [r3, #492]	@ 0x1ec
    tiles[1][1] = &tile11;
 8007fd6:	f604 02f8 	addw	r2, r4, #2296	@ 0x8f8
 8007fda:	f8c3 21f0 	str.w	r2, [r3, #496]	@ 0x1f0
    tiles[1][2] = &tile12;
 8007fde:	f604 12c4 	addw	r2, r4, #2500	@ 0x9c4
 8007fe2:	f8c3 21f4 	str.w	r2, [r3, #500]	@ 0x1f4
    tiles[1][3] = &tile13;
 8007fe6:	f504 6229 	add.w	r2, r4, #2704	@ 0xa90
 8007fea:	f8c3 21f8 	str.w	r2, [r3, #504]	@ 0x1f8
    tiles[2][0] = &tile20;
 8007fee:	f604 325c 	addw	r2, r4, #2908	@ 0xb5c
 8007ff2:	f8c3 21fc 	str.w	r2, [r3, #508]	@ 0x1fc
    tiles[2][1] = &tile21;
 8007ff6:	f604 4228 	addw	r2, r4, #3112	@ 0xc28
 8007ffa:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
    tiles[2][2] = &tile22;
 8007ffe:	f604 42f4 	addw	r2, r4, #3316	@ 0xcf4
 8008002:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
    tiles[2][3] = &tile23;
 8008006:	f504 625c 	add.w	r2, r4, #3520	@ 0xdc0
 800800a:	f8c3 2208 	str.w	r2, [r3, #520]	@ 0x208
    tiles[3][0] = &tile30;
 800800e:	f604 628c 	addw	r2, r4, #3724	@ 0xe8c
 8008012:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
    tiles[3][1] = &tile31;
 8008016:	f604 7258 	addw	r2, r4, #3928	@ 0xf58
 800801a:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
    tiles[3][2] = &tile32;
 800801e:	f504 5281 	add.w	r2, r4, #4128	@ 0x1020
 8008022:	3204      	adds	r2, #4
 8008024:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
    tiles[3][3] = &tile33;
 8008028:	f504 5287 	add.w	r2, r4, #4320	@ 0x10e0
 800802c:	3210      	adds	r2, #16
 800802e:	f8c3 2218 	str.w	r2, [r3, #536]	@ 0x218
}
 8008032:	4620      	mov	r0, r4
 8008034:	bd10      	pop	{r4, pc}
 8008036:	bf00      	nop
 8008038:	0802db6c 	.word	0x0802db6c

0800803c <_ZN14MainScreenView15updateScoreTextEv>:
        navigateToGameOverScreen();
    }
}
//cap nhat diem
void MainScreenView::updateScoreText()
{   
 800803c:	b538      	push	{r3, r4, r5, lr}
    GameGlobal::yourScore = score;
 800803e:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
 8008042:	4b0a      	ldr	r3, [pc, #40]	@ (800806c <_ZN14MainScreenView15updateScoreTextEv+0x30>)
 8008044:	f8d5 123c 	ldr.w	r1, [r5, #572]	@ 0x23c
 8008048:	6019      	str	r1, [r3, #0]
    GameGlobal::bestScore = bestScore;
 800804a:	4b09      	ldr	r3, [pc, #36]	@ (8008070 <_ZN14MainScreenView15updateScoreTextEv+0x34>)
 800804c:	f8d5 2240 	ldr.w	r2, [r5, #576]	@ 0x240
 8008050:	601a      	str	r2, [r3, #0]
{   
 8008052:	4604      	mov	r4, r0
    scoreContainer.setScore(score);
 8008054:	f500 7044 	add.w	r0, r0, #784	@ 0x310
 8008058:	f000 fc7c 	bl	8008954 <_ZN5Score8setScoreEm>
    bestContainer.setScore(bestScore);
 800805c:	f8d5 1240 	ldr.w	r1, [r5, #576]	@ 0x240
 8008060:	f504 70fe 	add.w	r0, r4, #508	@ 0x1fc
}
 8008064:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    bestContainer.setScore(bestScore);
 8008068:	f7ff bd76 	b.w	8007b58 <_ZN4Best8setScoreEm>
 800806c:	200031a8 	.word	0x200031a8
 8008070:	200031ac 	.word	0x200031ac

08008074 <_ZN14MainScreenView8moveLeftEv>:
//di chuyen trai
void MainScreenView::moveLeft()
{
 8008074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008078:	f500 578e 	add.w	r7, r0, #4544	@ 0x11c0
 800807c:	b089      	sub	sp, #36	@ 0x24
 800807e:	4605      	mov	r5, r0
 8008080:	371c      	adds	r7, #28
    for (int row = 0; row < 4; ++row)
 8008082:	f04f 0800 	mov.w	r8, #0
    {
        int merged[4] = {0}; // theo dõi các tile đã merge
 8008086:	2210      	movs	r2, #16
 8008088:	2100      	movs	r1, #0
 800808a:	eb0d 0002 	add.w	r0, sp, r2
 800808e:	f022 fc84 	bl	802a99a <memset>

        for (int col = 1; col < 4; ++col)
 8008092:	ea4f 0388 	mov.w	r3, r8, lsl #2
 8008096:	9301      	str	r3, [sp, #4]
        int merged[4] = {0}; // theo dõi các tile đã merge
 8008098:	46ba      	mov	sl, r7
        for (int col = 1; col < 4; ++col)
 800809a:	f04f 0901 	mov.w	r9, #1
        {
            if (tiles[row][col]->getValue() == 0) continue;
 800809e:	f85a 0f04 	ldr.w	r0, [sl, #4]!
 80080a2:	f003 f935 	bl	800b310 <_ZNK4Tile8getValueEv>
 80080a6:	b1d0      	cbz	r0, 80080de <_ZN14MainScreenView8moveLeftEv+0x6a>
 80080a8:	4656      	mov	r6, sl

            int currentCol = col;
 80080aa:	46cb      	mov	fp, r9
            while (currentCol > 0 &&
                   tiles[row][currentCol - 1]->getValue() == 0)
 80080ac:	f856 0d04 	ldr.w	r0, [r6, #-4]!
 80080b0:	f003 f92e 	bl	800b310 <_ZNK4Tile8getValueEv>
 80080b4:	465c      	mov	r4, fp
            while (currentCol > 0 &&
 80080b6:	9002      	str	r0, [sp, #8]
                   tiles[row][currentCol - 1]->getValue() == 0)
 80080b8:	f10b 3bff 	add.w	fp, fp, #4294967295
            while (currentCol > 0 &&
 80080bc:	b9f0      	cbnz	r0, 80080fc <_ZN14MainScreenView8moveLeftEv+0x88>
            {
                tiles[row][currentCol - 1]->setValue(tiles[row][currentCol]->getValue());
 80080be:	e9d6 4000 	ldrd	r4, r0, [r6]
 80080c2:	f003 f925 	bl	800b310 <_ZNK4Tile8getValueEv>
 80080c6:	4601      	mov	r1, r0
 80080c8:	4620      	mov	r0, r4
 80080ca:	f003 f8b9 	bl	800b240 <_ZN4Tile8setValueEt>
                tiles[row][currentCol]->setValue(0);
 80080ce:	9a02      	ldr	r2, [sp, #8]
 80080d0:	6870      	ldr	r0, [r6, #4]
 80080d2:	4611      	mov	r1, r2
 80080d4:	f003 f8b4 	bl	800b240 <_ZN4Tile8setValueEt>
            while (currentCol > 0 &&
 80080d8:	f1bb 0f00 	cmp.w	fp, #0
 80080dc:	d1e6      	bne.n	80080ac <_ZN14MainScreenView8moveLeftEv+0x38>
        for (int col = 1; col < 4; ++col)
 80080de:	f109 0901 	add.w	r9, r9, #1
 80080e2:	f1b9 0f04 	cmp.w	r9, #4
 80080e6:	d1da      	bne.n	800809e <_ZN14MainScreenView8moveLeftEv+0x2a>
    for (int row = 0; row < 4; ++row)
 80080e8:	f108 0801 	add.w	r8, r8, #1
 80080ec:	f1b8 0f04 	cmp.w	r8, #4
 80080f0:	f107 0710 	add.w	r7, r7, #16
 80080f4:	d1c7      	bne.n	8008086 <_ZN14MainScreenView8moveLeftEv+0x12>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 80080f6:	b009      	add	sp, #36	@ 0x24
 80080f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            if (currentCol > 0 &&
 80080fc:	9a01      	ldr	r2, [sp, #4]
                tiles[row][currentCol - 1]->getValue() == tiles[row][currentCol]->getValue() &&
 80080fe:	1e63      	subs	r3, r4, #1
 8008100:	189e      	adds	r6, r3, r2
 8008102:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 8008106:	f506 5680 	add.w	r6, r6, #4096	@ 0x1000
 800810a:	9303      	str	r3, [sp, #12]
 800810c:	f8d6 01dc 	ldr.w	r0, [r6, #476]	@ 0x1dc
 8008110:	f003 f8fe 	bl	800b310 <_ZNK4Tile8getValueEv>
 8008114:	9b01      	ldr	r3, [sp, #4]
 8008116:	9002      	str	r0, [sp, #8]
 8008118:	441c      	add	r4, r3
 800811a:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 800811e:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
 8008122:	f8d4 01dc 	ldr.w	r0, [r4, #476]	@ 0x1dc
 8008126:	f003 f8f3 	bl	800b310 <_ZNK4Tile8getValueEv>
            if (currentCol > 0 &&
 800812a:	9a02      	ldr	r2, [sp, #8]
 800812c:	9b03      	ldr	r3, [sp, #12]
 800812e:	4282      	cmp	r2, r0
 8008130:	d1d5      	bne.n	80080de <_ZN14MainScreenView8moveLeftEv+0x6a>
                !merged[currentCol - 1])
 8008132:	aa08      	add	r2, sp, #32
 8008134:	eb02 0383 	add.w	r3, r2, r3, lsl #2
                tiles[row][currentCol - 1]->getValue() == tiles[row][currentCol]->getValue() &&
 8008138:	f853 2c10 	ldr.w	r2, [r3, #-16]
 800813c:	2a00      	cmp	r2, #0
 800813e:	d1ce      	bne.n	80080de <_ZN14MainScreenView8moveLeftEv+0x6a>
                uint16_t newValue = tiles[row][currentCol - 1]->getValue() * 2;
 8008140:	f8d6 01dc 	ldr.w	r0, [r6, #476]	@ 0x1dc
 8008144:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8008148:	f003 f8e2 	bl	800b310 <_ZNK4Tile8getValueEv>
 800814c:	0040      	lsls	r0, r0, #1
 800814e:	b283      	uxth	r3, r0
                tiles[row][currentCol - 1]->setValue(
 8008150:	4619      	mov	r1, r3
 8008152:	f8d6 01dc 	ldr.w	r0, [r6, #476]	@ 0x1dc
                uint16_t newValue = tiles[row][currentCol - 1]->getValue() * 2;
 8008156:	469b      	mov	fp, r3
                tiles[row][currentCol - 1]->setValue(
 8008158:	f003 f872 	bl	800b240 <_ZN4Tile8setValueEt>
                tiles[row][currentCol]->setValue(0);
 800815c:	9a03      	ldr	r2, [sp, #12]
 800815e:	f8d4 01dc 	ldr.w	r0, [r4, #476]	@ 0x1dc
 8008162:	4611      	mov	r1, r2
 8008164:	f003 f86c 	bl	800b240 <_ZN4Tile8setValueEt>
                merged[currentCol - 1] = 1;
 8008168:	9b02      	ldr	r3, [sp, #8]
 800816a:	2201      	movs	r2, #1
 800816c:	f843 2c10 	str.w	r2, [r3, #-16]
                score += newValue;
 8008170:	f505 5280 	add.w	r2, r5, #4096	@ 0x1000
                updateScoreText();
 8008174:	4628      	mov	r0, r5
                score += newValue;
 8008176:	f8d2 323c 	ldr.w	r3, [r2, #572]	@ 0x23c
                if (score > bestScore)
 800817a:	f8d2 1240 	ldr.w	r1, [r2, #576]	@ 0x240
                score += newValue;
 800817e:	445b      	add	r3, fp
                if (score > bestScore)
 8008180:	428b      	cmp	r3, r1
                score += newValue;
 8008182:	f8c2 323c 	str.w	r3, [r2, #572]	@ 0x23c
                bestScore = score;
 8008186:	bf88      	it	hi
 8008188:	f8c2 3240 	strhi.w	r3, [r2, #576]	@ 0x240
                updateScoreText();
 800818c:	f7ff ff56 	bl	800803c <_ZN14MainScreenView15updateScoreTextEv>
 8008190:	e7a5      	b.n	80080de <_ZN14MainScreenView8moveLeftEv+0x6a>

08008192 <_ZN14MainScreenView9moveRightEv>:
void MainScreenView::moveRight()
{
 8008192:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008196:	f500 578f 	add.w	r7, r0, #4576	@ 0x11e0
 800819a:	b089      	sub	sp, #36	@ 0x24
 800819c:	4605      	mov	r5, r0
 800819e:	3708      	adds	r7, #8
    for (int row = 0; row < 4; ++row)
 80081a0:	f04f 0800 	mov.w	r8, #0
    {
        int merged[4] = {0};
 80081a4:	2210      	movs	r2, #16
 80081a6:	2100      	movs	r1, #0
 80081a8:	eb0d 0002 	add.w	r0, sp, r2
 80081ac:	f022 fbf5 	bl	802a99a <memset>

        for (int col = 2; col >= 0; --col)
 80081b0:	ea4f 0388 	mov.w	r3, r8, lsl #2
 80081b4:	9301      	str	r3, [sp, #4]
        int merged[4] = {0};
 80081b6:	46ba      	mov	sl, r7
        for (int col = 2; col >= 0; --col)
 80081b8:	f04f 0902 	mov.w	r9, #2
        {
            if (tiles[row][col]->getValue() == 0) continue;
 80081bc:	f85a 0d04 	ldr.w	r0, [sl, #-4]!
 80081c0:	f003 f8a6 	bl	800b310 <_ZNK4Tile8getValueEv>
 80081c4:	b1e0      	cbz	r0, 8008200 <_ZN14MainScreenView9moveRightEv+0x6e>
 80081c6:	4656      	mov	r6, sl

            int currentCol = col;
 80081c8:	46cb      	mov	fp, r9
            while (currentCol < 3 && tiles[row][currentCol + 1]->getValue() == 0)
 80081ca:	6870      	ldr	r0, [r6, #4]
 80081cc:	9603      	str	r6, [sp, #12]
 80081ce:	f003 f89f 	bl	800b310 <_ZNK4Tile8getValueEv>
 80081d2:	465c      	mov	r4, fp
 80081d4:	9002      	str	r0, [sp, #8]
 80081d6:	f10b 0b01 	add.w	fp, fp, #1
 80081da:	b9f0      	cbnz	r0, 800821a <_ZN14MainScreenView9moveRightEv+0x88>
            {
                tiles[row][currentCol + 1]->setValue(tiles[row][currentCol]->getValue());
 80081dc:	9903      	ldr	r1, [sp, #12]
 80081de:	6874      	ldr	r4, [r6, #4]
 80081e0:	6808      	ldr	r0, [r1, #0]
 80081e2:	f003 f895 	bl	800b310 <_ZNK4Tile8getValueEv>
 80081e6:	4601      	mov	r1, r0
 80081e8:	4620      	mov	r0, r4
 80081ea:	f003 f829 	bl	800b240 <_ZN4Tile8setValueEt>
                tiles[row][currentCol]->setValue(0);
 80081ee:	9a02      	ldr	r2, [sp, #8]
 80081f0:	f856 0b04 	ldr.w	r0, [r6], #4
 80081f4:	4611      	mov	r1, r2
 80081f6:	f003 f823 	bl	800b240 <_ZN4Tile8setValueEt>
            while (currentCol < 3 && tiles[row][currentCol + 1]->getValue() == 0)
 80081fa:	f1bb 0f03 	cmp.w	fp, #3
 80081fe:	d1e4      	bne.n	80081ca <_ZN14MainScreenView9moveRightEv+0x38>
        for (int col = 2; col >= 0; --col)
 8008200:	f1b9 0901 	subs.w	r9, r9, #1
 8008204:	d2da      	bcs.n	80081bc <_ZN14MainScreenView9moveRightEv+0x2a>
    for (int row = 0; row < 4; ++row)
 8008206:	f108 0801 	add.w	r8, r8, #1
 800820a:	f1b8 0f04 	cmp.w	r8, #4
 800820e:	f107 0710 	add.w	r7, r7, #16
 8008212:	d1c7      	bne.n	80081a4 <_ZN14MainScreenView9moveRightEv+0x12>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 8008214:	b009      	add	sp, #36	@ 0x24
 8008216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            if (currentCol < 3 &&
 800821a:	9a01      	ldr	r2, [sp, #4]
                tiles[row][currentCol + 1]->getValue() == tiles[row][currentCol]->getValue() &&
 800821c:	1c63      	adds	r3, r4, #1
 800821e:	189e      	adds	r6, r3, r2
 8008220:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 8008224:	f506 5680 	add.w	r6, r6, #4096	@ 0x1000
 8008228:	9303      	str	r3, [sp, #12]
 800822a:	f8d6 01dc 	ldr.w	r0, [r6, #476]	@ 0x1dc
 800822e:	f003 f86f 	bl	800b310 <_ZNK4Tile8getValueEv>
 8008232:	9b01      	ldr	r3, [sp, #4]
 8008234:	9002      	str	r0, [sp, #8]
 8008236:	441c      	add	r4, r3
 8008238:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 800823c:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
 8008240:	f8d4 01dc 	ldr.w	r0, [r4, #476]	@ 0x1dc
 8008244:	f003 f864 	bl	800b310 <_ZNK4Tile8getValueEv>
            if (currentCol < 3 &&
 8008248:	9a02      	ldr	r2, [sp, #8]
 800824a:	9b03      	ldr	r3, [sp, #12]
 800824c:	4282      	cmp	r2, r0
 800824e:	d1d7      	bne.n	8008200 <_ZN14MainScreenView9moveRightEv+0x6e>
                !merged[currentCol + 1])
 8008250:	aa08      	add	r2, sp, #32
 8008252:	eb02 0383 	add.w	r3, r2, r3, lsl #2
                tiles[row][currentCol + 1]->getValue() == tiles[row][currentCol]->getValue() &&
 8008256:	f853 2c10 	ldr.w	r2, [r3, #-16]
 800825a:	2a00      	cmp	r2, #0
 800825c:	d1d0      	bne.n	8008200 <_ZN14MainScreenView9moveRightEv+0x6e>
                uint16_t newValue = tiles[row][currentCol + 1]->getValue() * 2;
 800825e:	f8d6 01dc 	ldr.w	r0, [r6, #476]	@ 0x1dc
 8008262:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8008266:	f003 f853 	bl	800b310 <_ZNK4Tile8getValueEv>
 800826a:	0040      	lsls	r0, r0, #1
 800826c:	b283      	uxth	r3, r0
                tiles[row][currentCol + 1]->setValue(
 800826e:	4619      	mov	r1, r3
 8008270:	f8d6 01dc 	ldr.w	r0, [r6, #476]	@ 0x1dc
                uint16_t newValue = tiles[row][currentCol + 1]->getValue() * 2;
 8008274:	469b      	mov	fp, r3
                tiles[row][currentCol + 1]->setValue(
 8008276:	f002 ffe3 	bl	800b240 <_ZN4Tile8setValueEt>
                tiles[row][currentCol]->setValue(0);
 800827a:	9a03      	ldr	r2, [sp, #12]
 800827c:	f8d4 01dc 	ldr.w	r0, [r4, #476]	@ 0x1dc
 8008280:	4611      	mov	r1, r2
 8008282:	f002 ffdd 	bl	800b240 <_ZN4Tile8setValueEt>
                merged[currentCol + 1] = 1;
 8008286:	9b02      	ldr	r3, [sp, #8]
 8008288:	2201      	movs	r2, #1
 800828a:	f843 2c10 	str.w	r2, [r3, #-16]
                score += newValue;
 800828e:	f505 5280 	add.w	r2, r5, #4096	@ 0x1000
                updateScoreText();
 8008292:	4628      	mov	r0, r5
                score += newValue;
 8008294:	f8d2 323c 	ldr.w	r3, [r2, #572]	@ 0x23c
                if (score > bestScore)
 8008298:	f8d2 1240 	ldr.w	r1, [r2, #576]	@ 0x240
                score += newValue;
 800829c:	445b      	add	r3, fp
                if (score > bestScore)
 800829e:	428b      	cmp	r3, r1
                score += newValue;
 80082a0:	f8c2 323c 	str.w	r3, [r2, #572]	@ 0x23c
                bestScore = score;
 80082a4:	bf88      	it	hi
 80082a6:	f8c2 3240 	strhi.w	r3, [r2, #576]	@ 0x240
                updateScoreText();
 80082aa:	f7ff fec7 	bl	800803c <_ZN14MainScreenView15updateScoreTextEv>
 80082ae:	e7a7      	b.n	8008200 <_ZN14MainScreenView9moveRightEv+0x6e>

080082b0 <_ZN14MainScreenView6moveUpEv>:
void MainScreenView::moveUp()
{
 80082b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80082b4:	f500 588e 	add.w	r8, r0, #4544	@ 0x11c0
 80082b8:	b087      	sub	sp, #28
 80082ba:	4606      	mov	r6, r0
 80082bc:	f108 081c 	add.w	r8, r8, #28
    for (int col = 0; col < 4; ++col)
 80082c0:	2700      	movs	r7, #0
    {
        int merged[4] = {0};
 80082c2:	2210      	movs	r2, #16
 80082c4:	2100      	movs	r1, #0
 80082c6:	a802      	add	r0, sp, #8
 80082c8:	f022 fb67 	bl	802a99a <memset>
 80082cc:	46c2      	mov	sl, r8

        for (int row = 1; row < 4; ++row)
 80082ce:	f04f 0901 	mov.w	r9, #1
        {
            if (tiles[row][col]->getValue() == 0) continue;
 80082d2:	f8da 0010 	ldr.w	r0, [sl, #16]
 80082d6:	f003 f81b 	bl	800b310 <_ZNK4Tile8getValueEv>
 80082da:	b1d0      	cbz	r0, 8008312 <_ZN14MainScreenView6moveUpEv+0x62>
 80082dc:	4654      	mov	r4, sl

            int currentRow = row;
 80082de:	46cb      	mov	fp, r9
            while (currentRow > 0 && tiles[currentRow - 1][col]->getValue() == 0)
 80082e0:	6820      	ldr	r0, [r4, #0]
 80082e2:	f003 f815 	bl	800b310 <_ZNK4Tile8getValueEv>
 80082e6:	465d      	mov	r5, fp
 80082e8:	9000      	str	r0, [sp, #0]
 80082ea:	f10b 3bff 	add.w	fp, fp, #4294967295
 80082ee:	b9f8      	cbnz	r0, 8008330 <_ZN14MainScreenView6moveUpEv+0x80>
            {
                tiles[currentRow - 1][col]->setValue(tiles[currentRow][col]->getValue());
 80082f0:	6920      	ldr	r0, [r4, #16]
 80082f2:	6825      	ldr	r5, [r4, #0]
 80082f4:	f003 f80c 	bl	800b310 <_ZNK4Tile8getValueEv>
 80082f8:	4601      	mov	r1, r0
 80082fa:	4628      	mov	r0, r5
 80082fc:	f002 ffa0 	bl	800b240 <_ZN4Tile8setValueEt>
                tiles[currentRow][col]->setValue(0);
 8008300:	9b00      	ldr	r3, [sp, #0]
 8008302:	6920      	ldr	r0, [r4, #16]
 8008304:	4619      	mov	r1, r3
 8008306:	f002 ff9b 	bl	800b240 <_ZN4Tile8setValueEt>
            while (currentRow > 0 && tiles[currentRow - 1][col]->getValue() == 0)
 800830a:	3c10      	subs	r4, #16
 800830c:	f1bb 0f00 	cmp.w	fp, #0
 8008310:	d1e6      	bne.n	80082e0 <_ZN14MainScreenView6moveUpEv+0x30>
        for (int row = 1; row < 4; ++row)
 8008312:	f109 0901 	add.w	r9, r9, #1
 8008316:	f1b9 0f04 	cmp.w	r9, #4
 800831a:	f10a 0a10 	add.w	sl, sl, #16
 800831e:	d1d8      	bne.n	80082d2 <_ZN14MainScreenView6moveUpEv+0x22>
    for (int col = 0; col < 4; ++col)
 8008320:	3701      	adds	r7, #1
 8008322:	2f04      	cmp	r7, #4
 8008324:	f108 0804 	add.w	r8, r8, #4
 8008328:	d1cb      	bne.n	80082c2 <_ZN14MainScreenView6moveUpEv+0x12>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 800832a:	b007      	add	sp, #28
 800832c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                tiles[currentRow - 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 8008330:	1e6c      	subs	r4, r5, #1
 8008332:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8008336:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800833a:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 800833e:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
 8008342:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8008346:	f8d4 01dc 	ldr.w	r0, [r4, #476]	@ 0x1dc
 800834a:	f002 ffe1 	bl	800b310 <_ZNK4Tile8getValueEv>
 800834e:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 8008352:	f505 5580 	add.w	r5, r5, #4096	@ 0x1000
 8008356:	9000      	str	r0, [sp, #0]
 8008358:	f8d5 01dc 	ldr.w	r0, [r5, #476]	@ 0x1dc
 800835c:	f002 ffd8 	bl	800b310 <_ZNK4Tile8getValueEv>
            if (currentRow > 0 &&
 8008360:	9b00      	ldr	r3, [sp, #0]
 8008362:	4283      	cmp	r3, r0
 8008364:	d1d5      	bne.n	8008312 <_ZN14MainScreenView6moveUpEv+0x62>
                !merged[currentRow - 1])
 8008366:	f10b 0318 	add.w	r3, fp, #24
 800836a:	446b      	add	r3, sp
                tiles[currentRow - 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 800836c:	f853 2c10 	ldr.w	r2, [r3, #-16]
 8008370:	2a00      	cmp	r2, #0
 8008372:	d1ce      	bne.n	8008312 <_ZN14MainScreenView6moveUpEv+0x62>
                uint16_t newValue = tiles[currentRow - 1][col]->getValue() * 2;
 8008374:	f8d4 01dc 	ldr.w	r0, [r4, #476]	@ 0x1dc
 8008378:	e9cd 3200 	strd	r3, r2, [sp]
 800837c:	f002 ffc8 	bl	800b310 <_ZNK4Tile8getValueEv>
 8008380:	0041      	lsls	r1, r0, #1
 8008382:	fa1f fb81 	uxth.w	fp, r1
                tiles[currentRow - 1][col]->setValue(
 8008386:	f8d4 01dc 	ldr.w	r0, [r4, #476]	@ 0x1dc
 800838a:	4659      	mov	r1, fp
 800838c:	f002 ff58 	bl	800b240 <_ZN4Tile8setValueEt>
                tiles[currentRow][col]->setValue(0);
 8008390:	9a01      	ldr	r2, [sp, #4]
 8008392:	f8d5 01dc 	ldr.w	r0, [r5, #476]	@ 0x1dc
 8008396:	4611      	mov	r1, r2
 8008398:	f002 ff52 	bl	800b240 <_ZN4Tile8setValueEt>
                merged[currentRow - 1] = 1;
 800839c:	9b00      	ldr	r3, [sp, #0]
 800839e:	2201      	movs	r2, #1
 80083a0:	f843 2c10 	str.w	r2, [r3, #-16]
                score += newValue;
 80083a4:	f506 5380 	add.w	r3, r6, #4096	@ 0x1000
                updateScoreText();
 80083a8:	4630      	mov	r0, r6
                score += newValue;
 80083aa:	f8d3 223c 	ldr.w	r2, [r3, #572]	@ 0x23c
                if (score > bestScore)
 80083ae:	f8d3 1240 	ldr.w	r1, [r3, #576]	@ 0x240
                score += newValue;
 80083b2:	445a      	add	r2, fp
                if (score > bestScore)
 80083b4:	428a      	cmp	r2, r1
                score += newValue;
 80083b6:	f8c3 223c 	str.w	r2, [r3, #572]	@ 0x23c
                bestScore = score;
 80083ba:	bf88      	it	hi
 80083bc:	f8c3 2240 	strhi.w	r2, [r3, #576]	@ 0x240
                updateScoreText();
 80083c0:	f7ff fe3c 	bl	800803c <_ZN14MainScreenView15updateScoreTextEv>
 80083c4:	e7a5      	b.n	8008312 <_ZN14MainScreenView6moveUpEv+0x62>

080083c6 <_ZN14MainScreenView8moveDownEv>:
void MainScreenView::moveDown()
{
 80083c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80083ca:	f500 588f 	add.w	r8, r0, #4576	@ 0x11e0
 80083ce:	b087      	sub	sp, #28
 80083d0:	4606      	mov	r6, r0
 80083d2:	f108 081c 	add.w	r8, r8, #28
    for (int col = 0; col < 4; ++col)
 80083d6:	2700      	movs	r7, #0
    {
        int merged[4] = {0};
 80083d8:	2210      	movs	r2, #16
 80083da:	2100      	movs	r1, #0
 80083dc:	a802      	add	r0, sp, #8
 80083de:	f022 fadc 	bl	802a99a <memset>
 80083e2:	46c2      	mov	sl, r8

        for (int row = 2; row >= 0; --row)
 80083e4:	f04f 0902 	mov.w	r9, #2
        {
            if (tiles[row][col]->getValue() == 0) continue;
 80083e8:	f8da 0000 	ldr.w	r0, [sl]
 80083ec:	f002 ff90 	bl	800b310 <_ZNK4Tile8getValueEv>
 80083f0:	b1d0      	cbz	r0, 8008428 <_ZN14MainScreenView8moveDownEv+0x62>
 80083f2:	4654      	mov	r4, sl

            int currentRow = row;
 80083f4:	46cb      	mov	fp, r9
            while (currentRow < 3 && tiles[currentRow + 1][col]->getValue() == 0)
 80083f6:	6920      	ldr	r0, [r4, #16]
 80083f8:	f002 ff8a 	bl	800b310 <_ZNK4Tile8getValueEv>
 80083fc:	465d      	mov	r5, fp
 80083fe:	9000      	str	r0, [sp, #0]
 8008400:	f10b 0b01 	add.w	fp, fp, #1
 8008404:	b9f8      	cbnz	r0, 8008446 <_ZN14MainScreenView8moveDownEv+0x80>
            {
                tiles[currentRow + 1][col]->setValue(tiles[currentRow][col]->getValue());
 8008406:	6820      	ldr	r0, [r4, #0]
 8008408:	6925      	ldr	r5, [r4, #16]
 800840a:	f002 ff81 	bl	800b310 <_ZNK4Tile8getValueEv>
 800840e:	4601      	mov	r1, r0
 8008410:	4628      	mov	r0, r5
 8008412:	f002 ff15 	bl	800b240 <_ZN4Tile8setValueEt>
                tiles[currentRow][col]->setValue(0);
 8008416:	9b00      	ldr	r3, [sp, #0]
 8008418:	f854 0b10 	ldr.w	r0, [r4], #16
 800841c:	4619      	mov	r1, r3
 800841e:	f002 ff0f 	bl	800b240 <_ZN4Tile8setValueEt>
            while (currentRow < 3 && tiles[currentRow + 1][col]->getValue() == 0)
 8008422:	f1bb 0f03 	cmp.w	fp, #3
 8008426:	d1e6      	bne.n	80083f6 <_ZN14MainScreenView8moveDownEv+0x30>
        for (int row = 2; row >= 0; --row)
 8008428:	f109 39ff 	add.w	r9, r9, #4294967295
 800842c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8008430:	f1aa 0a10 	sub.w	sl, sl, #16
 8008434:	d1d8      	bne.n	80083e8 <_ZN14MainScreenView8moveDownEv+0x22>
    for (int col = 0; col < 4; ++col)
 8008436:	3701      	adds	r7, #1
 8008438:	2f04      	cmp	r7, #4
 800843a:	f108 0804 	add.w	r8, r8, #4
 800843e:	d1cb      	bne.n	80083d8 <_ZN14MainScreenView8moveDownEv+0x12>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 8008440:	b007      	add	sp, #28
 8008442:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                tiles[currentRow + 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 8008446:	1c6c      	adds	r4, r5, #1
 8008448:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800844c:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 8008450:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 8008454:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
 8008458:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 800845c:	f8d4 01dc 	ldr.w	r0, [r4, #476]	@ 0x1dc
 8008460:	f002 ff56 	bl	800b310 <_ZNK4Tile8getValueEv>
 8008464:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 8008468:	f505 5580 	add.w	r5, r5, #4096	@ 0x1000
 800846c:	9000      	str	r0, [sp, #0]
 800846e:	f8d5 01dc 	ldr.w	r0, [r5, #476]	@ 0x1dc
 8008472:	f002 ff4d 	bl	800b310 <_ZNK4Tile8getValueEv>
            if (currentRow < 3 &&
 8008476:	9b00      	ldr	r3, [sp, #0]
 8008478:	4283      	cmp	r3, r0
 800847a:	d1d5      	bne.n	8008428 <_ZN14MainScreenView8moveDownEv+0x62>
                !merged[currentRow + 1])
 800847c:	f10b 0318 	add.w	r3, fp, #24
 8008480:	446b      	add	r3, sp
                tiles[currentRow + 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 8008482:	f853 2c10 	ldr.w	r2, [r3, #-16]
 8008486:	2a00      	cmp	r2, #0
 8008488:	d1ce      	bne.n	8008428 <_ZN14MainScreenView8moveDownEv+0x62>
                uint16_t newValue = tiles[currentRow + 1][col]->getValue() * 2;
 800848a:	f8d4 01dc 	ldr.w	r0, [r4, #476]	@ 0x1dc
 800848e:	e9cd 3200 	strd	r3, r2, [sp]
 8008492:	f002 ff3d 	bl	800b310 <_ZNK4Tile8getValueEv>
 8008496:	0041      	lsls	r1, r0, #1
 8008498:	fa1f fb81 	uxth.w	fp, r1
                tiles[currentRow + 1][col]->setValue(
 800849c:	f8d4 01dc 	ldr.w	r0, [r4, #476]	@ 0x1dc
 80084a0:	4659      	mov	r1, fp
 80084a2:	f002 fecd 	bl	800b240 <_ZN4Tile8setValueEt>
                tiles[currentRow][col]->setValue(0);
 80084a6:	9a01      	ldr	r2, [sp, #4]
 80084a8:	f8d5 01dc 	ldr.w	r0, [r5, #476]	@ 0x1dc
 80084ac:	4611      	mov	r1, r2
 80084ae:	f002 fec7 	bl	800b240 <_ZN4Tile8setValueEt>
                merged[currentRow + 1] = 1;
 80084b2:	9b00      	ldr	r3, [sp, #0]
 80084b4:	2201      	movs	r2, #1
 80084b6:	f843 2c10 	str.w	r2, [r3, #-16]
                score += newValue;
 80084ba:	f506 5380 	add.w	r3, r6, #4096	@ 0x1000
                updateScoreText();
 80084be:	4630      	mov	r0, r6
                score += newValue;
 80084c0:	f8d3 223c 	ldr.w	r2, [r3, #572]	@ 0x23c
                if (score > bestScore)
 80084c4:	f8d3 1240 	ldr.w	r1, [r3, #576]	@ 0x240
                score += newValue;
 80084c8:	445a      	add	r2, fp
                if (score > bestScore)
 80084ca:	428a      	cmp	r2, r1
                score += newValue;
 80084cc:	f8c3 223c 	str.w	r2, [r3, #572]	@ 0x23c
                bestScore = score;
 80084d0:	bf88      	it	hi
 80084d2:	f8c3 2240 	strhi.w	r2, [r3, #576]	@ 0x240
                updateScoreText();
 80084d6:	f7ff fdb1 	bl	800803c <_ZN14MainScreenView15updateScoreTextEv>
 80084da:	e7a5      	b.n	8008428 <_ZN14MainScreenView8moveDownEv+0x62>

080084dc <_ZN14MainScreenView24navigateToGameOverScreenEv>:
        navigateToGameOverScreen();
    }
    }
}
void MainScreenView::navigateToGameOverScreen()
{
 80084dc:	b508      	push	{r3, lr}
   static_cast<FrontendApplication*>(Application::getInstance())->gotoGameOverScreenScreenSlideTransitionEast();
 80084de:	f00e fa5d 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
}
 80084e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   static_cast<FrontendApplication*>(Application::getInstance())->gotoGameOverScreenScreenSlideTransitionEast();
 80084e6:	f7fa be47 	b.w	8003178 <_ZN23FrontendApplicationBase43gotoGameOverScreenScreenSlideTransitionEastEv>

080084ea <_ZN14MainScreenView10isGameOverEv>:
bool MainScreenView::isGameOver() // kiem tra xem con co the gop cac o lai voi nhau khong
{
 80084ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80084ee:	f500 558f 	add.w	r5, r0, #4576	@ 0x11e0
 80084f2:	f500 5791 	add.w	r7, r0, #4640	@ 0x1220
 80084f6:	4604      	mov	r4, r0
 80084f8:	3508      	adds	r5, #8
 80084fa:	3708      	adds	r7, #8
    // 1. Kiểm tra còn ô trống không
    for (int r = 0; r < 4; ++r)
    {
        for (int c = 0; c < 4; ++c)
 80084fc:	f1a5 0610 	sub.w	r6, r5, #16
        {
            if (tiles[r][c]->getValue() == 0)
 8008500:	f856 0f04 	ldr.w	r0, [r6, #4]!
 8008504:	f002 ff04 	bl	800b310 <_ZNK4Tile8getValueEv>
 8008508:	b318      	cbz	r0, 8008552 <_ZN14MainScreenView10isGameOverEv+0x68>
        for (int c = 0; c < 4; ++c)
 800850a:	42ae      	cmp	r6, r5
 800850c:	d1f8      	bne.n	8008500 <_ZN14MainScreenView10isGameOverEv+0x16>
    for (int r = 0; r < 4; ++r)
 800850e:	f106 0510 	add.w	r5, r6, #16
 8008512:	42bd      	cmp	r5, r7
 8008514:	d1f2      	bne.n	80084fc <_ZN14MainScreenView10isGameOverEv+0x12>
 8008516:	f504 548e 	add.w	r4, r4, #4544	@ 0x11c0
 800851a:	341c      	adds	r4, #28
                return false; // còn chỗ để spawn => chưa thua
        }
    }

    // 2. Kiểm tra còn ô nào có thể gộp không
    for (int r = 0; r < 4; ++r)
 800851c:	2700      	movs	r7, #0
{
 800851e:	4626      	mov	r6, r4
    {
        for (int c = 0; c < 4; ++c)
 8008520:	2500      	movs	r5, #0
        {
            int current = tiles[r][c]->getValue();
 8008522:	f856 0b04 	ldr.w	r0, [r6], #4
 8008526:	f002 fef3 	bl	800b310 <_ZNK4Tile8getValueEv>

            // Kiểm tra phải
            if (c < 3 && tiles[r][c + 1]->getValue() == current)
 800852a:	2d03      	cmp	r5, #3
            int current = tiles[r][c]->getValue();
 800852c:	4680      	mov	r8, r0
            if (c < 3 && tiles[r][c + 1]->getValue() == current)
 800852e:	d10b      	bne.n	8008548 <_ZN14MainScreenView10isGameOverEv+0x5e>
                return false;

            // Kiểm tra dưới
            if (r < 3 && tiles[r + 1][c]->getValue() == current)
 8008530:	2f03      	cmp	r7, #3
 8008532:	d111      	bne.n	8008558 <_ZN14MainScreenView10isGameOverEv+0x6e>
        for (int c = 0; c < 4; ++c)
 8008534:	3501      	adds	r5, #1
 8008536:	2d04      	cmp	r5, #4
 8008538:	d1f3      	bne.n	8008522 <_ZN14MainScreenView10isGameOverEv+0x38>
    for (int r = 0; r < 4; ++r)
 800853a:	3701      	adds	r7, #1
 800853c:	2f04      	cmp	r7, #4
 800853e:	f104 0410 	add.w	r4, r4, #16
 8008542:	d1ec      	bne.n	800851e <_ZN14MainScreenView10isGameOverEv+0x34>
                return false;
        }
    }

    // Không còn nước đi hợp lệ
    return true;
 8008544:	2001      	movs	r0, #1
 8008546:	e005      	b.n	8008554 <_ZN14MainScreenView10isGameOverEv+0x6a>
            if (c < 3 && tiles[r][c + 1]->getValue() == current)
 8008548:	6830      	ldr	r0, [r6, #0]
 800854a:	f002 fee1 	bl	800b310 <_ZNK4Tile8getValueEv>
 800854e:	4580      	cmp	r8, r0
 8008550:	d1ee      	bne.n	8008530 <_ZN14MainScreenView10isGameOverEv+0x46>
                return false; // còn chỗ để spawn => chưa thua
 8008552:	2000      	movs	r0, #0
}
 8008554:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            if (r < 3 && tiles[r + 1][c]->getValue() == current)
 8008558:	68f0      	ldr	r0, [r6, #12]
 800855a:	f002 fed9 	bl	800b310 <_ZNK4Tile8getValueEv>
 800855e:	4580      	cmp	r8, r0
 8008560:	d1e8      	bne.n	8008534 <_ZN14MainScreenView10isGameOverEv+0x4a>
 8008562:	e7f6      	b.n	8008552 <_ZN14MainScreenView10isGameOverEv+0x68>

08008564 <_ZN14MainScreenView15spawnRandomTileEv>:
{
 8008564:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008568:	f500 568e 	add.w	r6, r0, #4544	@ 0x11c0
    for (int r = 0; r < 4; r++) {
 800856c:	2700      	movs	r7, #0
{
 800856e:	b0a1      	sub	sp, #132	@ 0x84
 8008570:	4604      	mov	r4, r0
 8008572:	3618      	adds	r6, #24
    int emptyCount = 0;
 8008574:	463d      	mov	r5, r7
{
 8008576:	46b1      	mov	r9, r6
        for (int c = 0; c < 4; c++) {
 8008578:	f04f 0800 	mov.w	r8, #0
            if (tiles[r][c]->getValue() == 0) {
 800857c:	f859 0f04 	ldr.w	r0, [r9, #4]!
 8008580:	f002 fec6 	bl	800b310 <_ZNK4Tile8getValueEv>
 8008584:	b928      	cbnz	r0, 8008592 <_ZN14MainScreenView15spawnRandomTileEv+0x2e>
                empties[emptyCount++] = {r, c};
 8008586:	ab20      	add	r3, sp, #128	@ 0x80
 8008588:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800858c:	e943 7820 	strd	r7, r8, [r3, #-128]	@ 0x80
 8008590:	3501      	adds	r5, #1
        for (int c = 0; c < 4; c++) {
 8008592:	f108 0801 	add.w	r8, r8, #1
 8008596:	f1b8 0f04 	cmp.w	r8, #4
 800859a:	d1ef      	bne.n	800857c <_ZN14MainScreenView15spawnRandomTileEv+0x18>
    for (int r = 0; r < 4; r++) {
 800859c:	3701      	adds	r7, #1
 800859e:	2f04      	cmp	r7, #4
 80085a0:	f106 0610 	add.w	r6, r6, #16
 80085a4:	d1e7      	bne.n	8008576 <_ZN14MainScreenView15spawnRandomTileEv+0x12>
    if (emptyCount > 0) {
 80085a6:	2d00      	cmp	r5, #0
        int idx = myRand() % emptyCount;
 80085a8:	4620      	mov	r0, r4
    if (emptyCount > 0) {
 80085aa:	dd28      	ble.n	80085fe <_ZN14MainScreenView15spawnRandomTileEv+0x9a>
        int idx = myRand() % emptyCount;
 80085ac:	f7ff fce6 	bl	8007f7c <_ZN14MainScreenView6myRandEv>
 80085b0:	fbb0 f3f5 	udiv	r3, r0, r5
 80085b4:	fb03 0015 	mls	r0, r3, r5, r0
        int rr = empties[idx].row;
 80085b8:	ab20      	add	r3, sp, #128	@ 0x80
 80085ba:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
        int cc = empties[idx].col;
 80085be:	e950 6520 	ldrd	r6, r5, [r0, #-128]	@ 0x80
        uint16_t newValue = (myRand() % 10 == 0) ? 4 : 2;
 80085c2:	4620      	mov	r0, r4
 80085c4:	f7ff fcda 	bl	8007f7c <_ZN14MainScreenView6myRandEv>
 80085c8:	eb05 0586 	add.w	r5, r5, r6, lsl #2
 80085cc:	230a      	movs	r3, #10
 80085ce:	eb04 0485 	add.w	r4, r4, r5, lsl #2
        tiles[rr][cc]->setValue(newValue);
 80085d2:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
        uint16_t newValue = (myRand() % 10 == 0) ? 4 : 2;
 80085d6:	fbb0 f2f3 	udiv	r2, r0, r3
 80085da:	fb02 0013 	mls	r0, r2, r3, r0
 80085de:	2800      	cmp	r0, #0
        tiles[rr][cc]->setValue(newValue);
 80085e0:	bf18      	it	ne
 80085e2:	2102      	movne	r1, #2
 80085e4:	f8d4 01dc 	ldr.w	r0, [r4, #476]	@ 0x1dc
 80085e8:	bf08      	it	eq
 80085ea:	2104      	moveq	r1, #4
 80085ec:	f002 fe28 	bl	800b240 <_ZN4Tile8setValueEt>
        tiles[rr][cc]->animateSpawn();//animation spawn
 80085f0:	f8d4 01dc 	ldr.w	r0, [r4, #476]	@ 0x1dc
}
 80085f4:	b021      	add	sp, #132	@ 0x84
 80085f6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        tiles[rr][cc]->animateSpawn();//animation spawn
 80085fa:	f002 be94 	b.w	800b326 <_ZN4Tile12animateSpawnEv>
        if (isGameOver()) {
 80085fe:	f7ff ff74 	bl	80084ea <_ZN14MainScreenView10isGameOverEv>
 8008602:	b128      	cbz	r0, 8008610 <_ZN14MainScreenView15spawnRandomTileEv+0xac>
        navigateToGameOverScreen();
 8008604:	4620      	mov	r0, r4
}
 8008606:	b021      	add	sp, #132	@ 0x84
 8008608:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        navigateToGameOverScreen();
 800860c:	f7ff bf66 	b.w	80084dc <_ZN14MainScreenView24navigateToGameOverScreenEv>
}
 8008610:	b021      	add	sp, #132	@ 0x84
 8008612:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08008618 <_ZN14MainScreenView15handleTickEventEv>:
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
                return true;
    return false;
}
void MainScreenView::handleTickEvent()
{
 8008618:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800861c:	4604      	mov	r4, r0
    static uint32_t lastPressTime = 0;
    const uint32_t debounceDelay = 200; // Thời gian chống dội (ms)
    uint32_t currentTime = HAL_GetTick();
 800861e:	f003 fd29 	bl	800c074 <HAL_GetTick>

    uint8_t currentState = 0;
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 8008622:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    uint32_t currentTime = HAL_GetTick();
 8008626:	4605      	mov	r5, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 8008628:	4841      	ldr	r0, [pc, #260]	@ (8008730 <_ZN14MainScreenView15handleTickEventEv+0x118>)
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK

    static uint8_t lastState = 0;

    if (currentTime - lastPressTime > debounceDelay)
 800862a:	4e42      	ldr	r6, [pc, #264]	@ (8008734 <_ZN14MainScreenView15handleTickEventEv+0x11c>)
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 800862c:	f003 ff7c 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 8008630:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 8008634:	4681      	mov	r9, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 8008636:	483e      	ldr	r0, [pc, #248]	@ (8008730 <_ZN14MainScreenView15handleTickEventEv+0x118>)
 8008638:	f003 ff76 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 800863c:	2104      	movs	r1, #4
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800863e:	4607      	mov	r7, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 8008640:	483d      	ldr	r0, [pc, #244]	@ (8008738 <_ZN14MainScreenView15handleTickEventEv+0x120>)
 8008642:	f003 ff71 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 8008646:	2140      	movs	r1, #64	@ 0x40
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 8008648:	4680      	mov	r8, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 800864a:	483b      	ldr	r0, [pc, #236]	@ (8008738 <_ZN14MainScreenView15handleTickEventEv+0x120>)
 800864c:	f003 ff6c 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8008650:	2101      	movs	r1, #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 8008652:	4682      	mov	sl, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8008654:	4838      	ldr	r0, [pc, #224]	@ (8008738 <_ZN14MainScreenView15handleTickEventEv+0x120>)
 8008656:	f003 ff67 	bl	800c528 <HAL_GPIO_ReadPin>
    if (currentTime - lastPressTime > debounceDelay)
 800865a:	6832      	ldr	r2, [r6, #0]
 800865c:	1aaa      	subs	r2, r5, r2
 800865e:	2ac8      	cmp	r2, #200	@ 0xc8
 8008660:	d964      	bls.n	800872c <_ZN14MainScreenView15handleTickEventEv+0x114>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 8008662:	f10a 32ff 	add.w	r2, sl, #4294967295
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8008666:	1e41      	subs	r1, r0, #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 8008668:	f1d2 0a00 	rsbs	sl, r2, #0
 800866c:	eb4a 0a02 	adc.w	sl, sl, r2
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8008670:	424b      	negs	r3, r1
 8008672:	414b      	adcs	r3, r1
 8008674:	011b      	lsls	r3, r3, #4
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 8008676:	f108 30ff 	add.w	r0, r8, #4294967295
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800867a:	ea43 03ca 	orr.w	r3, r3, sl, lsl #3
 800867e:	f1b9 0f01 	cmp.w	r9, #1
 8008682:	bf08      	it	eq
 8008684:	f043 0301 	orreq.w	r3, r3, #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 8008688:	f1d0 0800 	rsbs	r8, r0, #0
 800868c:	eb48 0800 	adc.w	r8, r8, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 8008690:	f107 3cff 	add.w	ip, r7, #4294967295
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8008694:	ea43 0388 	orr.w	r3, r3, r8, lsl #2
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 8008698:	f1dc 0700 	rsbs	r7, ip, #0
 800869c:	eb47 070c 	adc.w	r7, r7, ip
    {
        if ((currentState & 1) && !(lastState & 1)) // PB10: UP
 80086a0:	f013 0f01 	tst.w	r3, #1
 80086a4:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 800873c <_ZN14MainScreenView15handleTickEventEv+0x124>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 80086a8:	ea43 0747 	orr.w	r7, r3, r7, lsl #1
        if ((currentState & 1) && !(lastState & 1)) // PB10: UP
 80086ac:	d015      	beq.n	80086da <_ZN14MainScreenView15handleTickEventEv+0xc2>
 80086ae:	f898 3000 	ldrb.w	r3, [r8]
 80086b2:	07db      	lsls	r3, r3, #31
 80086b4:	d411      	bmi.n	80086da <_ZN14MainScreenView15handleTickEventEv+0xc2>
        {
            moveUp();
 80086b6:	4620      	mov	r0, r4
 80086b8:	f7ff fdfa 	bl	80082b0 <_ZN14MainScreenView6moveUpEv>
            lastPressTime = currentTime;
        }
        else if ((currentState & 8) && !(lastState & 8)) // PA6: RIGHT
        {
            moveRight();
            spawnRandomTile();
 80086bc:	4620      	mov	r0, r4
 80086be:	f7ff ff51 	bl	8008564 <_ZN14MainScreenView15spawnRandomTileEv>
        }
        else if ((currentState & 16) && !(lastState & 16)) // PA0: BACK
        {
            // Về màn hình Chosing_mode
        	application().gotoSelectedGameDesignScreenCoverTransitionEast();
            lastPressTime = currentTime;
 80086c2:	6035      	str	r5, [r6, #0]
        }

        lastState = currentState;

        if (isGameOver())
 80086c4:	4620      	mov	r0, r4
        lastState = currentState;
 80086c6:	f888 7000 	strb.w	r7, [r8]
        if (isGameOver())
 80086ca:	f7ff ff0e 	bl	80084ea <_ZN14MainScreenView10isGameOverEv>
 80086ce:	b368      	cbz	r0, 800872c <_ZN14MainScreenView15handleTickEventEv+0x114>
        {
            navigateToGameOverScreen();
 80086d0:	4620      	mov	r0, r4
        }
    }
}
 80086d2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
            navigateToGameOverScreen();
 80086d6:	f7ff bf01 	b.w	80084dc <_ZN14MainScreenView24navigateToGameOverScreenEv>
        else if ((currentState & 2) && !(lastState & 2)) // PB12: DOWN
 80086da:	07b8      	lsls	r0, r7, #30
 80086dc:	d507      	bpl.n	80086ee <_ZN14MainScreenView15handleTickEventEv+0xd6>
 80086de:	f898 3000 	ldrb.w	r3, [r8]
 80086e2:	0799      	lsls	r1, r3, #30
 80086e4:	d403      	bmi.n	80086ee <_ZN14MainScreenView15handleTickEventEv+0xd6>
            moveDown();
 80086e6:	4620      	mov	r0, r4
 80086e8:	f7ff fe6d 	bl	80083c6 <_ZN14MainScreenView8moveDownEv>
            spawnRandomTile();
 80086ec:	e7e6      	b.n	80086bc <_ZN14MainScreenView15handleTickEventEv+0xa4>
        else if ((currentState & 4) && !(lastState & 4)) // PA2: LEFT
 80086ee:	077a      	lsls	r2, r7, #29
 80086f0:	d507      	bpl.n	8008702 <_ZN14MainScreenView15handleTickEventEv+0xea>
 80086f2:	f898 3000 	ldrb.w	r3, [r8]
 80086f6:	075b      	lsls	r3, r3, #29
 80086f8:	d403      	bmi.n	8008702 <_ZN14MainScreenView15handleTickEventEv+0xea>
            moveLeft();
 80086fa:	4620      	mov	r0, r4
 80086fc:	f7ff fcba 	bl	8008074 <_ZN14MainScreenView8moveLeftEv>
            spawnRandomTile();
 8008700:	e7dc      	b.n	80086bc <_ZN14MainScreenView15handleTickEventEv+0xa4>
        else if ((currentState & 8) && !(lastState & 8)) // PA6: RIGHT
 8008702:	0738      	lsls	r0, r7, #28
 8008704:	d507      	bpl.n	8008716 <_ZN14MainScreenView15handleTickEventEv+0xfe>
 8008706:	f898 3000 	ldrb.w	r3, [r8]
 800870a:	0719      	lsls	r1, r3, #28
 800870c:	d403      	bmi.n	8008716 <_ZN14MainScreenView15handleTickEventEv+0xfe>
            moveRight();
 800870e:	4620      	mov	r0, r4
 8008710:	f7ff fd3f 	bl	8008192 <_ZN14MainScreenView9moveRightEv>
 8008714:	e7d2      	b.n	80086bc <_ZN14MainScreenView15handleTickEventEv+0xa4>
        else if ((currentState & 16) && !(lastState & 16)) // PA0: BACK
 8008716:	06fa      	lsls	r2, r7, #27
 8008718:	d5d4      	bpl.n	80086c4 <_ZN14MainScreenView15handleTickEventEv+0xac>
 800871a:	f898 3000 	ldrb.w	r3, [r8]
 800871e:	06db      	lsls	r3, r3, #27
 8008720:	d4d0      	bmi.n	80086c4 <_ZN14MainScreenView15handleTickEventEv+0xac>
 8008722:	f00e f93b 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        	application().gotoSelectedGameDesignScreenCoverTransitionEast();
 8008726:	f7fa fd47 	bl	80031b8 <_ZN23FrontendApplicationBase47gotoSelectedGameDesignScreenCoverTransitionEastEv>
 800872a:	e7ca      	b.n	80086c2 <_ZN14MainScreenView15handleTickEventEv+0xaa>
}
 800872c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008730:	40020400 	.word	0x40020400
 8008734:	200031bc 	.word	0x200031bc
 8008738:	40020000 	.word	0x40020000
 800873c:	200031b8 	.word	0x200031b8

08008740 <_ZN14MainScreenView13saveGridStateEv>:
{
 8008740:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
            gridBeforeMove[i][j] = tiles[i][j]->getValue();
 8008742:	4d0a      	ldr	r5, [pc, #40]	@ (800876c <_ZN14MainScreenView13saveGridStateEv+0x2c>)
 8008744:	f500 5490 	add.w	r4, r0, #4608	@ 0x1200
 8008748:	f500 5691 	add.w	r6, r0, #4640	@ 0x1220
 800874c:	341a      	adds	r4, #26
 800874e:	361a      	adds	r6, #26
 8008750:	1a2d      	subs	r5, r5, r0
        for (int j = 0; j < 4; ++j)
 8008752:	f104 0708 	add.w	r7, r4, #8
            gridBeforeMove[i][j] = tiles[i][j]->getValue();
 8008756:	f855 0014 	ldr.w	r0, [r5, r4, lsl #1]
 800875a:	f002 fdd9 	bl	800b310 <_ZNK4Tile8getValueEv>
 800875e:	f824 0f02 	strh.w	r0, [r4, #2]!
        for (int j = 0; j < 4; ++j)
 8008762:	42bc      	cmp	r4, r7
 8008764:	d1f7      	bne.n	8008756 <_ZN14MainScreenView13saveGridStateEv+0x16>
    for (int i = 0; i < 4; ++i)
 8008766:	42a6      	cmp	r6, r4
 8008768:	d1f3      	bne.n	8008752 <_ZN14MainScreenView13saveGridStateEv+0x12>
}
 800876a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800876c:	ffffeda8 	.word	0xffffeda8

08008770 <_ZN14MainScreenView14hasGridChangedEv>:
{
 8008770:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
 8008774:	4c0e      	ldr	r4, [pc, #56]	@ (80087b0 <_ZN14MainScreenView14hasGridChangedEv+0x40>)
 8008776:	f500 5591 	add.w	r5, r0, #4640	@ 0x1220
 800877a:	f500 5792 	add.w	r7, r0, #4672	@ 0x1240
 800877e:	3502      	adds	r5, #2
 8008780:	3702      	adds	r7, #2
 8008782:	1a24      	subs	r4, r4, r0
        for (int j = 0; j < 4; ++j)
 8008784:	f1a5 0608 	sub.w	r6, r5, #8
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
 8008788:	f836 8f02 	ldrh.w	r8, [r6, #2]!
 800878c:	f854 0016 	ldr.w	r0, [r4, r6, lsl #1]
 8008790:	f002 fdbe 	bl	800b310 <_ZNK4Tile8getValueEv>
 8008794:	4580      	cmp	r8, r0
 8008796:	d107      	bne.n	80087a8 <_ZN14MainScreenView14hasGridChangedEv+0x38>
        for (int j = 0; j < 4; ++j)
 8008798:	42ae      	cmp	r6, r5
 800879a:	d1f5      	bne.n	8008788 <_ZN14MainScreenView14hasGridChangedEv+0x18>
    for (int i = 0; i < 4; ++i)
 800879c:	f106 0508 	add.w	r5, r6, #8
 80087a0:	42bd      	cmp	r5, r7
 80087a2:	d1ef      	bne.n	8008784 <_ZN14MainScreenView14hasGridChangedEv+0x14>
    return false;
 80087a4:	2000      	movs	r0, #0
 80087a6:	e000      	b.n	80087aa <_ZN14MainScreenView14hasGridChangedEv+0x3a>
                return true;
 80087a8:	2001      	movs	r0, #1
}
 80087aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80087ae:	bf00      	nop
 80087b0:	ffffeda4 	.word	0xffffeda4

080087b4 <_ZN14MainScreenView18handleGestureEventERKN8touchgfx12GestureEventE>:
     *
     * @return The type of this gesture event.
     */
    GestureEventType getType() const
    {
        return gestureEventType;
 80087b4:	790b      	ldrb	r3, [r1, #4]
{
 80087b6:	b510      	push	{r4, lr}
 80087b8:	4604      	mov	r4, r0
    if (evt.getType() == GestureEvent::SWIPE_HORIZONTAL)
 80087ba:	b9c3      	cbnz	r3, 80087ee <_ZN14MainScreenView18handleGestureEventERKN8touchgfx12GestureEventE+0x3a>
        if (evt.getVelocity() > 0)
 80087bc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80087c0:	2b00      	cmp	r3, #0
 80087c2:	dd11      	ble.n	80087e8 <_ZN14MainScreenView18handleGestureEventERKN8touchgfx12GestureEventE+0x34>
             moveRight();
 80087c4:	f7ff fce5 	bl	8008192 <_ZN14MainScreenView9moveRightEv>
    if (hasGridChanged()) {
 80087c8:	4620      	mov	r0, r4
 80087ca:	f7ff ffd1 	bl	8008770 <_ZN14MainScreenView14hasGridChangedEv>
 80087ce:	b110      	cbz	r0, 80087d6 <_ZN14MainScreenView18handleGestureEventERKN8touchgfx12GestureEventE+0x22>
        spawnRandomTile();  // chi spawn neu co thay doi
 80087d0:	4620      	mov	r0, r4
 80087d2:	f7ff fec7 	bl	8008564 <_ZN14MainScreenView15spawnRandomTileEv>
    if (isGameOver())
 80087d6:	4620      	mov	r0, r4
 80087d8:	f7ff fe87 	bl	80084ea <_ZN14MainScreenView10isGameOverEv>
 80087dc:	b198      	cbz	r0, 8008806 <_ZN14MainScreenView18handleGestureEventERKN8touchgfx12GestureEventE+0x52>
        navigateToGameOverScreen();
 80087de:	4620      	mov	r0, r4
}
 80087e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        navigateToGameOverScreen();
 80087e4:	f7ff be7a 	b.w	80084dc <_ZN14MainScreenView24navigateToGameOverScreenEv>
            moveLeft();
 80087e8:	f7ff fc44 	bl	8008074 <_ZN14MainScreenView8moveLeftEv>
 80087ec:	e7ec      	b.n	80087c8 <_ZN14MainScreenView18handleGestureEventERKN8touchgfx12GestureEventE+0x14>
    else if (evt.getType() == GestureEvent::SWIPE_VERTICAL)
 80087ee:	2b01      	cmp	r3, #1
 80087f0:	d1ea      	bne.n	80087c8 <_ZN14MainScreenView18handleGestureEventERKN8touchgfx12GestureEventE+0x14>
        if (evt.getVelocity() > 0)
 80087f2:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80087f6:	2b00      	cmp	r3, #0
 80087f8:	dd02      	ble.n	8008800 <_ZN14MainScreenView18handleGestureEventERKN8touchgfx12GestureEventE+0x4c>
             moveDown();
 80087fa:	f7ff fde4 	bl	80083c6 <_ZN14MainScreenView8moveDownEv>
 80087fe:	e7e3      	b.n	80087c8 <_ZN14MainScreenView18handleGestureEventERKN8touchgfx12GestureEventE+0x14>
            moveUp();
 8008800:	f7ff fd56 	bl	80082b0 <_ZN14MainScreenView6moveUpEv>
 8008804:	e7e0      	b.n	80087c8 <_ZN14MainScreenView18handleGestureEventERKN8touchgfx12GestureEventE+0x14>
}
 8008806:	bd10      	pop	{r4, pc}

08008808 <_ZN14MainScreenView14handleKeyEventEh>:
{   
 8008808:	b538      	push	{r3, r4, r5, lr}
 800880a:	460d      	mov	r5, r1
 800880c:	4604      	mov	r4, r0
    saveGridState();
 800880e:	f7ff ff97 	bl	8008740 <_ZN14MainScreenView13saveGridStateEv>
    switch (key)
 8008812:	f1a5 0132 	sub.w	r1, r5, #50	@ 0x32
 8008816:	2906      	cmp	r1, #6
 8008818:	d808      	bhi.n	800882c <_ZN14MainScreenView14handleKeyEventEh+0x24>
 800881a:	e8df f001 	tbb	[pc, r1]
 800881e:	071f      	.short	0x071f
 8008820:	07170704 	.word	0x07170704
 8008824:	1b          	.byte	0x1b
 8008825:	00          	.byte	0x00
        moveLeft();
 8008826:	4620      	mov	r0, r4
 8008828:	f7ff fc24 	bl	8008074 <_ZN14MainScreenView8moveLeftEv>
    if(hasGridChanged()){
 800882c:	4620      	mov	r0, r4
 800882e:	f7ff ff9f 	bl	8008770 <_ZN14MainScreenView14hasGridChangedEv>
 8008832:	b110      	cbz	r0, 800883a <_ZN14MainScreenView14handleKeyEventEh+0x32>
        spawnRandomTile();
 8008834:	4620      	mov	r0, r4
 8008836:	f7ff fe95 	bl	8008564 <_ZN14MainScreenView15spawnRandomTileEv>
    if (isGameOver())
 800883a:	4620      	mov	r0, r4
 800883c:	f7ff fe55 	bl	80084ea <_ZN14MainScreenView10isGameOverEv>
 8008840:	b180      	cbz	r0, 8008864 <_ZN14MainScreenView14handleKeyEventEh+0x5c>
        navigateToGameOverScreen();
 8008842:	4620      	mov	r0, r4
}
 8008844:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        navigateToGameOverScreen();
 8008848:	f7ff be48 	b.w	80084dc <_ZN14MainScreenView24navigateToGameOverScreenEv>
        moveRight();
 800884c:	4620      	mov	r0, r4
 800884e:	f7ff fca0 	bl	8008192 <_ZN14MainScreenView9moveRightEv>
        break;
 8008852:	e7eb      	b.n	800882c <_ZN14MainScreenView14handleKeyEventEh+0x24>
        moveUp();
 8008854:	4620      	mov	r0, r4
 8008856:	f7ff fd2b 	bl	80082b0 <_ZN14MainScreenView6moveUpEv>
        break;
 800885a:	e7e7      	b.n	800882c <_ZN14MainScreenView14handleKeyEventEh+0x24>
        moveDown();
 800885c:	4620      	mov	r0, r4
 800885e:	f7ff fdb2 	bl	80083c6 <_ZN14MainScreenView8moveDownEv>
        break;
 8008862:	e7e3      	b.n	800882c <_ZN14MainScreenView14handleKeyEventEh+0x24>
}
 8008864:	bd38      	pop	{r3, r4, r5, pc}
	...

08008868 <_ZN14MainScreenView11setupScreenEv>:
    bestScore = GameGlobal::bestScore;
 8008868:	4b27      	ldr	r3, [pc, #156]	@ (8008908 <_ZN14MainScreenView11setupScreenEv+0xa0>)
{   
 800886a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    score = 0;
 800886e:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
    bestScore = GameGlobal::bestScore;
 8008872:	681b      	ldr	r3, [r3, #0]
 8008874:	f8c5 3240 	str.w	r3, [r5, #576]	@ 0x240
    score = 0;
 8008878:	2100      	movs	r1, #0
{   
 800887a:	4604      	mov	r4, r0
    score = 0;
 800887c:	f8c5 123c 	str.w	r1, [r5, #572]	@ 0x23c
    scoreContainer.setScore(score);
 8008880:	f500 7044 	add.w	r0, r0, #784	@ 0x310
 8008884:	f000 f866 	bl	8008954 <_ZN5Score8setScoreEm>
    bestContainer.setScore(bestScore);
 8008888:	f8d5 1240 	ldr.w	r1, [r5, #576]	@ 0x240
 800888c:	f504 70fe 	add.w	r0, r4, #508	@ 0x1fc
 8008890:	f7ff f962 	bl	8007b58 <_ZN4Best8setScoreEm>
    updateScoreText();
 8008894:	4620      	mov	r0, r4
 8008896:	f7ff fbd1 	bl	800803c <_ZN14MainScreenView15updateScoreTextEv>
    for (int i = 0; i < 4; ++i)
 800889a:	f504 578e 	add.w	r7, r4, #4544	@ 0x11c0
 800889e:	3718      	adds	r7, #24
    updateScoreText();
 80088a0:	f04f 086e 	mov.w	r8, #110	@ 0x6e
            tiles[i][j]->moveTo((j) * TILE_SIZE,tileOffsetY + i * TILE_SIZE);
 80088a4:	f1a8 0a1e 	sub.w	sl, r8, #30
 80088a8:	fa0f fa8a 	sxth.w	sl, sl
            tiles[i][j]->centerY = tileOffsetY + i * TILE_SIZE + TILE_SIZE / 2;
 80088ac:	46b9      	mov	r9, r7
 80088ae:	2600      	movs	r6, #0
            tiles[i][j]->setValue(0); // ẩn ban đầu
 80088b0:	f859 0f04 	ldr.w	r0, [r9, #4]!
 80088b4:	2100      	movs	r1, #0
 80088b6:	f002 fcc3 	bl	800b240 <_ZN4Tile8setValueEt>
            tiles[i][j]->moveTo((j) * TILE_SIZE,tileOffsetY + i * TILE_SIZE);
 80088ba:	f8d9 0000 	ldr.w	r0, [r9]
 80088be:	6803      	ldr	r3, [r0, #0]
 80088c0:	4652      	mov	r2, sl
 80088c2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80088c4:	b231      	sxth	r1, r6
 80088c6:	4798      	blx	r3
            tiles[i][j]->centerX = (j) * TILE_SIZE + TILE_SIZE / 2;
 80088c8:	f106 021e 	add.w	r2, r6, #30
 80088cc:	f8d9 3000 	ldr.w	r3, [r9]
        for (int j = 0; j < 4; ++j)
 80088d0:	363c      	adds	r6, #60	@ 0x3c
 80088d2:	2ef0      	cmp	r6, #240	@ 0xf0
            tiles[i][j]->centerY = tileOffsetY + i * TILE_SIZE + TILE_SIZE / 2;
 80088d4:	e9c3 2830 	strd	r2, r8, [r3, #192]	@ 0xc0
        for (int j = 0; j < 4; ++j)
 80088d8:	d1ea      	bne.n	80088b0 <_ZN14MainScreenView11setupScreenEv+0x48>
    for (int i = 0; i < 4; ++i)
 80088da:	f108 083c 	add.w	r8, r8, #60	@ 0x3c
 80088de:	f5b8 7faf 	cmp.w	r8, #350	@ 0x15e
 80088e2:	f107 0710 	add.w	r7, r7, #16
 80088e6:	d1dd      	bne.n	80088a4 <_ZN14MainScreenView11setupScreenEv+0x3c>
    tiles[0][0]->setValue(2);
 80088e8:	f8d5 01dc 	ldr.w	r0, [r5, #476]	@ 0x1dc
 80088ec:	2102      	movs	r1, #2
 80088ee:	f002 fca7 	bl	800b240 <_ZN4Tile8setValueEt>
    tiles[0][1]->setValue(2);
 80088f2:	f8d5 01e0 	ldr.w	r0, [r5, #480]	@ 0x1e0
 80088f6:	2102      	movs	r1, #2
 80088f8:	f002 fca2 	bl	800b240 <_ZN4Tile8setValueEt>
    MainScreenViewBase::setupScreen();
 80088fc:	4620      	mov	r0, r4
}
 80088fe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    MainScreenViewBase::setupScreen();
 8008902:	f7fb bf1e 	b.w	8004742 <_ZN18MainScreenViewBase11setupScreenEv>
 8008906:	bf00      	nop
 8008908:	200031ac 	.word	0x200031ac

0800890c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800890c:	2200      	movs	r2, #0
 800890e:	6002      	str	r2, [r0, #0]
{

}
 8008910:	4770      	bx	lr

08008912 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8008912:	4770      	bx	lr

08008914 <_ZN5ScoreD1Ev>:
 8008914:	b510      	push	{r4, lr}
 8008916:	4b03      	ldr	r3, [pc, #12]	@ (8008924 <_ZN5ScoreD1Ev+0x10>)
 8008918:	6003      	str	r3, [r0, #0]
 800891a:	4604      	mov	r4, r0
 800891c:	f7fc fa84 	bl	8004e28 <_ZN9ScoreBaseD1Ev>
 8008920:	4620      	mov	r0, r4
 8008922:	bd10      	pop	{r4, pc}
 8008924:	0802dba4 	.word	0x0802dba4

08008928 <_ZN5ScoreD0Ev>:
 8008928:	b510      	push	{r4, lr}
 800892a:	4604      	mov	r4, r0
 800892c:	f7ff fff2 	bl	8008914 <_ZN5ScoreD1Ev>
 8008930:	4620      	mov	r0, r4
 8008932:	f44f 718a 	mov.w	r1, #276	@ 0x114
 8008936:	f020 feed 	bl	8029714 <_ZdlPvj>
 800893a:	4620      	mov	r0, r4
 800893c:	bd10      	pop	{r4, pc}
	...

08008940 <_ZN5ScoreC1Ev>:
#include <gui/containers/Score.hpp>

Score::Score()
 8008940:	b510      	push	{r4, lr}
 8008942:	4604      	mov	r4, r0
 8008944:	f7fc fa7a 	bl	8004e3c <_ZN9ScoreBaseC1Ev>
 8008948:	4b01      	ldr	r3, [pc, #4]	@ (8008950 <_ZN5ScoreC1Ev+0x10>)
 800894a:	6023      	str	r3, [r4, #0]
{

}
 800894c:	4620      	mov	r0, r4
 800894e:	bd10      	pop	{r4, pc}
 8008950:	0802dba4 	.word	0x0802dba4

08008954 <_ZN5Score8setScoreEm>:
    // Gắn buffer cho TextArea
    scoreText.setWildcard(scoreBuffer);
}
// Hàm để cập nhật điểm
void Score::setScore(uint32_t score)
{
 8008954:	b510      	push	{r4, lr}
 8008956:	460b      	mov	r3, r1
 8008958:	4604      	mov	r4, r0
    Unicode::snprintf(scoreBuffer, sizeof(scoreBuffer), "%u", score);
 800895a:	4a06      	ldr	r2, [pc, #24]	@ (8008974 <_ZN5Score8setScoreEm+0x20>)
 800895c:	2114      	movs	r1, #20
 800895e:	f500 7080 	add.w	r0, r0, #256	@ 0x100
 8008962:	f011 fd80 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    scoreText.invalidate();  // Yêu cầu cập nhật lại giao diện
 8008966:	f104 00a0 	add.w	r0, r4, #160	@ 0xa0
 800896a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    scoreText.invalidate();  // Yêu cầu cập nhật lại giao diện
 800896e:	f00f ba39 	b.w	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008972:	bf00      	nop
 8008974:	0802cc74 	.word	0x0802cc74

08008978 <_ZN5Score10initializeEv>:
{
 8008978:	b510      	push	{r4, lr}
 800897a:	4604      	mov	r4, r0
    ScoreBase::initialize();
 800897c:	f7fc fa55 	bl	8004e2a <_ZN9ScoreBase10initializeEv>
    scoreText.setWildcard(scoreBuffer);
 8008980:	f504 7380 	add.w	r3, r4, #256	@ 0x100
 8008984:	f8c4 30e8 	str.w	r3, [r4, #232]	@ 0xe8
}
 8008988:	bd10      	pop	{r4, pc}

0800898a <_ZN18Screen3x3PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen3x3Presenter() {}
 800898a:	4770      	bx	lr

0800898c <_ZThn4_N18Screen3x3PresenterD1Ev>:
 800898c:	3804      	subs	r0, #4
 800898e:	4770      	bx	lr

08008990 <_ZN18Screen3x3Presenter10deactivateEv>:
}

void Screen3x3Presenter::activate()
{

}
 8008990:	4770      	bx	lr

08008992 <_ZN18Screen3x3PresenterD0Ev>:
 8008992:	b510      	push	{r4, lr}
 8008994:	2110      	movs	r1, #16
 8008996:	4604      	mov	r4, r0
 8008998:	f020 febc 	bl	8029714 <_ZdlPvj>
 800899c:	4620      	mov	r0, r4
 800899e:	bd10      	pop	{r4, pc}

080089a0 <_ZThn4_N18Screen3x3PresenterD0Ev>:
 80089a0:	f1a0 0004 	sub.w	r0, r0, #4
 80089a4:	e7f5      	b.n	8008992 <_ZN18Screen3x3PresenterD0Ev>
	...

080089a8 <_ZN18Screen3x3PresenterC1ER13Screen3x3View>:
 80089a8:	2200      	movs	r2, #0
 80089aa:	6082      	str	r2, [r0, #8]
    : view(v)
 80089ac:	4a02      	ldr	r2, [pc, #8]	@ (80089b8 <_ZN18Screen3x3PresenterC1ER13Screen3x3View+0x10>)
 80089ae:	6002      	str	r2, [r0, #0]
 80089b0:	3218      	adds	r2, #24
 80089b2:	6042      	str	r2, [r0, #4]
 80089b4:	60c1      	str	r1, [r0, #12]
}
 80089b6:	4770      	bx	lr
 80089b8:	0802dc38 	.word	0x0802dc38

080089bc <_ZN13Screen3x3View14tearDownScreenEv>:
}

void Screen3x3View::tearDownScreen()
{
    Screen3x3ViewBase::tearDownScreen();
}
 80089bc:	4770      	bx	lr
	...

080089c0 <_ZN13Screen3x3ViewD1Ev>:
#include <gui/containers/Tile3x3.hpp>
class Screen3x3View : public Screen3x3ViewBase
{
public:
    Screen3x3View();
    virtual ~Screen3x3View() {}
 80089c0:	b510      	push	{r4, lr}
 80089c2:	4b03      	ldr	r3, [pc, #12]	@ (80089d0 <_ZN13Screen3x3ViewD1Ev+0x10>)
 80089c4:	6003      	str	r3, [r0, #0]
 80089c6:	4604      	mov	r4, r0
 80089c8:	f7fc fb68 	bl	800509c <_ZN17Screen3x3ViewBaseD1Ev>
 80089cc:	4620      	mov	r0, r4
 80089ce:	bd10      	pop	{r4, pc}
 80089d0:	0802dc60 	.word	0x0802dc60

080089d4 <_ZN13Screen3x3ViewD0Ev>:
 80089d4:	b510      	push	{r4, lr}
 80089d6:	4604      	mov	r4, r0
 80089d8:	f7ff fff2 	bl	80089c0 <_ZN13Screen3x3ViewD1Ev>
 80089dc:	4620      	mov	r0, r4
 80089de:	f640 4104 	movw	r1, #3076	@ 0xc04
 80089e2:	f020 fe97 	bl	8029714 <_ZdlPvj>
 80089e6:	4620      	mov	r0, r4
 80089e8:	bd10      	pop	{r4, pc}
	...

080089ec <_ZN13Screen3x3View6myRandEv>:
    seed = seed * 1664525UL + 1013904223UL;
 80089ec:	4b03      	ldr	r3, [pc, #12]	@ (80089fc <_ZN13Screen3x3View6myRandEv+0x10>)
 80089ee:	4904      	ldr	r1, [pc, #16]	@ (8008a00 <_ZN13Screen3x3View6myRandEv+0x14>)
 80089f0:	681a      	ldr	r2, [r3, #0]
 80089f2:	4804      	ldr	r0, [pc, #16]	@ (8008a04 <_ZN13Screen3x3View6myRandEv+0x18>)
 80089f4:	fb01 0002 	mla	r0, r1, r2, r0
 80089f8:	6018      	str	r0, [r3, #0]
}
 80089fa:	4770      	bx	lr
 80089fc:	2000001c 	.word	0x2000001c
 8008a00:	0019660d 	.word	0x0019660d
 8008a04:	3c6ef35f 	.word	0x3c6ef35f

08008a08 <_ZN13Screen3x3ViewC1Ev>:
Screen3x3View::Screen3x3View()
 8008a08:	b510      	push	{r4, lr}
 8008a0a:	4604      	mov	r4, r0
 8008a0c:	f7fc fb9a 	bl	8005144 <_ZN17Screen3x3ViewBaseC1Ev>
 8008a10:	4b16      	ldr	r3, [pc, #88]	@ (8008a6c <_ZN13Screen3x3ViewC1Ev+0x64>)
 8008a12:	6023      	str	r3, [r4, #0]
 8008a14:	2300      	movs	r3, #0
 8008a16:	f8c4 3bfc 	str.w	r3, [r4, #3068]	@ 0xbfc
 8008a1a:	f8c4 3c00 	str.w	r3, [r4, #3072]	@ 0xc00
    tiles[0][0] = &tile3x31;
 8008a1e:	f504 6391 	add.w	r3, r4, #1160	@ 0x488
 8008a22:	f8c4 3bc4 	str.w	r3, [r4, #3012]	@ 0xbc4
    tiles[0][1] = &tile3x32;
 8008a26:	f204 5354 	addw	r3, r4, #1364	@ 0x554
 8008a2a:	f8c4 3bc8 	str.w	r3, [r4, #3016]	@ 0xbc8
    tiles[0][2] = &tile3x33;
 8008a2e:	f504 63c4 	add.w	r3, r4, #1568	@ 0x620
 8008a32:	f8c4 3bcc 	str.w	r3, [r4, #3020]	@ 0xbcc
    tiles[1][0] = &tile3x34;
 8008a36:	f204 63ec 	addw	r3, r4, #1772	@ 0x6ec
 8008a3a:	f8c4 3bd0 	str.w	r3, [r4, #3024]	@ 0xbd0
    tiles[1][1] = &tile3x36;
 8008a3e:	f604 0384 	addw	r3, r4, #2180	@ 0x884
 8008a42:	f8c4 3bd4 	str.w	r3, [r4, #3028]	@ 0xbd4
    tiles[1][2] = &tile3x38;
 8008a46:	f604 231c 	addw	r3, r4, #2588	@ 0xa1c
 8008a4a:	f8c4 3bd8 	str.w	r3, [r4, #3032]	@ 0xbd8
    tiles[2][0] = &tile3x35;
 8008a4e:	f504 63f7 	add.w	r3, r4, #1976	@ 0x7b8
 8008a52:	f8c4 3bdc 	str.w	r3, [r4, #3036]	@ 0xbdc
    tiles[2][1] = &tile3x37;
 8008a56:	f504 6315 	add.w	r3, r4, #2384	@ 0x950
 8008a5a:	f8c4 3be0 	str.w	r3, [r4, #3040]	@ 0xbe0
    tiles[2][2] = &tile3x39;
 8008a5e:	f604 23e8 	addw	r3, r4, #2792	@ 0xae8
 8008a62:	f8c4 3be4 	str.w	r3, [r4, #3044]	@ 0xbe4
}
 8008a66:	4620      	mov	r0, r4
 8008a68:	bd10      	pop	{r4, pc}
 8008a6a:	bf00      	nop
 8008a6c:	0802dc60 	.word	0x0802dc60

08008a70 <_ZN13Screen3x3View15updateScoreTextEv>:
        navigateToGameOverScreen();
    }
}
//cap nhat diem
void Screen3x3View::updateScoreText()
{   
 8008a70:	b510      	push	{r4, lr}
    GameGlobal::yourScore = score;
 8008a72:	4b0a      	ldr	r3, [pc, #40]	@ (8008a9c <_ZN13Screen3x3View15updateScoreTextEv+0x2c>)
 8008a74:	f8d0 1bfc 	ldr.w	r1, [r0, #3068]	@ 0xbfc
 8008a78:	6019      	str	r1, [r3, #0]
{   
 8008a7a:	4604      	mov	r4, r0
    GameGlobal::bestScore = bestScore;
 8008a7c:	4b08      	ldr	r3, [pc, #32]	@ (8008aa0 <_ZN13Screen3x3View15updateScoreTextEv+0x30>)
 8008a7e:	f8d0 2c00 	ldr.w	r2, [r0, #3072]	@ 0xc00
 8008a82:	601a      	str	r2, [r3, #0]
    scoreContainer.setScore(score);
 8008a84:	f500 70e8 	add.w	r0, r0, #464	@ 0x1d0
 8008a88:	f7ff ff64 	bl	8008954 <_ZN5Score8setScoreEm>
    bestContainer.setScore(bestScore);
 8008a8c:	f8d4 1c00 	ldr.w	r1, [r4, #3072]	@ 0xc00
 8008a90:	f504 7039 	add.w	r0, r4, #740	@ 0x2e4
}
 8008a94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    bestContainer.setScore(bestScore);
 8008a98:	f7ff b85e 	b.w	8007b58 <_ZN4Best8setScoreEm>
 8008a9c:	200031a8 	.word	0x200031a8
 8008aa0:	200031ac 	.word	0x200031ac

08008aa4 <_ZN13Screen3x3View8moveLeftEv>:
//di chuyen trai
void Screen3x3View::moveLeft()
{
 8008aa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008aa8:	4604      	mov	r4, r0
 8008aaa:	b089      	sub	sp, #36	@ 0x24
 8008aac:	f600 3ac4 	addw	sl, r0, #3012	@ 0xbc4
    for (int row = 0; row < 3; ++row)
 8008ab0:	f04f 0800 	mov.w	r8, #0
    {   
        int merged[3] = {0}; // theo dõi các tile đã merge
 8008ab4:	2300      	movs	r3, #0
 8008ab6:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008aba:	9307      	str	r3, [sp, #28]
 8008abc:	f8cd a004 	str.w	sl, [sp, #4]

        for (int col = 1; col < 3; ++col)
 8008ac0:	f04f 0901 	mov.w	r9, #1
        {   
            if (tiles[row][col]->getValue() == 0) continue;
 8008ac4:	9b01      	ldr	r3, [sp, #4]
 8008ac6:	f853 0f04 	ldr.w	r0, [r3, #4]!
 8008aca:	9301      	str	r3, [sp, #4]
 8008acc:	f002 fd18 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008ad0:	b338      	cbz	r0, 8008b22 <_ZN13Screen3x3View8moveLeftEv+0x7e>

            int currentCol = col;
 8008ad2:	46cb      	mov	fp, r9
 8008ad4:	eb08 0548 	add.w	r5, r8, r8, lsl #1
 8008ad8:	465e      	mov	r6, fp
            while (currentCol > 0 &&
                   tiles[row][currentCol - 1]->getValue() == 0)
 8008ada:	f10b 3bff 	add.w	fp, fp, #4294967295
 8008ade:	eb0b 0105 	add.w	r1, fp, r5
 8008ae2:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8008ae6:	9103      	str	r1, [sp, #12]
 8008ae8:	f8d1 0bc4 	ldr.w	r0, [r1, #3012]	@ 0xbc4
 8008aec:	f002 fd08 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008af0:	1977      	adds	r7, r6, r5
            while (currentCol > 0 &&
 8008af2:	9002      	str	r0, [sp, #8]
 8008af4:	bb28      	cbnz	r0, 8008b42 <_ZN13Screen3x3View8moveLeftEv+0x9e>
            {   
                //moveTileAnimated(row, currentCol, row, currentCol - 1); // them doan nay
                tiles[row][currentCol - 1]->setValue(tiles[row][currentCol]->getValue());
 8008af6:	eb04 0787 	add.w	r7, r4, r7, lsl #2
 8008afa:	9903      	ldr	r1, [sp, #12]
 8008afc:	f8d7 0bc4 	ldr.w	r0, [r7, #3012]	@ 0xbc4
 8008b00:	f8d1 6bc4 	ldr.w	r6, [r1, #3012]	@ 0xbc4
 8008b04:	f002 fcfc 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008b08:	4601      	mov	r1, r0
 8008b0a:	4630      	mov	r0, r6
 8008b0c:	f002 fc90 	bl	800b430 <_ZN7Tile3x38setValueEt>
                tiles[row][currentCol]->setValue(0);
 8008b10:	9a02      	ldr	r2, [sp, #8]
 8008b12:	f8d7 0bc4 	ldr.w	r0, [r7, #3012]	@ 0xbc4
 8008b16:	4611      	mov	r1, r2
 8008b18:	f002 fc8a 	bl	800b430 <_ZN7Tile3x38setValueEt>
            while (currentCol > 0 &&
 8008b1c:	f1bb 0f00 	cmp.w	fp, #0
 8008b20:	d1da      	bne.n	8008ad8 <_ZN13Screen3x3View8moveLeftEv+0x34>
        for (int col = 1; col < 3; ++col)
 8008b22:	f1b9 0f01 	cmp.w	r9, #1
 8008b26:	d009      	beq.n	8008b3c <_ZN13Screen3x3View8moveLeftEv+0x98>
    for (int row = 0; row < 3; ++row)
 8008b28:	f108 0801 	add.w	r8, r8, #1
 8008b2c:	f1b8 0f03 	cmp.w	r8, #3
 8008b30:	f10a 0a0c 	add.w	sl, sl, #12
 8008b34:	d1be      	bne.n	8008ab4 <_ZN13Screen3x3View8moveLeftEv+0x10>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 8008b36:	b009      	add	sp, #36	@ 0x24
 8008b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008b3c:	f04f 0902 	mov.w	r9, #2
 8008b40:	e7c0      	b.n	8008ac4 <_ZN13Screen3x3View8moveLeftEv+0x20>
                tiles[row][currentCol - 1]->getValue() == tiles[row][currentCol]->getValue() &&
 8008b42:	3e01      	subs	r6, #1
 8008b44:	4435      	add	r5, r6
 8008b46:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8008b4a:	eb04 0787 	add.w	r7, r4, r7, lsl #2
 8008b4e:	f8d5 0bc4 	ldr.w	r0, [r5, #3012]	@ 0xbc4
 8008b52:	f002 fcd5 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008b56:	9002      	str	r0, [sp, #8]
 8008b58:	f8d7 0bc4 	ldr.w	r0, [r7, #3012]	@ 0xbc4
 8008b5c:	f002 fcd0 	bl	800b500 <_ZNK7Tile3x38getValueEv>
            if (currentCol > 0 &&
 8008b60:	9b02      	ldr	r3, [sp, #8]
 8008b62:	4283      	cmp	r3, r0
 8008b64:	d1dd      	bne.n	8008b22 <_ZN13Screen3x3View8moveLeftEv+0x7e>
                !merged[currentCol - 1])
 8008b66:	ab08      	add	r3, sp, #32
 8008b68:	eb03 0686 	add.w	r6, r3, r6, lsl #2
                tiles[row][currentCol - 1]->getValue() == tiles[row][currentCol]->getValue() &&
 8008b6c:	f856 3c0c 	ldr.w	r3, [r6, #-12]
 8008b70:	2b00      	cmp	r3, #0
 8008b72:	d1d6      	bne.n	8008b22 <_ZN13Screen3x3View8moveLeftEv+0x7e>
                uint16_t newValue = tiles[row][currentCol - 1]->getValue() * 2;
 8008b74:	f8d5 0bc4 	ldr.w	r0, [r5, #3012]	@ 0xbc4
 8008b78:	9303      	str	r3, [sp, #12]
 8008b7a:	f002 fcc1 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008b7e:	0040      	lsls	r0, r0, #1
 8008b80:	b282      	uxth	r2, r0
                tiles[row][currentCol - 1]->setValue(
 8008b82:	4611      	mov	r1, r2
 8008b84:	f8d5 0bc4 	ldr.w	r0, [r5, #3012]	@ 0xbc4
 8008b88:	9202      	str	r2, [sp, #8]
 8008b8a:	f002 fc51 	bl	800b430 <_ZN7Tile3x38setValueEt>
                tiles[row][currentCol]->setValue(0);
 8008b8e:	9b03      	ldr	r3, [sp, #12]
 8008b90:	f8d7 0bc4 	ldr.w	r0, [r7, #3012]	@ 0xbc4
 8008b94:	4619      	mov	r1, r3
 8008b96:	f002 fc4b 	bl	800b430 <_ZN7Tile3x38setValueEt>
                merged[currentCol - 1] = 1;
 8008b9a:	2301      	movs	r3, #1
                score += newValue;
 8008b9c:	9a02      	ldr	r2, [sp, #8]
                merged[currentCol - 1] = 1;
 8008b9e:	f846 3c0c 	str.w	r3, [r6, #-12]
                score += newValue;
 8008ba2:	f8d4 3bfc 	ldr.w	r3, [r4, #3068]	@ 0xbfc
 8008ba6:	441a      	add	r2, r3
                if (score > bestScore)
 8008ba8:	f8d4 3c00 	ldr.w	r3, [r4, #3072]	@ 0xc00
                score += newValue;
 8008bac:	f8c4 2bfc 	str.w	r2, [r4, #3068]	@ 0xbfc
                if (score > bestScore)
 8008bb0:	429a      	cmp	r2, r3
                bestScore = score;
 8008bb2:	bf88      	it	hi
 8008bb4:	f8c4 2c00 	strhi.w	r2, [r4, #3072]	@ 0xc00
                updateScoreText();
 8008bb8:	4620      	mov	r0, r4
 8008bba:	f7ff ff59 	bl	8008a70 <_ZN13Screen3x3View15updateScoreTextEv>
 8008bbe:	e7b0      	b.n	8008b22 <_ZN13Screen3x3View8moveLeftEv+0x7e>

08008bc0 <_ZN13Screen3x3View9moveRightEv>:
void Screen3x3View::moveRight()
{
 8008bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008bc4:	4604      	mov	r4, r0
 8008bc6:	b087      	sub	sp, #28
 8008bc8:	f600 3acc 	addw	sl, r0, #3020	@ 0xbcc
    for (int row = 0; row < 3; ++row)
 8008bcc:	2600      	movs	r6, #0
    {
        int merged[3] = {0};
 8008bce:	2300      	movs	r3, #0
 8008bd0:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8008bd4:	9305      	str	r3, [sp, #20]
 8008bd6:	46d1      	mov	r9, sl

        for (int col = 1; col >= 0; --col)
 8008bd8:	f04f 0801 	mov.w	r8, #1
        {
            if (tiles[row][col]->getValue() == 0) continue;
 8008bdc:	f859 0d04 	ldr.w	r0, [r9, #-4]!
 8008be0:	f002 fc8e 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008be4:	b1d0      	cbz	r0, 8008c1c <_ZN13Screen3x3View9moveRightEv+0x5c>
 8008be6:	46cb      	mov	fp, r9

            int currentCol = col;
 8008be8:	4645      	mov	r5, r8
            while (currentCol < 2 && tiles[row][currentCol + 1]->getValue() == 0)
 8008bea:	f8db 0004 	ldr.w	r0, [fp, #4]
 8008bee:	f8cd b004 	str.w	fp, [sp, #4]
 8008bf2:	f002 fc85 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008bf6:	4607      	mov	r7, r0
 8008bf8:	bb00      	cbnz	r0, 8008c3c <_ZN13Screen3x3View9moveRightEv+0x7c>
            {   
                //moveTileAnimated(row, currentCol, row, currentCol + 1); // them doan nay
                tiles[row][currentCol + 1]->setValue(tiles[row][currentCol]->getValue());
 8008bfa:	9901      	ldr	r1, [sp, #4]
 8008bfc:	f8db 3004 	ldr.w	r3, [fp, #4]
 8008c00:	6808      	ldr	r0, [r1, #0]
 8008c02:	9300      	str	r3, [sp, #0]
 8008c04:	f002 fc7c 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008c08:	4601      	mov	r1, r0
 8008c0a:	9800      	ldr	r0, [sp, #0]
 8008c0c:	f002 fc10 	bl	800b430 <_ZN7Tile3x38setValueEt>
                tiles[row][currentCol]->setValue(0);
 8008c10:	f85b 0b04 	ldr.w	r0, [fp], #4
 8008c14:	4639      	mov	r1, r7
 8008c16:	f002 fc0b 	bl	800b430 <_ZN7Tile3x38setValueEt>
            while (currentCol < 2 && tiles[row][currentCol + 1]->getValue() == 0)
 8008c1a:	b16d      	cbz	r5, 8008c38 <_ZN13Screen3x3View9moveRightEv+0x78>
        for (int col = 1; col >= 0; --col)
 8008c1c:	f1b8 0f00 	cmp.w	r8, #0
 8008c20:	d107      	bne.n	8008c32 <_ZN13Screen3x3View9moveRightEv+0x72>
    for (int row = 0; row < 3; ++row)
 8008c22:	3601      	adds	r6, #1
 8008c24:	2e03      	cmp	r6, #3
 8008c26:	f10a 0a0c 	add.w	sl, sl, #12
 8008c2a:	d1d0      	bne.n	8008bce <_ZN13Screen3x3View9moveRightEv+0xe>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 8008c2c:	b007      	add	sp, #28
 8008c2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008c32:	f04f 0800 	mov.w	r8, #0
 8008c36:	e7d1      	b.n	8008bdc <_ZN13Screen3x3View9moveRightEv+0x1c>
 8008c38:	2501      	movs	r5, #1
 8008c3a:	e7d6      	b.n	8008bea <_ZN13Screen3x3View9moveRightEv+0x2a>
 8008c3c:	eb06 0146 	add.w	r1, r6, r6, lsl #1
                tiles[row][currentCol + 1]->getValue() == tiles[row][currentCol]->getValue() &&
 8008c40:	1c6f      	adds	r7, r5, #1
 8008c42:	187b      	adds	r3, r7, r1
 8008c44:	eb04 0b83 	add.w	fp, r4, r3, lsl #2
 8008c48:	9101      	str	r1, [sp, #4]
 8008c4a:	f8db 0bc4 	ldr.w	r0, [fp, #3012]	@ 0xbc4
 8008c4e:	f002 fc57 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008c52:	9901      	ldr	r1, [sp, #4]
 8008c54:	9000      	str	r0, [sp, #0]
 8008c56:	440d      	add	r5, r1
 8008c58:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8008c5c:	f8d5 0bc4 	ldr.w	r0, [r5, #3012]	@ 0xbc4
 8008c60:	f002 fc4e 	bl	800b500 <_ZNK7Tile3x38getValueEv>
            if (currentCol < 2 &&
 8008c64:	9b00      	ldr	r3, [sp, #0]
 8008c66:	4283      	cmp	r3, r0
 8008c68:	d1d8      	bne.n	8008c1c <_ZN13Screen3x3View9moveRightEv+0x5c>
                !merged[currentCol + 1])
 8008c6a:	ab06      	add	r3, sp, #24
 8008c6c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
                tiles[row][currentCol + 1]->getValue() == tiles[row][currentCol]->getValue() &&
 8008c70:	f857 2c0c 	ldr.w	r2, [r7, #-12]
 8008c74:	2a00      	cmp	r2, #0
 8008c76:	d1d1      	bne.n	8008c1c <_ZN13Screen3x3View9moveRightEv+0x5c>
                uint16_t newValue = tiles[row][currentCol + 1]->getValue() * 2;
 8008c78:	f8db 0bc4 	ldr.w	r0, [fp, #3012]	@ 0xbc4
 8008c7c:	9201      	str	r2, [sp, #4]
 8008c7e:	f002 fc3f 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008c82:	0040      	lsls	r0, r0, #1
 8008c84:	b283      	uxth	r3, r0
                tiles[row][currentCol + 1]->setValue(
 8008c86:	4619      	mov	r1, r3
 8008c88:	f8db 0bc4 	ldr.w	r0, [fp, #3012]	@ 0xbc4
                uint16_t newValue = tiles[row][currentCol + 1]->getValue() * 2;
 8008c8c:	9300      	str	r3, [sp, #0]
                tiles[row][currentCol + 1]->setValue(
 8008c8e:	f002 fbcf 	bl	800b430 <_ZN7Tile3x38setValueEt>
                tiles[row][currentCol]->setValue(0);
 8008c92:	9a01      	ldr	r2, [sp, #4]
 8008c94:	f8d5 0bc4 	ldr.w	r0, [r5, #3012]	@ 0xbc4
 8008c98:	4611      	mov	r1, r2
 8008c9a:	f002 fbc9 	bl	800b430 <_ZN7Tile3x38setValueEt>
                merged[currentCol + 1] = 1;
 8008c9e:	2301      	movs	r3, #1
                score += newValue;
 8008ca0:	9a00      	ldr	r2, [sp, #0]
                merged[currentCol + 1] = 1;
 8008ca2:	f847 3c0c 	str.w	r3, [r7, #-12]
                score += newValue;
 8008ca6:	f8d4 3bfc 	ldr.w	r3, [r4, #3068]	@ 0xbfc
 8008caa:	4413      	add	r3, r2
                if (score > bestScore)
 8008cac:	f8d4 2c00 	ldr.w	r2, [r4, #3072]	@ 0xc00
                score += newValue;
 8008cb0:	f8c4 3bfc 	str.w	r3, [r4, #3068]	@ 0xbfc
                if (score > bestScore)
 8008cb4:	4293      	cmp	r3, r2
                bestScore = score;
 8008cb6:	bf88      	it	hi
 8008cb8:	f8c4 3c00 	strhi.w	r3, [r4, #3072]	@ 0xc00
                updateScoreText();
 8008cbc:	4620      	mov	r0, r4
 8008cbe:	f7ff fed7 	bl	8008a70 <_ZN13Screen3x3View15updateScoreTextEv>
 8008cc2:	e7ab      	b.n	8008c1c <_ZN13Screen3x3View9moveRightEv+0x5c>

08008cc4 <_ZN13Screen3x3View6moveUpEv>:
void Screen3x3View::moveUp()
{
 8008cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    for (int col = 0; col < 3; ++col)
 8008cc8:	2600      	movs	r6, #0
{
 8008cca:	b087      	sub	sp, #28
 8008ccc:	4605      	mov	r5, r0
    {
        int merged[3] = {0};
 8008cce:	46b1      	mov	r9, r6
 8008cd0:	e9cd 9903 	strd	r9, r9, [sp, #12]
 8008cd4:	f8cd 9014 	str.w	r9, [sp, #20]

        for (int row = 1; row < 3; ++row)
 8008cd8:	eb05 0786 	add.w	r7, r5, r6, lsl #2
 8008cdc:	f04f 0801 	mov.w	r8, #1
        {
            if (tiles[row][col]->getValue() == 0) continue;
 8008ce0:	f8d7 0bd0 	ldr.w	r0, [r7, #3024]	@ 0xbd0
 8008ce4:	f002 fc0c 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008ce8:	b330      	cbz	r0, 8008d38 <_ZN13Screen3x3View6moveUpEv+0x74>

            int currentRow = row;
 8008cea:	46c3      	mov	fp, r8
 8008cec:	465c      	mov	r4, fp
            while (currentRow > 0 && tiles[currentRow - 1][col]->getValue() == 0)
 8008cee:	f10b 3bff 	add.w	fp, fp, #4294967295
 8008cf2:	eb0b 0a4b 	add.w	sl, fp, fp, lsl #1
 8008cf6:	44b2      	add	sl, r6
 8008cf8:	eb05 0a8a 	add.w	sl, r5, sl, lsl #2
 8008cfc:	f8da 0bc4 	ldr.w	r0, [sl, #3012]	@ 0xbc4
 8008d00:	f002 fbfe 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008d04:	0062      	lsls	r2, r4, #1
 8008d06:	9000      	str	r0, [sp, #0]
 8008d08:	bb20      	cbnz	r0, 8008d54 <_ZN13Screen3x3View6moveUpEv+0x90>
            {   
                //moveTileAnimated(currentRow, col, currentRow - 1, col);// them dong nay
                tiles[currentRow - 1][col]->setValue(tiles[currentRow][col]->getValue());
 8008d0a:	4414      	add	r4, r2
 8008d0c:	4434      	add	r4, r6
 8008d0e:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 8008d12:	f8da abc4 	ldr.w	sl, [sl, #3012]	@ 0xbc4
 8008d16:	f8d4 0bc4 	ldr.w	r0, [r4, #3012]	@ 0xbc4
 8008d1a:	f002 fbf1 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008d1e:	4601      	mov	r1, r0
 8008d20:	4650      	mov	r0, sl
 8008d22:	f002 fb85 	bl	800b430 <_ZN7Tile3x38setValueEt>
                tiles[currentRow][col]->setValue(0);
 8008d26:	9b00      	ldr	r3, [sp, #0]
 8008d28:	f8d4 0bc4 	ldr.w	r0, [r4, #3012]	@ 0xbc4
 8008d2c:	4619      	mov	r1, r3
 8008d2e:	f002 fb7f 	bl	800b430 <_ZN7Tile3x38setValueEt>
            while (currentRow > 0 && tiles[currentRow - 1][col]->getValue() == 0)
 8008d32:	f1bb 0f00 	cmp.w	fp, #0
 8008d36:	d1d9      	bne.n	8008cec <_ZN13Screen3x3View6moveUpEv+0x28>
        for (int row = 1; row < 3; ++row)
 8008d38:	f1b8 0f01 	cmp.w	r8, #1
 8008d3c:	f107 070c 	add.w	r7, r7, #12
 8008d40:	d005      	beq.n	8008d4e <_ZN13Screen3x3View6moveUpEv+0x8a>
    for (int col = 0; col < 3; ++col)
 8008d42:	3601      	adds	r6, #1
 8008d44:	2e03      	cmp	r6, #3
 8008d46:	d1c3      	bne.n	8008cd0 <_ZN13Screen3x3View6moveUpEv+0xc>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 8008d48:	b007      	add	sp, #28
 8008d4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008d4e:	f04f 0802 	mov.w	r8, #2
 8008d52:	e7c5      	b.n	8008ce0 <_ZN13Screen3x3View6moveUpEv+0x1c>
                tiles[currentRow - 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 8008d54:	f104 3bff 	add.w	fp, r4, #4294967295
 8008d58:	eb0b 0a4b 	add.w	sl, fp, fp, lsl #1
 8008d5c:	44b2      	add	sl, r6
 8008d5e:	eb05 0a8a 	add.w	sl, r5, sl, lsl #2
 8008d62:	9201      	str	r2, [sp, #4]
 8008d64:	f8da 0bc4 	ldr.w	r0, [sl, #3012]	@ 0xbc4
 8008d68:	f002 fbca 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008d6c:	9a01      	ldr	r2, [sp, #4]
 8008d6e:	9000      	str	r0, [sp, #0]
 8008d70:	4414      	add	r4, r2
 8008d72:	4434      	add	r4, r6
 8008d74:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 8008d78:	f8d4 0bc4 	ldr.w	r0, [r4, #3012]	@ 0xbc4
 8008d7c:	f002 fbc0 	bl	800b500 <_ZNK7Tile3x38getValueEv>
            if (currentRow > 0 &&
 8008d80:	9b00      	ldr	r3, [sp, #0]
 8008d82:	4283      	cmp	r3, r0
 8008d84:	d1d8      	bne.n	8008d38 <_ZN13Screen3x3View6moveUpEv+0x74>
                !merged[currentRow - 1])
 8008d86:	ab06      	add	r3, sp, #24
 8008d88:	eb03 038b 	add.w	r3, r3, fp, lsl #2
                tiles[currentRow - 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 8008d8c:	f853 2c0c 	ldr.w	r2, [r3, #-12]
 8008d90:	2a00      	cmp	r2, #0
 8008d92:	d1d1      	bne.n	8008d38 <_ZN13Screen3x3View6moveUpEv+0x74>
                uint16_t newValue = tiles[currentRow - 1][col]->getValue() * 2;
 8008d94:	f8da 0bc4 	ldr.w	r0, [sl, #3012]	@ 0xbc4
 8008d98:	e9cd 3200 	strd	r3, r2, [sp]
 8008d9c:	f002 fbb0 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008da0:	0041      	lsls	r1, r0, #1
 8008da2:	fa1f fb81 	uxth.w	fp, r1
                tiles[currentRow - 1][col]->setValue(
 8008da6:	f8da 0bc4 	ldr.w	r0, [sl, #3012]	@ 0xbc4
 8008daa:	4659      	mov	r1, fp
 8008dac:	f002 fb40 	bl	800b430 <_ZN7Tile3x38setValueEt>
                tiles[currentRow][col]->setValue(0);
 8008db0:	9a01      	ldr	r2, [sp, #4]
 8008db2:	f8d4 0bc4 	ldr.w	r0, [r4, #3012]	@ 0xbc4
 8008db6:	4611      	mov	r1, r2
 8008db8:	f002 fb3a 	bl	800b430 <_ZN7Tile3x38setValueEt>
                merged[currentRow - 1] = 1;
 8008dbc:	9b00      	ldr	r3, [sp, #0]
 8008dbe:	2201      	movs	r2, #1
 8008dc0:	f843 2c0c 	str.w	r2, [r3, #-12]
                score += newValue;
 8008dc4:	f8d5 3bfc 	ldr.w	r3, [r5, #3068]	@ 0xbfc
                if (score > bestScore)
 8008dc8:	f8d5 2c00 	ldr.w	r2, [r5, #3072]	@ 0xc00
                score += newValue;
 8008dcc:	445b      	add	r3, fp
                if (score > bestScore)
 8008dce:	4293      	cmp	r3, r2
                score += newValue;
 8008dd0:	f8c5 3bfc 	str.w	r3, [r5, #3068]	@ 0xbfc
                bestScore = score;
 8008dd4:	bf88      	it	hi
 8008dd6:	f8c5 3c00 	strhi.w	r3, [r5, #3072]	@ 0xc00
                updateScoreText();
 8008dda:	4628      	mov	r0, r5
 8008ddc:	f7ff fe48 	bl	8008a70 <_ZN13Screen3x3View15updateScoreTextEv>
 8008de0:	e7aa      	b.n	8008d38 <_ZN13Screen3x3View6moveUpEv+0x74>

08008de2 <_ZN13Screen3x3View8moveDownEv>:
void Screen3x3View::moveDown()
{
 8008de2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    for (int col = 0; col < 3; ++col)
 8008de6:	2600      	movs	r6, #0
{
 8008de8:	b087      	sub	sp, #28
 8008dea:	4605      	mov	r5, r0
    {
        int merged[3] = {0};
 8008dec:	46b1      	mov	r9, r6
 8008dee:	e9cd 9903 	strd	r9, r9, [sp, #12]
 8008df2:	f8cd 9014 	str.w	r9, [sp, #20]

        for (int row = 1; row >= 0; --row)
 8008df6:	eb05 0786 	add.w	r7, r5, r6, lsl #2
 8008dfa:	f04f 0801 	mov.w	r8, #1
        {
            if (tiles[row][col]->getValue() == 0) continue;
 8008dfe:	f8d7 0bd0 	ldr.w	r0, [r7, #3024]	@ 0xbd0
 8008e02:	f002 fb7d 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008e06:	b1d8      	cbz	r0, 8008e40 <_ZN13Screen3x3View8moveDownEv+0x5e>

            int currentRow = row;
            while (currentRow < 2 && tiles[currentRow + 1][col]->getValue() == 0)
 8008e08:	f107 0a0c 	add.w	sl, r7, #12
            int currentRow = row;
 8008e0c:	4644      	mov	r4, r8
            while (currentRow < 2 && tiles[currentRow + 1][col]->getValue() == 0)
 8008e0e:	f8da 0bd0 	ldr.w	r0, [sl, #3024]	@ 0xbd0
 8008e12:	f002 fb75 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008e16:	4683      	mov	fp, r0
 8008e18:	bb08      	cbnz	r0, 8008e5e <_ZN13Screen3x3View8moveDownEv+0x7c>
            {   
                //moveTileAnimated(currentRow, col, currentRow + 1, col);//them dong nay
                tiles[currentRow + 1][col]->setValue(tiles[currentRow][col]->getValue());
 8008e1a:	f8da 3bd0 	ldr.w	r3, [sl, #3024]	@ 0xbd0
 8008e1e:	f8da 0bc4 	ldr.w	r0, [sl, #3012]	@ 0xbc4
 8008e22:	9300      	str	r3, [sp, #0]
 8008e24:	f002 fb6c 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008e28:	4601      	mov	r1, r0
 8008e2a:	9800      	ldr	r0, [sp, #0]
 8008e2c:	f002 fb00 	bl	800b430 <_ZN7Tile3x38setValueEt>
                tiles[currentRow][col]->setValue(0);
 8008e30:	f8da 0bc4 	ldr.w	r0, [sl, #3012]	@ 0xbc4
 8008e34:	4659      	mov	r1, fp
 8008e36:	f002 fafb 	bl	800b430 <_ZN7Tile3x38setValueEt>
            while (currentRow < 2 && tiles[currentRow + 1][col]->getValue() == 0)
 8008e3a:	f10a 0a0c 	add.w	sl, sl, #12
 8008e3e:	b164      	cbz	r4, 8008e5a <_ZN13Screen3x3View8moveDownEv+0x78>
        for (int row = 1; row >= 0; --row)
 8008e40:	3f0c      	subs	r7, #12
 8008e42:	f1b8 0f00 	cmp.w	r8, #0
 8008e46:	d105      	bne.n	8008e54 <_ZN13Screen3x3View8moveDownEv+0x72>
    for (int col = 0; col < 3; ++col)
 8008e48:	3601      	adds	r6, #1
 8008e4a:	2e03      	cmp	r6, #3
 8008e4c:	d1cf      	bne.n	8008dee <_ZN13Screen3x3View8moveDownEv+0xc>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 8008e4e:	b007      	add	sp, #28
 8008e50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008e54:	f04f 0800 	mov.w	r8, #0
 8008e58:	e7d1      	b.n	8008dfe <_ZN13Screen3x3View8moveDownEv+0x1c>
 8008e5a:	2401      	movs	r4, #1
 8008e5c:	e7d7      	b.n	8008e0e <_ZN13Screen3x3View8moveDownEv+0x2c>
                tiles[currentRow + 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 8008e5e:	f104 0a01 	add.w	sl, r4, #1
 8008e62:	eb0a 0b4a 	add.w	fp, sl, sl, lsl #1
 8008e66:	44b3      	add	fp, r6
 8008e68:	eb05 0b8b 	add.w	fp, r5, fp, lsl #2
 8008e6c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8008e70:	f8db 0bc4 	ldr.w	r0, [fp, #3012]	@ 0xbc4
 8008e74:	f002 fb44 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008e78:	4434      	add	r4, r6
 8008e7a:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 8008e7e:	9000      	str	r0, [sp, #0]
 8008e80:	f8d4 0bc4 	ldr.w	r0, [r4, #3012]	@ 0xbc4
 8008e84:	f002 fb3c 	bl	800b500 <_ZNK7Tile3x38getValueEv>
            if (currentRow < 2 &&
 8008e88:	9b00      	ldr	r3, [sp, #0]
 8008e8a:	4283      	cmp	r3, r0
 8008e8c:	d1d8      	bne.n	8008e40 <_ZN13Screen3x3View8moveDownEv+0x5e>
                !merged[currentRow + 1])
 8008e8e:	ab06      	add	r3, sp, #24
 8008e90:	eb03 038a 	add.w	r3, r3, sl, lsl #2
                tiles[currentRow + 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 8008e94:	f853 2c0c 	ldr.w	r2, [r3, #-12]
 8008e98:	2a00      	cmp	r2, #0
 8008e9a:	d1d1      	bne.n	8008e40 <_ZN13Screen3x3View8moveDownEv+0x5e>
                uint16_t newValue = tiles[currentRow + 1][col]->getValue() * 2;
 8008e9c:	f8db 0bc4 	ldr.w	r0, [fp, #3012]	@ 0xbc4
 8008ea0:	e9cd 3200 	strd	r3, r2, [sp]
 8008ea4:	f002 fb2c 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008ea8:	0041      	lsls	r1, r0, #1
 8008eaa:	fa1f fa81 	uxth.w	sl, r1
                tiles[currentRow + 1][col]->setValue(
 8008eae:	f8db 0bc4 	ldr.w	r0, [fp, #3012]	@ 0xbc4
 8008eb2:	4651      	mov	r1, sl
 8008eb4:	f002 fabc 	bl	800b430 <_ZN7Tile3x38setValueEt>
                tiles[currentRow][col]->setValue(0);
 8008eb8:	9a01      	ldr	r2, [sp, #4]
 8008eba:	f8d4 0bc4 	ldr.w	r0, [r4, #3012]	@ 0xbc4
 8008ebe:	4611      	mov	r1, r2
 8008ec0:	f002 fab6 	bl	800b430 <_ZN7Tile3x38setValueEt>
                merged[currentRow + 1] = 1;
 8008ec4:	9b00      	ldr	r3, [sp, #0]
 8008ec6:	2201      	movs	r2, #1
 8008ec8:	f843 2c0c 	str.w	r2, [r3, #-12]
                score += newValue;
 8008ecc:	f8d5 3bfc 	ldr.w	r3, [r5, #3068]	@ 0xbfc
                if (score > bestScore)
 8008ed0:	f8d5 2c00 	ldr.w	r2, [r5, #3072]	@ 0xc00
                score += newValue;
 8008ed4:	4453      	add	r3, sl
                if (score > bestScore)
 8008ed6:	4293      	cmp	r3, r2
                score += newValue;
 8008ed8:	f8c5 3bfc 	str.w	r3, [r5, #3068]	@ 0xbfc
                bestScore = score;
 8008edc:	bf88      	it	hi
 8008ede:	f8c5 3c00 	strhi.w	r3, [r5, #3072]	@ 0xc00
                updateScoreText();
 8008ee2:	4628      	mov	r0, r5
 8008ee4:	f7ff fdc4 	bl	8008a70 <_ZN13Screen3x3View15updateScoreTextEv>
 8008ee8:	e7aa      	b.n	8008e40 <_ZN13Screen3x3View8moveDownEv+0x5e>

08008eea <_ZN13Screen3x3View24navigateToGameOverScreenEv>:
        navigateToGameOverScreen();
    }
    }
}
void Screen3x3View::navigateToGameOverScreen()
{
 8008eea:	b508      	push	{r3, lr}
   static_cast<FrontendApplication*>(Application::getInstance())->gotoGameOverScreenScreenSlideTransitionEast();
 8008eec:	f00d fd56 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
}
 8008ef0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   static_cast<FrontendApplication*>(Application::getInstance())->gotoGameOverScreenScreenSlideTransitionEast();
 8008ef4:	f7fa b940 	b.w	8003178 <_ZN23FrontendApplicationBase43gotoGameOverScreenScreenSlideTransitionEastEv>

08008ef8 <_ZN13Screen3x3View10isGameOverEv>:
bool Screen3x3View::isGameOver() // kiem tra xem con co the gop cac o lai voi nhau khong
{
 8008ef8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008efc:	4604      	mov	r4, r0
 8008efe:	f500 653c 	add.w	r5, r0, #3008	@ 0xbc0
 8008f02:	f600 38e4 	addw	r8, r0, #3044	@ 0xbe4
 8008f06:	462f      	mov	r7, r5
    // 1. Kiểm tra còn ô trống không
    for (int r = 0; r < 3; ++r)
    {
        for (int c = 0; c < 3; ++c)
 8008f08:	2600      	movs	r6, #0
        {
            if (tiles[r][c]->getValue() == 0)
 8008f0a:	f857 0f04 	ldr.w	r0, [r7, #4]!
 8008f0e:	f002 faf7 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008f12:	b310      	cbz	r0, 8008f5a <_ZN13Screen3x3View10isGameOverEv+0x62>
        for (int c = 0; c < 3; ++c)
 8008f14:	3601      	adds	r6, #1
 8008f16:	2e03      	cmp	r6, #3
 8008f18:	d1f7      	bne.n	8008f0a <_ZN13Screen3x3View10isGameOverEv+0x12>
    for (int r = 0; r < 3; ++r)
 8008f1a:	350c      	adds	r5, #12
 8008f1c:	4545      	cmp	r5, r8
 8008f1e:	d1f2      	bne.n	8008f06 <_ZN13Screen3x3View10isGameOverEv+0xe>
 8008f20:	f604 34c4 	addw	r4, r4, #3012	@ 0xbc4
                return false; // còn chỗ để spawn => chưa thua
        }
    }

    // 2. Kiểm tra còn ô nào có thể gộp không
    for (int r = 0; r < 3; ++r)
 8008f24:	2700      	movs	r7, #0
        for (int c = 0; c < 3; ++c)
 8008f26:	4626      	mov	r6, r4
    {
        for (int c = 0; c < 3; ++c)
 8008f28:	2500      	movs	r5, #0
        {
            int current = tiles[r][c]->getValue();
 8008f2a:	f856 0b04 	ldr.w	r0, [r6], #4
 8008f2e:	f002 fae7 	bl	800b500 <_ZNK7Tile3x38getValueEv>

            // Kiểm tra phải
            if (c < 2 && tiles[r][c + 1]->getValue() == current)
 8008f32:	2d02      	cmp	r5, #2
            int current = tiles[r][c]->getValue();
 8008f34:	4680      	mov	r8, r0
            if (c < 2 && tiles[r][c + 1]->getValue() == current)
 8008f36:	d10b      	bne.n	8008f50 <_ZN13Screen3x3View10isGameOverEv+0x58>
                return false;

            // Kiểm tra dưới
            if (r < 2 && tiles[r + 1][c]->getValue() == current)
 8008f38:	2f02      	cmp	r7, #2
 8008f3a:	d111      	bne.n	8008f60 <_ZN13Screen3x3View10isGameOverEv+0x68>
        for (int c = 0; c < 3; ++c)
 8008f3c:	3501      	adds	r5, #1
 8008f3e:	2d03      	cmp	r5, #3
 8008f40:	d1f3      	bne.n	8008f2a <_ZN13Screen3x3View10isGameOverEv+0x32>
    for (int r = 0; r < 3; ++r)
 8008f42:	3701      	adds	r7, #1
 8008f44:	2f03      	cmp	r7, #3
 8008f46:	f104 040c 	add.w	r4, r4, #12
 8008f4a:	d1ec      	bne.n	8008f26 <_ZN13Screen3x3View10isGameOverEv+0x2e>
                return false;
        }
    }

    // Không còn nước đi hợp lệ
    return true;
 8008f4c:	2001      	movs	r0, #1
 8008f4e:	e005      	b.n	8008f5c <_ZN13Screen3x3View10isGameOverEv+0x64>
            if (c < 2 && tiles[r][c + 1]->getValue() == current)
 8008f50:	6830      	ldr	r0, [r6, #0]
 8008f52:	f002 fad5 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008f56:	4580      	cmp	r8, r0
 8008f58:	d1ee      	bne.n	8008f38 <_ZN13Screen3x3View10isGameOverEv+0x40>
                return false; // còn chỗ để spawn => chưa thua
 8008f5a:	2000      	movs	r0, #0
}
 8008f5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            if (r < 2 && tiles[r + 1][c]->getValue() == current)
 8008f60:	68b0      	ldr	r0, [r6, #8]
 8008f62:	f002 facd 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008f66:	4580      	cmp	r8, r0
 8008f68:	d1e8      	bne.n	8008f3c <_ZN13Screen3x3View10isGameOverEv+0x44>
 8008f6a:	e7f6      	b.n	8008f5a <_ZN13Screen3x3View10isGameOverEv+0x62>

08008f6c <_ZN13Screen3x3View15spawnRandomTileEv>:
{
 8008f6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    for (int r = 0; r < 3; r++) {
 8008f70:	2600      	movs	r6, #0
{
 8008f72:	b093      	sub	sp, #76	@ 0x4c
 8008f74:	4605      	mov	r5, r0
 8008f76:	f500 683c 	add.w	r8, r0, #3008	@ 0xbc0
    int emptyCount = 0;
 8008f7a:	4634      	mov	r4, r6
{
 8008f7c:	46c1      	mov	r9, r8
        for (int c = 0; c < 3; c++) {
 8008f7e:	2700      	movs	r7, #0
            if (tiles[r][c]->getValue() == 0) {
 8008f80:	f859 0f04 	ldr.w	r0, [r9, #4]!
 8008f84:	f002 fabc 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8008f88:	b928      	cbnz	r0, 8008f96 <_ZN13Screen3x3View15spawnRandomTileEv+0x2a>
                empties[emptyCount++] = {r, c};
 8008f8a:	ab12      	add	r3, sp, #72	@ 0x48
 8008f8c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8008f90:	e943 6712 	strd	r6, r7, [r3, #-72]	@ 0x48
 8008f94:	3401      	adds	r4, #1
        for (int c = 0; c < 3; c++) {
 8008f96:	3701      	adds	r7, #1
 8008f98:	2f03      	cmp	r7, #3
 8008f9a:	d1f1      	bne.n	8008f80 <_ZN13Screen3x3View15spawnRandomTileEv+0x14>
    for (int r = 0; r < 3; r++) {
 8008f9c:	3601      	adds	r6, #1
 8008f9e:	2e03      	cmp	r6, #3
 8008fa0:	f108 080c 	add.w	r8, r8, #12
 8008fa4:	d1ea      	bne.n	8008f7c <_ZN13Screen3x3View15spawnRandomTileEv+0x10>
    if (emptyCount > 0) {
 8008fa6:	2c00      	cmp	r4, #0
        int idx = myRand() % emptyCount;
 8008fa8:	4628      	mov	r0, r5
    if (emptyCount > 0) {
 8008faa:	dd27      	ble.n	8008ffc <_ZN13Screen3x3View15spawnRandomTileEv+0x90>
        int idx = myRand() % emptyCount;
 8008fac:	f7ff fd1e 	bl	80089ec <_ZN13Screen3x3View6myRandEv>
 8008fb0:	fbb0 f3f4 	udiv	r3, r0, r4
 8008fb4:	fb03 0014 	mls	r0, r3, r4, r0
        int rr = empties[idx].row;
 8008fb8:	ab12      	add	r3, sp, #72	@ 0x48
 8008fba:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
        int cc = empties[idx].col;
 8008fbe:	e950 4612 	ldrd	r4, r6, [r0, #-72]	@ 0x48
        uint16_t newValue = (myRand() % 10 == 0) ? 4 : 2;
 8008fc2:	4628      	mov	r0, r5
 8008fc4:	f7ff fd12 	bl	80089ec <_ZN13Screen3x3View6myRandEv>
 8008fc8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8008fcc:	230a      	movs	r3, #10
 8008fce:	4434      	add	r4, r6
 8008fd0:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 8008fd4:	fbb0 f2f3 	udiv	r2, r0, r3
 8008fd8:	fb02 0013 	mls	r0, r2, r3, r0
 8008fdc:	2800      	cmp	r0, #0
        tiles[rr][cc]->setValue(newValue);
 8008fde:	bf18      	it	ne
 8008fe0:	2102      	movne	r1, #2
 8008fe2:	f8d4 0bc4 	ldr.w	r0, [r4, #3012]	@ 0xbc4
 8008fe6:	bf08      	it	eq
 8008fe8:	2104      	moveq	r1, #4
 8008fea:	f002 fa21 	bl	800b430 <_ZN7Tile3x38setValueEt>
        tiles[rr][cc]->animateSpawn();//animation spawn
 8008fee:	f8d4 0bc4 	ldr.w	r0, [r4, #3012]	@ 0xbc4
}
 8008ff2:	b013      	add	sp, #76	@ 0x4c
 8008ff4:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        tiles[rr][cc]->animateSpawn();//animation spawn
 8008ff8:	f002 ba8d 	b.w	800b516 <_ZN7Tile3x312animateSpawnEv>
        if (isGameOver()) {
 8008ffc:	f7ff ff7c 	bl	8008ef8 <_ZN13Screen3x3View10isGameOverEv>
 8009000:	b128      	cbz	r0, 800900e <_ZN13Screen3x3View15spawnRandomTileEv+0xa2>
        navigateToGameOverScreen();
 8009002:	4628      	mov	r0, r5
}
 8009004:	b013      	add	sp, #76	@ 0x4c
 8009006:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        navigateToGameOverScreen();
 800900a:	f7ff bf6e 	b.w	8008eea <_ZN13Screen3x3View24navigateToGameOverScreenEv>
}
 800900e:	b013      	add	sp, #76	@ 0x4c
 8009010:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08009014 <_ZN13Screen3x3View15handleTickEventEv>:
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
                return true;
    return false;
}
void Screen3x3View::handleTickEvent()
{
 8009014:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009018:	4604      	mov	r4, r0
    static uint32_t lastPressTime = 0;
    const uint32_t debounceDelay = 200; // Thời gian chống dội (ms)
    uint32_t currentTime = HAL_GetTick();
 800901a:	f003 f82b 	bl	800c074 <HAL_GetTick>

    uint8_t currentState = 0;
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 800901e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    uint32_t currentTime = HAL_GetTick();
 8009022:	4605      	mov	r5, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 8009024:	4841      	ldr	r0, [pc, #260]	@ (800912c <_ZN13Screen3x3View15handleTickEventEv+0x118>)
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK

    static uint8_t lastState = 0;

    if (currentTime - lastPressTime > debounceDelay)
 8009026:	4e42      	ldr	r6, [pc, #264]	@ (8009130 <_ZN13Screen3x3View15handleTickEventEv+0x11c>)
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 8009028:	f003 fa7e 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800902c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 8009030:	4681      	mov	r9, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 8009032:	483e      	ldr	r0, [pc, #248]	@ (800912c <_ZN13Screen3x3View15handleTickEventEv+0x118>)
 8009034:	f003 fa78 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 8009038:	2104      	movs	r1, #4
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800903a:	4607      	mov	r7, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 800903c:	483d      	ldr	r0, [pc, #244]	@ (8009134 <_ZN13Screen3x3View15handleTickEventEv+0x120>)
 800903e:	f003 fa73 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 8009042:	2140      	movs	r1, #64	@ 0x40
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 8009044:	4680      	mov	r8, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 8009046:	483b      	ldr	r0, [pc, #236]	@ (8009134 <_ZN13Screen3x3View15handleTickEventEv+0x120>)
 8009048:	f003 fa6e 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800904c:	2101      	movs	r1, #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 800904e:	4682      	mov	sl, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8009050:	4838      	ldr	r0, [pc, #224]	@ (8009134 <_ZN13Screen3x3View15handleTickEventEv+0x120>)
 8009052:	f003 fa69 	bl	800c528 <HAL_GPIO_ReadPin>
    if (currentTime - lastPressTime > debounceDelay)
 8009056:	6832      	ldr	r2, [r6, #0]
 8009058:	1aaa      	subs	r2, r5, r2
 800905a:	2ac8      	cmp	r2, #200	@ 0xc8
 800905c:	d964      	bls.n	8009128 <_ZN13Screen3x3View15handleTickEventEv+0x114>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 800905e:	f10a 32ff 	add.w	r2, sl, #4294967295
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8009062:	1e41      	subs	r1, r0, #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 8009064:	f1d2 0a00 	rsbs	sl, r2, #0
 8009068:	eb4a 0a02 	adc.w	sl, sl, r2
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800906c:	424b      	negs	r3, r1
 800906e:	414b      	adcs	r3, r1
 8009070:	011b      	lsls	r3, r3, #4
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 8009072:	f108 30ff 	add.w	r0, r8, #4294967295
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8009076:	ea43 03ca 	orr.w	r3, r3, sl, lsl #3
 800907a:	f1b9 0f01 	cmp.w	r9, #1
 800907e:	bf08      	it	eq
 8009080:	f043 0301 	orreq.w	r3, r3, #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 8009084:	f1d0 0800 	rsbs	r8, r0, #0
 8009088:	eb48 0800 	adc.w	r8, r8, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800908c:	f107 3cff 	add.w	ip, r7, #4294967295
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8009090:	ea43 0388 	orr.w	r3, r3, r8, lsl #2
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 8009094:	f1dc 0700 	rsbs	r7, ip, #0
 8009098:	eb47 070c 	adc.w	r7, r7, ip
    {
        if ((currentState & 1) && !(lastState & 1)) // PB10: UP
 800909c:	f013 0f01 	tst.w	r3, #1
 80090a0:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 8009138 <_ZN13Screen3x3View15handleTickEventEv+0x124>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 80090a4:	ea43 0747 	orr.w	r7, r3, r7, lsl #1
        if ((currentState & 1) && !(lastState & 1)) // PB10: UP
 80090a8:	d015      	beq.n	80090d6 <_ZN13Screen3x3View15handleTickEventEv+0xc2>
 80090aa:	f898 3000 	ldrb.w	r3, [r8]
 80090ae:	07db      	lsls	r3, r3, #31
 80090b0:	d411      	bmi.n	80090d6 <_ZN13Screen3x3View15handleTickEventEv+0xc2>
        {
            moveUp();
 80090b2:	4620      	mov	r0, r4
 80090b4:	f7ff fe06 	bl	8008cc4 <_ZN13Screen3x3View6moveUpEv>
            lastPressTime = currentTime;
        }
        else if ((currentState & 8) && !(lastState & 8)) // PA6: RIGHT
        {
            moveRight();
            spawnRandomTile();
 80090b8:	4620      	mov	r0, r4
 80090ba:	f7ff ff57 	bl	8008f6c <_ZN13Screen3x3View15spawnRandomTileEv>
        }
        else if ((currentState & 16) && !(lastState & 16)) // PA0: BACK
        {
            // Về màn hình Chosing_mode
        	application().gotoSelectedGameDesignScreenCoverTransitionEast();
            lastPressTime = currentTime;
 80090be:	6035      	str	r5, [r6, #0]
        }

        lastState = currentState;

        if (isGameOver())
 80090c0:	4620      	mov	r0, r4
        lastState = currentState;
 80090c2:	f888 7000 	strb.w	r7, [r8]
        if (isGameOver())
 80090c6:	f7ff ff17 	bl	8008ef8 <_ZN13Screen3x3View10isGameOverEv>
 80090ca:	b368      	cbz	r0, 8009128 <_ZN13Screen3x3View15handleTickEventEv+0x114>
        {
            navigateToGameOverScreen();
 80090cc:	4620      	mov	r0, r4
        }
    }
}
 80090ce:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
            navigateToGameOverScreen();
 80090d2:	f7ff bf0a 	b.w	8008eea <_ZN13Screen3x3View24navigateToGameOverScreenEv>
        else if ((currentState & 2) && !(lastState & 2)) // PB12: DOWN
 80090d6:	07b8      	lsls	r0, r7, #30
 80090d8:	d507      	bpl.n	80090ea <_ZN13Screen3x3View15handleTickEventEv+0xd6>
 80090da:	f898 3000 	ldrb.w	r3, [r8]
 80090de:	0799      	lsls	r1, r3, #30
 80090e0:	d403      	bmi.n	80090ea <_ZN13Screen3x3View15handleTickEventEv+0xd6>
            moveDown();
 80090e2:	4620      	mov	r0, r4
 80090e4:	f7ff fe7d 	bl	8008de2 <_ZN13Screen3x3View8moveDownEv>
            spawnRandomTile();
 80090e8:	e7e6      	b.n	80090b8 <_ZN13Screen3x3View15handleTickEventEv+0xa4>
        else if ((currentState & 4) && !(lastState & 4)) // PA2: LEFT
 80090ea:	077a      	lsls	r2, r7, #29
 80090ec:	d507      	bpl.n	80090fe <_ZN13Screen3x3View15handleTickEventEv+0xea>
 80090ee:	f898 3000 	ldrb.w	r3, [r8]
 80090f2:	075b      	lsls	r3, r3, #29
 80090f4:	d403      	bmi.n	80090fe <_ZN13Screen3x3View15handleTickEventEv+0xea>
            moveLeft();
 80090f6:	4620      	mov	r0, r4
 80090f8:	f7ff fcd4 	bl	8008aa4 <_ZN13Screen3x3View8moveLeftEv>
            spawnRandomTile();
 80090fc:	e7dc      	b.n	80090b8 <_ZN13Screen3x3View15handleTickEventEv+0xa4>
        else if ((currentState & 8) && !(lastState & 8)) // PA6: RIGHT
 80090fe:	0738      	lsls	r0, r7, #28
 8009100:	d507      	bpl.n	8009112 <_ZN13Screen3x3View15handleTickEventEv+0xfe>
 8009102:	f898 3000 	ldrb.w	r3, [r8]
 8009106:	0719      	lsls	r1, r3, #28
 8009108:	d403      	bmi.n	8009112 <_ZN13Screen3x3View15handleTickEventEv+0xfe>
            moveRight();
 800910a:	4620      	mov	r0, r4
 800910c:	f7ff fd58 	bl	8008bc0 <_ZN13Screen3x3View9moveRightEv>
 8009110:	e7d2      	b.n	80090b8 <_ZN13Screen3x3View15handleTickEventEv+0xa4>
        else if ((currentState & 16) && !(lastState & 16)) // PA0: BACK
 8009112:	06fa      	lsls	r2, r7, #27
 8009114:	d5d4      	bpl.n	80090c0 <_ZN13Screen3x3View15handleTickEventEv+0xac>
 8009116:	f898 3000 	ldrb.w	r3, [r8]
 800911a:	06db      	lsls	r3, r3, #27
 800911c:	d4d0      	bmi.n	80090c0 <_ZN13Screen3x3View15handleTickEventEv+0xac>
 800911e:	f00d fc3d 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        	application().gotoSelectedGameDesignScreenCoverTransitionEast();
 8009122:	f7fa f849 	bl	80031b8 <_ZN23FrontendApplicationBase47gotoSelectedGameDesignScreenCoverTransitionEastEv>
 8009126:	e7ca      	b.n	80090be <_ZN13Screen3x3View15handleTickEventEv+0xaa>
}
 8009128:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800912c:	40020400 	.word	0x40020400
 8009130:	200031c4 	.word	0x200031c4
 8009134:	40020000 	.word	0x40020000
 8009138:	200031c0 	.word	0x200031c0

0800913c <_ZN13Screen3x3View13saveGridStateEv>:
{
 800913c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
            gridBeforeMove[i][j] = tiles[i][j]->getValue();
 8009140:	4c0a      	ldr	r4, [pc, #40]	@ (800916c <_ZN13Screen3x3View13saveGridStateEv+0x30>)
 8009142:	f600 35e6 	addw	r5, r0, #3046	@ 0xbe6
 8009146:	f600 38f8 	addw	r8, r0, #3064	@ 0xbf8
 800914a:	1a24      	subs	r4, r4, r0
{
 800914c:	462f      	mov	r7, r5
        for (int j = 0; j < 3; ++j)
 800914e:	2600      	movs	r6, #0
            gridBeforeMove[i][j] = tiles[i][j]->getValue();
 8009150:	f854 0017 	ldr.w	r0, [r4, r7, lsl #1]
 8009154:	f002 f9d4 	bl	800b500 <_ZNK7Tile3x38getValueEv>
        for (int j = 0; j < 3; ++j)
 8009158:	3601      	adds	r6, #1
 800915a:	2e03      	cmp	r6, #3
            gridBeforeMove[i][j] = tiles[i][j]->getValue();
 800915c:	f827 0f02 	strh.w	r0, [r7, #2]!
        for (int j = 0; j < 3; ++j)
 8009160:	d1f6      	bne.n	8009150 <_ZN13Screen3x3View13saveGridStateEv+0x14>
    for (int i = 0; i < 3; ++i)
 8009162:	3506      	adds	r5, #6
 8009164:	4545      	cmp	r5, r8
 8009166:	d1f1      	bne.n	800914c <_ZN13Screen3x3View13saveGridStateEv+0x10>
}
 8009168:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800916c:	fffff3f8 	.word	0xfffff3f8

08009170 <_ZN13Screen3x3View14hasGridChangedEv>:
{
 8009170:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
 8009174:	4d0c      	ldr	r5, [pc, #48]	@ (80091a8 <_ZN13Screen3x3View14hasGridChangedEv+0x38>)
 8009176:	f600 36e6 	addw	r6, r0, #3046	@ 0xbe6
 800917a:	f600 38f8 	addw	r8, r0, #3064	@ 0xbf8
 800917e:	1a2d      	subs	r5, r5, r0
{
 8009180:	4637      	mov	r7, r6
 8009182:	2403      	movs	r4, #3
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
 8009184:	f837 9f02 	ldrh.w	r9, [r7, #2]!
 8009188:	f855 0017 	ldr.w	r0, [r5, r7, lsl #1]
 800918c:	f002 f9b8 	bl	800b500 <_ZNK7Tile3x38getValueEv>
 8009190:	4581      	cmp	r9, r0
 8009192:	d106      	bne.n	80091a2 <_ZN13Screen3x3View14hasGridChangedEv+0x32>
        for (int j = 0; j < 3; ++j)
 8009194:	3c01      	subs	r4, #1
 8009196:	d1f5      	bne.n	8009184 <_ZN13Screen3x3View14hasGridChangedEv+0x14>
    for (int i = 0; i < 3; ++i)
 8009198:	3606      	adds	r6, #6
 800919a:	4546      	cmp	r6, r8
 800919c:	d1f0      	bne.n	8009180 <_ZN13Screen3x3View14hasGridChangedEv+0x10>
    return false;
 800919e:	4620      	mov	r0, r4
 80091a0:	e000      	b.n	80091a4 <_ZN13Screen3x3View14hasGridChangedEv+0x34>
                return true;
 80091a2:	2001      	movs	r0, #1
}
 80091a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80091a8:	fffff3f4 	.word	0xfffff3f4

080091ac <_ZN13Screen3x3View18handleGestureEventERKN8touchgfx12GestureEventE>:
{   
 80091ac:	b538      	push	{r3, r4, r5, lr}
 80091ae:	460d      	mov	r5, r1
 80091b0:	4604      	mov	r4, r0
    saveGridState();
 80091b2:	f7ff ffc3 	bl	800913c <_ZN13Screen3x3View13saveGridStateEv>
 80091b6:	792b      	ldrb	r3, [r5, #4]
    if (evt.getType() == GestureEvent::SWIPE_HORIZONTAL)
 80091b8:	b9cb      	cbnz	r3, 80091ee <_ZN13Screen3x3View18handleGestureEventERKN8touchgfx12GestureEventE+0x42>
        if (evt.getVelocity() > 0)
 80091ba:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80091be:	2b00      	cmp	r3, #0
             moveRight();
 80091c0:	4620      	mov	r0, r4
        if (evt.getVelocity() > 0)
 80091c2:	dd11      	ble.n	80091e8 <_ZN13Screen3x3View18handleGestureEventERKN8touchgfx12GestureEventE+0x3c>
             moveRight();
 80091c4:	f7ff fcfc 	bl	8008bc0 <_ZN13Screen3x3View9moveRightEv>
    if(hasGridChanged()){
 80091c8:	4620      	mov	r0, r4
 80091ca:	f7ff ffd1 	bl	8009170 <_ZN13Screen3x3View14hasGridChangedEv>
 80091ce:	b110      	cbz	r0, 80091d6 <_ZN13Screen3x3View18handleGestureEventERKN8touchgfx12GestureEventE+0x2a>
        spawnRandomTile();
 80091d0:	4620      	mov	r0, r4
 80091d2:	f7ff fecb 	bl	8008f6c <_ZN13Screen3x3View15spawnRandomTileEv>
    if (isGameOver())
 80091d6:	4620      	mov	r0, r4
 80091d8:	f7ff fe8e 	bl	8008ef8 <_ZN13Screen3x3View10isGameOverEv>
 80091dc:	b1a0      	cbz	r0, 8009208 <_ZN13Screen3x3View18handleGestureEventERKN8touchgfx12GestureEventE+0x5c>
        navigateToGameOverScreen();
 80091de:	4620      	mov	r0, r4
}
 80091e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        navigateToGameOverScreen();
 80091e4:	f7ff be81 	b.w	8008eea <_ZN13Screen3x3View24navigateToGameOverScreenEv>
            moveLeft();
 80091e8:	f7ff fc5c 	bl	8008aa4 <_ZN13Screen3x3View8moveLeftEv>
 80091ec:	e7ec      	b.n	80091c8 <_ZN13Screen3x3View18handleGestureEventERKN8touchgfx12GestureEventE+0x1c>
    else if (evt.getType() == GestureEvent::SWIPE_VERTICAL)
 80091ee:	2b01      	cmp	r3, #1
 80091f0:	d1ea      	bne.n	80091c8 <_ZN13Screen3x3View18handleGestureEventERKN8touchgfx12GestureEventE+0x1c>
        if (evt.getVelocity() > 0)
 80091f2:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80091f6:	2b00      	cmp	r3, #0
             moveDown();
 80091f8:	4620      	mov	r0, r4
        if (evt.getVelocity() > 0)
 80091fa:	dd02      	ble.n	8009202 <_ZN13Screen3x3View18handleGestureEventERKN8touchgfx12GestureEventE+0x56>
             moveDown();
 80091fc:	f7ff fdf1 	bl	8008de2 <_ZN13Screen3x3View8moveDownEv>
 8009200:	e7e2      	b.n	80091c8 <_ZN13Screen3x3View18handleGestureEventERKN8touchgfx12GestureEventE+0x1c>
            moveUp();
 8009202:	f7ff fd5f 	bl	8008cc4 <_ZN13Screen3x3View6moveUpEv>
 8009206:	e7df      	b.n	80091c8 <_ZN13Screen3x3View18handleGestureEventERKN8touchgfx12GestureEventE+0x1c>
}
 8009208:	bd38      	pop	{r3, r4, r5, pc}

0800920a <_ZN13Screen3x3View14handleKeyEventEh>:
{   
 800920a:	b538      	push	{r3, r4, r5, lr}
 800920c:	460d      	mov	r5, r1
 800920e:	4604      	mov	r4, r0
    saveGridState();
 8009210:	f7ff ff94 	bl	800913c <_ZN13Screen3x3View13saveGridStateEv>
    switch (key)
 8009214:	f1a5 0132 	sub.w	r1, r5, #50	@ 0x32
 8009218:	2906      	cmp	r1, #6
 800921a:	d808      	bhi.n	800922e <_ZN13Screen3x3View14handleKeyEventEh+0x24>
 800921c:	e8df f001 	tbb	[pc, r1]
 8009220:	0704071f 	.word	0x0704071f
 8009224:	0717      	.short	0x0717
 8009226:	1b          	.byte	0x1b
 8009227:	00          	.byte	0x00
        moveLeft();
 8009228:	4620      	mov	r0, r4
 800922a:	f7ff fc3b 	bl	8008aa4 <_ZN13Screen3x3View8moveLeftEv>
    if(hasGridChanged()){
 800922e:	4620      	mov	r0, r4
 8009230:	f7ff ff9e 	bl	8009170 <_ZN13Screen3x3View14hasGridChangedEv>
 8009234:	b110      	cbz	r0, 800923c <_ZN13Screen3x3View14handleKeyEventEh+0x32>
        spawnRandomTile();
 8009236:	4620      	mov	r0, r4
 8009238:	f7ff fe98 	bl	8008f6c <_ZN13Screen3x3View15spawnRandomTileEv>
    if (isGameOver())
 800923c:	4620      	mov	r0, r4
 800923e:	f7ff fe5b 	bl	8008ef8 <_ZN13Screen3x3View10isGameOverEv>
 8009242:	b180      	cbz	r0, 8009266 <_ZN13Screen3x3View14handleKeyEventEh+0x5c>
        navigateToGameOverScreen();
 8009244:	4620      	mov	r0, r4
}
 8009246:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        navigateToGameOverScreen();
 800924a:	f7ff be4e 	b.w	8008eea <_ZN13Screen3x3View24navigateToGameOverScreenEv>
        moveRight();
 800924e:	4620      	mov	r0, r4
 8009250:	f7ff fcb6 	bl	8008bc0 <_ZN13Screen3x3View9moveRightEv>
        break;
 8009254:	e7eb      	b.n	800922e <_ZN13Screen3x3View14handleKeyEventEh+0x24>
        moveUp();
 8009256:	4620      	mov	r0, r4
 8009258:	f7ff fd34 	bl	8008cc4 <_ZN13Screen3x3View6moveUpEv>
        break;
 800925c:	e7e7      	b.n	800922e <_ZN13Screen3x3View14handleKeyEventEh+0x24>
        moveDown();
 800925e:	4620      	mov	r0, r4
 8009260:	f7ff fdbf 	bl	8008de2 <_ZN13Screen3x3View8moveDownEv>
        break;
 8009264:	e7e3      	b.n	800922e <_ZN13Screen3x3View14handleKeyEventEh+0x24>
}
 8009266:	bd38      	pop	{r3, r4, r5, pc}

08009268 <_ZN13Screen3x3View11setupScreenEv>:
{   
 8009268:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    bestScore = GameGlobal::bestScore;
 800926c:	4b22      	ldr	r3, [pc, #136]	@ (80092f8 <_ZN13Screen3x3View11setupScreenEv+0x90>)
{   
 800926e:	4604      	mov	r4, r0
    bestScore = GameGlobal::bestScore;
 8009270:	681b      	ldr	r3, [r3, #0]
 8009272:	f8c0 3c00 	str.w	r3, [r0, #3072]	@ 0xc00
    score = 0;
 8009276:	2100      	movs	r1, #0
 8009278:	f8c0 1bfc 	str.w	r1, [r0, #3068]	@ 0xbfc
    scoreContainer.setScore(score);
 800927c:	f500 70e8 	add.w	r0, r0, #464	@ 0x1d0
 8009280:	f7ff fb68 	bl	8008954 <_ZN5Score8setScoreEm>
    bestContainer.setScore(bestScore);
 8009284:	f8d4 1c00 	ldr.w	r1, [r4, #3072]	@ 0xc00
 8009288:	f504 7039 	add.w	r0, r4, #740	@ 0x2e4
 800928c:	f7fe fc64 	bl	8007b58 <_ZN4Best8setScoreEm>
    updateScoreText();
 8009290:	4620      	mov	r0, r4
 8009292:	f7ff fbed 	bl	8008a70 <_ZN13Screen3x3View15updateScoreTextEv>
    for (int i = 0; i < 3; ++i)
 8009296:	f504 683c 	add.w	r8, r4, #3008	@ 0xbc0
    updateScoreText();
 800929a:	2678      	movs	r6, #120	@ 0x78
            tiles[i][j]->moveTo((j) * TILE_SIZE, (i+1) * TILE_SIZE);
 800929c:	f1a6 0928 	sub.w	r9, r6, #40	@ 0x28
 80092a0:	fa0f f989 	sxth.w	r9, r9
            tiles[i][j]->centerY = (i + 1) * TILE_SIZE + TILE_SIZE / 2;
 80092a4:	4647      	mov	r7, r8
 80092a6:	2500      	movs	r5, #0
            tiles[i][j]->setValue(0); // ẩn ban đầu
 80092a8:	f857 0f04 	ldr.w	r0, [r7, #4]!
 80092ac:	2100      	movs	r1, #0
 80092ae:	f002 f8bf 	bl	800b430 <_ZN7Tile3x38setValueEt>
            tiles[i][j]->moveTo((j) * TILE_SIZE, (i+1) * TILE_SIZE);
 80092b2:	6838      	ldr	r0, [r7, #0]
 80092b4:	6803      	ldr	r3, [r0, #0]
 80092b6:	464a      	mov	r2, r9
 80092b8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80092ba:	b229      	sxth	r1, r5
 80092bc:	4798      	blx	r3
            tiles[i][j]->centerX = (j) * TILE_SIZE + TILE_SIZE / 2;
 80092be:	f105 0228 	add.w	r2, r5, #40	@ 0x28
 80092c2:	683b      	ldr	r3, [r7, #0]
        for (int j = 0; j < 3; ++j)
 80092c4:	3550      	adds	r5, #80	@ 0x50
 80092c6:	2df0      	cmp	r5, #240	@ 0xf0
            tiles[i][j]->centerY = (i + 1) * TILE_SIZE + TILE_SIZE / 2;
 80092c8:	e9c3 2630 	strd	r2, r6, [r3, #192]	@ 0xc0
        for (int j = 0; j < 3; ++j)
 80092cc:	d1ec      	bne.n	80092a8 <_ZN13Screen3x3View11setupScreenEv+0x40>
    for (int i = 0; i < 3; ++i)
 80092ce:	3650      	adds	r6, #80	@ 0x50
 80092d0:	f5b6 7fb4 	cmp.w	r6, #360	@ 0x168
 80092d4:	f108 080c 	add.w	r8, r8, #12
 80092d8:	d1e0      	bne.n	800929c <_ZN13Screen3x3View11setupScreenEv+0x34>
    tiles[0][0]->setValue(2);
 80092da:	f8d4 0bc4 	ldr.w	r0, [r4, #3012]	@ 0xbc4
 80092de:	2102      	movs	r1, #2
 80092e0:	f002 f8a6 	bl	800b430 <_ZN7Tile3x38setValueEt>
    tiles[0][1]->setValue(2);
 80092e4:	f8d4 0bc8 	ldr.w	r0, [r4, #3016]	@ 0xbc8
 80092e8:	2102      	movs	r1, #2
 80092ea:	f002 f8a1 	bl	800b430 <_ZN7Tile3x38setValueEt>
    Screen3x3ViewBase::setupScreen();
 80092ee:	4620      	mov	r0, r4
}
 80092f0:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    Screen3x3ViewBase::setupScreen();
 80092f4:	f7fb be8c 	b.w	8005010 <_ZN17Screen3x3ViewBase11setupScreenEv>
 80092f8:	200031ac 	.word	0x200031ac

080092fc <_ZN18Screen5x5PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen5x5Presenter() {}
 80092fc:	4770      	bx	lr

080092fe <_ZThn4_N18Screen5x5PresenterD1Ev>:
 80092fe:	3804      	subs	r0, #4
 8009300:	4770      	bx	lr

08009302 <_ZN18Screen5x5Presenter10deactivateEv>:
}

void Screen5x5Presenter::activate()
{

}
 8009302:	4770      	bx	lr

08009304 <_ZN18Screen5x5PresenterD0Ev>:
 8009304:	b510      	push	{r4, lr}
 8009306:	2110      	movs	r1, #16
 8009308:	4604      	mov	r4, r0
 800930a:	f020 fa03 	bl	8029714 <_ZdlPvj>
 800930e:	4620      	mov	r0, r4
 8009310:	bd10      	pop	{r4, pc}

08009312 <_ZThn4_N18Screen5x5PresenterD0Ev>:
 8009312:	f1a0 0004 	sub.w	r0, r0, #4
 8009316:	e7f5      	b.n	8009304 <_ZN18Screen5x5PresenterD0Ev>

08009318 <_ZN18Screen5x5PresenterC1ER13Screen5x5View>:
 8009318:	2200      	movs	r2, #0
 800931a:	6082      	str	r2, [r0, #8]
    : view(v)
 800931c:	4a02      	ldr	r2, [pc, #8]	@ (8009328 <_ZN18Screen5x5PresenterC1ER13Screen5x5View+0x10>)
 800931e:	6002      	str	r2, [r0, #0]
 8009320:	3218      	adds	r2, #24
 8009322:	6042      	str	r2, [r0, #4]
 8009324:	60c1      	str	r1, [r0, #12]
}
 8009326:	4770      	bx	lr
 8009328:	0802dc94 	.word	0x0802dc94

0800932c <_ZN13Screen5x5View14tearDownScreenEv>:
}

void Screen5x5View::tearDownScreen()
{
    Screen5x5ViewBase::tearDownScreen();
}
 800932c:	4770      	bx	lr
	...

08009330 <_ZN13Screen5x5ViewD1Ev>:
#include <gui/containers/Tile5x5.hpp>
class Screen5x5View : public Screen5x5ViewBase
{
public:
    Screen5x5View();
    virtual ~Screen5x5View() {}
 8009330:	b510      	push	{r4, lr}
 8009332:	4b03      	ldr	r3, [pc, #12]	@ (8009340 <_ZN13Screen5x5ViewD1Ev+0x10>)
 8009334:	6003      	str	r3, [r0, #0]
 8009336:	4604      	mov	r4, r0
 8009338:	f7fc f946 	bl	80055c8 <_ZN17Screen5x5ViewBaseD1Ev>
 800933c:	4620      	mov	r0, r4
 800933e:	bd10      	pop	{r4, pc}
 8009340:	0802dcbc 	.word	0x0802dcbc

08009344 <_ZN13Screen5x5ViewD0Ev>:
 8009344:	b510      	push	{r4, lr}
 8009346:	4604      	mov	r4, r0
 8009348:	f7ff fff2 	bl	8009330 <_ZN13Screen5x5ViewD1Ev>
 800934c:	4620      	mov	r0, r4
 800934e:	f641 1124 	movw	r1, #6436	@ 0x1924
 8009352:	f020 f9df 	bl	8029714 <_ZdlPvj>
 8009356:	4620      	mov	r0, r4
 8009358:	bd10      	pop	{r4, pc}
	...

0800935c <_ZN13Screen5x5View6myRandEv>:
    seed = seed * 1664525UL + 1013904223UL;
 800935c:	4b03      	ldr	r3, [pc, #12]	@ (800936c <_ZN13Screen5x5View6myRandEv+0x10>)
 800935e:	4904      	ldr	r1, [pc, #16]	@ (8009370 <_ZN13Screen5x5View6myRandEv+0x14>)
 8009360:	681a      	ldr	r2, [r3, #0]
 8009362:	4804      	ldr	r0, [pc, #16]	@ (8009374 <_ZN13Screen5x5View6myRandEv+0x18>)
 8009364:	fb01 0002 	mla	r0, r1, r2, r0
 8009368:	6018      	str	r0, [r3, #0]
}
 800936a:	4770      	bx	lr
 800936c:	20000020 	.word	0x20000020
 8009370:	0019660d 	.word	0x0019660d
 8009374:	3c6ef35f 	.word	0x3c6ef35f

08009378 <_ZN13Screen5x5ViewC1Ev>:
Screen5x5View::Screen5x5View()
 8009378:	b510      	push	{r4, lr}
 800937a:	4604      	mov	r4, r0
 800937c:	f7fc f9c0 	bl	8005700 <_ZN17Screen5x5ViewBaseC1Ev>
 8009380:	4b39      	ldr	r3, [pc, #228]	@ (8009468 <_ZN13Screen5x5ViewC1Ev+0xf0>)
 8009382:	6023      	str	r3, [r4, #0]
 8009384:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8009388:	2200      	movs	r2, #0
 800938a:	f8c3 291c 	str.w	r2, [r3, #2332]	@ 0x91c
 800938e:	f8c3 2920 	str.w	r2, [r3, #2336]	@ 0x920
    tiles[0][0] = &tile5x51;
 8009392:	f104 0298 	add.w	r2, r4, #152	@ 0x98
 8009396:	f8c3 2884 	str.w	r2, [r3, #2180]	@ 0x884
    tiles[0][1] = &tile5x52;
 800939a:	f504 72b2 	add.w	r2, r4, #356	@ 0x164
 800939e:	f8c3 2888 	str.w	r2, [r3, #2184]	@ 0x888
    tiles[0][2] = &tile5x53;
 80093a2:	f504 720c 	add.w	r2, r4, #560	@ 0x230
 80093a6:	f8c3 288c 	str.w	r2, [r3, #2188]	@ 0x88c
    tiles[0][3] = &tile5x54;
 80093aa:	f504 723f 	add.w	r2, r4, #764	@ 0x2fc
 80093ae:	f8c3 2890 	str.w	r2, [r3, #2192]	@ 0x890
    tiles[0][4] = &tile5x55;
 80093b2:	f504 7272 	add.w	r2, r4, #968	@ 0x3c8
 80093b6:	f8c3 2894 	str.w	r2, [r3, #2196]	@ 0x894
    tiles[1][0] = &tile5x56;
 80093ba:	f204 4294 	addw	r2, r4, #1172	@ 0x494
 80093be:	f8c3 2898 	str.w	r2, [r3, #2200]	@ 0x898
    tiles[1][1] = &tile5x57;
 80093c2:	f504 62ac 	add.w	r2, r4, #1376	@ 0x560
 80093c6:	f8c3 289c 	str.w	r2, [r3, #2204]	@ 0x89c
    tiles[1][2] = &tile5x58;
 80093ca:	f204 622c 	addw	r2, r4, #1580	@ 0x62c
 80093ce:	f8c3 28a0 	str.w	r2, [r3, #2208]	@ 0x8a0
    tiles[1][3] = &tile5x59;
 80093d2:	f504 62df 	add.w	r2, r4, #1784	@ 0x6f8
 80093d6:	f8c3 28a4 	str.w	r2, [r3, #2212]	@ 0x8a4
    tiles[1][4] = &tile5x510;
 80093da:	f204 72c4 	addw	r2, r4, #1988	@ 0x7c4
 80093de:	f8c3 28a8 	str.w	r2, [r3, #2216]	@ 0x8a8
    tiles[2][0] = &tile5x511;
 80093e2:	f504 6209 	add.w	r2, r4, #2192	@ 0x890
 80093e6:	f8c3 28ac 	str.w	r2, [r3, #2220]	@ 0x8ac
    tiles[2][1] = &tile5x512;
 80093ea:	f604 125c 	addw	r2, r4, #2396	@ 0x95c
 80093ee:	f8c3 28b0 	str.w	r2, [r3, #2224]	@ 0x8b0
    tiles[2][2] = &tile5x513;
 80093f2:	f604 2228 	addw	r2, r4, #2600	@ 0xa28
 80093f6:	f8c3 28b4 	str.w	r2, [r3, #2228]	@ 0x8b4
    tiles[2][3] = &tile5x514;
 80093fa:	f604 22f4 	addw	r2, r4, #2804	@ 0xaf4
 80093fe:	f8c3 28b8 	str.w	r2, [r3, #2232]	@ 0x8b8
    tiles[2][4] = &tile5x515;
 8009402:	f504 623c 	add.w	r2, r4, #3008	@ 0xbc0
 8009406:	f8c3 28bc 	str.w	r2, [r3, #2236]	@ 0x8bc
    tiles[3][0] = &tile5x516;
 800940a:	f604 428c 	addw	r2, r4, #3212	@ 0xc8c
 800940e:	f8c3 28c0 	str.w	r2, [r3, #2240]	@ 0x8c0
    tiles[3][1] = &tile5x517;
 8009412:	f604 5258 	addw	r2, r4, #3416	@ 0xd58
 8009416:	f8c3 28c4 	str.w	r2, [r3, #2244]	@ 0x8c4
    tiles[3][2] = &tile5x518;
 800941a:	f604 6224 	addw	r2, r4, #3620	@ 0xe24
 800941e:	f8c3 28c8 	str.w	r2, [r3, #2248]	@ 0x8c8
    tiles[3][3] = &tile5x519;
 8009422:	f504 626f 	add.w	r2, r4, #3824	@ 0xef0
 8009426:	f8c3 28cc 	str.w	r2, [r3, #2252]	@ 0x8cc
    tiles[3][4] = &tile5x520;
 800942a:	f604 72bc 	addw	r2, r4, #4028	@ 0xfbc
 800942e:	f8c3 28d0 	str.w	r2, [r3, #2256]	@ 0x8d0
    tiles[4][0] = &tile5x521;
 8009432:	f504 5284 	add.w	r2, r4, #4224	@ 0x1080
 8009436:	3208      	adds	r2, #8
 8009438:	f8c3 28d4 	str.w	r2, [r3, #2260]	@ 0x8d4
    tiles[4][1] = &tile5x522;
 800943c:	f504 528a 	add.w	r2, r4, #4416	@ 0x1140
 8009440:	3214      	adds	r2, #20
 8009442:	f8c3 28d8 	str.w	r2, [r3, #2264]	@ 0x8d8
    tiles[4][2] = &tile5x523;
 8009446:	f504 5291 	add.w	r2, r4, #4640	@ 0x1220
 800944a:	f8c3 28dc 	str.w	r2, [r3, #2268]	@ 0x8dc
    tiles[4][3] = &tile5x524;
 800944e:	f504 5297 	add.w	r2, r4, #4832	@ 0x12e0
 8009452:	320c      	adds	r2, #12
 8009454:	f8c3 28e0 	str.w	r2, [r3, #2272]	@ 0x8e0
    tiles[4][4] = &tile5x525;
 8009458:	f504 529d 	add.w	r2, r4, #5024	@ 0x13a0
 800945c:	3218      	adds	r2, #24
 800945e:	f8c3 28e4 	str.w	r2, [r3, #2276]	@ 0x8e4
}
 8009462:	4620      	mov	r0, r4
 8009464:	bd10      	pop	{r4, pc}
 8009466:	bf00      	nop
 8009468:	0802dcbc 	.word	0x0802dcbc

0800946c <_ZN13Screen5x5View15updateScoreTextEv>:
    {
        navigateToGameOverScreen();
    }
}
void Screen5x5View::updateScoreText()
{   
 800946c:	b538      	push	{r3, r4, r5, lr}
    GameGlobal::yourScore = score;
 800946e:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
 8009472:	4b0b      	ldr	r3, [pc, #44]	@ (80094a0 <_ZN13Screen5x5View15updateScoreTextEv+0x34>)
 8009474:	f8d5 191c 	ldr.w	r1, [r5, #2332]	@ 0x91c
 8009478:	6019      	str	r1, [r3, #0]
{   
 800947a:	4604      	mov	r4, r0
    GameGlobal::bestScore = bestScore;
 800947c:	4b09      	ldr	r3, [pc, #36]	@ (80094a4 <_ZN13Screen5x5View15updateScoreTextEv+0x38>)
 800947e:	f8d5 2920 	ldr.w	r2, [r5, #2336]	@ 0x920
 8009482:	601a      	str	r2, [r3, #0]
    scoreContainer.setScore(score);
 8009484:	f500 50b2 	add.w	r0, r0, #5696	@ 0x1640
 8009488:	300c      	adds	r0, #12
 800948a:	f7ff fa63 	bl	8008954 <_ZN5Score8setScoreEm>
    bestContainer.setScore(bestScore);
 800948e:	f8d5 1920 	ldr.w	r1, [r5, #2336]	@ 0x920
 8009492:	f504 50bb 	add.w	r0, r4, #5984	@ 0x1760
}
 8009496:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    bestContainer.setScore(bestScore);
 800949a:	f7fe bb5d 	b.w	8007b58 <_ZN4Best8setScoreEm>
 800949e:	bf00      	nop
 80094a0:	200031a8 	.word	0x200031a8
 80094a4:	200031ac 	.word	0x200031ac

080094a8 <_ZN13Screen5x5View8moveLeftEv>:
void Screen5x5View::moveLeft()
{
 80094a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80094ac:	f500 58c4 	add.w	r8, r0, #6272	@ 0x1880
 80094b0:	b08b      	sub	sp, #44	@ 0x2c
 80094b2:	4605      	mov	r5, r0
 80094b4:	f108 0804 	add.w	r8, r8, #4
    for (int row = 0; row < 5; ++row)
 80094b8:	2700      	movs	r7, #0
    {
        int merged[5] = {0}; // theo dõi các tile đã merge
 80094ba:	2214      	movs	r2, #20
 80094bc:	2100      	movs	r1, #0
 80094be:	eb0d 0002 	add.w	r0, sp, r2
 80094c2:	f021 fa6a 	bl	802a99a <memset>

        for (int col = 1; col < 5; ++col)
 80094c6:	eb07 0387 	add.w	r3, r7, r7, lsl #2
 80094ca:	9301      	str	r3, [sp, #4]
        int merged[5] = {0}; // theo dõi các tile đã merge
 80094cc:	46c2      	mov	sl, r8
        for (int col = 1; col < 5; ++col)
 80094ce:	f04f 0901 	mov.w	r9, #1
        {
            if (tiles[row][col]->getValue() == 0) continue;
 80094d2:	f85a 0f04 	ldr.w	r0, [sl, #4]!
 80094d6:	f002 f90b 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 80094da:	b1d0      	cbz	r0, 8009512 <_ZN13Screen5x5View8moveLeftEv+0x6a>
 80094dc:	4656      	mov	r6, sl

            int currentCol = col;
 80094de:	46cb      	mov	fp, r9
            while (currentCol > 0 &&
                   tiles[row][currentCol - 1]->getValue() == 0)
 80094e0:	f856 0d04 	ldr.w	r0, [r6, #-4]!
 80094e4:	f002 f904 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 80094e8:	465c      	mov	r4, fp
            while (currentCol > 0 &&
 80094ea:	9002      	str	r0, [sp, #8]
                   tiles[row][currentCol - 1]->getValue() == 0)
 80094ec:	f10b 3bff 	add.w	fp, fp, #4294967295
            while (currentCol > 0 &&
 80094f0:	b9e0      	cbnz	r0, 800952c <_ZN13Screen5x5View8moveLeftEv+0x84>
            {
                tiles[row][currentCol - 1]->setValue(tiles[row][currentCol]->getValue());
 80094f2:	e9d6 4000 	ldrd	r4, r0, [r6]
 80094f6:	f002 f8fb 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 80094fa:	4601      	mov	r1, r0
 80094fc:	4620      	mov	r0, r4
 80094fe:	f002 f88f 	bl	800b620 <_ZN7Tile5x58setValueEt>
                tiles[row][currentCol]->setValue(0);
 8009502:	9a02      	ldr	r2, [sp, #8]
 8009504:	6870      	ldr	r0, [r6, #4]
 8009506:	4611      	mov	r1, r2
 8009508:	f002 f88a 	bl	800b620 <_ZN7Tile5x58setValueEt>
            while (currentCol > 0 &&
 800950c:	f1bb 0f00 	cmp.w	fp, #0
 8009510:	d1e6      	bne.n	80094e0 <_ZN13Screen5x5View8moveLeftEv+0x38>
        for (int col = 1; col < 5; ++col)
 8009512:	f109 0901 	add.w	r9, r9, #1
 8009516:	f1b9 0f05 	cmp.w	r9, #5
 800951a:	d1da      	bne.n	80094d2 <_ZN13Screen5x5View8moveLeftEv+0x2a>
    for (int row = 0; row < 5; ++row)
 800951c:	3701      	adds	r7, #1
 800951e:	2f05      	cmp	r7, #5
 8009520:	f108 0814 	add.w	r8, r8, #20
 8009524:	d1c9      	bne.n	80094ba <_ZN13Screen5x5View8moveLeftEv+0x12>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 8009526:	b00b      	add	sp, #44	@ 0x2c
 8009528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            if (currentCol > 0 &&
 800952c:	9a01      	ldr	r2, [sp, #4]
                tiles[row][currentCol - 1]->getValue() == tiles[row][currentCol]->getValue() &&
 800952e:	1e63      	subs	r3, r4, #1
 8009530:	189e      	adds	r6, r3, r2
 8009532:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 8009536:	f506 5680 	add.w	r6, r6, #4096	@ 0x1000
 800953a:	9303      	str	r3, [sp, #12]
 800953c:	f8d6 0884 	ldr.w	r0, [r6, #2180]	@ 0x884
 8009540:	f002 f8d6 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 8009544:	9b01      	ldr	r3, [sp, #4]
 8009546:	9002      	str	r0, [sp, #8]
 8009548:	441c      	add	r4, r3
 800954a:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 800954e:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
 8009552:	f8d4 0884 	ldr.w	r0, [r4, #2180]	@ 0x884
 8009556:	f002 f8cb 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
            if (currentCol > 0 &&
 800955a:	9a02      	ldr	r2, [sp, #8]
 800955c:	9b03      	ldr	r3, [sp, #12]
 800955e:	4282      	cmp	r2, r0
 8009560:	d1d7      	bne.n	8009512 <_ZN13Screen5x5View8moveLeftEv+0x6a>
                !merged[currentCol - 1])
 8009562:	aa0a      	add	r2, sp, #40	@ 0x28
 8009564:	eb02 0383 	add.w	r3, r2, r3, lsl #2
                tiles[row][currentCol - 1]->getValue() == tiles[row][currentCol]->getValue() &&
 8009568:	f853 2c14 	ldr.w	r2, [r3, #-20]
 800956c:	2a00      	cmp	r2, #0
 800956e:	d1d0      	bne.n	8009512 <_ZN13Screen5x5View8moveLeftEv+0x6a>
                uint16_t newValue = tiles[row][currentCol - 1]->getValue() * 2;
 8009570:	f8d6 0884 	ldr.w	r0, [r6, #2180]	@ 0x884
 8009574:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8009578:	f002 f8ba 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 800957c:	0040      	lsls	r0, r0, #1
 800957e:	b283      	uxth	r3, r0
                tiles[row][currentCol - 1]->setValue(
 8009580:	4619      	mov	r1, r3
 8009582:	f8d6 0884 	ldr.w	r0, [r6, #2180]	@ 0x884
                uint16_t newValue = tiles[row][currentCol - 1]->getValue() * 2;
 8009586:	469b      	mov	fp, r3
                tiles[row][currentCol - 1]->setValue(
 8009588:	f002 f84a 	bl	800b620 <_ZN7Tile5x58setValueEt>
                tiles[row][currentCol]->setValue(0);
 800958c:	9a03      	ldr	r2, [sp, #12]
 800958e:	f8d4 0884 	ldr.w	r0, [r4, #2180]	@ 0x884
 8009592:	4611      	mov	r1, r2
 8009594:	f002 f844 	bl	800b620 <_ZN7Tile5x58setValueEt>
                merged[currentCol - 1] = 1;
 8009598:	9b02      	ldr	r3, [sp, #8]
 800959a:	2201      	movs	r2, #1
 800959c:	f843 2c14 	str.w	r2, [r3, #-20]
                score += newValue;
 80095a0:	f505 5280 	add.w	r2, r5, #4096	@ 0x1000
                updateScoreText();
 80095a4:	4628      	mov	r0, r5
                score += newValue;
 80095a6:	f8d2 391c 	ldr.w	r3, [r2, #2332]	@ 0x91c
                if (score > bestScore)
 80095aa:	f8d2 1920 	ldr.w	r1, [r2, #2336]	@ 0x920
                score += newValue;
 80095ae:	445b      	add	r3, fp
                if (score > bestScore)
 80095b0:	428b      	cmp	r3, r1
                score += newValue;
 80095b2:	f8c2 391c 	str.w	r3, [r2, #2332]	@ 0x91c
                bestScore = score;
 80095b6:	bf88      	it	hi
 80095b8:	f8c2 3920 	strhi.w	r3, [r2, #2336]	@ 0x920
                updateScoreText();
 80095bc:	f7ff ff56 	bl	800946c <_ZN13Screen5x5View15updateScoreTextEv>
 80095c0:	e7a7      	b.n	8009512 <_ZN13Screen5x5View8moveLeftEv+0x6a>

080095c2 <_ZN13Screen5x5View9moveRightEv>:
void Screen5x5View::moveRight()
{
 80095c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80095c6:	f500 58c4 	add.w	r8, r0, #6272	@ 0x1880
 80095ca:	b08b      	sub	sp, #44	@ 0x2c
 80095cc:	4605      	mov	r5, r0
 80095ce:	f108 0814 	add.w	r8, r8, #20
    for (int row = 0; row < 5; ++row)
 80095d2:	2700      	movs	r7, #0
    {
        int merged[5] = {0};
 80095d4:	2214      	movs	r2, #20
 80095d6:	2100      	movs	r1, #0
 80095d8:	eb0d 0002 	add.w	r0, sp, r2
 80095dc:	f021 f9dd 	bl	802a99a <memset>

        for (int col = 3; col >= 0; --col)
 80095e0:	eb07 0387 	add.w	r3, r7, r7, lsl #2
 80095e4:	9301      	str	r3, [sp, #4]
        int merged[5] = {0};
 80095e6:	46c2      	mov	sl, r8
        for (int col = 3; col >= 0; --col)
 80095e8:	f04f 0903 	mov.w	r9, #3
        {
            if (tiles[row][col]->getValue() == 0) continue;
 80095ec:	f85a 0d04 	ldr.w	r0, [sl, #-4]!
 80095f0:	f002 f87e 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 80095f4:	b1e0      	cbz	r0, 8009630 <_ZN13Screen5x5View9moveRightEv+0x6e>
 80095f6:	4656      	mov	r6, sl

            int currentCol = col;
 80095f8:	46cb      	mov	fp, r9
            while (currentCol < 4 && tiles[row][currentCol + 1]->getValue() == 0)
 80095fa:	6870      	ldr	r0, [r6, #4]
 80095fc:	9603      	str	r6, [sp, #12]
 80095fe:	f002 f877 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 8009602:	465c      	mov	r4, fp
 8009604:	9002      	str	r0, [sp, #8]
 8009606:	f10b 0b01 	add.w	fp, fp, #1
 800960a:	b9e0      	cbnz	r0, 8009646 <_ZN13Screen5x5View9moveRightEv+0x84>
            {
                tiles[row][currentCol + 1]->setValue(tiles[row][currentCol]->getValue());
 800960c:	9903      	ldr	r1, [sp, #12]
 800960e:	6874      	ldr	r4, [r6, #4]
 8009610:	6808      	ldr	r0, [r1, #0]
 8009612:	f002 f86d 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 8009616:	4601      	mov	r1, r0
 8009618:	4620      	mov	r0, r4
 800961a:	f002 f801 	bl	800b620 <_ZN7Tile5x58setValueEt>
                tiles[row][currentCol]->setValue(0);
 800961e:	9a02      	ldr	r2, [sp, #8]
 8009620:	f856 0b04 	ldr.w	r0, [r6], #4
 8009624:	4611      	mov	r1, r2
 8009626:	f001 fffb 	bl	800b620 <_ZN7Tile5x58setValueEt>
            while (currentCol < 4 && tiles[row][currentCol + 1]->getValue() == 0)
 800962a:	f1bb 0f04 	cmp.w	fp, #4
 800962e:	d1e4      	bne.n	80095fa <_ZN13Screen5x5View9moveRightEv+0x38>
        for (int col = 3; col >= 0; --col)
 8009630:	f1b9 0901 	subs.w	r9, r9, #1
 8009634:	d2da      	bcs.n	80095ec <_ZN13Screen5x5View9moveRightEv+0x2a>
    for (int row = 0; row < 5; ++row)
 8009636:	3701      	adds	r7, #1
 8009638:	2f05      	cmp	r7, #5
 800963a:	f108 0814 	add.w	r8, r8, #20
 800963e:	d1c9      	bne.n	80095d4 <_ZN13Screen5x5View9moveRightEv+0x12>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 8009640:	b00b      	add	sp, #44	@ 0x2c
 8009642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            if (currentCol < 4 &&
 8009646:	9a01      	ldr	r2, [sp, #4]
                tiles[row][currentCol + 1]->getValue() == tiles[row][currentCol]->getValue() &&
 8009648:	1c63      	adds	r3, r4, #1
 800964a:	189e      	adds	r6, r3, r2
 800964c:	eb05 0686 	add.w	r6, r5, r6, lsl #2
 8009650:	f506 5680 	add.w	r6, r6, #4096	@ 0x1000
 8009654:	9303      	str	r3, [sp, #12]
 8009656:	f8d6 0884 	ldr.w	r0, [r6, #2180]	@ 0x884
 800965a:	f002 f849 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 800965e:	9b01      	ldr	r3, [sp, #4]
 8009660:	9002      	str	r0, [sp, #8]
 8009662:	441c      	add	r4, r3
 8009664:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 8009668:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
 800966c:	f8d4 0884 	ldr.w	r0, [r4, #2180]	@ 0x884
 8009670:	f002 f83e 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
            if (currentCol < 4 &&
 8009674:	9a02      	ldr	r2, [sp, #8]
 8009676:	9b03      	ldr	r3, [sp, #12]
 8009678:	4282      	cmp	r2, r0
 800967a:	d1d9      	bne.n	8009630 <_ZN13Screen5x5View9moveRightEv+0x6e>
                !merged[currentCol + 1])
 800967c:	aa0a      	add	r2, sp, #40	@ 0x28
 800967e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
                tiles[row][currentCol + 1]->getValue() == tiles[row][currentCol]->getValue() &&
 8009682:	f853 2c14 	ldr.w	r2, [r3, #-20]
 8009686:	2a00      	cmp	r2, #0
 8009688:	d1d2      	bne.n	8009630 <_ZN13Screen5x5View9moveRightEv+0x6e>
                uint16_t newValue = tiles[row][currentCol + 1]->getValue() * 2;
 800968a:	f8d6 0884 	ldr.w	r0, [r6, #2180]	@ 0x884
 800968e:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8009692:	f002 f82d 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 8009696:	0040      	lsls	r0, r0, #1
 8009698:	b283      	uxth	r3, r0
                tiles[row][currentCol + 1]->setValue(
 800969a:	4619      	mov	r1, r3
 800969c:	f8d6 0884 	ldr.w	r0, [r6, #2180]	@ 0x884
                uint16_t newValue = tiles[row][currentCol + 1]->getValue() * 2;
 80096a0:	469b      	mov	fp, r3
                tiles[row][currentCol + 1]->setValue(
 80096a2:	f001 ffbd 	bl	800b620 <_ZN7Tile5x58setValueEt>
                tiles[row][currentCol]->setValue(0);
 80096a6:	9a03      	ldr	r2, [sp, #12]
 80096a8:	f8d4 0884 	ldr.w	r0, [r4, #2180]	@ 0x884
 80096ac:	4611      	mov	r1, r2
 80096ae:	f001 ffb7 	bl	800b620 <_ZN7Tile5x58setValueEt>
                merged[currentCol + 1] = 1;
 80096b2:	9b02      	ldr	r3, [sp, #8]
 80096b4:	2201      	movs	r2, #1
 80096b6:	f843 2c14 	str.w	r2, [r3, #-20]
                score += newValue;
 80096ba:	f505 5280 	add.w	r2, r5, #4096	@ 0x1000
                updateScoreText();
 80096be:	4628      	mov	r0, r5
                score += newValue;
 80096c0:	f8d2 391c 	ldr.w	r3, [r2, #2332]	@ 0x91c
                if (score > bestScore)
 80096c4:	f8d2 1920 	ldr.w	r1, [r2, #2336]	@ 0x920
                score += newValue;
 80096c8:	445b      	add	r3, fp
                if (score > bestScore)
 80096ca:	428b      	cmp	r3, r1
                score += newValue;
 80096cc:	f8c2 391c 	str.w	r3, [r2, #2332]	@ 0x91c
                bestScore = score;
 80096d0:	bf88      	it	hi
 80096d2:	f8c2 3920 	strhi.w	r3, [r2, #2336]	@ 0x920
                updateScoreText();
 80096d6:	f7ff fec9 	bl	800946c <_ZN13Screen5x5View15updateScoreTextEv>
 80096da:	e7a9      	b.n	8009630 <_ZN13Screen5x5View9moveRightEv+0x6e>

080096dc <_ZN13Screen5x5View6moveUpEv>:



void Screen5x5View::moveUp()
{
 80096dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096e0:	f500 58c4 	add.w	r8, r0, #6272	@ 0x1880
 80096e4:	b089      	sub	sp, #36	@ 0x24
 80096e6:	4606      	mov	r6, r0
 80096e8:	f108 0804 	add.w	r8, r8, #4
    for (int col = 0; col < 5; ++col)
 80096ec:	2700      	movs	r7, #0
    {
        int merged[5] = {0};
 80096ee:	2214      	movs	r2, #20
 80096f0:	2100      	movs	r1, #0
 80096f2:	a803      	add	r0, sp, #12
 80096f4:	f021 f951 	bl	802a99a <memset>
 80096f8:	46c2      	mov	sl, r8

        for (int row = 1; row < 5; ++row)
 80096fa:	f04f 0901 	mov.w	r9, #1
        {
            if (tiles[row][col]->getValue() == 0) continue;
 80096fe:	f8da 0014 	ldr.w	r0, [sl, #20]
 8009702:	f001 fff5 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 8009706:	b1d0      	cbz	r0, 800973e <_ZN13Screen5x5View6moveUpEv+0x62>
 8009708:	4654      	mov	r4, sl

            int currentRow = row;
 800970a:	46cb      	mov	fp, r9
            while (currentRow > 0 && tiles[currentRow - 1][col]->getValue() == 0)
 800970c:	6820      	ldr	r0, [r4, #0]
 800970e:	f001 ffef 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 8009712:	465d      	mov	r5, fp
 8009714:	9000      	str	r0, [sp, #0]
 8009716:	f10b 3bff 	add.w	fp, fp, #4294967295
 800971a:	b9f8      	cbnz	r0, 800975c <_ZN13Screen5x5View6moveUpEv+0x80>
            {
                tiles[currentRow - 1][col]->setValue(tiles[currentRow][col]->getValue());
 800971c:	6960      	ldr	r0, [r4, #20]
 800971e:	6825      	ldr	r5, [r4, #0]
 8009720:	f001 ffe6 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 8009724:	4601      	mov	r1, r0
 8009726:	4628      	mov	r0, r5
 8009728:	f001 ff7a 	bl	800b620 <_ZN7Tile5x58setValueEt>
                tiles[currentRow][col]->setValue(0);
 800972c:	9b00      	ldr	r3, [sp, #0]
 800972e:	6960      	ldr	r0, [r4, #20]
 8009730:	4619      	mov	r1, r3
 8009732:	f001 ff75 	bl	800b620 <_ZN7Tile5x58setValueEt>
            while (currentRow > 0 && tiles[currentRow - 1][col]->getValue() == 0)
 8009736:	3c14      	subs	r4, #20
 8009738:	f1bb 0f00 	cmp.w	fp, #0
 800973c:	d1e6      	bne.n	800970c <_ZN13Screen5x5View6moveUpEv+0x30>
        for (int row = 1; row < 5; ++row)
 800973e:	f109 0901 	add.w	r9, r9, #1
 8009742:	f1b9 0f05 	cmp.w	r9, #5
 8009746:	f10a 0a14 	add.w	sl, sl, #20
 800974a:	d1d8      	bne.n	80096fe <_ZN13Screen5x5View6moveUpEv+0x22>
    for (int col = 0; col < 5; ++col)
 800974c:	3701      	adds	r7, #1
 800974e:	2f05      	cmp	r7, #5
 8009750:	f108 0804 	add.w	r8, r8, #4
 8009754:	d1cb      	bne.n	80096ee <_ZN13Screen5x5View6moveUpEv+0x12>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 8009756:	b009      	add	sp, #36	@ 0x24
 8009758:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                tiles[currentRow - 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 800975c:	1e6c      	subs	r4, r5, #1
 800975e:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8009762:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 8009766:	443c      	add	r4, r7
 8009768:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 800976c:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
 8009770:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009774:	f8d4 0884 	ldr.w	r0, [r4, #2180]	@ 0x884
 8009778:	443d      	add	r5, r7
 800977a:	f001 ffb9 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 800977e:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 8009782:	f505 5580 	add.w	r5, r5, #4096	@ 0x1000
 8009786:	9000      	str	r0, [sp, #0]
 8009788:	f8d5 0884 	ldr.w	r0, [r5, #2180]	@ 0x884
 800978c:	f001 ffb0 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
            if (currentRow > 0 &&
 8009790:	9b00      	ldr	r3, [sp, #0]
 8009792:	4283      	cmp	r3, r0
 8009794:	d1d3      	bne.n	800973e <_ZN13Screen5x5View6moveUpEv+0x62>
                !merged[currentRow - 1])
 8009796:	f10b 0320 	add.w	r3, fp, #32
 800979a:	446b      	add	r3, sp
                tiles[currentRow - 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 800979c:	f853 2c14 	ldr.w	r2, [r3, #-20]
 80097a0:	2a00      	cmp	r2, #0
 80097a2:	d1cc      	bne.n	800973e <_ZN13Screen5x5View6moveUpEv+0x62>
                uint16_t newValue = tiles[currentRow - 1][col]->getValue() * 2;
 80097a4:	f8d4 0884 	ldr.w	r0, [r4, #2180]	@ 0x884
 80097a8:	e9cd 3200 	strd	r3, r2, [sp]
 80097ac:	f001 ffa0 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 80097b0:	0041      	lsls	r1, r0, #1
 80097b2:	fa1f fb81 	uxth.w	fp, r1
                tiles[currentRow - 1][col]->setValue(
 80097b6:	f8d4 0884 	ldr.w	r0, [r4, #2180]	@ 0x884
 80097ba:	4659      	mov	r1, fp
 80097bc:	f001 ff30 	bl	800b620 <_ZN7Tile5x58setValueEt>
                tiles[currentRow][col]->setValue(0);
 80097c0:	9a01      	ldr	r2, [sp, #4]
 80097c2:	f8d5 0884 	ldr.w	r0, [r5, #2180]	@ 0x884
 80097c6:	4611      	mov	r1, r2
 80097c8:	f001 ff2a 	bl	800b620 <_ZN7Tile5x58setValueEt>
                merged[currentRow - 1] = 1;
 80097cc:	9b00      	ldr	r3, [sp, #0]
 80097ce:	2201      	movs	r2, #1
 80097d0:	f843 2c14 	str.w	r2, [r3, #-20]
                score += newValue;
 80097d4:	f506 5380 	add.w	r3, r6, #4096	@ 0x1000
                updateScoreText();
 80097d8:	4630      	mov	r0, r6
                score += newValue;
 80097da:	f8d3 291c 	ldr.w	r2, [r3, #2332]	@ 0x91c
                if (score > bestScore)
 80097de:	f8d3 1920 	ldr.w	r1, [r3, #2336]	@ 0x920
                score += newValue;
 80097e2:	445a      	add	r2, fp
                if (score > bestScore)
 80097e4:	428a      	cmp	r2, r1
                score += newValue;
 80097e6:	f8c3 291c 	str.w	r2, [r3, #2332]	@ 0x91c
                bestScore = score;
 80097ea:	bf88      	it	hi
 80097ec:	f8c3 2920 	strhi.w	r2, [r3, #2336]	@ 0x920
                updateScoreText();
 80097f0:	f7ff fe3c 	bl	800946c <_ZN13Screen5x5View15updateScoreTextEv>
 80097f4:	e7a3      	b.n	800973e <_ZN13Screen5x5View6moveUpEv+0x62>

080097f6 <_ZN13Screen5x5View8moveDownEv>:
void Screen5x5View::moveDown()
{
 80097f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80097fa:	4606      	mov	r6, r0
 80097fc:	b089      	sub	sp, #36	@ 0x24
 80097fe:	f500 5ac6 	add.w	sl, r0, #6336	@ 0x18c0
    for (int col = 0; col < 5; ++col)
 8009802:	2700      	movs	r7, #0
    {
        int merged[5] = {0};
 8009804:	2214      	movs	r2, #20
 8009806:	2100      	movs	r1, #0
 8009808:	a803      	add	r0, sp, #12
 800980a:	f021 f8c6 	bl	802a99a <memset>
 800980e:	46d1      	mov	r9, sl

        for (int row = 3; row >= 0; --row)
 8009810:	f04f 0803 	mov.w	r8, #3
        {
            if (tiles[row][col]->getValue() == 0) continue;
 8009814:	f8d9 0000 	ldr.w	r0, [r9]
 8009818:	f001 ff6a 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 800981c:	b1d0      	cbz	r0, 8009854 <_ZN13Screen5x5View8moveDownEv+0x5e>
 800981e:	464c      	mov	r4, r9

            int currentRow = row;
 8009820:	46c3      	mov	fp, r8
            while (currentRow < 4 && tiles[currentRow + 1][col]->getValue() == 0)
 8009822:	6960      	ldr	r0, [r4, #20]
 8009824:	f001 ff64 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 8009828:	465d      	mov	r5, fp
 800982a:	9000      	str	r0, [sp, #0]
 800982c:	f10b 0b01 	add.w	fp, fp, #1
 8009830:	b9f8      	cbnz	r0, 8009872 <_ZN13Screen5x5View8moveDownEv+0x7c>
            {
                tiles[currentRow + 1][col]->setValue(tiles[currentRow][col]->getValue());
 8009832:	6820      	ldr	r0, [r4, #0]
 8009834:	6965      	ldr	r5, [r4, #20]
 8009836:	f001 ff5b 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 800983a:	4601      	mov	r1, r0
 800983c:	4628      	mov	r0, r5
 800983e:	f001 feef 	bl	800b620 <_ZN7Tile5x58setValueEt>
                tiles[currentRow][col]->setValue(0);
 8009842:	9b00      	ldr	r3, [sp, #0]
 8009844:	f854 0b14 	ldr.w	r0, [r4], #20
 8009848:	4619      	mov	r1, r3
 800984a:	f001 fee9 	bl	800b620 <_ZN7Tile5x58setValueEt>
            while (currentRow < 4 && tiles[currentRow + 1][col]->getValue() == 0)
 800984e:	f1bb 0f04 	cmp.w	fp, #4
 8009852:	d1e6      	bne.n	8009822 <_ZN13Screen5x5View8moveDownEv+0x2c>
        for (int row = 3; row >= 0; --row)
 8009854:	f108 38ff 	add.w	r8, r8, #4294967295
 8009858:	f1b8 3fff 	cmp.w	r8, #4294967295
 800985c:	f1a9 0914 	sub.w	r9, r9, #20
 8009860:	d1d8      	bne.n	8009814 <_ZN13Screen5x5View8moveDownEv+0x1e>
    for (int col = 0; col < 5; ++col)
 8009862:	3701      	adds	r7, #1
 8009864:	2f05      	cmp	r7, #5
 8009866:	f10a 0a04 	add.w	sl, sl, #4
 800986a:	d1cb      	bne.n	8009804 <_ZN13Screen5x5View8moveDownEv+0xe>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 800986c:	b009      	add	sp, #36	@ 0x24
 800986e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                tiles[currentRow + 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 8009872:	1c6c      	adds	r4, r5, #1
 8009874:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8009878:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800987c:	443c      	add	r4, r7
 800987e:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 8009882:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
 8009886:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800988a:	f8d4 0884 	ldr.w	r0, [r4, #2180]	@ 0x884
 800988e:	443d      	add	r5, r7
 8009890:	f001 ff2e 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 8009894:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 8009898:	f505 5580 	add.w	r5, r5, #4096	@ 0x1000
 800989c:	9000      	str	r0, [sp, #0]
 800989e:	f8d5 0884 	ldr.w	r0, [r5, #2180]	@ 0x884
 80098a2:	f001 ff25 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
            if (currentRow < 4 &&
 80098a6:	9b00      	ldr	r3, [sp, #0]
 80098a8:	4283      	cmp	r3, r0
 80098aa:	d1d3      	bne.n	8009854 <_ZN13Screen5x5View8moveDownEv+0x5e>
                !merged[currentRow + 1])
 80098ac:	f10b 0320 	add.w	r3, fp, #32
 80098b0:	446b      	add	r3, sp
                tiles[currentRow + 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 80098b2:	f853 2c14 	ldr.w	r2, [r3, #-20]
 80098b6:	2a00      	cmp	r2, #0
 80098b8:	d1cc      	bne.n	8009854 <_ZN13Screen5x5View8moveDownEv+0x5e>
                uint16_t newValue = tiles[currentRow + 1][col]->getValue() * 2;
 80098ba:	f8d4 0884 	ldr.w	r0, [r4, #2180]	@ 0x884
 80098be:	e9cd 3200 	strd	r3, r2, [sp]
 80098c2:	f001 ff15 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 80098c6:	0041      	lsls	r1, r0, #1
 80098c8:	fa1f fb81 	uxth.w	fp, r1
                tiles[currentRow + 1][col]->setValue(
 80098cc:	f8d4 0884 	ldr.w	r0, [r4, #2180]	@ 0x884
 80098d0:	4659      	mov	r1, fp
 80098d2:	f001 fea5 	bl	800b620 <_ZN7Tile5x58setValueEt>
                tiles[currentRow][col]->setValue(0);
 80098d6:	9a01      	ldr	r2, [sp, #4]
 80098d8:	f8d5 0884 	ldr.w	r0, [r5, #2180]	@ 0x884
 80098dc:	4611      	mov	r1, r2
 80098de:	f001 fe9f 	bl	800b620 <_ZN7Tile5x58setValueEt>
                merged[currentRow + 1] = 1;
 80098e2:	9b00      	ldr	r3, [sp, #0]
 80098e4:	2201      	movs	r2, #1
 80098e6:	f843 2c14 	str.w	r2, [r3, #-20]
                score += newValue;
 80098ea:	f506 5380 	add.w	r3, r6, #4096	@ 0x1000
                updateScoreText();
 80098ee:	4630      	mov	r0, r6
                score += newValue;
 80098f0:	f8d3 291c 	ldr.w	r2, [r3, #2332]	@ 0x91c
                if (score > bestScore)
 80098f4:	f8d3 1920 	ldr.w	r1, [r3, #2336]	@ 0x920
                score += newValue;
 80098f8:	445a      	add	r2, fp
                if (score > bestScore)
 80098fa:	428a      	cmp	r2, r1
                score += newValue;
 80098fc:	f8c3 291c 	str.w	r2, [r3, #2332]	@ 0x91c
                bestScore = score;
 8009900:	bf88      	it	hi
 8009902:	f8c3 2920 	strhi.w	r2, [r3, #2336]	@ 0x920
                updateScoreText();
 8009906:	f7ff fdb1 	bl	800946c <_ZN13Screen5x5View15updateScoreTextEv>
 800990a:	e7a3      	b.n	8009854 <_ZN13Screen5x5View8moveDownEv+0x5e>

0800990c <_ZN13Screen5x5View24navigateToGameOverScreenEv>:
        navigateToGameOverScreen();
    }
    }
}
void Screen5x5View::navigateToGameOverScreen()
{
 800990c:	b508      	push	{r3, lr}
   static_cast<FrontendApplication*>(Application::getInstance())->gotoGameOverScreenScreenSlideTransitionEast();
 800990e:	f00d f845 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
}
 8009912:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   static_cast<FrontendApplication*>(Application::getInstance())->gotoGameOverScreenScreenSlideTransitionEast();
 8009916:	f7f9 bc2f 	b.w	8003178 <_ZN23FrontendApplicationBase43gotoGameOverScreenScreenSlideTransitionEastEv>

0800991a <_ZN13Screen5x5View10isGameOverEv>:
bool Screen5x5View::isGameOver() // kiem tra xem con co the gop cac o lai voi nhau khong
{
 800991a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800991e:	f500 57c7 	add.w	r7, r0, #6368	@ 0x18e0
 8009922:	4604      	mov	r4, r0
 8009924:	f500 55c4 	add.w	r5, r0, #6272	@ 0x1880
 8009928:	3704      	adds	r7, #4
 800992a:	46a8      	mov	r8, r5
    // 1. Kiểm tra còn ô trống không
    for (int r = 0; r < 5; ++r)
    {
        for (int c = 0; c < 5; ++c)
 800992c:	2600      	movs	r6, #0
        {
            if (tiles[r][c]->getValue() == 0)
 800992e:	f858 0f04 	ldr.w	r0, [r8, #4]!
 8009932:	f001 fedd 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 8009936:	b318      	cbz	r0, 8009980 <_ZN13Screen5x5View10isGameOverEv+0x66>
        for (int c = 0; c < 5; ++c)
 8009938:	3601      	adds	r6, #1
 800993a:	2e05      	cmp	r6, #5
 800993c:	d1f7      	bne.n	800992e <_ZN13Screen5x5View10isGameOverEv+0x14>
    for (int r = 0; r < 5; ++r)
 800993e:	3514      	adds	r5, #20
 8009940:	42bd      	cmp	r5, r7
 8009942:	d1f2      	bne.n	800992a <_ZN13Screen5x5View10isGameOverEv+0x10>
 8009944:	f504 54c4 	add.w	r4, r4, #6272	@ 0x1880
 8009948:	3404      	adds	r4, #4
                return false; // còn chỗ để spawn => chưa thua
        }
    }

    // 2. Kiểm tra còn ô nào có thể gộp không
    for (int r = 0; r < 5; ++r)
 800994a:	2700      	movs	r7, #0
        for (int c = 0; c < 5; ++c)
 800994c:	4626      	mov	r6, r4
    {
        for (int c = 0; c < 5; ++c)
 800994e:	2500      	movs	r5, #0
        {
            int current = tiles[r][c]->getValue();
 8009950:	f856 0b04 	ldr.w	r0, [r6], #4
 8009954:	f001 fecc 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>

            // Kiểm tra phải
            if (c < 4 && tiles[r][c + 1]->getValue() == current)
 8009958:	2d04      	cmp	r5, #4
            int current = tiles[r][c]->getValue();
 800995a:	4680      	mov	r8, r0
            if (c < 4 && tiles[r][c + 1]->getValue() == current)
 800995c:	d10b      	bne.n	8009976 <_ZN13Screen5x5View10isGameOverEv+0x5c>
                return false;

            // Kiểm tra dưới
            if (r < 4 && tiles[r + 1][c]->getValue() == current)
 800995e:	2f04      	cmp	r7, #4
 8009960:	d111      	bne.n	8009986 <_ZN13Screen5x5View10isGameOverEv+0x6c>
        for (int c = 0; c < 5; ++c)
 8009962:	3501      	adds	r5, #1
 8009964:	2d05      	cmp	r5, #5
 8009966:	d1f3      	bne.n	8009950 <_ZN13Screen5x5View10isGameOverEv+0x36>
    for (int r = 0; r < 5; ++r)
 8009968:	3701      	adds	r7, #1
 800996a:	2f05      	cmp	r7, #5
 800996c:	f104 0414 	add.w	r4, r4, #20
 8009970:	d1ec      	bne.n	800994c <_ZN13Screen5x5View10isGameOverEv+0x32>
                return false;
        }
    }

    // Không còn nước đi hợp lệ
    return true;
 8009972:	2001      	movs	r0, #1
 8009974:	e005      	b.n	8009982 <_ZN13Screen5x5View10isGameOverEv+0x68>
            if (c < 4 && tiles[r][c + 1]->getValue() == current)
 8009976:	6830      	ldr	r0, [r6, #0]
 8009978:	f001 feba 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 800997c:	4580      	cmp	r8, r0
 800997e:	d1ee      	bne.n	800995e <_ZN13Screen5x5View10isGameOverEv+0x44>
                return false; // còn chỗ để spawn => chưa thua
 8009980:	2000      	movs	r0, #0
}
 8009982:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            if (r < 4 && tiles[r + 1][c]->getValue() == current)
 8009986:	6930      	ldr	r0, [r6, #16]
 8009988:	f001 feb2 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 800998c:	4580      	cmp	r8, r0
 800998e:	d1e8      	bne.n	8009962 <_ZN13Screen5x5View10isGameOverEv+0x48>
 8009990:	e7f6      	b.n	8009980 <_ZN13Screen5x5View10isGameOverEv+0x66>

08009992 <_ZN13Screen5x5View15spawnRandomTileEv>:
{
 8009992:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    for (int r = 0; r < 5; r++) {
 8009996:	2600      	movs	r6, #0
{
 8009998:	b0b3      	sub	sp, #204	@ 0xcc
 800999a:	4605      	mov	r5, r0
 800999c:	f500 58c4 	add.w	r8, r0, #6272	@ 0x1880
    int emptyCount = 0;
 80099a0:	4634      	mov	r4, r6
{
 80099a2:	46c1      	mov	r9, r8
        for (int c = 0; c < 5; c++) {
 80099a4:	2700      	movs	r7, #0
            if (tiles[r][c]->getValue() == 0) {
 80099a6:	f859 0f04 	ldr.w	r0, [r9, #4]!
 80099aa:	f001 fea1 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 80099ae:	b928      	cbnz	r0, 80099bc <_ZN13Screen5x5View15spawnRandomTileEv+0x2a>
                empties[emptyCount++] = {r, c};
 80099b0:	ab32      	add	r3, sp, #200	@ 0xc8
 80099b2:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80099b6:	e943 6732 	strd	r6, r7, [r3, #-200]	@ 0xc8
 80099ba:	3401      	adds	r4, #1
        for (int c = 0; c < 5; c++) {
 80099bc:	3701      	adds	r7, #1
 80099be:	2f05      	cmp	r7, #5
 80099c0:	d1f1      	bne.n	80099a6 <_ZN13Screen5x5View15spawnRandomTileEv+0x14>
    for (int r = 0; r < 5; r++) {
 80099c2:	3601      	adds	r6, #1
 80099c4:	2e05      	cmp	r6, #5
 80099c6:	f108 0814 	add.w	r8, r8, #20
 80099ca:	d1ea      	bne.n	80099a2 <_ZN13Screen5x5View15spawnRandomTileEv+0x10>
    if (emptyCount > 0) {
 80099cc:	2c00      	cmp	r4, #0
        int idx = myRand() % emptyCount;
 80099ce:	4628      	mov	r0, r5
    if (emptyCount > 0) {
 80099d0:	dd29      	ble.n	8009a26 <_ZN13Screen5x5View15spawnRandomTileEv+0x94>
        int idx = myRand() % emptyCount;
 80099d2:	f7ff fcc3 	bl	800935c <_ZN13Screen5x5View6myRandEv>
 80099d6:	fbb0 f3f4 	udiv	r3, r0, r4
 80099da:	fb03 0014 	mls	r0, r3, r4, r0
        int rr = empties[idx].row;
 80099de:	ab32      	add	r3, sp, #200	@ 0xc8
 80099e0:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
        int cc = empties[idx].col;
 80099e4:	e950 4632 	ldrd	r4, r6, [r0, #-200]	@ 0xc8
        uint16_t newValue = (myRand() % 10 == 0) ? 4 : 2;
 80099e8:	4628      	mov	r0, r5
 80099ea:	f7ff fcb7 	bl	800935c <_ZN13Screen5x5View6myRandEv>
 80099ee:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 80099f2:	4434      	add	r4, r6
 80099f4:	230a      	movs	r3, #10
 80099f6:	eb05 0484 	add.w	r4, r5, r4, lsl #2
        tiles[rr][cc]->setValue(newValue);
 80099fa:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
        uint16_t newValue = (myRand() % 10 == 0) ? 4 : 2;
 80099fe:	fbb0 f2f3 	udiv	r2, r0, r3
 8009a02:	fb02 0013 	mls	r0, r2, r3, r0
 8009a06:	2800      	cmp	r0, #0
        tiles[rr][cc]->setValue(newValue);
 8009a08:	bf18      	it	ne
 8009a0a:	2102      	movne	r1, #2
 8009a0c:	f8d4 0884 	ldr.w	r0, [r4, #2180]	@ 0x884
 8009a10:	bf08      	it	eq
 8009a12:	2104      	moveq	r1, #4
 8009a14:	f001 fe04 	bl	800b620 <_ZN7Tile5x58setValueEt>
        tiles[rr][cc]->animateSpawn();//animation spawn
 8009a18:	f8d4 0884 	ldr.w	r0, [r4, #2180]	@ 0x884
}
 8009a1c:	b033      	add	sp, #204	@ 0xcc
 8009a1e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        tiles[rr][cc]->animateSpawn();//animation spawn
 8009a22:	f001 be70 	b.w	800b706 <_ZN7Tile5x512animateSpawnEv>
        if (isGameOver()) {
 8009a26:	f7ff ff78 	bl	800991a <_ZN13Screen5x5View10isGameOverEv>
 8009a2a:	b128      	cbz	r0, 8009a38 <_ZN13Screen5x5View15spawnRandomTileEv+0xa6>
        navigateToGameOverScreen();
 8009a2c:	4628      	mov	r0, r5
}
 8009a2e:	b033      	add	sp, #204	@ 0xcc
 8009a30:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        navigateToGameOverScreen();
 8009a34:	f7ff bf6a 	b.w	800990c <_ZN13Screen5x5View24navigateToGameOverScreenEv>
}
 8009a38:	b033      	add	sp, #204	@ 0xcc
 8009a3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08009a40 <_ZN13Screen5x5View15handleTickEventEv>:
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
                return true;
    return false;
}
void Screen5x5View::handleTickEvent()
{
 8009a40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009a44:	4604      	mov	r4, r0
    static uint32_t lastPressTime = 0;
    const uint32_t debounceDelay = 200; // Thời gian chống dội (ms)
    uint32_t currentTime = HAL_GetTick();
 8009a46:	f002 fb15 	bl	800c074 <HAL_GetTick>

    uint8_t currentState = 0;
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 8009a4a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    uint32_t currentTime = HAL_GetTick();
 8009a4e:	4605      	mov	r5, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 8009a50:	4841      	ldr	r0, [pc, #260]	@ (8009b58 <_ZN13Screen5x5View15handleTickEventEv+0x118>)
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK

    static uint8_t lastState = 0;

    if (currentTime - lastPressTime > debounceDelay)
 8009a52:	4e42      	ldr	r6, [pc, #264]	@ (8009b5c <_ZN13Screen5x5View15handleTickEventEv+0x11c>)
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 8009a54:	f002 fd68 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 8009a58:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 8009a5c:	4681      	mov	r9, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 8009a5e:	483e      	ldr	r0, [pc, #248]	@ (8009b58 <_ZN13Screen5x5View15handleTickEventEv+0x118>)
 8009a60:	f002 fd62 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 8009a64:	2104      	movs	r1, #4
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 8009a66:	4607      	mov	r7, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 8009a68:	483d      	ldr	r0, [pc, #244]	@ (8009b60 <_ZN13Screen5x5View15handleTickEventEv+0x120>)
 8009a6a:	f002 fd5d 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 8009a6e:	2140      	movs	r1, #64	@ 0x40
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 8009a70:	4680      	mov	r8, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 8009a72:	483b      	ldr	r0, [pc, #236]	@ (8009b60 <_ZN13Screen5x5View15handleTickEventEv+0x120>)
 8009a74:	f002 fd58 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8009a78:	2101      	movs	r1, #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 8009a7a:	4682      	mov	sl, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8009a7c:	4838      	ldr	r0, [pc, #224]	@ (8009b60 <_ZN13Screen5x5View15handleTickEventEv+0x120>)
 8009a7e:	f002 fd53 	bl	800c528 <HAL_GPIO_ReadPin>
    if (currentTime - lastPressTime > debounceDelay)
 8009a82:	6832      	ldr	r2, [r6, #0]
 8009a84:	1aaa      	subs	r2, r5, r2
 8009a86:	2ac8      	cmp	r2, #200	@ 0xc8
 8009a88:	d964      	bls.n	8009b54 <_ZN13Screen5x5View15handleTickEventEv+0x114>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 8009a8a:	f10a 32ff 	add.w	r2, sl, #4294967295
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8009a8e:	1e41      	subs	r1, r0, #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 8009a90:	f1d2 0a00 	rsbs	sl, r2, #0
 8009a94:	eb4a 0a02 	adc.w	sl, sl, r2
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8009a98:	424b      	negs	r3, r1
 8009a9a:	414b      	adcs	r3, r1
 8009a9c:	011b      	lsls	r3, r3, #4
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 8009a9e:	f108 30ff 	add.w	r0, r8, #4294967295
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8009aa2:	ea43 03ca 	orr.w	r3, r3, sl, lsl #3
 8009aa6:	f1b9 0f01 	cmp.w	r9, #1
 8009aaa:	bf08      	it	eq
 8009aac:	f043 0301 	orreq.w	r3, r3, #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 8009ab0:	f1d0 0800 	rsbs	r8, r0, #0
 8009ab4:	eb48 0800 	adc.w	r8, r8, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 8009ab8:	f107 3cff 	add.w	ip, r7, #4294967295
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8009abc:	ea43 0388 	orr.w	r3, r3, r8, lsl #2
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 8009ac0:	f1dc 0700 	rsbs	r7, ip, #0
 8009ac4:	eb47 070c 	adc.w	r7, r7, ip
    {
        if ((currentState & 1) && !(lastState & 1)) // PB10: UP
 8009ac8:	f013 0f01 	tst.w	r3, #1
 8009acc:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 8009b64 <_ZN13Screen5x5View15handleTickEventEv+0x124>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 8009ad0:	ea43 0747 	orr.w	r7, r3, r7, lsl #1
        if ((currentState & 1) && !(lastState & 1)) // PB10: UP
 8009ad4:	d015      	beq.n	8009b02 <_ZN13Screen5x5View15handleTickEventEv+0xc2>
 8009ad6:	f898 3000 	ldrb.w	r3, [r8]
 8009ada:	07db      	lsls	r3, r3, #31
 8009adc:	d411      	bmi.n	8009b02 <_ZN13Screen5x5View15handleTickEventEv+0xc2>
        {
            moveUp();
 8009ade:	4620      	mov	r0, r4
 8009ae0:	f7ff fdfc 	bl	80096dc <_ZN13Screen5x5View6moveUpEv>
            lastPressTime = currentTime;
        }
        else if ((currentState & 8) && !(lastState & 8)) // PA6: RIGHT
        {
            moveRight();
            spawnRandomTile();
 8009ae4:	4620      	mov	r0, r4
 8009ae6:	f7ff ff54 	bl	8009992 <_ZN13Screen5x5View15spawnRandomTileEv>
        }
        else if ((currentState & 16) && !(lastState & 16)) // PA0: BACK
        {
            // Về màn hình Chosing_mode
        	application().gotoSelectedGameDesignScreenCoverTransitionEast();
            lastPressTime = currentTime;
 8009aea:	6035      	str	r5, [r6, #0]
        }

        lastState = currentState;

        if (isGameOver())
 8009aec:	4620      	mov	r0, r4
        lastState = currentState;
 8009aee:	f888 7000 	strb.w	r7, [r8]
        if (isGameOver())
 8009af2:	f7ff ff12 	bl	800991a <_ZN13Screen5x5View10isGameOverEv>
 8009af6:	b368      	cbz	r0, 8009b54 <_ZN13Screen5x5View15handleTickEventEv+0x114>
        {
            navigateToGameOverScreen();
 8009af8:	4620      	mov	r0, r4
        }
    }
}
 8009afa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
            navigateToGameOverScreen();
 8009afe:	f7ff bf05 	b.w	800990c <_ZN13Screen5x5View24navigateToGameOverScreenEv>
        else if ((currentState & 2) && !(lastState & 2)) // PB12: DOWN
 8009b02:	07b8      	lsls	r0, r7, #30
 8009b04:	d507      	bpl.n	8009b16 <_ZN13Screen5x5View15handleTickEventEv+0xd6>
 8009b06:	f898 3000 	ldrb.w	r3, [r8]
 8009b0a:	0799      	lsls	r1, r3, #30
 8009b0c:	d403      	bmi.n	8009b16 <_ZN13Screen5x5View15handleTickEventEv+0xd6>
            moveDown();
 8009b0e:	4620      	mov	r0, r4
 8009b10:	f7ff fe71 	bl	80097f6 <_ZN13Screen5x5View8moveDownEv>
            spawnRandomTile();
 8009b14:	e7e6      	b.n	8009ae4 <_ZN13Screen5x5View15handleTickEventEv+0xa4>
        else if ((currentState & 4) && !(lastState & 4)) // PA2: LEFT
 8009b16:	077a      	lsls	r2, r7, #29
 8009b18:	d507      	bpl.n	8009b2a <_ZN13Screen5x5View15handleTickEventEv+0xea>
 8009b1a:	f898 3000 	ldrb.w	r3, [r8]
 8009b1e:	075b      	lsls	r3, r3, #29
 8009b20:	d403      	bmi.n	8009b2a <_ZN13Screen5x5View15handleTickEventEv+0xea>
            moveLeft();
 8009b22:	4620      	mov	r0, r4
 8009b24:	f7ff fcc0 	bl	80094a8 <_ZN13Screen5x5View8moveLeftEv>
            spawnRandomTile();
 8009b28:	e7dc      	b.n	8009ae4 <_ZN13Screen5x5View15handleTickEventEv+0xa4>
        else if ((currentState & 8) && !(lastState & 8)) // PA6: RIGHT
 8009b2a:	0738      	lsls	r0, r7, #28
 8009b2c:	d507      	bpl.n	8009b3e <_ZN13Screen5x5View15handleTickEventEv+0xfe>
 8009b2e:	f898 3000 	ldrb.w	r3, [r8]
 8009b32:	0719      	lsls	r1, r3, #28
 8009b34:	d403      	bmi.n	8009b3e <_ZN13Screen5x5View15handleTickEventEv+0xfe>
            moveRight();
 8009b36:	4620      	mov	r0, r4
 8009b38:	f7ff fd43 	bl	80095c2 <_ZN13Screen5x5View9moveRightEv>
 8009b3c:	e7d2      	b.n	8009ae4 <_ZN13Screen5x5View15handleTickEventEv+0xa4>
        else if ((currentState & 16) && !(lastState & 16)) // PA0: BACK
 8009b3e:	06fa      	lsls	r2, r7, #27
 8009b40:	d5d4      	bpl.n	8009aec <_ZN13Screen5x5View15handleTickEventEv+0xac>
 8009b42:	f898 3000 	ldrb.w	r3, [r8]
 8009b46:	06db      	lsls	r3, r3, #27
 8009b48:	d4d0      	bmi.n	8009aec <_ZN13Screen5x5View15handleTickEventEv+0xac>
 8009b4a:	f00c ff27 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        	application().gotoSelectedGameDesignScreenCoverTransitionEast();
 8009b4e:	f7f9 fb33 	bl	80031b8 <_ZN23FrontendApplicationBase47gotoSelectedGameDesignScreenCoverTransitionEastEv>
 8009b52:	e7ca      	b.n	8009aea <_ZN13Screen5x5View15handleTickEventEv+0xaa>
}
 8009b54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009b58:	40020400 	.word	0x40020400
 8009b5c:	200031cc 	.word	0x200031cc
 8009b60:	40020000 	.word	0x40020000
 8009b64:	200031c8 	.word	0x200031c8

08009b68 <_ZN13Screen5x5View13saveGridStateEv>:
{
 8009b68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
            gridBeforeMove[i][j] = tiles[i][j]->getValue();
 8009b6c:	4c0c      	ldr	r4, [pc, #48]	@ (8009ba0 <_ZN13Screen5x5View13saveGridStateEv+0x38>)
 8009b6e:	f500 55c7 	add.w	r5, r0, #6368	@ 0x18e0
 8009b72:	f500 58c8 	add.w	r8, r0, #6400	@ 0x1900
 8009b76:	3506      	adds	r5, #6
 8009b78:	f108 0818 	add.w	r8, r8, #24
 8009b7c:	1a24      	subs	r4, r4, r0
{
 8009b7e:	462f      	mov	r7, r5
        for (int j = 0; j < 5; ++j)
 8009b80:	2600      	movs	r6, #0
            gridBeforeMove[i][j] = tiles[i][j]->getValue();
 8009b82:	f854 0017 	ldr.w	r0, [r4, r7, lsl #1]
 8009b86:	f001 fdb3 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
        for (int j = 0; j < 5; ++j)
 8009b8a:	3601      	adds	r6, #1
 8009b8c:	2e05      	cmp	r6, #5
            gridBeforeMove[i][j] = tiles[i][j]->getValue();
 8009b8e:	f827 0f02 	strh.w	r0, [r7, #2]!
        for (int j = 0; j < 5; ++j)
 8009b92:	d1f6      	bne.n	8009b82 <_ZN13Screen5x5View13saveGridStateEv+0x1a>
    for (int i = 0; i < 5; ++i)
 8009b94:	350a      	adds	r5, #10
 8009b96:	4545      	cmp	r5, r8
 8009b98:	d1f1      	bne.n	8009b7e <_ZN13Screen5x5View13saveGridStateEv+0x16>
}
 8009b9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009b9e:	bf00      	nop
 8009ba0:	ffffe6b8 	.word	0xffffe6b8

08009ba4 <_ZN13Screen5x5View14hasGridChangedEv>:
{
 8009ba4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
 8009ba8:	4d0e      	ldr	r5, [pc, #56]	@ (8009be4 <_ZN13Screen5x5View14hasGridChangedEv+0x40>)
 8009baa:	f500 56c7 	add.w	r6, r0, #6368	@ 0x18e0
 8009bae:	f500 58c8 	add.w	r8, r0, #6400	@ 0x1900
 8009bb2:	3606      	adds	r6, #6
 8009bb4:	f108 0818 	add.w	r8, r8, #24
 8009bb8:	1a2d      	subs	r5, r5, r0
{
 8009bba:	4637      	mov	r7, r6
 8009bbc:	2405      	movs	r4, #5
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
 8009bbe:	f837 9f02 	ldrh.w	r9, [r7, #2]!
 8009bc2:	f855 0017 	ldr.w	r0, [r5, r7, lsl #1]
 8009bc6:	f001 fd93 	bl	800b6f0 <_ZNK7Tile5x58getValueEv>
 8009bca:	4581      	cmp	r9, r0
 8009bcc:	d106      	bne.n	8009bdc <_ZN13Screen5x5View14hasGridChangedEv+0x38>
        for (int j = 0; j < 5; ++j)
 8009bce:	3c01      	subs	r4, #1
 8009bd0:	d1f5      	bne.n	8009bbe <_ZN13Screen5x5View14hasGridChangedEv+0x1a>
    for (int i = 0; i < 5; ++i)
 8009bd2:	360a      	adds	r6, #10
 8009bd4:	4546      	cmp	r6, r8
 8009bd6:	d1f0      	bne.n	8009bba <_ZN13Screen5x5View14hasGridChangedEv+0x16>
    return false;
 8009bd8:	4620      	mov	r0, r4
 8009bda:	e000      	b.n	8009bde <_ZN13Screen5x5View14hasGridChangedEv+0x3a>
                return true;
 8009bdc:	2001      	movs	r0, #1
}
 8009bde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009be2:	bf00      	nop
 8009be4:	ffffe6b4 	.word	0xffffe6b4

08009be8 <_ZN13Screen5x5View18handleGestureEventERKN8touchgfx12GestureEventE>:
{   
 8009be8:	b538      	push	{r3, r4, r5, lr}
 8009bea:	460d      	mov	r5, r1
 8009bec:	4604      	mov	r4, r0
    saveGridState(); //luu trang thai truoc khi chuyen
 8009bee:	f7ff ffbb 	bl	8009b68 <_ZN13Screen5x5View13saveGridStateEv>
 8009bf2:	792b      	ldrb	r3, [r5, #4]
    if (evt.getType() == GestureEvent::SWIPE_HORIZONTAL)
 8009bf4:	b9cb      	cbnz	r3, 8009c2a <_ZN13Screen5x5View18handleGestureEventERKN8touchgfx12GestureEventE+0x42>
        if (evt.getVelocity() > 0)
 8009bf6:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009bfa:	2b00      	cmp	r3, #0
             moveRight();
 8009bfc:	4620      	mov	r0, r4
        if (evt.getVelocity() > 0)
 8009bfe:	dd11      	ble.n	8009c24 <_ZN13Screen5x5View18handleGestureEventERKN8touchgfx12GestureEventE+0x3c>
             moveRight();
 8009c00:	f7ff fcdf 	bl	80095c2 <_ZN13Screen5x5View9moveRightEv>
    if (hasGridChanged()) {
 8009c04:	4620      	mov	r0, r4
 8009c06:	f7ff ffcd 	bl	8009ba4 <_ZN13Screen5x5View14hasGridChangedEv>
 8009c0a:	b110      	cbz	r0, 8009c12 <_ZN13Screen5x5View18handleGestureEventERKN8touchgfx12GestureEventE+0x2a>
        spawnRandomTile();  // chi spawn neu co thay doi
 8009c0c:	4620      	mov	r0, r4
 8009c0e:	f7ff fec0 	bl	8009992 <_ZN13Screen5x5View15spawnRandomTileEv>
    if (isGameOver())
 8009c12:	4620      	mov	r0, r4
 8009c14:	f7ff fe81 	bl	800991a <_ZN13Screen5x5View10isGameOverEv>
 8009c18:	b1a0      	cbz	r0, 8009c44 <_ZN13Screen5x5View18handleGestureEventERKN8touchgfx12GestureEventE+0x5c>
        navigateToGameOverScreen();
 8009c1a:	4620      	mov	r0, r4
}
 8009c1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        navigateToGameOverScreen();
 8009c20:	f7ff be74 	b.w	800990c <_ZN13Screen5x5View24navigateToGameOverScreenEv>
            moveLeft();
 8009c24:	f7ff fc40 	bl	80094a8 <_ZN13Screen5x5View8moveLeftEv>
 8009c28:	e7ec      	b.n	8009c04 <_ZN13Screen5x5View18handleGestureEventERKN8touchgfx12GestureEventE+0x1c>
    else if (evt.getType() == GestureEvent::SWIPE_VERTICAL)
 8009c2a:	2b01      	cmp	r3, #1
 8009c2c:	d1ea      	bne.n	8009c04 <_ZN13Screen5x5View18handleGestureEventERKN8touchgfx12GestureEventE+0x1c>
        if (evt.getVelocity() > 0)
 8009c2e:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009c32:	2b00      	cmp	r3, #0
             moveDown();
 8009c34:	4620      	mov	r0, r4
        if (evt.getVelocity() > 0)
 8009c36:	dd02      	ble.n	8009c3e <_ZN13Screen5x5View18handleGestureEventERKN8touchgfx12GestureEventE+0x56>
             moveDown();
 8009c38:	f7ff fddd 	bl	80097f6 <_ZN13Screen5x5View8moveDownEv>
 8009c3c:	e7e2      	b.n	8009c04 <_ZN13Screen5x5View18handleGestureEventERKN8touchgfx12GestureEventE+0x1c>
            moveUp();
 8009c3e:	f7ff fd4d 	bl	80096dc <_ZN13Screen5x5View6moveUpEv>
 8009c42:	e7df      	b.n	8009c04 <_ZN13Screen5x5View18handleGestureEventERKN8touchgfx12GestureEventE+0x1c>
}
 8009c44:	bd38      	pop	{r3, r4, r5, pc}

08009c46 <_ZN13Screen5x5View14handleKeyEventEh>:
{   
 8009c46:	b538      	push	{r3, r4, r5, lr}
 8009c48:	460d      	mov	r5, r1
 8009c4a:	4604      	mov	r4, r0
    saveGridState();
 8009c4c:	f7ff ff8c 	bl	8009b68 <_ZN13Screen5x5View13saveGridStateEv>
    switch (key)
 8009c50:	f1a5 0132 	sub.w	r1, r5, #50	@ 0x32
 8009c54:	2906      	cmp	r1, #6
 8009c56:	d808      	bhi.n	8009c6a <_ZN13Screen5x5View14handleKeyEventEh+0x24>
 8009c58:	e8df f001 	tbb	[pc, r1]
 8009c5c:	0704071f 	.word	0x0704071f
 8009c60:	0717      	.short	0x0717
 8009c62:	1b          	.byte	0x1b
 8009c63:	00          	.byte	0x00
        moveLeft();
 8009c64:	4620      	mov	r0, r4
 8009c66:	f7ff fc1f 	bl	80094a8 <_ZN13Screen5x5View8moveLeftEv>
    if(hasGridChanged()){
 8009c6a:	4620      	mov	r0, r4
 8009c6c:	f7ff ff9a 	bl	8009ba4 <_ZN13Screen5x5View14hasGridChangedEv>
 8009c70:	b110      	cbz	r0, 8009c78 <_ZN13Screen5x5View14handleKeyEventEh+0x32>
        spawnRandomTile();
 8009c72:	4620      	mov	r0, r4
 8009c74:	f7ff fe8d 	bl	8009992 <_ZN13Screen5x5View15spawnRandomTileEv>
    if (isGameOver())
 8009c78:	4620      	mov	r0, r4
 8009c7a:	f7ff fe4e 	bl	800991a <_ZN13Screen5x5View10isGameOverEv>
 8009c7e:	b180      	cbz	r0, 8009ca2 <_ZN13Screen5x5View14handleKeyEventEh+0x5c>
        navigateToGameOverScreen();
 8009c80:	4620      	mov	r0, r4
}
 8009c82:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        navigateToGameOverScreen();
 8009c86:	f7ff be41 	b.w	800990c <_ZN13Screen5x5View24navigateToGameOverScreenEv>
        moveRight();
 8009c8a:	4620      	mov	r0, r4
 8009c8c:	f7ff fc99 	bl	80095c2 <_ZN13Screen5x5View9moveRightEv>
        break;
 8009c90:	e7eb      	b.n	8009c6a <_ZN13Screen5x5View14handleKeyEventEh+0x24>
        moveUp();
 8009c92:	4620      	mov	r0, r4
 8009c94:	f7ff fd22 	bl	80096dc <_ZN13Screen5x5View6moveUpEv>
        break;
 8009c98:	e7e7      	b.n	8009c6a <_ZN13Screen5x5View14handleKeyEventEh+0x24>
        moveDown();
 8009c9a:	4620      	mov	r0, r4
 8009c9c:	f7ff fdab 	bl	80097f6 <_ZN13Screen5x5View8moveDownEv>
        break;
 8009ca0:	e7e3      	b.n	8009c6a <_ZN13Screen5x5View14handleKeyEventEh+0x24>
}
 8009ca2:	bd38      	pop	{r3, r4, r5, pc}

08009ca4 <_ZN13Screen5x5View11setupScreenEv>:
    bestScore = GameGlobal::bestScore;
 8009ca4:	4b26      	ldr	r3, [pc, #152]	@ (8009d40 <_ZN13Screen5x5View11setupScreenEv+0x9c>)
{   
 8009ca6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    score = 0;
 8009caa:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
    bestScore = GameGlobal::bestScore;
 8009cae:	681b      	ldr	r3, [r3, #0]
 8009cb0:	f8c5 3920 	str.w	r3, [r5, #2336]	@ 0x920
{   
 8009cb4:	4604      	mov	r4, r0
    score = 0;
 8009cb6:	2100      	movs	r1, #0
    scoreContainer.setScore(score);
 8009cb8:	f500 50b2 	add.w	r0, r0, #5696	@ 0x1640
    score = 0;
 8009cbc:	f8c5 191c 	str.w	r1, [r5, #2332]	@ 0x91c
    scoreContainer.setScore(score);
 8009cc0:	300c      	adds	r0, #12
 8009cc2:	f7fe fe47 	bl	8008954 <_ZN5Score8setScoreEm>
    bestContainer.setScore(bestScore);
 8009cc6:	f8d5 1920 	ldr.w	r1, [r5, #2336]	@ 0x920
 8009cca:	f504 50bb 	add.w	r0, r4, #5984	@ 0x1760
 8009cce:	f7fd ff43 	bl	8007b58 <_ZN4Best8setScoreEm>
    updateScoreText();
 8009cd2:	4620      	mov	r0, r4
 8009cd4:	f7ff fbca 	bl	800946c <_ZN13Screen5x5View15updateScoreTextEv>
    for (int i = 0; i < 5; ++i)
 8009cd8:	f504 59c4 	add.w	r9, r4, #6272	@ 0x1880
    updateScoreText();
 8009cdc:	2768      	movs	r7, #104	@ 0x68
            tiles[i][j]->moveTo((j) * TILE_SIZE,tileOffsetY + i * TILE_SIZE);
 8009cde:	f1a7 0a18 	sub.w	sl, r7, #24
 8009ce2:	fa0f fa8a 	sxth.w	sl, sl
            tiles[i][j]->centerY = tileOffsetY + i * TILE_SIZE + TILE_SIZE / 2;
 8009ce6:	46c8      	mov	r8, r9
 8009ce8:	2600      	movs	r6, #0
            tiles[i][j]->setValue(0); // ẩn ban đầu
 8009cea:	f858 0f04 	ldr.w	r0, [r8, #4]!
 8009cee:	2100      	movs	r1, #0
 8009cf0:	f001 fc96 	bl	800b620 <_ZN7Tile5x58setValueEt>
            tiles[i][j]->moveTo((j) * TILE_SIZE,tileOffsetY + i * TILE_SIZE);
 8009cf4:	f8d8 0000 	ldr.w	r0, [r8]
 8009cf8:	6803      	ldr	r3, [r0, #0]
 8009cfa:	4652      	mov	r2, sl
 8009cfc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8009cfe:	b231      	sxth	r1, r6
 8009d00:	4798      	blx	r3
            tiles[i][j]->centerX = (j) * TILE_SIZE + TILE_SIZE / 2;
 8009d02:	f106 0218 	add.w	r2, r6, #24
 8009d06:	f8d8 3000 	ldr.w	r3, [r8]
        for (int j = 0; j < 5; ++j)
 8009d0a:	3630      	adds	r6, #48	@ 0x30
 8009d0c:	2ef0      	cmp	r6, #240	@ 0xf0
            tiles[i][j]->centerY = tileOffsetY + i * TILE_SIZE + TILE_SIZE / 2;
 8009d0e:	e9c3 2730 	strd	r2, r7, [r3, #192]	@ 0xc0
        for (int j = 0; j < 5; ++j)
 8009d12:	d1ea      	bne.n	8009cea <_ZN13Screen5x5View11setupScreenEv+0x46>
    for (int i = 0; i < 5; ++i)
 8009d14:	3730      	adds	r7, #48	@ 0x30
 8009d16:	f5b7 7fac 	cmp.w	r7, #344	@ 0x158
 8009d1a:	f109 0914 	add.w	r9, r9, #20
 8009d1e:	d1de      	bne.n	8009cde <_ZN13Screen5x5View11setupScreenEv+0x3a>
    tiles[0][0]->setValue(2);
 8009d20:	f8d5 0884 	ldr.w	r0, [r5, #2180]	@ 0x884
 8009d24:	2102      	movs	r1, #2
 8009d26:	f001 fc7b 	bl	800b620 <_ZN7Tile5x58setValueEt>
    tiles[0][1]->setValue(2);
 8009d2a:	f8d5 0888 	ldr.w	r0, [r5, #2184]	@ 0x888
 8009d2e:	2102      	movs	r1, #2
 8009d30:	f001 fc76 	bl	800b620 <_ZN7Tile5x58setValueEt>
    Screen5x5ViewBase::setupScreen();
 8009d34:	4620      	mov	r0, r4
}
 8009d36:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    Screen5x5ViewBase::setupScreen();
 8009d3a:	f7fb bbaf 	b.w	800549c <_ZN17Screen5x5ViewBase11setupScreenEv>
 8009d3e:	bf00      	nop
 8009d40:	200031ac 	.word	0x200031ac

08009d44 <_ZN32Screen5x5_letterMergingPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen5x5_letterMergingPresenter() {}
 8009d44:	4770      	bx	lr

08009d46 <_ZThn4_N32Screen5x5_letterMergingPresenterD1Ev>:
 8009d46:	3804      	subs	r0, #4
 8009d48:	4770      	bx	lr

08009d4a <_ZN32Screen5x5_letterMergingPresenter10deactivateEv>:
}

void Screen5x5_letterMergingPresenter::activate()
{

}
 8009d4a:	4770      	bx	lr

08009d4c <_ZN32Screen5x5_letterMergingPresenterD0Ev>:
 8009d4c:	b510      	push	{r4, lr}
 8009d4e:	2110      	movs	r1, #16
 8009d50:	4604      	mov	r4, r0
 8009d52:	f01f fcdf 	bl	8029714 <_ZdlPvj>
 8009d56:	4620      	mov	r0, r4
 8009d58:	bd10      	pop	{r4, pc}

08009d5a <_ZThn4_N32Screen5x5_letterMergingPresenterD0Ev>:
 8009d5a:	f1a0 0004 	sub.w	r0, r0, #4
 8009d5e:	e7f5      	b.n	8009d4c <_ZN32Screen5x5_letterMergingPresenterD0Ev>

08009d60 <_ZN32Screen5x5_letterMergingPresenterC1ER27Screen5x5_letterMergingView>:
 8009d60:	2200      	movs	r2, #0
 8009d62:	6082      	str	r2, [r0, #8]
    : view(v)
 8009d64:	4a02      	ldr	r2, [pc, #8]	@ (8009d70 <_ZN32Screen5x5_letterMergingPresenterC1ER27Screen5x5_letterMergingView+0x10>)
 8009d66:	6002      	str	r2, [r0, #0]
 8009d68:	3218      	adds	r2, #24
 8009d6a:	6042      	str	r2, [r0, #4]
 8009d6c:	60c1      	str	r1, [r0, #12]
}
 8009d6e:	4770      	bx	lr
 8009d70:	0802dcf0 	.word	0x0802dcf0

08009d74 <_ZN27Screen5x5_letterMergingView14tearDownScreenEv>:
}

void Screen5x5_letterMergingView::tearDownScreen()
{
    Screen5x5_letterMergingViewBase::tearDownScreen();
}
 8009d74:	4770      	bx	lr
	...

08009d78 <_ZN27Screen5x5_letterMergingViewD1Ev>:

class Screen5x5_letterMergingView : public Screen5x5_letterMergingViewBase
{
public:
    Screen5x5_letterMergingView();
    virtual ~Screen5x5_letterMergingView() {}
 8009d78:	b510      	push	{r4, lr}
 8009d7a:	4b03      	ldr	r3, [pc, #12]	@ (8009d88 <_ZN27Screen5x5_letterMergingViewD1Ev+0x10>)
 8009d7c:	6003      	str	r3, [r0, #0]
 8009d7e:	4604      	mov	r4, r0
 8009d80:	f7fb ffd0 	bl	8005d24 <_ZN31Screen5x5_letterMergingViewBaseD1Ev>
 8009d84:	4620      	mov	r0, r4
 8009d86:	bd10      	pop	{r4, pc}
 8009d88:	0802dd18 	.word	0x0802dd18

08009d8c <_ZN27Screen5x5_letterMergingViewD0Ev>:
 8009d8c:	b510      	push	{r4, lr}
 8009d8e:	4604      	mov	r4, r0
 8009d90:	f7ff fff2 	bl	8009d78 <_ZN27Screen5x5_letterMergingViewD1Ev>
 8009d94:	4620      	mov	r0, r4
 8009d96:	f241 1134 	movw	r1, #4404	@ 0x1134
 8009d9a:	f01f fcbb 	bl	8029714 <_ZdlPvj>
 8009d9e:	4620      	mov	r0, r4
 8009da0:	bd10      	pop	{r4, pc}
	...

08009da4 <_ZN27Screen5x5_letterMergingView6myRandEv>:
    seed = seed * 1664525UL + 1013904223UL;
 8009da4:	4b03      	ldr	r3, [pc, #12]	@ (8009db4 <_ZN27Screen5x5_letterMergingView6myRandEv+0x10>)
 8009da6:	4904      	ldr	r1, [pc, #16]	@ (8009db8 <_ZN27Screen5x5_letterMergingView6myRandEv+0x14>)
 8009da8:	681a      	ldr	r2, [r3, #0]
 8009daa:	4804      	ldr	r0, [pc, #16]	@ (8009dbc <_ZN27Screen5x5_letterMergingView6myRandEv+0x18>)
 8009dac:	fb01 0002 	mla	r0, r1, r2, r0
 8009db0:	6018      	str	r0, [r3, #0]
}
 8009db2:	4770      	bx	lr
 8009db4:	20000024 	.word	0x20000024
 8009db8:	0019660d 	.word	0x0019660d
 8009dbc:	3c6ef35f 	.word	0x3c6ef35f

08009dc0 <_ZN27Screen5x5_letterMergingViewC1Ev>:
Screen5x5_letterMergingView::Screen5x5_letterMergingView()
 8009dc0:	b510      	push	{r4, lr}
 8009dc2:	4604      	mov	r4, r0
 8009dc4:	f7fc f81e 	bl	8005e04 <_ZN31Screen5x5_letterMergingViewBaseC1Ev>
 8009dc8:	4b24      	ldr	r3, [pc, #144]	@ (8009e5c <_ZN27Screen5x5_letterMergingViewC1Ev+0x9c>)
 8009dca:	6023      	str	r3, [r4, #0]
 8009dcc:	2200      	movs	r2, #0
 8009dce:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 8009dd2:	e9c3 224b 	strd	r2, r2, [r3, #300]	@ 0x12c
    tiles[0][0] = &tile_letter1;
 8009dd6:	f504 72c2 	add.w	r2, r4, #388	@ 0x184
 8009dda:	f8c3 20cc 	str.w	r2, [r3, #204]	@ 0xcc
    tiles[0][1] = &tile_letter2;
 8009dde:	f504 7213 	add.w	r2, r4, #588	@ 0x24c
 8009de2:	f8c3 20d0 	str.w	r2, [r3, #208]	@ 0xd0
    tiles[0][2] = &tile_letter3;
 8009de6:	f504 7245 	add.w	r2, r4, #788	@ 0x314
 8009dea:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    tiles[0][3] = &tile_letter4;
 8009dee:	f504 7277 	add.w	r2, r4, #988	@ 0x3dc
 8009df2:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
    tiles[1][0] = &tile_letter5;
 8009df6:	f204 42a4 	addw	r2, r4, #1188	@ 0x4a4
 8009dfa:	f8c3 20dc 	str.w	r2, [r3, #220]	@ 0xdc
    tiles[1][1] = &tile_letter6;
 8009dfe:	f204 526c 	addw	r2, r4, #1388	@ 0x56c
 8009e02:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
    tiles[1][2] = &tile_letter7;
 8009e06:	f204 6234 	addw	r2, r4, #1588	@ 0x634
 8009e0a:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
    tiles[1][3] = &tile_letter8;
 8009e0e:	f204 62fc 	addw	r2, r4, #1788	@ 0x6fc
 8009e12:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
    tiles[2][0] = &tile_letter9;
 8009e16:	f204 72c4 	addw	r2, r4, #1988	@ 0x7c4
 8009e1a:	f8c3 20ec 	str.w	r2, [r3, #236]	@ 0xec
    tiles[2][1] = &tile_letter10;
 8009e1e:	f604 028c 	addw	r2, r4, #2188	@ 0x88c
 8009e22:	f8c3 20f0 	str.w	r2, [r3, #240]	@ 0xf0
    tiles[2][2] = &tile_letter11;
 8009e26:	f604 1254 	addw	r2, r4, #2388	@ 0x954
 8009e2a:	f8c3 20f4 	str.w	r2, [r3, #244]	@ 0xf4
    tiles[2][3] = &tile_letter12;
 8009e2e:	f604 221c 	addw	r2, r4, #2588	@ 0xa1c
 8009e32:	f8c3 20f8 	str.w	r2, [r3, #248]	@ 0xf8
    tiles[3][0] = &tile_letter13;
 8009e36:	f604 22e4 	addw	r2, r4, #2788	@ 0xae4
 8009e3a:	f8c3 20fc 	str.w	r2, [r3, #252]	@ 0xfc
    tiles[3][1] = &tile_letter14;
 8009e3e:	f604 32ac 	addw	r2, r4, #2988	@ 0xbac
 8009e42:	f8c3 2100 	str.w	r2, [r3, #256]	@ 0x100
    tiles[3][2] = &tile_letter15;
 8009e46:	f604 4274 	addw	r2, r4, #3188	@ 0xc74
 8009e4a:	f8c3 2104 	str.w	r2, [r3, #260]	@ 0x104
    tiles[3][3] = &tile_letter16;
 8009e4e:	f604 523c 	addw	r2, r4, #3388	@ 0xd3c
 8009e52:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108
}
 8009e56:	4620      	mov	r0, r4
 8009e58:	bd10      	pop	{r4, pc}
 8009e5a:	bf00      	nop
 8009e5c:	0802dd18 	.word	0x0802dd18

08009e60 <_ZN27Screen5x5_letterMergingView15updateScoreTextEv>:
        navigateToGameOverScreen();
    }
}
//cap nhat diem
void Screen5x5_letterMergingView::updateScoreText()
{   
 8009e60:	b538      	push	{r3, r4, r5, lr}
    GameGlobal::yourScore = score;
 8009e62:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
 8009e66:	4b0a      	ldr	r3, [pc, #40]	@ (8009e90 <_ZN27Screen5x5_letterMergingView15updateScoreTextEv+0x30>)
 8009e68:	f8d5 112c 	ldr.w	r1, [r5, #300]	@ 0x12c
 8009e6c:	6019      	str	r1, [r3, #0]
    GameGlobal::bestScore = bestScore;
 8009e6e:	4b09      	ldr	r3, [pc, #36]	@ (8009e94 <_ZN27Screen5x5_letterMergingView15updateScoreTextEv+0x34>)
 8009e70:	f8d5 2130 	ldr.w	r2, [r5, #304]	@ 0x130
 8009e74:	601a      	str	r2, [r3, #0]
{   
 8009e76:	4604      	mov	r4, r0
    scoreContainer.setScore(score);
 8009e78:	f600 6004 	addw	r0, r0, #3588	@ 0xe04
 8009e7c:	f7fe fd6a 	bl	8008954 <_ZN5Score8setScoreEm>
    bestContainer.setScore(bestScore);
 8009e80:	f8d5 1130 	ldr.w	r1, [r5, #304]	@ 0x130
 8009e84:	f604 7018 	addw	r0, r4, #3864	@ 0xf18
}
 8009e88:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    bestContainer.setScore(bestScore);
 8009e8c:	f7fd be64 	b.w	8007b58 <_ZN4Best8setScoreEm>
 8009e90:	200031a8 	.word	0x200031a8
 8009e94:	200031ac 	.word	0x200031ac

08009e98 <_ZN27Screen5x5_letterMergingView8moveLeftEv>:
//di chuyen trai
void Screen5x5_letterMergingView::moveLeft()
{
 8009e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e9c:	f500 5686 	add.w	r6, r0, #4288	@ 0x10c0
 8009ea0:	b089      	sub	sp, #36	@ 0x24
 8009ea2:	4605      	mov	r5, r0
 8009ea4:	360c      	adds	r6, #12
    for (int row = 0; row < 4; ++row)
 8009ea6:	2700      	movs	r7, #0
    {
        int merged[4] = {0}; // theo dõi các tile đã merge
 8009ea8:	2210      	movs	r2, #16
 8009eaa:	2100      	movs	r1, #0
 8009eac:	eb0d 0002 	add.w	r0, sp, r2
 8009eb0:	f020 fd73 	bl	802a99a <memset>

        for (int col = 1; col < 4; ++col)
 8009eb4:	00bb      	lsls	r3, r7, #2
 8009eb6:	9301      	str	r3, [sp, #4]
        int merged[4] = {0}; // theo dõi các tile đã merge
 8009eb8:	46b1      	mov	r9, r6
        for (int col = 1; col < 4; ++col)
 8009eba:	f04f 0801 	mov.w	r8, #1
        {
            if (tiles[row][col]->getValue() == 0xFFFF) continue;
 8009ebe:	f859 0f04 	ldr.w	r0, [r9, #4]!
 8009ec2:	f001 fdcf 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 8009ec6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8009eca:	4298      	cmp	r0, r3
 8009ecc:	d01d      	beq.n	8009f0a <_ZN27Screen5x5_letterMergingView8moveLeftEv+0x72>
 8009ece:	46ca      	mov	sl, r9

            int currentCol = col;
 8009ed0:	46c3      	mov	fp, r8
            while (currentCol > 0 &&
                   tiles[row][currentCol - 1]->getValue() == 0xFFFF)
 8009ed2:	f85a 0d04 	ldr.w	r0, [sl, #-4]!
 8009ed6:	f001 fdc5 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
            while (currentCol > 0 &&
 8009eda:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8009ede:	4298      	cmp	r0, r3
 8009ee0:	465c      	mov	r4, fp
                   tiles[row][currentCol - 1]->getValue() == 0xFFFF)
 8009ee2:	f10b 3bff 	add.w	fp, fp, #4294967295
            while (currentCol > 0 &&
 8009ee6:	d11d      	bne.n	8009f24 <_ZN27Screen5x5_letterMergingView8moveLeftEv+0x8c>
            {
                tiles[row][currentCol - 1]->setValue(tiles[row][currentCol]->getValue());
 8009ee8:	e9da 4000 	ldrd	r4, r0, [sl]
 8009eec:	f001 fdba 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 8009ef0:	4601      	mov	r1, r0
 8009ef2:	4620      	mov	r0, r4
 8009ef4:	f001 fd7c 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
                tiles[row][currentCol]->setValue(0xFFFF);
 8009ef8:	f8da 0004 	ldr.w	r0, [sl, #4]
 8009efc:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8009f00:	f001 fd76 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
            while (currentCol > 0 &&
 8009f04:	f1bb 0f00 	cmp.w	fp, #0
 8009f08:	d1e3      	bne.n	8009ed2 <_ZN27Screen5x5_letterMergingView8moveLeftEv+0x3a>
        for (int col = 1; col < 4; ++col)
 8009f0a:	f108 0801 	add.w	r8, r8, #1
 8009f0e:	f1b8 0f04 	cmp.w	r8, #4
 8009f12:	d1d4      	bne.n	8009ebe <_ZN27Screen5x5_letterMergingView8moveLeftEv+0x26>
    for (int row = 0; row < 4; ++row)
 8009f14:	3701      	adds	r7, #1
 8009f16:	2f04      	cmp	r7, #4
 8009f18:	f106 0610 	add.w	r6, r6, #16
 8009f1c:	d1c4      	bne.n	8009ea8 <_ZN27Screen5x5_letterMergingView8moveLeftEv+0x10>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 8009f1e:	b009      	add	sp, #36	@ 0x24
 8009f20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            if (currentCol > 0 &&
 8009f24:	9b01      	ldr	r3, [sp, #4]
                tiles[row][currentCol - 1]->getValue() == tiles[row][currentCol]->getValue() &&
 8009f26:	1e62      	subs	r2, r4, #1
 8009f28:	18d3      	adds	r3, r2, r3
 8009f2a:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8009f2e:	f503 5b80 	add.w	fp, r3, #4096	@ 0x1000
 8009f32:	9203      	str	r2, [sp, #12]
 8009f34:	f8db 00cc 	ldr.w	r0, [fp, #204]	@ 0xcc
 8009f38:	f001 fd94 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 8009f3c:	9b01      	ldr	r3, [sp, #4]
 8009f3e:	9002      	str	r0, [sp, #8]
 8009f40:	441c      	add	r4, r3
 8009f42:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 8009f46:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
 8009f4a:	f8d4 00cc 	ldr.w	r0, [r4, #204]	@ 0xcc
 8009f4e:	f001 fd89 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
            if (currentCol > 0 &&
 8009f52:	9902      	ldr	r1, [sp, #8]
 8009f54:	9a03      	ldr	r2, [sp, #12]
 8009f56:	4281      	cmp	r1, r0
 8009f58:	d1d7      	bne.n	8009f0a <_ZN27Screen5x5_letterMergingView8moveLeftEv+0x72>
                !merged[currentCol - 1])
 8009f5a:	ab08      	add	r3, sp, #32
 8009f5c:	eb03 0282 	add.w	r2, r3, r2, lsl #2
                tiles[row][currentCol - 1]->getValue() == tiles[row][currentCol]->getValue() &&
 8009f60:	f852 1c10 	ldr.w	r1, [r2, #-16]
 8009f64:	2900      	cmp	r1, #0
 8009f66:	d1d0      	bne.n	8009f0a <_ZN27Screen5x5_letterMergingView8moveLeftEv+0x72>
                uint16_t newValue = tiles[row][currentCol - 1]->getValue() + 1;
 8009f68:	f8db 00cc 	ldr.w	r0, [fp, #204]	@ 0xcc
 8009f6c:	9202      	str	r2, [sp, #8]
 8009f6e:	f001 fd79 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 8009f72:	3001      	adds	r0, #1
 8009f74:	b283      	uxth	r3, r0
                tiles[row][currentCol - 1]->setValue(
 8009f76:	4619      	mov	r1, r3
 8009f78:	f8db 00cc 	ldr.w	r0, [fp, #204]	@ 0xcc
                uint16_t newValue = tiles[row][currentCol - 1]->getValue() + 1;
 8009f7c:	469a      	mov	sl, r3
                tiles[row][currentCol - 1]->setValue(
 8009f7e:	f001 fd37 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
                tiles[row][currentCol]->setValue(0xFFFF);
 8009f82:	f8d4 00cc 	ldr.w	r0, [r4, #204]	@ 0xcc
 8009f86:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8009f8a:	f001 fd31 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
                merged[currentCol - 1] = 1;
 8009f8e:	9a02      	ldr	r2, [sp, #8]
 8009f90:	2301      	movs	r3, #1
 8009f92:	f842 3c10 	str.w	r3, [r2, #-16]
                score += newValue;
 8009f96:	f505 5280 	add.w	r2, r5, #4096	@ 0x1000
                updateScoreText();
 8009f9a:	4628      	mov	r0, r5
                score += newValue;
 8009f9c:	f8d2 312c 	ldr.w	r3, [r2, #300]	@ 0x12c
                if (score > bestScore)
 8009fa0:	f8d2 1130 	ldr.w	r1, [r2, #304]	@ 0x130
                score += newValue;
 8009fa4:	4453      	add	r3, sl
                if (score > bestScore)
 8009fa6:	428b      	cmp	r3, r1
                score += newValue;
 8009fa8:	f8c2 312c 	str.w	r3, [r2, #300]	@ 0x12c
                bestScore = score;
 8009fac:	bf88      	it	hi
 8009fae:	f8c2 3130 	strhi.w	r3, [r2, #304]	@ 0x130
                updateScoreText();
 8009fb2:	f7ff ff55 	bl	8009e60 <_ZN27Screen5x5_letterMergingView15updateScoreTextEv>
 8009fb6:	e7a8      	b.n	8009f0a <_ZN27Screen5x5_letterMergingView8moveLeftEv+0x72>

08009fb8 <_ZN27Screen5x5_letterMergingView9moveRightEv>:
void Screen5x5_letterMergingView::moveRight()
{
 8009fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009fbc:	f500 5686 	add.w	r6, r0, #4288	@ 0x10c0
 8009fc0:	b089      	sub	sp, #36	@ 0x24
 8009fc2:	4605      	mov	r5, r0
 8009fc4:	3618      	adds	r6, #24
    for (int row = 0; row < 4; ++row)
 8009fc6:	2700      	movs	r7, #0
    {
        int merged[4] = {0};
 8009fc8:	2210      	movs	r2, #16
 8009fca:	2100      	movs	r1, #0
 8009fcc:	eb0d 0002 	add.w	r0, sp, r2
 8009fd0:	f020 fce3 	bl	802a99a <memset>

        for (int col = 2; col >= 0; --col)
 8009fd4:	00bb      	lsls	r3, r7, #2
 8009fd6:	9301      	str	r3, [sp, #4]
        int merged[4] = {0};
 8009fd8:	46b1      	mov	r9, r6
        for (int col = 2; col >= 0; --col)
 8009fda:	f04f 0802 	mov.w	r8, #2
        {
            if (tiles[row][col]->getValue() == 0xFFFF) continue;
 8009fde:	f859 0d04 	ldr.w	r0, [r9, #-4]!
 8009fe2:	f001 fd3f 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 8009fe6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8009fea:	4298      	cmp	r0, r3
 8009fec:	d021      	beq.n	800a032 <_ZN27Screen5x5_letterMergingView9moveRightEv+0x7a>
 8009fee:	46ca      	mov	sl, r9

            int currentCol = col;
 8009ff0:	46c3      	mov	fp, r8
            while (currentCol < 3 && tiles[row][currentCol + 1]->getValue() == 0xFFFF)
 8009ff2:	f8da 0004 	ldr.w	r0, [sl, #4]
 8009ff6:	f8cd a008 	str.w	sl, [sp, #8]
 8009ffa:	f001 fd33 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 8009ffe:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800a002:	4298      	cmp	r0, r3
 800a004:	465c      	mov	r4, fp
 800a006:	f10b 0b01 	add.w	fp, fp, #1
 800a00a:	d11d      	bne.n	800a048 <_ZN27Screen5x5_letterMergingView9moveRightEv+0x90>
            {
                tiles[row][currentCol + 1]->setValue(tiles[row][currentCol]->getValue());
 800a00c:	9902      	ldr	r1, [sp, #8]
 800a00e:	f8da 4004 	ldr.w	r4, [sl, #4]
 800a012:	6808      	ldr	r0, [r1, #0]
 800a014:	f001 fd26 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a018:	4601      	mov	r1, r0
 800a01a:	4620      	mov	r0, r4
 800a01c:	f001 fce8 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
                tiles[row][currentCol]->setValue(0xFFFF);
 800a020:	f85a 0b04 	ldr.w	r0, [sl], #4
 800a024:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800a028:	f001 fce2 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
            while (currentCol < 3 && tiles[row][currentCol + 1]->getValue() == 0xFFFF)
 800a02c:	f1bb 0f03 	cmp.w	fp, #3
 800a030:	d1df      	bne.n	8009ff2 <_ZN27Screen5x5_letterMergingView9moveRightEv+0x3a>
        for (int col = 2; col >= 0; --col)
 800a032:	f1b8 0801 	subs.w	r8, r8, #1
 800a036:	d2d2      	bcs.n	8009fde <_ZN27Screen5x5_letterMergingView9moveRightEv+0x26>
    for (int row = 0; row < 4; ++row)
 800a038:	3701      	adds	r7, #1
 800a03a:	2f04      	cmp	r7, #4
 800a03c:	f106 0610 	add.w	r6, r6, #16
 800a040:	d1c2      	bne.n	8009fc8 <_ZN27Screen5x5_letterMergingView9moveRightEv+0x10>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 800a042:	b009      	add	sp, #36	@ 0x24
 800a044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            if (currentCol < 3 &&
 800a048:	9b01      	ldr	r3, [sp, #4]
                tiles[row][currentCol + 1]->getValue() == tiles[row][currentCol]->getValue() &&
 800a04a:	1c62      	adds	r2, r4, #1
 800a04c:	18d3      	adds	r3, r2, r3
 800a04e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800a052:	f503 5b80 	add.w	fp, r3, #4096	@ 0x1000
 800a056:	9203      	str	r2, [sp, #12]
 800a058:	f8db 00cc 	ldr.w	r0, [fp, #204]	@ 0xcc
 800a05c:	f001 fd02 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a060:	9b01      	ldr	r3, [sp, #4]
 800a062:	9002      	str	r0, [sp, #8]
 800a064:	441c      	add	r4, r3
 800a066:	eb05 0484 	add.w	r4, r5, r4, lsl #2
 800a06a:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
 800a06e:	f8d4 00cc 	ldr.w	r0, [r4, #204]	@ 0xcc
 800a072:	f001 fcf7 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
            if (currentCol < 3 &&
 800a076:	9902      	ldr	r1, [sp, #8]
 800a078:	9a03      	ldr	r2, [sp, #12]
 800a07a:	4281      	cmp	r1, r0
 800a07c:	d1d9      	bne.n	800a032 <_ZN27Screen5x5_letterMergingView9moveRightEv+0x7a>
                !merged[currentCol + 1])
 800a07e:	ab08      	add	r3, sp, #32
 800a080:	eb03 0282 	add.w	r2, r3, r2, lsl #2
                tiles[row][currentCol + 1]->getValue() == tiles[row][currentCol]->getValue() &&
 800a084:	f852 1c10 	ldr.w	r1, [r2, #-16]
 800a088:	2900      	cmp	r1, #0
 800a08a:	d1d2      	bne.n	800a032 <_ZN27Screen5x5_letterMergingView9moveRightEv+0x7a>
                uint16_t newValue = tiles[row][currentCol + 1]->getValue() + 1;
 800a08c:	f8db 00cc 	ldr.w	r0, [fp, #204]	@ 0xcc
 800a090:	9202      	str	r2, [sp, #8]
 800a092:	f001 fce7 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a096:	3001      	adds	r0, #1
 800a098:	b283      	uxth	r3, r0
                tiles[row][currentCol + 1]->setValue(
 800a09a:	4619      	mov	r1, r3
 800a09c:	f8db 00cc 	ldr.w	r0, [fp, #204]	@ 0xcc
                uint16_t newValue = tiles[row][currentCol + 1]->getValue() + 1;
 800a0a0:	469a      	mov	sl, r3
                tiles[row][currentCol + 1]->setValue(
 800a0a2:	f001 fca5 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
                tiles[row][currentCol]->setValue(0xFFFF);
 800a0a6:	f8d4 00cc 	ldr.w	r0, [r4, #204]	@ 0xcc
 800a0aa:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800a0ae:	f001 fc9f 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
                merged[currentCol + 1] = 1;
 800a0b2:	9a02      	ldr	r2, [sp, #8]
 800a0b4:	2301      	movs	r3, #1
 800a0b6:	f842 3c10 	str.w	r3, [r2, #-16]
                score += newValue;
 800a0ba:	f505 5280 	add.w	r2, r5, #4096	@ 0x1000
                updateScoreText();
 800a0be:	4628      	mov	r0, r5
                score += newValue;
 800a0c0:	f8d2 312c 	ldr.w	r3, [r2, #300]	@ 0x12c
                if (score > bestScore)
 800a0c4:	f8d2 1130 	ldr.w	r1, [r2, #304]	@ 0x130
                score += newValue;
 800a0c8:	4453      	add	r3, sl
                if (score > bestScore)
 800a0ca:	428b      	cmp	r3, r1
                score += newValue;
 800a0cc:	f8c2 312c 	str.w	r3, [r2, #300]	@ 0x12c
                bestScore = score;
 800a0d0:	bf88      	it	hi
 800a0d2:	f8c2 3130 	strhi.w	r3, [r2, #304]	@ 0x130
                updateScoreText();
 800a0d6:	f7ff fec3 	bl	8009e60 <_ZN27Screen5x5_letterMergingView15updateScoreTextEv>
 800a0da:	e7aa      	b.n	800a032 <_ZN27Screen5x5_letterMergingView9moveRightEv+0x7a>

0800a0dc <_ZN27Screen5x5_letterMergingView6moveUpEv>:
void Screen5x5_letterMergingView::moveUp()
{
 800a0dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a0e0:	f500 5886 	add.w	r8, r0, #4288	@ 0x10c0
 800a0e4:	b087      	sub	sp, #28
 800a0e6:	4606      	mov	r6, r0
 800a0e8:	f108 080c 	add.w	r8, r8, #12
    for (int col = 0; col < 4; ++col)
 800a0ec:	2700      	movs	r7, #0
    {
        int merged[4] = {0};

        for (int row = 1; row < 4; ++row)
        {
            if (tiles[row][col]->getValue() == 0xFFFF) continue;
 800a0ee:	f64f 7bff 	movw	fp, #65535	@ 0xffff
        int merged[4] = {0};
 800a0f2:	2210      	movs	r2, #16
 800a0f4:	2100      	movs	r1, #0
 800a0f6:	a802      	add	r0, sp, #8
 800a0f8:	f020 fc4f 	bl	802a99a <memset>
 800a0fc:	46c2      	mov	sl, r8
        for (int row = 1; row < 4; ++row)
 800a0fe:	f04f 0901 	mov.w	r9, #1
            if (tiles[row][col]->getValue() == 0xFFFF) continue;
 800a102:	f8da 0010 	ldr.w	r0, [sl, #16]
 800a106:	f001 fcad 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a10a:	4558      	cmp	r0, fp
 800a10c:	d01a      	beq.n	800a144 <_ZN27Screen5x5_letterMergingView6moveUpEv+0x68>
 800a10e:	4654      	mov	r4, sl

            int currentRow = row;
 800a110:	464b      	mov	r3, r9
            while (currentRow > 0 && tiles[currentRow - 1][col]->getValue() == 0xFFFF)
 800a112:	6820      	ldr	r0, [r4, #0]
 800a114:	461d      	mov	r5, r3
 800a116:	3b01      	subs	r3, #1
 800a118:	e9cd 3300 	strd	r3, r3, [sp]
 800a11c:	f001 fca2 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a120:	4558      	cmp	r0, fp
 800a122:	d11e      	bne.n	800a162 <_ZN27Screen5x5_letterMergingView6moveUpEv+0x86>
            {
                tiles[currentRow - 1][col]->setValue(tiles[currentRow][col]->getValue());
 800a124:	6920      	ldr	r0, [r4, #16]
 800a126:	6825      	ldr	r5, [r4, #0]
 800a128:	f001 fc9c 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a12c:	4601      	mov	r1, r0
 800a12e:	4628      	mov	r0, r5
 800a130:	f001 fc5e 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
                tiles[currentRow][col]->setValue(0xFFFF);
 800a134:	6920      	ldr	r0, [r4, #16]
 800a136:	4659      	mov	r1, fp
 800a138:	f001 fc5a 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
            while (currentRow > 0 && tiles[currentRow - 1][col]->getValue() == 0xFFFF)
 800a13c:	9b00      	ldr	r3, [sp, #0]
 800a13e:	3c10      	subs	r4, #16
 800a140:	2b00      	cmp	r3, #0
 800a142:	d1e6      	bne.n	800a112 <_ZN27Screen5x5_letterMergingView6moveUpEv+0x36>
        for (int row = 1; row < 4; ++row)
 800a144:	f109 0901 	add.w	r9, r9, #1
 800a148:	f1b9 0f04 	cmp.w	r9, #4
 800a14c:	f10a 0a10 	add.w	sl, sl, #16
 800a150:	d1d7      	bne.n	800a102 <_ZN27Screen5x5_letterMergingView6moveUpEv+0x26>
    for (int col = 0; col < 4; ++col)
 800a152:	3701      	adds	r7, #1
 800a154:	2f04      	cmp	r7, #4
 800a156:	f108 0804 	add.w	r8, r8, #4
 800a15a:	d1ca      	bne.n	800a0f2 <_ZN27Screen5x5_letterMergingView6moveUpEv+0x16>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 800a15c:	b007      	add	sp, #28
 800a15e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                tiles[currentRow - 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 800a162:	1e6c      	subs	r4, r5, #1
 800a164:	00a3      	lsls	r3, r4, #2
 800a166:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800a16a:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 800a16e:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
 800a172:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 800a176:	f8d4 00cc 	ldr.w	r0, [r4, #204]	@ 0xcc
 800a17a:	9301      	str	r3, [sp, #4]
 800a17c:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 800a180:	f001 fc70 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a184:	f505 5580 	add.w	r5, r5, #4096	@ 0x1000
 800a188:	9000      	str	r0, [sp, #0]
 800a18a:	f8d5 00cc 	ldr.w	r0, [r5, #204]	@ 0xcc
 800a18e:	f001 fc69 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
            if (currentRow > 0 &&
 800a192:	9a00      	ldr	r2, [sp, #0]
 800a194:	9b01      	ldr	r3, [sp, #4]
 800a196:	4282      	cmp	r2, r0
 800a198:	d1d4      	bne.n	800a144 <_ZN27Screen5x5_letterMergingView6moveUpEv+0x68>
                !merged[currentRow - 1])
 800a19a:	3318      	adds	r3, #24
 800a19c:	446b      	add	r3, sp
                tiles[currentRow - 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 800a19e:	f853 2c10 	ldr.w	r2, [r3, #-16]
 800a1a2:	2a00      	cmp	r2, #0
 800a1a4:	d1ce      	bne.n	800a144 <_ZN27Screen5x5_letterMergingView6moveUpEv+0x68>
                uint16_t newValue = tiles[currentRow - 1][col]->getValue() + 1;
 800a1a6:	f8d4 00cc 	ldr.w	r0, [r4, #204]	@ 0xcc
 800a1aa:	9301      	str	r3, [sp, #4]
 800a1ac:	f001 fc5a 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a1b0:	1c41      	adds	r1, r0, #1
 800a1b2:	b28a      	uxth	r2, r1
                tiles[currentRow - 1][col]->setValue(
 800a1b4:	4611      	mov	r1, r2
 800a1b6:	f8d4 00cc 	ldr.w	r0, [r4, #204]	@ 0xcc
 800a1ba:	9200      	str	r2, [sp, #0]
 800a1bc:	f001 fc18 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
                tiles[currentRow][col]->setValue(0xFFFF);
 800a1c0:	f8d5 00cc 	ldr.w	r0, [r5, #204]	@ 0xcc
 800a1c4:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800a1c8:	f001 fc12 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
                merged[currentRow - 1] = 1;
 800a1cc:	9b01      	ldr	r3, [sp, #4]
                score += newValue;
 800a1ce:	9a00      	ldr	r2, [sp, #0]
                merged[currentRow - 1] = 1;
 800a1d0:	2101      	movs	r1, #1
 800a1d2:	f843 1c10 	str.w	r1, [r3, #-16]
                score += newValue;
 800a1d6:	f506 5380 	add.w	r3, r6, #4096	@ 0x1000
                updateScoreText();
 800a1da:	4630      	mov	r0, r6
                score += newValue;
 800a1dc:	f8d3 112c 	ldr.w	r1, [r3, #300]	@ 0x12c
 800a1e0:	4411      	add	r1, r2
                if (score > bestScore)
 800a1e2:	f8d3 2130 	ldr.w	r2, [r3, #304]	@ 0x130
                score += newValue;
 800a1e6:	f8c3 112c 	str.w	r1, [r3, #300]	@ 0x12c
                if (score > bestScore)
 800a1ea:	4291      	cmp	r1, r2
                bestScore = score;
 800a1ec:	bf88      	it	hi
 800a1ee:	f8c3 1130 	strhi.w	r1, [r3, #304]	@ 0x130
                updateScoreText();
 800a1f2:	f7ff fe35 	bl	8009e60 <_ZN27Screen5x5_letterMergingView15updateScoreTextEv>
 800a1f6:	e7a5      	b.n	800a144 <_ZN27Screen5x5_letterMergingView6moveUpEv+0x68>

0800a1f8 <_ZN27Screen5x5_letterMergingView8moveDownEv>:
void Screen5x5_letterMergingView::moveDown()
{
 800a1f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1fc:	f500 5887 	add.w	r8, r0, #4320	@ 0x10e0
 800a200:	b087      	sub	sp, #28
 800a202:	4606      	mov	r6, r0
 800a204:	f108 080c 	add.w	r8, r8, #12
    for (int col = 0; col < 4; ++col)
 800a208:	2700      	movs	r7, #0
    {
        int merged[4] = {0};
 800a20a:	2210      	movs	r2, #16
 800a20c:	2100      	movs	r1, #0
 800a20e:	a802      	add	r0, sp, #8
 800a210:	f020 fbc3 	bl	802a99a <memset>
 800a214:	46c2      	mov	sl, r8

        for (int row = 2; row >= 0; --row)
 800a216:	f04f 0902 	mov.w	r9, #2
        {
            if (tiles[row][col]->getValue() == 0xFFFF) continue;
 800a21a:	f8da 0000 	ldr.w	r0, [sl]
 800a21e:	f001 fc21 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a222:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800a226:	4298      	cmp	r0, r3
 800a228:	d01c      	beq.n	800a264 <_ZN27Screen5x5_letterMergingView8moveDownEv+0x6c>
 800a22a:	4654      	mov	r4, sl

            int currentRow = row;
 800a22c:	46cb      	mov	fp, r9
            while (currentRow < 3 && tiles[currentRow + 1][col]->getValue() == 0xFFFF)
 800a22e:	6920      	ldr	r0, [r4, #16]
 800a230:	f001 fc18 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a234:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800a238:	4298      	cmp	r0, r3
 800a23a:	465d      	mov	r5, fp
 800a23c:	f10b 0b01 	add.w	fp, fp, #1
 800a240:	d11f      	bne.n	800a282 <_ZN27Screen5x5_letterMergingView8moveDownEv+0x8a>
            {
                tiles[currentRow + 1][col]->setValue(tiles[currentRow][col]->getValue());
 800a242:	6820      	ldr	r0, [r4, #0]
 800a244:	6925      	ldr	r5, [r4, #16]
 800a246:	f001 fc0d 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a24a:	4601      	mov	r1, r0
 800a24c:	4628      	mov	r0, r5
 800a24e:	f001 fbcf 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
                tiles[currentRow][col]->setValue(0xFFFF);
 800a252:	f854 0b10 	ldr.w	r0, [r4], #16
 800a256:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800a25a:	f001 fbc9 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
            while (currentRow < 3 && tiles[currentRow + 1][col]->getValue() == 0xFFFF)
 800a25e:	f1bb 0f03 	cmp.w	fp, #3
 800a262:	d1e4      	bne.n	800a22e <_ZN27Screen5x5_letterMergingView8moveDownEv+0x36>
        for (int row = 2; row >= 0; --row)
 800a264:	f109 39ff 	add.w	r9, r9, #4294967295
 800a268:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a26c:	f1aa 0a10 	sub.w	sl, sl, #16
 800a270:	d1d3      	bne.n	800a21a <_ZN27Screen5x5_letterMergingView8moveDownEv+0x22>
    for (int col = 0; col < 4; ++col)
 800a272:	3701      	adds	r7, #1
 800a274:	2f04      	cmp	r7, #4
 800a276:	f108 0804 	add.w	r8, r8, #4
 800a27a:	d1c6      	bne.n	800a20a <_ZN27Screen5x5_letterMergingView8moveDownEv+0x12>
                bestScore = score;
                updateScoreText();
            }
        }
    }
}
 800a27c:	b007      	add	sp, #28
 800a27e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                tiles[currentRow + 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 800a282:	1c6c      	adds	r4, r5, #1
 800a284:	00a3      	lsls	r3, r4, #2
 800a286:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800a28a:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 800a28e:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
 800a292:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 800a296:	f8d4 00cc 	ldr.w	r0, [r4, #204]	@ 0xcc
 800a29a:	9301      	str	r3, [sp, #4]
 800a29c:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 800a2a0:	f001 fbe0 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a2a4:	f505 5580 	add.w	r5, r5, #4096	@ 0x1000
 800a2a8:	9000      	str	r0, [sp, #0]
 800a2aa:	f8d5 00cc 	ldr.w	r0, [r5, #204]	@ 0xcc
 800a2ae:	f001 fbd9 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
            if (currentRow < 3 &&
 800a2b2:	9a00      	ldr	r2, [sp, #0]
 800a2b4:	9b01      	ldr	r3, [sp, #4]
 800a2b6:	4282      	cmp	r2, r0
 800a2b8:	d1d4      	bne.n	800a264 <_ZN27Screen5x5_letterMergingView8moveDownEv+0x6c>
                !merged[currentRow + 1])
 800a2ba:	3318      	adds	r3, #24
 800a2bc:	446b      	add	r3, sp
                tiles[currentRow + 1][col]->getValue() == tiles[currentRow][col]->getValue() &&
 800a2be:	f853 2c10 	ldr.w	r2, [r3, #-16]
 800a2c2:	2a00      	cmp	r2, #0
 800a2c4:	d1ce      	bne.n	800a264 <_ZN27Screen5x5_letterMergingView8moveDownEv+0x6c>
                uint16_t newValue = tiles[currentRow + 1][col]->getValue() + 1;
 800a2c6:	f8d4 00cc 	ldr.w	r0, [r4, #204]	@ 0xcc
 800a2ca:	9301      	str	r3, [sp, #4]
 800a2cc:	f001 fbca 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a2d0:	1c41      	adds	r1, r0, #1
 800a2d2:	b28a      	uxth	r2, r1
                tiles[currentRow + 1][col]->setValue(
 800a2d4:	4611      	mov	r1, r2
 800a2d6:	f8d4 00cc 	ldr.w	r0, [r4, #204]	@ 0xcc
 800a2da:	9200      	str	r2, [sp, #0]
 800a2dc:	f001 fb88 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
                tiles[currentRow][col]->setValue(0xFFFF);
 800a2e0:	f8d5 00cc 	ldr.w	r0, [r5, #204]	@ 0xcc
 800a2e4:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800a2e8:	f001 fb82 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
                merged[currentRow + 1] = 1;
 800a2ec:	9b01      	ldr	r3, [sp, #4]
                score += newValue;
 800a2ee:	9a00      	ldr	r2, [sp, #0]
                merged[currentRow + 1] = 1;
 800a2f0:	2101      	movs	r1, #1
 800a2f2:	f843 1c10 	str.w	r1, [r3, #-16]
                score += newValue;
 800a2f6:	f506 5380 	add.w	r3, r6, #4096	@ 0x1000
                updateScoreText();
 800a2fa:	4630      	mov	r0, r6
                score += newValue;
 800a2fc:	f8d3 112c 	ldr.w	r1, [r3, #300]	@ 0x12c
 800a300:	4411      	add	r1, r2
                if (score > bestScore)
 800a302:	f8d3 2130 	ldr.w	r2, [r3, #304]	@ 0x130
                score += newValue;
 800a306:	f8c3 112c 	str.w	r1, [r3, #300]	@ 0x12c
                if (score > bestScore)
 800a30a:	4291      	cmp	r1, r2
                bestScore = score;
 800a30c:	bf88      	it	hi
 800a30e:	f8c3 1130 	strhi.w	r1, [r3, #304]	@ 0x130
                updateScoreText();
 800a312:	f7ff fda5 	bl	8009e60 <_ZN27Screen5x5_letterMergingView15updateScoreTextEv>
 800a316:	e7a5      	b.n	800a264 <_ZN27Screen5x5_letterMergingView8moveDownEv+0x6c>

0800a318 <_ZN27Screen5x5_letterMergingView24navigateToGameOverScreenEv>:
        navigateToGameOverScreen();
    }
    }
}
void Screen5x5_letterMergingView::navigateToGameOverScreen()
{
 800a318:	b508      	push	{r3, lr}
   static_cast<FrontendApplication*>(Application::getInstance())->gotoGameOverScreenScreenSlideTransitionEast();
 800a31a:	f00c fb3f 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
}
 800a31e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   static_cast<FrontendApplication*>(Application::getInstance())->gotoGameOverScreenScreenSlideTransitionEast();
 800a322:	f7f8 bf29 	b.w	8003178 <_ZN23FrontendApplicationBase43gotoGameOverScreenScreenSlideTransitionEastEv>

0800a326 <_ZN27Screen5x5_letterMergingView10isGameOverEv>:
bool Screen5x5_letterMergingView::isGameOver() // kiem tra xem con co the gop cac o lai voi nhau khong
{
 800a326:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a32a:	f500 5586 	add.w	r5, r0, #4288	@ 0x10c0
 800a32e:	f500 5788 	add.w	r7, r0, #4352	@ 0x1100
 800a332:	4604      	mov	r4, r0
 800a334:	3518      	adds	r5, #24
 800a336:	3718      	adds	r7, #24
    // 1. Kiểm tra còn ô trống không
    for (int r = 0; r < 4; ++r)
    {
        for (int c = 0; c < 4; ++c)
        {
            if (tiles[r][c]->getValue() == 0xFFFF)
 800a338:	f64f 78ff 	movw	r8, #65535	@ 0xffff
        for (int c = 0; c < 4; ++c)
 800a33c:	f1a5 0610 	sub.w	r6, r5, #16
            if (tiles[r][c]->getValue() == 0xFFFF)
 800a340:	f856 0f04 	ldr.w	r0, [r6, #4]!
 800a344:	f001 fb8e 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a348:	4540      	cmp	r0, r8
 800a34a:	d023      	beq.n	800a394 <_ZN27Screen5x5_letterMergingView10isGameOverEv+0x6e>
        for (int c = 0; c < 4; ++c)
 800a34c:	42ae      	cmp	r6, r5
 800a34e:	d1f7      	bne.n	800a340 <_ZN27Screen5x5_letterMergingView10isGameOverEv+0x1a>
    for (int r = 0; r < 4; ++r)
 800a350:	f106 0510 	add.w	r5, r6, #16
 800a354:	42bd      	cmp	r5, r7
 800a356:	d1f1      	bne.n	800a33c <_ZN27Screen5x5_letterMergingView10isGameOverEv+0x16>
 800a358:	f504 5486 	add.w	r4, r4, #4288	@ 0x10c0
 800a35c:	340c      	adds	r4, #12
                return false; // còn chỗ để spawn => chưa thua
        }
    }

    // 2. Kiểm tra còn ô nào có thể gộp không
    for (int r = 0; r < 4; ++r)
 800a35e:	2700      	movs	r7, #0
{
 800a360:	4626      	mov	r6, r4
    {
        for (int c = 0; c < 4; ++c)
 800a362:	2500      	movs	r5, #0
        {
            int current = tiles[r][c]->getValue();
 800a364:	f856 0b04 	ldr.w	r0, [r6], #4
 800a368:	f001 fb7c 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>

            // Kiểm tra phải
            if (c < 3 && tiles[r][c + 1]->getValue() == current)
 800a36c:	2d03      	cmp	r5, #3
            int current = tiles[r][c]->getValue();
 800a36e:	4680      	mov	r8, r0
            if (c < 3 && tiles[r][c + 1]->getValue() == current)
 800a370:	d10b      	bne.n	800a38a <_ZN27Screen5x5_letterMergingView10isGameOverEv+0x64>
                return false;

            // Kiểm tra dưới
            if (r < 3 && tiles[r + 1][c]->getValue() == current)
 800a372:	2f03      	cmp	r7, #3
 800a374:	d111      	bne.n	800a39a <_ZN27Screen5x5_letterMergingView10isGameOverEv+0x74>
        for (int c = 0; c < 4; ++c)
 800a376:	3501      	adds	r5, #1
 800a378:	2d04      	cmp	r5, #4
 800a37a:	d1f3      	bne.n	800a364 <_ZN27Screen5x5_letterMergingView10isGameOverEv+0x3e>
    for (int r = 0; r < 4; ++r)
 800a37c:	3701      	adds	r7, #1
 800a37e:	2f04      	cmp	r7, #4
 800a380:	f104 0410 	add.w	r4, r4, #16
 800a384:	d1ec      	bne.n	800a360 <_ZN27Screen5x5_letterMergingView10isGameOverEv+0x3a>
                return false;
        }
    }

    // Không còn nước đi hợp lệ
    return true;
 800a386:	2001      	movs	r0, #1
 800a388:	e005      	b.n	800a396 <_ZN27Screen5x5_letterMergingView10isGameOverEv+0x70>
            if (c < 3 && tiles[r][c + 1]->getValue() == current)
 800a38a:	6830      	ldr	r0, [r6, #0]
 800a38c:	f001 fb6a 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a390:	4580      	cmp	r8, r0
 800a392:	d1ee      	bne.n	800a372 <_ZN27Screen5x5_letterMergingView10isGameOverEv+0x4c>
                return false; // còn chỗ để spawn => chưa thua
 800a394:	2000      	movs	r0, #0
}
 800a396:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            if (r < 3 && tiles[r + 1][c]->getValue() == current)
 800a39a:	68f0      	ldr	r0, [r6, #12]
 800a39c:	f001 fb62 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a3a0:	4580      	cmp	r8, r0
 800a3a2:	d1e8      	bne.n	800a376 <_ZN27Screen5x5_letterMergingView10isGameOverEv+0x50>
 800a3a4:	e7f6      	b.n	800a394 <_ZN27Screen5x5_letterMergingView10isGameOverEv+0x6e>

0800a3a6 <_ZN27Screen5x5_letterMergingView15spawnRandomTileEv>:
{
 800a3a6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a3aa:	f500 5686 	add.w	r6, r0, #4288	@ 0x10c0
    for (int r = 0; r < 4; r++) {
 800a3ae:	2700      	movs	r7, #0
{
 800a3b0:	b0a0      	sub	sp, #128	@ 0x80
 800a3b2:	4605      	mov	r5, r0
 800a3b4:	3608      	adds	r6, #8
    int emptyCount = 0;
 800a3b6:	463c      	mov	r4, r7
            if (tiles[r][c]->getValue() == 0xFFFF) {
 800a3b8:	f64f 7aff 	movw	sl, #65535	@ 0xffff
{
 800a3bc:	46b1      	mov	r9, r6
        for (int c = 0; c < 4; c++) {
 800a3be:	f04f 0800 	mov.w	r8, #0
            if (tiles[r][c]->getValue() == 0xFFFF) {
 800a3c2:	f859 0f04 	ldr.w	r0, [r9, #4]!
 800a3c6:	f001 fb4d 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a3ca:	4550      	cmp	r0, sl
                empties[emptyCount++] = {r, c};
 800a3cc:	bf02      	ittt	eq
 800a3ce:	ab20      	addeq	r3, sp, #128	@ 0x80
 800a3d0:	eb03 03c4 	addeq.w	r3, r3, r4, lsl #3
 800a3d4:	e943 7820 	strdeq	r7, r8, [r3, #-128]	@ 0x80
        for (int c = 0; c < 4; c++) {
 800a3d8:	f108 0801 	add.w	r8, r8, #1
                empties[emptyCount++] = {r, c};
 800a3dc:	bf08      	it	eq
 800a3de:	3401      	addeq	r4, #1
        for (int c = 0; c < 4; c++) {
 800a3e0:	f1b8 0f04 	cmp.w	r8, #4
 800a3e4:	d1ed      	bne.n	800a3c2 <_ZN27Screen5x5_letterMergingView15spawnRandomTileEv+0x1c>
    for (int r = 0; r < 4; r++) {
 800a3e6:	3701      	adds	r7, #1
 800a3e8:	2f04      	cmp	r7, #4
 800a3ea:	f106 0610 	add.w	r6, r6, #16
 800a3ee:	d1e5      	bne.n	800a3bc <_ZN27Screen5x5_letterMergingView15spawnRandomTileEv+0x16>
    if (emptyCount > 0) {
 800a3f0:	2c00      	cmp	r4, #0
        int idx = myRand() % emptyCount;
 800a3f2:	4628      	mov	r0, r5
    if (emptyCount > 0) {
 800a3f4:	dd1c      	ble.n	800a430 <_ZN27Screen5x5_letterMergingView15spawnRandomTileEv+0x8a>
        int idx = myRand() % emptyCount;
 800a3f6:	f7ff fcd5 	bl	8009da4 <_ZN27Screen5x5_letterMergingView6myRandEv>
 800a3fa:	fbb0 f3f4 	udiv	r3, r0, r4
 800a3fe:	fb03 0014 	mls	r0, r3, r4, r0
        int rr = empties[idx].row;
 800a402:	ab20      	add	r3, sp, #128	@ 0x80
 800a404:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800a408:	e950 3420 	ldrd	r3, r4, [r0, #-128]	@ 0x80
 800a40c:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800a410:	eb05 0484 	add.w	r4, r5, r4, lsl #2
        tiles[rr][cc]->setValue(0);
 800a414:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
 800a418:	2100      	movs	r1, #0
 800a41a:	f8d4 00cc 	ldr.w	r0, [r4, #204]	@ 0xcc
 800a41e:	f001 fae7 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
        tiles[rr][cc]->animateSpawn();//animation spawn
 800a422:	f8d4 00cc 	ldr.w	r0, [r4, #204]	@ 0xcc
}
 800a426:	b020      	add	sp, #128	@ 0x80
 800a428:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
        tiles[rr][cc]->animateSpawn();//animation spawn
 800a42c:	f001 bb1d 	b.w	800ba6a <_ZN11Tile_letter12animateSpawnEv>
        if (isGameOver()) {
 800a430:	f7ff ff79 	bl	800a326 <_ZN27Screen5x5_letterMergingView10isGameOverEv>
 800a434:	b128      	cbz	r0, 800a442 <_ZN27Screen5x5_letterMergingView15spawnRandomTileEv+0x9c>
        navigateToGameOverScreen();
 800a436:	4628      	mov	r0, r5
}
 800a438:	b020      	add	sp, #128	@ 0x80
 800a43a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
        navigateToGameOverScreen();
 800a43e:	f7ff bf6b 	b.w	800a318 <_ZN27Screen5x5_letterMergingView24navigateToGameOverScreenEv>
}
 800a442:	b020      	add	sp, #128	@ 0x80
 800a444:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800a448 <_ZN27Screen5x5_letterMergingView15handleTickEventEv>:
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
                return true;
    return false;
}
void Screen5x5_letterMergingView::handleTickEvent()
{
 800a448:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a44c:	4604      	mov	r4, r0
    static uint32_t lastPressTime = 0;
    const uint32_t debounceDelay = 200; // Thời gian chống dội (ms)
    uint32_t currentTime = HAL_GetTick();
 800a44e:	f001 fe11 	bl	800c074 <HAL_GetTick>

    uint8_t currentState = 0;
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 800a452:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    uint32_t currentTime = HAL_GetTick();
 800a456:	4605      	mov	r5, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 800a458:	4841      	ldr	r0, [pc, #260]	@ (800a560 <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0x118>)
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK

    static uint8_t lastState = 0;

    if (currentTime - lastPressTime > debounceDelay)
 800a45a:	4e42      	ldr	r6, [pc, #264]	@ (800a564 <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0x11c>)
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 800a45c:	f002 f864 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800a460:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 800a464:	4681      	mov	r9, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800a466:	483e      	ldr	r0, [pc, #248]	@ (800a560 <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0x118>)
 800a468:	f002 f85e 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 800a46c:	2104      	movs	r1, #4
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800a46e:	4607      	mov	r7, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 800a470:	483d      	ldr	r0, [pc, #244]	@ (800a568 <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0x120>)
 800a472:	f002 f859 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 800a476:	2140      	movs	r1, #64	@ 0x40
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 800a478:	4680      	mov	r8, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 800a47a:	483b      	ldr	r0, [pc, #236]	@ (800a568 <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0x120>)
 800a47c:	f002 f854 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800a480:	2101      	movs	r1, #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 800a482:	4682      	mov	sl, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800a484:	4838      	ldr	r0, [pc, #224]	@ (800a568 <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0x120>)
 800a486:	f002 f84f 	bl	800c528 <HAL_GPIO_ReadPin>
    if (currentTime - lastPressTime > debounceDelay)
 800a48a:	6832      	ldr	r2, [r6, #0]
 800a48c:	1aaa      	subs	r2, r5, r2
 800a48e:	2ac8      	cmp	r2, #200	@ 0xc8
 800a490:	d964      	bls.n	800a55c <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0x114>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 800a492:	f10a 32ff 	add.w	r2, sl, #4294967295
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800a496:	1e41      	subs	r1, r0, #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 800a498:	f1d2 0a00 	rsbs	sl, r2, #0
 800a49c:	eb4a 0a02 	adc.w	sl, sl, r2
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800a4a0:	424b      	negs	r3, r1
 800a4a2:	414b      	adcs	r3, r1
 800a4a4:	011b      	lsls	r3, r3, #4
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 800a4a6:	f108 30ff 	add.w	r0, r8, #4294967295
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800a4aa:	ea43 03ca 	orr.w	r3, r3, sl, lsl #3
 800a4ae:	f1b9 0f01 	cmp.w	r9, #1
 800a4b2:	bf08      	it	eq
 800a4b4:	f043 0301 	orreq.w	r3, r3, #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 800a4b8:	f1d0 0800 	rsbs	r8, r0, #0
 800a4bc:	eb48 0800 	adc.w	r8, r8, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800a4c0:	f107 3cff 	add.w	ip, r7, #4294967295
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800a4c4:	ea43 0388 	orr.w	r3, r3, r8, lsl #2
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800a4c8:	f1dc 0700 	rsbs	r7, ip, #0
 800a4cc:	eb47 070c 	adc.w	r7, r7, ip
    {
        if ((currentState & 1) && !(lastState & 1)) // PB10: UP
 800a4d0:	f013 0f01 	tst.w	r3, #1
 800a4d4:	f8df 8094 	ldr.w	r8, [pc, #148]	@ 800a56c <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0x124>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800a4d8:	ea43 0747 	orr.w	r7, r3, r7, lsl #1
        if ((currentState & 1) && !(lastState & 1)) // PB10: UP
 800a4dc:	d015      	beq.n	800a50a <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xc2>
 800a4de:	f898 3000 	ldrb.w	r3, [r8]
 800a4e2:	07db      	lsls	r3, r3, #31
 800a4e4:	d411      	bmi.n	800a50a <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xc2>
        {
            moveUp();
 800a4e6:	4620      	mov	r0, r4
 800a4e8:	f7ff fdf8 	bl	800a0dc <_ZN27Screen5x5_letterMergingView6moveUpEv>
            lastPressTime = currentTime;
        }
        else if ((currentState & 8) && !(lastState & 8)) // PA6: RIGHT
        {
            moveRight();
            spawnRandomTile();
 800a4ec:	4620      	mov	r0, r4
 800a4ee:	f7ff ff5a 	bl	800a3a6 <_ZN27Screen5x5_letterMergingView15spawnRandomTileEv>
        }
        else if ((currentState & 16) && !(lastState & 16)) // PA0: BACK
        {
            // Về màn hình Chosing_mode
            application().gotoChosing_modeScreenWipeTransitionEast();
            lastPressTime = currentTime;
 800a4f2:	6035      	str	r5, [r6, #0]
        }

        lastState = currentState;

        if (isGameOver())
 800a4f4:	4620      	mov	r0, r4
        lastState = currentState;
 800a4f6:	f888 7000 	strb.w	r7, [r8]
        if (isGameOver())
 800a4fa:	f7ff ff14 	bl	800a326 <_ZN27Screen5x5_letterMergingView10isGameOverEv>
 800a4fe:	b368      	cbz	r0, 800a55c <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0x114>
        {
            navigateToGameOverScreen();
 800a500:	4620      	mov	r0, r4
        }
    }
}
 800a502:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
            navigateToGameOverScreen();
 800a506:	f7ff bf07 	b.w	800a318 <_ZN27Screen5x5_letterMergingView24navigateToGameOverScreenEv>
        else if ((currentState & 2) && !(lastState & 2)) // PB12: DOWN
 800a50a:	07b8      	lsls	r0, r7, #30
 800a50c:	d507      	bpl.n	800a51e <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xd6>
 800a50e:	f898 3000 	ldrb.w	r3, [r8]
 800a512:	0799      	lsls	r1, r3, #30
 800a514:	d403      	bmi.n	800a51e <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xd6>
            moveDown();
 800a516:	4620      	mov	r0, r4
 800a518:	f7ff fe6e 	bl	800a1f8 <_ZN27Screen5x5_letterMergingView8moveDownEv>
            spawnRandomTile();
 800a51c:	e7e6      	b.n	800a4ec <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xa4>
        else if ((currentState & 4) && !(lastState & 4)) // PA2: LEFT
 800a51e:	077a      	lsls	r2, r7, #29
 800a520:	d507      	bpl.n	800a532 <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xea>
 800a522:	f898 3000 	ldrb.w	r3, [r8]
 800a526:	075b      	lsls	r3, r3, #29
 800a528:	d403      	bmi.n	800a532 <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xea>
            moveLeft();
 800a52a:	4620      	mov	r0, r4
 800a52c:	f7ff fcb4 	bl	8009e98 <_ZN27Screen5x5_letterMergingView8moveLeftEv>
            spawnRandomTile();
 800a530:	e7dc      	b.n	800a4ec <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xa4>
        else if ((currentState & 8) && !(lastState & 8)) // PA6: RIGHT
 800a532:	0738      	lsls	r0, r7, #28
 800a534:	d507      	bpl.n	800a546 <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xfe>
 800a536:	f898 3000 	ldrb.w	r3, [r8]
 800a53a:	0719      	lsls	r1, r3, #28
 800a53c:	d403      	bmi.n	800a546 <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xfe>
            moveRight();
 800a53e:	4620      	mov	r0, r4
 800a540:	f7ff fd3a 	bl	8009fb8 <_ZN27Screen5x5_letterMergingView9moveRightEv>
 800a544:	e7d2      	b.n	800a4ec <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xa4>
        else if ((currentState & 16) && !(lastState & 16)) // PA0: BACK
 800a546:	06fa      	lsls	r2, r7, #27
 800a548:	d5d4      	bpl.n	800a4f4 <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xac>
 800a54a:	f898 3000 	ldrb.w	r3, [r8]
 800a54e:	06db      	lsls	r3, r3, #27
 800a550:	d4d0      	bmi.n	800a4f4 <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xac>
 800a552:	f00c fa23 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
            application().gotoChosing_modeScreenWipeTransitionEast();
 800a556:	f7f8 fd9f 	bl	8003098 <_ZN23FrontendApplicationBase40gotoChosing_modeScreenWipeTransitionEastEv>
 800a55a:	e7ca      	b.n	800a4f2 <_ZN27Screen5x5_letterMergingView15handleTickEventEv+0xaa>
}
 800a55c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a560:	40020400 	.word	0x40020400
 800a564:	200031d4 	.word	0x200031d4
 800a568:	40020000 	.word	0x40020000
 800a56c:	200031d0 	.word	0x200031d0

0800a570 <_ZN27Screen5x5_letterMergingView13saveGridStateEv>:
{
 800a570:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
            gridBeforeMove[i][j] = tiles[i][j]->getValue();
 800a572:	4d0a      	ldr	r5, [pc, #40]	@ (800a59c <_ZN27Screen5x5_letterMergingView13saveGridStateEv+0x2c>)
 800a574:	f500 5488 	add.w	r4, r0, #4352	@ 0x1100
 800a578:	f500 5689 	add.w	r6, r0, #4384	@ 0x1120
 800a57c:	340a      	adds	r4, #10
 800a57e:	360a      	adds	r6, #10
 800a580:	1a2d      	subs	r5, r5, r0
        for (int j = 0; j < 4; ++j)
 800a582:	f104 0708 	add.w	r7, r4, #8
            gridBeforeMove[i][j] = tiles[i][j]->getValue();
 800a586:	f855 0014 	ldr.w	r0, [r5, r4, lsl #1]
 800a58a:	f001 fa6b 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a58e:	f824 0f02 	strh.w	r0, [r4, #2]!
        for (int j = 0; j < 4; ++j)
 800a592:	42bc      	cmp	r4, r7
 800a594:	d1f7      	bne.n	800a586 <_ZN27Screen5x5_letterMergingView13saveGridStateEv+0x16>
    for (int i = 0; i < 4; ++i)
 800a596:	42a6      	cmp	r6, r4
 800a598:	d1f3      	bne.n	800a582 <_ZN27Screen5x5_letterMergingView13saveGridStateEv+0x12>
}
 800a59a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a59c:	ffffeeb8 	.word	0xffffeeb8

0800a5a0 <_ZN27Screen5x5_letterMergingView14hasGridChangedEv>:
{
 800a5a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
 800a5a4:	4c0e      	ldr	r4, [pc, #56]	@ (800a5e0 <_ZN27Screen5x5_letterMergingView14hasGridChangedEv+0x40>)
 800a5a6:	f500 5588 	add.w	r5, r0, #4352	@ 0x1100
 800a5aa:	f500 5789 	add.w	r7, r0, #4384	@ 0x1120
 800a5ae:	3512      	adds	r5, #18
 800a5b0:	3712      	adds	r7, #18
 800a5b2:	1a24      	subs	r4, r4, r0
        for (int j = 0; j < 4; ++j)
 800a5b4:	f1a5 0608 	sub.w	r6, r5, #8
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
 800a5b8:	f836 8f02 	ldrh.w	r8, [r6, #2]!
 800a5bc:	f854 0016 	ldr.w	r0, [r4, r6, lsl #1]
 800a5c0:	f001 fa50 	bl	800ba64 <_ZNK11Tile_letter8getValueEv>
 800a5c4:	4580      	cmp	r8, r0
 800a5c6:	d107      	bne.n	800a5d8 <_ZN27Screen5x5_letterMergingView14hasGridChangedEv+0x38>
        for (int j = 0; j < 4; ++j)
 800a5c8:	42ae      	cmp	r6, r5
 800a5ca:	d1f5      	bne.n	800a5b8 <_ZN27Screen5x5_letterMergingView14hasGridChangedEv+0x18>
    for (int i = 0; i < 4; ++i)
 800a5cc:	f106 0508 	add.w	r5, r6, #8
 800a5d0:	42bd      	cmp	r5, r7
 800a5d2:	d1ef      	bne.n	800a5b4 <_ZN27Screen5x5_letterMergingView14hasGridChangedEv+0x14>
    return false;
 800a5d4:	2000      	movs	r0, #0
 800a5d6:	e000      	b.n	800a5da <_ZN27Screen5x5_letterMergingView14hasGridChangedEv+0x3a>
                return true;
 800a5d8:	2001      	movs	r0, #1
}
 800a5da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a5de:	bf00      	nop
 800a5e0:	ffffeeb4 	.word	0xffffeeb4

0800a5e4 <_ZN27Screen5x5_letterMergingView18handleGestureEventERKN8touchgfx12GestureEventE>:
 800a5e4:	790b      	ldrb	r3, [r1, #4]
{
 800a5e6:	b510      	push	{r4, lr}
 800a5e8:	4604      	mov	r4, r0
    if (evt.getType() == GestureEvent::SWIPE_HORIZONTAL)
 800a5ea:	b9c3      	cbnz	r3, 800a61e <_ZN27Screen5x5_letterMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x3a>
        if (evt.getVelocity() > 0)
 800a5ec:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800a5f0:	2b00      	cmp	r3, #0
 800a5f2:	dd11      	ble.n	800a618 <_ZN27Screen5x5_letterMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x34>
             moveRight();
 800a5f4:	f7ff fce0 	bl	8009fb8 <_ZN27Screen5x5_letterMergingView9moveRightEv>
    if (hasGridChanged()) {
 800a5f8:	4620      	mov	r0, r4
 800a5fa:	f7ff ffd1 	bl	800a5a0 <_ZN27Screen5x5_letterMergingView14hasGridChangedEv>
 800a5fe:	b110      	cbz	r0, 800a606 <_ZN27Screen5x5_letterMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x22>
        spawnRandomTile();  // chi spawn neu co thay doi
 800a600:	4620      	mov	r0, r4
 800a602:	f7ff fed0 	bl	800a3a6 <_ZN27Screen5x5_letterMergingView15spawnRandomTileEv>
    if (isGameOver())
 800a606:	4620      	mov	r0, r4
 800a608:	f7ff fe8d 	bl	800a326 <_ZN27Screen5x5_letterMergingView10isGameOverEv>
 800a60c:	b198      	cbz	r0, 800a636 <_ZN27Screen5x5_letterMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x52>
        navigateToGameOverScreen();
 800a60e:	4620      	mov	r0, r4
}
 800a610:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        navigateToGameOverScreen();
 800a614:	f7ff be80 	b.w	800a318 <_ZN27Screen5x5_letterMergingView24navigateToGameOverScreenEv>
            moveLeft();
 800a618:	f7ff fc3e 	bl	8009e98 <_ZN27Screen5x5_letterMergingView8moveLeftEv>
 800a61c:	e7ec      	b.n	800a5f8 <_ZN27Screen5x5_letterMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x14>
    else if (evt.getType() == GestureEvent::SWIPE_VERTICAL)
 800a61e:	2b01      	cmp	r3, #1
 800a620:	d1ea      	bne.n	800a5f8 <_ZN27Screen5x5_letterMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x14>
        if (evt.getVelocity() > 0)
 800a622:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800a626:	2b00      	cmp	r3, #0
 800a628:	dd02      	ble.n	800a630 <_ZN27Screen5x5_letterMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x4c>
             moveDown();
 800a62a:	f7ff fde5 	bl	800a1f8 <_ZN27Screen5x5_letterMergingView8moveDownEv>
 800a62e:	e7e3      	b.n	800a5f8 <_ZN27Screen5x5_letterMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x14>
            moveUp();
 800a630:	f7ff fd54 	bl	800a0dc <_ZN27Screen5x5_letterMergingView6moveUpEv>
 800a634:	e7e0      	b.n	800a5f8 <_ZN27Screen5x5_letterMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x14>
}
 800a636:	bd10      	pop	{r4, pc}

0800a638 <_ZN27Screen5x5_letterMergingView14handleKeyEventEh>:
{   
 800a638:	b538      	push	{r3, r4, r5, lr}
 800a63a:	460d      	mov	r5, r1
 800a63c:	4604      	mov	r4, r0
    saveGridState();
 800a63e:	f7ff ff97 	bl	800a570 <_ZN27Screen5x5_letterMergingView13saveGridStateEv>
    switch (key)
 800a642:	f1a5 0132 	sub.w	r1, r5, #50	@ 0x32
 800a646:	2906      	cmp	r1, #6
 800a648:	d808      	bhi.n	800a65c <_ZN27Screen5x5_letterMergingView14handleKeyEventEh+0x24>
 800a64a:	e8df f001 	tbb	[pc, r1]
 800a64e:	071f      	.short	0x071f
 800a650:	07170704 	.word	0x07170704
 800a654:	1b          	.byte	0x1b
 800a655:	00          	.byte	0x00
        moveLeft();
 800a656:	4620      	mov	r0, r4
 800a658:	f7ff fc1e 	bl	8009e98 <_ZN27Screen5x5_letterMergingView8moveLeftEv>
    if(hasGridChanged()){
 800a65c:	4620      	mov	r0, r4
 800a65e:	f7ff ff9f 	bl	800a5a0 <_ZN27Screen5x5_letterMergingView14hasGridChangedEv>
 800a662:	b110      	cbz	r0, 800a66a <_ZN27Screen5x5_letterMergingView14handleKeyEventEh+0x32>
        spawnRandomTile();
 800a664:	4620      	mov	r0, r4
 800a666:	f7ff fe9e 	bl	800a3a6 <_ZN27Screen5x5_letterMergingView15spawnRandomTileEv>
    if (isGameOver())
 800a66a:	4620      	mov	r0, r4
 800a66c:	f7ff fe5b 	bl	800a326 <_ZN27Screen5x5_letterMergingView10isGameOverEv>
 800a670:	b180      	cbz	r0, 800a694 <_ZN27Screen5x5_letterMergingView14handleKeyEventEh+0x5c>
        navigateToGameOverScreen();
 800a672:	4620      	mov	r0, r4
}
 800a674:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        navigateToGameOverScreen();
 800a678:	f7ff be4e 	b.w	800a318 <_ZN27Screen5x5_letterMergingView24navigateToGameOverScreenEv>
        moveRight();
 800a67c:	4620      	mov	r0, r4
 800a67e:	f7ff fc9b 	bl	8009fb8 <_ZN27Screen5x5_letterMergingView9moveRightEv>
        break;
 800a682:	e7eb      	b.n	800a65c <_ZN27Screen5x5_letterMergingView14handleKeyEventEh+0x24>
        moveUp();
 800a684:	4620      	mov	r0, r4
 800a686:	f7ff fd29 	bl	800a0dc <_ZN27Screen5x5_letterMergingView6moveUpEv>
        break;
 800a68a:	e7e7      	b.n	800a65c <_ZN27Screen5x5_letterMergingView14handleKeyEventEh+0x24>
        moveDown();
 800a68c:	4620      	mov	r0, r4
 800a68e:	f7ff fdb3 	bl	800a1f8 <_ZN27Screen5x5_letterMergingView8moveDownEv>
        break;
 800a692:	e7e3      	b.n	800a65c <_ZN27Screen5x5_letterMergingView14handleKeyEventEh+0x24>
}
 800a694:	bd38      	pop	{r3, r4, r5, pc}
	...

0800a698 <_ZN27Screen5x5_letterMergingView11setupScreenEv>:
    bestScore = GameGlobal::bestScore;
 800a698:	4b27      	ldr	r3, [pc, #156]	@ (800a738 <_ZN27Screen5x5_letterMergingView11setupScreenEv+0xa0>)
{    
 800a69a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    score = 0;
 800a69e:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
    bestScore = GameGlobal::bestScore;
 800a6a2:	681b      	ldr	r3, [r3, #0]
 800a6a4:	f8c5 3130 	str.w	r3, [r5, #304]	@ 0x130
    score = 0;
 800a6a8:	2100      	movs	r1, #0
{    
 800a6aa:	4604      	mov	r4, r0
    score = 0;
 800a6ac:	f8c5 112c 	str.w	r1, [r5, #300]	@ 0x12c
    scoreContainer.setScore(score);
 800a6b0:	f600 6004 	addw	r0, r0, #3588	@ 0xe04
 800a6b4:	f7fe f94e 	bl	8008954 <_ZN5Score8setScoreEm>
    bestContainer.setScore(bestScore);
 800a6b8:	f8d5 1130 	ldr.w	r1, [r5, #304]	@ 0x130
 800a6bc:	f604 7018 	addw	r0, r4, #3864	@ 0xf18
 800a6c0:	f7fd fa4a 	bl	8007b58 <_ZN4Best8setScoreEm>
    updateScoreText();
 800a6c4:	4620      	mov	r0, r4
 800a6c6:	f7ff fbcb 	bl	8009e60 <_ZN27Screen5x5_letterMergingView15updateScoreTextEv>
    for (int i = 0; i < 4; ++i)
 800a6ca:	f504 5786 	add.w	r7, r4, #4288	@ 0x10c0
 800a6ce:	3708      	adds	r7, #8
    updateScoreText();
 800a6d0:	f04f 086e 	mov.w	r8, #110	@ 0x6e
            tiles[i][j]->moveTo((j) * TILE_SIZE,tileOffsetY + i * TILE_SIZE);
 800a6d4:	f1a8 0a1e 	sub.w	sl, r8, #30
 800a6d8:	fa0f fa8a 	sxth.w	sl, sl
            tiles[i][j]->centerY = tileOffsetY + i * TILE_SIZE + TILE_SIZE / 2;
 800a6dc:	46b9      	mov	r9, r7
 800a6de:	2600      	movs	r6, #0
            tiles[i][j]->setValue(0xFFFF); // ẩn ban đầu
 800a6e0:	f859 0f04 	ldr.w	r0, [r9, #4]!
 800a6e4:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800a6e8:	f001 f982 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
            tiles[i][j]->moveTo((j) * TILE_SIZE,tileOffsetY + i * TILE_SIZE);
 800a6ec:	f8d9 0000 	ldr.w	r0, [r9]
 800a6f0:	6803      	ldr	r3, [r0, #0]
 800a6f2:	4652      	mov	r2, sl
 800a6f4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a6f6:	b231      	sxth	r1, r6
 800a6f8:	4798      	blx	r3
            tiles[i][j]->centerX = (j) * TILE_SIZE + TILE_SIZE / 2;
 800a6fa:	f106 021e 	add.w	r2, r6, #30
 800a6fe:	f8d9 3000 	ldr.w	r3, [r9]
        for (int j = 0; j < 4; ++j)
 800a702:	363c      	adds	r6, #60	@ 0x3c
 800a704:	2ef0      	cmp	r6, #240	@ 0xf0
            tiles[i][j]->centerY = tileOffsetY + i * TILE_SIZE + TILE_SIZE / 2;
 800a706:	e9c3 282e 	strd	r2, r8, [r3, #184]	@ 0xb8
        for (int j = 0; j < 4; ++j)
 800a70a:	d1e9      	bne.n	800a6e0 <_ZN27Screen5x5_letterMergingView11setupScreenEv+0x48>
    for (int i = 0; i < 4; ++i)
 800a70c:	f108 083c 	add.w	r8, r8, #60	@ 0x3c
 800a710:	f5b8 7faf 	cmp.w	r8, #350	@ 0x15e
 800a714:	f107 0710 	add.w	r7, r7, #16
 800a718:	d1dc      	bne.n	800a6d4 <_ZN27Screen5x5_letterMergingView11setupScreenEv+0x3c>
    tiles[0][0]->setValue(0);
 800a71a:	f8d5 00cc 	ldr.w	r0, [r5, #204]	@ 0xcc
 800a71e:	2100      	movs	r1, #0
 800a720:	f001 f966 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
    tiles[0][1]->setValue(0);
 800a724:	f8d5 00d0 	ldr.w	r0, [r5, #208]	@ 0xd0
 800a728:	2100      	movs	r1, #0
 800a72a:	f001 f961 	bl	800b9f0 <_ZN11Tile_letter8setValueEt>
    Screen5x5_letterMergingViewBase::setupScreen();
 800a72e:	4620      	mov	r0, r4
}
 800a730:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    Screen5x5_letterMergingViewBase::setupScreen();
 800a734:	f7fb ba94 	b.w	8005c60 <_ZN31Screen5x5_letterMergingViewBase11setupScreenEv>
 800a738:	200031ac 	.word	0x200031ac

0800a73c <_ZN31Screen5x5_superMergingPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen5x5_superMergingPresenter() {}
 800a73c:	4770      	bx	lr

0800a73e <_ZThn4_N31Screen5x5_superMergingPresenterD1Ev>:
 800a73e:	3804      	subs	r0, #4
 800a740:	4770      	bx	lr

0800a742 <_ZN31Screen5x5_superMergingPresenter10deactivateEv>:
}

void Screen5x5_superMergingPresenter::activate()
{

}
 800a742:	4770      	bx	lr

0800a744 <_ZN31Screen5x5_superMergingPresenterD0Ev>:
 800a744:	b510      	push	{r4, lr}
 800a746:	2110      	movs	r1, #16
 800a748:	4604      	mov	r4, r0
 800a74a:	f01e ffe3 	bl	8029714 <_ZdlPvj>
 800a74e:	4620      	mov	r0, r4
 800a750:	bd10      	pop	{r4, pc}

0800a752 <_ZThn4_N31Screen5x5_superMergingPresenterD0Ev>:
 800a752:	f1a0 0004 	sub.w	r0, r0, #4
 800a756:	e7f5      	b.n	800a744 <_ZN31Screen5x5_superMergingPresenterD0Ev>

0800a758 <_ZN31Screen5x5_superMergingPresenterC1ER26Screen5x5_superMergingView>:
 800a758:	2200      	movs	r2, #0
 800a75a:	6082      	str	r2, [r0, #8]
    : view(v)
 800a75c:	4a02      	ldr	r2, [pc, #8]	@ (800a768 <_ZN31Screen5x5_superMergingPresenterC1ER26Screen5x5_superMergingView+0x10>)
 800a75e:	6002      	str	r2, [r0, #0]
 800a760:	3218      	adds	r2, #24
 800a762:	6042      	str	r2, [r0, #4]
 800a764:	60c1      	str	r1, [r0, #12]
}
 800a766:	4770      	bx	lr
 800a768:	0802dd4c 	.word	0x0802dd4c

0800a76c <_ZN26Screen5x5_superMergingView14tearDownScreenEv>:
}

void Screen5x5_superMergingView::tearDownScreen()
{
    Screen5x5_superMergingViewBase::tearDownScreen();
}
 800a76c:	4770      	bx	lr
	...

0800a770 <_ZN26Screen5x5_superMergingViewD1Ev>:
#include <vector>
class Screen5x5_superMergingView : public Screen5x5_superMergingViewBase
{
public:
    Screen5x5_superMergingView();
    virtual ~Screen5x5_superMergingView() {}
 800a770:	b510      	push	{r4, lr}
 800a772:	4b03      	ldr	r3, [pc, #12]	@ (800a780 <_ZN26Screen5x5_superMergingViewD1Ev+0x10>)
 800a774:	6003      	str	r3, [r0, #0]
 800a776:	4604      	mov	r4, r0
 800a778:	f7fb fe4e 	bl	8006418 <_ZN30Screen5x5_superMergingViewBaseD1Ev>
 800a77c:	4620      	mov	r0, r4
 800a77e:	bd10      	pop	{r4, pc}
 800a780:	0802dd74 	.word	0x0802dd74

0800a784 <_ZN26Screen5x5_superMergingViewD0Ev>:
 800a784:	b510      	push	{r4, lr}
 800a786:	4604      	mov	r4, r0
 800a788:	f7ff fff2 	bl	800a770 <_ZN26Screen5x5_superMergingViewD1Ev>
 800a78c:	4620      	mov	r0, r4
 800a78e:	f641 0164 	movw	r1, #6244	@ 0x1864
 800a792:	f01e ffbf 	bl	8029714 <_ZdlPvj>
 800a796:	4620      	mov	r0, r4
 800a798:	bd10      	pop	{r4, pc}
	...

0800a79c <_ZN26Screen5x5_superMergingView6myRandEv>:
    seed = seed * 1664525UL + 1013904223UL;
 800a79c:	4b03      	ldr	r3, [pc, #12]	@ (800a7ac <_ZN26Screen5x5_superMergingView6myRandEv+0x10>)
 800a79e:	4904      	ldr	r1, [pc, #16]	@ (800a7b0 <_ZN26Screen5x5_superMergingView6myRandEv+0x14>)
 800a7a0:	681a      	ldr	r2, [r3, #0]
 800a7a2:	4804      	ldr	r0, [pc, #16]	@ (800a7b4 <_ZN26Screen5x5_superMergingView6myRandEv+0x18>)
 800a7a4:	fb01 0002 	mla	r0, r1, r2, r0
 800a7a8:	6018      	str	r0, [r3, #0]
}
 800a7aa:	4770      	bx	lr
 800a7ac:	20000028 	.word	0x20000028
 800a7b0:	0019660d 	.word	0x0019660d
 800a7b4:	3c6ef35f 	.word	0x3c6ef35f

0800a7b8 <_ZN26Screen5x5_superMergingViewC1Ev>:
Screen5x5_superMergingView::Screen5x5_superMergingView()
 800a7b8:	b510      	push	{r4, lr}
 800a7ba:	4604      	mov	r4, r0
 800a7bc:	f7fb fec8 	bl	8006550 <_ZN30Screen5x5_superMergingViewBaseC1Ev>
 800a7c0:	4b3b      	ldr	r3, [pc, #236]	@ (800a8b0 <_ZN26Screen5x5_superMergingViewC1Ev+0xf8>)
 800a7c2:	6023      	str	r3, [r4, #0]
 800a7c4:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
 800a7c8:	2200      	movs	r2, #0
 800a7ca:	f8c3 285c 	str.w	r2, [r3, #2140]	@ 0x85c
 800a7ce:	f8c3 2860 	str.w	r2, [r3, #2144]	@ 0x860
    tiles[0][0] = &tile5x5_Super1;
 800a7d2:	f504 7272 	add.w	r2, r4, #968	@ 0x3c8
 800a7d6:	f8c3 27c4 	str.w	r2, [r3, #1988]	@ 0x7c4
    tiles[0][1] = &tile5x5_Super2;
 800a7da:	f204 4294 	addw	r2, r4, #1172	@ 0x494
 800a7de:	f8c3 27c8 	str.w	r2, [r3, #1992]	@ 0x7c8
    tiles[0][2] = &tile5x5_Super3;
 800a7e2:	f504 62ac 	add.w	r2, r4, #1376	@ 0x560
 800a7e6:	f8c3 27cc 	str.w	r2, [r3, #1996]	@ 0x7cc
    tiles[0][3] = &tile5x5_Super4;
 800a7ea:	f204 622c 	addw	r2, r4, #1580	@ 0x62c
 800a7ee:	f8c3 27d0 	str.w	r2, [r3, #2000]	@ 0x7d0
    tiles[0][4] = &tile5x5_Super5;
 800a7f2:	f504 62df 	add.w	r2, r4, #1784	@ 0x6f8
 800a7f6:	f8c3 27d4 	str.w	r2, [r3, #2004]	@ 0x7d4
    tiles[1][0] = &tile5x5_Super6;
 800a7fa:	f204 72c4 	addw	r2, r4, #1988	@ 0x7c4
 800a7fe:	f8c3 27d8 	str.w	r2, [r3, #2008]	@ 0x7d8
    tiles[1][1] = &tile5x5_Super7;
 800a802:	f504 6209 	add.w	r2, r4, #2192	@ 0x890
 800a806:	f8c3 27dc 	str.w	r2, [r3, #2012]	@ 0x7dc
    tiles[1][2] = &tile5x5_Super8;
 800a80a:	f604 125c 	addw	r2, r4, #2396	@ 0x95c
 800a80e:	f8c3 27e0 	str.w	r2, [r3, #2016]	@ 0x7e0
    tiles[1][3] = &tile5x5_Super9;
 800a812:	f604 2228 	addw	r2, r4, #2600	@ 0xa28
 800a816:	f8c3 27e4 	str.w	r2, [r3, #2020]	@ 0x7e4
    tiles[1][4] = &tile5x5_Super10;
 800a81a:	f604 22f4 	addw	r2, r4, #2804	@ 0xaf4
 800a81e:	f8c3 27e8 	str.w	r2, [r3, #2024]	@ 0x7e8
    tiles[2][0] = &tile5x5_Super11;
 800a822:	f504 623c 	add.w	r2, r4, #3008	@ 0xbc0
 800a826:	f8c3 27ec 	str.w	r2, [r3, #2028]	@ 0x7ec
    tiles[2][1] = &tile5x5_Super12;
 800a82a:	f604 428c 	addw	r2, r4, #3212	@ 0xc8c
 800a82e:	f8c3 27f0 	str.w	r2, [r3, #2032]	@ 0x7f0
    tiles[2][2] = &tile5x5_Super13;
 800a832:	f604 5258 	addw	r2, r4, #3416	@ 0xd58
 800a836:	f8c3 27f4 	str.w	r2, [r3, #2036]	@ 0x7f4
    tiles[2][3] = &tile5x5_Super14;
 800a83a:	f604 6224 	addw	r2, r4, #3620	@ 0xe24
 800a83e:	f8c3 27f8 	str.w	r2, [r3, #2040]	@ 0x7f8
    tiles[2][4] = &tile5x5_Super15;
 800a842:	f504 626f 	add.w	r2, r4, #3824	@ 0xef0
 800a846:	f8c3 27fc 	str.w	r2, [r3, #2044]	@ 0x7fc
    tiles[3][0] = &tile5x5_Super16;
 800a84a:	f604 72bc 	addw	r2, r4, #4028	@ 0xfbc
 800a84e:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
    tiles[3][1] = &tile5x5_Super17;
 800a852:	f504 5284 	add.w	r2, r4, #4224	@ 0x1080
 800a856:	3208      	adds	r2, #8
 800a858:	f8c3 2804 	str.w	r2, [r3, #2052]	@ 0x804
    tiles[3][2] = &tile5x5_Super18;
 800a85c:	f504 528a 	add.w	r2, r4, #4416	@ 0x1140
 800a860:	3214      	adds	r2, #20
 800a862:	f8c3 2808 	str.w	r2, [r3, #2056]	@ 0x808
    tiles[3][3] = &tile5x5_Super19;
 800a866:	f504 5291 	add.w	r2, r4, #4640	@ 0x1220
 800a86a:	f8c3 280c 	str.w	r2, [r3, #2060]	@ 0x80c
    tiles[3][4] = &tile5x5_Super20;
 800a86e:	f504 5297 	add.w	r2, r4, #4832	@ 0x12e0
 800a872:	320c      	adds	r2, #12
 800a874:	f8c3 2810 	str.w	r2, [r3, #2064]	@ 0x810
    tiles[4][0] = &tile5x5_Super21;
 800a878:	f504 529d 	add.w	r2, r4, #5024	@ 0x13a0
 800a87c:	3218      	adds	r2, #24
 800a87e:	f8c3 2814 	str.w	r2, [r3, #2068]	@ 0x814
    tiles[4][1] = &tile5x5_Super22;
 800a882:	f504 52a4 	add.w	r2, r4, #5248	@ 0x1480
 800a886:	3204      	adds	r2, #4
 800a888:	f8c3 2818 	str.w	r2, [r3, #2072]	@ 0x818
    tiles[4][2] = &tile5x5_Super23;
 800a88c:	f504 52aa 	add.w	r2, r4, #5440	@ 0x1540
 800a890:	3210      	adds	r2, #16
 800a892:	f8c3 281c 	str.w	r2, [r3, #2076]	@ 0x81c
    tiles[4][3] = &tile5x5_Super24;
 800a896:	f504 52b0 	add.w	r2, r4, #5632	@ 0x1600
 800a89a:	321c      	adds	r2, #28
 800a89c:	f8c3 2820 	str.w	r2, [r3, #2080]	@ 0x820
    tiles[4][4] = &tile5x5_Super25;
 800a8a0:	f504 52b7 	add.w	r2, r4, #5856	@ 0x16e0
 800a8a4:	3208      	adds	r2, #8
 800a8a6:	f8c3 2824 	str.w	r2, [r3, #2084]	@ 0x824
}
 800a8aa:	4620      	mov	r0, r4
 800a8ac:	bd10      	pop	{r4, pc}
 800a8ae:	bf00      	nop
 800a8b0:	0802dd74 	.word	0x0802dd74

0800a8b4 <_ZN26Screen5x5_superMergingView15updateScoreTextEv>:
    {
        navigateToGameOverScreen();
    }
}
void Screen5x5_superMergingView::updateScoreText()
{
 800a8b4:	b538      	push	{r3, r4, r5, lr}
    GameGlobal::yourScore = score;
 800a8b6:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
 800a8ba:	4b0a      	ldr	r3, [pc, #40]	@ (800a8e4 <_ZN26Screen5x5_superMergingView15updateScoreTextEv+0x30>)
 800a8bc:	f8d5 185c 	ldr.w	r1, [r5, #2140]	@ 0x85c
 800a8c0:	6019      	str	r1, [r3, #0]
    GameGlobal::bestScore = bestScore;
 800a8c2:	4b09      	ldr	r3, [pc, #36]	@ (800a8e8 <_ZN26Screen5x5_superMergingView15updateScoreTextEv+0x34>)
 800a8c4:	f8d5 2860 	ldr.w	r2, [r5, #2144]	@ 0x860
 800a8c8:	601a      	str	r2, [r3, #0]
{
 800a8ca:	4604      	mov	r4, r0
    scoreContainer.setScore(score);
 800a8cc:	f500 70d0 	add.w	r0, r0, #416	@ 0x1a0
 800a8d0:	f7fe f840 	bl	8008954 <_ZN5Score8setScoreEm>
    bestContainer.setScore(bestScore);
 800a8d4:	f8d5 1860 	ldr.w	r1, [r5, #2144]	@ 0x860
 800a8d8:	f504 702d 	add.w	r0, r4, #692	@ 0x2b4
}
 800a8dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    bestContainer.setScore(bestScore);
 800a8e0:	f7fd b93a 	b.w	8007b58 <_ZN4Best8setScoreEm>
 800a8e4:	200031a8 	.word	0x200031a8
 800a8e8:	200031ac 	.word	0x200031ac

0800a8ec <_ZN26Screen5x5_superMergingView24navigateToGameOverScreenEv>:
            navigateToGameOverScreen();
        }
    }
}
void Screen5x5_superMergingView::navigateToGameOverScreen()
{
 800a8ec:	b508      	push	{r3, lr}
    static_cast<FrontendApplication *>(Application::getInstance())->gotoGameOverScreenScreenSlideTransitionEast();
 800a8ee:	f00c f855 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
}
 800a8f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    static_cast<FrontendApplication *>(Application::getInstance())->gotoGameOverScreenScreenSlideTransitionEast();
 800a8f6:	f7f8 bc3f 	b.w	8003178 <_ZN23FrontendApplicationBase43gotoGameOverScreenScreenSlideTransitionEastEv>

0800a8fa <_ZN26Screen5x5_superMergingView10isGameOverEv>:
bool Screen5x5_superMergingView::isGameOver() // kiem tra xem con co the gop cac o lai voi nhau khong
{
 800a8fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a8fe:	f500 57c1 	add.w	r7, r0, #6176	@ 0x1820
 800a902:	4604      	mov	r4, r0
 800a904:	f500 55be 	add.w	r5, r0, #6080	@ 0x17c0
 800a908:	3704      	adds	r7, #4
 800a90a:	46a8      	mov	r8, r5
    // 1. Kiểm tra còn ô trống không
    for (int r = 0; r < 5; ++r)
    {
        for (int c = 0; c < 5; ++c)
 800a90c:	2600      	movs	r6, #0
        {
            if (tiles[r][c]->getValue() == 0)
 800a90e:	f858 0f04 	ldr.w	r0, [r8, #4]!
 800a912:	f000 ffdf 	bl	800b8d4 <_ZNK13Tile5x5_Super8getValueEv>
 800a916:	b318      	cbz	r0, 800a960 <_ZN26Screen5x5_superMergingView10isGameOverEv+0x66>
        for (int c = 0; c < 5; ++c)
 800a918:	3601      	adds	r6, #1
 800a91a:	2e05      	cmp	r6, #5
 800a91c:	d1f7      	bne.n	800a90e <_ZN26Screen5x5_superMergingView10isGameOverEv+0x14>
    for (int r = 0; r < 5; ++r)
 800a91e:	3514      	adds	r5, #20
 800a920:	42bd      	cmp	r5, r7
 800a922:	d1f2      	bne.n	800a90a <_ZN26Screen5x5_superMergingView10isGameOverEv+0x10>
 800a924:	f504 54be 	add.w	r4, r4, #6080	@ 0x17c0
 800a928:	3404      	adds	r4, #4
                return false; // còn chỗ để spawn => chưa thua
        }
    }

    // 2. Kiểm tra còn ô nào có thể gộp không
    for (int r = 0; r < 5; ++r)
 800a92a:	2700      	movs	r7, #0
        for (int c = 0; c < 5; ++c)
 800a92c:	4626      	mov	r6, r4
    {
        for (int c = 0; c < 5; ++c)
 800a92e:	2500      	movs	r5, #0
        {
            int current = tiles[r][c]->getValue();
 800a930:	f856 0b04 	ldr.w	r0, [r6], #4
 800a934:	f000 ffce 	bl	800b8d4 <_ZNK13Tile5x5_Super8getValueEv>

            // Kiểm tra phải
            if (c < 4 && tiles[r][c + 1]->getValue() == current)
 800a938:	2d04      	cmp	r5, #4
            int current = tiles[r][c]->getValue();
 800a93a:	4680      	mov	r8, r0
            if (c < 4 && tiles[r][c + 1]->getValue() == current)
 800a93c:	d10b      	bne.n	800a956 <_ZN26Screen5x5_superMergingView10isGameOverEv+0x5c>
                return false;

            // Kiểm tra dưới
            if (r < 4 && tiles[r + 1][c]->getValue() == current)
 800a93e:	2f04      	cmp	r7, #4
 800a940:	d111      	bne.n	800a966 <_ZN26Screen5x5_superMergingView10isGameOverEv+0x6c>
        for (int c = 0; c < 5; ++c)
 800a942:	3501      	adds	r5, #1
 800a944:	2d05      	cmp	r5, #5
 800a946:	d1f3      	bne.n	800a930 <_ZN26Screen5x5_superMergingView10isGameOverEv+0x36>
    for (int r = 0; r < 5; ++r)
 800a948:	3701      	adds	r7, #1
 800a94a:	2f05      	cmp	r7, #5
 800a94c:	f104 0414 	add.w	r4, r4, #20
 800a950:	d1ec      	bne.n	800a92c <_ZN26Screen5x5_superMergingView10isGameOverEv+0x32>
                return false;
        }
    }

    // Không còn nước đi hợp lệ
    return true;
 800a952:	2001      	movs	r0, #1
 800a954:	e005      	b.n	800a962 <_ZN26Screen5x5_superMergingView10isGameOverEv+0x68>
            if (c < 4 && tiles[r][c + 1]->getValue() == current)
 800a956:	6830      	ldr	r0, [r6, #0]
 800a958:	f000 ffbc 	bl	800b8d4 <_ZNK13Tile5x5_Super8getValueEv>
 800a95c:	4580      	cmp	r8, r0
 800a95e:	d1ee      	bne.n	800a93e <_ZN26Screen5x5_superMergingView10isGameOverEv+0x44>
                return false; // còn chỗ để spawn => chưa thua
 800a960:	2000      	movs	r0, #0
}
 800a962:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            if (r < 4 && tiles[r + 1][c]->getValue() == current)
 800a966:	6930      	ldr	r0, [r6, #16]
 800a968:	f000 ffb4 	bl	800b8d4 <_ZNK13Tile5x5_Super8getValueEv>
 800a96c:	4580      	cmp	r8, r0
 800a96e:	d1e8      	bne.n	800a942 <_ZN26Screen5x5_superMergingView10isGameOverEv+0x48>
 800a970:	e7f6      	b.n	800a960 <_ZN26Screen5x5_superMergingView10isGameOverEv+0x66>

0800a972 <_ZN26Screen5x5_superMergingView15spawnRandomTileEv>:
{
 800a972:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    for (int r = 0; r < 5; r++)
 800a976:	2600      	movs	r6, #0
{
 800a978:	b0b3      	sub	sp, #204	@ 0xcc
 800a97a:	4605      	mov	r5, r0
 800a97c:	f500 58be 	add.w	r8, r0, #6080	@ 0x17c0
    int emptyCount = 0;
 800a980:	4634      	mov	r4, r6
{
 800a982:	46c1      	mov	r9, r8
        for (int c = 0; c < 5; c++)
 800a984:	2700      	movs	r7, #0
            if (tiles[r][c]->getValue() == 0)
 800a986:	f859 0f04 	ldr.w	r0, [r9, #4]!
 800a98a:	f000 ffa3 	bl	800b8d4 <_ZNK13Tile5x5_Super8getValueEv>
 800a98e:	b928      	cbnz	r0, 800a99c <_ZN26Screen5x5_superMergingView15spawnRandomTileEv+0x2a>
                empties[emptyCount++] = {r, c};
 800a990:	ab32      	add	r3, sp, #200	@ 0xc8
 800a992:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800a996:	e943 6732 	strd	r6, r7, [r3, #-200]	@ 0xc8
 800a99a:	3401      	adds	r4, #1
        for (int c = 0; c < 5; c++)
 800a99c:	3701      	adds	r7, #1
 800a99e:	2f05      	cmp	r7, #5
 800a9a0:	d1f1      	bne.n	800a986 <_ZN26Screen5x5_superMergingView15spawnRandomTileEv+0x14>
    for (int r = 0; r < 5; r++)
 800a9a2:	3601      	adds	r6, #1
 800a9a4:	2e05      	cmp	r6, #5
 800a9a6:	f108 0814 	add.w	r8, r8, #20
 800a9aa:	d1ea      	bne.n	800a982 <_ZN26Screen5x5_superMergingView15spawnRandomTileEv+0x10>
    if (emptyCount > 0)
 800a9ac:	2c00      	cmp	r4, #0
        int idx = myRand() % emptyCount;
 800a9ae:	4628      	mov	r0, r5
    if (emptyCount > 0)
 800a9b0:	dd29      	ble.n	800aa06 <_ZN26Screen5x5_superMergingView15spawnRandomTileEv+0x94>
        int idx = myRand() % emptyCount;
 800a9b2:	f7ff fef3 	bl	800a79c <_ZN26Screen5x5_superMergingView6myRandEv>
 800a9b6:	fbb0 f3f4 	udiv	r3, r0, r4
 800a9ba:	fb03 0014 	mls	r0, r3, r4, r0
        int rr = empties[idx].row;
 800a9be:	ab32      	add	r3, sp, #200	@ 0xc8
 800a9c0:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
        int cc = empties[idx].col;
 800a9c4:	e950 4632 	ldrd	r4, r6, [r0, #-200]	@ 0xc8
        uint16_t newValue = (myRand() % 10 == 0) ? 4 : 2;
 800a9c8:	4628      	mov	r0, r5
 800a9ca:	f7ff fee7 	bl	800a79c <_ZN26Screen5x5_superMergingView6myRandEv>
 800a9ce:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800a9d2:	4434      	add	r4, r6
 800a9d4:	230a      	movs	r3, #10
 800a9d6:	eb05 0484 	add.w	r4, r5, r4, lsl #2
        tiles[rr][cc]->setValue(newValue);
 800a9da:	f504 5480 	add.w	r4, r4, #4096	@ 0x1000
        uint16_t newValue = (myRand() % 10 == 0) ? 4 : 2;
 800a9de:	fbb0 f2f3 	udiv	r2, r0, r3
 800a9e2:	fb02 0013 	mls	r0, r2, r3, r0
 800a9e6:	2800      	cmp	r0, #0
        tiles[rr][cc]->setValue(newValue);
 800a9e8:	bf18      	it	ne
 800a9ea:	2102      	movne	r1, #2
 800a9ec:	f8d4 07c4 	ldr.w	r0, [r4, #1988]	@ 0x7c4
 800a9f0:	bf08      	it	eq
 800a9f2:	2104      	moveq	r1, #4
 800a9f4:	f000 ff06 	bl	800b804 <_ZN13Tile5x5_Super8setValueEt>
        tiles[rr][cc]->animateSpawn(); // animation spawn
 800a9f8:	f8d4 07c4 	ldr.w	r0, [r4, #1988]	@ 0x7c4
}
 800a9fc:	b033      	add	sp, #204	@ 0xcc
 800a9fe:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        tiles[rr][cc]->animateSpawn(); // animation spawn
 800aa02:	f000 bf72 	b.w	800b8ea <_ZN13Tile5x5_Super12animateSpawnEv>
        if (isGameOver())
 800aa06:	f7ff ff78 	bl	800a8fa <_ZN26Screen5x5_superMergingView10isGameOverEv>
 800aa0a:	b128      	cbz	r0, 800aa18 <_ZN26Screen5x5_superMergingView15spawnRandomTileEv+0xa6>
            navigateToGameOverScreen();
 800aa0c:	4628      	mov	r0, r5
}
 800aa0e:	b033      	add	sp, #204	@ 0xcc
 800aa10:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
            navigateToGameOverScreen();
 800aa14:	f7ff bf6a 	b.w	800a8ec <_ZN26Screen5x5_superMergingView24navigateToGameOverScreenEv>
}
 800aa18:	b033      	add	sp, #204	@ 0xcc
 800aa1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800aa20 <_ZN26Screen5x5_superMergingView13saveGridStateEv>:
void Screen5x5_superMergingView::saveGridState()
{
 800aa20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    for (int i = 0; i < 5; ++i)
        for (int j = 0; j < 5; ++j)
            gridBeforeMove[i][j] = tiles[i][j]->getValue();
 800aa24:	4c0c      	ldr	r4, [pc, #48]	@ (800aa58 <_ZN26Screen5x5_superMergingView13saveGridStateEv+0x38>)
 800aa26:	f500 55c1 	add.w	r5, r0, #6176	@ 0x1820
 800aa2a:	f500 58c2 	add.w	r8, r0, #6208	@ 0x1840
 800aa2e:	3506      	adds	r5, #6
 800aa30:	f108 0818 	add.w	r8, r8, #24
 800aa34:	1a24      	subs	r4, r4, r0
{
 800aa36:	462f      	mov	r7, r5
        for (int j = 0; j < 5; ++j)
 800aa38:	2600      	movs	r6, #0
            gridBeforeMove[i][j] = tiles[i][j]->getValue();
 800aa3a:	f854 0017 	ldr.w	r0, [r4, r7, lsl #1]
 800aa3e:	f000 ff49 	bl	800b8d4 <_ZNK13Tile5x5_Super8getValueEv>
        for (int j = 0; j < 5; ++j)
 800aa42:	3601      	adds	r6, #1
 800aa44:	2e05      	cmp	r6, #5
            gridBeforeMove[i][j] = tiles[i][j]->getValue();
 800aa46:	f827 0f02 	strh.w	r0, [r7, #2]!
        for (int j = 0; j < 5; ++j)
 800aa4a:	d1f6      	bne.n	800aa3a <_ZN26Screen5x5_superMergingView13saveGridStateEv+0x1a>
    for (int i = 0; i < 5; ++i)
 800aa4c:	350a      	adds	r5, #10
 800aa4e:	4545      	cmp	r5, r8
 800aa50:	d1f1      	bne.n	800aa36 <_ZN26Screen5x5_superMergingView13saveGridStateEv+0x16>
}
 800aa52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aa56:	bf00      	nop
 800aa58:	ffffe778 	.word	0xffffe778

0800aa5c <_ZN26Screen5x5_superMergingView14hasGridChangedEv>:
bool Screen5x5_superMergingView::hasGridChanged()
{
 800aa5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    for (int i = 0; i < 5; ++i)
        for (int j = 0; j < 5; ++j)
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
 800aa60:	4d0e      	ldr	r5, [pc, #56]	@ (800aa9c <_ZN26Screen5x5_superMergingView14hasGridChangedEv+0x40>)
 800aa62:	f500 56c1 	add.w	r6, r0, #6176	@ 0x1820
 800aa66:	f500 58c2 	add.w	r8, r0, #6208	@ 0x1840
 800aa6a:	3606      	adds	r6, #6
 800aa6c:	f108 0818 	add.w	r8, r8, #24
 800aa70:	1a2d      	subs	r5, r5, r0
{
 800aa72:	4637      	mov	r7, r6
 800aa74:	2405      	movs	r4, #5
            if (gridBeforeMove[i][j] != tiles[i][j]->getValue())
 800aa76:	f837 9f02 	ldrh.w	r9, [r7, #2]!
 800aa7a:	f855 0017 	ldr.w	r0, [r5, r7, lsl #1]
 800aa7e:	f000 ff29 	bl	800b8d4 <_ZNK13Tile5x5_Super8getValueEv>
 800aa82:	4581      	cmp	r9, r0
 800aa84:	d106      	bne.n	800aa94 <_ZN26Screen5x5_superMergingView14hasGridChangedEv+0x38>
        for (int j = 0; j < 5; ++j)
 800aa86:	3c01      	subs	r4, #1
 800aa88:	d1f5      	bne.n	800aa76 <_ZN26Screen5x5_superMergingView14hasGridChangedEv+0x1a>
    for (int i = 0; i < 5; ++i)
 800aa8a:	360a      	adds	r6, #10
 800aa8c:	4546      	cmp	r6, r8
 800aa8e:	d1f0      	bne.n	800aa72 <_ZN26Screen5x5_superMergingView14hasGridChangedEv+0x16>
                return true;
    return false;
 800aa90:	4620      	mov	r0, r4
 800aa92:	e000      	b.n	800aa96 <_ZN26Screen5x5_superMergingView14hasGridChangedEv+0x3a>
                return true;
 800aa94:	2001      	movs	r0, #1
}
 800aa96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800aa9a:	bf00      	nop
 800aa9c:	ffffe774 	.word	0xffffe774

0800aaa0 <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb>:
void Screen5x5_superMergingView::mergeSuperTiles(Tile5x5_Super *line[5], bool reverse)
{
 800aaa0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aaa4:	4606      	mov	r6, r0
 800aaa6:	b086      	sub	sp, #24
 800aaa8:	460f      	mov	r7, r1
 800aaaa:	4690      	mov	r8, r2
 800aaac:	1f0d      	subs	r5, r1, #4
 800aaae:	f101 0910 	add.w	r9, r1, #16
    // B1: Lấy các giá trị khác 0
    uint16_t values[5];
    int count = 0;
 800aab2:	2400      	movs	r4, #0

    for (int i = 0; i < 5; ++i)
    {
        if (line[i]->getValue() != 0)
 800aab4:	f855 0f04 	ldr.w	r0, [r5, #4]!
 800aab8:	f000 ff0c 	bl	800b8d4 <_ZNK13Tile5x5_Super8getValueEv>
 800aabc:	b150      	cbz	r0, 800aad4 <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0x34>
        {
            values[count++] = line[i]->getValue();
 800aabe:	6828      	ldr	r0, [r5, #0]
 800aac0:	f000 ff08 	bl	800b8d4 <_ZNK13Tile5x5_Super8getValueEv>
 800aac4:	ab06      	add	r3, sp, #24
 800aac6:	f104 0a01 	add.w	sl, r4, #1
 800aaca:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 800aace:	f824 0c18 	strh.w	r0, [r4, #-24]
 800aad2:	4654      	mov	r4, sl
    for (int i = 0; i < 5; ++i)
 800aad4:	454d      	cmp	r5, r9
 800aad6:	d1ed      	bne.n	800aab4 <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0x14>
        }
    }

    // B2: Nếu reverse (vuốt phải hoặc xuống), đảo thứ tự
    if (reverse)
 800aad8:	f1b8 0f00 	cmp.w	r8, #0
 800aadc:	d12c      	bne.n	800ab38 <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0x98>
        for (int i = 0; i < count / 2; ++i)
            std::swap(values[i], values[count - 1 - i]);
    }

    // B3: Gộp super-merging
    uint16_t merged[5] = {0};
 800aade:	ad03      	add	r5, sp, #12
 800aae0:	2300      	movs	r3, #0
 800aae2:	9303      	str	r3, [sp, #12]
 800aae4:	606b      	str	r3, [r5, #4]
 800aae6:	812b      	strh	r3, [r5, #8]
    int m = 0;
    int i = 0;

    while (i < count)
 800aae8:	46ae      	mov	lr, r5
 800aaea:	4628      	mov	r0, r5
    int m = 0;
 800aaec:	4699      	mov	r9, r3

        int sameCount = j - i;
        if (sameCount > 1)
        {
            merged[m++] = val * sameCount;
            score += val * sameCount;
 800aaee:	f506 5a80 	add.w	sl, r6, #4096	@ 0x1000
    while (i < count)
 800aaf2:	429c      	cmp	r4, r3
 800aaf4:	dc31      	bgt.n	800ab5a <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0xba>
        }
        i = j;
    }

    // B4: Nếu reverse thì đảo lại thứ tự
    if (reverse)
 800aaf6:	f1b8 0f00 	cmp.w	r8, #0
 800aafa:	d151      	bne.n	800aba0 <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0x100>
    {
        for (int i = 0; i < m / 2; ++i)
 800aafc:	2400      	movs	r4, #0
    }

    // B5: Gán lại vào các tile
    for (int i = 0; i < 5; ++i)
    {
        if (i < m)
 800aafe:	45a1      	cmp	r9, r4
            line[i]->setValue(merged[i]);
 800ab00:	bfc8      	it	gt
 800ab02:	f835 1014 	ldrhgt.w	r1, [r5, r4, lsl #1]
 800ab06:	f857 0024 	ldr.w	r0, [r7, r4, lsl #2]
        else
            line[i]->setValue(0);
 800ab0a:	bfd8      	it	le
 800ab0c:	2100      	movle	r1, #0
    for (int i = 0; i < 5; ++i)
 800ab0e:	3401      	adds	r4, #1
            line[i]->setValue(0);
 800ab10:	f000 fe78 	bl	800b804 <_ZN13Tile5x5_Super8setValueEt>
    for (int i = 0; i < 5; ++i)
 800ab14:	2c05      	cmp	r4, #5
 800ab16:	d1f2      	bne.n	800aafe <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0x5e>
    }

    // B6: Cập nhật điểm
    if (score > bestScore)
 800ab18:	f506 5380 	add.w	r3, r6, #4096	@ 0x1000
        bestScore = score;
    updateScoreText();
 800ab1c:	4630      	mov	r0, r6
    if (score > bestScore)
 800ab1e:	f8d3 285c 	ldr.w	r2, [r3, #2140]	@ 0x85c
 800ab22:	f8d3 1860 	ldr.w	r1, [r3, #2144]	@ 0x860
 800ab26:	428a      	cmp	r2, r1
        bestScore = score;
 800ab28:	bf88      	it	hi
 800ab2a:	f8c3 2860 	strhi.w	r2, [r3, #2144]	@ 0x860
}
 800ab2e:	b006      	add	sp, #24
 800ab30:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    updateScoreText();
 800ab34:	f7ff bebe 	b.w	800a8b4 <_ZN26Screen5x5_superMergingView15updateScoreTextEv>
        for (int i = 0; i < count / 2; ++i)
 800ab38:	eb04 71d4 	add.w	r1, r4, r4, lsr #31
 800ab3c:	466b      	mov	r3, sp
 800ab3e:	1049      	asrs	r1, r1, #1
 800ab40:	eb03 0044 	add.w	r0, r3, r4, lsl #1
 800ab44:	2200      	movs	r2, #0
 800ab46:	4291      	cmp	r1, r2
 800ab48:	ddc9      	ble.n	800aade <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0x3e>
    {
#if __cplusplus < 201103L
      // concept requirements
      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
#endif
      _Tp __tmp = _GLIBCXX_MOVE(__a);
 800ab4a:	881d      	ldrh	r5, [r3, #0]
      __a = _GLIBCXX_MOVE(__b);
 800ab4c:	f830 cd02 	ldrh.w	ip, [r0, #-2]!
 800ab50:	f823 cb02 	strh.w	ip, [r3], #2
 800ab54:	3201      	adds	r2, #1
      __b = _GLIBCXX_MOVE(__tmp);
 800ab56:	8005      	strh	r5, [r0, #0]
 800ab58:	e7f5      	b.n	800ab46 <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0xa6>
        uint16_t val = values[i];
 800ab5a:	aa06      	add	r2, sp, #24
 800ab5c:	eb02 0243 	add.w	r2, r2, r3, lsl #1
        int j = i + 1;
 800ab60:	1c59      	adds	r1, r3, #1
        uint16_t val = values[i];
 800ab62:	f832 cc18 	ldrh.w	ip, [r2, #-24]
        while (j < count && values[j] == val)
 800ab66:	428c      	cmp	r4, r1
 800ab68:	d003      	beq.n	800ab72 <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0xd2>
 800ab6a:	f83d 2011 	ldrh.w	r2, [sp, r1, lsl #1]
 800ab6e:	4562      	cmp	r2, ip
 800ab70:	d014      	beq.n	800ab9c <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0xfc>
        int sameCount = j - i;
 800ab72:	1acb      	subs	r3, r1, r3
        if (sameCount > 1)
 800ab74:	2b01      	cmp	r3, #1
            merged[m++] = val * sameCount;
 800ab76:	bfc3      	ittte	gt
 800ab78:	fb13 f20c 	smulbbgt	r2, r3, ip
 800ab7c:	8002      	strhgt	r2, [r0, #0]
            score += val * sameCount;
 800ab7e:	f8da 285c 	ldrgt.w	r2, [sl, #2140]	@ 0x85c
            merged[m++] = val;
 800ab82:	f8a0 c000 	strhle.w	ip, [r0]
            score += val * sameCount;
 800ab86:	bfc8      	it	gt
 800ab88:	fb03 220c 	mlagt	r2, r3, ip, r2
            merged[m++] = val * sameCount;
 800ab8c:	f109 0901 	add.w	r9, r9, #1
            score += val * sameCount;
 800ab90:	bfc8      	it	gt
 800ab92:	f8ca 285c 	strgt.w	r2, [sl, #2140]	@ 0x85c
            merged[m++] = val;
 800ab96:	3002      	adds	r0, #2
        for (int i = 0; i < count / 2; ++i)
 800ab98:	460b      	mov	r3, r1
 800ab9a:	e7aa      	b.n	800aaf2 <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0x52>
            ++j;
 800ab9c:	3101      	adds	r1, #1
 800ab9e:	e7e2      	b.n	800ab66 <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0xc6>
        for (int i = 0; i < m / 2; ++i)
 800aba0:	ea4f 0169 	mov.w	r1, r9, asr #1
 800aba4:	eb05 0249 	add.w	r2, r5, r9, lsl #1
 800aba8:	2300      	movs	r3, #0
 800abaa:	4299      	cmp	r1, r3
 800abac:	d0a6      	beq.n	800aafc <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0x5c>
      _Tp __tmp = _GLIBCXX_MOVE(__a);
 800abae:	f8be 0000 	ldrh.w	r0, [lr]
      __a = _GLIBCXX_MOVE(__b);
 800abb2:	f832 4d02 	ldrh.w	r4, [r2, #-2]!
 800abb6:	f82e 4b02 	strh.w	r4, [lr], #2
 800abba:	3301      	adds	r3, #1
      __b = _GLIBCXX_MOVE(__tmp);
 800abbc:	8010      	strh	r0, [r2, #0]
 800abbe:	e7f4      	b.n	800abaa <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb+0x10a>

0800abc0 <_ZN26Screen5x5_superMergingView20moveLeftSuperMergingEv>:
{
 800abc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800abc2:	f500 54be 	add.w	r4, r0, #6080	@ 0x17c0
 800abc6:	f500 57c1 	add.w	r7, r0, #6176	@ 0x1820
 800abca:	b087      	sub	sp, #28
 800abcc:	4605      	mov	r5, r0
 800abce:	3404      	adds	r4, #4
 800abd0:	3708      	adds	r7, #8
            line[col] = tiles[row][col];
 800abd2:	4623      	mov	r3, r4
 800abd4:	aa01      	add	r2, sp, #4
 800abd6:	f104 0c10 	add.w	ip, r4, #16
 800abda:	6818      	ldr	r0, [r3, #0]
 800abdc:	6859      	ldr	r1, [r3, #4]
 800abde:	4616      	mov	r6, r2
 800abe0:	c603      	stmia	r6!, {r0, r1}
 800abe2:	3308      	adds	r3, #8
 800abe4:	4563      	cmp	r3, ip
 800abe6:	4632      	mov	r2, r6
 800abe8:	d1f7      	bne.n	800abda <_ZN26Screen5x5_superMergingView20moveLeftSuperMergingEv+0x1a>
 800abea:	6818      	ldr	r0, [r3, #0]
 800abec:	6030      	str	r0, [r6, #0]
        mergeSuperTiles(line, false);
 800abee:	2200      	movs	r2, #0
 800abf0:	a901      	add	r1, sp, #4
 800abf2:	4628      	mov	r0, r5
    for (int row = 0; row < 5; ++row)
 800abf4:	3414      	adds	r4, #20
        mergeSuperTiles(line, false);
 800abf6:	f7ff ff53 	bl	800aaa0 <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb>
    for (int row = 0; row < 5; ++row)
 800abfa:	42a7      	cmp	r7, r4
 800abfc:	d1e9      	bne.n	800abd2 <_ZN26Screen5x5_superMergingView20moveLeftSuperMergingEv+0x12>
}
 800abfe:	b007      	add	sp, #28
 800ac00:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ac02 <_ZN26Screen5x5_superMergingView21moveRightSuperMergingEv>:
{
 800ac02:	b570      	push	{r4, r5, r6, lr}
 800ac04:	f500 54be 	add.w	r4, r0, #6080	@ 0x17c0
 800ac08:	f500 56c1 	add.w	r6, r0, #6176	@ 0x1820
 800ac0c:	b086      	sub	sp, #24
 800ac0e:	4605      	mov	r5, r0
 800ac10:	3404      	adds	r4, #4
 800ac12:	3608      	adds	r6, #8
            line[col] = tiles[row][4 - col];
 800ac14:	6923      	ldr	r3, [r4, #16]
 800ac16:	9301      	str	r3, [sp, #4]
 800ac18:	68e3      	ldr	r3, [r4, #12]
 800ac1a:	9302      	str	r3, [sp, #8]
 800ac1c:	68a3      	ldr	r3, [r4, #8]
 800ac1e:	9303      	str	r3, [sp, #12]
 800ac20:	6863      	ldr	r3, [r4, #4]
 800ac22:	9304      	str	r3, [sp, #16]
 800ac24:	f854 3b14 	ldr.w	r3, [r4], #20
 800ac28:	9305      	str	r3, [sp, #20]
        mergeSuperTiles(line, true);
 800ac2a:	2201      	movs	r2, #1
 800ac2c:	a901      	add	r1, sp, #4
 800ac2e:	4628      	mov	r0, r5
 800ac30:	f7ff ff36 	bl	800aaa0 <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb>
    for (int row = 0; row < 5; ++row)
 800ac34:	42b4      	cmp	r4, r6
 800ac36:	d1ed      	bne.n	800ac14 <_ZN26Screen5x5_superMergingView21moveRightSuperMergingEv+0x12>
}
 800ac38:	b006      	add	sp, #24
 800ac3a:	bd70      	pop	{r4, r5, r6, pc}

0800ac3c <_ZN26Screen5x5_superMergingView18moveUpSuperMergingEv>:
{
 800ac3c:	b570      	push	{r4, r5, r6, lr}
 800ac3e:	f500 54be 	add.w	r4, r0, #6080	@ 0x17c0
 800ac42:	4626      	mov	r6, r4
 800ac44:	b086      	sub	sp, #24
 800ac46:	4605      	mov	r5, r0
 800ac48:	3614      	adds	r6, #20
            line[row] = tiles[row][col];
 800ac4a:	f854 3f04 	ldr.w	r3, [r4, #4]!
 800ac4e:	9301      	str	r3, [sp, #4]
 800ac50:	6963      	ldr	r3, [r4, #20]
 800ac52:	9302      	str	r3, [sp, #8]
 800ac54:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800ac56:	9303      	str	r3, [sp, #12]
 800ac58:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800ac5a:	9304      	str	r3, [sp, #16]
        mergeSuperTiles(line, false);
 800ac5c:	2200      	movs	r2, #0
            line[row] = tiles[row][col];
 800ac5e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800ac60:	9305      	str	r3, [sp, #20]
        mergeSuperTiles(line, false);
 800ac62:	a901      	add	r1, sp, #4
 800ac64:	4628      	mov	r0, r5
 800ac66:	f7ff ff1b 	bl	800aaa0 <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb>
    for (int col = 0; col < 5; ++col)
 800ac6a:	42b4      	cmp	r4, r6
 800ac6c:	d1ed      	bne.n	800ac4a <_ZN26Screen5x5_superMergingView18moveUpSuperMergingEv+0xe>
}
 800ac6e:	b006      	add	sp, #24
 800ac70:	bd70      	pop	{r4, r5, r6, pc}

0800ac72 <_ZN26Screen5x5_superMergingView20moveDownSuperMergingEv>:
{
 800ac72:	b570      	push	{r4, r5, r6, lr}
 800ac74:	f500 54be 	add.w	r4, r0, #6080	@ 0x17c0
 800ac78:	4626      	mov	r6, r4
 800ac7a:	b086      	sub	sp, #24
 800ac7c:	4605      	mov	r5, r0
 800ac7e:	3614      	adds	r6, #20
            line[row] = tiles[4 - row][col];
 800ac80:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800ac82:	9301      	str	r3, [sp, #4]
 800ac84:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800ac86:	9302      	str	r3, [sp, #8]
 800ac88:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ac8a:	9303      	str	r3, [sp, #12]
 800ac8c:	69a3      	ldr	r3, [r4, #24]
 800ac8e:	9304      	str	r3, [sp, #16]
 800ac90:	f854 3f04 	ldr.w	r3, [r4, #4]!
 800ac94:	9305      	str	r3, [sp, #20]
        mergeSuperTiles(line, true);
 800ac96:	2201      	movs	r2, #1
 800ac98:	a901      	add	r1, sp, #4
 800ac9a:	4628      	mov	r0, r5
 800ac9c:	f7ff ff00 	bl	800aaa0 <_ZN26Screen5x5_superMergingView15mergeSuperTilesEPP13Tile5x5_Superb>
    for (int col = 0; col < 5; ++col)
 800aca0:	42b4      	cmp	r4, r6
 800aca2:	d1ed      	bne.n	800ac80 <_ZN26Screen5x5_superMergingView20moveDownSuperMergingEv+0xe>
}
 800aca4:	b006      	add	sp, #24
 800aca6:	bd70      	pop	{r4, r5, r6, pc}

0800aca8 <_ZN26Screen5x5_superMergingView18handleGestureEventERKN8touchgfx12GestureEventE>:
{
 800aca8:	b538      	push	{r3, r4, r5, lr}
 800acaa:	460d      	mov	r5, r1
 800acac:	4604      	mov	r4, r0
    saveGridState(); // luu trang thai truoc khi chuyen
 800acae:	f7ff feb7 	bl	800aa20 <_ZN26Screen5x5_superMergingView13saveGridStateEv>
 800acb2:	792b      	ldrb	r3, [r5, #4]
    if (evt.getType() == GestureEvent::SWIPE_HORIZONTAL)
 800acb4:	b9cb      	cbnz	r3, 800acea <_ZN26Screen5x5_superMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x42>
        if (evt.getVelocity() > 0)
 800acb6:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800acba:	2b00      	cmp	r3, #0
            moveRightSuperMerging();
 800acbc:	4620      	mov	r0, r4
        if (evt.getVelocity() > 0)
 800acbe:	dd11      	ble.n	800ace4 <_ZN26Screen5x5_superMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x3c>
            moveRightSuperMerging();
 800acc0:	f7ff ff9f 	bl	800ac02 <_ZN26Screen5x5_superMergingView21moveRightSuperMergingEv>
    if (hasGridChanged())
 800acc4:	4620      	mov	r0, r4
 800acc6:	f7ff fec9 	bl	800aa5c <_ZN26Screen5x5_superMergingView14hasGridChangedEv>
 800acca:	b110      	cbz	r0, 800acd2 <_ZN26Screen5x5_superMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x2a>
        spawnRandomTile(); // chi spawn neu co thay doi
 800accc:	4620      	mov	r0, r4
 800acce:	f7ff fe50 	bl	800a972 <_ZN26Screen5x5_superMergingView15spawnRandomTileEv>
    if (isGameOver())
 800acd2:	4620      	mov	r0, r4
 800acd4:	f7ff fe11 	bl	800a8fa <_ZN26Screen5x5_superMergingView10isGameOverEv>
 800acd8:	b1a0      	cbz	r0, 800ad04 <_ZN26Screen5x5_superMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x5c>
        navigateToGameOverScreen();
 800acda:	4620      	mov	r0, r4
}
 800acdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        navigateToGameOverScreen();
 800ace0:	f7ff be04 	b.w	800a8ec <_ZN26Screen5x5_superMergingView24navigateToGameOverScreenEv>
            moveLeftSuperMerging();
 800ace4:	f7ff ff6c 	bl	800abc0 <_ZN26Screen5x5_superMergingView20moveLeftSuperMergingEv>
 800ace8:	e7ec      	b.n	800acc4 <_ZN26Screen5x5_superMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x1c>
    else if (evt.getType() == GestureEvent::SWIPE_VERTICAL)
 800acea:	2b01      	cmp	r3, #1
 800acec:	d1ea      	bne.n	800acc4 <_ZN26Screen5x5_superMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x1c>
        if (evt.getVelocity() > 0)
 800acee:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800acf2:	2b00      	cmp	r3, #0
            moveDownSuperMerging();
 800acf4:	4620      	mov	r0, r4
        if (evt.getVelocity() > 0)
 800acf6:	dd02      	ble.n	800acfe <_ZN26Screen5x5_superMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x56>
            moveDownSuperMerging();
 800acf8:	f7ff ffbb 	bl	800ac72 <_ZN26Screen5x5_superMergingView20moveDownSuperMergingEv>
 800acfc:	e7e2      	b.n	800acc4 <_ZN26Screen5x5_superMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x1c>
            moveUpSuperMerging();
 800acfe:	f7ff ff9d 	bl	800ac3c <_ZN26Screen5x5_superMergingView18moveUpSuperMergingEv>
 800ad02:	e7df      	b.n	800acc4 <_ZN26Screen5x5_superMergingView18handleGestureEventERKN8touchgfx12GestureEventE+0x1c>
}
 800ad04:	bd38      	pop	{r3, r4, r5, pc}

0800ad06 <_ZN26Screen5x5_superMergingView14handleKeyEventEh>:
{
 800ad06:	b538      	push	{r3, r4, r5, lr}
 800ad08:	460d      	mov	r5, r1
 800ad0a:	4604      	mov	r4, r0
    saveGridState();
 800ad0c:	f7ff fe88 	bl	800aa20 <_ZN26Screen5x5_superMergingView13saveGridStateEv>
    switch (key)
 800ad10:	f1a5 0132 	sub.w	r1, r5, #50	@ 0x32
 800ad14:	2906      	cmp	r1, #6
 800ad16:	d808      	bhi.n	800ad2a <_ZN26Screen5x5_superMergingView14handleKeyEventEh+0x24>
 800ad18:	e8df f001 	tbb	[pc, r1]
 800ad1c:	0704071f 	.word	0x0704071f
 800ad20:	0717      	.short	0x0717
 800ad22:	1b          	.byte	0x1b
 800ad23:	00          	.byte	0x00
        moveLeftSuperMerging();
 800ad24:	4620      	mov	r0, r4
 800ad26:	f7ff ff4b 	bl	800abc0 <_ZN26Screen5x5_superMergingView20moveLeftSuperMergingEv>
    if (hasGridChanged())
 800ad2a:	4620      	mov	r0, r4
 800ad2c:	f7ff fe96 	bl	800aa5c <_ZN26Screen5x5_superMergingView14hasGridChangedEv>
 800ad30:	b110      	cbz	r0, 800ad38 <_ZN26Screen5x5_superMergingView14handleKeyEventEh+0x32>
        spawnRandomTile();
 800ad32:	4620      	mov	r0, r4
 800ad34:	f7ff fe1d 	bl	800a972 <_ZN26Screen5x5_superMergingView15spawnRandomTileEv>
    if (isGameOver())
 800ad38:	4620      	mov	r0, r4
 800ad3a:	f7ff fdde 	bl	800a8fa <_ZN26Screen5x5_superMergingView10isGameOverEv>
 800ad3e:	b180      	cbz	r0, 800ad62 <_ZN26Screen5x5_superMergingView14handleKeyEventEh+0x5c>
        navigateToGameOverScreen();
 800ad40:	4620      	mov	r0, r4
}
 800ad42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        navigateToGameOverScreen();
 800ad46:	f7ff bdd1 	b.w	800a8ec <_ZN26Screen5x5_superMergingView24navigateToGameOverScreenEv>
        moveRightSuperMerging();
 800ad4a:	4620      	mov	r0, r4
 800ad4c:	f7ff ff59 	bl	800ac02 <_ZN26Screen5x5_superMergingView21moveRightSuperMergingEv>
        break;
 800ad50:	e7eb      	b.n	800ad2a <_ZN26Screen5x5_superMergingView14handleKeyEventEh+0x24>
        moveUpSuperMerging();
 800ad52:	4620      	mov	r0, r4
 800ad54:	f7ff ff72 	bl	800ac3c <_ZN26Screen5x5_superMergingView18moveUpSuperMergingEv>
        break;
 800ad58:	e7e7      	b.n	800ad2a <_ZN26Screen5x5_superMergingView14handleKeyEventEh+0x24>
        moveDownSuperMerging();
 800ad5a:	4620      	mov	r0, r4
 800ad5c:	f7ff ff89 	bl	800ac72 <_ZN26Screen5x5_superMergingView20moveDownSuperMergingEv>
        break;
 800ad60:	e7e3      	b.n	800ad2a <_ZN26Screen5x5_superMergingView14handleKeyEventEh+0x24>
}
 800ad62:	bd38      	pop	{r3, r4, r5, pc}

0800ad64 <_ZN26Screen5x5_superMergingView15handleTickEventEv>:
void Screen5x5_superMergingView::handleTickEvent()
{
 800ad64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ad68:	4605      	mov	r5, r0
    static uint32_t lastPressTime = 0;
    const uint32_t debounceDelay = 200; // Thời gian chống dội (ms)
    uint32_t currentTime = HAL_GetTick();
 800ad6a:	f001 f983 	bl	800c074 <HAL_GetTick>

    uint8_t currentState = 0;
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 800ad6e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    uint32_t currentTime = HAL_GetTick();
 800ad72:	4606      	mov	r6, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 800ad74:	4840      	ldr	r0, [pc, #256]	@ (800ae78 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0x114>)
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK

    static uint8_t lastState = 0;

    if (currentTime - lastPressTime > debounceDelay)
 800ad76:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 800ae84 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0x120>
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 800ad7a:	f001 fbd5 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800ad7e:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10) == GPIO_PIN_SET ? 1 : 0);  // PB10: UP
 800ad82:	4607      	mov	r7, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800ad84:	483c      	ldr	r0, [pc, #240]	@ (800ae78 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0x114>)
 800ad86:	f001 fbcf 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 800ad8a:	2104      	movs	r1, #4
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800ad8c:	4604      	mov	r4, r0
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 800ad8e:	483b      	ldr	r0, [pc, #236]	@ (800ae7c <_ZN26Screen5x5_superMergingView15handleTickEventEv+0x118>)
 800ad90:	f001 fbca 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800ad94:	1e62      	subs	r2, r4, #1
 800ad96:	4253      	negs	r3, r2
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 800ad98:	f100 31ff 	add.w	r1, r0, #4294967295
    currentState |= (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_SET ? 2 : 0);  // PB12: DOWN
 800ad9c:	4153      	adcs	r3, r2
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 800ad9e:	424c      	negs	r4, r1
 800ada0:	414c      	adcs	r4, r1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 800ada2:	4836      	ldr	r0, [pc, #216]	@ (800ae7c <_ZN26Screen5x5_superMergingView15handleTickEventEv+0x118>)
 800ada4:	2140      	movs	r1, #64	@ 0x40
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 800ada6:	00a4      	lsls	r4, r4, #2
 800ada8:	ea44 0443 	orr.w	r4, r4, r3, lsl #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 800adac:	f001 fbbc 	bl	800c528 <HAL_GPIO_ReadPin>
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) == GPIO_PIN_SET ? 4 : 0);   // PA2: LEFT
 800adb0:	2f01      	cmp	r7, #1
 800adb2:	bf08      	it	eq
 800adb4:	f044 0401 	orreq.w	r4, r4, #1
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6) == GPIO_PIN_SET ? 8 : 0);   // PA6: RIGHT
 800adb8:	1e47      	subs	r7, r0, #1
 800adba:	4278      	negs	r0, r7
 800adbc:	4178      	adcs	r0, r7
 800adbe:	ea44 04c0 	orr.w	r4, r4, r0, lsl #3
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800adc2:	2101      	movs	r1, #1
 800adc4:	482d      	ldr	r0, [pc, #180]	@ (800ae7c <_ZN26Screen5x5_superMergingView15handleTickEventEv+0x118>)
 800adc6:	4f2e      	ldr	r7, [pc, #184]	@ (800ae80 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0x11c>)
 800adc8:	f001 fbae 	bl	800c528 <HAL_GPIO_ReadPin>
    if (currentTime - lastPressTime > debounceDelay)
 800adcc:	f8d8 3000 	ldr.w	r3, [r8]
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800add0:	f100 3cff 	add.w	ip, r0, #4294967295
 800add4:	f1dc 0000 	rsbs	r0, ip, #0
 800add8:	eb40 000c 	adc.w	r0, r0, ip
    if (currentTime - lastPressTime > debounceDelay)
 800addc:	1af3      	subs	r3, r6, r3
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800adde:	ea44 1900 	orr.w	r9, r4, r0, lsl #4
    if (currentTime - lastPressTime > debounceDelay)
 800ade2:	2bc8      	cmp	r3, #200	@ 0xc8
    currentState |= (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_SET ? 16 : 0);  // PA0: BACK
 800ade4:	464c      	mov	r4, r9
    if (currentTime - lastPressTime > debounceDelay)
 800ade6:	d91b      	bls.n	800ae20 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0xbc>
    {
        saveGridState();
 800ade8:	4628      	mov	r0, r5
 800adea:	f7ff fe19 	bl	800aa20 <_ZN26Screen5x5_superMergingView13saveGridStateEv>

        if ((currentState & 1) && !(lastState & 1)) // PB10: UP
 800adee:	f019 0f01 	tst.w	r9, #1
 800adf2:	d018      	beq.n	800ae26 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0xc2>
 800adf4:	783b      	ldrb	r3, [r7, #0]
 800adf6:	07db      	lsls	r3, r3, #31
 800adf8:	d415      	bmi.n	800ae26 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0xc2>
        {
            moveUpSuperMerging();
 800adfa:	4628      	mov	r0, r5
 800adfc:	f7ff ff1e 	bl	800ac3c <_ZN26Screen5x5_superMergingView18moveUpSuperMergingEv>
            lastPressTime = currentTime;
        }
        else if ((currentState & 16) && !(lastState & 16)) // PA0: BACK
        {
            application().gotoChosing_modeScreenWipeTransitionEast();
            lastPressTime = currentTime;
 800ae00:	f8c8 6000 	str.w	r6, [r8]
        }

        if (hasGridChanged())
 800ae04:	4628      	mov	r0, r5
 800ae06:	f7ff fe29 	bl	800aa5c <_ZN26Screen5x5_superMergingView14hasGridChangedEv>
 800ae0a:	b110      	cbz	r0, 800ae12 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0xae>
        {
            spawnRandomTile();
 800ae0c:	4628      	mov	r0, r5
 800ae0e:	f7ff fdb0 	bl	800a972 <_ZN26Screen5x5_superMergingView15spawnRandomTileEv>
        }

        if (isGameOver())
 800ae12:	4628      	mov	r0, r5
 800ae14:	f7ff fd71 	bl	800a8fa <_ZN26Screen5x5_superMergingView10isGameOverEv>
 800ae18:	b110      	cbz	r0, 800ae20 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0xbc>
        {
            navigateToGameOverScreen();
 800ae1a:	4628      	mov	r0, r5
 800ae1c:	f7ff fd66 	bl	800a8ec <_ZN26Screen5x5_superMergingView24navigateToGameOverScreenEv>
        }
    }

    lastState = currentState;
 800ae20:	703c      	strb	r4, [r7, #0]
}
 800ae22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        else if ((currentState & 2) && !(lastState & 2)) // PB12: DOWN
 800ae26:	f019 0f02 	tst.w	r9, #2
 800ae2a:	d006      	beq.n	800ae3a <_ZN26Screen5x5_superMergingView15handleTickEventEv+0xd6>
 800ae2c:	783b      	ldrb	r3, [r7, #0]
 800ae2e:	0798      	lsls	r0, r3, #30
 800ae30:	d403      	bmi.n	800ae3a <_ZN26Screen5x5_superMergingView15handleTickEventEv+0xd6>
            moveDownSuperMerging();
 800ae32:	4628      	mov	r0, r5
 800ae34:	f7ff ff1d 	bl	800ac72 <_ZN26Screen5x5_superMergingView20moveDownSuperMergingEv>
            lastPressTime = currentTime;
 800ae38:	e7e2      	b.n	800ae00 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0x9c>
        else if ((currentState & 4) && !(lastState & 4)) // PA2: LEFT
 800ae3a:	f019 0f04 	tst.w	r9, #4
 800ae3e:	d006      	beq.n	800ae4e <_ZN26Screen5x5_superMergingView15handleTickEventEv+0xea>
 800ae40:	783b      	ldrb	r3, [r7, #0]
 800ae42:	0759      	lsls	r1, r3, #29
 800ae44:	d403      	bmi.n	800ae4e <_ZN26Screen5x5_superMergingView15handleTickEventEv+0xea>
            moveLeftSuperMerging();
 800ae46:	4628      	mov	r0, r5
 800ae48:	f7ff feba 	bl	800abc0 <_ZN26Screen5x5_superMergingView20moveLeftSuperMergingEv>
            lastPressTime = currentTime;
 800ae4c:	e7d8      	b.n	800ae00 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0x9c>
        else if ((currentState & 8) && !(lastState & 8)) // PA6: RIGHT
 800ae4e:	f019 0f08 	tst.w	r9, #8
 800ae52:	d006      	beq.n	800ae62 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0xfe>
 800ae54:	783b      	ldrb	r3, [r7, #0]
 800ae56:	071a      	lsls	r2, r3, #28
 800ae58:	d403      	bmi.n	800ae62 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0xfe>
            moveRightSuperMerging();
 800ae5a:	4628      	mov	r0, r5
 800ae5c:	f7ff fed1 	bl	800ac02 <_ZN26Screen5x5_superMergingView21moveRightSuperMergingEv>
            lastPressTime = currentTime;
 800ae60:	e7ce      	b.n	800ae00 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0x9c>
        else if ((currentState & 16) && !(lastState & 16)) // PA0: BACK
 800ae62:	f019 0f10 	tst.w	r9, #16
 800ae66:	d0cd      	beq.n	800ae04 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0xa0>
 800ae68:	783b      	ldrb	r3, [r7, #0]
 800ae6a:	06db      	lsls	r3, r3, #27
 800ae6c:	d4ca      	bmi.n	800ae04 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0xa0>
 800ae6e:	f00b fd95 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
            application().gotoChosing_modeScreenWipeTransitionEast();
 800ae72:	f7f8 f911 	bl	8003098 <_ZN23FrontendApplicationBase40gotoChosing_modeScreenWipeTransitionEastEv>
 800ae76:	e7c3      	b.n	800ae00 <_ZN26Screen5x5_superMergingView15handleTickEventEv+0x9c>
 800ae78:	40020400 	.word	0x40020400
 800ae7c:	40020000 	.word	0x40020000
 800ae80:	200031d8 	.word	0x200031d8
 800ae84:	200031dc 	.word	0x200031dc

0800ae88 <_ZN26Screen5x5_superMergingView11setupScreenEv>:
    bestScore = GameGlobal::bestScore;
 800ae88:	4b25      	ldr	r3, [pc, #148]	@ (800af20 <_ZN26Screen5x5_superMergingView11setupScreenEv+0x98>)
{
 800ae8a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    score = 0;
 800ae8e:	f500 5580 	add.w	r5, r0, #4096	@ 0x1000
    bestScore = GameGlobal::bestScore;
 800ae92:	681b      	ldr	r3, [r3, #0]
 800ae94:	f8c5 3860 	str.w	r3, [r5, #2144]	@ 0x860
    score = 0;
 800ae98:	2100      	movs	r1, #0
{
 800ae9a:	4604      	mov	r4, r0
    score = 0;
 800ae9c:	f8c5 185c 	str.w	r1, [r5, #2140]	@ 0x85c
    scoreContainer.setScore(score);
 800aea0:	f500 70d0 	add.w	r0, r0, #416	@ 0x1a0
 800aea4:	f7fd fd56 	bl	8008954 <_ZN5Score8setScoreEm>
    bestContainer.setScore(bestScore);
 800aea8:	f8d5 1860 	ldr.w	r1, [r5, #2144]	@ 0x860
 800aeac:	f504 702d 	add.w	r0, r4, #692	@ 0x2b4
 800aeb0:	f7fc fe52 	bl	8007b58 <_ZN4Best8setScoreEm>
    updateScoreText();
 800aeb4:	4620      	mov	r0, r4
 800aeb6:	f7ff fcfd 	bl	800a8b4 <_ZN26Screen5x5_superMergingView15updateScoreTextEv>
    for (int i = 0; i < 5; ++i)
 800aeba:	f504 59be 	add.w	r9, r4, #6080	@ 0x17c0
    updateScoreText();
 800aebe:	2768      	movs	r7, #104	@ 0x68
            tiles[i][j]->moveTo((j)*TILE_SIZE, tileOffsetY + i * TILE_SIZE);
 800aec0:	f1a7 0a18 	sub.w	sl, r7, #24
 800aec4:	fa0f fa8a 	sxth.w	sl, sl
            tiles[i][j]->centerY = tileOffsetY + i * TILE_SIZE + TILE_SIZE / 2;
 800aec8:	46c8      	mov	r8, r9
 800aeca:	2600      	movs	r6, #0
            tiles[i][j]->setValue(0); // ẩn ban đầu
 800aecc:	f858 0f04 	ldr.w	r0, [r8, #4]!
 800aed0:	2100      	movs	r1, #0
 800aed2:	f000 fc97 	bl	800b804 <_ZN13Tile5x5_Super8setValueEt>
            tiles[i][j]->moveTo((j)*TILE_SIZE, tileOffsetY + i * TILE_SIZE);
 800aed6:	f8d8 0000 	ldr.w	r0, [r8]
 800aeda:	6803      	ldr	r3, [r0, #0]
 800aedc:	4652      	mov	r2, sl
 800aede:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800aee0:	b231      	sxth	r1, r6
 800aee2:	4798      	blx	r3
            tiles[i][j]->centerX = (j)*TILE_SIZE + TILE_SIZE / 2;
 800aee4:	f106 0218 	add.w	r2, r6, #24
 800aee8:	f8d8 3000 	ldr.w	r3, [r8]
        for (int j = 0; j < 5; ++j)
 800aeec:	3630      	adds	r6, #48	@ 0x30
 800aeee:	2ef0      	cmp	r6, #240	@ 0xf0
            tiles[i][j]->centerY = tileOffsetY + i * TILE_SIZE + TILE_SIZE / 2;
 800aef0:	e9c3 2730 	strd	r2, r7, [r3, #192]	@ 0xc0
        for (int j = 0; j < 5; ++j)
 800aef4:	d1ea      	bne.n	800aecc <_ZN26Screen5x5_superMergingView11setupScreenEv+0x44>
    for (int i = 0; i < 5; ++i)
 800aef6:	3730      	adds	r7, #48	@ 0x30
 800aef8:	f5b7 7fac 	cmp.w	r7, #344	@ 0x158
 800aefc:	f109 0914 	add.w	r9, r9, #20
 800af00:	d1de      	bne.n	800aec0 <_ZN26Screen5x5_superMergingView11setupScreenEv+0x38>
    tiles[0][0]->setValue(2);
 800af02:	f8d5 07c4 	ldr.w	r0, [r5, #1988]	@ 0x7c4
 800af06:	2102      	movs	r1, #2
 800af08:	f000 fc7c 	bl	800b804 <_ZN13Tile5x5_Super8setValueEt>
    tiles[0][1]->setValue(2);
 800af0c:	f8d5 07c8 	ldr.w	r0, [r5, #1992]	@ 0x7c8
 800af10:	2102      	movs	r1, #2
 800af12:	f000 fc77 	bl	800b804 <_ZN13Tile5x5_Super8setValueEt>
    Screen5x5_superMergingViewBase::setupScreen();
 800af16:	4620      	mov	r0, r4
}
 800af18:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    Screen5x5_superMergingViewBase::setupScreen();
 800af1c:	f7fb b9ee 	b.w	80062fc <_ZN30Screen5x5_superMergingViewBase11setupScreenEv>
 800af20:	200031ac 	.word	0x200031ac

0800af24 <_ZN27SelectedGameDesignPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~SelectedGameDesignPresenter() {}
 800af24:	4770      	bx	lr

0800af26 <_ZThn4_N27SelectedGameDesignPresenterD1Ev>:
 800af26:	3804      	subs	r0, #4
 800af28:	4770      	bx	lr

0800af2a <_ZN27SelectedGameDesignPresenter10deactivateEv>:
}

void SelectedGameDesignPresenter::activate()
{

}
 800af2a:	4770      	bx	lr

0800af2c <_ZN27SelectedGameDesignPresenterD0Ev>:
 800af2c:	b510      	push	{r4, lr}
 800af2e:	2110      	movs	r1, #16
 800af30:	4604      	mov	r4, r0
 800af32:	f01e fbef 	bl	8029714 <_ZdlPvj>
 800af36:	4620      	mov	r0, r4
 800af38:	bd10      	pop	{r4, pc}

0800af3a <_ZThn4_N27SelectedGameDesignPresenterD0Ev>:
 800af3a:	f1a0 0004 	sub.w	r0, r0, #4
 800af3e:	e7f5      	b.n	800af2c <_ZN27SelectedGameDesignPresenterD0Ev>

0800af40 <_ZN27SelectedGameDesignPresenterC1ER22SelectedGameDesignView>:
 800af40:	2200      	movs	r2, #0
 800af42:	6082      	str	r2, [r0, #8]
    : view(v)
 800af44:	4a02      	ldr	r2, [pc, #8]	@ (800af50 <_ZN27SelectedGameDesignPresenterC1ER22SelectedGameDesignView+0x10>)
 800af46:	6002      	str	r2, [r0, #0]
 800af48:	3218      	adds	r2, #24
 800af4a:	6042      	str	r2, [r0, #4]
 800af4c:	60c1      	str	r1, [r0, #12]
}
 800af4e:	4770      	bx	lr
 800af50:	0802dda8 	.word	0x0802dda8

0800af54 <_ZN22SelectedGameDesignView14tearDownScreenEv>:
}

void SelectedGameDesignView::tearDownScreen()
{
    SelectedGameDesignViewBase::tearDownScreen();
}
 800af54:	4770      	bx	lr
	...

0800af58 <_ZN22SelectedGameDesignViewD1Ev>:

class SelectedGameDesignView : public SelectedGameDesignViewBase
{
public:
    SelectedGameDesignView();
    virtual ~SelectedGameDesignView() {}
 800af58:	b510      	push	{r4, lr}
 800af5a:	4b03      	ldr	r3, [pc, #12]	@ (800af68 <_ZN22SelectedGameDesignViewD1Ev+0x10>)
 800af5c:	6003      	str	r3, [r0, #0]
 800af5e:	4604      	mov	r4, r0
 800af60:	f7fb fda3 	bl	8006aaa <_ZN26SelectedGameDesignViewBaseD1Ev>
 800af64:	4620      	mov	r0, r4
 800af66:	bd10      	pop	{r4, pc}
 800af68:	0802ddd0 	.word	0x0802ddd0

0800af6c <_ZN22SelectedGameDesignViewD0Ev>:
 800af6c:	b510      	push	{r4, lr}
 800af6e:	4604      	mov	r4, r0
 800af70:	f7ff fff2 	bl	800af58 <_ZN22SelectedGameDesignViewD1Ev>
 800af74:	4620      	mov	r0, r4
 800af76:	f44f 717d 	mov.w	r1, #1012	@ 0x3f4
 800af7a:	f01e fbcb 	bl	8029714 <_ZdlPvj>
 800af7e:	4620      	mov	r0, r4
 800af80:	bd10      	pop	{r4, pc}
	...

0800af84 <_ZN22SelectedGameDesignViewC1Ev>:
SelectedGameDesignView::SelectedGameDesignView()
 800af84:	b510      	push	{r4, lr}
 800af86:	4604      	mov	r4, r0
      currentIndex(0)
 800af88:	f7fb fdec 	bl	8006b64 <_ZN26SelectedGameDesignViewBaseC1Ev>
 800af8c:	4b03      	ldr	r3, [pc, #12]	@ (800af9c <_ZN22SelectedGameDesignViewC1Ev+0x18>)
 800af8e:	6023      	str	r3, [r4, #0]
 800af90:	2300      	movs	r3, #0
 800af92:	f884 33f0 	strb.w	r3, [r4, #1008]	@ 0x3f0
}
 800af96:	4620      	mov	r0, r4
 800af98:	bd10      	pop	{r4, pc}
 800af9a:	bf00      	nop
 800af9c:	0802ddd0 	.word	0x0802ddd0

0800afa0 <_ZN22SelectedGameDesignView10selectModeEv>:
    }
    updateHighlight();
}

void SelectedGameDesignView::selectMode()
{
 800afa0:	b508      	push	{r3, lr}
 800afa2:	f890 33f0 	ldrb.w	r3, [r0, #1008]	@ 0x3f0
 800afa6:	2b03      	cmp	r3, #3
 800afa8:	d81b      	bhi.n	800afe2 <_ZN22SelectedGameDesignView10selectModeEv+0x42>
 800afaa:	e8df f003 	tbb	[pc, r3]
 800afae:	0802      	.short	0x0802
 800afb0:	140e      	.short	0x140e
 800afb2:	f00b fcf3 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
    }
    else if (currentIndex == 3)
    {
        application().gotoChosing_modeScreenWipeTransitionEast();
    }
}
 800afb6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen3x3ScreenCoverTransitionEast();
 800afba:	f7f8 b8ad 	b.w	8003118 <_ZN23FrontendApplicationBase38gotoScreen3x3ScreenCoverTransitionEastEv>
 800afbe:	f00b fced 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
}
 800afc2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMainScreenScreenCoverTransitionEast();
 800afc6:	f7f8 b8b7 	b.w	8003138 <_ZN23FrontendApplicationBase39gotoMainScreenScreenCoverTransitionEastEv>
 800afca:	f00b fce7 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
}
 800afce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen5x5ScreenCoverTransitionEast();
 800afd2:	f7f8 b881 	b.w	80030d8 <_ZN23FrontendApplicationBase38gotoScreen5x5ScreenCoverTransitionEastEv>
 800afd6:	f00b fce1 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
}
 800afda:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoChosing_modeScreenWipeTransitionEast();
 800afde:	f7f8 b85b 	b.w	8003098 <_ZN23FrontendApplicationBase40gotoChosing_modeScreenWipeTransitionEastEv>
}
 800afe2:	bd08      	pop	{r3, pc}

0800afe4 <_ZN22SelectedGameDesignView15updateHighlightEv>:

void SelectedGameDesignView::updateHighlight()
{
 800afe4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    btn3x3.setBoxWithBorderColors(
 800afe8:	4e25      	ldr	r6, [pc, #148]	@ (800b080 <_ZN22SelectedGameDesignView15updateHighlightEv+0x9c>)
 800afea:	4d26      	ldr	r5, [pc, #152]	@ (800b084 <_ZN22SelectedGameDesignView15updateHighlightEv+0xa0>)
 800afec:	f890 13f0 	ldrb.w	r1, [r0, #1008]	@ 0x3f0
 800aff0:	4f25      	ldr	r7, [pc, #148]	@ (800b088 <_ZN22SelectedGameDesignView15updateHighlightEv+0xa4>)
 800aff2:	4b26      	ldr	r3, [pc, #152]	@ (800b08c <_ZN22SelectedGameDesignView15updateHighlightEv+0xa8>)
 800aff4:	4a26      	ldr	r2, [pc, #152]	@ (800b090 <_ZN22SelectedGameDesignView15updateHighlightEv+0xac>)
 800aff6:	9700      	str	r7, [sp, #0]
 800aff8:	f100 08e0 	add.w	r8, r0, #224	@ 0xe0
{
 800affc:	4604      	mov	r4, r0
    btn3x3.setBoxWithBorderColors(
 800affe:	2900      	cmp	r1, #0
 800b000:	bf14      	ite	ne
 800b002:	4631      	movne	r1, r6
 800b004:	4629      	moveq	r1, r5
 800b006:	4640      	mov	r0, r8
 800b008:	f7fb fda0 	bl	8006b4c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        (currentIndex == 0) ? touchgfx::Color::getColorFromRGB(255, 0, 0)
                            : touchgfx::Color::getColorFromRGB(0, 102, 153),
        touchgfx::Color::getColorFromRGB(0, 153, 204),
        touchgfx::Color::getColorFromRGB(0, 51, 102),
        touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn3x3.invalidate();
 800b00c:	4640      	mov	r0, r8
 800b00e:	f00c fee9 	bl	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>

    btn4x4.setBoxWithBorderColors(
 800b012:	f894 13f0 	ldrb.w	r1, [r4, #1008]	@ 0x3f0
 800b016:	4b1d      	ldr	r3, [pc, #116]	@ (800b08c <_ZN22SelectedGameDesignView15updateHighlightEv+0xa8>)
 800b018:	4a1d      	ldr	r2, [pc, #116]	@ (800b090 <_ZN22SelectedGameDesignView15updateHighlightEv+0xac>)
 800b01a:	9700      	str	r7, [sp, #0]
 800b01c:	f504 78ac 	add.w	r8, r4, #344	@ 0x158
 800b020:	2901      	cmp	r1, #1
 800b022:	bf14      	ite	ne
 800b024:	4631      	movne	r1, r6
 800b026:	4629      	moveq	r1, r5
 800b028:	4640      	mov	r0, r8
 800b02a:	f7fb fd8f 	bl	8006b4c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        (currentIndex == 1) ? touchgfx::Color::getColorFromRGB(255, 0, 0)
                            : touchgfx::Color::getColorFromRGB(0, 102, 153),
        touchgfx::Color::getColorFromRGB(0, 153, 204),
        touchgfx::Color::getColorFromRGB(0, 51, 102),
        touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn4x4.invalidate();
 800b02e:	4640      	mov	r0, r8
 800b030:	f00c fed8 	bl	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>

    btn5x5.setBoxWithBorderColors(
 800b034:	f894 13f0 	ldrb.w	r1, [r4, #1008]	@ 0x3f0
 800b038:	4b14      	ldr	r3, [pc, #80]	@ (800b08c <_ZN22SelectedGameDesignView15updateHighlightEv+0xa8>)
 800b03a:	4a15      	ldr	r2, [pc, #84]	@ (800b090 <_ZN22SelectedGameDesignView15updateHighlightEv+0xac>)
 800b03c:	9700      	str	r7, [sp, #0]
 800b03e:	f504 78e8 	add.w	r8, r4, #464	@ 0x1d0
 800b042:	2902      	cmp	r1, #2
 800b044:	bf14      	ite	ne
 800b046:	4631      	movne	r1, r6
 800b048:	4629      	moveq	r1, r5
 800b04a:	4640      	mov	r0, r8
 800b04c:	f7fb fd7e 	bl	8006b4c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        (currentIndex == 2) ? touchgfx::Color::getColorFromRGB(255, 0, 0)
                            : touchgfx::Color::getColorFromRGB(0, 102, 153),
        touchgfx::Color::getColorFromRGB(0, 153, 204),
        touchgfx::Color::getColorFromRGB(0, 51, 102),
        touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn5x5.invalidate();
 800b050:	4640      	mov	r0, r8
 800b052:	f00c fec7 	bl	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>

    flexButton1.setBoxWithBorderColors(
 800b056:	f894 13f0 	ldrb.w	r1, [r4, #1008]	@ 0x3f0
 800b05a:	4b0c      	ldr	r3, [pc, #48]	@ (800b08c <_ZN22SelectedGameDesignView15updateHighlightEv+0xa8>)
 800b05c:	4a0c      	ldr	r2, [pc, #48]	@ (800b090 <_ZN22SelectedGameDesignView15updateHighlightEv+0xac>)
 800b05e:	9700      	str	r7, [sp, #0]
 800b060:	f504 7848 	add.w	r8, r4, #800	@ 0x320
 800b064:	4640      	mov	r0, r8
 800b066:	2903      	cmp	r1, #3
 800b068:	bf14      	ite	ne
 800b06a:	4631      	movne	r1, r6
 800b06c:	4629      	moveq	r1, r5
 800b06e:	f7fb fd6d 	bl	8006b4c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        (currentIndex == 3) ? touchgfx::Color::getColorFromRGB(255, 0, 0)
                            : touchgfx::Color::getColorFromRGB(0, 102, 153),
        touchgfx::Color::getColorFromRGB(0, 153, 204),
        touchgfx::Color::getColorFromRGB(0, 51, 102),
        touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton1.invalidate();
 800b072:	4640      	mov	r0, r8
}
 800b074:	b002      	add	sp, #8
 800b076:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    flexButton1.invalidate();
 800b07a:	f00c beb3 	b.w	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
 800b07e:	bf00      	nop
 800b080:	ff006699 	.word	0xff006699
 800b084:	ffff0000 	.word	0xffff0000
 800b088:	ff336699 	.word	0xff336699
 800b08c:	ff003366 	.word	0xff003366
 800b090:	ff0099cc 	.word	0xff0099cc

0800b094 <_ZN22SelectedGameDesignView11setupScreenEv>:
{
 800b094:	b510      	push	{r4, lr}
 800b096:	4604      	mov	r4, r0
    SelectedGameDesignViewBase::setupScreen();
 800b098:	f7fb fd08 	bl	8006aac <_ZN26SelectedGameDesignViewBase11setupScreenEv>
    currentIndex = 0;
 800b09c:	2300      	movs	r3, #0
 800b09e:	f884 33f0 	strb.w	r3, [r4, #1008]	@ 0x3f0
    updateHighlight();
 800b0a2:	4620      	mov	r0, r4
}
 800b0a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    updateHighlight();
 800b0a8:	f7ff bf9c 	b.w	800afe4 <_ZN22SelectedGameDesignView15updateHighlightEv>

0800b0ac <_ZN22SelectedGameDesignView6moveUpEv>:
    if (currentIndex > 0)
 800b0ac:	f890 33f0 	ldrb.w	r3, [r0, #1008]	@ 0x3f0
 800b0b0:	b12b      	cbz	r3, 800b0be <_ZN22SelectedGameDesignView6moveUpEv+0x12>
        currentIndex--;
 800b0b2:	3b01      	subs	r3, #1
 800b0b4:	b2db      	uxtb	r3, r3
 800b0b6:	f880 33f0 	strb.w	r3, [r0, #1008]	@ 0x3f0
    updateHighlight();
 800b0ba:	f7ff bf93 	b.w	800afe4 <_ZN22SelectedGameDesignView15updateHighlightEv>
        currentIndex = MODE_COUNT - 1;
 800b0be:	2303      	movs	r3, #3
 800b0c0:	e7f9      	b.n	800b0b6 <_ZN22SelectedGameDesignView6moveUpEv+0xa>

0800b0c2 <_ZN22SelectedGameDesignView8moveDownEv>:
    if (currentIndex < MODE_COUNT - 1)
 800b0c2:	f890 33f0 	ldrb.w	r3, [r0, #1008]	@ 0x3f0
 800b0c6:	2b02      	cmp	r3, #2
        currentIndex++;
 800b0c8:	bf9a      	itte	ls
 800b0ca:	3301      	addls	r3, #1
 800b0cc:	b2db      	uxtbls	r3, r3
        currentIndex = 0;
 800b0ce:	2300      	movhi	r3, #0
 800b0d0:	f880 33f0 	strb.w	r3, [r0, #1008]	@ 0x3f0
    updateHighlight();
 800b0d4:	f7ff bf86 	b.w	800afe4 <_ZN22SelectedGameDesignView15updateHighlightEv>

0800b0d8 <_ZN22SelectedGameDesignView15handleTickEventEv>:

void SelectedGameDesignView::handleTickEvent()
{
 800b0d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    static bool firstTick = true;
    static uint8_t lastUpBtn;
    static uint8_t lastDownBtn;
    static uint8_t lastSelectBtn;

    uint8_t upBtn = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10);
 800b0dc:	f44f 6180 	mov.w	r1, #1024	@ 0x400
{
 800b0e0:	4605      	mov	r5, r0
    uint8_t upBtn = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10);
 800b0e2:	4820      	ldr	r0, [pc, #128]	@ (800b164 <_ZN22SelectedGameDesignView15handleTickEventEv+0x8c>)
 800b0e4:	f8df a088 	ldr.w	sl, [pc, #136]	@ 800b170 <_ZN22SelectedGameDesignView15handleTickEventEv+0x98>
 800b0e8:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 800b174 <_ZN22SelectedGameDesignView15handleTickEventEv+0x9c>
 800b0ec:	f8df 8088 	ldr.w	r8, [pc, #136]	@ 800b178 <_ZN22SelectedGameDesignView15handleTickEventEv+0xa0>
 800b0f0:	f001 fa1a 	bl	800c528 <HAL_GPIO_ReadPin>
    uint8_t downBtn = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12);
 800b0f4:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
    uint8_t upBtn = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10);
 800b0f8:	4607      	mov	r7, r0
    uint8_t downBtn = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12);
 800b0fa:	481a      	ldr	r0, [pc, #104]	@ (800b164 <_ZN22SelectedGameDesignView15handleTickEventEv+0x8c>)
 800b0fc:	f001 fa14 	bl	800c528 <HAL_GPIO_ReadPin>
    uint8_t selectBtn = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 800b100:	2101      	movs	r1, #1
    uint8_t downBtn = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12);
 800b102:	4606      	mov	r6, r0
    uint8_t selectBtn = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 800b104:	4818      	ldr	r0, [pc, #96]	@ (800b168 <_ZN22SelectedGameDesignView15handleTickEventEv+0x90>)
 800b106:	f001 fa0f 	bl	800c528 <HAL_GPIO_ReadPin>

    if (firstTick)
 800b10a:	4b18      	ldr	r3, [pc, #96]	@ (800b16c <_ZN22SelectedGameDesignView15handleTickEventEv+0x94>)
 800b10c:	781a      	ldrb	r2, [r3, #0]
    uint8_t selectBtn = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 800b10e:	4604      	mov	r4, r0
    if (firstTick)
 800b110:	b14a      	cbz	r2, 800b126 <_ZN22SelectedGameDesignView15handleTickEventEv+0x4e>
    {
        lastUpBtn = upBtn;
        lastDownBtn = downBtn;
        lastSelectBtn = selectBtn;
        firstTick = false;
 800b112:	2200      	movs	r2, #0
        lastUpBtn = upBtn;
 800b114:	f88a 7000 	strb.w	r7, [sl]
        lastDownBtn = downBtn;
 800b118:	f889 6000 	strb.w	r6, [r9]
        lastSelectBtn = selectBtn;
 800b11c:	f888 0000 	strb.w	r0, [r8]
        firstTick = false;
 800b120:	701a      	strb	r2, [r3, #0]
    if (selectBtn == GPIO_PIN_RESET && lastSelectBtn == GPIO_PIN_SET)
    {
        selectMode();
    }
    lastSelectBtn = selectBtn;
}
 800b122:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (upBtn == GPIO_PIN_RESET && lastUpBtn == GPIO_PIN_SET)
 800b126:	b937      	cbnz	r7, 800b136 <_ZN22SelectedGameDesignView15handleTickEventEv+0x5e>
 800b128:	f89a 3000 	ldrb.w	r3, [sl]
 800b12c:	2b01      	cmp	r3, #1
 800b12e:	d102      	bne.n	800b136 <_ZN22SelectedGameDesignView15handleTickEventEv+0x5e>
        moveUp();
 800b130:	4628      	mov	r0, r5
 800b132:	f7ff ffbb 	bl	800b0ac <_ZN22SelectedGameDesignView6moveUpEv>
    lastUpBtn = upBtn;
 800b136:	f88a 7000 	strb.w	r7, [sl]
    if (downBtn == GPIO_PIN_RESET && lastDownBtn == GPIO_PIN_SET)
 800b13a:	b936      	cbnz	r6, 800b14a <_ZN22SelectedGameDesignView15handleTickEventEv+0x72>
 800b13c:	f899 3000 	ldrb.w	r3, [r9]
 800b140:	2b01      	cmp	r3, #1
 800b142:	d102      	bne.n	800b14a <_ZN22SelectedGameDesignView15handleTickEventEv+0x72>
        moveDown();
 800b144:	4628      	mov	r0, r5
 800b146:	f7ff ffbc 	bl	800b0c2 <_ZN22SelectedGameDesignView8moveDownEv>
    lastDownBtn = downBtn;
 800b14a:	f889 6000 	strb.w	r6, [r9]
    if (selectBtn == GPIO_PIN_RESET && lastSelectBtn == GPIO_PIN_SET)
 800b14e:	b934      	cbnz	r4, 800b15e <_ZN22SelectedGameDesignView15handleTickEventEv+0x86>
 800b150:	f898 3000 	ldrb.w	r3, [r8]
 800b154:	2b01      	cmp	r3, #1
 800b156:	d102      	bne.n	800b15e <_ZN22SelectedGameDesignView15handleTickEventEv+0x86>
        selectMode();
 800b158:	4628      	mov	r0, r5
 800b15a:	f7ff ff21 	bl	800afa0 <_ZN22SelectedGameDesignView10selectModeEv>
    lastSelectBtn = selectBtn;
 800b15e:	f888 4000 	strb.w	r4, [r8]
 800b162:	e7de      	b.n	800b122 <_ZN22SelectedGameDesignView15handleTickEventEv+0x4a>
 800b164:	40020400 	.word	0x40020400
 800b168:	40020000 	.word	0x40020000
 800b16c:	2000002c 	.word	0x2000002c
 800b170:	200031e2 	.word	0x200031e2
 800b174:	200031e1 	.word	0x200031e1
 800b178:	200031e0 	.word	0x200031e0

0800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 800b17c:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 800b17e:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 800b180:	4604      	mov	r4, r0
        setWidth(width);
 800b182:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
    void setWidthHeight(int16_t width, int16_t height)
 800b184:	4615      	mov	r5, r2
        setWidth(width);
 800b186:	4798      	blx	r3
        setHeight(height);
 800b188:	6823      	ldr	r3, [r4, #0]
 800b18a:	4629      	mov	r1, r5
 800b18c:	4620      	mov	r0, r4
 800b18e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 800b190:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800b194:	4718      	bx	r3

0800b196 <_ZN4Tile15handleTickEventEv>:

    invalidate();
    Application::getInstance()->registerTimerWidget(this); // gọi tickEvent
}
void Tile::handleTickEvent()
{
 800b196:	b538      	push	{r3, r4, r5, lr}
    if (currentStep >= totalSteps)
 800b198:	f8d0 50c8 	ldr.w	r5, [r0, #200]	@ 0xc8
 800b19c:	2d05      	cmp	r5, #5
{
 800b19e:	4604      	mov	r4, r0
    if (currentStep >= totalSteps)
 800b1a0:	dd1b      	ble.n	800b1da <_ZN4Tile15handleTickEventEv+0x44>
    {
        // Hoàn tất animation
        setWidthHeight(60, 60);
 800b1a2:	223c      	movs	r2, #60	@ 0x3c
 800b1a4:	4611      	mov	r1, r2
 800b1a6:	f7ff ffe9 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
        moveTo(centerX - 30, centerY - 30);
 800b1aa:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
 800b1ae:	f8d4 10c0 	ldr.w	r1, [r4, #192]	@ 0xc0
 800b1b2:	6823      	ldr	r3, [r4, #0]
 800b1b4:	3a1e      	subs	r2, #30
 800b1b6:	391e      	subs	r1, #30
 800b1b8:	b209      	sxth	r1, r1
 800b1ba:	b212      	sxth	r2, r2
 800b1bc:	4620      	mov	r0, r4
 800b1be:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b1c0:	4798      	blx	r3
        invalidate();
 800b1c2:	6823      	ldr	r3, [r4, #0]
 800b1c4:	4620      	mov	r0, r4
 800b1c6:	695b      	ldr	r3, [r3, #20]
 800b1c8:	4798      	blx	r3
        Application::getInstance()->unregisterTimerWidget(this);
 800b1ca:	f00b fbe7 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
     * @note If widget has been registered multiple times, an equal number of calls to unregister
     *       are required to stop widget from receiving tick events.
     */
    void unregisterTimerWidget(const Drawable* w)
    {
        timerWidgets.remove(w);
 800b1ce:	4621      	mov	r1, r4
 800b1d0:	3004      	adds	r0, #4
    setWidthHeight(size, size);
    moveTo(centerX - offset, centerY - offset);
    invalidate();

    currentStep++;
 800b1d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b1d6:	f00b bc2e 	b.w	8016a36 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
    int size = 10 + ((60 - 10) * currentStep) / totalSteps;
 800b1da:	2332      	movs	r3, #50	@ 0x32
 800b1dc:	435d      	muls	r5, r3
 800b1de:	2306      	movs	r3, #6
 800b1e0:	fb95 f5f3 	sdiv	r5, r5, r3
 800b1e4:	350a      	adds	r5, #10
    setWidthHeight(size, size);
 800b1e6:	b22a      	sxth	r2, r5
 800b1e8:	4611      	mov	r1, r2
 800b1ea:	f7ff ffc7 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
    int offset = size / 2;
 800b1ee:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
    moveTo(centerX - offset, centerY - offset);
 800b1f2:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
 800b1f6:	f8d4 10c0 	ldr.w	r1, [r4, #192]	@ 0xc0
 800b1fa:	6823      	ldr	r3, [r4, #0]
 800b1fc:	f3c5 054f 	ubfx	r5, r5, #1, #16
 800b200:	1b52      	subs	r2, r2, r5
 800b202:	1b49      	subs	r1, r1, r5
 800b204:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b206:	b212      	sxth	r2, r2
 800b208:	b209      	sxth	r1, r1
 800b20a:	4620      	mov	r0, r4
 800b20c:	4798      	blx	r3
    invalidate();
 800b20e:	6823      	ldr	r3, [r4, #0]
 800b210:	4620      	mov	r0, r4
 800b212:	695b      	ldr	r3, [r3, #20]
 800b214:	4798      	blx	r3
    currentStep++;
 800b216:	f8d4 30c8 	ldr.w	r3, [r4, #200]	@ 0xc8
 800b21a:	3301      	adds	r3, #1
 800b21c:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
 800b220:	bd38      	pop	{r3, r4, r5, pc}
	...

0800b224 <_ZN4TileC1Ev>:
Tile::Tile()
 800b224:	b510      	push	{r4, lr}
 800b226:	4604      	mov	r4, r0
 800b228:	f7fc fabe 	bl	80077a8 <_ZN8TileBaseC1Ev>
 800b22c:	4b03      	ldr	r3, [pc, #12]	@ (800b23c <_ZN4TileC1Ev+0x18>)
 800b22e:	6023      	str	r3, [r4, #0]
 800b230:	2300      	movs	r3, #0
 800b232:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
}
 800b236:	4620      	mov	r0, r4
 800b238:	bd10      	pop	{r4, pc}
 800b23a:	bf00      	nop
 800b23c:	0802de04 	.word	0x0802de04

0800b240 <_ZN4Tile8setValueEt>:
{
 800b240:	b538      	push	{r3, r4, r5, lr}
 800b242:	4605      	mov	r5, r0
    if (value == 0)
 800b244:	460c      	mov	r4, r1
 800b246:	b981      	cbnz	r1, 800b26a <_ZN4Tile8setValueEt+0x2a>
        visible = vis;
 800b248:	4a26      	ldr	r2, [pc, #152]	@ (800b2e4 <_ZN4Tile8setValueEt+0xa4>)
 800b24a:	f880 1085 	strb.w	r1, [r0, #133]	@ 0x85
        alpha = newAlpha;
 800b24e:	2323      	movs	r3, #35	@ 0x23
    boxWithBorder1.invalidate();
 800b250:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
        color = newColor;
 800b254:	656a      	str	r2, [r5, #84]	@ 0x54
        alpha = newAlpha;
 800b256:	f885 3052 	strb.w	r3, [r5, #82]	@ 0x52
 800b25a:	f00c fdc3 	bl	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
    textArea1.invalidate();
 800b25e:	f105 0060 	add.w	r0, r5, #96	@ 0x60
}
 800b262:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    textArea1.invalidate();
 800b266:	f00c bdbd 	b.w	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
        Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%u", value);
 800b26a:	460b      	mov	r3, r1
 800b26c:	4a1e      	ldr	r2, [pc, #120]	@ (800b2e8 <_ZN4Tile8setValueEt+0xa8>)
 800b26e:	210a      	movs	r1, #10
 800b270:	30ac      	adds	r0, #172	@ 0xac
 800b272:	f00f f8f8 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800b276:	2301      	movs	r3, #1
        switch (value)
 800b278:	2c20      	cmp	r4, #32
 800b27a:	f885 3085 	strb.w	r3, [r5, #133]	@ 0x85
 800b27e:	f885 3051 	strb.w	r3, [r5, #81]	@ 0x51
 800b282:	d025      	beq.n	800b2d0 <_ZN4Tile8setValueEt+0x90>
 800b284:	d811      	bhi.n	800b2aa <_ZN4Tile8setValueEt+0x6a>
 800b286:	2c08      	cmp	r4, #8
 800b288:	d024      	beq.n	800b2d4 <_ZN4Tile8setValueEt+0x94>
 800b28a:	d808      	bhi.n	800b29e <_ZN4Tile8setValueEt+0x5e>
 800b28c:	2c02      	cmp	r4, #2
 800b28e:	d023      	beq.n	800b2d8 <_ZN4Tile8setValueEt+0x98>
 800b290:	4a16      	ldr	r2, [pc, #88]	@ (800b2ec <_ZN4Tile8setValueEt+0xac>)
 800b292:	4b17      	ldr	r3, [pc, #92]	@ (800b2f0 <_ZN4Tile8setValueEt+0xb0>)
 800b294:	2c04      	cmp	r4, #4
 800b296:	bf08      	it	eq
 800b298:	461a      	moveq	r2, r3
        boxWithBorder1.setAlpha(200);
 800b29a:	23c8      	movs	r3, #200	@ 0xc8
 800b29c:	e7d8      	b.n	800b250 <_ZN4Tile8setValueEt+0x10>
        switch (value)
 800b29e:	4a13      	ldr	r2, [pc, #76]	@ (800b2ec <_ZN4Tile8setValueEt+0xac>)
 800b2a0:	4b14      	ldr	r3, [pc, #80]	@ (800b2f4 <_ZN4Tile8setValueEt+0xb4>)
 800b2a2:	2c10      	cmp	r4, #16
 800b2a4:	bf08      	it	eq
 800b2a6:	461a      	moveq	r2, r3
 800b2a8:	e7f7      	b.n	800b29a <_ZN4Tile8setValueEt+0x5a>
 800b2aa:	f5b4 7f80 	cmp.w	r4, #256	@ 0x100
 800b2ae:	d015      	beq.n	800b2dc <_ZN4Tile8setValueEt+0x9c>
 800b2b0:	d807      	bhi.n	800b2c2 <_ZN4Tile8setValueEt+0x82>
 800b2b2:	2c40      	cmp	r4, #64	@ 0x40
 800b2b4:	d014      	beq.n	800b2e0 <_ZN4Tile8setValueEt+0xa0>
 800b2b6:	4a0d      	ldr	r2, [pc, #52]	@ (800b2ec <_ZN4Tile8setValueEt+0xac>)
 800b2b8:	4b0f      	ldr	r3, [pc, #60]	@ (800b2f8 <_ZN4Tile8setValueEt+0xb8>)
 800b2ba:	2c80      	cmp	r4, #128	@ 0x80
 800b2bc:	bf08      	it	eq
 800b2be:	461a      	moveq	r2, r3
 800b2c0:	e7eb      	b.n	800b29a <_ZN4Tile8setValueEt+0x5a>
 800b2c2:	4a0a      	ldr	r2, [pc, #40]	@ (800b2ec <_ZN4Tile8setValueEt+0xac>)
 800b2c4:	4b0d      	ldr	r3, [pc, #52]	@ (800b2fc <_ZN4Tile8setValueEt+0xbc>)
 800b2c6:	f5b4 7f00 	cmp.w	r4, #512	@ 0x200
 800b2ca:	bf08      	it	eq
 800b2cc:	461a      	moveq	r2, r3
 800b2ce:	e7e4      	b.n	800b29a <_ZN4Tile8setValueEt+0x5a>
 800b2d0:	4a0b      	ldr	r2, [pc, #44]	@ (800b300 <_ZN4Tile8setValueEt+0xc0>)
 800b2d2:	e7e2      	b.n	800b29a <_ZN4Tile8setValueEt+0x5a>
 800b2d4:	4a0b      	ldr	r2, [pc, #44]	@ (800b304 <_ZN4Tile8setValueEt+0xc4>)
 800b2d6:	e7e0      	b.n	800b29a <_ZN4Tile8setValueEt+0x5a>
 800b2d8:	4a02      	ldr	r2, [pc, #8]	@ (800b2e4 <_ZN4Tile8setValueEt+0xa4>)
 800b2da:	e7de      	b.n	800b29a <_ZN4Tile8setValueEt+0x5a>
 800b2dc:	4a0a      	ldr	r2, [pc, #40]	@ (800b308 <_ZN4Tile8setValueEt+0xc8>)
 800b2de:	e7dc      	b.n	800b29a <_ZN4Tile8setValueEt+0x5a>
 800b2e0:	4a0a      	ldr	r2, [pc, #40]	@ (800b30c <_ZN4Tile8setValueEt+0xcc>)
 800b2e2:	e7da      	b.n	800b29a <_ZN4Tile8setValueEt+0x5a>
 800b2e4:	ffeee4da 	.word	0xffeee4da
 800b2e8:	0802cc74 	.word	0x0802cc74
 800b2ec:	ff3c3a32 	.word	0xff3c3a32
 800b2f0:	ffede0c8 	.word	0xffede0c8
 800b2f4:	fff59563 	.word	0xfff59563
 800b2f8:	ffedcf72 	.word	0xffedcf72
 800b2fc:	ffedc850 	.word	0xffedc850
 800b300:	fff67c5f 	.word	0xfff67c5f
 800b304:	fff2b179 	.word	0xfff2b179
 800b308:	ffedcc61 	.word	0xffedcc61
 800b30c:	fff65e3b 	.word	0xfff65e3b

0800b310 <_ZNK4Tile8getValueEv>:
{
 800b310:	b508      	push	{r3, lr}
    if (!textArea1.isVisible())
 800b312:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800b316:	b123      	cbz	r3, 800b322 <_ZNK4Tile8getValueEv+0x12>
    return touchgfx::Unicode::atoi(textArea1Buffer);
 800b318:	30ac      	adds	r0, #172	@ 0xac
 800b31a:	f00e fd8f 	bl	8019e3c <_ZN8touchgfx7Unicode4atoiEPKt>
 800b31e:	b280      	uxth	r0, r0
}
 800b320:	bd08      	pop	{r3, pc}
        return 0;
 800b322:	4618      	mov	r0, r3
 800b324:	e7fc      	b.n	800b320 <_ZNK4Tile8getValueEv+0x10>

0800b326 <_ZN4Tile12animateSpawnEv>:
{
 800b326:	b510      	push	{r4, lr}
    currentStep = 0;
 800b328:	2300      	movs	r3, #0
{
 800b32a:	4604      	mov	r4, r0
    setWidthHeight(10, 10);
 800b32c:	220a      	movs	r2, #10
    currentStep = 0;
 800b32e:	f8c0 30c8 	str.w	r3, [r0, #200]	@ 0xc8
    setWidthHeight(10, 10);
 800b332:	4611      	mov	r1, r2
 800b334:	f7ff ff22 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
    moveTo(centerX - 5, centerY - 5);
 800b338:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
 800b33c:	f8d4 10c0 	ldr.w	r1, [r4, #192]	@ 0xc0
 800b340:	6823      	ldr	r3, [r4, #0]
 800b342:	3a05      	subs	r2, #5
 800b344:	3905      	subs	r1, #5
 800b346:	b209      	sxth	r1, r1
 800b348:	b212      	sxth	r2, r2
 800b34a:	4620      	mov	r0, r4
 800b34c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b34e:	4798      	blx	r3
 800b350:	2301      	movs	r3, #1
 800b352:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
 800b356:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
 800b35a:	f884 3085 	strb.w	r3, [r4, #133]	@ 0x85
    invalidate();
 800b35e:	6823      	ldr	r3, [r4, #0]
 800b360:	4620      	mov	r0, r4
 800b362:	695b      	ldr	r3, [r3, #20]
 800b364:	4798      	blx	r3
    Application::getInstance()->registerTimerWidget(this); // gọi tickEvent
 800b366:	f00b fb19 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 800b36a:	4621      	mov	r1, r4
 800b36c:	3004      	adds	r0, #4
}
 800b36e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b372:	f00b bc09 	b.w	8016b88 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>

0800b376 <_ZN4Tile10initializeEv>:
{
 800b376:	b510      	push	{r4, lr}
 800b378:	4604      	mov	r4, r0
    TileBase::initialize();
 800b37a:	f7fc fa0c 	bl	8007796 <_ZN8TileBase10initializeEv>
    textArea1.setWildcard(textArea1Buffer);
 800b37e:	f104 03ac 	add.w	r3, r4, #172	@ 0xac
 800b382:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
}
 800b386:	bd10      	pop	{r4, pc}

0800b388 <_ZN7Tile3x315handleTickEventEv>:
    invalidate();
    Application::getInstance()->registerTimerWidget(this); // gọi tickEvent
}

void Tile3x3::handleTickEvent()
{
 800b388:	b538      	push	{r3, r4, r5, lr}
    if (currentStep >= totalSteps)
 800b38a:	f8d0 50c8 	ldr.w	r5, [r0, #200]	@ 0xc8
 800b38e:	2d05      	cmp	r5, #5
{
 800b390:	4604      	mov	r4, r0
    if (currentStep >= totalSteps)
 800b392:	dd1b      	ble.n	800b3cc <_ZN7Tile3x315handleTickEventEv+0x44>
    {
        // Hoàn tất animation
        setWidthHeight(80, 80);
 800b394:	2250      	movs	r2, #80	@ 0x50
 800b396:	4611      	mov	r1, r2
 800b398:	f7ff fef0 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
        moveTo(centerX - 40, centerY - 40);
 800b39c:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
 800b3a0:	f8d4 10c0 	ldr.w	r1, [r4, #192]	@ 0xc0
 800b3a4:	6823      	ldr	r3, [r4, #0]
 800b3a6:	3a28      	subs	r2, #40	@ 0x28
 800b3a8:	3928      	subs	r1, #40	@ 0x28
 800b3aa:	b209      	sxth	r1, r1
 800b3ac:	b212      	sxth	r2, r2
 800b3ae:	4620      	mov	r0, r4
 800b3b0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b3b2:	4798      	blx	r3
        invalidate();
 800b3b4:	6823      	ldr	r3, [r4, #0]
 800b3b6:	4620      	mov	r0, r4
 800b3b8:	695b      	ldr	r3, [r3, #20]
 800b3ba:	4798      	blx	r3
        Application::getInstance()->unregisterTimerWidget(this);
 800b3bc:	f00b faee 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 800b3c0:	4621      	mov	r1, r4
 800b3c2:	3004      	adds	r0, #4
    setWidthHeight(size, size);
    moveTo(centerX - offset, centerY - offset);
    invalidate();

    currentStep++;
 800b3c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b3c8:	f00b bb35 	b.w	8016a36 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
    int size = 10 + ((80 - 10) * currentStep) / totalSteps;
 800b3cc:	2346      	movs	r3, #70	@ 0x46
 800b3ce:	435d      	muls	r5, r3
 800b3d0:	2306      	movs	r3, #6
 800b3d2:	fb95 f5f3 	sdiv	r5, r5, r3
 800b3d6:	350a      	adds	r5, #10
    setWidthHeight(size, size);
 800b3d8:	b22a      	sxth	r2, r5
 800b3da:	4611      	mov	r1, r2
 800b3dc:	f7ff fece 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
    int offset = size / 2;
 800b3e0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
    moveTo(centerX - offset, centerY - offset);
 800b3e4:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
 800b3e8:	f8d4 10c0 	ldr.w	r1, [r4, #192]	@ 0xc0
 800b3ec:	6823      	ldr	r3, [r4, #0]
 800b3ee:	f3c5 054f 	ubfx	r5, r5, #1, #16
 800b3f2:	1b52      	subs	r2, r2, r5
 800b3f4:	1b49      	subs	r1, r1, r5
 800b3f6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b3f8:	b212      	sxth	r2, r2
 800b3fa:	b209      	sxth	r1, r1
 800b3fc:	4620      	mov	r0, r4
 800b3fe:	4798      	blx	r3
    invalidate();
 800b400:	6823      	ldr	r3, [r4, #0]
 800b402:	4620      	mov	r0, r4
 800b404:	695b      	ldr	r3, [r3, #20]
 800b406:	4798      	blx	r3
    currentStep++;
 800b408:	f8d4 30c8 	ldr.w	r3, [r4, #200]	@ 0xc8
 800b40c:	3301      	adds	r3, #1
 800b40e:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
 800b412:	bd38      	pop	{r3, r4, r5, pc}

0800b414 <_ZN7Tile3x3C1Ev>:
Tile3x3::Tile3x3()
 800b414:	b510      	push	{r4, lr}
 800b416:	4604      	mov	r4, r0
 800b418:	f7fb ff58 	bl	80072cc <_ZN11Tile3x3BaseC1Ev>
 800b41c:	4b03      	ldr	r3, [pc, #12]	@ (800b42c <_ZN7Tile3x3C1Ev+0x18>)
 800b41e:	6023      	str	r3, [r4, #0]
 800b420:	2300      	movs	r3, #0
 800b422:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
}
 800b426:	4620      	mov	r0, r4
 800b428:	bd10      	pop	{r4, pc}
 800b42a:	bf00      	nop
 800b42c:	0802de98 	.word	0x0802de98

0800b430 <_ZN7Tile3x38setValueEt>:
{
 800b430:	b538      	push	{r3, r4, r5, lr}
 800b432:	4605      	mov	r5, r0
    if (value == 0)
 800b434:	460c      	mov	r4, r1
 800b436:	b981      	cbnz	r1, 800b45a <_ZN7Tile3x38setValueEt+0x2a>
 800b438:	4a26      	ldr	r2, [pc, #152]	@ (800b4d4 <_ZN7Tile3x38setValueEt+0xa4>)
 800b43a:	f880 1085 	strb.w	r1, [r0, #133]	@ 0x85
 800b43e:	2323      	movs	r3, #35	@ 0x23
    boxWithBorder1.invalidate();
 800b440:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
        color = newColor;
 800b444:	656a      	str	r2, [r5, #84]	@ 0x54
        alpha = newAlpha;
 800b446:	f885 3052 	strb.w	r3, [r5, #82]	@ 0x52
 800b44a:	f00c fccb 	bl	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
    textArea1.invalidate();
 800b44e:	f105 0060 	add.w	r0, r5, #96	@ 0x60
}
 800b452:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    textArea1.invalidate();
 800b456:	f00c bcc5 	b.w	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
        Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%u", value);
 800b45a:	460b      	mov	r3, r1
 800b45c:	4a1e      	ldr	r2, [pc, #120]	@ (800b4d8 <_ZN7Tile3x38setValueEt+0xa8>)
 800b45e:	210a      	movs	r1, #10
 800b460:	30ac      	adds	r0, #172	@ 0xac
 800b462:	f00f f800 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800b466:	2301      	movs	r3, #1
        switch (value)
 800b468:	2c20      	cmp	r4, #32
 800b46a:	f885 3085 	strb.w	r3, [r5, #133]	@ 0x85
 800b46e:	f885 3051 	strb.w	r3, [r5, #81]	@ 0x51
 800b472:	d025      	beq.n	800b4c0 <_ZN7Tile3x38setValueEt+0x90>
 800b474:	d811      	bhi.n	800b49a <_ZN7Tile3x38setValueEt+0x6a>
 800b476:	2c08      	cmp	r4, #8
 800b478:	d024      	beq.n	800b4c4 <_ZN7Tile3x38setValueEt+0x94>
 800b47a:	d808      	bhi.n	800b48e <_ZN7Tile3x38setValueEt+0x5e>
 800b47c:	2c02      	cmp	r4, #2
 800b47e:	d023      	beq.n	800b4c8 <_ZN7Tile3x38setValueEt+0x98>
 800b480:	4a16      	ldr	r2, [pc, #88]	@ (800b4dc <_ZN7Tile3x38setValueEt+0xac>)
 800b482:	4b17      	ldr	r3, [pc, #92]	@ (800b4e0 <_ZN7Tile3x38setValueEt+0xb0>)
 800b484:	2c04      	cmp	r4, #4
 800b486:	bf08      	it	eq
 800b488:	461a      	moveq	r2, r3
        boxWithBorder1.setAlpha(200);
 800b48a:	23c8      	movs	r3, #200	@ 0xc8
 800b48c:	e7d8      	b.n	800b440 <_ZN7Tile3x38setValueEt+0x10>
        switch (value)
 800b48e:	4a13      	ldr	r2, [pc, #76]	@ (800b4dc <_ZN7Tile3x38setValueEt+0xac>)
 800b490:	4b14      	ldr	r3, [pc, #80]	@ (800b4e4 <_ZN7Tile3x38setValueEt+0xb4>)
 800b492:	2c10      	cmp	r4, #16
 800b494:	bf08      	it	eq
 800b496:	461a      	moveq	r2, r3
 800b498:	e7f7      	b.n	800b48a <_ZN7Tile3x38setValueEt+0x5a>
 800b49a:	f5b4 7f80 	cmp.w	r4, #256	@ 0x100
 800b49e:	d015      	beq.n	800b4cc <_ZN7Tile3x38setValueEt+0x9c>
 800b4a0:	d807      	bhi.n	800b4b2 <_ZN7Tile3x38setValueEt+0x82>
 800b4a2:	2c40      	cmp	r4, #64	@ 0x40
 800b4a4:	d014      	beq.n	800b4d0 <_ZN7Tile3x38setValueEt+0xa0>
 800b4a6:	4a0d      	ldr	r2, [pc, #52]	@ (800b4dc <_ZN7Tile3x38setValueEt+0xac>)
 800b4a8:	4b0f      	ldr	r3, [pc, #60]	@ (800b4e8 <_ZN7Tile3x38setValueEt+0xb8>)
 800b4aa:	2c80      	cmp	r4, #128	@ 0x80
 800b4ac:	bf08      	it	eq
 800b4ae:	461a      	moveq	r2, r3
 800b4b0:	e7eb      	b.n	800b48a <_ZN7Tile3x38setValueEt+0x5a>
 800b4b2:	4a0a      	ldr	r2, [pc, #40]	@ (800b4dc <_ZN7Tile3x38setValueEt+0xac>)
 800b4b4:	4b0d      	ldr	r3, [pc, #52]	@ (800b4ec <_ZN7Tile3x38setValueEt+0xbc>)
 800b4b6:	f5b4 7f00 	cmp.w	r4, #512	@ 0x200
 800b4ba:	bf08      	it	eq
 800b4bc:	461a      	moveq	r2, r3
 800b4be:	e7e4      	b.n	800b48a <_ZN7Tile3x38setValueEt+0x5a>
 800b4c0:	4a0b      	ldr	r2, [pc, #44]	@ (800b4f0 <_ZN7Tile3x38setValueEt+0xc0>)
 800b4c2:	e7e2      	b.n	800b48a <_ZN7Tile3x38setValueEt+0x5a>
 800b4c4:	4a0b      	ldr	r2, [pc, #44]	@ (800b4f4 <_ZN7Tile3x38setValueEt+0xc4>)
 800b4c6:	e7e0      	b.n	800b48a <_ZN7Tile3x38setValueEt+0x5a>
 800b4c8:	4a02      	ldr	r2, [pc, #8]	@ (800b4d4 <_ZN7Tile3x38setValueEt+0xa4>)
 800b4ca:	e7de      	b.n	800b48a <_ZN7Tile3x38setValueEt+0x5a>
 800b4cc:	4a0a      	ldr	r2, [pc, #40]	@ (800b4f8 <_ZN7Tile3x38setValueEt+0xc8>)
 800b4ce:	e7dc      	b.n	800b48a <_ZN7Tile3x38setValueEt+0x5a>
 800b4d0:	4a0a      	ldr	r2, [pc, #40]	@ (800b4fc <_ZN7Tile3x38setValueEt+0xcc>)
 800b4d2:	e7da      	b.n	800b48a <_ZN7Tile3x38setValueEt+0x5a>
 800b4d4:	ffeee4da 	.word	0xffeee4da
 800b4d8:	0802cc74 	.word	0x0802cc74
 800b4dc:	ff3c3a32 	.word	0xff3c3a32
 800b4e0:	ffede0c8 	.word	0xffede0c8
 800b4e4:	fff59563 	.word	0xfff59563
 800b4e8:	ffedcf72 	.word	0xffedcf72
 800b4ec:	ffedc850 	.word	0xffedc850
 800b4f0:	fff67c5f 	.word	0xfff67c5f
 800b4f4:	fff2b179 	.word	0xfff2b179
 800b4f8:	ffedcc61 	.word	0xffedcc61
 800b4fc:	fff65e3b 	.word	0xfff65e3b

0800b500 <_ZNK7Tile3x38getValueEv>:
{
 800b500:	b508      	push	{r3, lr}
    if (!textArea1.isVisible())
 800b502:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800b506:	b123      	cbz	r3, 800b512 <_ZNK7Tile3x38getValueEv+0x12>
    return touchgfx::Unicode::atoi(textArea1Buffer);
 800b508:	30ac      	adds	r0, #172	@ 0xac
 800b50a:	f00e fc97 	bl	8019e3c <_ZN8touchgfx7Unicode4atoiEPKt>
 800b50e:	b280      	uxth	r0, r0
}
 800b510:	bd08      	pop	{r3, pc}
        return 0;
 800b512:	4618      	mov	r0, r3
 800b514:	e7fc      	b.n	800b510 <_ZNK7Tile3x38getValueEv+0x10>

0800b516 <_ZN7Tile3x312animateSpawnEv>:
{
 800b516:	b510      	push	{r4, lr}
    currentStep = 0;
 800b518:	2300      	movs	r3, #0
{
 800b51a:	4604      	mov	r4, r0
    setWidthHeight(10, 10);
 800b51c:	220a      	movs	r2, #10
    currentStep = 0;
 800b51e:	f8c0 30c8 	str.w	r3, [r0, #200]	@ 0xc8
    setWidthHeight(10, 10);
 800b522:	4611      	mov	r1, r2
 800b524:	f7ff fe2a 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
    moveTo(centerX - 5, centerY - 5);
 800b528:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
 800b52c:	f8d4 10c0 	ldr.w	r1, [r4, #192]	@ 0xc0
 800b530:	6823      	ldr	r3, [r4, #0]
 800b532:	3a05      	subs	r2, #5
 800b534:	3905      	subs	r1, #5
 800b536:	b209      	sxth	r1, r1
 800b538:	b212      	sxth	r2, r2
 800b53a:	4620      	mov	r0, r4
 800b53c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b53e:	4798      	blx	r3
 800b540:	2301      	movs	r3, #1
 800b542:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
 800b546:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
 800b54a:	f884 3085 	strb.w	r3, [r4, #133]	@ 0x85
    invalidate();
 800b54e:	6823      	ldr	r3, [r4, #0]
 800b550:	4620      	mov	r0, r4
 800b552:	695b      	ldr	r3, [r3, #20]
 800b554:	4798      	blx	r3
    Application::getInstance()->registerTimerWidget(this); // gọi tickEvent
 800b556:	f00b fa21 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 800b55a:	4621      	mov	r1, r4
 800b55c:	3004      	adds	r0, #4
}
 800b55e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b562:	f00b bb11 	b.w	8016b88 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>

0800b566 <_ZN7Tile3x310initializeEv>:
{
 800b566:	b510      	push	{r4, lr}
 800b568:	4604      	mov	r4, r0
    Tile3x3Base::initialize();
 800b56a:	f7fb fea6 	bl	80072ba <_ZN11Tile3x3Base10initializeEv>
    textArea1.setWildcard(textArea1Buffer);
 800b56e:	f104 03ac 	add.w	r3, r4, #172	@ 0xac
 800b572:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
}
 800b576:	bd10      	pop	{r4, pc}

0800b578 <_ZN7Tile5x515handleTickEventEv>:
    invalidate();
    Application::getInstance()->registerTimerWidget(this); // gọi tickEvent
}

void Tile5x5::handleTickEvent()
{
 800b578:	b538      	push	{r3, r4, r5, lr}
    if (currentStep >= totalSteps)
 800b57a:	f8d0 50c8 	ldr.w	r5, [r0, #200]	@ 0xc8
 800b57e:	2d05      	cmp	r5, #5
{
 800b580:	4604      	mov	r4, r0
    if (currentStep >= totalSteps)
 800b582:	dd1b      	ble.n	800b5bc <_ZN7Tile5x515handleTickEventEv+0x44>
    {
        // Hoàn tất animation
        setWidthHeight(48, 48);
 800b584:	2230      	movs	r2, #48	@ 0x30
 800b586:	4611      	mov	r1, r2
 800b588:	f7ff fdf8 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
        moveTo(centerX - 24, centerY - 24);
 800b58c:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
 800b590:	f8d4 10c0 	ldr.w	r1, [r4, #192]	@ 0xc0
 800b594:	6823      	ldr	r3, [r4, #0]
 800b596:	3a18      	subs	r2, #24
 800b598:	3918      	subs	r1, #24
 800b59a:	b209      	sxth	r1, r1
 800b59c:	b212      	sxth	r2, r2
 800b59e:	4620      	mov	r0, r4
 800b5a0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b5a2:	4798      	blx	r3
        invalidate();
 800b5a4:	6823      	ldr	r3, [r4, #0]
 800b5a6:	4620      	mov	r0, r4
 800b5a8:	695b      	ldr	r3, [r3, #20]
 800b5aa:	4798      	blx	r3
        Application::getInstance()->unregisterTimerWidget(this);
 800b5ac:	f00b f9f6 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 800b5b0:	4621      	mov	r1, r4
 800b5b2:	3004      	adds	r0, #4
    setWidthHeight(size, size);
    moveTo(centerX - offset, centerY - offset);
    invalidate();

    currentStep++;
 800b5b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b5b8:	f00b ba3d 	b.w	8016a36 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
    int size = 10 + ((48 - 10) * currentStep) / totalSteps;
 800b5bc:	2326      	movs	r3, #38	@ 0x26
 800b5be:	435d      	muls	r5, r3
 800b5c0:	2306      	movs	r3, #6
 800b5c2:	fb95 f5f3 	sdiv	r5, r5, r3
 800b5c6:	350a      	adds	r5, #10
    setWidthHeight(size, size);
 800b5c8:	b22a      	sxth	r2, r5
 800b5ca:	4611      	mov	r1, r2
 800b5cc:	f7ff fdd6 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
    int offset = size / 2;
 800b5d0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
    moveTo(centerX - offset, centerY - offset);
 800b5d4:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
 800b5d8:	f8d4 10c0 	ldr.w	r1, [r4, #192]	@ 0xc0
 800b5dc:	6823      	ldr	r3, [r4, #0]
 800b5de:	f3c5 054f 	ubfx	r5, r5, #1, #16
 800b5e2:	1b52      	subs	r2, r2, r5
 800b5e4:	1b49      	subs	r1, r1, r5
 800b5e6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b5e8:	b212      	sxth	r2, r2
 800b5ea:	b209      	sxth	r1, r1
 800b5ec:	4620      	mov	r0, r4
 800b5ee:	4798      	blx	r3
    invalidate();
 800b5f0:	6823      	ldr	r3, [r4, #0]
 800b5f2:	4620      	mov	r0, r4
 800b5f4:	695b      	ldr	r3, [r3, #20]
 800b5f6:	4798      	blx	r3
    currentStep++;
 800b5f8:	f8d4 30c8 	ldr.w	r3, [r4, #200]	@ 0xc8
 800b5fc:	3301      	adds	r3, #1
 800b5fe:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
 800b602:	bd38      	pop	{r3, r4, r5, pc}

0800b604 <_ZN7Tile5x5C1Ev>:
Tile5x5::Tile5x5()
 800b604:	b510      	push	{r4, lr}
 800b606:	4604      	mov	r4, r0
 800b608:	f7fb ff30 	bl	800746c <_ZN11Tile5x5BaseC1Ev>
 800b60c:	4b03      	ldr	r3, [pc, #12]	@ (800b61c <_ZN7Tile5x5C1Ev+0x18>)
 800b60e:	6023      	str	r3, [r4, #0]
 800b610:	2300      	movs	r3, #0
 800b612:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
}
 800b616:	4620      	mov	r0, r4
 800b618:	bd10      	pop	{r4, pc}
 800b61a:	bf00      	nop
 800b61c:	0802df2c 	.word	0x0802df2c

0800b620 <_ZN7Tile5x58setValueEt>:
{
 800b620:	b538      	push	{r3, r4, r5, lr}
 800b622:	4605      	mov	r5, r0
    if (value == 0)
 800b624:	460c      	mov	r4, r1
 800b626:	b981      	cbnz	r1, 800b64a <_ZN7Tile5x58setValueEt+0x2a>
 800b628:	4a26      	ldr	r2, [pc, #152]	@ (800b6c4 <_ZN7Tile5x58setValueEt+0xa4>)
 800b62a:	f880 1085 	strb.w	r1, [r0, #133]	@ 0x85
 800b62e:	2323      	movs	r3, #35	@ 0x23
    boxWithBorder1.invalidate();
 800b630:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
        color = newColor;
 800b634:	656a      	str	r2, [r5, #84]	@ 0x54
        alpha = newAlpha;
 800b636:	f885 3052 	strb.w	r3, [r5, #82]	@ 0x52
 800b63a:	f00c fbd3 	bl	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
    textArea1.invalidate();
 800b63e:	f105 0060 	add.w	r0, r5, #96	@ 0x60
}
 800b642:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    textArea1.invalidate();
 800b646:	f00c bbcd 	b.w	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
        Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%u", value);
 800b64a:	460b      	mov	r3, r1
 800b64c:	4a1e      	ldr	r2, [pc, #120]	@ (800b6c8 <_ZN7Tile5x58setValueEt+0xa8>)
 800b64e:	210a      	movs	r1, #10
 800b650:	30ac      	adds	r0, #172	@ 0xac
 800b652:	f00e ff08 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800b656:	2301      	movs	r3, #1
        switch (value)
 800b658:	2c20      	cmp	r4, #32
 800b65a:	f885 3085 	strb.w	r3, [r5, #133]	@ 0x85
 800b65e:	f885 3051 	strb.w	r3, [r5, #81]	@ 0x51
 800b662:	d025      	beq.n	800b6b0 <_ZN7Tile5x58setValueEt+0x90>
 800b664:	d811      	bhi.n	800b68a <_ZN7Tile5x58setValueEt+0x6a>
 800b666:	2c08      	cmp	r4, #8
 800b668:	d024      	beq.n	800b6b4 <_ZN7Tile5x58setValueEt+0x94>
 800b66a:	d808      	bhi.n	800b67e <_ZN7Tile5x58setValueEt+0x5e>
 800b66c:	2c02      	cmp	r4, #2
 800b66e:	d023      	beq.n	800b6b8 <_ZN7Tile5x58setValueEt+0x98>
 800b670:	4a16      	ldr	r2, [pc, #88]	@ (800b6cc <_ZN7Tile5x58setValueEt+0xac>)
 800b672:	4b17      	ldr	r3, [pc, #92]	@ (800b6d0 <_ZN7Tile5x58setValueEt+0xb0>)
 800b674:	2c04      	cmp	r4, #4
 800b676:	bf08      	it	eq
 800b678:	461a      	moveq	r2, r3
        boxWithBorder1.setAlpha(200);
 800b67a:	23c8      	movs	r3, #200	@ 0xc8
 800b67c:	e7d8      	b.n	800b630 <_ZN7Tile5x58setValueEt+0x10>
        switch (value)
 800b67e:	4a13      	ldr	r2, [pc, #76]	@ (800b6cc <_ZN7Tile5x58setValueEt+0xac>)
 800b680:	4b14      	ldr	r3, [pc, #80]	@ (800b6d4 <_ZN7Tile5x58setValueEt+0xb4>)
 800b682:	2c10      	cmp	r4, #16
 800b684:	bf08      	it	eq
 800b686:	461a      	moveq	r2, r3
 800b688:	e7f7      	b.n	800b67a <_ZN7Tile5x58setValueEt+0x5a>
 800b68a:	f5b4 7f80 	cmp.w	r4, #256	@ 0x100
 800b68e:	d015      	beq.n	800b6bc <_ZN7Tile5x58setValueEt+0x9c>
 800b690:	d807      	bhi.n	800b6a2 <_ZN7Tile5x58setValueEt+0x82>
 800b692:	2c40      	cmp	r4, #64	@ 0x40
 800b694:	d014      	beq.n	800b6c0 <_ZN7Tile5x58setValueEt+0xa0>
 800b696:	4a0d      	ldr	r2, [pc, #52]	@ (800b6cc <_ZN7Tile5x58setValueEt+0xac>)
 800b698:	4b0f      	ldr	r3, [pc, #60]	@ (800b6d8 <_ZN7Tile5x58setValueEt+0xb8>)
 800b69a:	2c80      	cmp	r4, #128	@ 0x80
 800b69c:	bf08      	it	eq
 800b69e:	461a      	moveq	r2, r3
 800b6a0:	e7eb      	b.n	800b67a <_ZN7Tile5x58setValueEt+0x5a>
 800b6a2:	4a0a      	ldr	r2, [pc, #40]	@ (800b6cc <_ZN7Tile5x58setValueEt+0xac>)
 800b6a4:	4b0d      	ldr	r3, [pc, #52]	@ (800b6dc <_ZN7Tile5x58setValueEt+0xbc>)
 800b6a6:	f5b4 7f00 	cmp.w	r4, #512	@ 0x200
 800b6aa:	bf08      	it	eq
 800b6ac:	461a      	moveq	r2, r3
 800b6ae:	e7e4      	b.n	800b67a <_ZN7Tile5x58setValueEt+0x5a>
 800b6b0:	4a0b      	ldr	r2, [pc, #44]	@ (800b6e0 <_ZN7Tile5x58setValueEt+0xc0>)
 800b6b2:	e7e2      	b.n	800b67a <_ZN7Tile5x58setValueEt+0x5a>
 800b6b4:	4a0b      	ldr	r2, [pc, #44]	@ (800b6e4 <_ZN7Tile5x58setValueEt+0xc4>)
 800b6b6:	e7e0      	b.n	800b67a <_ZN7Tile5x58setValueEt+0x5a>
 800b6b8:	4a02      	ldr	r2, [pc, #8]	@ (800b6c4 <_ZN7Tile5x58setValueEt+0xa4>)
 800b6ba:	e7de      	b.n	800b67a <_ZN7Tile5x58setValueEt+0x5a>
 800b6bc:	4a0a      	ldr	r2, [pc, #40]	@ (800b6e8 <_ZN7Tile5x58setValueEt+0xc8>)
 800b6be:	e7dc      	b.n	800b67a <_ZN7Tile5x58setValueEt+0x5a>
 800b6c0:	4a0a      	ldr	r2, [pc, #40]	@ (800b6ec <_ZN7Tile5x58setValueEt+0xcc>)
 800b6c2:	e7da      	b.n	800b67a <_ZN7Tile5x58setValueEt+0x5a>
 800b6c4:	ffeee4da 	.word	0xffeee4da
 800b6c8:	0802cc74 	.word	0x0802cc74
 800b6cc:	ff3c3a32 	.word	0xff3c3a32
 800b6d0:	ffede0c8 	.word	0xffede0c8
 800b6d4:	fff59563 	.word	0xfff59563
 800b6d8:	ffedcf72 	.word	0xffedcf72
 800b6dc:	ffedc850 	.word	0xffedc850
 800b6e0:	fff67c5f 	.word	0xfff67c5f
 800b6e4:	fff2b179 	.word	0xfff2b179
 800b6e8:	ffedcc61 	.word	0xffedcc61
 800b6ec:	fff65e3b 	.word	0xfff65e3b

0800b6f0 <_ZNK7Tile5x58getValueEv>:
{
 800b6f0:	b508      	push	{r3, lr}
    if (!textArea1.isVisible())
 800b6f2:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800b6f6:	b123      	cbz	r3, 800b702 <_ZNK7Tile5x58getValueEv+0x12>
    return touchgfx::Unicode::atoi(textArea1Buffer);
 800b6f8:	30ac      	adds	r0, #172	@ 0xac
 800b6fa:	f00e fb9f 	bl	8019e3c <_ZN8touchgfx7Unicode4atoiEPKt>
 800b6fe:	b280      	uxth	r0, r0
}
 800b700:	bd08      	pop	{r3, pc}
        return 0;
 800b702:	4618      	mov	r0, r3
 800b704:	e7fc      	b.n	800b700 <_ZNK7Tile5x58getValueEv+0x10>

0800b706 <_ZN7Tile5x512animateSpawnEv>:
{
 800b706:	b510      	push	{r4, lr}
    currentStep = 0;
 800b708:	2300      	movs	r3, #0
{
 800b70a:	4604      	mov	r4, r0
    setWidthHeight(10, 10);
 800b70c:	220a      	movs	r2, #10
    currentStep = 0;
 800b70e:	f8c0 30c8 	str.w	r3, [r0, #200]	@ 0xc8
    setWidthHeight(10, 10);
 800b712:	4611      	mov	r1, r2
 800b714:	f7ff fd32 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
    moveTo(centerX - 5, centerY - 5);
 800b718:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
 800b71c:	f8d4 10c0 	ldr.w	r1, [r4, #192]	@ 0xc0
 800b720:	6823      	ldr	r3, [r4, #0]
 800b722:	3a05      	subs	r2, #5
 800b724:	3905      	subs	r1, #5
 800b726:	b209      	sxth	r1, r1
 800b728:	b212      	sxth	r2, r2
 800b72a:	4620      	mov	r0, r4
 800b72c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b72e:	4798      	blx	r3
 800b730:	2301      	movs	r3, #1
 800b732:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
 800b736:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
 800b73a:	f884 3085 	strb.w	r3, [r4, #133]	@ 0x85
    invalidate();
 800b73e:	6823      	ldr	r3, [r4, #0]
 800b740:	4620      	mov	r0, r4
 800b742:	695b      	ldr	r3, [r3, #20]
 800b744:	4798      	blx	r3
    Application::getInstance()->registerTimerWidget(this); // gọi tickEvent
 800b746:	f00b f929 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 800b74a:	4621      	mov	r1, r4
 800b74c:	3004      	adds	r0, #4
}
 800b74e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b752:	f00b ba19 	b.w	8016b88 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>

0800b756 <_ZN7Tile5x510initializeEv>:
    Tile5x5Base::initialize();
 800b756:	f7fb be80 	b.w	800745a <_ZN11Tile5x5Base10initializeEv>

0800b75a <_ZN13Tile5x5_Super15handleTickEventEv>:
    invalidate();
    Application::getInstance()->registerTimerWidget(this); // gọi tickEvent
}

void Tile5x5_Super::handleTickEvent()
{
 800b75a:	b538      	push	{r3, r4, r5, lr}
    if (currentStep >= totalSteps)
 800b75c:	f8d0 50c8 	ldr.w	r5, [r0, #200]	@ 0xc8
 800b760:	2d05      	cmp	r5, #5
{
 800b762:	4604      	mov	r4, r0
    if (currentStep >= totalSteps)
 800b764:	dd1b      	ble.n	800b79e <_ZN13Tile5x5_Super15handleTickEventEv+0x44>
    {
        // Hoàn tất animation
        setWidthHeight(48, 48);
 800b766:	2230      	movs	r2, #48	@ 0x30
 800b768:	4611      	mov	r1, r2
 800b76a:	f7ff fd07 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
        moveTo(centerX - 24, centerY - 24);
 800b76e:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
 800b772:	f8d4 10c0 	ldr.w	r1, [r4, #192]	@ 0xc0
 800b776:	6823      	ldr	r3, [r4, #0]
 800b778:	3a18      	subs	r2, #24
 800b77a:	3918      	subs	r1, #24
 800b77c:	b209      	sxth	r1, r1
 800b77e:	b212      	sxth	r2, r2
 800b780:	4620      	mov	r0, r4
 800b782:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b784:	4798      	blx	r3
        invalidate();
 800b786:	6823      	ldr	r3, [r4, #0]
 800b788:	4620      	mov	r0, r4
 800b78a:	695b      	ldr	r3, [r3, #20]
 800b78c:	4798      	blx	r3
        Application::getInstance()->unregisterTimerWidget(this);
 800b78e:	f00b f905 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 800b792:	4621      	mov	r1, r4
 800b794:	3004      	adds	r0, #4
    setWidthHeight(size, size);
    moveTo(centerX - offset, centerY - offset);
    invalidate();

    currentStep++;
 800b796:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b79a:	f00b b94c 	b.w	8016a36 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
    int size = 10 + ((48 - 10) * currentStep) / totalSteps;
 800b79e:	2326      	movs	r3, #38	@ 0x26
 800b7a0:	435d      	muls	r5, r3
 800b7a2:	2306      	movs	r3, #6
 800b7a4:	fb95 f5f3 	sdiv	r5, r5, r3
 800b7a8:	350a      	adds	r5, #10
    setWidthHeight(size, size);
 800b7aa:	b22a      	sxth	r2, r5
 800b7ac:	4611      	mov	r1, r2
 800b7ae:	f7ff fce5 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
    int offset = size / 2;
 800b7b2:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
    moveTo(centerX - offset, centerY - offset);
 800b7b6:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
 800b7ba:	f8d4 10c0 	ldr.w	r1, [r4, #192]	@ 0xc0
 800b7be:	6823      	ldr	r3, [r4, #0]
 800b7c0:	f3c5 054f 	ubfx	r5, r5, #1, #16
 800b7c4:	1b52      	subs	r2, r2, r5
 800b7c6:	1b49      	subs	r1, r1, r5
 800b7c8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b7ca:	b212      	sxth	r2, r2
 800b7cc:	b209      	sxth	r1, r1
 800b7ce:	4620      	mov	r0, r4
 800b7d0:	4798      	blx	r3
    invalidate();
 800b7d2:	6823      	ldr	r3, [r4, #0]
 800b7d4:	4620      	mov	r0, r4
 800b7d6:	695b      	ldr	r3, [r3, #20]
 800b7d8:	4798      	blx	r3
    currentStep++;
 800b7da:	f8d4 30c8 	ldr.w	r3, [r4, #200]	@ 0xc8
 800b7de:	3301      	adds	r3, #1
 800b7e0:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
 800b7e4:	bd38      	pop	{r3, r4, r5, pc}
	...

0800b7e8 <_ZN13Tile5x5_SuperC1Ev>:
Tile5x5_Super::Tile5x5_Super()
 800b7e8:	b510      	push	{r4, lr}
 800b7ea:	4604      	mov	r4, r0
 800b7ec:	f7fb ff0e 	bl	800760c <_ZN17Tile5x5_SuperBaseC1Ev>
 800b7f0:	4b03      	ldr	r3, [pc, #12]	@ (800b800 <_ZN13Tile5x5_SuperC1Ev+0x18>)
 800b7f2:	6023      	str	r3, [r4, #0]
 800b7f4:	2300      	movs	r3, #0
 800b7f6:	f8c4 30c8 	str.w	r3, [r4, #200]	@ 0xc8
}
 800b7fa:	4620      	mov	r0, r4
 800b7fc:	bd10      	pop	{r4, pc}
 800b7fe:	bf00      	nop
 800b800:	0802dfc0 	.word	0x0802dfc0

0800b804 <_ZN13Tile5x5_Super8setValueEt>:
{
 800b804:	b538      	push	{r3, r4, r5, lr}
 800b806:	4605      	mov	r5, r0
    if (value == 0)
 800b808:	460c      	mov	r4, r1
 800b80a:	b981      	cbnz	r1, 800b82e <_ZN13Tile5x5_Super8setValueEt+0x2a>
 800b80c:	4a26      	ldr	r2, [pc, #152]	@ (800b8a8 <_ZN13Tile5x5_Super8setValueEt+0xa4>)
 800b80e:	f880 1085 	strb.w	r1, [r0, #133]	@ 0x85
 800b812:	2323      	movs	r3, #35	@ 0x23
    boxWithBorder1.invalidate();
 800b814:	f105 002c 	add.w	r0, r5, #44	@ 0x2c
        color = newColor;
 800b818:	656a      	str	r2, [r5, #84]	@ 0x54
        alpha = newAlpha;
 800b81a:	f885 3052 	strb.w	r3, [r5, #82]	@ 0x52
 800b81e:	f00c fae1 	bl	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
    textArea1.invalidate();
 800b822:	f105 0060 	add.w	r0, r5, #96	@ 0x60
}
 800b826:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    textArea1.invalidate();
 800b82a:	f00c badb 	b.w	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
        Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%u", value);
 800b82e:	460b      	mov	r3, r1
 800b830:	4a1e      	ldr	r2, [pc, #120]	@ (800b8ac <_ZN13Tile5x5_Super8setValueEt+0xa8>)
 800b832:	210a      	movs	r1, #10
 800b834:	30ac      	adds	r0, #172	@ 0xac
 800b836:	f00e fe16 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800b83a:	2301      	movs	r3, #1
        switch (value)
 800b83c:	2c20      	cmp	r4, #32
 800b83e:	f885 3085 	strb.w	r3, [r5, #133]	@ 0x85
 800b842:	f885 3051 	strb.w	r3, [r5, #81]	@ 0x51
 800b846:	d025      	beq.n	800b894 <_ZN13Tile5x5_Super8setValueEt+0x90>
 800b848:	d811      	bhi.n	800b86e <_ZN13Tile5x5_Super8setValueEt+0x6a>
 800b84a:	2c08      	cmp	r4, #8
 800b84c:	d024      	beq.n	800b898 <_ZN13Tile5x5_Super8setValueEt+0x94>
 800b84e:	d808      	bhi.n	800b862 <_ZN13Tile5x5_Super8setValueEt+0x5e>
 800b850:	2c02      	cmp	r4, #2
 800b852:	d023      	beq.n	800b89c <_ZN13Tile5x5_Super8setValueEt+0x98>
 800b854:	4a16      	ldr	r2, [pc, #88]	@ (800b8b0 <_ZN13Tile5x5_Super8setValueEt+0xac>)
 800b856:	4b17      	ldr	r3, [pc, #92]	@ (800b8b4 <_ZN13Tile5x5_Super8setValueEt+0xb0>)
 800b858:	2c04      	cmp	r4, #4
 800b85a:	bf08      	it	eq
 800b85c:	461a      	moveq	r2, r3
        boxWithBorder1.setAlpha(200);
 800b85e:	23c8      	movs	r3, #200	@ 0xc8
 800b860:	e7d8      	b.n	800b814 <_ZN13Tile5x5_Super8setValueEt+0x10>
        switch (value)
 800b862:	4a13      	ldr	r2, [pc, #76]	@ (800b8b0 <_ZN13Tile5x5_Super8setValueEt+0xac>)
 800b864:	4b14      	ldr	r3, [pc, #80]	@ (800b8b8 <_ZN13Tile5x5_Super8setValueEt+0xb4>)
 800b866:	2c10      	cmp	r4, #16
 800b868:	bf08      	it	eq
 800b86a:	461a      	moveq	r2, r3
 800b86c:	e7f7      	b.n	800b85e <_ZN13Tile5x5_Super8setValueEt+0x5a>
 800b86e:	f5b4 7f80 	cmp.w	r4, #256	@ 0x100
 800b872:	d015      	beq.n	800b8a0 <_ZN13Tile5x5_Super8setValueEt+0x9c>
 800b874:	d807      	bhi.n	800b886 <_ZN13Tile5x5_Super8setValueEt+0x82>
 800b876:	2c40      	cmp	r4, #64	@ 0x40
 800b878:	d014      	beq.n	800b8a4 <_ZN13Tile5x5_Super8setValueEt+0xa0>
 800b87a:	4a0d      	ldr	r2, [pc, #52]	@ (800b8b0 <_ZN13Tile5x5_Super8setValueEt+0xac>)
 800b87c:	4b0f      	ldr	r3, [pc, #60]	@ (800b8bc <_ZN13Tile5x5_Super8setValueEt+0xb8>)
 800b87e:	2c80      	cmp	r4, #128	@ 0x80
 800b880:	bf08      	it	eq
 800b882:	461a      	moveq	r2, r3
 800b884:	e7eb      	b.n	800b85e <_ZN13Tile5x5_Super8setValueEt+0x5a>
 800b886:	4a0a      	ldr	r2, [pc, #40]	@ (800b8b0 <_ZN13Tile5x5_Super8setValueEt+0xac>)
 800b888:	4b0d      	ldr	r3, [pc, #52]	@ (800b8c0 <_ZN13Tile5x5_Super8setValueEt+0xbc>)
 800b88a:	f5b4 7f00 	cmp.w	r4, #512	@ 0x200
 800b88e:	bf08      	it	eq
 800b890:	461a      	moveq	r2, r3
 800b892:	e7e4      	b.n	800b85e <_ZN13Tile5x5_Super8setValueEt+0x5a>
 800b894:	4a0b      	ldr	r2, [pc, #44]	@ (800b8c4 <_ZN13Tile5x5_Super8setValueEt+0xc0>)
 800b896:	e7e2      	b.n	800b85e <_ZN13Tile5x5_Super8setValueEt+0x5a>
 800b898:	4a0b      	ldr	r2, [pc, #44]	@ (800b8c8 <_ZN13Tile5x5_Super8setValueEt+0xc4>)
 800b89a:	e7e0      	b.n	800b85e <_ZN13Tile5x5_Super8setValueEt+0x5a>
 800b89c:	4a02      	ldr	r2, [pc, #8]	@ (800b8a8 <_ZN13Tile5x5_Super8setValueEt+0xa4>)
 800b89e:	e7de      	b.n	800b85e <_ZN13Tile5x5_Super8setValueEt+0x5a>
 800b8a0:	4a0a      	ldr	r2, [pc, #40]	@ (800b8cc <_ZN13Tile5x5_Super8setValueEt+0xc8>)
 800b8a2:	e7dc      	b.n	800b85e <_ZN13Tile5x5_Super8setValueEt+0x5a>
 800b8a4:	4a0a      	ldr	r2, [pc, #40]	@ (800b8d0 <_ZN13Tile5x5_Super8setValueEt+0xcc>)
 800b8a6:	e7da      	b.n	800b85e <_ZN13Tile5x5_Super8setValueEt+0x5a>
 800b8a8:	ffeee4da 	.word	0xffeee4da
 800b8ac:	0802cc74 	.word	0x0802cc74
 800b8b0:	ff3c3a32 	.word	0xff3c3a32
 800b8b4:	ffede0c8 	.word	0xffede0c8
 800b8b8:	fff59563 	.word	0xfff59563
 800b8bc:	ffedcf72 	.word	0xffedcf72
 800b8c0:	ffedc850 	.word	0xffedc850
 800b8c4:	fff67c5f 	.word	0xfff67c5f
 800b8c8:	fff2b179 	.word	0xfff2b179
 800b8cc:	ffedcc61 	.word	0xffedcc61
 800b8d0:	fff65e3b 	.word	0xfff65e3b

0800b8d4 <_ZNK13Tile5x5_Super8getValueEv>:
{
 800b8d4:	b508      	push	{r3, lr}
    if (!textArea1.isVisible())
 800b8d6:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800b8da:	b123      	cbz	r3, 800b8e6 <_ZNK13Tile5x5_Super8getValueEv+0x12>
    return touchgfx::Unicode::atoi(textArea1Buffer);
 800b8dc:	30ac      	adds	r0, #172	@ 0xac
 800b8de:	f00e faad 	bl	8019e3c <_ZN8touchgfx7Unicode4atoiEPKt>
 800b8e2:	b280      	uxth	r0, r0
}
 800b8e4:	bd08      	pop	{r3, pc}
        return 0;
 800b8e6:	4618      	mov	r0, r3
 800b8e8:	e7fc      	b.n	800b8e4 <_ZNK13Tile5x5_Super8getValueEv+0x10>

0800b8ea <_ZN13Tile5x5_Super12animateSpawnEv>:
{
 800b8ea:	b510      	push	{r4, lr}
    currentStep = 0;
 800b8ec:	2300      	movs	r3, #0
{
 800b8ee:	4604      	mov	r4, r0
    setWidthHeight(10, 10);
 800b8f0:	220a      	movs	r2, #10
    currentStep = 0;
 800b8f2:	f8c0 30c8 	str.w	r3, [r0, #200]	@ 0xc8
    setWidthHeight(10, 10);
 800b8f6:	4611      	mov	r1, r2
 800b8f8:	f7ff fc40 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
    moveTo(centerX - 5, centerY - 5);
 800b8fc:	f8d4 20c4 	ldr.w	r2, [r4, #196]	@ 0xc4
 800b900:	f8d4 10c0 	ldr.w	r1, [r4, #192]	@ 0xc0
 800b904:	6823      	ldr	r3, [r4, #0]
 800b906:	3a05      	subs	r2, #5
 800b908:	3905      	subs	r1, #5
 800b90a:	b209      	sxth	r1, r1
 800b90c:	b212      	sxth	r2, r2
 800b90e:	4620      	mov	r0, r4
 800b910:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b912:	4798      	blx	r3
 800b914:	2301      	movs	r3, #1
 800b916:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
 800b91a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
 800b91e:	f884 3085 	strb.w	r3, [r4, #133]	@ 0x85
    invalidate();
 800b922:	6823      	ldr	r3, [r4, #0]
 800b924:	4620      	mov	r0, r4
 800b926:	695b      	ldr	r3, [r3, #20]
 800b928:	4798      	blx	r3
    Application::getInstance()->registerTimerWidget(this); // gọi tickEvent
 800b92a:	f00b f837 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 800b92e:	4621      	mov	r1, r4
 800b930:	3004      	adds	r0, #4
}
 800b932:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b936:	f00b b927 	b.w	8016b88 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>

0800b93a <_ZN13Tile5x5_Super10initializeEv>:
    Tile5x5_SuperBase::initialize();
 800b93a:	f7fb be5e 	b.w	80075fa <_ZN17Tile5x5_SuperBase10initializeEv>

0800b93e <_ZN11Tile_letter15handleTickEventEv>:
    textArea1.setVisible(true);
    invalidate();
    Application::getInstance()->registerTimerWidget(this);
}
void Tile_letter::handleTickEvent()
{
 800b93e:	b538      	push	{r3, r4, r5, lr}
    if (currentStep >= totalSteps)
 800b940:	f8d0 50c0 	ldr.w	r5, [r0, #192]	@ 0xc0
 800b944:	2d05      	cmp	r5, #5
{
 800b946:	4604      	mov	r4, r0
    if (currentStep >= totalSteps)
 800b948:	dd1b      	ble.n	800b982 <_ZN11Tile_letter15handleTickEventEv+0x44>
    {
        setWidthHeight(60, 60);
 800b94a:	223c      	movs	r2, #60	@ 0x3c
 800b94c:	4611      	mov	r1, r2
 800b94e:	f7ff fc15 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
        moveTo(centerX - 30, centerY - 30);
 800b952:	f8d4 20bc 	ldr.w	r2, [r4, #188]	@ 0xbc
 800b956:	f8d4 10b8 	ldr.w	r1, [r4, #184]	@ 0xb8
 800b95a:	6823      	ldr	r3, [r4, #0]
 800b95c:	3a1e      	subs	r2, #30
 800b95e:	391e      	subs	r1, #30
 800b960:	b209      	sxth	r1, r1
 800b962:	b212      	sxth	r2, r2
 800b964:	4620      	mov	r0, r4
 800b966:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b968:	4798      	blx	r3
        invalidate();
 800b96a:	6823      	ldr	r3, [r4, #0]
 800b96c:	4620      	mov	r0, r4
 800b96e:	695b      	ldr	r3, [r3, #20]
 800b970:	4798      	blx	r3
        Application::getInstance()->unregisterTimerWidget(this);
 800b972:	f00b f813 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.remove(w);
 800b976:	4621      	mov	r1, r4
 800b978:	3004      	adds	r0, #4
    int offset = size / 2;
    setWidthHeight(size, size);
    moveTo(centerX - offset, centerY - offset);
    invalidate();
    currentStep++;
 800b97a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b97e:	f00b b85a 	b.w	8016a36 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
    int size = 10 + ((60 - 10) * currentStep) / totalSteps;
 800b982:	2332      	movs	r3, #50	@ 0x32
 800b984:	435d      	muls	r5, r3
 800b986:	2306      	movs	r3, #6
 800b988:	fb95 f5f3 	sdiv	r5, r5, r3
 800b98c:	350a      	adds	r5, #10
    setWidthHeight(size, size);
 800b98e:	b22a      	sxth	r2, r5
 800b990:	4611      	mov	r1, r2
 800b992:	f7ff fbf3 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
    int offset = size / 2;
 800b996:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
    moveTo(centerX - offset, centerY - offset);
 800b99a:	f8d4 20bc 	ldr.w	r2, [r4, #188]	@ 0xbc
 800b99e:	f8d4 10b8 	ldr.w	r1, [r4, #184]	@ 0xb8
 800b9a2:	6823      	ldr	r3, [r4, #0]
 800b9a4:	f3c5 054f 	ubfx	r5, r5, #1, #16
 800b9a8:	1b52      	subs	r2, r2, r5
 800b9aa:	1b49      	subs	r1, r1, r5
 800b9ac:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b9ae:	b212      	sxth	r2, r2
 800b9b0:	b209      	sxth	r1, r1
 800b9b2:	4620      	mov	r0, r4
 800b9b4:	4798      	blx	r3
    invalidate();
 800b9b6:	6823      	ldr	r3, [r4, #0]
 800b9b8:	4620      	mov	r0, r4
 800b9ba:	695b      	ldr	r3, [r3, #20]
 800b9bc:	4798      	blx	r3
    currentStep++;
 800b9be:	f8d4 30c0 	ldr.w	r3, [r4, #192]	@ 0xc0
 800b9c2:	3301      	adds	r3, #1
 800b9c4:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 800b9c8:	bd38      	pop	{r3, r4, r5, pc}
	...

0800b9cc <_ZN11Tile_letterC1Ev>:
Tile_letter::Tile_letter()
 800b9cc:	b510      	push	{r4, lr}
 800b9ce:	4604      	mov	r4, r0
 800b9d0:	f7fb ffba 	bl	8007948 <_ZN15Tile_letterBaseC1Ev>
 800b9d4:	4b05      	ldr	r3, [pc, #20]	@ (800b9ec <_ZN11Tile_letterC1Ev+0x20>)
 800b9d6:	6023      	str	r3, [r4, #0]
 800b9d8:	2300      	movs	r3, #0
 800b9da:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
 800b9de:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800b9e2:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
}
 800b9e6:	4620      	mov	r0, r4
 800b9e8:	bd10      	pop	{r4, pc}
 800b9ea:	bf00      	nop
 800b9ec:	0802e07c 	.word	0x0802e07c

0800b9f0 <_ZN11Tile_letter8setValueEt>:
{   
 800b9f0:	b538      	push	{r3, r4, r5, lr}
    if (value == 0XFFFF) // dùng 0xFFFF làm mã cho tile trống
 800b9f2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800b9f6:	4299      	cmp	r1, r3
{   
 800b9f8:	4604      	mov	r4, r0
 800b9fa:	460d      	mov	r5, r1
    storedValue = value; // Lưu lại giá trị để sử dụng sau
 800b9fc:	f8a0 10c4 	strh.w	r1, [r0, #196]	@ 0xc4
    if (value == 0XFFFF) // dùng 0xFFFF làm mã cho tile trống
 800ba00:	d111      	bne.n	800ba26 <_ZN11Tile_letter8setValueEt+0x36>
 800ba02:	2300      	movs	r3, #0
 800ba04:	f880 3085 	strb.w	r3, [r0, #133]	@ 0x85
 800ba08:	2323      	movs	r3, #35	@ 0x23
 800ba0a:	f880 3052 	strb.w	r3, [r0, #82]	@ 0x52
        color = newColor;
 800ba0e:	4b11      	ldr	r3, [pc, #68]	@ (800ba54 <_ZN11Tile_letter8setValueEt+0x64>)
 800ba10:	6543      	str	r3, [r0, #84]	@ 0x54
    boxWithBorder1.invalidate();
 800ba12:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 800ba16:	f00c f9e5 	bl	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
    textArea1.invalidate();
 800ba1a:	f104 0060 	add.w	r0, r4, #96	@ 0x60
}
 800ba1e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    textArea1.invalidate();
 800ba22:	f00c b9df 	b.w	8017de4 <_ZNK8touchgfx8Drawable10invalidateEv>
        char letter = 'A' + value; // Chuyển giá trị 0 -> 'A', 1 -> 'B', ...
 800ba26:	f101 0341 	add.w	r3, r1, #65	@ 0x41
        Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%c", letter);
 800ba2a:	b2db      	uxtb	r3, r3
 800ba2c:	4a0a      	ldr	r2, [pc, #40]	@ (800ba58 <_ZN11Tile_letter8setValueEt+0x68>)
 800ba2e:	2105      	movs	r1, #5
 800ba30:	30ac      	adds	r0, #172	@ 0xac
 800ba32:	f00e fd18 	bl	801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ba36:	2301      	movs	r3, #1
 800ba38:	2d09      	cmp	r5, #9
 800ba3a:	f884 3085 	strb.w	r3, [r4, #133]	@ 0x85
        switch (value)
 800ba3e:	bf96      	itet	ls
 800ba40:	4b06      	ldrls	r3, [pc, #24]	@ (800ba5c <_ZN11Tile_letter8setValueEt+0x6c>)
 800ba42:	4b07      	ldrhi	r3, [pc, #28]	@ (800ba60 <_ZN11Tile_letter8setValueEt+0x70>)
 800ba44:	f853 3025 	ldrls.w	r3, [r3, r5, lsl #2]
 800ba48:	6563      	str	r3, [r4, #84]	@ 0x54
        alpha = newAlpha;
 800ba4a:	23c8      	movs	r3, #200	@ 0xc8
 800ba4c:	f884 3052 	strb.w	r3, [r4, #82]	@ 0x52
 800ba50:	e7df      	b.n	800ba12 <_ZN11Tile_letter8setValueEt+0x22>
 800ba52:	bf00      	nop
 800ba54:	ffc8c8c8 	.word	0xffc8c8c8
 800ba58:	0802cc77 	.word	0x0802cc77
 800ba5c:	0802e04c 	.word	0x0802e04c
 800ba60:	ff646464 	.word	0xff646464

0800ba64 <_ZNK11Tile_letter8getValueEv>:
}
 800ba64:	f8b0 00c4 	ldrh.w	r0, [r0, #196]	@ 0xc4
 800ba68:	4770      	bx	lr

0800ba6a <_ZN11Tile_letter12animateSpawnEv>:
{
 800ba6a:	b510      	push	{r4, lr}
    currentStep = 0;
 800ba6c:	2300      	movs	r3, #0
{
 800ba6e:	4604      	mov	r4, r0
    setWidthHeight(10, 10);
 800ba70:	220a      	movs	r2, #10
    currentStep = 0;
 800ba72:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0
    setWidthHeight(10, 10);
 800ba76:	4611      	mov	r1, r2
 800ba78:	f7ff fb80 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
    moveTo(centerX - 5, centerY - 5);
 800ba7c:	f8d4 20bc 	ldr.w	r2, [r4, #188]	@ 0xbc
 800ba80:	f8d4 10b8 	ldr.w	r1, [r4, #184]	@ 0xb8
 800ba84:	6823      	ldr	r3, [r4, #0]
 800ba86:	3a05      	subs	r2, #5
 800ba88:	3905      	subs	r1, #5
 800ba8a:	b209      	sxth	r1, r1
 800ba8c:	b212      	sxth	r2, r2
 800ba8e:	4620      	mov	r0, r4
 800ba90:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800ba92:	4798      	blx	r3
 800ba94:	2301      	movs	r3, #1
 800ba96:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
 800ba9a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
 800ba9e:	f884 3085 	strb.w	r3, [r4, #133]	@ 0x85
    invalidate();
 800baa2:	6823      	ldr	r3, [r4, #0]
 800baa4:	4620      	mov	r0, r4
 800baa6:	695b      	ldr	r3, [r3, #20]
 800baa8:	4798      	blx	r3
    Application::getInstance()->registerTimerWidget(this);
 800baaa:	f00a ff77 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
        timerWidgets.add(w);
 800baae:	4621      	mov	r1, r4
 800bab0:	3004      	adds	r0, #4
}
 800bab2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bab6:	f00b b867 	b.w	8016b88 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>

0800baba <_ZN11Tile_letter10initializeEv>:
{
 800baba:	b510      	push	{r4, lr}
 800babc:	4604      	mov	r4, r0
    Tile_letterBase::initialize();
 800babe:	f7fb ff3a 	bl	8007936 <_ZN15Tile_letterBase10initializeEv>
    textArea1.setWildcard(textArea1Buffer);
 800bac2:	f104 03ac 	add.w	r3, r4, #172	@ 0xac
 800bac6:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
}
 800baca:	bd10      	pop	{r4, pc}

0800bacc <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800bacc:	20f0      	movs	r0, #240	@ 0xf0
 800bace:	4770      	bx	lr

0800bad0 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800bad0:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 800bad4:	4770      	bx	lr

0800bad6 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800bad6:	2029      	movs	r0, #41	@ 0x29
 800bad8:	f7f6 b8c6 	b.w	8001c68 <LCD_IO_WriteReg>

0800badc <ili9341_DisplayOff>:
 800badc:	2028      	movs	r0, #40	@ 0x28
 800bade:	f7f6 b8c3 	b.w	8001c68 <LCD_IO_WriteReg>

0800bae2 <ili9341_Init>:
{
 800bae2:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800bae4:	f7f6 f894 	bl	8001c10 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800bae8:	20ca      	movs	r0, #202	@ 0xca
 800baea:	f7f6 f8bd 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800baee:	20c3      	movs	r0, #195	@ 0xc3
 800baf0:	f7f6 f89e 	bl	8001c30 <LCD_IO_WriteData>
 800baf4:	2008      	movs	r0, #8
 800baf6:	f7f6 f89b 	bl	8001c30 <LCD_IO_WriteData>
 800bafa:	2050      	movs	r0, #80	@ 0x50
 800bafc:	f7f6 f898 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bb00:	20cf      	movs	r0, #207	@ 0xcf
 800bb02:	f7f6 f8b1 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bb06:	2000      	movs	r0, #0
 800bb08:	f7f6 f892 	bl	8001c30 <LCD_IO_WriteData>
 800bb0c:	20c1      	movs	r0, #193	@ 0xc1
 800bb0e:	f7f6 f88f 	bl	8001c30 <LCD_IO_WriteData>
 800bb12:	2030      	movs	r0, #48	@ 0x30
 800bb14:	f7f6 f88c 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bb18:	20ed      	movs	r0, #237	@ 0xed
 800bb1a:	f7f6 f8a5 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bb1e:	2064      	movs	r0, #100	@ 0x64
 800bb20:	f7f6 f886 	bl	8001c30 <LCD_IO_WriteData>
 800bb24:	2003      	movs	r0, #3
 800bb26:	f7f6 f883 	bl	8001c30 <LCD_IO_WriteData>
 800bb2a:	2012      	movs	r0, #18
 800bb2c:	f7f6 f880 	bl	8001c30 <LCD_IO_WriteData>
 800bb30:	2081      	movs	r0, #129	@ 0x81
 800bb32:	f7f6 f87d 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bb36:	20e8      	movs	r0, #232	@ 0xe8
 800bb38:	f7f6 f896 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bb3c:	2085      	movs	r0, #133	@ 0x85
 800bb3e:	f7f6 f877 	bl	8001c30 <LCD_IO_WriteData>
 800bb42:	2000      	movs	r0, #0
 800bb44:	f7f6 f874 	bl	8001c30 <LCD_IO_WriteData>
 800bb48:	2078      	movs	r0, #120	@ 0x78
 800bb4a:	f7f6 f871 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bb4e:	20cb      	movs	r0, #203	@ 0xcb
 800bb50:	f7f6 f88a 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bb54:	2039      	movs	r0, #57	@ 0x39
 800bb56:	f7f6 f86b 	bl	8001c30 <LCD_IO_WriteData>
 800bb5a:	202c      	movs	r0, #44	@ 0x2c
 800bb5c:	f7f6 f868 	bl	8001c30 <LCD_IO_WriteData>
 800bb60:	2000      	movs	r0, #0
 800bb62:	f7f6 f865 	bl	8001c30 <LCD_IO_WriteData>
 800bb66:	2034      	movs	r0, #52	@ 0x34
 800bb68:	f7f6 f862 	bl	8001c30 <LCD_IO_WriteData>
 800bb6c:	2002      	movs	r0, #2
 800bb6e:	f7f6 f85f 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bb72:	20f7      	movs	r0, #247	@ 0xf7
 800bb74:	f7f6 f878 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bb78:	2020      	movs	r0, #32
 800bb7a:	f7f6 f859 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bb7e:	20ea      	movs	r0, #234	@ 0xea
 800bb80:	f7f6 f872 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bb84:	2000      	movs	r0, #0
 800bb86:	f7f6 f853 	bl	8001c30 <LCD_IO_WriteData>
 800bb8a:	2000      	movs	r0, #0
 800bb8c:	f7f6 f850 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bb90:	20b1      	movs	r0, #177	@ 0xb1
 800bb92:	f7f6 f869 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bb96:	2000      	movs	r0, #0
 800bb98:	f7f6 f84a 	bl	8001c30 <LCD_IO_WriteData>
 800bb9c:	201b      	movs	r0, #27
 800bb9e:	f7f6 f847 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bba2:	20b6      	movs	r0, #182	@ 0xb6
 800bba4:	f7f6 f860 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bba8:	200a      	movs	r0, #10
 800bbaa:	f7f6 f841 	bl	8001c30 <LCD_IO_WriteData>
 800bbae:	20a2      	movs	r0, #162	@ 0xa2
 800bbb0:	f7f6 f83e 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bbb4:	20c0      	movs	r0, #192	@ 0xc0
 800bbb6:	f7f6 f857 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bbba:	2010      	movs	r0, #16
 800bbbc:	f7f6 f838 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bbc0:	20c1      	movs	r0, #193	@ 0xc1
 800bbc2:	f7f6 f851 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bbc6:	2010      	movs	r0, #16
 800bbc8:	f7f6 f832 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bbcc:	20c5      	movs	r0, #197	@ 0xc5
 800bbce:	f7f6 f84b 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bbd2:	2045      	movs	r0, #69	@ 0x45
 800bbd4:	f7f6 f82c 	bl	8001c30 <LCD_IO_WriteData>
 800bbd8:	2015      	movs	r0, #21
 800bbda:	f7f6 f829 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bbde:	20c7      	movs	r0, #199	@ 0xc7
 800bbe0:	f7f6 f842 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bbe4:	2090      	movs	r0, #144	@ 0x90
 800bbe6:	f7f6 f823 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bbea:	2036      	movs	r0, #54	@ 0x36
 800bbec:	f7f6 f83c 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bbf0:	20c8      	movs	r0, #200	@ 0xc8
 800bbf2:	f7f6 f81d 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bbf6:	20f2      	movs	r0, #242	@ 0xf2
 800bbf8:	f7f6 f836 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bbfc:	2000      	movs	r0, #0
 800bbfe:	f7f6 f817 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bc02:	20b0      	movs	r0, #176	@ 0xb0
 800bc04:	f7f6 f830 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bc08:	20c2      	movs	r0, #194	@ 0xc2
 800bc0a:	f7f6 f811 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bc0e:	20b6      	movs	r0, #182	@ 0xb6
 800bc10:	f7f6 f82a 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bc14:	200a      	movs	r0, #10
 800bc16:	f7f6 f80b 	bl	8001c30 <LCD_IO_WriteData>
 800bc1a:	20a7      	movs	r0, #167	@ 0xa7
 800bc1c:	f7f6 f808 	bl	8001c30 <LCD_IO_WriteData>
 800bc20:	2027      	movs	r0, #39	@ 0x27
 800bc22:	f7f6 f805 	bl	8001c30 <LCD_IO_WriteData>
 800bc26:	2004      	movs	r0, #4
 800bc28:	f7f6 f802 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bc2c:	202a      	movs	r0, #42	@ 0x2a
 800bc2e:	f7f6 f81b 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bc32:	2000      	movs	r0, #0
 800bc34:	f7f5 fffc 	bl	8001c30 <LCD_IO_WriteData>
 800bc38:	2000      	movs	r0, #0
 800bc3a:	f7f5 fff9 	bl	8001c30 <LCD_IO_WriteData>
 800bc3e:	2000      	movs	r0, #0
 800bc40:	f7f5 fff6 	bl	8001c30 <LCD_IO_WriteData>
 800bc44:	20ef      	movs	r0, #239	@ 0xef
 800bc46:	f7f5 fff3 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bc4a:	202b      	movs	r0, #43	@ 0x2b
 800bc4c:	f7f6 f80c 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bc50:	2000      	movs	r0, #0
 800bc52:	f7f5 ffed 	bl	8001c30 <LCD_IO_WriteData>
 800bc56:	2000      	movs	r0, #0
 800bc58:	f7f5 ffea 	bl	8001c30 <LCD_IO_WriteData>
 800bc5c:	2001      	movs	r0, #1
 800bc5e:	f7f5 ffe7 	bl	8001c30 <LCD_IO_WriteData>
 800bc62:	203f      	movs	r0, #63	@ 0x3f
 800bc64:	f7f5 ffe4 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bc68:	20f6      	movs	r0, #246	@ 0xf6
 800bc6a:	f7f5 fffd 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bc6e:	2001      	movs	r0, #1
 800bc70:	f7f5 ffde 	bl	8001c30 <LCD_IO_WriteData>
 800bc74:	2000      	movs	r0, #0
 800bc76:	f7f5 ffdb 	bl	8001c30 <LCD_IO_WriteData>
 800bc7a:	2006      	movs	r0, #6
 800bc7c:	f7f5 ffd8 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bc80:	202c      	movs	r0, #44	@ 0x2c
 800bc82:	f7f5 fff1 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800bc86:	20c8      	movs	r0, #200	@ 0xc8
 800bc88:	f7f6 f83c 	bl	8001d04 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800bc8c:	2026      	movs	r0, #38	@ 0x26
 800bc8e:	f7f5 ffeb 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bc92:	2001      	movs	r0, #1
 800bc94:	f7f5 ffcc 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bc98:	20e0      	movs	r0, #224	@ 0xe0
 800bc9a:	f7f5 ffe5 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bc9e:	200f      	movs	r0, #15
 800bca0:	f7f5 ffc6 	bl	8001c30 <LCD_IO_WriteData>
 800bca4:	2029      	movs	r0, #41	@ 0x29
 800bca6:	f7f5 ffc3 	bl	8001c30 <LCD_IO_WriteData>
 800bcaa:	2024      	movs	r0, #36	@ 0x24
 800bcac:	f7f5 ffc0 	bl	8001c30 <LCD_IO_WriteData>
 800bcb0:	200c      	movs	r0, #12
 800bcb2:	f7f5 ffbd 	bl	8001c30 <LCD_IO_WriteData>
 800bcb6:	200e      	movs	r0, #14
 800bcb8:	f7f5 ffba 	bl	8001c30 <LCD_IO_WriteData>
 800bcbc:	2009      	movs	r0, #9
 800bcbe:	f7f5 ffb7 	bl	8001c30 <LCD_IO_WriteData>
 800bcc2:	204e      	movs	r0, #78	@ 0x4e
 800bcc4:	f7f5 ffb4 	bl	8001c30 <LCD_IO_WriteData>
 800bcc8:	2078      	movs	r0, #120	@ 0x78
 800bcca:	f7f5 ffb1 	bl	8001c30 <LCD_IO_WriteData>
 800bcce:	203c      	movs	r0, #60	@ 0x3c
 800bcd0:	f7f5 ffae 	bl	8001c30 <LCD_IO_WriteData>
 800bcd4:	2009      	movs	r0, #9
 800bcd6:	f7f5 ffab 	bl	8001c30 <LCD_IO_WriteData>
 800bcda:	2013      	movs	r0, #19
 800bcdc:	f7f5 ffa8 	bl	8001c30 <LCD_IO_WriteData>
 800bce0:	2005      	movs	r0, #5
 800bce2:	f7f5 ffa5 	bl	8001c30 <LCD_IO_WriteData>
 800bce6:	2017      	movs	r0, #23
 800bce8:	f7f5 ffa2 	bl	8001c30 <LCD_IO_WriteData>
 800bcec:	2011      	movs	r0, #17
 800bcee:	f7f5 ff9f 	bl	8001c30 <LCD_IO_WriteData>
 800bcf2:	2000      	movs	r0, #0
 800bcf4:	f7f5 ff9c 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bcf8:	20e1      	movs	r0, #225	@ 0xe1
 800bcfa:	f7f5 ffb5 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800bcfe:	2000      	movs	r0, #0
 800bd00:	f7f5 ff96 	bl	8001c30 <LCD_IO_WriteData>
 800bd04:	2016      	movs	r0, #22
 800bd06:	f7f5 ff93 	bl	8001c30 <LCD_IO_WriteData>
 800bd0a:	201b      	movs	r0, #27
 800bd0c:	f7f5 ff90 	bl	8001c30 <LCD_IO_WriteData>
 800bd10:	2004      	movs	r0, #4
 800bd12:	f7f5 ff8d 	bl	8001c30 <LCD_IO_WriteData>
 800bd16:	2011      	movs	r0, #17
 800bd18:	f7f5 ff8a 	bl	8001c30 <LCD_IO_WriteData>
 800bd1c:	2007      	movs	r0, #7
 800bd1e:	f7f5 ff87 	bl	8001c30 <LCD_IO_WriteData>
 800bd22:	2031      	movs	r0, #49	@ 0x31
 800bd24:	f7f5 ff84 	bl	8001c30 <LCD_IO_WriteData>
 800bd28:	2033      	movs	r0, #51	@ 0x33
 800bd2a:	f7f5 ff81 	bl	8001c30 <LCD_IO_WriteData>
 800bd2e:	2042      	movs	r0, #66	@ 0x42
 800bd30:	f7f5 ff7e 	bl	8001c30 <LCD_IO_WriteData>
 800bd34:	2005      	movs	r0, #5
 800bd36:	f7f5 ff7b 	bl	8001c30 <LCD_IO_WriteData>
 800bd3a:	200c      	movs	r0, #12
 800bd3c:	f7f5 ff78 	bl	8001c30 <LCD_IO_WriteData>
 800bd40:	200a      	movs	r0, #10
 800bd42:	f7f5 ff75 	bl	8001c30 <LCD_IO_WriteData>
 800bd46:	2028      	movs	r0, #40	@ 0x28
 800bd48:	f7f5 ff72 	bl	8001c30 <LCD_IO_WriteData>
 800bd4c:	202f      	movs	r0, #47	@ 0x2f
 800bd4e:	f7f5 ff6f 	bl	8001c30 <LCD_IO_WriteData>
 800bd52:	200f      	movs	r0, #15
 800bd54:	f7f5 ff6c 	bl	8001c30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800bd58:	2011      	movs	r0, #17
 800bd5a:	f7f5 ff85 	bl	8001c68 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800bd5e:	20c8      	movs	r0, #200	@ 0xc8
 800bd60:	f7f5 ffd0 	bl	8001d04 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800bd64:	2029      	movs	r0, #41	@ 0x29
 800bd66:	f7f5 ff7f 	bl	8001c68 <LCD_IO_WriteReg>
}
 800bd6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800bd6e:	202c      	movs	r0, #44	@ 0x2c
 800bd70:	f7f5 bf7a 	b.w	8001c68 <LCD_IO_WriteReg>

0800bd74 <ili9341_ReadID>:
{
 800bd74:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800bd76:	f7f5 ff4b 	bl	8001c10 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800bd7a:	2103      	movs	r1, #3
 800bd7c:	20d3      	movs	r0, #211	@ 0xd3
 800bd7e:	f7f5 ff8f 	bl	8001ca0 <LCD_IO_ReadData>
}
 800bd82:	b280      	uxth	r0, r0
 800bd84:	bd08      	pop	{r3, pc}

0800bd86 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800bd86:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800bd88:	b2c4      	uxtb	r4, r0
 800bd8a:	2202      	movs	r2, #2
 800bd8c:	2103      	movs	r1, #3
 800bd8e:	4620      	mov	r0, r4
 800bd90:	f7f5 fef4 	bl	8001b7c <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 800bd94:	200a      	movs	r0, #10
 800bd96:	f7f5 ff39 	bl	8001c0c <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800bd9a:	4620      	mov	r0, r4
 800bd9c:	2200      	movs	r2, #0
 800bd9e:	2103      	movs	r1, #3
 800bda0:	f7f5 feec 	bl	8001b7c <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 800bda4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800bda8:	2002      	movs	r0, #2
 800bdaa:	f7f5 bf2f 	b.w	8001c0c <IOE_Delay>

0800bdae <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 800bdae:	b538      	push	{r3, r4, r5, lr}
 800bdb0:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800bdb2:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 800bdb4:	f7f5 fee0 	bl	8001b78 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800bdb8:	2100      	movs	r1, #0
 800bdba:	4620      	mov	r0, r4
 800bdbc:	f7f5 fef6 	bl	8001bac <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800bdc0:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800bdc2:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800bdc4:	4620      	mov	r0, r4
 800bdc6:	f7f5 fef1 	bl	8001bac <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800bdca:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 800bdce:	b280      	uxth	r0, r0
 800bdd0:	bd38      	pop	{r3, r4, r5, pc}

0800bdd2 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800bdd2:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800bdd4:	b2c4      	uxtb	r4, r0
 800bdd6:	2140      	movs	r1, #64	@ 0x40
 800bdd8:	4620      	mov	r0, r4
 800bdda:	f7f5 fee7 	bl	8001bac <IOE_Read>
  
  if(state > 0)
 800bdde:	0603      	lsls	r3, r0, #24
 800bde0:	d507      	bpl.n	800bdf2 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800bde2:	214c      	movs	r1, #76	@ 0x4c
 800bde4:	4620      	mov	r0, r4
 800bde6:	f7f5 fee1 	bl	8001bac <IOE_Read>
 800bdea:	3800      	subs	r0, #0
 800bdec:	bf18      	it	ne
 800bdee:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 800bdf0:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800bdf2:	2201      	movs	r2, #1
 800bdf4:	214b      	movs	r1, #75	@ 0x4b
 800bdf6:	4620      	mov	r0, r4
 800bdf8:	f7f5 fec0 	bl	8001b7c <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800bdfc:	4620      	mov	r0, r4
 800bdfe:	2200      	movs	r2, #0
 800be00:	214b      	movs	r1, #75	@ 0x4b
 800be02:	f7f5 febb 	bl	8001b7c <IOE_Write>
  uint8_t ret = 0;
 800be06:	2000      	movs	r0, #0
 800be08:	e7f2      	b.n	800bdf0 <stmpe811_TS_DetectTouch+0x1e>

0800be0a <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800be0a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800be0c:	2304      	movs	r3, #4
 800be0e:	b2c4      	uxtb	r4, r0
{
 800be10:	460e      	mov	r6, r1
 800be12:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800be14:	21d7      	movs	r1, #215	@ 0xd7
 800be16:	eb0d 0203 	add.w	r2, sp, r3
 800be1a:	4620      	mov	r0, r4
 800be1c:	f7f5 fee0 	bl	8001be0 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800be20:	9b01      	ldr	r3, [sp, #4]
 800be22:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800be24:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800be26:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800be2a:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800be2c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800be2e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800be30:	2201      	movs	r2, #1
 800be32:	214b      	movs	r1, #75	@ 0x4b
 800be34:	f7f5 fea2 	bl	8001b7c <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800be38:	2200      	movs	r2, #0
 800be3a:	214b      	movs	r1, #75	@ 0x4b
 800be3c:	4620      	mov	r0, r4
 800be3e:	f7f5 fe9d 	bl	8001b7c <IOE_Write>
}
 800be42:	b002      	add	sp, #8
 800be44:	bd70      	pop	{r4, r5, r6, pc}
	...

0800be48 <stmpe811_Init>:
{
 800be48:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800be4a:	4a0a      	ldr	r2, [pc, #40]	@ (800be74 <stmpe811_Init+0x2c>)
 800be4c:	7813      	ldrb	r3, [r2, #0]
 800be4e:	4298      	cmp	r0, r3
{
 800be50:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800be52:	d00d      	beq.n	800be70 <stmpe811_Init+0x28>
 800be54:	7851      	ldrb	r1, [r2, #1]
 800be56:	4288      	cmp	r0, r1
 800be58:	d00a      	beq.n	800be70 <stmpe811_Init+0x28>
 800be5a:	b10b      	cbz	r3, 800be60 <stmpe811_Init+0x18>
 800be5c:	b941      	cbnz	r1, 800be70 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800be5e:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 800be60:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800be62:	f7f5 fe89 	bl	8001b78 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800be66:	4620      	mov	r0, r4
}
 800be68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 800be6c:	f7ff bf8b 	b.w	800bd86 <stmpe811_Reset>
}
 800be70:	bd10      	pop	{r4, pc}
 800be72:	bf00      	nop
 800be74:	200031e3 	.word	0x200031e3

0800be78 <stmpe811_EnableGlobalIT>:
{
 800be78:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800be7a:	b2c4      	uxtb	r4, r0
 800be7c:	2109      	movs	r1, #9
 800be7e:	4620      	mov	r0, r4
 800be80:	f7f5 fe94 	bl	8001bac <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800be84:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800be88:	b2d2      	uxtb	r2, r2
 800be8a:	4620      	mov	r0, r4
 800be8c:	2109      	movs	r1, #9
}
 800be8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800be92:	f7f5 be73 	b.w	8001b7c <IOE_Write>

0800be96 <stmpe811_DisableGlobalIT>:
{
 800be96:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800be98:	b2c4      	uxtb	r4, r0
 800be9a:	2109      	movs	r1, #9
 800be9c:	4620      	mov	r0, r4
 800be9e:	f7f5 fe85 	bl	8001bac <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800bea2:	2109      	movs	r1, #9
 800bea4:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 800bea8:	4620      	mov	r0, r4
}
 800beaa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800beae:	f7f5 be65 	b.w	8001b7c <IOE_Write>

0800beb2 <stmpe811_EnableITSource>:
{
 800beb2:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800beb4:	b2c4      	uxtb	r4, r0
{
 800beb6:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800beb8:	4620      	mov	r0, r4
 800beba:	210a      	movs	r1, #10
 800bebc:	f7f5 fe76 	bl	8001bac <IOE_Read>
  tmp |= Source; 
 800bec0:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800bec4:	b2d2      	uxtb	r2, r2
 800bec6:	4620      	mov	r0, r4
 800bec8:	210a      	movs	r1, #10
}
 800beca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800bece:	f7f5 be55 	b.w	8001b7c <IOE_Write>

0800bed2 <stmpe811_TS_EnableIT>:
{
 800bed2:	b510      	push	{r4, lr}
 800bed4:	4604      	mov	r4, r0
  IOE_ITConfig();
 800bed6:	f7f5 fe50 	bl	8001b7a <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 800beda:	4620      	mov	r0, r4
 800bedc:	211f      	movs	r1, #31
 800bede:	f7ff ffe8 	bl	800beb2 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 800bee2:	4620      	mov	r0, r4
}
 800bee4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 800bee8:	f7ff bfc6 	b.w	800be78 <stmpe811_EnableGlobalIT>

0800beec <stmpe811_DisableITSource>:
{
 800beec:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800beee:	b2c4      	uxtb	r4, r0
{
 800bef0:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800bef2:	4620      	mov	r0, r4
 800bef4:	210a      	movs	r1, #10
 800bef6:	f7f5 fe59 	bl	8001bac <IOE_Read>
  tmp &= ~Source; 
 800befa:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800befe:	b2d2      	uxtb	r2, r2
 800bf00:	4620      	mov	r0, r4
 800bf02:	210a      	movs	r1, #10
}
 800bf04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800bf08:	f7f5 be38 	b.w	8001b7c <IOE_Write>

0800bf0c <stmpe811_TS_DisableIT>:
{
 800bf0c:	b510      	push	{r4, lr}
 800bf0e:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 800bf10:	f7ff ffc1 	bl	800be96 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800bf14:	4620      	mov	r0, r4
 800bf16:	211f      	movs	r1, #31
}
 800bf18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800bf1c:	f7ff bfe6 	b.w	800beec <stmpe811_DisableITSource>

0800bf20 <stmpe811_ReadGITStatus>:
{
 800bf20:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800bf22:	b2c0      	uxtb	r0, r0
{
 800bf24:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800bf26:	210b      	movs	r1, #11
 800bf28:	f7f5 fe40 	bl	8001bac <IOE_Read>
}
 800bf2c:	4020      	ands	r0, r4
 800bf2e:	bd10      	pop	{r4, pc}

0800bf30 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 800bf30:	211f      	movs	r1, #31
 800bf32:	f7ff bff5 	b.w	800bf20 <stmpe811_ReadGITStatus>

0800bf36 <stmpe811_ClearGlobalIT>:
{
 800bf36:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800bf38:	b2c0      	uxtb	r0, r0
 800bf3a:	210b      	movs	r1, #11
 800bf3c:	f7f5 be1e 	b.w	8001b7c <IOE_Write>

0800bf40 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 800bf40:	211f      	movs	r1, #31
 800bf42:	f7ff bff8 	b.w	800bf36 <stmpe811_ClearGlobalIT>

0800bf46 <stmpe811_IO_EnableAF>:
{
 800bf46:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800bf48:	b2c4      	uxtb	r4, r0
{
 800bf4a:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800bf4c:	4620      	mov	r0, r4
 800bf4e:	2117      	movs	r1, #23
 800bf50:	f7f5 fe2c 	bl	8001bac <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 800bf54:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800bf58:	b2d2      	uxtb	r2, r2
 800bf5a:	4620      	mov	r0, r4
 800bf5c:	2117      	movs	r1, #23
}
 800bf5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800bf62:	f7f5 be0b 	b.w	8001b7c <IOE_Write>

0800bf66 <stmpe811_TS_Start>:
{
 800bf66:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800bf68:	b2c4      	uxtb	r4, r0
{
 800bf6a:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800bf6c:	2104      	movs	r1, #4
 800bf6e:	4620      	mov	r0, r4
 800bf70:	f7f5 fe1c 	bl	8001bac <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800bf74:	2104      	movs	r1, #4
 800bf76:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800bf7a:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800bf7c:	4620      	mov	r0, r4
 800bf7e:	f7f5 fdfd 	bl	8001b7c <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800bf82:	4630      	mov	r0, r6
 800bf84:	21f0      	movs	r1, #240	@ 0xf0
 800bf86:	f7ff ffde 	bl	800bf46 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800bf8a:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 800bf8e:	4620      	mov	r0, r4
 800bf90:	2104      	movs	r1, #4
 800bf92:	f7f5 fdf3 	bl	8001b7c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800bf96:	2249      	movs	r2, #73	@ 0x49
 800bf98:	2120      	movs	r1, #32
 800bf9a:	4620      	mov	r0, r4
 800bf9c:	f7f5 fdee 	bl	8001b7c <IOE_Write>
  IOE_Delay(2); 
 800bfa0:	2002      	movs	r0, #2
 800bfa2:	f7f5 fe33 	bl	8001c0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800bfa6:	4620      	mov	r0, r4
 800bfa8:	2201      	movs	r2, #1
 800bfaa:	2121      	movs	r1, #33	@ 0x21
 800bfac:	f7f5 fde6 	bl	8001b7c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800bfb0:	4620      	mov	r0, r4
 800bfb2:	229a      	movs	r2, #154	@ 0x9a
 800bfb4:	2141      	movs	r1, #65	@ 0x41
 800bfb6:	f7f5 fde1 	bl	8001b7c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800bfba:	4620      	mov	r0, r4
 800bfbc:	2201      	movs	r2, #1
 800bfbe:	214a      	movs	r1, #74	@ 0x4a
 800bfc0:	f7f5 fddc 	bl	8001b7c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800bfc4:	4620      	mov	r0, r4
 800bfc6:	2201      	movs	r2, #1
 800bfc8:	214b      	movs	r1, #75	@ 0x4b
 800bfca:	f7f5 fdd7 	bl	8001b7c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800bfce:	4620      	mov	r0, r4
 800bfd0:	2200      	movs	r2, #0
 800bfd2:	214b      	movs	r1, #75	@ 0x4b
 800bfd4:	f7f5 fdd2 	bl	8001b7c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800bfd8:	4620      	mov	r0, r4
 800bfda:	2201      	movs	r2, #1
 800bfdc:	2156      	movs	r1, #86	@ 0x56
 800bfde:	f7f5 fdcd 	bl	8001b7c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800bfe2:	4620      	mov	r0, r4
 800bfe4:	2201      	movs	r2, #1
 800bfe6:	2158      	movs	r1, #88	@ 0x58
 800bfe8:	f7f5 fdc8 	bl	8001b7c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800bfec:	4620      	mov	r0, r4
 800bfee:	2201      	movs	r2, #1
 800bff0:	2140      	movs	r1, #64	@ 0x40
 800bff2:	f7f5 fdc3 	bl	8001b7c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800bff6:	4620      	mov	r0, r4
 800bff8:	22ff      	movs	r2, #255	@ 0xff
 800bffa:	210b      	movs	r1, #11
 800bffc:	f7f5 fdbe 	bl	8001b7c <IOE_Write>
}
 800c000:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 800c004:	2002      	movs	r0, #2
 800c006:	f7f5 be01 	b.w	8001c0c <IOE_Delay>
	...

0800c00c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800c00c:	4b05      	ldr	r3, [pc, #20]	@ (800c024 <SystemInit+0x18>)
 800c00e:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 800c012:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 800c016:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800c01a:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800c01e:	609a      	str	r2, [r3, #8]
#endif
}
 800c020:	4770      	bx	lr
 800c022:	bf00      	nop
 800c024:	e000ed00 	.word	0xe000ed00

0800c028 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800c028:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800c02a:	4b0b      	ldr	r3, [pc, #44]	@ (800c058 <HAL_Init+0x30>)
 800c02c:	681a      	ldr	r2, [r3, #0]
 800c02e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800c032:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800c034:	681a      	ldr	r2, [r3, #0]
 800c036:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800c03a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800c03c:	681a      	ldr	r2, [r3, #0]
 800c03e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800c042:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800c044:	2003      	movs	r0, #3
 800c046:	f000 f82f 	bl	800c0a8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800c04a:	2000      	movs	r0, #0
 800c04c:	f7f6 f89c 	bl	8002188 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800c050:	f7f5 fe66 	bl	8001d20 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800c054:	2000      	movs	r0, #0
 800c056:	bd08      	pop	{r3, pc}
 800c058:	40023c00 	.word	0x40023c00

0800c05c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800c05c:	4a03      	ldr	r2, [pc, #12]	@ (800c06c <HAL_IncTick+0x10>)
 800c05e:	4b04      	ldr	r3, [pc, #16]	@ (800c070 <HAL_IncTick+0x14>)
 800c060:	6811      	ldr	r1, [r2, #0]
 800c062:	781b      	ldrb	r3, [r3, #0]
 800c064:	440b      	add	r3, r1
 800c066:	6013      	str	r3, [r2, #0]
}
 800c068:	4770      	bx	lr
 800c06a:	bf00      	nop
 800c06c:	200031e8 	.word	0x200031e8
 800c070:	20000094 	.word	0x20000094

0800c074 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800c074:	4b01      	ldr	r3, [pc, #4]	@ (800c07c <HAL_GetTick+0x8>)
 800c076:	6818      	ldr	r0, [r3, #0]
}
 800c078:	4770      	bx	lr
 800c07a:	bf00      	nop
 800c07c:	200031e8 	.word	0x200031e8

0800c080 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800c080:	b538      	push	{r3, r4, r5, lr}
 800c082:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800c084:	f7ff fff6 	bl	800c074 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800c088:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800c08a:	bf1c      	itt	ne
 800c08c:	4b05      	ldrne	r3, [pc, #20]	@ (800c0a4 <HAL_Delay+0x24>)
 800c08e:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800c090:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800c092:	bf18      	it	ne
 800c094:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800c096:	f7ff ffed 	bl	800c074 <HAL_GetTick>
 800c09a:	1b43      	subs	r3, r0, r5
 800c09c:	42a3      	cmp	r3, r4
 800c09e:	d3fa      	bcc.n	800c096 <HAL_Delay+0x16>
  {
  }
}
 800c0a0:	bd38      	pop	{r3, r4, r5, pc}
 800c0a2:	bf00      	nop
 800c0a4:	20000094 	.word	0x20000094

0800c0a8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800c0a8:	4907      	ldr	r1, [pc, #28]	@ (800c0c8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800c0aa:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800c0ac:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800c0b0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800c0b2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800c0b4:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800c0b8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800c0ba:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800c0bc:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800c0c0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 800c0c4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800c0c6:	4770      	bx	lr
 800c0c8:	e000ed00 	.word	0xe000ed00

0800c0cc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800c0cc:	4b16      	ldr	r3, [pc, #88]	@ (800c128 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800c0ce:	b530      	push	{r4, r5, lr}
 800c0d0:	68dc      	ldr	r4, [r3, #12]
 800c0d2:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800c0d6:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800c0da:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800c0dc:	2b04      	cmp	r3, #4
 800c0de:	bf28      	it	cs
 800c0e0:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800c0e2:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800c0e4:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800c0e8:	bf8c      	ite	hi
 800c0ea:	3c03      	subhi	r4, #3
 800c0ec:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800c0ee:	fa05 f303 	lsl.w	r3, r5, r3
 800c0f2:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800c0f6:	40a5      	lsls	r5, r4
 800c0f8:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800c0fc:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 800c0fe:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800c100:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c104:	bfac      	ite	ge
 800c106:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c10a:	4a08      	ldrlt	r2, [pc, #32]	@ (800c12c <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c10c:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c110:	bfb8      	it	lt
 800c112:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c116:	b2db      	uxtb	r3, r3
 800c118:	bfaa      	itet	ge
 800c11a:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c11e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c120:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800c124:	bd30      	pop	{r4, r5, pc}
 800c126:	bf00      	nop
 800c128:	e000ed00 	.word	0xe000ed00
 800c12c:	e000ed14 	.word	0xe000ed14

0800c130 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800c130:	2800      	cmp	r0, #0
 800c132:	db07      	blt.n	800c144 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800c134:	4a04      	ldr	r2, [pc, #16]	@ (800c148 <HAL_NVIC_EnableIRQ+0x18>)
 800c136:	0941      	lsrs	r1, r0, #5
 800c138:	2301      	movs	r3, #1
 800c13a:	f000 001f 	and.w	r0, r0, #31
 800c13e:	4083      	lsls	r3, r0
 800c140:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800c144:	4770      	bx	lr
 800c146:	bf00      	nop
 800c148:	e000e100 	.word	0xe000e100

0800c14c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800c14c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800c14e:	4604      	mov	r4, r0
 800c150:	b150      	cbz	r0, 800c168 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800c152:	7943      	ldrb	r3, [r0, #5]
 800c154:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800c158:	b913      	cbnz	r3, 800c160 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800c15a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800c15c:	f7f5 fe00 	bl	8001d60 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800c160:	2301      	movs	r3, #1
 800c162:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800c164:	2000      	movs	r0, #0
}
 800c166:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800c168:	2001      	movs	r0, #1
 800c16a:	e7fc      	b.n	800c166 <HAL_CRC_Init+0x1a>

0800c16c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800c16c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800c16e:	4604      	mov	r4, r0
 800c170:	b320      	cbz	r0, 800c1bc <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800c172:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 800c176:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800c17a:	b91b      	cbnz	r3, 800c184 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800c17c:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800c180:	f7f5 fe06 	bl	8001d90 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800c184:	2302      	movs	r3, #2
 800c186:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800c18a:	6823      	ldr	r3, [r4, #0]
 800c18c:	6861      	ldr	r1, [r4, #4]
 800c18e:	681a      	ldr	r2, [r3, #0]
 800c190:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 800c194:	430a      	orrs	r2, r1
 800c196:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800c198:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800c19a:	68a1      	ldr	r1, [r4, #8]
 800c19c:	f022 0207 	bic.w	r2, r2, #7
 800c1a0:	430a      	orrs	r2, r1
 800c1a2:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800c1a4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800c1a6:	68e1      	ldr	r1, [r4, #12]
 800c1a8:	f36f 020d 	bfc	r2, #0, #14
 800c1ac:	430a      	orrs	r2, r1
 800c1ae:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800c1b0:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800c1b2:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800c1b4:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800c1b6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 800c1ba:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800c1bc:	2001      	movs	r0, #1
 800c1be:	e7fc      	b.n	800c1ba <HAL_DMA2D_Init+0x4e>

0800c1c0 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 800c1c0:	4770      	bx	lr

0800c1c2 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 800c1c2:	4770      	bx	lr

0800c1c4 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800c1c4:	6803      	ldr	r3, [r0, #0]
{
 800c1c6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800c1c8:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800c1ca:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800c1cc:	07f2      	lsls	r2, r6, #31
{
 800c1ce:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800c1d0:	d514      	bpl.n	800c1fc <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 800c1d2:	05e9      	lsls	r1, r5, #23
 800c1d4:	d512      	bpl.n	800c1fc <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800c1d6:	681a      	ldr	r2, [r3, #0]
 800c1d8:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800c1dc:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800c1de:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800c1e0:	f042 0201 	orr.w	r2, r2, #1
 800c1e4:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800c1e6:	2201      	movs	r2, #1
 800c1e8:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c1ea:	2304      	movs	r3, #4
 800c1ec:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800c1f0:	2300      	movs	r3, #0
 800c1f2:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800c1f6:	6943      	ldr	r3, [r0, #20]
 800c1f8:	b103      	cbz	r3, 800c1fc <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 800c1fa:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800c1fc:	06b2      	lsls	r2, r6, #26
 800c1fe:	d516      	bpl.n	800c22e <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 800c200:	04ab      	lsls	r3, r5, #18
 800c202:	d514      	bpl.n	800c22e <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800c204:	6823      	ldr	r3, [r4, #0]
 800c206:	681a      	ldr	r2, [r3, #0]
 800c208:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800c20c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800c20e:	2220      	movs	r2, #32
 800c210:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800c212:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c214:	f043 0302 	orr.w	r3, r3, #2
 800c218:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c21a:	2304      	movs	r3, #4
 800c21c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800c220:	2300      	movs	r3, #0
 800c222:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800c226:	6963      	ldr	r3, [r4, #20]
 800c228:	b10b      	cbz	r3, 800c22e <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 800c22a:	4620      	mov	r0, r4
 800c22c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800c22e:	0730      	lsls	r0, r6, #28
 800c230:	d516      	bpl.n	800c260 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800c232:	0529      	lsls	r1, r5, #20
 800c234:	d514      	bpl.n	800c260 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800c236:	6823      	ldr	r3, [r4, #0]
 800c238:	681a      	ldr	r2, [r3, #0]
 800c23a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800c23e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800c240:	2208      	movs	r2, #8
 800c242:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800c244:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c246:	f043 0304 	orr.w	r3, r3, #4
 800c24a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800c24c:	2304      	movs	r3, #4
 800c24e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800c252:	2300      	movs	r3, #0
 800c254:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 800c258:	6963      	ldr	r3, [r4, #20]
 800c25a:	b10b      	cbz	r3, 800c260 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 800c25c:	4620      	mov	r0, r4
 800c25e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800c260:	0772      	lsls	r2, r6, #29
 800c262:	d50b      	bpl.n	800c27c <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 800c264:	056b      	lsls	r3, r5, #21
 800c266:	d509      	bpl.n	800c27c <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800c268:	6823      	ldr	r3, [r4, #0]
 800c26a:	681a      	ldr	r2, [r3, #0]
 800c26c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800c270:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800c272:	2204      	movs	r2, #4
 800c274:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 800c276:	4620      	mov	r0, r4
 800c278:	f7ff ffa2 	bl	800c1c0 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800c27c:	07b0      	lsls	r0, r6, #30
 800c27e:	d514      	bpl.n	800c2aa <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 800c280:	05a9      	lsls	r1, r5, #22
 800c282:	d512      	bpl.n	800c2aa <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800c284:	6823      	ldr	r3, [r4, #0]
 800c286:	681a      	ldr	r2, [r3, #0]
 800c288:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800c28c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800c28e:	2202      	movs	r2, #2
 800c290:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800c292:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c294:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800c296:	2301      	movs	r3, #1
 800c298:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800c29c:	2300      	movs	r3, #0
 800c29e:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 800c2a2:	6923      	ldr	r3, [r4, #16]
 800c2a4:	b10b      	cbz	r3, 800c2aa <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 800c2a6:	4620      	mov	r0, r4
 800c2a8:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800c2aa:	06f2      	lsls	r2, r6, #27
 800c2ac:	d513      	bpl.n	800c2d6 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800c2ae:	04eb      	lsls	r3, r5, #19
 800c2b0:	d511      	bpl.n	800c2d6 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800c2b2:	6823      	ldr	r3, [r4, #0]
 800c2b4:	681a      	ldr	r2, [r3, #0]
 800c2b6:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800c2ba:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800c2bc:	2210      	movs	r2, #16
 800c2be:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800c2c0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800c2c2:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800c2c4:	2301      	movs	r3, #1
 800c2c6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800c2ca:	2300      	movs	r3, #0
 800c2cc:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800c2d0:	4620      	mov	r0, r4
 800c2d2:	f7ff ff76 	bl	800c1c2 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 800c2d6:	bd70      	pop	{r4, r5, r6, pc}

0800c2d8 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800c2d8:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800c2da:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 800c2de:	2a01      	cmp	r2, #1
{
 800c2e0:	4603      	mov	r3, r0
 800c2e2:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 800c2e6:	d02b      	beq.n	800c340 <HAL_DMA2D_ConfigLayer+0x68>
 800c2e8:	2201      	movs	r2, #1
 800c2ea:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800c2ee:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800c2f2:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 800c2f6:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 800c2fa:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 800c2fc:	4f17      	ldr	r7, [pc, #92]	@ (800c35c <HAL_DMA2D_ConfigLayer+0x84>)
 800c2fe:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c302:	3c09      	subs	r4, #9
 800c304:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800c306:	bf9c      	itt	ls
 800c308:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 800c30c:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800c30e:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800c312:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800c314:	bf88      	it	hi
 800c316:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800c31a:	b991      	cbnz	r1, 800c342 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800c31c:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 800c31e:	4039      	ands	r1, r7
 800c320:	4301      	orrs	r1, r0
 800c322:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c324:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800c326:	6999      	ldr	r1, [r3, #24]
 800c328:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c32a:	d803      	bhi.n	800c334 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800c32c:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 800c32e:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 800c332:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800c334:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800c336:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800c338:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 800c33c:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 800c340:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800c342:	69d1      	ldr	r1, [r2, #28]
 800c344:	4039      	ands	r1, r7
 800c346:	4301      	orrs	r1, r0
 800c348:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800c34a:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800c34c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800c34e:	6989      	ldr	r1, [r1, #24]
 800c350:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800c352:	bf9c      	itt	ls
 800c354:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 800c358:	6215      	strls	r5, [r2, #32]
 800c35a:	e7eb      	b.n	800c334 <HAL_DMA2D_ConfigLayer+0x5c>
 800c35c:	00fcfff0 	.word	0x00fcfff0

0800c360 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800c360:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800c364:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 800c524 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800c368:	4a6c      	ldr	r2, [pc, #432]	@ (800c51c <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800c36a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800c36c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800c36e:	2401      	movs	r4, #1
 800c370:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800c372:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800c376:	43ac      	bics	r4, r5
 800c378:	f040 80b7 	bne.w	800c4ea <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800c37c:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c37e:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800c380:	f005 0403 	and.w	r4, r5, #3
 800c384:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c388:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800c38c:	1e67      	subs	r7, r4, #1
 800c38e:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c390:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800c394:	d834      	bhi.n	800c400 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800c396:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800c398:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 800c39c:	68cf      	ldr	r7, [r1, #12]
 800c39e:	fa07 f708 	lsl.w	r7, r7, r8
 800c3a2:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800c3a6:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800c3a8:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800c3aa:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800c3ae:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800c3b2:	409f      	lsls	r7, r3
 800c3b4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800c3b8:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800c3ba:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800c3bc:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800c3c0:	688f      	ldr	r7, [r1, #8]
 800c3c2:	fa07 f708 	lsl.w	r7, r7, r8
 800c3c6:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800c3ca:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800c3cc:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800c3ce:	d119      	bne.n	800c404 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 800c3d0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800c3d4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800c3d8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800c3dc:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800c3e0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800c3e4:	f04f 0e0f 	mov.w	lr, #15
 800c3e8:	fa0e fe0b 	lsl.w	lr, lr, fp
 800c3ec:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800c3f0:	690f      	ldr	r7, [r1, #16]
 800c3f2:	fa07 f70b 	lsl.w	r7, r7, fp
 800c3f6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800c3fa:	f8ca 7020 	str.w	r7, [sl, #32]
 800c3fe:	e001      	b.n	800c404 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800c400:	2c03      	cmp	r4, #3
 800c402:	d1da      	bne.n	800c3ba <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800c404:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800c406:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800c40a:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800c40e:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800c410:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 800c414:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800c416:	d068      	beq.n	800c4ea <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800c418:	2400      	movs	r4, #0
 800c41a:	9401      	str	r4, [sp, #4]
 800c41c:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 800c420:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 800c424:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 800c428:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 800c42c:	f023 0703 	bic.w	r7, r3, #3
 800c430:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 800c434:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 800c438:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 800c43c:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800c43e:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800c442:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800c444:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800c448:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800c44c:	240f      	movs	r4, #15
 800c44e:	fa04 f40c 	lsl.w	r4, r4, ip
 800c452:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c456:	4c32      	ldr	r4, [pc, #200]	@ (800c520 <HAL_GPIO_Init+0x1c0>)
 800c458:	42a0      	cmp	r0, r4
 800c45a:	d04d      	beq.n	800c4f8 <HAL_GPIO_Init+0x198>
 800c45c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800c460:	42a0      	cmp	r0, r4
 800c462:	d04b      	beq.n	800c4fc <HAL_GPIO_Init+0x19c>
 800c464:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800c468:	42a0      	cmp	r0, r4
 800c46a:	d049      	beq.n	800c500 <HAL_GPIO_Init+0x1a0>
 800c46c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800c470:	42a0      	cmp	r0, r4
 800c472:	d047      	beq.n	800c504 <HAL_GPIO_Init+0x1a4>
 800c474:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800c478:	42a0      	cmp	r0, r4
 800c47a:	d045      	beq.n	800c508 <HAL_GPIO_Init+0x1a8>
 800c47c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800c480:	42a0      	cmp	r0, r4
 800c482:	d043      	beq.n	800c50c <HAL_GPIO_Init+0x1ac>
 800c484:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800c488:	42a0      	cmp	r0, r4
 800c48a:	d041      	beq.n	800c510 <HAL_GPIO_Init+0x1b0>
 800c48c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800c490:	42a0      	cmp	r0, r4
 800c492:	d03f      	beq.n	800c514 <HAL_GPIO_Init+0x1b4>
 800c494:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800c498:	42a0      	cmp	r0, r4
 800c49a:	d03d      	beq.n	800c518 <HAL_GPIO_Init+0x1b8>
 800c49c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 800c4a0:	42a0      	cmp	r0, r4
 800c4a2:	bf14      	ite	ne
 800c4a4:	240a      	movne	r4, #10
 800c4a6:	2409      	moveq	r4, #9
 800c4a8:	fa04 f40c 	lsl.w	r4, r4, ip
 800c4ac:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 800c4b0:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 800c4b2:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800c4b4:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800c4b6:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 800c4ba:	bf0c      	ite	eq
 800c4bc:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800c4be:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 800c4c0:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800c4c2:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800c4c4:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 800c4c8:	bf0c      	ite	eq
 800c4ca:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800c4cc:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 800c4ce:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 800c4d0:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800c4d2:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 800c4d6:	bf0c      	ite	eq
 800c4d8:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 800c4da:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 800c4dc:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800c4de:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800c4e0:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800c4e2:	bf54      	ite	pl
 800c4e4:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 800c4e6:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 800c4e8:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800c4ea:	3301      	adds	r3, #1
 800c4ec:	2b10      	cmp	r3, #16
 800c4ee:	f47f af3d 	bne.w	800c36c <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800c4f2:	b003      	add	sp, #12
 800c4f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800c4f8:	2400      	movs	r4, #0
 800c4fa:	e7d5      	b.n	800c4a8 <HAL_GPIO_Init+0x148>
 800c4fc:	2401      	movs	r4, #1
 800c4fe:	e7d3      	b.n	800c4a8 <HAL_GPIO_Init+0x148>
 800c500:	2402      	movs	r4, #2
 800c502:	e7d1      	b.n	800c4a8 <HAL_GPIO_Init+0x148>
 800c504:	2403      	movs	r4, #3
 800c506:	e7cf      	b.n	800c4a8 <HAL_GPIO_Init+0x148>
 800c508:	2404      	movs	r4, #4
 800c50a:	e7cd      	b.n	800c4a8 <HAL_GPIO_Init+0x148>
 800c50c:	2405      	movs	r4, #5
 800c50e:	e7cb      	b.n	800c4a8 <HAL_GPIO_Init+0x148>
 800c510:	2406      	movs	r4, #6
 800c512:	e7c9      	b.n	800c4a8 <HAL_GPIO_Init+0x148>
 800c514:	2407      	movs	r4, #7
 800c516:	e7c7      	b.n	800c4a8 <HAL_GPIO_Init+0x148>
 800c518:	2408      	movs	r4, #8
 800c51a:	e7c5      	b.n	800c4a8 <HAL_GPIO_Init+0x148>
 800c51c:	40013c00 	.word	0x40013c00
 800c520:	40020000 	.word	0x40020000
 800c524:	40023800 	.word	0x40023800

0800c528 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800c528:	6903      	ldr	r3, [r0, #16]
 800c52a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800c52c:	bf14      	ite	ne
 800c52e:	2001      	movne	r0, #1
 800c530:	2000      	moveq	r0, #0
 800c532:	4770      	bx	lr

0800c534 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800c534:	b10a      	cbz	r2, 800c53a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800c536:	6181      	str	r1, [r0, #24]
  }
}
 800c538:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800c53a:	0409      	lsls	r1, r1, #16
 800c53c:	e7fb      	b.n	800c536 <HAL_GPIO_WritePin+0x2>

0800c53e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800c53e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800c540:	ea01 0203 	and.w	r2, r1, r3
 800c544:	ea21 0103 	bic.w	r1, r1, r3
 800c548:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800c54c:	6181      	str	r1, [r0, #24]
}
 800c54e:	4770      	bx	lr

0800c550 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c550:	6801      	ldr	r1, [r0, #0]
 800c552:	694b      	ldr	r3, [r1, #20]
 800c554:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 800c558:	f04f 0200 	mov.w	r2, #0
 800c55c:	d010      	beq.n	800c580 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c55e:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 800c562:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800c564:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c566:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c568:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c56c:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c570:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800c572:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c576:	f043 0304 	orr.w	r3, r3, #4
 800c57a:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 800c57c:	2001      	movs	r0, #1
 800c57e:	4770      	bx	lr
  }
  return HAL_OK;
 800c580:	4618      	mov	r0, r3
}
 800c582:	4770      	bx	lr

0800c584 <I2C_WaitOnFlagUntilTimeout>:
{
 800c584:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800c588:	4606      	mov	r6, r0
 800c58a:	460f      	mov	r7, r1
 800c58c:	4691      	mov	r9, r2
 800c58e:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c590:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800c594:	6833      	ldr	r3, [r6, #0]
 800c596:	f1ba 0f01 	cmp.w	sl, #1
 800c59a:	bf0c      	ite	eq
 800c59c:	695c      	ldreq	r4, [r3, #20]
 800c59e:	699c      	ldrne	r4, [r3, #24]
 800c5a0:	ea27 0404 	bic.w	r4, r7, r4
 800c5a4:	b2a4      	uxth	r4, r4
 800c5a6:	fab4 f484 	clz	r4, r4
 800c5aa:	0964      	lsrs	r4, r4, #5
 800c5ac:	45a1      	cmp	r9, r4
 800c5ae:	d001      	beq.n	800c5b4 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800c5b0:	2000      	movs	r0, #0
 800c5b2:	e025      	b.n	800c600 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 800c5b4:	1c6a      	adds	r2, r5, #1
 800c5b6:	d0ee      	beq.n	800c596 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c5b8:	f7ff fd5c 	bl	800c074 <HAL_GetTick>
 800c5bc:	9b08      	ldr	r3, [sp, #32]
 800c5be:	1ac0      	subs	r0, r0, r3
 800c5c0:	42a8      	cmp	r0, r5
 800c5c2:	d801      	bhi.n	800c5c8 <I2C_WaitOnFlagUntilTimeout+0x44>
 800c5c4:	2d00      	cmp	r5, #0
 800c5c6:	d1e5      	bne.n	800c594 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800c5c8:	6833      	ldr	r3, [r6, #0]
 800c5ca:	f1ba 0f01 	cmp.w	sl, #1
 800c5ce:	bf0c      	ite	eq
 800c5d0:	695b      	ldreq	r3, [r3, #20]
 800c5d2:	699b      	ldrne	r3, [r3, #24]
 800c5d4:	ea27 0303 	bic.w	r3, r7, r3
 800c5d8:	b29b      	uxth	r3, r3
 800c5da:	fab3 f383 	clz	r3, r3
 800c5de:	095b      	lsrs	r3, r3, #5
 800c5e0:	4599      	cmp	r9, r3
 800c5e2:	d1d7      	bne.n	800c594 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 800c5e4:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 800c5e6:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 800c5e8:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800c5ea:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c5ee:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c5f2:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800c5f4:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c5f8:	f042 0220 	orr.w	r2, r2, #32
 800c5fc:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 800c5fe:	2001      	movs	r0, #1
}
 800c600:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800c604 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800c604:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c608:	4604      	mov	r4, r0
 800c60a:	460f      	mov	r7, r1
 800c60c:	4616      	mov	r6, r2
 800c60e:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c610:	6825      	ldr	r5, [r4, #0]
 800c612:	6968      	ldr	r0, [r5, #20]
 800c614:	ea27 0000 	bic.w	r0, r7, r0
 800c618:	b280      	uxth	r0, r0
 800c61a:	b1c0      	cbz	r0, 800c64e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c61c:	696b      	ldr	r3, [r5, #20]
 800c61e:	055a      	lsls	r2, r3, #21
 800c620:	d517      	bpl.n	800c652 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c622:	682b      	ldr	r3, [r5, #0]
 800c624:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800c628:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c62a:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 800c62e:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800c630:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c632:	2300      	movs	r3, #0
 800c634:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c636:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c63a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c63e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800c640:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c644:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800c646:	2300      	movs	r3, #0
 800c648:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 800c64c:	2001      	movs	r0, #1
}
 800c64e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800c652:	1c73      	adds	r3, r6, #1
 800c654:	d0dd      	beq.n	800c612 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c656:	f7ff fd0d 	bl	800c074 <HAL_GetTick>
 800c65a:	eba0 0008 	sub.w	r0, r0, r8
 800c65e:	42b0      	cmp	r0, r6
 800c660:	d801      	bhi.n	800c666 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 800c662:	2e00      	cmp	r6, #0
 800c664:	d1d4      	bne.n	800c610 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 800c666:	6823      	ldr	r3, [r4, #0]
 800c668:	695a      	ldr	r2, [r3, #20]
 800c66a:	ea27 0202 	bic.w	r2, r7, r2
 800c66e:	b292      	uxth	r2, r2
 800c670:	2a00      	cmp	r2, #0
 800c672:	d0cd      	beq.n	800c610 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 800c674:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 800c676:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800c678:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800c67a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c67e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c682:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800c684:	4313      	orrs	r3, r2
 800c686:	e7dd      	b.n	800c644 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800c688 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800c688:	b570      	push	{r4, r5, r6, lr}
 800c68a:	4604      	mov	r4, r0
 800c68c:	460d      	mov	r5, r1
 800c68e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c690:	6823      	ldr	r3, [r4, #0]
 800c692:	695b      	ldr	r3, [r3, #20]
 800c694:	061b      	lsls	r3, r3, #24
 800c696:	d501      	bpl.n	800c69c <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800c698:	2000      	movs	r0, #0
 800c69a:	e01e      	b.n	800c6da <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800c69c:	4620      	mov	r0, r4
 800c69e:	f7ff ff57 	bl	800c550 <I2C_IsAcknowledgeFailed>
 800c6a2:	b9c8      	cbnz	r0, 800c6d8 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 800c6a4:	1c6a      	adds	r2, r5, #1
 800c6a6:	d0f3      	beq.n	800c690 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c6a8:	f7ff fce4 	bl	800c074 <HAL_GetTick>
 800c6ac:	1b80      	subs	r0, r0, r6
 800c6ae:	42a8      	cmp	r0, r5
 800c6b0:	d801      	bhi.n	800c6b6 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800c6b2:	2d00      	cmp	r5, #0
 800c6b4:	d1ec      	bne.n	800c690 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 800c6b6:	6823      	ldr	r3, [r4, #0]
 800c6b8:	695b      	ldr	r3, [r3, #20]
 800c6ba:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 800c6be:	d1e7      	bne.n	800c690 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 800c6c0:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800c6c2:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800c6c4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c6c8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c6cc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800c6ce:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c6d2:	f042 0220 	orr.w	r2, r2, #32
 800c6d6:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800c6d8:	2001      	movs	r0, #1
}
 800c6da:	bd70      	pop	{r4, r5, r6, pc}

0800c6dc <I2C_RequestMemoryWrite>:
{
 800c6dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c6e0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c6e2:	6802      	ldr	r2, [r0, #0]
{
 800c6e4:	b085      	sub	sp, #20
 800c6e6:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 800c6ea:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c6ec:	6813      	ldr	r3, [r2, #0]
 800c6ee:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800c6f2:	6013      	str	r3, [r2, #0]
{
 800c6f4:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800c6f6:	463b      	mov	r3, r7
 800c6f8:	f8cd 8000 	str.w	r8, [sp]
 800c6fc:	2200      	movs	r2, #0
 800c6fe:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 800c702:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800c704:	f7ff ff3e 	bl	800c584 <I2C_WaitOnFlagUntilTimeout>
 800c708:	6823      	ldr	r3, [r4, #0]
 800c70a:	b138      	cbz	r0, 800c71c <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c70c:	681b      	ldr	r3, [r3, #0]
 800c70e:	05db      	lsls	r3, r3, #23
 800c710:	d502      	bpl.n	800c718 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800c712:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800c716:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 800c718:	2603      	movs	r6, #3
 800c71a:	e020      	b.n	800c75e <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800c71c:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 800c720:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800c722:	491a      	ldr	r1, [pc, #104]	@ (800c78c <I2C_RequestMemoryWrite+0xb0>)
 800c724:	4643      	mov	r3, r8
 800c726:	463a      	mov	r2, r7
 800c728:	4620      	mov	r0, r4
 800c72a:	f7ff ff6b 	bl	800c604 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800c72e:	b9a8      	cbnz	r0, 800c75c <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c730:	6823      	ldr	r3, [r4, #0]
 800c732:	9003      	str	r0, [sp, #12]
 800c734:	695a      	ldr	r2, [r3, #20]
 800c736:	9203      	str	r2, [sp, #12]
 800c738:	699b      	ldr	r3, [r3, #24]
 800c73a:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c73c:	4642      	mov	r2, r8
 800c73e:	4639      	mov	r1, r7
 800c740:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c742:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c744:	f7ff ffa0 	bl	800c688 <I2C_WaitOnTXEFlagUntilTimeout>
 800c748:	4606      	mov	r6, r0
 800c74a:	b160      	cbz	r0, 800c766 <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c74c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800c74e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c750:	bf01      	itttt	eq
 800c752:	6822      	ldreq	r2, [r4, #0]
 800c754:	6813      	ldreq	r3, [r2, #0]
 800c756:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800c75a:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 800c75c:	2601      	movs	r6, #1
}
 800c75e:	4630      	mov	r0, r6
 800c760:	b005      	add	sp, #20
 800c762:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c766:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c76a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c76c:	d102      	bne.n	800c774 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c76e:	b2ed      	uxtb	r5, r5
 800c770:	611d      	str	r5, [r3, #16]
 800c772:	e7f4      	b.n	800c75e <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800c774:	0a2a      	lsrs	r2, r5, #8
 800c776:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c778:	4639      	mov	r1, r7
 800c77a:	4642      	mov	r2, r8
 800c77c:	4620      	mov	r0, r4
 800c77e:	f7ff ff83 	bl	800c688 <I2C_WaitOnTXEFlagUntilTimeout>
 800c782:	2800      	cmp	r0, #0
 800c784:	d1e2      	bne.n	800c74c <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c786:	6823      	ldr	r3, [r4, #0]
 800c788:	e7f1      	b.n	800c76e <I2C_RequestMemoryWrite+0x92>
 800c78a:	bf00      	nop
 800c78c:	00010002 	.word	0x00010002

0800c790 <I2C_RequestMemoryRead>:
{
 800c790:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c794:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c796:	6803      	ldr	r3, [r0, #0]
{
 800c798:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c79a:	681a      	ldr	r2, [r3, #0]
 800c79c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800c7a0:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c7a2:	681a      	ldr	r2, [r3, #0]
{
 800c7a4:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c7a8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800c7ac:	601a      	str	r2, [r3, #0]
{
 800c7ae:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800c7b0:	463b      	mov	r3, r7
 800c7b2:	f8cd 8000 	str.w	r8, [sp]
 800c7b6:	2200      	movs	r2, #0
 800c7b8:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 800c7bc:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800c7be:	f7ff fee1 	bl	800c584 <I2C_WaitOnFlagUntilTimeout>
 800c7c2:	6823      	ldr	r3, [r4, #0]
 800c7c4:	b138      	cbz	r0, 800c7d6 <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c7c6:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c7c8:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800c7ca:	bf44      	itt	mi
 800c7cc:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 800c7d0:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 800c7d2:	2003      	movs	r0, #3
 800c7d4:	e021      	b.n	800c81a <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800c7d6:	fa5f f986 	uxtb.w	r9, r6
 800c7da:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 800c7de:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800c7e0:	492b      	ldr	r1, [pc, #172]	@ (800c890 <I2C_RequestMemoryRead+0x100>)
 800c7e2:	4643      	mov	r3, r8
 800c7e4:	463a      	mov	r2, r7
 800c7e6:	4620      	mov	r0, r4
 800c7e8:	f7ff ff0c 	bl	800c604 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800c7ec:	b9a0      	cbnz	r0, 800c818 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c7ee:	6823      	ldr	r3, [r4, #0]
 800c7f0:	9003      	str	r0, [sp, #12]
 800c7f2:	695a      	ldr	r2, [r3, #20]
 800c7f4:	9203      	str	r2, [sp, #12]
 800c7f6:	699b      	ldr	r3, [r3, #24]
 800c7f8:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c7fa:	4642      	mov	r2, r8
 800c7fc:	4639      	mov	r1, r7
 800c7fe:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c800:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c802:	f7ff ff41 	bl	800c688 <I2C_WaitOnTXEFlagUntilTimeout>
 800c806:	b158      	cbz	r0, 800c820 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c808:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800c80a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c80c:	bf01      	itttt	eq
 800c80e:	6822      	ldreq	r2, [r4, #0]
 800c810:	6813      	ldreq	r3, [r2, #0]
 800c812:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800c816:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 800c818:	2001      	movs	r0, #1
}
 800c81a:	b004      	add	sp, #16
 800c81c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c820:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c824:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c826:	d11a      	bne.n	800c85e <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c828:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c82a:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c82c:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c82e:	4639      	mov	r1, r7
 800c830:	4620      	mov	r0, r4
 800c832:	f7ff ff29 	bl	800c688 <I2C_WaitOnTXEFlagUntilTimeout>
 800c836:	4602      	mov	r2, r0
 800c838:	2800      	cmp	r0, #0
 800c83a:	d1e5      	bne.n	800c808 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c83c:	6821      	ldr	r1, [r4, #0]
 800c83e:	680b      	ldr	r3, [r1, #0]
 800c840:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800c844:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800c846:	4620      	mov	r0, r4
 800c848:	f8cd 8000 	str.w	r8, [sp]
 800c84c:	463b      	mov	r3, r7
 800c84e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800c852:	f7ff fe97 	bl	800c584 <I2C_WaitOnFlagUntilTimeout>
 800c856:	6822      	ldr	r2, [r4, #0]
 800c858:	b160      	cbz	r0, 800c874 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c85a:	6813      	ldr	r3, [r2, #0]
 800c85c:	e7b4      	b.n	800c7c8 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800c85e:	0a2a      	lsrs	r2, r5, #8
 800c860:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800c862:	4639      	mov	r1, r7
 800c864:	4642      	mov	r2, r8
 800c866:	4620      	mov	r0, r4
 800c868:	f7ff ff0e 	bl	800c688 <I2C_WaitOnTXEFlagUntilTimeout>
 800c86c:	2800      	cmp	r0, #0
 800c86e:	d1cb      	bne.n	800c808 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c870:	6823      	ldr	r3, [r4, #0]
 800c872:	e7d9      	b.n	800c828 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800c874:	f049 0301 	orr.w	r3, r9, #1
 800c878:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800c87a:	4905      	ldr	r1, [pc, #20]	@ (800c890 <I2C_RequestMemoryRead+0x100>)
 800c87c:	4643      	mov	r3, r8
 800c87e:	463a      	mov	r2, r7
 800c880:	4620      	mov	r0, r4
 800c882:	f7ff febf 	bl	800c604 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800c886:	3800      	subs	r0, #0
 800c888:	bf18      	it	ne
 800c88a:	2001      	movne	r0, #1
 800c88c:	e7c5      	b.n	800c81a <I2C_RequestMemoryRead+0x8a>
 800c88e:	bf00      	nop
 800c890:	00010002 	.word	0x00010002

0800c894 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800c894:	b570      	push	{r4, r5, r6, lr}
 800c896:	4604      	mov	r4, r0
 800c898:	460d      	mov	r5, r1
 800c89a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c89c:	6823      	ldr	r3, [r4, #0]
 800c89e:	695b      	ldr	r3, [r3, #20]
 800c8a0:	075b      	lsls	r3, r3, #29
 800c8a2:	d501      	bpl.n	800c8a8 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800c8a4:	2000      	movs	r0, #0
 800c8a6:	e01e      	b.n	800c8e6 <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800c8a8:	4620      	mov	r0, r4
 800c8aa:	f7ff fe51 	bl	800c550 <I2C_IsAcknowledgeFailed>
 800c8ae:	b9c8      	cbnz	r0, 800c8e4 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 800c8b0:	1c6a      	adds	r2, r5, #1
 800c8b2:	d0f3      	beq.n	800c89c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c8b4:	f7ff fbde 	bl	800c074 <HAL_GetTick>
 800c8b8:	1b80      	subs	r0, r0, r6
 800c8ba:	42a8      	cmp	r0, r5
 800c8bc:	d801      	bhi.n	800c8c2 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800c8be:	2d00      	cmp	r5, #0
 800c8c0:	d1ec      	bne.n	800c89c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 800c8c2:	6823      	ldr	r3, [r4, #0]
 800c8c4:	695b      	ldr	r3, [r3, #20]
 800c8c6:	f013 0304 	ands.w	r3, r3, #4
 800c8ca:	d1e7      	bne.n	800c89c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 800c8cc:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800c8ce:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800c8d0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c8d4:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c8d8:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800c8da:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c8de:	f042 0220 	orr.w	r2, r2, #32
 800c8e2:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 800c8e4:	2001      	movs	r0, #1
}
 800c8e6:	bd70      	pop	{r4, r5, r6, pc}

0800c8e8 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800c8e8:	b570      	push	{r4, r5, r6, lr}
 800c8ea:	4604      	mov	r4, r0
 800c8ec:	460d      	mov	r5, r1
 800c8ee:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8f0:	6821      	ldr	r1, [r4, #0]
 800c8f2:	694b      	ldr	r3, [r1, #20]
 800c8f4:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800c8f8:	d001      	beq.n	800c8fe <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800c8fa:	2000      	movs	r0, #0
 800c8fc:	e011      	b.n	800c922 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c8fe:	694a      	ldr	r2, [r1, #20]
 800c900:	06d2      	lsls	r2, r2, #27
 800c902:	d50f      	bpl.n	800c924 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c904:	f06f 0210 	mvn.w	r2, #16
 800c908:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800c90a:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c90c:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c90e:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c912:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800c916:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c918:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 800c91a:	2300      	movs	r3, #0
 800c91c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 800c920:	2001      	movs	r0, #1
}
 800c922:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c924:	f7ff fba6 	bl	800c074 <HAL_GetTick>
 800c928:	1b80      	subs	r0, r0, r6
 800c92a:	42a8      	cmp	r0, r5
 800c92c:	d801      	bhi.n	800c932 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 800c92e:	2d00      	cmp	r5, #0
 800c930:	d1de      	bne.n	800c8f0 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 800c932:	6823      	ldr	r3, [r4, #0]
 800c934:	695b      	ldr	r3, [r3, #20]
 800c936:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800c93a:	d1d9      	bne.n	800c8f0 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 800c93c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c93e:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c940:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c944:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c948:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800c94a:	4313      	orrs	r3, r2
 800c94c:	e7e4      	b.n	800c918 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

0800c950 <HAL_I2C_Init>:
{
 800c950:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800c952:	4604      	mov	r4, r0
 800c954:	b908      	cbnz	r0, 800c95a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800c956:	2001      	movs	r0, #1
}
 800c958:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800c95a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800c95e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800c962:	b91b      	cbnz	r3, 800c96c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800c964:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 800c968:	f7f5 fa34 	bl	8001dd4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800c96c:	2324      	movs	r3, #36	@ 0x24
 800c96e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800c972:	6823      	ldr	r3, [r4, #0]
 800c974:	681a      	ldr	r2, [r3, #0]
 800c976:	f022 0201 	bic.w	r2, r2, #1
 800c97a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800c97c:	681a      	ldr	r2, [r3, #0]
 800c97e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c982:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800c984:	681a      	ldr	r2, [r3, #0]
 800c986:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800c98a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800c98c:	f000 fea8 	bl	800d6e0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c990:	4b3f      	ldr	r3, [pc, #252]	@ (800ca90 <HAL_I2C_Init+0x140>)
 800c992:	6865      	ldr	r5, [r4, #4]
 800c994:	429d      	cmp	r5, r3
 800c996:	bf94      	ite	ls
 800c998:	4b3e      	ldrls	r3, [pc, #248]	@ (800ca94 <HAL_I2C_Init+0x144>)
 800c99a:	4b3f      	ldrhi	r3, [pc, #252]	@ (800ca98 <HAL_I2C_Init+0x148>)
 800c99c:	4298      	cmp	r0, r3
 800c99e:	bf8c      	ite	hi
 800c9a0:	2300      	movhi	r3, #0
 800c9a2:	2301      	movls	r3, #1
 800c9a4:	2b00      	cmp	r3, #0
 800c9a6:	d1d6      	bne.n	800c956 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c9a8:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c9aa:	4e39      	ldr	r6, [pc, #228]	@ (800ca90 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c9ac:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800c9ae:	4b3b      	ldr	r3, [pc, #236]	@ (800ca9c <HAL_I2C_Init+0x14c>)
 800c9b0:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c9b4:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800c9b8:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c9ba:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c9bc:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c9be:	bf88      	it	hi
 800c9c0:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 800c9c4:	6a11      	ldr	r1, [r2, #32]
 800c9c6:	bf88      	it	hi
 800c9c8:	4373      	mulhi	r3, r6
 800c9ca:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800c9ce:	bf84      	itt	hi
 800c9d0:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 800c9d4:	fbb3 f3f6 	udivhi	r3, r3, r6
 800c9d8:	3301      	adds	r3, #1
 800c9da:	430b      	orrs	r3, r1
 800c9dc:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c9de:	69d1      	ldr	r1, [r2, #28]
 800c9e0:	1e43      	subs	r3, r0, #1
 800c9e2:	482b      	ldr	r0, [pc, #172]	@ (800ca90 <HAL_I2C_Init+0x140>)
 800c9e4:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 800c9e8:	4285      	cmp	r5, r0
 800c9ea:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800c9ee:	d832      	bhi.n	800ca56 <HAL_I2C_Init+0x106>
 800c9f0:	006d      	lsls	r5, r5, #1
 800c9f2:	f640 70fc 	movw	r0, #4092	@ 0xffc
 800c9f6:	fbb3 f3f5 	udiv	r3, r3, r5
 800c9fa:	3301      	adds	r3, #1
 800c9fc:	4203      	tst	r3, r0
 800c9fe:	d042      	beq.n	800ca86 <HAL_I2C_Init+0x136>
 800ca00:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800ca04:	4319      	orrs	r1, r3
 800ca06:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800ca08:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800ca0c:	6811      	ldr	r1, [r2, #0]
 800ca0e:	4303      	orrs	r3, r0
 800ca10:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 800ca14:	430b      	orrs	r3, r1
 800ca16:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800ca18:	6891      	ldr	r1, [r2, #8]
 800ca1a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800ca1e:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 800ca22:	4303      	orrs	r3, r0
 800ca24:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800ca28:	430b      	orrs	r3, r1
 800ca2a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800ca2c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800ca30:	68d1      	ldr	r1, [r2, #12]
 800ca32:	4303      	orrs	r3, r0
 800ca34:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800ca38:	430b      	orrs	r3, r1
 800ca3a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800ca3c:	6813      	ldr	r3, [r2, #0]
 800ca3e:	f043 0301 	orr.w	r3, r3, #1
 800ca42:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ca44:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800ca46:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ca48:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800ca4a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800ca4e:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800ca50:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 800ca54:	e780      	b.n	800c958 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800ca56:	68a0      	ldr	r0, [r4, #8]
 800ca58:	b950      	cbnz	r0, 800ca70 <HAL_I2C_Init+0x120>
 800ca5a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800ca5e:	fbb3 f3f5 	udiv	r3, r3, r5
 800ca62:	3301      	adds	r3, #1
 800ca64:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800ca68:	b17b      	cbz	r3, 800ca8a <HAL_I2C_Init+0x13a>
 800ca6a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800ca6e:	e7c9      	b.n	800ca04 <HAL_I2C_Init+0xb4>
 800ca70:	2019      	movs	r0, #25
 800ca72:	4368      	muls	r0, r5
 800ca74:	fbb3 f3f0 	udiv	r3, r3, r0
 800ca78:	3301      	adds	r3, #1
 800ca7a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800ca7e:	b123      	cbz	r3, 800ca8a <HAL_I2C_Init+0x13a>
 800ca80:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800ca84:	e7be      	b.n	800ca04 <HAL_I2C_Init+0xb4>
 800ca86:	2304      	movs	r3, #4
 800ca88:	e7bc      	b.n	800ca04 <HAL_I2C_Init+0xb4>
 800ca8a:	2301      	movs	r3, #1
 800ca8c:	e7ba      	b.n	800ca04 <HAL_I2C_Init+0xb4>
 800ca8e:	bf00      	nop
 800ca90:	000186a0 	.word	0x000186a0
 800ca94:	001e847f 	.word	0x001e847f
 800ca98:	003d08ff 	.word	0x003d08ff
 800ca9c:	000f4240 	.word	0x000f4240

0800caa0 <HAL_I2C_Mem_Write>:
{
 800caa0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800caa4:	4604      	mov	r4, r0
 800caa6:	4699      	mov	r9, r3
 800caa8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800caaa:	460f      	mov	r7, r1
 800caac:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800caae:	f7ff fae1 	bl	800c074 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800cab2:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800cab6:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800cab8:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800caba:	d003      	beq.n	800cac4 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 800cabc:	2002      	movs	r0, #2
}
 800cabe:	b003      	add	sp, #12
 800cac0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800cac4:	9000      	str	r0, [sp, #0]
 800cac6:	493c      	ldr	r1, [pc, #240]	@ (800cbb8 <HAL_I2C_Mem_Write+0x118>)
 800cac8:	2319      	movs	r3, #25
 800caca:	2201      	movs	r2, #1
 800cacc:	4620      	mov	r0, r4
 800cace:	f7ff fd59 	bl	800c584 <I2C_WaitOnFlagUntilTimeout>
 800cad2:	2800      	cmp	r0, #0
 800cad4:	d1f2      	bne.n	800cabc <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800cad6:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800cada:	2b01      	cmp	r3, #1
 800cadc:	d0ee      	beq.n	800cabc <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cade:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800cae0:	2301      	movs	r3, #1
 800cae2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cae6:	6803      	ldr	r3, [r0, #0]
 800cae8:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800caea:	bf5e      	ittt	pl
 800caec:	6803      	ldrpl	r3, [r0, #0]
 800caee:	f043 0301 	orrpl.w	r3, r3, #1
 800caf2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800caf4:	6803      	ldr	r3, [r0, #0]
 800caf6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800cafa:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800cafc:	2321      	movs	r3, #33	@ 0x21
 800cafe:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800cb02:	2340      	movs	r3, #64	@ 0x40
 800cb04:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cb08:	2300      	movs	r3, #0
 800cb0a:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 800cb0c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800cb0e:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 800cb10:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800cb14:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800cb16:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800cb18:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800cb1a:	4b28      	ldr	r3, [pc, #160]	@ (800cbbc <HAL_I2C_Mem_Write+0x11c>)
 800cb1c:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800cb1e:	4642      	mov	r2, r8
 800cb20:	e9cd 6500 	strd	r6, r5, [sp]
 800cb24:	464b      	mov	r3, r9
 800cb26:	4639      	mov	r1, r7
 800cb28:	4620      	mov	r0, r4
 800cb2a:	f7ff fdd7 	bl	800c6dc <I2C_RequestMemoryWrite>
 800cb2e:	2800      	cmp	r0, #0
 800cb30:	d02a      	beq.n	800cb88 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800cb32:	2001      	movs	r0, #1
 800cb34:	e7c3      	b.n	800cabe <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800cb36:	f7ff fda7 	bl	800c688 <I2C_WaitOnTXEFlagUntilTimeout>
 800cb3a:	b140      	cbz	r0, 800cb4e <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800cb3c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800cb3e:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cb40:	bf01      	itttt	eq
 800cb42:	6822      	ldreq	r2, [r4, #0]
 800cb44:	6813      	ldreq	r3, [r2, #0]
 800cb46:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800cb4a:	6013      	streq	r3, [r2, #0]
 800cb4c:	e7f1      	b.n	800cb32 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cb4e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800cb50:	6827      	ldr	r7, [r4, #0]
 800cb52:	461a      	mov	r2, r3
 800cb54:	f812 1b01 	ldrb.w	r1, [r2], #1
 800cb58:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800cb5a:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 800cb5c:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800cb5e:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 800cb60:	3a01      	subs	r2, #1
 800cb62:	b292      	uxth	r2, r2
 800cb64:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800cb66:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800cb68:	1e48      	subs	r0, r1, #1
 800cb6a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800cb6c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800cb6e:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800cb70:	d50a      	bpl.n	800cb88 <HAL_I2C_Mem_Write+0xe8>
 800cb72:	b148      	cbz	r0, 800cb88 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cb74:	785a      	ldrb	r2, [r3, #1]
 800cb76:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800cb78:	3302      	adds	r3, #2
 800cb7a:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800cb7c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800cb7e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800cb80:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800cb82:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800cb84:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 800cb86:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 800cb88:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800cb8a:	462a      	mov	r2, r5
 800cb8c:	4631      	mov	r1, r6
 800cb8e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800cb90:	2b00      	cmp	r3, #0
 800cb92:	d1d0      	bne.n	800cb36 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800cb94:	f7ff fe7e 	bl	800c894 <I2C_WaitOnBTFFlagUntilTimeout>
 800cb98:	2800      	cmp	r0, #0
 800cb9a:	d1cf      	bne.n	800cb3c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cb9c:	6822      	ldr	r2, [r4, #0]
 800cb9e:	6813      	ldr	r3, [r2, #0]
 800cba0:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800cba4:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800cba6:	2320      	movs	r3, #32
 800cba8:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800cbac:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800cbb0:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 800cbb4:	e783      	b.n	800cabe <HAL_I2C_Mem_Write+0x1e>
 800cbb6:	bf00      	nop
 800cbb8:	00100002 	.word	0x00100002
 800cbbc:	ffff0000 	.word	0xffff0000

0800cbc0 <HAL_I2C_Mem_Read>:
{
 800cbc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cbc4:	4604      	mov	r4, r0
 800cbc6:	b087      	sub	sp, #28
 800cbc8:	4699      	mov	r9, r3
 800cbca:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 800cbcc:	460d      	mov	r5, r1
 800cbce:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800cbd0:	f7ff fa50 	bl	800c074 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800cbd4:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 800cbd8:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800cbda:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800cbdc:	d004      	beq.n	800cbe8 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 800cbde:	2502      	movs	r5, #2
}
 800cbe0:	4628      	mov	r0, r5
 800cbe2:	b007      	add	sp, #28
 800cbe4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800cbe8:	9000      	str	r0, [sp, #0]
 800cbea:	497a      	ldr	r1, [pc, #488]	@ (800cdd4 <HAL_I2C_Mem_Read+0x214>)
 800cbec:	2319      	movs	r3, #25
 800cbee:	2201      	movs	r2, #1
 800cbf0:	4620      	mov	r0, r4
 800cbf2:	f7ff fcc7 	bl	800c584 <I2C_WaitOnFlagUntilTimeout>
 800cbf6:	2800      	cmp	r0, #0
 800cbf8:	d1f1      	bne.n	800cbde <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800cbfa:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800cbfe:	2b01      	cmp	r3, #1
 800cc00:	d0ed      	beq.n	800cbde <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cc02:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800cc04:	2301      	movs	r3, #1
 800cc06:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800cc0a:	6803      	ldr	r3, [r0, #0]
 800cc0c:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800cc0e:	bf5e      	ittt	pl
 800cc10:	6803      	ldrpl	r3, [r0, #0]
 800cc12:	f043 0301 	orrpl.w	r3, r3, #1
 800cc16:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800cc18:	6803      	ldr	r3, [r0, #0]
 800cc1a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800cc1e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800cc20:	2322      	movs	r3, #34	@ 0x22
 800cc22:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800cc26:	2340      	movs	r3, #64	@ 0x40
 800cc28:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cc2c:	2300      	movs	r3, #0
 800cc2e:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 800cc30:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800cc32:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 800cc34:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800cc38:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800cc3a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800cc3c:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800cc3e:	4b66      	ldr	r3, [pc, #408]	@ (800cdd8 <HAL_I2C_Mem_Read+0x218>)
 800cc40:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800cc42:	4629      	mov	r1, r5
 800cc44:	e9cd 7600 	strd	r7, r6, [sp]
 800cc48:	464b      	mov	r3, r9
 800cc4a:	4642      	mov	r2, r8
 800cc4c:	4620      	mov	r0, r4
 800cc4e:	f7ff fd9f 	bl	800c790 <I2C_RequestMemoryRead>
 800cc52:	4605      	mov	r5, r0
 800cc54:	b108      	cbz	r0, 800cc5a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800cc56:	2501      	movs	r5, #1
 800cc58:	e7c2      	b.n	800cbe0 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800cc5a:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cc5c:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800cc5e:	b9b2      	cbnz	r2, 800cc8e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cc60:	9002      	str	r0, [sp, #8]
 800cc62:	695a      	ldr	r2, [r3, #20]
 800cc64:	9202      	str	r2, [sp, #8]
 800cc66:	699a      	ldr	r2, [r3, #24]
 800cc68:	9202      	str	r2, [sp, #8]
 800cc6a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cc6c:	681a      	ldr	r2, [r3, #0]
 800cc6e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800cc72:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cc74:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 800cddc <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 800cc78:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800cc7a:	2b00      	cmp	r3, #0
 800cc7c:	d12c      	bne.n	800ccd8 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800cc7e:	2220      	movs	r2, #32
 800cc80:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 800cc84:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800cc88:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 800cc8c:	e7a8      	b.n	800cbe0 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800cc8e:	2a01      	cmp	r2, #1
 800cc90:	d10a      	bne.n	800cca8 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cc92:	681a      	ldr	r2, [r3, #0]
 800cc94:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800cc98:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cc9a:	9003      	str	r0, [sp, #12]
 800cc9c:	695a      	ldr	r2, [r3, #20]
 800cc9e:	9203      	str	r2, [sp, #12]
 800cca0:	699a      	ldr	r2, [r3, #24]
 800cca2:	9203      	str	r2, [sp, #12]
 800cca4:	9a03      	ldr	r2, [sp, #12]
 800cca6:	e7e1      	b.n	800cc6c <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800cca8:	2a02      	cmp	r2, #2
 800ccaa:	d10e      	bne.n	800ccca <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ccac:	681a      	ldr	r2, [r3, #0]
 800ccae:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800ccb2:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ccb4:	681a      	ldr	r2, [r3, #0]
 800ccb6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800ccba:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ccbc:	9004      	str	r0, [sp, #16]
 800ccbe:	695a      	ldr	r2, [r3, #20]
 800ccc0:	9204      	str	r2, [sp, #16]
 800ccc2:	699b      	ldr	r3, [r3, #24]
 800ccc4:	9304      	str	r3, [sp, #16]
 800ccc6:	9b04      	ldr	r3, [sp, #16]
 800ccc8:	e7d4      	b.n	800cc74 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ccca:	9005      	str	r0, [sp, #20]
 800cccc:	695a      	ldr	r2, [r3, #20]
 800ccce:	9205      	str	r2, [sp, #20]
 800ccd0:	699b      	ldr	r3, [r3, #24]
 800ccd2:	9305      	str	r3, [sp, #20]
 800ccd4:	9b05      	ldr	r3, [sp, #20]
 800ccd6:	e7cd      	b.n	800cc74 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800ccd8:	2b03      	cmp	r3, #3
 800ccda:	d856      	bhi.n	800cd8a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800ccdc:	2b01      	cmp	r3, #1
 800ccde:	d115      	bne.n	800cd0c <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800cce0:	4632      	mov	r2, r6
 800cce2:	4639      	mov	r1, r7
 800cce4:	4620      	mov	r0, r4
 800cce6:	f7ff fdff 	bl	800c8e8 <I2C_WaitOnRXNEFlagUntilTimeout>
 800ccea:	2800      	cmp	r0, #0
 800ccec:	d1b3      	bne.n	800cc56 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ccee:	6823      	ldr	r3, [r4, #0]
 800ccf0:	691a      	ldr	r2, [r3, #16]
 800ccf2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ccf4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800ccf6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ccf8:	3301      	adds	r3, #1
 800ccfa:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800ccfc:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800ccfe:	3b01      	subs	r3, #1
 800cd00:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800cd02:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800cd04:	3b01      	subs	r3, #1
 800cd06:	b29b      	uxth	r3, r3
 800cd08:	8563      	strh	r3, [r4, #42]	@ 0x2a
 800cd0a:	e7b5      	b.n	800cc78 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800cd0c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cd0e:	9600      	str	r6, [sp, #0]
 800cd10:	463b      	mov	r3, r7
 800cd12:	f04f 0200 	mov.w	r2, #0
 800cd16:	4641      	mov	r1, r8
 800cd18:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800cd1a:	d119      	bne.n	800cd50 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cd1c:	f7ff fc32 	bl	800c584 <I2C_WaitOnFlagUntilTimeout>
 800cd20:	2800      	cmp	r0, #0
 800cd22:	d198      	bne.n	800cc56 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cd24:	6823      	ldr	r3, [r4, #0]
 800cd26:	681a      	ldr	r2, [r3, #0]
 800cd28:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800cd2c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd2e:	691a      	ldr	r2, [r3, #16]
 800cd30:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800cd32:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800cd34:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800cd36:	1c53      	adds	r3, r2, #1
 800cd38:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800cd3a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800cd3c:	3b01      	subs	r3, #1
 800cd3e:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800cd40:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800cd42:	3b01      	subs	r3, #1
 800cd44:	b29b      	uxth	r3, r3
 800cd46:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd48:	6823      	ldr	r3, [r4, #0]
 800cd4a:	691b      	ldr	r3, [r3, #16]
 800cd4c:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800cd4e:	e7d2      	b.n	800ccf6 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cd50:	f7ff fc18 	bl	800c584 <I2C_WaitOnFlagUntilTimeout>
 800cd54:	4602      	mov	r2, r0
 800cd56:	2800      	cmp	r0, #0
 800cd58:	f47f af7d 	bne.w	800cc56 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cd5c:	6823      	ldr	r3, [r4, #0]
 800cd5e:	6819      	ldr	r1, [r3, #0]
 800cd60:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 800cd64:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd66:	6919      	ldr	r1, [r3, #16]
 800cd68:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800cd6a:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 800cd6c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800cd6e:	3301      	adds	r3, #1
 800cd70:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800cd72:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800cd74:	3b01      	subs	r3, #1
 800cd76:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 800cd78:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800cd7a:	3b01      	subs	r3, #1
 800cd7c:	b29b      	uxth	r3, r3
 800cd7e:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800cd80:	4641      	mov	r1, r8
 800cd82:	9600      	str	r6, [sp, #0]
 800cd84:	463b      	mov	r3, r7
 800cd86:	4620      	mov	r0, r4
 800cd88:	e7c8      	b.n	800cd1c <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800cd8a:	4632      	mov	r2, r6
 800cd8c:	4639      	mov	r1, r7
 800cd8e:	4620      	mov	r0, r4
 800cd90:	f7ff fdaa 	bl	800c8e8 <I2C_WaitOnRXNEFlagUntilTimeout>
 800cd94:	2800      	cmp	r0, #0
 800cd96:	f47f af5e 	bne.w	800cc56 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd9a:	6823      	ldr	r3, [r4, #0]
 800cd9c:	691a      	ldr	r2, [r3, #16]
 800cd9e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800cda0:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 800cda2:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 800cda4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 800cda6:	3a01      	subs	r2, #1
 800cda8:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800cdaa:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 800cdac:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800cdae:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 800cdb0:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 800cdb2:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800cdb4:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 800cdb6:	3b01      	subs	r3, #1
 800cdb8:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800cdba:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 800cdbc:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800cdbe:	f57f af5b 	bpl.w	800cc78 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 800cdc2:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cdc4:	bf02      	ittt	eq
 800cdc6:	6813      	ldreq	r3, [r2, #0]
 800cdc8:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 800cdcc:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cdce:	6913      	ldr	r3, [r2, #16]
 800cdd0:	704b      	strb	r3, [r1, #1]
 800cdd2:	e790      	b.n	800ccf6 <HAL_I2C_Mem_Read+0x136>
 800cdd4:	00100002 	.word	0x00100002
 800cdd8:	ffff0000 	.word	0xffff0000
 800cddc:	00010004 	.word	0x00010004

0800cde0 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 800cde0:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800cde2:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800cde6:	2b20      	cmp	r3, #32
 800cde8:	b2dc      	uxtb	r4, r3
 800cdea:	d116      	bne.n	800ce1a <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 800cdec:	2324      	movs	r3, #36	@ 0x24
 800cdee:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800cdf2:	6803      	ldr	r3, [r0, #0]
 800cdf4:	681a      	ldr	r2, [r3, #0]
 800cdf6:	f022 0201 	bic.w	r2, r2, #1
 800cdfa:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800cdfc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800cdfe:	f022 0210 	bic.w	r2, r2, #16
 800ce02:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 800ce04:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800ce06:	4311      	orrs	r1, r2
 800ce08:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 800ce0a:	681a      	ldr	r2, [r3, #0]
 800ce0c:	f042 0201 	orr.w	r2, r2, #1
 800ce10:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800ce12:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800ce16:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800ce18:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800ce1a:	2002      	movs	r0, #2
 800ce1c:	e7fc      	b.n	800ce18 <HAL_I2CEx_ConfigAnalogFilter+0x38>

0800ce1e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800ce1e:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800ce20:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800ce24:	2b20      	cmp	r3, #32
 800ce26:	b2dc      	uxtb	r4, r3
 800ce28:	d116      	bne.n	800ce58 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800ce2a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800ce2c:	2324      	movs	r3, #36	@ 0x24
 800ce2e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800ce32:	6813      	ldr	r3, [r2, #0]
 800ce34:	f023 0301 	bic.w	r3, r3, #1
 800ce38:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 800ce3a:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 800ce3c:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 800ce40:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 800ce42:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 800ce44:	b29b      	uxth	r3, r3
 800ce46:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 800ce48:	6813      	ldr	r3, [r2, #0]
 800ce4a:	f043 0301 	orr.w	r3, r3, #1
 800ce4e:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800ce50:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 800ce54:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800ce56:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 800ce58:	2002      	movs	r0, #2
 800ce5a:	e7fc      	b.n	800ce56 <HAL_I2CEx_ConfigDigitalFilter+0x38>

0800ce5c <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ce5c:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800ce5e:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ce62:	01d2      	lsls	r2, r2, #7
 800ce64:	3284      	adds	r2, #132	@ 0x84
 800ce66:	1883      	adds	r3, r0, r2
{
 800ce68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ce6c:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ce6e:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ce70:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800ce72:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ce76:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 800ce7a:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800ce7c:	68c5      	ldr	r5, [r0, #12]
 800ce7e:	f10c 0701 	add.w	r7, ip, #1
 800ce82:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ce86:	f3c6 460b 	ubfx	r6, r6, #16, #12
 800ce8a:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800ce8c:	443d      	add	r5, r7
 800ce8e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800ce92:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800ce94:	68c6      	ldr	r6, [r0, #12]
 800ce96:	68cd      	ldr	r5, [r1, #12]
 800ce98:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800ce9c:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800ce9e:	689d      	ldr	r5, [r3, #8]
 800cea0:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 800cea4:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800cea6:	68c7      	ldr	r7, [r0, #12]
 800cea8:	688d      	ldr	r5, [r1, #8]
 800ceaa:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800ceae:	3501      	adds	r5, #1
 800ceb0:	443d      	add	r5, r7
 800ceb2:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800ceb6:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800ceb8:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800ceba:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800cebc:	f025 0507 	bic.w	r5, r5, #7
 800cec0:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800cec2:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800cec6:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800cec8:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800cecc:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800cece:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800ced2:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800ced6:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 800ceda:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800cede:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800cee2:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800cee6:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800cee8:	695d      	ldr	r5, [r3, #20]
 800ceea:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 800ceee:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800cef0:	694d      	ldr	r5, [r1, #20]
 800cef2:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800cef4:	69dd      	ldr	r5, [r3, #28]
 800cef6:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 800cefa:	f025 0507 	bic.w	r5, r5, #7
 800cefe:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800cf00:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800cf04:	433d      	orrs	r5, r7
 800cf06:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800cf08:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800cf0a:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800cf0c:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800cf10:	2e07      	cmp	r6, #7
 800cf12:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800cf14:	bf9c      	itt	ls
 800cf16:	4d0e      	ldrls	r5, [pc, #56]	@ (800cf50 <LTDC_SetConfig+0xf4>)
 800cf18:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800cf1a:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 800cf1c:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 800cf20:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800cf22:	bf88      	it	hi
 800cf24:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800cf26:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800cf28:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800cf2a:	eba4 040c 	sub.w	r4, r4, ip
 800cf2e:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800cf30:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800cf32:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800cf34:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800cf38:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800cf3a:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 800cf3c:	f36f 040a 	bfc	r4, #0, #11
 800cf40:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800cf42:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800cf44:	5883      	ldr	r3, [r0, r2]
 800cf46:	f043 0301 	orr.w	r3, r3, #1
 800cf4a:	5083      	str	r3, [r0, r2]
}
 800cf4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cf50:	0802e120 	.word	0x0802e120

0800cf54 <HAL_LTDC_Init>:
{
 800cf54:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800cf56:	4604      	mov	r4, r0
 800cf58:	2800      	cmp	r0, #0
 800cf5a:	d063      	beq.n	800d024 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800cf5c:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 800cf60:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800cf64:	b91b      	cbnz	r3, 800cf6e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800cf66:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 800cf6a:	f7f4 ff8f 	bl	8001e8c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800cf6e:	2302      	movs	r3, #2
 800cf70:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800cf74:	6823      	ldr	r3, [r4, #0]
 800cf76:	699a      	ldr	r2, [r3, #24]
 800cf78:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 800cf7c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800cf7e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800cf82:	4302      	orrs	r2, r0
 800cf84:	68e0      	ldr	r0, [r4, #12]
 800cf86:	6999      	ldr	r1, [r3, #24]
 800cf88:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800cf8a:	6920      	ldr	r0, [r4, #16]
 800cf8c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800cf8e:	430a      	orrs	r2, r1
 800cf90:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800cf92:	689a      	ldr	r2, [r3, #8]
 800cf94:	4924      	ldr	r1, [pc, #144]	@ (800d028 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800cf96:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800cf98:	400a      	ands	r2, r1
 800cf9a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800cf9c:	689a      	ldr	r2, [r3, #8]
 800cf9e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800cfa2:	69a0      	ldr	r0, [r4, #24]
 800cfa4:	4302      	orrs	r2, r0
 800cfa6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800cfa8:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800cfaa:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800cfac:	400a      	ands	r2, r1
 800cfae:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800cfb0:	68da      	ldr	r2, [r3, #12]
 800cfb2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800cfb6:	6a20      	ldr	r0, [r4, #32]
 800cfb8:	4302      	orrs	r2, r0
 800cfba:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800cfbc:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800cfbe:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800cfc0:	400a      	ands	r2, r1
 800cfc2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800cfc4:	691a      	ldr	r2, [r3, #16]
 800cfc6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800cfca:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800cfcc:	4302      	orrs	r2, r0
 800cfce:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800cfd0:	695a      	ldr	r2, [r3, #20]
 800cfd2:	400a      	ands	r2, r1
 800cfd4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800cfd6:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800cfd8:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800cfda:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800cfde:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800cfe0:	430a      	orrs	r2, r1
 800cfe2:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800cfe4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800cfe6:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800cfea:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800cfee:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 800cff2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800cff4:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 800cff6:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 800cffa:	432a      	orrs	r2, r5
 800cffc:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800d000:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800d004:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800d006:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d008:	f042 0206 	orr.w	r2, r2, #6
 800d00c:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800d00e:	699a      	ldr	r2, [r3, #24]
 800d010:	f042 0201 	orr.w	r2, r2, #1
 800d014:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d016:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800d018:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d01a:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800d01e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 800d022:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800d024:	2001      	movs	r0, #1
 800d026:	e7fc      	b.n	800d022 <HAL_LTDC_Init+0xce>
 800d028:	f000f800 	.word	0xf000f800

0800d02c <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 800d02c:	4770      	bx	lr

0800d02e <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 800d02e:	4770      	bx	lr

0800d030 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d030:	6803      	ldr	r3, [r0, #0]
{
 800d032:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d034:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800d036:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d038:	0772      	lsls	r2, r6, #29
{
 800d03a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d03c:	d514      	bpl.n	800d068 <HAL_LTDC_IRQHandler+0x38>
 800d03e:	0769      	lsls	r1, r5, #29
 800d040:	d512      	bpl.n	800d068 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800d042:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d044:	f022 0204 	bic.w	r2, r2, #4
 800d048:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800d04a:	2204      	movs	r2, #4
 800d04c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800d04e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 800d052:	f043 0301 	orr.w	r3, r3, #1
 800d056:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 800d05a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d05c:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800d060:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d064:	f7ff ffe2 	bl	800d02c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800d068:	07b2      	lsls	r2, r6, #30
 800d06a:	d516      	bpl.n	800d09a <HAL_LTDC_IRQHandler+0x6a>
 800d06c:	07ab      	lsls	r3, r5, #30
 800d06e:	d514      	bpl.n	800d09a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800d070:	6823      	ldr	r3, [r4, #0]
 800d072:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d074:	f022 0202 	bic.w	r2, r2, #2
 800d078:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800d07a:	2202      	movs	r2, #2
 800d07c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800d07e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 800d082:	4313      	orrs	r3, r2
 800d084:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d088:	2304      	movs	r3, #4
 800d08a:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800d08e:	2300      	movs	r3, #0
 800d090:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d094:	4620      	mov	r0, r4
 800d096:	f7ff ffc9 	bl	800d02c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800d09a:	07f0      	lsls	r0, r6, #31
 800d09c:	d510      	bpl.n	800d0c0 <HAL_LTDC_IRQHandler+0x90>
 800d09e:	07e9      	lsls	r1, r5, #31
 800d0a0:	d50e      	bpl.n	800d0c0 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d0a2:	6823      	ldr	r3, [r4, #0]
 800d0a4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d0a6:	f022 0201 	bic.w	r2, r2, #1
 800d0aa:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800d0ac:	2201      	movs	r2, #1
 800d0ae:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 800d0b0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d0b2:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800d0b6:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800d0ba:	4620      	mov	r0, r4
 800d0bc:	f7f4 faae 	bl	800161c <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800d0c0:	0732      	lsls	r2, r6, #28
 800d0c2:	d511      	bpl.n	800d0e8 <HAL_LTDC_IRQHandler+0xb8>
 800d0c4:	072b      	lsls	r3, r5, #28
 800d0c6:	d50f      	bpl.n	800d0e8 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d0c8:	6823      	ldr	r3, [r4, #0]
 800d0ca:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d0cc:	f022 0208 	bic.w	r2, r2, #8
 800d0d0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d0d2:	2208      	movs	r2, #8
 800d0d4:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800d0d6:	2301      	movs	r3, #1
 800d0d8:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800d0dc:	2300      	movs	r3, #0
 800d0de:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800d0e2:	4620      	mov	r0, r4
 800d0e4:	f7ff ffa3 	bl	800d02e <HAL_LTDC_ReloadEventCallback>
}
 800d0e8:	bd70      	pop	{r4, r5, r6, pc}

0800d0ea <HAL_LTDC_ConfigLayer>:
{
 800d0ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800d0ee:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 800d0f2:	2b01      	cmp	r3, #1
{
 800d0f4:	4606      	mov	r6, r0
 800d0f6:	460f      	mov	r7, r1
 800d0f8:	4694      	mov	ip, r2
 800d0fa:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800d0fe:	d01f      	beq.n	800d140 <HAL_LTDC_ConfigLayer+0x56>
 800d100:	f04f 0801 	mov.w	r8, #1
 800d104:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d108:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d10c:	2434      	movs	r4, #52	@ 0x34
 800d10e:	460d      	mov	r5, r1
 800d110:	fb04 6402 	mla	r4, r4, r2, r6
 800d114:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d116:	3438      	adds	r4, #56	@ 0x38
 800d118:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d11a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d11c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d11e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d120:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d122:	682b      	ldr	r3, [r5, #0]
 800d124:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800d126:	4630      	mov	r0, r6
 800d128:	4662      	mov	r2, ip
 800d12a:	4639      	mov	r1, r7
 800d12c:	f7ff fe96 	bl	800ce5c <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d130:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800d132:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d134:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800d138:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800d13c:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 800d140:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d144 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800d144:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 800d148:	2a01      	cmp	r2, #1
{
 800d14a:	4603      	mov	r3, r0
 800d14c:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800d150:	d012      	beq.n	800d178 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d152:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d154:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d158:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 800d15a:	f020 0001 	bic.w	r0, r0, #1
 800d15e:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800d160:	4806      	ldr	r0, [pc, #24]	@ (800d17c <HAL_LTDC_ProgramLineEvent+0x38>)
 800d162:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d164:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 800d166:	f041 0101 	orr.w	r1, r1, #1
 800d16a:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 800d16c:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800d16e:	2201      	movs	r2, #1
 800d170:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800d174:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 800d178:	4770      	bx	lr
 800d17a:	bf00      	nop
 800d17c:	40016800 	.word	0x40016800

0800d180 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800d180:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800d182:	2300      	movs	r3, #0
 800d184:	9301      	str	r3, [sp, #4]
 800d186:	4b18      	ldr	r3, [pc, #96]	@ (800d1e8 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800d188:	4d18      	ldr	r5, [pc, #96]	@ (800d1ec <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800d18a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800d18c:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800d190:	641a      	str	r2, [r3, #64]	@ 0x40
 800d192:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d194:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800d198:	9301      	str	r3, [sp, #4]
 800d19a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800d19c:	4b14      	ldr	r3, [pc, #80]	@ (800d1f0 <HAL_PWREx_EnableOverDrive+0x70>)
 800d19e:	2201      	movs	r2, #1
 800d1a0:	641a      	str	r2, [r3, #64]	@ 0x40
  tickstart = HAL_GetTick();
 800d1a2:	f7fe ff67 	bl	800c074 <HAL_GetTick>
 800d1a6:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800d1a8:	686b      	ldr	r3, [r5, #4]
 800d1aa:	03da      	lsls	r2, r3, #15
 800d1ac:	d50b      	bpl.n	800d1c6 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800d1ae:	4b10      	ldr	r3, [pc, #64]	@ (800d1f0 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800d1b0:	4d0e      	ldr	r5, [pc, #56]	@ (800d1ec <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800d1b2:	2201      	movs	r2, #1
 800d1b4:	645a      	str	r2, [r3, #68]	@ 0x44
  tickstart = HAL_GetTick();
 800d1b6:	f7fe ff5d 	bl	800c074 <HAL_GetTick>
 800d1ba:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800d1bc:	686b      	ldr	r3, [r5, #4]
 800d1be:	039b      	lsls	r3, r3, #14
 800d1c0:	d50a      	bpl.n	800d1d8 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800d1c2:	2000      	movs	r0, #0
 800d1c4:	e006      	b.n	800d1d4 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800d1c6:	f7fe ff55 	bl	800c074 <HAL_GetTick>
 800d1ca:	1b00      	subs	r0, r0, r4
 800d1cc:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800d1d0:	d9ea      	bls.n	800d1a8 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800d1d2:	2003      	movs	r0, #3
}
 800d1d4:	b003      	add	sp, #12
 800d1d6:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800d1d8:	f7fe ff4c 	bl	800c074 <HAL_GetTick>
 800d1dc:	1b00      	subs	r0, r0, r4
 800d1de:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
 800d1e2:	d9eb      	bls.n	800d1bc <HAL_PWREx_EnableOverDrive+0x3c>
 800d1e4:	e7f5      	b.n	800d1d2 <HAL_PWREx_EnableOverDrive+0x52>
 800d1e6:	bf00      	nop
 800d1e8:	40023800 	.word	0x40023800
 800d1ec:	40007000 	.word	0x40007000
 800d1f0:	420e0000 	.word	0x420e0000

0800d1f4 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800d1f4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800d1f8:	4604      	mov	r4, r0
 800d1fa:	b340      	cbz	r0, 800d24e <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800d1fc:	6803      	ldr	r3, [r0, #0]
 800d1fe:	07de      	lsls	r6, r3, #31
 800d200:	d410      	bmi.n	800d224 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800d202:	6823      	ldr	r3, [r4, #0]
 800d204:	079d      	lsls	r5, r3, #30
 800d206:	d45b      	bmi.n	800d2c0 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800d208:	6823      	ldr	r3, [r4, #0]
 800d20a:	0719      	lsls	r1, r3, #28
 800d20c:	f100 809d 	bmi.w	800d34a <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800d210:	6823      	ldr	r3, [r4, #0]
 800d212:	075a      	lsls	r2, r3, #29
 800d214:	f100 80bd 	bmi.w	800d392 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800d218:	69a3      	ldr	r3, [r4, #24]
 800d21a:	2b00      	cmp	r3, #0
 800d21c:	f040 8124 	bne.w	800d468 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800d220:	2000      	movs	r0, #0
 800d222:	e02c      	b.n	800d27e <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 800d224:	4b8d      	ldr	r3, [pc, #564]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
 800d226:	689a      	ldr	r2, [r3, #8]
 800d228:	f002 020c 	and.w	r2, r2, #12
 800d22c:	2a04      	cmp	r2, #4
 800d22e:	d007      	beq.n	800d240 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800d230:	689a      	ldr	r2, [r3, #8]
 800d232:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 800d236:	2a08      	cmp	r2, #8
 800d238:	d10b      	bne.n	800d252 <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800d23a:	685b      	ldr	r3, [r3, #4]
 800d23c:	0259      	lsls	r1, r3, #9
 800d23e:	d508      	bpl.n	800d252 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800d240:	4b86      	ldr	r3, [pc, #536]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
 800d242:	681b      	ldr	r3, [r3, #0]
 800d244:	039a      	lsls	r2, r3, #14
 800d246:	d5dc      	bpl.n	800d202 <HAL_RCC_OscConfig+0xe>
 800d248:	6863      	ldr	r3, [r4, #4]
 800d24a:	2b00      	cmp	r3, #0
 800d24c:	d1d9      	bne.n	800d202 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 800d24e:	2001      	movs	r0, #1
 800d250:	e015      	b.n	800d27e <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800d252:	6863      	ldr	r3, [r4, #4]
 800d254:	4d81      	ldr	r5, [pc, #516]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
 800d256:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800d25a:	d113      	bne.n	800d284 <HAL_RCC_OscConfig+0x90>
 800d25c:	682b      	ldr	r3, [r5, #0]
 800d25e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800d262:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800d264:	f7fe ff06 	bl	800c074 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800d268:	4e7c      	ldr	r6, [pc, #496]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800d26a:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800d26c:	6833      	ldr	r3, [r6, #0]
 800d26e:	039b      	lsls	r3, r3, #14
 800d270:	d4c7      	bmi.n	800d202 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800d272:	f7fe feff 	bl	800c074 <HAL_GetTick>
 800d276:	1b40      	subs	r0, r0, r5
 800d278:	2864      	cmp	r0, #100	@ 0x64
 800d27a:	d9f7      	bls.n	800d26c <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 800d27c:	2003      	movs	r0, #3
}
 800d27e:	b002      	add	sp, #8
 800d280:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800d284:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800d288:	d104      	bne.n	800d294 <HAL_RCC_OscConfig+0xa0>
 800d28a:	682b      	ldr	r3, [r5, #0]
 800d28c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800d290:	602b      	str	r3, [r5, #0]
 800d292:	e7e3      	b.n	800d25c <HAL_RCC_OscConfig+0x68>
 800d294:	682a      	ldr	r2, [r5, #0]
 800d296:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800d29a:	602a      	str	r2, [r5, #0]
 800d29c:	682a      	ldr	r2, [r5, #0]
 800d29e:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800d2a2:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800d2a4:	2b00      	cmp	r3, #0
 800d2a6:	d1dd      	bne.n	800d264 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 800d2a8:	f7fe fee4 	bl	800c074 <HAL_GetTick>
 800d2ac:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800d2ae:	682b      	ldr	r3, [r5, #0]
 800d2b0:	039f      	lsls	r7, r3, #14
 800d2b2:	d5a6      	bpl.n	800d202 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800d2b4:	f7fe fede 	bl	800c074 <HAL_GetTick>
 800d2b8:	1b80      	subs	r0, r0, r6
 800d2ba:	2864      	cmp	r0, #100	@ 0x64
 800d2bc:	d9f7      	bls.n	800d2ae <HAL_RCC_OscConfig+0xba>
 800d2be:	e7dd      	b.n	800d27c <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800d2c0:	4b66      	ldr	r3, [pc, #408]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
 800d2c2:	689a      	ldr	r2, [r3, #8]
 800d2c4:	f012 0f0c 	tst.w	r2, #12
 800d2c8:	d007      	beq.n	800d2da <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800d2ca:	689a      	ldr	r2, [r3, #8]
 800d2cc:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 800d2d0:	2a08      	cmp	r2, #8
 800d2d2:	d111      	bne.n	800d2f8 <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800d2d4:	685b      	ldr	r3, [r3, #4]
 800d2d6:	025d      	lsls	r5, r3, #9
 800d2d8:	d40e      	bmi.n	800d2f8 <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800d2da:	4a60      	ldr	r2, [pc, #384]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
 800d2dc:	6813      	ldr	r3, [r2, #0]
 800d2de:	0799      	lsls	r1, r3, #30
 800d2e0:	d502      	bpl.n	800d2e8 <HAL_RCC_OscConfig+0xf4>
 800d2e2:	68e3      	ldr	r3, [r4, #12]
 800d2e4:	2b01      	cmp	r3, #1
 800d2e6:	d1b2      	bne.n	800d24e <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800d2e8:	6813      	ldr	r3, [r2, #0]
 800d2ea:	6921      	ldr	r1, [r4, #16]
 800d2ec:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800d2f0:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800d2f4:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800d2f6:	e787      	b.n	800d208 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 800d2f8:	68e2      	ldr	r2, [r4, #12]
 800d2fa:	4b59      	ldr	r3, [pc, #356]	@ (800d460 <HAL_RCC_OscConfig+0x26c>)
 800d2fc:	b1b2      	cbz	r2, 800d32c <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 800d2fe:	2201      	movs	r2, #1
 800d300:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800d302:	f7fe feb7 	bl	800c074 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d306:	4d55      	ldr	r5, [pc, #340]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800d308:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d30a:	682b      	ldr	r3, [r5, #0]
 800d30c:	079b      	lsls	r3, r3, #30
 800d30e:	d507      	bpl.n	800d320 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800d310:	682b      	ldr	r3, [r5, #0]
 800d312:	6922      	ldr	r2, [r4, #16]
 800d314:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800d318:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800d31c:	602b      	str	r3, [r5, #0]
 800d31e:	e773      	b.n	800d208 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800d320:	f7fe fea8 	bl	800c074 <HAL_GetTick>
 800d324:	1b80      	subs	r0, r0, r6
 800d326:	2802      	cmp	r0, #2
 800d328:	d9ef      	bls.n	800d30a <HAL_RCC_OscConfig+0x116>
 800d32a:	e7a7      	b.n	800d27c <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 800d32c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800d32e:	f7fe fea1 	bl	800c074 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800d332:	4e4a      	ldr	r6, [pc, #296]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800d334:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800d336:	6833      	ldr	r3, [r6, #0]
 800d338:	079f      	lsls	r7, r3, #30
 800d33a:	f57f af65 	bpl.w	800d208 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800d33e:	f7fe fe99 	bl	800c074 <HAL_GetTick>
 800d342:	1b40      	subs	r0, r0, r5
 800d344:	2802      	cmp	r0, #2
 800d346:	d9f6      	bls.n	800d336 <HAL_RCC_OscConfig+0x142>
 800d348:	e798      	b.n	800d27c <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 800d34a:	6962      	ldr	r2, [r4, #20]
 800d34c:	4b44      	ldr	r3, [pc, #272]	@ (800d460 <HAL_RCC_OscConfig+0x26c>)
 800d34e:	b182      	cbz	r2, 800d372 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 800d350:	2201      	movs	r2, #1
 800d352:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800d356:	f7fe fe8d 	bl	800c074 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800d35a:	4e40      	ldr	r6, [pc, #256]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800d35c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800d35e:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 800d360:	079b      	lsls	r3, r3, #30
 800d362:	f53f af55 	bmi.w	800d210 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800d366:	f7fe fe85 	bl	800c074 <HAL_GetTick>
 800d36a:	1b40      	subs	r0, r0, r5
 800d36c:	2802      	cmp	r0, #2
 800d36e:	d9f6      	bls.n	800d35e <HAL_RCC_OscConfig+0x16a>
 800d370:	e784      	b.n	800d27c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 800d372:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 800d376:	f7fe fe7d 	bl	800c074 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800d37a:	4e38      	ldr	r6, [pc, #224]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800d37c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800d37e:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 800d380:	079f      	lsls	r7, r3, #30
 800d382:	f57f af45 	bpl.w	800d210 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800d386:	f7fe fe75 	bl	800c074 <HAL_GetTick>
 800d38a:	1b40      	subs	r0, r0, r5
 800d38c:	2802      	cmp	r0, #2
 800d38e:	d9f6      	bls.n	800d37e <HAL_RCC_OscConfig+0x18a>
 800d390:	e774      	b.n	800d27c <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800d392:	4b32      	ldr	r3, [pc, #200]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
 800d394:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800d396:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 800d39a:	d128      	bne.n	800d3ee <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 800d39c:	9201      	str	r2, [sp, #4]
 800d39e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800d3a0:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800d3a4:	641a      	str	r2, [r3, #64]	@ 0x40
 800d3a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d3a8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800d3ac:	9301      	str	r3, [sp, #4]
 800d3ae:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800d3b0:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800d3b2:	4d2c      	ldr	r5, [pc, #176]	@ (800d464 <HAL_RCC_OscConfig+0x270>)
 800d3b4:	682b      	ldr	r3, [r5, #0]
 800d3b6:	05d8      	lsls	r0, r3, #23
 800d3b8:	d51b      	bpl.n	800d3f2 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800d3ba:	68a3      	ldr	r3, [r4, #8]
 800d3bc:	4d27      	ldr	r5, [pc, #156]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
 800d3be:	2b01      	cmp	r3, #1
 800d3c0:	d127      	bne.n	800d412 <HAL_RCC_OscConfig+0x21e>
 800d3c2:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800d3c4:	f043 0301 	orr.w	r3, r3, #1
 800d3c8:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 800d3ca:	f7fe fe53 	bl	800c074 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800d3ce:	4e23      	ldr	r6, [pc, #140]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800d3d0:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800d3d2:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800d3d6:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 800d3d8:	079a      	lsls	r2, r3, #30
 800d3da:	d539      	bpl.n	800d450 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 800d3dc:	2f00      	cmp	r7, #0
 800d3de:	f43f af1b 	beq.w	800d218 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800d3e2:	4a1e      	ldr	r2, [pc, #120]	@ (800d45c <HAL_RCC_OscConfig+0x268>)
 800d3e4:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 800d3e6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800d3ea:	6413      	str	r3, [r2, #64]	@ 0x40
 800d3ec:	e714      	b.n	800d218 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800d3ee:	2700      	movs	r7, #0
 800d3f0:	e7df      	b.n	800d3b2 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800d3f2:	682b      	ldr	r3, [r5, #0]
 800d3f4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800d3f8:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800d3fa:	f7fe fe3b 	bl	800c074 <HAL_GetTick>
 800d3fe:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800d400:	682b      	ldr	r3, [r5, #0]
 800d402:	05d9      	lsls	r1, r3, #23
 800d404:	d4d9      	bmi.n	800d3ba <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800d406:	f7fe fe35 	bl	800c074 <HAL_GetTick>
 800d40a:	1b80      	subs	r0, r0, r6
 800d40c:	2802      	cmp	r0, #2
 800d40e:	d9f7      	bls.n	800d400 <HAL_RCC_OscConfig+0x20c>
 800d410:	e734      	b.n	800d27c <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800d412:	2b05      	cmp	r3, #5
 800d414:	d104      	bne.n	800d420 <HAL_RCC_OscConfig+0x22c>
 800d416:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800d418:	f043 0304 	orr.w	r3, r3, #4
 800d41c:	672b      	str	r3, [r5, #112]	@ 0x70
 800d41e:	e7d0      	b.n	800d3c2 <HAL_RCC_OscConfig+0x1ce>
 800d420:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800d422:	f022 0201 	bic.w	r2, r2, #1
 800d426:	672a      	str	r2, [r5, #112]	@ 0x70
 800d428:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800d42a:	f022 0204 	bic.w	r2, r2, #4
 800d42e:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800d430:	2b00      	cmp	r3, #0
 800d432:	d1ca      	bne.n	800d3ca <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 800d434:	f7fe fe1e 	bl	800c074 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800d438:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 800d43c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800d43e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800d440:	079b      	lsls	r3, r3, #30
 800d442:	d5cb      	bpl.n	800d3dc <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800d444:	f7fe fe16 	bl	800c074 <HAL_GetTick>
 800d448:	1b80      	subs	r0, r0, r6
 800d44a:	4540      	cmp	r0, r8
 800d44c:	d9f7      	bls.n	800d43e <HAL_RCC_OscConfig+0x24a>
 800d44e:	e715      	b.n	800d27c <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800d450:	f7fe fe10 	bl	800c074 <HAL_GetTick>
 800d454:	1b40      	subs	r0, r0, r5
 800d456:	4540      	cmp	r0, r8
 800d458:	d9bd      	bls.n	800d3d6 <HAL_RCC_OscConfig+0x1e2>
 800d45a:	e70f      	b.n	800d27c <HAL_RCC_OscConfig+0x88>
 800d45c:	40023800 	.word	0x40023800
 800d460:	42470000 	.word	0x42470000
 800d464:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800d468:	4d37      	ldr	r5, [pc, #220]	@ (800d548 <HAL_RCC_OscConfig+0x354>)
 800d46a:	68aa      	ldr	r2, [r5, #8]
 800d46c:	f002 020c 	and.w	r2, r2, #12
 800d470:	2a08      	cmp	r2, #8
 800d472:	d03e      	beq.n	800d4f2 <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800d474:	2b02      	cmp	r3, #2
 800d476:	4b35      	ldr	r3, [pc, #212]	@ (800d54c <HAL_RCC_OscConfig+0x358>)
 800d478:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 800d47c:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800d47e:	d12b      	bne.n	800d4d8 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 800d480:	f7fe fdf8 	bl	800c074 <HAL_GetTick>
 800d484:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800d486:	682b      	ldr	r3, [r5, #0]
 800d488:	0199      	lsls	r1, r3, #6
 800d48a:	d41f      	bmi.n	800d4cc <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800d48c:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800d490:	4313      	orrs	r3, r2
 800d492:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 800d494:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800d498:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800d49a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d49e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800d4a0:	0852      	lsrs	r2, r2, #1
 800d4a2:	3a01      	subs	r2, #1
 800d4a4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800d4a8:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800d4aa:	4b28      	ldr	r3, [pc, #160]	@ (800d54c <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d4ac:	4d26      	ldr	r5, [pc, #152]	@ (800d548 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 800d4ae:	2201      	movs	r2, #1
 800d4b0:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 800d4b2:	f7fe fddf 	bl	800c074 <HAL_GetTick>
 800d4b6:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d4b8:	682b      	ldr	r3, [r5, #0]
 800d4ba:	019a      	lsls	r2, r3, #6
 800d4bc:	f53f aeb0 	bmi.w	800d220 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800d4c0:	f7fe fdd8 	bl	800c074 <HAL_GetTick>
 800d4c4:	1b00      	subs	r0, r0, r4
 800d4c6:	2802      	cmp	r0, #2
 800d4c8:	d9f6      	bls.n	800d4b8 <HAL_RCC_OscConfig+0x2c4>
 800d4ca:	e6d7      	b.n	800d27c <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800d4cc:	f7fe fdd2 	bl	800c074 <HAL_GetTick>
 800d4d0:	1b80      	subs	r0, r0, r6
 800d4d2:	2802      	cmp	r0, #2
 800d4d4:	d9d7      	bls.n	800d486 <HAL_RCC_OscConfig+0x292>
 800d4d6:	e6d1      	b.n	800d27c <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 800d4d8:	f7fe fdcc 	bl	800c074 <HAL_GetTick>
 800d4dc:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800d4de:	682b      	ldr	r3, [r5, #0]
 800d4e0:	019b      	lsls	r3, r3, #6
 800d4e2:	f57f ae9d 	bpl.w	800d220 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800d4e6:	f7fe fdc5 	bl	800c074 <HAL_GetTick>
 800d4ea:	1b00      	subs	r0, r0, r4
 800d4ec:	2802      	cmp	r0, #2
 800d4ee:	d9f6      	bls.n	800d4de <HAL_RCC_OscConfig+0x2ea>
 800d4f0:	e6c4      	b.n	800d27c <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800d4f2:	2b01      	cmp	r3, #1
 800d4f4:	f43f aeab 	beq.w	800d24e <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 800d4f8:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800d4fa:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800d4fc:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800d500:	4291      	cmp	r1, r2
 800d502:	f47f aea4 	bne.w	800d24e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800d506:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800d508:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800d50c:	428a      	cmp	r2, r1
 800d50e:	f47f ae9e 	bne.w	800d24e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800d512:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800d514:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 800d518:	401a      	ands	r2, r3
 800d51a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800d51e:	f47f ae96 	bne.w	800d24e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800d522:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800d524:	0852      	lsrs	r2, r2, #1
 800d526:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 800d52a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800d52c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800d530:	f47f ae8d 	bne.w	800d24e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800d534:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800d536:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800d53a:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 800d53e:	bf14      	ite	ne
 800d540:	2001      	movne	r0, #1
 800d542:	2000      	moveq	r0, #0
 800d544:	e69b      	b.n	800d27e <HAL_RCC_OscConfig+0x8a>
 800d546:	bf00      	nop
 800d548:	40023800 	.word	0x40023800
 800d54c:	42470000 	.word	0x42470000

0800d550 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800d550:	4913      	ldr	r1, [pc, #76]	@ (800d5a0 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800d552:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800d554:	688b      	ldr	r3, [r1, #8]
 800d556:	f003 030c 	and.w	r3, r3, #12
 800d55a:	2b04      	cmp	r3, #4
 800d55c:	d01c      	beq.n	800d598 <HAL_RCC_GetSysClockFreq+0x48>
 800d55e:	2b08      	cmp	r3, #8
 800d560:	d11c      	bne.n	800d59c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800d562:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800d564:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d566:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800d568:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d56c:	bf14      	ite	ne
 800d56e:	480d      	ldrne	r0, [pc, #52]	@ (800d5a4 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d570:	480d      	ldreq	r0, [pc, #52]	@ (800d5a8 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d572:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800d576:	bf18      	it	ne
 800d578:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800d57a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800d57e:	fba1 0100 	umull	r0, r1, r1, r0
 800d582:	f7f2 fed5 	bl	8000330 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 800d586:	4b06      	ldr	r3, [pc, #24]	@ (800d5a0 <HAL_RCC_GetSysClockFreq+0x50>)
 800d588:	685b      	ldr	r3, [r3, #4]
 800d58a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800d58e:	3301      	adds	r3, #1
 800d590:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 800d592:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800d596:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800d598:	4802      	ldr	r0, [pc, #8]	@ (800d5a4 <HAL_RCC_GetSysClockFreq+0x54>)
 800d59a:	e7fc      	b.n	800d596 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800d59c:	4802      	ldr	r0, [pc, #8]	@ (800d5a8 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800d59e:	e7fa      	b.n	800d596 <HAL_RCC_GetSysClockFreq+0x46>
 800d5a0:	40023800 	.word	0x40023800
 800d5a4:	007a1200 	.word	0x007a1200
 800d5a8:	00f42400 	.word	0x00f42400

0800d5ac <HAL_RCC_ClockConfig>:
{
 800d5ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d5b0:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 800d5b2:	4604      	mov	r4, r0
 800d5b4:	b910      	cbnz	r0, 800d5bc <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800d5b6:	2001      	movs	r0, #1
}
 800d5b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800d5bc:	4b43      	ldr	r3, [pc, #268]	@ (800d6cc <HAL_RCC_ClockConfig+0x120>)
 800d5be:	681a      	ldr	r2, [r3, #0]
 800d5c0:	f002 020f 	and.w	r2, r2, #15
 800d5c4:	428a      	cmp	r2, r1
 800d5c6:	d328      	bcc.n	800d61a <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800d5c8:	6821      	ldr	r1, [r4, #0]
 800d5ca:	078f      	lsls	r7, r1, #30
 800d5cc:	d42d      	bmi.n	800d62a <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800d5ce:	07c8      	lsls	r0, r1, #31
 800d5d0:	d440      	bmi.n	800d654 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800d5d2:	4b3e      	ldr	r3, [pc, #248]	@ (800d6cc <HAL_RCC_ClockConfig+0x120>)
 800d5d4:	681a      	ldr	r2, [r3, #0]
 800d5d6:	f002 020f 	and.w	r2, r2, #15
 800d5da:	42aa      	cmp	r2, r5
 800d5dc:	d865      	bhi.n	800d6aa <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800d5de:	6822      	ldr	r2, [r4, #0]
 800d5e0:	0751      	lsls	r1, r2, #29
 800d5e2:	d46b      	bmi.n	800d6bc <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800d5e4:	0713      	lsls	r3, r2, #28
 800d5e6:	d507      	bpl.n	800d5f8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800d5e8:	4a39      	ldr	r2, [pc, #228]	@ (800d6d0 <HAL_RCC_ClockConfig+0x124>)
 800d5ea:	6921      	ldr	r1, [r4, #16]
 800d5ec:	6893      	ldr	r3, [r2, #8]
 800d5ee:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 800d5f2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800d5f6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800d5f8:	f7ff ffaa 	bl	800d550 <HAL_RCC_GetSysClockFreq>
 800d5fc:	4b34      	ldr	r3, [pc, #208]	@ (800d6d0 <HAL_RCC_ClockConfig+0x124>)
 800d5fe:	4a35      	ldr	r2, [pc, #212]	@ (800d6d4 <HAL_RCC_ClockConfig+0x128>)
 800d600:	689b      	ldr	r3, [r3, #8]
 800d602:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800d606:	5cd3      	ldrb	r3, [r2, r3]
 800d608:	40d8      	lsrs	r0, r3
 800d60a:	4b33      	ldr	r3, [pc, #204]	@ (800d6d8 <HAL_RCC_ClockConfig+0x12c>)
 800d60c:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 800d60e:	4b33      	ldr	r3, [pc, #204]	@ (800d6dc <HAL_RCC_ClockConfig+0x130>)
 800d610:	6818      	ldr	r0, [r3, #0]
 800d612:	f7f4 fdb9 	bl	8002188 <HAL_InitTick>
  return HAL_OK;
 800d616:	2000      	movs	r0, #0
 800d618:	e7ce      	b.n	800d5b8 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800d61a:	b2ca      	uxtb	r2, r1
 800d61c:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800d61e:	681b      	ldr	r3, [r3, #0]
 800d620:	f003 030f 	and.w	r3, r3, #15
 800d624:	428b      	cmp	r3, r1
 800d626:	d1c6      	bne.n	800d5b6 <HAL_RCC_ClockConfig+0xa>
 800d628:	e7ce      	b.n	800d5c8 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800d62a:	4b29      	ldr	r3, [pc, #164]	@ (800d6d0 <HAL_RCC_ClockConfig+0x124>)
 800d62c:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800d630:	bf1e      	ittt	ne
 800d632:	689a      	ldrne	r2, [r3, #8]
 800d634:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 800d638:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800d63a:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800d63c:	bf42      	ittt	mi
 800d63e:	689a      	ldrmi	r2, [r3, #8]
 800d640:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 800d644:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800d646:	689a      	ldr	r2, [r3, #8]
 800d648:	68a0      	ldr	r0, [r4, #8]
 800d64a:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 800d64e:	4302      	orrs	r2, r0
 800d650:	609a      	str	r2, [r3, #8]
 800d652:	e7bc      	b.n	800d5ce <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800d654:	6862      	ldr	r2, [r4, #4]
 800d656:	4b1e      	ldr	r3, [pc, #120]	@ (800d6d0 <HAL_RCC_ClockConfig+0x124>)
 800d658:	2a01      	cmp	r2, #1
 800d65a:	d11c      	bne.n	800d696 <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800d65c:	681b      	ldr	r3, [r3, #0]
 800d65e:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d662:	d0a8      	beq.n	800d5b6 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800d664:	4e1a      	ldr	r6, [pc, #104]	@ (800d6d0 <HAL_RCC_ClockConfig+0x124>)
 800d666:	68b3      	ldr	r3, [r6, #8]
 800d668:	f023 0303 	bic.w	r3, r3, #3
 800d66c:	4313      	orrs	r3, r2
 800d66e:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800d670:	f7fe fd00 	bl	800c074 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800d674:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 800d678:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800d67a:	68b3      	ldr	r3, [r6, #8]
 800d67c:	6862      	ldr	r2, [r4, #4]
 800d67e:	f003 030c 	and.w	r3, r3, #12
 800d682:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800d686:	d0a4      	beq.n	800d5d2 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800d688:	f7fe fcf4 	bl	800c074 <HAL_GetTick>
 800d68c:	1bc0      	subs	r0, r0, r7
 800d68e:	4540      	cmp	r0, r8
 800d690:	d9f3      	bls.n	800d67a <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 800d692:	2003      	movs	r0, #3
 800d694:	e790      	b.n	800d5b8 <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800d696:	1e91      	subs	r1, r2, #2
 800d698:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d69a:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800d69c:	d802      	bhi.n	800d6a4 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800d69e:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 800d6a2:	e7de      	b.n	800d662 <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d6a4:	f013 0f02 	tst.w	r3, #2
 800d6a8:	e7db      	b.n	800d662 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800d6aa:	b2ea      	uxtb	r2, r5
 800d6ac:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800d6ae:	681b      	ldr	r3, [r3, #0]
 800d6b0:	f003 030f 	and.w	r3, r3, #15
 800d6b4:	42ab      	cmp	r3, r5
 800d6b6:	f47f af7e 	bne.w	800d5b6 <HAL_RCC_ClockConfig+0xa>
 800d6ba:	e790      	b.n	800d5de <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800d6bc:	4904      	ldr	r1, [pc, #16]	@ (800d6d0 <HAL_RCC_ClockConfig+0x124>)
 800d6be:	68e0      	ldr	r0, [r4, #12]
 800d6c0:	688b      	ldr	r3, [r1, #8]
 800d6c2:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 800d6c6:	4303      	orrs	r3, r0
 800d6c8:	608b      	str	r3, [r1, #8]
 800d6ca:	e78b      	b.n	800d5e4 <HAL_RCC_ClockConfig+0x38>
 800d6cc:	40023c00 	.word	0x40023c00
 800d6d0:	40023800 	.word	0x40023800
 800d6d4:	0802e110 	.word	0x0802e110
 800d6d8:	20000090 	.word	0x20000090
 800d6dc:	20000098 	.word	0x20000098

0800d6e0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 800d6e0:	4b04      	ldr	r3, [pc, #16]	@ (800d6f4 <HAL_RCC_GetPCLK1Freq+0x14>)
 800d6e2:	4a05      	ldr	r2, [pc, #20]	@ (800d6f8 <HAL_RCC_GetPCLK1Freq+0x18>)
 800d6e4:	689b      	ldr	r3, [r3, #8]
 800d6e6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800d6ea:	5cd3      	ldrb	r3, [r2, r3]
 800d6ec:	4a03      	ldr	r2, [pc, #12]	@ (800d6fc <HAL_RCC_GetPCLK1Freq+0x1c>)
 800d6ee:	6810      	ldr	r0, [r2, #0]
}
 800d6f0:	40d8      	lsrs	r0, r3
 800d6f2:	4770      	bx	lr
 800d6f4:	40023800 	.word	0x40023800
 800d6f8:	0802e108 	.word	0x0802e108
 800d6fc:	20000090 	.word	0x20000090

0800d700 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800d700:	230f      	movs	r3, #15
 800d702:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800d704:	4b0b      	ldr	r3, [pc, #44]	@ (800d734 <HAL_RCC_GetClockConfig+0x34>)
 800d706:	689a      	ldr	r2, [r3, #8]
 800d708:	f002 0203 	and.w	r2, r2, #3
 800d70c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800d70e:	689a      	ldr	r2, [r3, #8]
 800d710:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 800d714:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800d716:	689a      	ldr	r2, [r3, #8]
 800d718:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 800d71c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800d71e:	689b      	ldr	r3, [r3, #8]
 800d720:	08db      	lsrs	r3, r3, #3
 800d722:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 800d726:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800d728:	4b03      	ldr	r3, [pc, #12]	@ (800d738 <HAL_RCC_GetClockConfig+0x38>)
 800d72a:	681b      	ldr	r3, [r3, #0]
 800d72c:	f003 030f 	and.w	r3, r3, #15
 800d730:	600b      	str	r3, [r1, #0]
}
 800d732:	4770      	bx	lr
 800d734:	40023800 	.word	0x40023800
 800d738:	40023c00 	.word	0x40023c00

0800d73c <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800d73c:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800d73e:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 800d742:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d744:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800d746:	f040 8088 	bne.w	800d85a <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800d74a:	6823      	ldr	r3, [r4, #0]
 800d74c:	f013 0f0c 	tst.w	r3, #12
 800d750:	d045      	beq.n	800d7de <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800d752:	4b8c      	ldr	r3, [pc, #560]	@ (800d984 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800d754:	4d8c      	ldr	r5, [pc, #560]	@ (800d988 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 800d756:	2200      	movs	r2, #0
 800d758:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800d75a:	f7fe fc8b 	bl	800c074 <HAL_GetTick>
 800d75e:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800d760:	682b      	ldr	r3, [r5, #0]
 800d762:	0099      	lsls	r1, r3, #2
 800d764:	f100 80cb 	bmi.w	800d8fe <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800d768:	6821      	ldr	r1, [r4, #0]
 800d76a:	074a      	lsls	r2, r1, #29
 800d76c:	d515      	bpl.n	800d79a <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800d76e:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800d772:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800d776:	061b      	lsls	r3, r3, #24
 800d778:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 800d77c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800d780:	4313      	orrs	r3, r2
 800d782:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800d786:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 800d78a:	6a22      	ldr	r2, [r4, #32]
 800d78c:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 800d790:	3a01      	subs	r2, #1
 800d792:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800d796:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800d79a:	070b      	lsls	r3, r1, #28
 800d79c:	d514      	bpl.n	800d7c8 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800d79e:	4a7a      	ldr	r2, [pc, #488]	@ (800d988 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800d7a0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800d7a2:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800d7a6:	6920      	ldr	r0, [r4, #16]
 800d7a8:	071b      	lsls	r3, r3, #28
 800d7aa:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 800d7ae:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800d7b2:	430b      	orrs	r3, r1
 800d7b4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800d7b8:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 800d7bc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800d7be:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800d7c2:	430b      	orrs	r3, r1
 800d7c4:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800d7c8:	4b6e      	ldr	r3, [pc, #440]	@ (800d984 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800d7ca:	4e6f      	ldr	r6, [pc, #444]	@ (800d988 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 800d7cc:	2201      	movs	r2, #1
 800d7ce:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 800d7d0:	f7fe fc50 	bl	800c074 <HAL_GetTick>
 800d7d4:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800d7d6:	6833      	ldr	r3, [r6, #0]
 800d7d8:	009f      	lsls	r7, r3, #2
 800d7da:	f140 8097 	bpl.w	800d90c <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800d7de:	6823      	ldr	r3, [r4, #0]
 800d7e0:	0698      	lsls	r0, r3, #26
 800d7e2:	d534      	bpl.n	800d84e <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800d7e4:	2300      	movs	r3, #0
 800d7e6:	9301      	str	r3, [sp, #4]
 800d7e8:	4b67      	ldr	r3, [pc, #412]	@ (800d988 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800d7ea:	4d68      	ldr	r5, [pc, #416]	@ (800d98c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800d7ec:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800d7ee:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 800d7f2:	641a      	str	r2, [r3, #64]	@ 0x40
 800d7f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d7f6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800d7fa:	9301      	str	r3, [sp, #4]
 800d7fc:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800d7fe:	682b      	ldr	r3, [r5, #0]
 800d800:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800d804:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800d806:	f7fe fc35 	bl	800c074 <HAL_GetTick>
 800d80a:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 800d80c:	682b      	ldr	r3, [r5, #0]
 800d80e:	05d8      	lsls	r0, r3, #23
 800d810:	f140 8083 	bpl.w	800d91a <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800d814:	4d5c      	ldr	r5, [pc, #368]	@ (800d988 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800d816:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800d818:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800d81a:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 800d81e:	f040 8083 	bne.w	800d928 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800d822:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800d824:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 800d828:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 800d82c:	4a56      	ldr	r2, [pc, #344]	@ (800d988 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800d82e:	f040 809e 	bne.w	800d96e <HAL_RCCEx_PeriphCLKConfig+0x232>
 800d832:	6891      	ldr	r1, [r2, #8]
 800d834:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 800d838:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 800d83c:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 800d840:	4301      	orrs	r1, r0
 800d842:	6091      	str	r1, [r2, #8]
 800d844:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 800d846:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d84a:	430b      	orrs	r3, r1
 800d84c:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800d84e:	6823      	ldr	r3, [r4, #0]
 800d850:	06db      	lsls	r3, r3, #27
 800d852:	f100 8090 	bmi.w	800d976 <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 800d856:	2000      	movs	r0, #0
 800d858:	e04f      	b.n	800d8fa <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 800d85a:	4b4a      	ldr	r3, [pc, #296]	@ (800d984 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800d85c:	4e4a      	ldr	r6, [pc, #296]	@ (800d988 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 800d85e:	2200      	movs	r2, #0
 800d860:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800d862:	f7fe fc07 	bl	800c074 <HAL_GetTick>
 800d866:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800d868:	6833      	ldr	r3, [r6, #0]
 800d86a:	011f      	lsls	r7, r3, #4
 800d86c:	d43f      	bmi.n	800d8ee <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800d86e:	6821      	ldr	r1, [r4, #0]
 800d870:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 800d872:	bf41      	itttt	mi
 800d874:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800d878:	071b      	lslmi	r3, r3, #28
 800d87a:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800d87e:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800d882:	078a      	lsls	r2, r1, #30
 800d884:	d515      	bpl.n	800d8b2 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800d886:	4a40      	ldr	r2, [pc, #256]	@ (800d988 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800d888:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800d88a:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800d88e:	6865      	ldr	r5, [r4, #4]
 800d890:	061b      	lsls	r3, r3, #24
 800d892:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 800d896:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800d89a:	4303      	orrs	r3, r0
 800d89c:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800d8a0:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 800d8a4:	69e3      	ldr	r3, [r4, #28]
 800d8a6:	f020 001f 	bic.w	r0, r0, #31
 800d8aa:	3b01      	subs	r3, #1
 800d8ac:	4303      	orrs	r3, r0
 800d8ae:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800d8b2:	064b      	lsls	r3, r1, #25
 800d8b4:	d50a      	bpl.n	800d8cc <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 800d8b6:	68e3      	ldr	r3, [r4, #12]
 800d8b8:	6862      	ldr	r2, [r4, #4]
 800d8ba:	061b      	lsls	r3, r3, #24
 800d8bc:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800d8c0:	68a2      	ldr	r2, [r4, #8]
 800d8c2:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800d8c6:	4a30      	ldr	r2, [pc, #192]	@ (800d988 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800d8c8:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800d8cc:	4b2d      	ldr	r3, [pc, #180]	@ (800d984 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800d8ce:	4e2e      	ldr	r6, [pc, #184]	@ (800d988 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 800d8d0:	2201      	movs	r2, #1
 800d8d2:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800d8d4:	f7fe fbce 	bl	800c074 <HAL_GetTick>
 800d8d8:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800d8da:	6833      	ldr	r3, [r6, #0]
 800d8dc:	011f      	lsls	r7, r3, #4
 800d8de:	f53f af34 	bmi.w	800d74a <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800d8e2:	f7fe fbc7 	bl	800c074 <HAL_GetTick>
 800d8e6:	1b40      	subs	r0, r0, r5
 800d8e8:	2802      	cmp	r0, #2
 800d8ea:	d9f6      	bls.n	800d8da <HAL_RCCEx_PeriphCLKConfig+0x19e>
 800d8ec:	e004      	b.n	800d8f8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800d8ee:	f7fe fbc1 	bl	800c074 <HAL_GetTick>
 800d8f2:	1b40      	subs	r0, r0, r5
 800d8f4:	2802      	cmp	r0, #2
 800d8f6:	d9b7      	bls.n	800d868 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 800d8f8:	2003      	movs	r0, #3
}
 800d8fa:	b003      	add	sp, #12
 800d8fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800d8fe:	f7fe fbb9 	bl	800c074 <HAL_GetTick>
 800d902:	1b80      	subs	r0, r0, r6
 800d904:	2802      	cmp	r0, #2
 800d906:	f67f af2b 	bls.w	800d760 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800d90a:	e7f5      	b.n	800d8f8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800d90c:	f7fe fbb2 	bl	800c074 <HAL_GetTick>
 800d910:	1b40      	subs	r0, r0, r5
 800d912:	2802      	cmp	r0, #2
 800d914:	f67f af5f 	bls.w	800d7d6 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800d918:	e7ee      	b.n	800d8f8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800d91a:	f7fe fbab 	bl	800c074 <HAL_GetTick>
 800d91e:	1b80      	subs	r0, r0, r6
 800d920:	2802      	cmp	r0, #2
 800d922:	f67f af73 	bls.w	800d80c <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800d926:	e7e7      	b.n	800d8f8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800d928:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 800d92c:	4293      	cmp	r3, r2
 800d92e:	f43f af78 	beq.w	800d822 <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800d932:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800d934:	4a13      	ldr	r2, [pc, #76]	@ (800d984 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800d936:	2101      	movs	r1, #1
 800d938:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800d93c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800d940:	2100      	movs	r1, #0
 800d942:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 800d946:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800d948:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800d94a:	07d9      	lsls	r1, r3, #31
 800d94c:	f57f af69 	bpl.w	800d822 <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 800d950:	f7fe fb90 	bl	800c074 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800d954:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 800d958:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800d95a:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 800d95c:	079a      	lsls	r2, r3, #30
 800d95e:	f53f af60 	bmi.w	800d822 <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800d962:	f7fe fb87 	bl	800c074 <HAL_GetTick>
 800d966:	1b80      	subs	r0, r0, r6
 800d968:	42b8      	cmp	r0, r7
 800d96a:	d9f6      	bls.n	800d95a <HAL_RCCEx_PeriphCLKConfig+0x21e>
 800d96c:	e7c4      	b.n	800d8f8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800d96e:	6891      	ldr	r1, [r2, #8]
 800d970:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 800d974:	e765      	b.n	800d842 <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800d976:	4b06      	ldr	r3, [pc, #24]	@ (800d990 <HAL_RCCEx_PeriphCLKConfig+0x254>)
 800d978:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 800d97c:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 800d980:	e769      	b.n	800d856 <HAL_RCCEx_PeriphCLKConfig+0x11a>
 800d982:	bf00      	nop
 800d984:	42470000 	.word	0x42470000
 800d988:	40023800 	.word	0x40023800
 800d98c:	40007000 	.word	0x40007000
 800d990:	42471000 	.word	0x42471000

0800d994 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800d994:	b538      	push	{r3, r4, r5, lr}
 800d996:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800d998:	4604      	mov	r4, r0
 800d99a:	b1c8      	cbz	r0, 800d9d0 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800d99c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800d9a0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800d9a4:	b91b      	cbnz	r3, 800d9ae <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800d9a6:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800d9aa:	f7f4 fb81 	bl	80020b0 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d9ae:	2302      	movs	r3, #2
 800d9b0:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800d9b4:	1d21      	adds	r1, r4, #4
 800d9b6:	6820      	ldr	r0, [r4, #0]
 800d9b8:	f000 fd0e 	bl	800e3d8 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800d9bc:	6862      	ldr	r2, [r4, #4]
 800d9be:	6820      	ldr	r0, [r4, #0]
 800d9c0:	4629      	mov	r1, r5
 800d9c2:	f000 fd3f 	bl	800e444 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800d9c6:	2301      	movs	r3, #1
 800d9c8:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 800d9cc:	2000      	movs	r0, #0
}
 800d9ce:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800d9d0:	2001      	movs	r0, #1
 800d9d2:	e7fc      	b.n	800d9ce <HAL_SDRAM_Init+0x3a>

0800d9d4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800d9d4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800d9d6:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800d9da:	2b02      	cmp	r3, #2
{
 800d9dc:	4605      	mov	r5, r0
 800d9de:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800d9e0:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800d9e2:	d012      	beq.n	800da0a <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800d9e4:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 800d9e8:	2c01      	cmp	r4, #1
 800d9ea:	d10f      	bne.n	800da0c <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800d9ec:	2302      	movs	r3, #2
 800d9ee:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800d9f2:	6828      	ldr	r0, [r5, #0]
 800d9f4:	f000 fd5c 	bl	800e4b0 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800d9f8:	6833      	ldr	r3, [r6, #0]
 800d9fa:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800d9fc:	bf06      	itte	eq
 800d9fe:	2305      	moveq	r3, #5
 800da00:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800da04:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800da08:	2000      	movs	r0, #0
}
 800da0a:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800da0c:	2001      	movs	r0, #1
 800da0e:	e7fc      	b.n	800da0a <HAL_SDRAM_SendCommand+0x36>

0800da10 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800da10:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800da12:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800da16:	2b02      	cmp	r3, #2
{
 800da18:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800da1a:	b2d8      	uxtb	r0, r3
 800da1c:	d00d      	beq.n	800da3a <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800da1e:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 800da22:	2b01      	cmp	r3, #1
 800da24:	b2dd      	uxtb	r5, r3
 800da26:	d109      	bne.n	800da3c <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800da28:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800da2a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800da2c:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800da30:	f000 fd62 	bl	800e4f8 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800da34:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800da38:	2000      	movs	r0, #0
}
 800da3a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800da3c:	2001      	movs	r0, #1
 800da3e:	e7fc      	b.n	800da3a <HAL_SDRAM_ProgramRefreshRate+0x2a>

0800da40 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 800da40:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800da44:	461f      	mov	r7, r3
 800da46:	4689      	mov	r9, r1
 800da48:	4690      	mov	r8, r2
 800da4a:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800da4c:	f7fe fb12 	bl	800c074 <HAL_GetTick>
 800da50:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800da52:	443d      	add	r5, r7
 800da54:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800da56:	f7fe fb0d 	bl	800c074 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800da5a:	4b26      	ldr	r3, [pc, #152]	@ (800daf4 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 800da5c:	681e      	ldr	r6, [r3, #0]
 800da5e:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 800da62:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 800da64:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800da66:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800da68:	6822      	ldr	r2, [r4, #0]
 800da6a:	6893      	ldr	r3, [r2, #8]
 800da6c:	ea39 0303 	bics.w	r3, r9, r3
 800da70:	bf0c      	ite	eq
 800da72:	2301      	moveq	r3, #1
 800da74:	2300      	movne	r3, #0
 800da76:	4543      	cmp	r3, r8
 800da78:	d101      	bne.n	800da7e <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 800da7a:	2000      	movs	r0, #0
 800da7c:	e02e      	b.n	800dadc <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 800da7e:	1c7b      	adds	r3, r7, #1
 800da80:	d0f3      	beq.n	800da6a <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800da82:	f7fe faf7 	bl	800c074 <HAL_GetTick>
 800da86:	eba0 000a 	sub.w	r0, r0, sl
 800da8a:	42a8      	cmp	r0, r5
 800da8c:	d329      	bcc.n	800dae2 <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800da8e:	6823      	ldr	r3, [r4, #0]
 800da90:	685a      	ldr	r2, [r3, #4]
 800da92:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800da96:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800da98:	6862      	ldr	r2, [r4, #4]
 800da9a:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800da9e:	d10a      	bne.n	800dab6 <SPI_WaitFlagStateUntilTimeout+0x76>
 800daa0:	68a2      	ldr	r2, [r4, #8]
 800daa2:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 800daa6:	d002      	beq.n	800daae <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800daa8:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 800daac:	d103      	bne.n	800dab6 <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 800daae:	681a      	ldr	r2, [r3, #0]
 800dab0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800dab4:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800dab6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800dab8:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 800dabc:	d107      	bne.n	800dace <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 800dabe:	681a      	ldr	r2, [r3, #0]
 800dac0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800dac4:	601a      	str	r2, [r3, #0]
 800dac6:	681a      	ldr	r2, [r3, #0]
 800dac8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800dacc:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800dace:	2301      	movs	r3, #1
 800dad0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800dad4:	2300      	movs	r3, #0
 800dad6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 800dada:	2003      	movs	r0, #3
}
 800dadc:	b002      	add	sp, #8
 800dade:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 800dae2:	9a01      	ldr	r2, [sp, #4]
      count--;
 800dae4:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 800dae6:	2a00      	cmp	r2, #0
      count--;
 800dae8:	f103 33ff 	add.w	r3, r3, #4294967295
 800daec:	9301      	str	r3, [sp, #4]
 800daee:	bf08      	it	eq
 800daf0:	4615      	moveq	r5, r2
 800daf2:	e7b9      	b.n	800da68 <SPI_WaitFlagStateUntilTimeout+0x28>
 800daf4:	20000090 	.word	0x20000090

0800daf8 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800daf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dafa:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800dafc:	460b      	mov	r3, r1
 800dafe:	9200      	str	r2, [sp, #0]
{
 800db00:	460e      	mov	r6, r1
 800db02:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800db04:	2102      	movs	r1, #2
 800db06:	2201      	movs	r2, #1
{
 800db08:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 800db0a:	f7ff ff99 	bl	800da40 <SPI_WaitFlagStateUntilTimeout>
 800db0e:	4605      	mov	r5, r0
 800db10:	b128      	cbz	r0, 800db1e <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800db12:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800db14:	f043 0320 	orr.w	r3, r3, #32
 800db18:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 800db1a:	2503      	movs	r5, #3
 800db1c:	e015      	b.n	800db4a <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800db1e:	4b12      	ldr	r3, [pc, #72]	@ (800db68 <SPI_EndRxTxTransaction+0x70>)
 800db20:	6818      	ldr	r0, [r3, #0]
 800db22:	4b12      	ldr	r3, [pc, #72]	@ (800db6c <SPI_EndRxTxTransaction+0x74>)
 800db24:	fbb0 f0f3 	udiv	r0, r0, r3
 800db28:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800db2c:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800db2e:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800db30:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800db32:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800db36:	d10b      	bne.n	800db50 <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800db38:	9700      	str	r7, [sp, #0]
 800db3a:	4633      	mov	r3, r6
 800db3c:	462a      	mov	r2, r5
 800db3e:	2180      	movs	r1, #128	@ 0x80
 800db40:	4620      	mov	r0, r4
 800db42:	f7ff ff7d 	bl	800da40 <SPI_WaitFlagStateUntilTimeout>
 800db46:	2800      	cmp	r0, #0
 800db48:	d1e3      	bne.n	800db12 <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800db4a:	4628      	mov	r0, r5
 800db4c:	b005      	add	sp, #20
 800db4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 800db50:	9b03      	ldr	r3, [sp, #12]
 800db52:	2b00      	cmp	r3, #0
 800db54:	d0f9      	beq.n	800db4a <SPI_EndRxTxTransaction+0x52>
      count--;
 800db56:	9b03      	ldr	r3, [sp, #12]
 800db58:	3b01      	subs	r3, #1
 800db5a:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800db5c:	6823      	ldr	r3, [r4, #0]
 800db5e:	689b      	ldr	r3, [r3, #8]
 800db60:	061b      	lsls	r3, r3, #24
 800db62:	d4f5      	bmi.n	800db50 <SPI_EndRxTxTransaction+0x58>
 800db64:	e7f1      	b.n	800db4a <SPI_EndRxTxTransaction+0x52>
 800db66:	bf00      	nop
 800db68:	20000090 	.word	0x20000090
 800db6c:	016e3600 	.word	0x016e3600

0800db70 <SPI_EndRxTransaction>:
{
 800db70:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800db72:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800db74:	6841      	ldr	r1, [r0, #4]
 800db76:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 800db7a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800db7c:	d008      	beq.n	800db90 <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800db7e:	9200      	str	r2, [sp, #0]
 800db80:	2101      	movs	r1, #1
 800db82:	2200      	movs	r2, #0
 800db84:	f7ff ff5c 	bl	800da40 <SPI_WaitFlagStateUntilTimeout>
 800db88:	b9d0      	cbnz	r0, 800dbc0 <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 800db8a:	2000      	movs	r0, #0
}
 800db8c:	b003      	add	sp, #12
 800db8e:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800db90:	6881      	ldr	r1, [r0, #8]
 800db92:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 800db96:	d002      	beq.n	800db9e <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800db98:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 800db9c:	d107      	bne.n	800dbae <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 800db9e:	6825      	ldr	r5, [r4, #0]
 800dba0:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800dba2:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 800dba6:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 800dbaa:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800dbac:	d004      	beq.n	800dbb8 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800dbae:	9200      	str	r2, [sp, #0]
 800dbb0:	2180      	movs	r1, #128	@ 0x80
 800dbb2:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800dbb4:	4620      	mov	r0, r4
 800dbb6:	e7e5      	b.n	800db84 <SPI_EndRxTransaction+0x14>
 800dbb8:	9200      	str	r2, [sp, #0]
 800dbba:	2101      	movs	r1, #1
 800dbbc:	2200      	movs	r2, #0
 800dbbe:	e7f9      	b.n	800dbb4 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800dbc0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800dbc2:	f043 0320 	orr.w	r3, r3, #32
 800dbc6:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 800dbc8:	2003      	movs	r0, #3
 800dbca:	e7df      	b.n	800db8c <SPI_EndRxTransaction+0x1c>

0800dbcc <HAL_SPI_Init>:
{
 800dbcc:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800dbce:	4604      	mov	r4, r0
 800dbd0:	2800      	cmp	r0, #0
 800dbd2:	d055      	beq.n	800dc80 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800dbd4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800dbd6:	2b00      	cmp	r3, #0
 800dbd8:	d14e      	bne.n	800dc78 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800dbda:	6842      	ldr	r2, [r0, #4]
 800dbdc:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800dbe0:	d000      	beq.n	800dbe4 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800dbe2:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800dbe4:	2300      	movs	r3, #0
 800dbe6:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800dbe8:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 800dbec:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800dbf0:	b923      	cbnz	r3, 800dbfc <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 800dbf2:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 800dbf6:	4620      	mov	r0, r4
 800dbf8:	f7f4 fa24 	bl	8002044 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800dbfc:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800dbfe:	68a0      	ldr	r0, [r4, #8]
 800dc00:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800dc02:	2302      	movs	r3, #2
 800dc04:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 800dc08:	680b      	ldr	r3, [r1, #0]
 800dc0a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800dc0e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800dc10:	6863      	ldr	r3, [r4, #4]
 800dc12:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 800dc16:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 800dc1a:	4303      	orrs	r3, r0
 800dc1c:	68e0      	ldr	r0, [r4, #12]
 800dc1e:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 800dc22:	4303      	orrs	r3, r0
 800dc24:	6920      	ldr	r0, [r4, #16]
 800dc26:	f000 0002 	and.w	r0, r0, #2
 800dc2a:	4303      	orrs	r3, r0
 800dc2c:	6960      	ldr	r0, [r4, #20]
 800dc2e:	f000 0001 	and.w	r0, r0, #1
 800dc32:	4303      	orrs	r3, r0
 800dc34:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 800dc38:	4303      	orrs	r3, r0
 800dc3a:	69e0      	ldr	r0, [r4, #28]
 800dc3c:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 800dc40:	4303      	orrs	r3, r0
 800dc42:	6a20      	ldr	r0, [r4, #32]
 800dc44:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 800dc48:	4303      	orrs	r3, r0
 800dc4a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800dc4c:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 800dc50:	4303      	orrs	r3, r0
 800dc52:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800dc54:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800dc56:	0c12      	lsrs	r2, r2, #16
 800dc58:	f003 0310 	and.w	r3, r3, #16
 800dc5c:	f002 0204 	and.w	r2, r2, #4
 800dc60:	431a      	orrs	r2, r3
 800dc62:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800dc64:	69cb      	ldr	r3, [r1, #28]
 800dc66:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800dc6a:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800dc6c:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800dc6e:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800dc70:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800dc72:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 800dc76:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800dc78:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800dc7a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800dc7e:	e7b1      	b.n	800dbe4 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 800dc80:	2001      	movs	r0, #1
 800dc82:	e7f8      	b.n	800dc76 <HAL_SPI_Init+0xaa>

0800dc84 <HAL_SPI_Transmit>:
{
 800dc84:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dc88:	4604      	mov	r4, r0
 800dc8a:	461f      	mov	r7, r3
 800dc8c:	460d      	mov	r5, r1
 800dc8e:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 800dc90:	f7fe f9f0 	bl	800c074 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800dc94:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 800dc98:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800dc9a:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800dc9c:	b2d8      	uxtb	r0, r3
 800dc9e:	f040 809f 	bne.w	800dde0 <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 800dca2:	2d00      	cmp	r5, #0
 800dca4:	d074      	beq.n	800dd90 <HAL_SPI_Transmit+0x10c>
 800dca6:	f1b8 0f00 	cmp.w	r8, #0
 800dcaa:	d071      	beq.n	800dd90 <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 800dcac:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800dcb0:	2b01      	cmp	r3, #1
 800dcb2:	f000 8095 	beq.w	800dde0 <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800dcb6:	2303      	movs	r3, #3
 800dcb8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800dcbc:	2300      	movs	r3, #0
 800dcbe:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 800dcc0:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 800dcc4:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800dcc8:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 800dcca:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 800dccc:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800dcce:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800dcd0:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 800dcd2:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800dcd6:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800dcda:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 800dcdc:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800dce0:	d107      	bne.n	800dcf2 <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 800dce2:	6833      	ldr	r3, [r6, #0]
 800dce4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800dce8:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 800dcea:	6833      	ldr	r3, [r6, #0]
 800dcec:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800dcf0:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800dcf2:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800dcf4:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800dcf6:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 800dcf8:	bf5e      	ittt	pl
 800dcfa:	6833      	ldrpl	r3, [r6, #0]
 800dcfc:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 800dd00:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800dd02:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800dd06:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800dd08:	d145      	bne.n	800dd96 <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800dd0a:	b113      	cbz	r3, 800dd12 <HAL_SPI_Transmit+0x8e>
 800dd0c:	f1b8 0f01 	cmp.w	r8, #1
 800dd10:	d107      	bne.n	800dd22 <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800dd12:	f835 3b02 	ldrh.w	r3, [r5], #2
 800dd16:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800dd18:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800dd1a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800dd1c:	3b01      	subs	r3, #1
 800dd1e:	b29b      	uxth	r3, r3
 800dd20:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800dd22:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800dd24:	b29b      	uxth	r3, r3
 800dd26:	b9d3      	cbnz	r3, 800dd5e <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800dd28:	464a      	mov	r2, r9
 800dd2a:	4639      	mov	r1, r7
 800dd2c:	4620      	mov	r0, r4
 800dd2e:	f7ff fee3 	bl	800daf8 <SPI_EndRxTxTransaction>
 800dd32:	2800      	cmp	r0, #0
 800dd34:	d151      	bne.n	800ddda <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800dd36:	68a3      	ldr	r3, [r4, #8]
 800dd38:	b933      	cbnz	r3, 800dd48 <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800dd3a:	9301      	str	r3, [sp, #4]
 800dd3c:	6823      	ldr	r3, [r4, #0]
 800dd3e:	68da      	ldr	r2, [r3, #12]
 800dd40:	9201      	str	r2, [sp, #4]
 800dd42:	689b      	ldr	r3, [r3, #8]
 800dd44:	9301      	str	r3, [sp, #4]
 800dd46:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800dd48:	2301      	movs	r3, #1
 800dd4a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800dd4e:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800dd50:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800dd52:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 800dd54:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800dd58:	bf18      	it	ne
 800dd5a:	2001      	movne	r0, #1
 800dd5c:	e018      	b.n	800dd90 <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800dd5e:	6822      	ldr	r2, [r4, #0]
 800dd60:	6893      	ldr	r3, [r2, #8]
 800dd62:	0798      	lsls	r0, r3, #30
 800dd64:	d505      	bpl.n	800dd72 <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800dd66:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800dd68:	f833 1b02 	ldrh.w	r1, [r3], #2
 800dd6c:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800dd6e:	6323      	str	r3, [r4, #48]	@ 0x30
 800dd70:	e7d3      	b.n	800dd1a <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800dd72:	f7fe f97f 	bl	800c074 <HAL_GetTick>
 800dd76:	eba0 0009 	sub.w	r0, r0, r9
 800dd7a:	42b8      	cmp	r0, r7
 800dd7c:	d3d1      	bcc.n	800dd22 <HAL_SPI_Transmit+0x9e>
 800dd7e:	1c79      	adds	r1, r7, #1
 800dd80:	d0cf      	beq.n	800dd22 <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 800dd82:	2301      	movs	r3, #1
 800dd84:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800dd88:	2300      	movs	r3, #0
 800dd8a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800dd8e:	2003      	movs	r0, #3
}
 800dd90:	b003      	add	sp, #12
 800dd92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800dd96:	b113      	cbz	r3, 800dd9e <HAL_SPI_Transmit+0x11a>
 800dd98:	f1b8 0f01 	cmp.w	r8, #1
 800dd9c:	d108      	bne.n	800ddb0 <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800dd9e:	782b      	ldrb	r3, [r5, #0]
 800dda0:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800dda2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800dda4:	3301      	adds	r3, #1
 800dda6:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800dda8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800ddaa:	3b01      	subs	r3, #1
 800ddac:	b29b      	uxth	r3, r3
 800ddae:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800ddb0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800ddb2:	b29b      	uxth	r3, r3
 800ddb4:	2b00      	cmp	r3, #0
 800ddb6:	d0b7      	beq.n	800dd28 <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ddb8:	6823      	ldr	r3, [r4, #0]
 800ddba:	689a      	ldr	r2, [r3, #8]
 800ddbc:	0792      	lsls	r2, r2, #30
 800ddbe:	d503      	bpl.n	800ddc8 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800ddc0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800ddc2:	7812      	ldrb	r2, [r2, #0]
 800ddc4:	731a      	strb	r2, [r3, #12]
 800ddc6:	e7ec      	b.n	800dda2 <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ddc8:	f7fe f954 	bl	800c074 <HAL_GetTick>
 800ddcc:	eba0 0009 	sub.w	r0, r0, r9
 800ddd0:	42b8      	cmp	r0, r7
 800ddd2:	d3ed      	bcc.n	800ddb0 <HAL_SPI_Transmit+0x12c>
 800ddd4:	1c7b      	adds	r3, r7, #1
 800ddd6:	d0eb      	beq.n	800ddb0 <HAL_SPI_Transmit+0x12c>
 800ddd8:	e7d3      	b.n	800dd82 <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ddda:	2320      	movs	r3, #32
 800dddc:	6563      	str	r3, [r4, #84]	@ 0x54
 800ddde:	e7aa      	b.n	800dd36 <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 800dde0:	2002      	movs	r0, #2
 800dde2:	e7d5      	b.n	800dd90 <HAL_SPI_Transmit+0x10c>

0800dde4 <HAL_SPI_TransmitReceive>:
{
 800dde4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dde8:	4604      	mov	r4, r0
 800ddea:	460d      	mov	r5, r1
 800ddec:	4691      	mov	r9, r2
 800ddee:	461e      	mov	r6, r3
 800ddf0:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 800ddf4:	f7fe f93e 	bl	800c074 <HAL_GetTick>
  tmp_state           = hspi->State;
 800ddf8:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 800ddfc:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800ddfe:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800de00:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 800de02:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800de04:	d00a      	beq.n	800de1c <HAL_SPI_TransmitReceive+0x38>
 800de06:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800de0a:	f040 80e5 	bne.w	800dfd8 <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800de0e:	68a3      	ldr	r3, [r4, #8]
 800de10:	2b00      	cmp	r3, #0
 800de12:	f040 80e1 	bne.w	800dfd8 <HAL_SPI_TransmitReceive+0x1f4>
 800de16:	2904      	cmp	r1, #4
 800de18:	f040 80de 	bne.w	800dfd8 <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800de1c:	2d00      	cmp	r5, #0
 800de1e:	d04b      	beq.n	800deb8 <HAL_SPI_TransmitReceive+0xd4>
 800de20:	f1b9 0f00 	cmp.w	r9, #0
 800de24:	d048      	beq.n	800deb8 <HAL_SPI_TransmitReceive+0xd4>
 800de26:	2e00      	cmp	r6, #0
 800de28:	d046      	beq.n	800deb8 <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 800de2a:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800de2e:	2b01      	cmp	r3, #1
 800de30:	f000 80d2 	beq.w	800dfd8 <HAL_SPI_TransmitReceive+0x1f4>
 800de34:	2301      	movs	r3, #1
 800de36:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800de3a:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800de3e:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800de42:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800de44:	bf1c      	itt	ne
 800de46:	2305      	movne	r3, #5
 800de48:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800de4c:	2300      	movs	r3, #0
 800de4e:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 800de50:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800de54:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800de56:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 800de58:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800de5a:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800de5c:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800de5e:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 800de60:	bf58      	it	pl
 800de62:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 800de64:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 800de66:	bf58      	it	pl
 800de68:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 800de6c:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 800de6e:	bf58      	it	pl
 800de70:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800de72:	68e1      	ldr	r1, [r4, #12]
 800de74:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 800de78:	d155      	bne.n	800df26 <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800de7a:	b10a      	cbz	r2, 800de80 <HAL_SPI_TransmitReceive+0x9c>
 800de7c:	2e01      	cmp	r6, #1
 800de7e:	d107      	bne.n	800de90 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800de80:	f835 2b02 	ldrh.w	r2, [r5], #2
 800de84:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800de86:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800de88:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800de8a:	3b01      	subs	r3, #1
 800de8c:	b29b      	uxth	r3, r3
 800de8e:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800de90:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800de92:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800de94:	b29b      	uxth	r3, r3
 800de96:	b98b      	cbnz	r3, 800debc <HAL_SPI_TransmitReceive+0xd8>
 800de98:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800de9a:	b29b      	uxth	r3, r3
 800de9c:	b973      	cbnz	r3, 800debc <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800de9e:	463a      	mov	r2, r7
 800dea0:	4641      	mov	r1, r8
 800dea2:	4620      	mov	r0, r4
 800dea4:	f7ff fe28 	bl	800daf8 <SPI_EndRxTxTransaction>
 800dea8:	2800      	cmp	r0, #0
 800deaa:	f000 8081 	beq.w	800dfb0 <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800deae:	2320      	movs	r3, #32
 800deb0:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800deb2:	2300      	movs	r3, #0
 800deb4:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 800deb8:	2001      	movs	r0, #1
 800deba:	e031      	b.n	800df20 <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800debc:	6821      	ldr	r1, [r4, #0]
 800debe:	688b      	ldr	r3, [r1, #8]
 800dec0:	079a      	lsls	r2, r3, #30
 800dec2:	d50d      	bpl.n	800dee0 <HAL_SPI_TransmitReceive+0xfc>
 800dec4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800dec6:	b29b      	uxth	r3, r3
 800dec8:	b153      	cbz	r3, 800dee0 <HAL_SPI_TransmitReceive+0xfc>
 800deca:	b145      	cbz	r5, 800dede <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800decc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800dece:	f833 2b02 	ldrh.w	r2, [r3], #2
 800ded2:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ded4:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800ded6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800ded8:	3b01      	subs	r3, #1
 800deda:	b29b      	uxth	r3, r3
 800dedc:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 800dede:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800dee0:	688a      	ldr	r2, [r1, #8]
 800dee2:	f012 0201 	ands.w	r2, r2, #1
 800dee6:	d00c      	beq.n	800df02 <HAL_SPI_TransmitReceive+0x11e>
 800dee8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800deea:	b29b      	uxth	r3, r3
 800deec:	b14b      	cbz	r3, 800df02 <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800deee:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800def0:	68c9      	ldr	r1, [r1, #12]
 800def2:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800def6:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800def8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800defa:	3b01      	subs	r3, #1
 800defc:	b29b      	uxth	r3, r3
 800defe:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 800df00:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800df02:	f7fe f8b7 	bl	800c074 <HAL_GetTick>
 800df06:	1bc0      	subs	r0, r0, r7
 800df08:	4540      	cmp	r0, r8
 800df0a:	d3c2      	bcc.n	800de92 <HAL_SPI_TransmitReceive+0xae>
 800df0c:	f1b8 3fff 	cmp.w	r8, #4294967295
 800df10:	d0bf      	beq.n	800de92 <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 800df12:	2301      	movs	r3, #1
 800df14:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800df18:	2300      	movs	r3, #0
 800df1a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 800df1e:	2003      	movs	r0, #3
}
 800df20:	b003      	add	sp, #12
 800df22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800df26:	b10a      	cbz	r2, 800df2c <HAL_SPI_TransmitReceive+0x148>
 800df28:	2e01      	cmp	r6, #1
 800df2a:	d108      	bne.n	800df3e <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800df2c:	782a      	ldrb	r2, [r5, #0]
 800df2e:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800df30:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800df32:	3301      	adds	r3, #1
 800df34:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 800df36:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800df38:	3b01      	subs	r3, #1
 800df3a:	b29b      	uxth	r3, r3
 800df3c:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800df3e:	2501      	movs	r5, #1
 800df40:	e02d      	b.n	800df9e <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800df42:	6822      	ldr	r2, [r4, #0]
 800df44:	6893      	ldr	r3, [r2, #8]
 800df46:	079b      	lsls	r3, r3, #30
 800df48:	d50e      	bpl.n	800df68 <HAL_SPI_TransmitReceive+0x184>
 800df4a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800df4c:	b29b      	uxth	r3, r3
 800df4e:	b15b      	cbz	r3, 800df68 <HAL_SPI_TransmitReceive+0x184>
 800df50:	b14d      	cbz	r5, 800df66 <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 800df52:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800df54:	781b      	ldrb	r3, [r3, #0]
 800df56:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800df58:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800df5a:	3301      	adds	r3, #1
 800df5c:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800df5e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800df60:	3b01      	subs	r3, #1
 800df62:	b29b      	uxth	r3, r3
 800df64:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800df66:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800df68:	6822      	ldr	r2, [r4, #0]
 800df6a:	6891      	ldr	r1, [r2, #8]
 800df6c:	f011 0101 	ands.w	r1, r1, #1
 800df70:	d00d      	beq.n	800df8e <HAL_SPI_TransmitReceive+0x1aa>
 800df72:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800df74:	b29b      	uxth	r3, r3
 800df76:	b153      	cbz	r3, 800df8e <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800df78:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800df7a:	68d2      	ldr	r2, [r2, #12]
 800df7c:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800df7e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800df80:	3301      	adds	r3, #1
 800df82:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800df84:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800df86:	3b01      	subs	r3, #1
 800df88:	b29b      	uxth	r3, r3
 800df8a:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 800df8c:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800df8e:	f7fe f871 	bl	800c074 <HAL_GetTick>
 800df92:	1bc0      	subs	r0, r0, r7
 800df94:	4540      	cmp	r0, r8
 800df96:	d302      	bcc.n	800df9e <HAL_SPI_TransmitReceive+0x1ba>
 800df98:	f1b8 3fff 	cmp.w	r8, #4294967295
 800df9c:	d1b9      	bne.n	800df12 <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800df9e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800dfa0:	b29b      	uxth	r3, r3
 800dfa2:	2b00      	cmp	r3, #0
 800dfa4:	d1cd      	bne.n	800df42 <HAL_SPI_TransmitReceive+0x15e>
 800dfa6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800dfa8:	b29b      	uxth	r3, r3
 800dfaa:	2b00      	cmp	r3, #0
 800dfac:	d1c9      	bne.n	800df42 <HAL_SPI_TransmitReceive+0x15e>
 800dfae:	e776      	b.n	800de9e <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800dfb0:	68a3      	ldr	r3, [r4, #8]
 800dfb2:	b933      	cbnz	r3, 800dfc2 <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800dfb4:	9301      	str	r3, [sp, #4]
 800dfb6:	6823      	ldr	r3, [r4, #0]
 800dfb8:	68da      	ldr	r2, [r3, #12]
 800dfba:	9201      	str	r2, [sp, #4]
 800dfbc:	689b      	ldr	r3, [r3, #8]
 800dfbe:	9301      	str	r3, [sp, #4]
 800dfc0:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 800dfc2:	2301      	movs	r3, #1
 800dfc4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800dfc8:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800dfca:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800dfcc:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 800dfce:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800dfd2:	bf18      	it	ne
 800dfd4:	2001      	movne	r0, #1
 800dfd6:	e7a3      	b.n	800df20 <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 800dfd8:	2002      	movs	r0, #2
 800dfda:	e7a1      	b.n	800df20 <HAL_SPI_TransmitReceive+0x13c>

0800dfdc <HAL_SPI_Receive>:
{
 800dfdc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dfe0:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 800dfe2:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 800dfe6:	2b01      	cmp	r3, #1
{
 800dfe8:	4604      	mov	r4, r0
 800dfea:	4689      	mov	r9, r1
 800dfec:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 800dfee:	b2dd      	uxtb	r5, r3
 800dff0:	d004      	beq.n	800dffc <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 800dff2:	2502      	movs	r5, #2
}
 800dff4:	4628      	mov	r0, r5
 800dff6:	b003      	add	sp, #12
 800dff8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800dffc:	6843      	ldr	r3, [r0, #4]
 800dffe:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800e002:	d10b      	bne.n	800e01c <HAL_SPI_Receive+0x40>
 800e004:	6883      	ldr	r3, [r0, #8]
 800e006:	b94b      	cbnz	r3, 800e01c <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800e008:	2304      	movs	r3, #4
 800e00a:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800e00e:	4613      	mov	r3, r2
 800e010:	9600      	str	r6, [sp, #0]
 800e012:	460a      	mov	r2, r1
 800e014:	f7ff fee6 	bl	800dde4 <HAL_SPI_TransmitReceive>
 800e018:	4605      	mov	r5, r0
 800e01a:	e7eb      	b.n	800dff4 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 800e01c:	f7fe f82a 	bl	800c074 <HAL_GetTick>
 800e020:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 800e022:	f1b9 0f00 	cmp.w	r9, #0
 800e026:	d0e5      	beq.n	800dff4 <HAL_SPI_Receive+0x18>
 800e028:	2f00      	cmp	r7, #0
 800e02a:	d0e3      	beq.n	800dff4 <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 800e02c:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800e030:	2b01      	cmp	r3, #1
 800e032:	d0de      	beq.n	800dff2 <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e034:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800e036:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 800e03a:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e03c:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 800e03e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e042:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800e046:	f04f 0304 	mov.w	r3, #4
 800e04a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 800e04e:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e052:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 800e054:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800e056:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 800e058:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800e05a:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 800e05c:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 800e05e:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e060:	d107      	bne.n	800e072 <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 800e062:	681a      	ldr	r2, [r3, #0]
 800e064:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800e068:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 800e06a:	681a      	ldr	r2, [r3, #0]
 800e06c:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800e070:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e072:	681a      	ldr	r2, [r3, #0]
 800e074:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800e076:	bf5e      	ittt	pl
 800e078:	681a      	ldrpl	r2, [r3, #0]
 800e07a:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 800e07e:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800e080:	68e3      	ldr	r3, [r4, #12]
 800e082:	b1f3      	cbz	r3, 800e0c2 <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 800e084:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800e086:	b29b      	uxth	r3, r3
 800e088:	b1fb      	cbz	r3, 800e0ca <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800e08a:	6823      	ldr	r3, [r4, #0]
 800e08c:	689a      	ldr	r2, [r3, #8]
 800e08e:	07d2      	lsls	r2, r2, #31
 800e090:	d53c      	bpl.n	800e10c <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e092:	68da      	ldr	r2, [r3, #12]
 800e094:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800e096:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e09a:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800e09c:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800e09e:	3b01      	subs	r3, #1
 800e0a0:	b29b      	uxth	r3, r3
 800e0a2:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 800e0a4:	e7ee      	b.n	800e084 <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800e0a6:	6823      	ldr	r3, [r4, #0]
 800e0a8:	689a      	ldr	r2, [r3, #8]
 800e0aa:	07d0      	lsls	r0, r2, #31
 800e0ac:	d51e      	bpl.n	800e0ec <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800e0ae:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800e0b0:	7b1b      	ldrb	r3, [r3, #12]
 800e0b2:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800e0b4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800e0b6:	3301      	adds	r3, #1
 800e0b8:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 800e0ba:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800e0bc:	3b01      	subs	r3, #1
 800e0be:	b29b      	uxth	r3, r3
 800e0c0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 800e0c2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 800e0c4:	b29b      	uxth	r3, r3
 800e0c6:	2b00      	cmp	r3, #0
 800e0c8:	d1ed      	bne.n	800e0a6 <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800e0ca:	4642      	mov	r2, r8
 800e0cc:	4631      	mov	r1, r6
 800e0ce:	4620      	mov	r0, r4
 800e0d0:	f7ff fd4e 	bl	800db70 <SPI_EndRxTransaction>
 800e0d4:	bb18      	cbnz	r0, 800e11e <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 800e0d6:	2301      	movs	r3, #1
 800e0d8:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800e0dc:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800e0de:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800e0e0:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 800e0e2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800e0e6:	bf18      	it	ne
 800e0e8:	2501      	movne	r5, #1
 800e0ea:	e783      	b.n	800dff4 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e0ec:	f7fd ffc2 	bl	800c074 <HAL_GetTick>
 800e0f0:	eba0 0008 	sub.w	r0, r0, r8
 800e0f4:	42b0      	cmp	r0, r6
 800e0f6:	d3e4      	bcc.n	800e0c2 <HAL_SPI_Receive+0xe6>
 800e0f8:	1c71      	adds	r1, r6, #1
 800e0fa:	d0e2      	beq.n	800e0c2 <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 800e0fc:	2301      	movs	r3, #1
 800e0fe:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800e102:	2300      	movs	r3, #0
 800e104:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 800e108:	2503      	movs	r5, #3
 800e10a:	e773      	b.n	800dff4 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e10c:	f7fd ffb2 	bl	800c074 <HAL_GetTick>
 800e110:	eba0 0008 	sub.w	r0, r0, r8
 800e114:	42b0      	cmp	r0, r6
 800e116:	d3b5      	bcc.n	800e084 <HAL_SPI_Receive+0xa8>
 800e118:	1c73      	adds	r3, r6, #1
 800e11a:	d0b3      	beq.n	800e084 <HAL_SPI_Receive+0xa8>
 800e11c:	e7ee      	b.n	800e0fc <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e11e:	2320      	movs	r3, #32
 800e120:	6563      	str	r3, [r4, #84]	@ 0x54
 800e122:	e7d8      	b.n	800e0d6 <HAL_SPI_Receive+0xfa>

0800e124 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800e124:	4770      	bx	lr
	...

0800e128 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800e128:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800e12c:	2b01      	cmp	r3, #1
 800e12e:	d130      	bne.n	800e192 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800e130:	2302      	movs	r3, #2
 800e132:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800e136:	6803      	ldr	r3, [r0, #0]
 800e138:	68da      	ldr	r2, [r3, #12]
 800e13a:	f042 0201 	orr.w	r2, r2, #1
 800e13e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800e140:	4a15      	ldr	r2, [pc, #84]	@ (800e198 <HAL_TIM_Base_Start_IT+0x70>)
 800e142:	4293      	cmp	r3, r2
 800e144:	d01a      	beq.n	800e17c <HAL_TIM_Base_Start_IT+0x54>
 800e146:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800e14a:	d017      	beq.n	800e17c <HAL_TIM_Base_Start_IT+0x54>
 800e14c:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800e150:	4293      	cmp	r3, r2
 800e152:	d013      	beq.n	800e17c <HAL_TIM_Base_Start_IT+0x54>
 800e154:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800e158:	4293      	cmp	r3, r2
 800e15a:	d00f      	beq.n	800e17c <HAL_TIM_Base_Start_IT+0x54>
 800e15c:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800e160:	4293      	cmp	r3, r2
 800e162:	d00b      	beq.n	800e17c <HAL_TIM_Base_Start_IT+0x54>
 800e164:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800e168:	4293      	cmp	r3, r2
 800e16a:	d007      	beq.n	800e17c <HAL_TIM_Base_Start_IT+0x54>
 800e16c:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 800e170:	4293      	cmp	r3, r2
 800e172:	d003      	beq.n	800e17c <HAL_TIM_Base_Start_IT+0x54>
 800e174:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 800e178:	4293      	cmp	r3, r2
 800e17a:	d104      	bne.n	800e186 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800e17c:	689a      	ldr	r2, [r3, #8]
 800e17e:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800e182:	2a06      	cmp	r2, #6
 800e184:	d003      	beq.n	800e18e <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 800e186:	681a      	ldr	r2, [r3, #0]
 800e188:	f042 0201 	orr.w	r2, r2, #1
 800e18c:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 800e18e:	2000      	movs	r0, #0
 800e190:	4770      	bx	lr
    return HAL_ERROR;
 800e192:	2001      	movs	r0, #1
}
 800e194:	4770      	bx	lr
 800e196:	bf00      	nop
 800e198:	40010000 	.word	0x40010000

0800e19c <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 800e19c:	4770      	bx	lr

0800e19e <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 800e19e:	4770      	bx	lr

0800e1a0 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 800e1a0:	4770      	bx	lr

0800e1a2 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 800e1a2:	4770      	bx	lr

0800e1a4 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 800e1a4:	6803      	ldr	r3, [r0, #0]
{
 800e1a6:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 800e1a8:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 800e1aa:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800e1ac:	07b1      	lsls	r1, r6, #30
{
 800e1ae:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800e1b0:	d50d      	bpl.n	800e1ce <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 800e1b2:	07aa      	lsls	r2, r5, #30
 800e1b4:	d50b      	bpl.n	800e1ce <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 800e1b6:	f06f 0202 	mvn.w	r2, #2
 800e1ba:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800e1bc:	2201      	movs	r2, #1
 800e1be:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800e1c0:	699b      	ldr	r3, [r3, #24]
 800e1c2:	079b      	lsls	r3, r3, #30
 800e1c4:	d069      	beq.n	800e29a <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 800e1c6:	f7ff ffea 	bl	800e19e <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e1ca:	2300      	movs	r3, #0
 800e1cc:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 800e1ce:	0771      	lsls	r1, r6, #29
 800e1d0:	d510      	bpl.n	800e1f4 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 800e1d2:	076a      	lsls	r2, r5, #29
 800e1d4:	d50e      	bpl.n	800e1f4 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800e1d6:	6823      	ldr	r3, [r4, #0]
 800e1d8:	f06f 0204 	mvn.w	r2, #4
 800e1dc:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800e1de:	2202      	movs	r2, #2
 800e1e0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800e1e2:	699b      	ldr	r3, [r3, #24]
 800e1e4:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800e1e8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800e1ea:	d05c      	beq.n	800e2a6 <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 800e1ec:	f7ff ffd7 	bl	800e19e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e1f0:	2300      	movs	r3, #0
 800e1f2:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 800e1f4:	0733      	lsls	r3, r6, #28
 800e1f6:	d50f      	bpl.n	800e218 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 800e1f8:	0728      	lsls	r0, r5, #28
 800e1fa:	d50d      	bpl.n	800e218 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 800e1fc:	6823      	ldr	r3, [r4, #0]
 800e1fe:	f06f 0208 	mvn.w	r2, #8
 800e202:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800e204:	2204      	movs	r2, #4
 800e206:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800e208:	69db      	ldr	r3, [r3, #28]
 800e20a:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800e20c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800e20e:	d050      	beq.n	800e2b2 <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 800e210:	f7ff ffc5 	bl	800e19e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e214:	2300      	movs	r3, #0
 800e216:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 800e218:	06f2      	lsls	r2, r6, #27
 800e21a:	d510      	bpl.n	800e23e <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 800e21c:	06eb      	lsls	r3, r5, #27
 800e21e:	d50e      	bpl.n	800e23e <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 800e220:	6823      	ldr	r3, [r4, #0]
 800e222:	f06f 0210 	mvn.w	r2, #16
 800e226:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800e228:	2208      	movs	r2, #8
 800e22a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800e22c:	69db      	ldr	r3, [r3, #28]
 800e22e:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800e232:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800e234:	d043      	beq.n	800e2be <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 800e236:	f7ff ffb2 	bl	800e19e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800e23a:	2300      	movs	r3, #0
 800e23c:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 800e23e:	07f0      	lsls	r0, r6, #31
 800e240:	d508      	bpl.n	800e254 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800e242:	07e9      	lsls	r1, r5, #31
 800e244:	d506      	bpl.n	800e254 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 800e246:	6823      	ldr	r3, [r4, #0]
 800e248:	f06f 0201 	mvn.w	r2, #1
 800e24c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800e24e:	4620      	mov	r0, r4
 800e250:	f7f3 fd5a 	bl	8001d08 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 800e254:	0632      	lsls	r2, r6, #24
 800e256:	d508      	bpl.n	800e26a <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800e258:	062b      	lsls	r3, r5, #24
 800e25a:	d506      	bpl.n	800e26a <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 800e25c:	6823      	ldr	r3, [r4, #0]
 800e25e:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 800e262:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800e264:	4620      	mov	r0, r4
 800e266:	f000 f8b6 	bl	800e3d6 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 800e26a:	0670      	lsls	r0, r6, #25
 800e26c:	d508      	bpl.n	800e280 <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800e26e:	0669      	lsls	r1, r5, #25
 800e270:	d506      	bpl.n	800e280 <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800e272:	6823      	ldr	r3, [r4, #0]
 800e274:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800e278:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800e27a:	4620      	mov	r0, r4
 800e27c:	f7ff ff91 	bl	800e1a2 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 800e280:	06b2      	lsls	r2, r6, #26
 800e282:	d522      	bpl.n	800e2ca <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 800e284:	06ab      	lsls	r3, r5, #26
 800e286:	d520      	bpl.n	800e2ca <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800e288:	6823      	ldr	r3, [r4, #0]
 800e28a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800e28e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800e290:	611a      	str	r2, [r3, #16]
}
 800e292:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 800e296:	f000 b89d 	b.w	800e3d4 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800e29a:	f7ff ff7f 	bl	800e19c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e29e:	4620      	mov	r0, r4
 800e2a0:	f7ff ff7e 	bl	800e1a0 <HAL_TIM_PWM_PulseFinishedCallback>
 800e2a4:	e791      	b.n	800e1ca <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e2a6:	f7ff ff79 	bl	800e19c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e2aa:	4620      	mov	r0, r4
 800e2ac:	f7ff ff78 	bl	800e1a0 <HAL_TIM_PWM_PulseFinishedCallback>
 800e2b0:	e79e      	b.n	800e1f0 <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e2b2:	f7ff ff73 	bl	800e19c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e2b6:	4620      	mov	r0, r4
 800e2b8:	f7ff ff72 	bl	800e1a0 <HAL_TIM_PWM_PulseFinishedCallback>
 800e2bc:	e7aa      	b.n	800e214 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800e2be:	f7ff ff6d 	bl	800e19c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800e2c2:	4620      	mov	r0, r4
 800e2c4:	f7ff ff6c 	bl	800e1a0 <HAL_TIM_PWM_PulseFinishedCallback>
 800e2c8:	e7b7      	b.n	800e23a <HAL_TIM_IRQHandler+0x96>
}
 800e2ca:	bd70      	pop	{r4, r5, r6, pc}

0800e2cc <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800e2cc:	4a29      	ldr	r2, [pc, #164]	@ (800e374 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 800e2ce:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800e2d0:	4290      	cmp	r0, r2
 800e2d2:	d012      	beq.n	800e2fa <TIM_Base_SetConfig+0x2e>
 800e2d4:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 800e2d8:	d00f      	beq.n	800e2fa <TIM_Base_SetConfig+0x2e>
 800e2da:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800e2de:	4290      	cmp	r0, r2
 800e2e0:	d00b      	beq.n	800e2fa <TIM_Base_SetConfig+0x2e>
 800e2e2:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800e2e6:	4290      	cmp	r0, r2
 800e2e8:	d007      	beq.n	800e2fa <TIM_Base_SetConfig+0x2e>
 800e2ea:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800e2ee:	4290      	cmp	r0, r2
 800e2f0:	d003      	beq.n	800e2fa <TIM_Base_SetConfig+0x2e>
 800e2f2:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 800e2f6:	4290      	cmp	r0, r2
 800e2f8:	d108      	bne.n	800e30c <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800e2fa:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800e2fc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 800e300:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800e302:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800e304:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800e308:	4313      	orrs	r3, r2
 800e30a:	e016      	b.n	800e33a <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800e30c:	4a1a      	ldr	r2, [pc, #104]	@ (800e378 <TIM_Base_SetConfig+0xac>)
 800e30e:	4290      	cmp	r0, r2
 800e310:	d0f7      	beq.n	800e302 <TIM_Base_SetConfig+0x36>
 800e312:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800e316:	4290      	cmp	r0, r2
 800e318:	d0f3      	beq.n	800e302 <TIM_Base_SetConfig+0x36>
 800e31a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800e31e:	4290      	cmp	r0, r2
 800e320:	d0ef      	beq.n	800e302 <TIM_Base_SetConfig+0x36>
 800e322:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 800e326:	4290      	cmp	r0, r2
 800e328:	d0eb      	beq.n	800e302 <TIM_Base_SetConfig+0x36>
 800e32a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800e32e:	4290      	cmp	r0, r2
 800e330:	d0e7      	beq.n	800e302 <TIM_Base_SetConfig+0x36>
 800e332:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800e336:	4290      	cmp	r0, r2
 800e338:	d0e3      	beq.n	800e302 <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800e33a:	694a      	ldr	r2, [r1, #20]
 800e33c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800e340:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800e342:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800e344:	688b      	ldr	r3, [r1, #8]
 800e346:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800e348:	680b      	ldr	r3, [r1, #0]
 800e34a:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800e34c:	4b09      	ldr	r3, [pc, #36]	@ (800e374 <TIM_Base_SetConfig+0xa8>)
 800e34e:	4298      	cmp	r0, r3
 800e350:	d003      	beq.n	800e35a <TIM_Base_SetConfig+0x8e>
 800e352:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800e356:	4298      	cmp	r0, r3
 800e358:	d101      	bne.n	800e35e <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800e35a:	690b      	ldr	r3, [r1, #16]
 800e35c:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800e35e:	2301      	movs	r3, #1
 800e360:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800e362:	6903      	ldr	r3, [r0, #16]
 800e364:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 800e366:	bf42      	ittt	mi
 800e368:	6903      	ldrmi	r3, [r0, #16]
 800e36a:	f023 0301 	bicmi.w	r3, r3, #1
 800e36e:	6103      	strmi	r3, [r0, #16]
  }
}
 800e370:	4770      	bx	lr
 800e372:	bf00      	nop
 800e374:	40010000 	.word	0x40010000
 800e378:	40014000 	.word	0x40014000

0800e37c <HAL_TIM_Base_Init>:
{
 800e37c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800e37e:	4604      	mov	r4, r0
 800e380:	b330      	cbz	r0, 800e3d0 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800e382:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800e386:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800e38a:	b91b      	cbnz	r3, 800e394 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800e38c:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 800e390:	f7ff fec8 	bl	800e124 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800e394:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800e396:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800e398:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800e39c:	1d21      	adds	r1, r4, #4
 800e39e:	f7ff ff95 	bl	800e2cc <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800e3a2:	2301      	movs	r3, #1
 800e3a4:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 800e3a8:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800e3aa:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800e3ae:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800e3b2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 800e3b6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800e3ba:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800e3be:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800e3c2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 800e3c6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 800e3ca:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 800e3ce:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800e3d0:	2001      	movs	r0, #1
 800e3d2:	e7fc      	b.n	800e3ce <HAL_TIM_Base_Init+0x52>

0800e3d4 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 800e3d4:	4770      	bx	lr

0800e3d6 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 800e3d6:	4770      	bx	lr

0800e3d8 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800e3d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800e3dc:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 800e3e0:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 800e3e4:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 800e3e8:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 800e3ec:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800e3f0:	6809      	ldr	r1, [r1, #0]
 800e3f2:	ea43 0308 	orr.w	r3, r3, r8
 800e3f6:	b981      	cbnz	r1, 800e41a <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800e3f8:	ea43 030e 	orr.w	r3, r3, lr
 800e3fc:	4313      	orrs	r3, r2
 800e3fe:	ea43 030c 	orr.w	r3, r3, ip
 800e402:	433b      	orrs	r3, r7
 800e404:	6801      	ldr	r1, [r0, #0]
 800e406:	4333      	orrs	r3, r6
 800e408:	432b      	orrs	r3, r5
 800e40a:	4323      	orrs	r3, r4
 800e40c:	f36f 010e 	bfc	r1, #0, #15
 800e410:	430b      	orrs	r3, r1
 800e412:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800e414:	2000      	movs	r0, #0
 800e416:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800e41a:	6801      	ldr	r1, [r0, #0]
 800e41c:	ea43 030e 	orr.w	r3, r3, lr
 800e420:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 800e424:	430b      	orrs	r3, r1
 800e426:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800e428:	ea42 030c 	orr.w	r3, r2, ip
 800e42c:	6841      	ldr	r1, [r0, #4]
 800e42e:	433b      	orrs	r3, r7
 800e430:	4333      	orrs	r3, r6
 800e432:	432b      	orrs	r3, r5
 800e434:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 800e438:	4323      	orrs	r3, r4
 800e43a:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 800e43e:	4313      	orrs	r3, r2
 800e440:	6043      	str	r3, [r0, #4]
 800e442:	e7e7      	b.n	800e414 <FMC_SDRAM_Init+0x3c>

0800e444 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800e444:	68cb      	ldr	r3, [r1, #12]
 800e446:	f103 3cff 	add.w	ip, r3, #4294967295
 800e44a:	694b      	ldr	r3, [r1, #20]
{
 800e44c:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800e44e:	684c      	ldr	r4, [r1, #4]
 800e450:	688f      	ldr	r7, [r1, #8]
 800e452:	690e      	ldr	r6, [r1, #16]
 800e454:	698d      	ldr	r5, [r1, #24]
 800e456:	6809      	ldr	r1, [r1, #0]
 800e458:	3b01      	subs	r3, #1
 800e45a:	051b      	lsls	r3, r3, #20
 800e45c:	3c01      	subs	r4, #1
 800e45e:	3f01      	subs	r7, #1
 800e460:	3e01      	subs	r6, #1
 800e462:	3d01      	subs	r5, #1
 800e464:	0124      	lsls	r4, r4, #4
 800e466:	023f      	lsls	r7, r7, #8
 800e468:	0436      	lsls	r6, r6, #16
 800e46a:	062d      	lsls	r5, r5, #24
 800e46c:	3901      	subs	r1, #1
 800e46e:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800e472:	b95a      	cbnz	r2, 800e48c <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800e474:	430b      	orrs	r3, r1
 800e476:	4323      	orrs	r3, r4
 800e478:	6882      	ldr	r2, [r0, #8]
 800e47a:	433b      	orrs	r3, r7
 800e47c:	4333      	orrs	r3, r6
 800e47e:	432b      	orrs	r3, r5
 800e480:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800e484:	4313      	orrs	r3, r2
 800e486:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800e488:	2000      	movs	r0, #0
 800e48a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800e48c:	6882      	ldr	r2, [r0, #8]
 800e48e:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800e492:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 800e496:	4313      	orrs	r3, r2
 800e498:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800e49a:	ea44 0307 	orr.w	r3, r4, r7
 800e49e:	68c2      	ldr	r2, [r0, #12]
 800e4a0:	430b      	orrs	r3, r1
 800e4a2:	4333      	orrs	r3, r6
 800e4a4:	432b      	orrs	r3, r5
 800e4a6:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 800e4aa:	4313      	orrs	r3, r2
 800e4ac:	60c3      	str	r3, [r0, #12]
 800e4ae:	e7eb      	b.n	800e488 <FMC_SDRAM_Timing_Init+0x44>

0800e4b0 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800e4b0:	b570      	push	{r4, r5, r6, lr}
 800e4b2:	4604      	mov	r4, r0
 800e4b4:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800e4b6:	6902      	ldr	r2, [r0, #16]
 800e4b8:	e9d1 3000 	ldrd	r3, r0, [r1]
 800e4bc:	4303      	orrs	r3, r0
 800e4be:	68c8      	ldr	r0, [r1, #12]
 800e4c0:	f36f 0215 	bfc	r2, #0, #22
 800e4c4:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800e4c8:	4313      	orrs	r3, r2
 800e4ca:	688a      	ldr	r2, [r1, #8]
 800e4cc:	3a01      	subs	r2, #1
 800e4ce:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800e4d2:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800e4d4:	f7fd fdce 	bl	800c074 <HAL_GetTick>
 800e4d8:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800e4da:	69a0      	ldr	r0, [r4, #24]
 800e4dc:	f010 0020 	ands.w	r0, r0, #32
 800e4e0:	d003      	beq.n	800e4ea <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800e4e2:	1c6b      	adds	r3, r5, #1
 800e4e4:	d0f9      	beq.n	800e4da <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800e4e6:	b90d      	cbnz	r5, 800e4ec <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 800e4e8:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 800e4ea:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800e4ec:	f7fd fdc2 	bl	800c074 <HAL_GetTick>
 800e4f0:	1b80      	subs	r0, r0, r6
 800e4f2:	42a8      	cmp	r0, r5
 800e4f4:	d9f1      	bls.n	800e4da <FMC_SDRAM_SendCommand+0x2a>
 800e4f6:	e7f7      	b.n	800e4e8 <FMC_SDRAM_SendCommand+0x38>

0800e4f8 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800e4f8:	6943      	ldr	r3, [r0, #20]
 800e4fa:	f36f 034d 	bfc	r3, #1, #13
 800e4fe:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 800e502:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 800e504:	2000      	movs	r0, #0
 800e506:	4770      	bx	lr

0800e508 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800e508:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800e50a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e50e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800e510:	f001 fdf4 	bl	80100fc <xTaskGetSchedulerState>
 800e514:	2801      	cmp	r0, #1
 800e516:	d003      	beq.n	800e520 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800e518:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800e51c:	f000 bbe2 	b.w	800ece4 <xPortSysTickHandler>
}
 800e520:	bd08      	pop	{r3, pc}
	...

0800e524 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800e524:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800e528:	b92b      	cbnz	r3, 800e536 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800e52a:	4b06      	ldr	r3, [pc, #24]	@ (800e544 <osKernelInitialize+0x20>)
 800e52c:	6818      	ldr	r0, [r3, #0]
 800e52e:	b928      	cbnz	r0, 800e53c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800e530:	2201      	movs	r2, #1
 800e532:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800e534:	4770      	bx	lr
    stat = osErrorISR;
 800e536:	f06f 0005 	mvn.w	r0, #5
 800e53a:	4770      	bx	lr
    } else {
      stat = osError;
 800e53c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800e540:	4770      	bx	lr
 800e542:	bf00      	nop
 800e544:	200038ac 	.word	0x200038ac

0800e548 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800e548:	b510      	push	{r4, lr}
 800e54a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800e54e:	b95c      	cbnz	r4, 800e568 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800e550:	4b08      	ldr	r3, [pc, #32]	@ (800e574 <osKernelStart+0x2c>)
 800e552:	681a      	ldr	r2, [r3, #0]
 800e554:	2a01      	cmp	r2, #1
 800e556:	d10a      	bne.n	800e56e <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800e558:	4a07      	ldr	r2, [pc, #28]	@ (800e578 <osKernelStart+0x30>)
 800e55a:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800e55c:	2202      	movs	r2, #2
 800e55e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800e560:	f001 fb4a 	bl	800fbf8 <vTaskStartScheduler>
      stat = osOK;
 800e564:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800e566:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800e568:	f06f 0005 	mvn.w	r0, #5
 800e56c:	e7fb      	b.n	800e566 <osKernelStart+0x1e>
      stat = osError;
 800e56e:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800e572:	e7f8      	b.n	800e566 <osKernelStart+0x1e>
 800e574:	200038ac 	.word	0x200038ac
 800e578:	e000ed00 	.word	0xe000ed00

0800e57c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800e57c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e57e:	b087      	sub	sp, #28
 800e580:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800e582:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800e584:	460b      	mov	r3, r1
  hTask = NULL;
 800e586:	9205      	str	r2, [sp, #20]
 800e588:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800e58c:	b9fa      	cbnz	r2, 800e5ce <osThreadNew+0x52>
 800e58e:	b1f0      	cbz	r0, 800e5ce <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800e590:	b354      	cbz	r4, 800e5e8 <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800e592:	69a5      	ldr	r5, [r4, #24]
 800e594:	b125      	cbz	r5, 800e5a0 <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800e596:	1e69      	subs	r1, r5, #1
 800e598:	2937      	cmp	r1, #55	@ 0x37
 800e59a:	d902      	bls.n	800e5a2 <osThreadNew+0x26>
        return (NULL);
 800e59c:	2000      	movs	r0, #0
 800e59e:	e017      	b.n	800e5d0 <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 800e5a0:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800e5a2:	6862      	ldr	r2, [r4, #4]
 800e5a4:	07d2      	lsls	r2, r2, #31
 800e5a6:	d4f9      	bmi.n	800e59c <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 800e5a8:	6966      	ldr	r6, [r4, #20]
 800e5aa:	b19e      	cbz	r6, 800e5d4 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800e5ac:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800e5ae:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 800e5b2:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800e5b4:	b187      	cbz	r7, 800e5d8 <osThreadNew+0x5c>
 800e5b6:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 800e5ba:	d908      	bls.n	800e5ce <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800e5bc:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800e5be:	b134      	cbz	r4, 800e5ce <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800e5c0:	b12e      	cbz	r6, 800e5ce <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800e5c2:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800e5c6:	9500      	str	r5, [sp, #0]
 800e5c8:	f001 faaf 	bl	800fb2a <xTaskCreateStatic>
 800e5cc:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800e5ce:	9805      	ldr	r0, [sp, #20]
}
 800e5d0:	b007      	add	sp, #28
 800e5d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800e5d4:	2280      	movs	r2, #128	@ 0x80
 800e5d6:	e7ea      	b.n	800e5ae <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800e5d8:	f1bc 0f00 	cmp.w	ip, #0
 800e5dc:	d1f7      	bne.n	800e5ce <osThreadNew+0x52>
 800e5de:	6924      	ldr	r4, [r4, #16]
 800e5e0:	2c00      	cmp	r4, #0
 800e5e2:	d1f4      	bne.n	800e5ce <osThreadNew+0x52>
 800e5e4:	460c      	mov	r4, r1
 800e5e6:	e001      	b.n	800e5ec <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 800e5e8:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 800e5ea:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800e5ec:	a905      	add	r1, sp, #20
 800e5ee:	e9cd 5100 	strd	r5, r1, [sp]
 800e5f2:	b292      	uxth	r2, r2
 800e5f4:	4621      	mov	r1, r4
 800e5f6:	f001 fad0 	bl	800fb9a <xTaskCreate>
 800e5fa:	2801      	cmp	r0, #1
            hTask = NULL;
 800e5fc:	bf1c      	itt	ne
 800e5fe:	2300      	movne	r3, #0
 800e600:	9305      	strne	r3, [sp, #20]
 800e602:	e7e4      	b.n	800e5ce <osThreadNew+0x52>

0800e604 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800e604:	b508      	push	{r3, lr}
 800e606:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800e60a:	b922      	cbnz	r2, 800e616 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800e60c:	b108      	cbz	r0, 800e612 <osDelay+0xe>
      vTaskDelay(ticks);
 800e60e:	f001 fc51 	bl	800feb4 <vTaskDelay>
    stat = osOK;
 800e612:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800e614:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 800e616:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 800e61a:	e7fb      	b.n	800e614 <osDelay+0x10>

0800e61c <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800e61c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e61e:	4604      	mov	r4, r0
 800e620:	460e      	mov	r6, r1
 800e622:	4615      	mov	r5, r2
 800e624:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800e628:	b942      	cbnz	r2, 800e63c <osSemaphoreNew+0x20>
 800e62a:	b138      	cbz	r0, 800e63c <osSemaphoreNew+0x20>
 800e62c:	4288      	cmp	r0, r1
 800e62e:	d305      	bcc.n	800e63c <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 800e630:	b155      	cbz	r5, 800e648 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800e632:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800e636:	b12b      	cbz	r3, 800e644 <osSemaphoreNew+0x28>
 800e638:	2f4f      	cmp	r7, #79	@ 0x4f
 800e63a:	d822      	bhi.n	800e682 <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 800e63c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800e63e:	4620      	mov	r0, r4
 800e640:	b003      	add	sp, #12
 800e642:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800e644:	2f00      	cmp	r7, #0
 800e646:	d1f9      	bne.n	800e63c <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 800e648:	2c01      	cmp	r4, #1
 800e64a:	d00c      	beq.n	800e666 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800e64c:	4620      	mov	r0, r4
 800e64e:	4631      	mov	r1, r6
 800e650:	f000 fd80 	bl	800f154 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800e654:	4604      	mov	r4, r0
 800e656:	2800      	cmp	r0, #0
 800e658:	d0f0      	beq.n	800e63c <osSemaphoreNew+0x20>
        if (attr != NULL) {
 800e65a:	b985      	cbnz	r5, 800e67e <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 800e65c:	4629      	mov	r1, r5
 800e65e:	4620      	mov	r0, r4
 800e660:	f001 f89e 	bl	800f7a0 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800e664:	e7eb      	b.n	800e63e <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 800e666:	2203      	movs	r2, #3
 800e668:	2100      	movs	r1, #0
 800e66a:	2001      	movs	r0, #1
 800e66c:	f000 fd29 	bl	800f0c2 <xQueueGenericCreate>
 800e670:	e00e      	b.n	800e690 <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800e672:	461a      	mov	r2, r3
 800e674:	f000 fd4c 	bl	800f110 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800e678:	4604      	mov	r4, r0
 800e67a:	2800      	cmp	r0, #0
 800e67c:	d0de      	beq.n	800e63c <osSemaphoreNew+0x20>
          name = attr->name;
 800e67e:	682d      	ldr	r5, [r5, #0]
 800e680:	e7ec      	b.n	800e65c <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 800e682:	2801      	cmp	r0, #1
 800e684:	d1f5      	bne.n	800e672 <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800e686:	2103      	movs	r1, #3
 800e688:	9100      	str	r1, [sp, #0]
 800e68a:	4611      	mov	r1, r2
 800e68c:	f000 fccb 	bl	800f026 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800e690:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800e692:	2800      	cmp	r0, #0
 800e694:	d0d2      	beq.n	800e63c <osSemaphoreNew+0x20>
 800e696:	2e00      	cmp	r6, #0
 800e698:	d0df      	beq.n	800e65a <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800e69a:	2300      	movs	r3, #0
 800e69c:	461a      	mov	r2, r3
 800e69e:	4619      	mov	r1, r3
 800e6a0:	f000 fd76 	bl	800f190 <xQueueGenericSend>
 800e6a4:	2801      	cmp	r0, #1
 800e6a6:	d0d8      	beq.n	800e65a <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 800e6a8:	4620      	mov	r0, r4
 800e6aa:	f001 f8a3 	bl	800f7f4 <vQueueDelete>
      if (hSemaphore != NULL) {
 800e6ae:	e7c5      	b.n	800e63c <osSemaphoreNew+0x20>

0800e6b0 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800e6b0:	b513      	push	{r0, r1, r4, lr}
 800e6b2:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800e6b4:	b328      	cbz	r0, 800e702 <osSemaphoreAcquire+0x52>
 800e6b6:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800e6ba:	b1cb      	cbz	r3, 800e6f0 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800e6bc:	bb09      	cbnz	r1, 800e702 <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800e6be:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800e6c0:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800e6c2:	f001 f820 	bl	800f706 <xQueueReceiveFromISR>
 800e6c6:	2801      	cmp	r0, #1
 800e6c8:	d003      	beq.n	800e6d2 <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 800e6ca:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800e6ce:	b002      	add	sp, #8
 800e6d0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800e6d2:	9b01      	ldr	r3, [sp, #4]
 800e6d4:	b90b      	cbnz	r3, 800e6da <osSemaphoreAcquire+0x2a>
  stat = osOK;
 800e6d6:	2000      	movs	r0, #0
 800e6d8:	e7f9      	b.n	800e6ce <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 800e6da:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e6de:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e6e2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e6e6:	f3bf 8f4f 	dsb	sy
 800e6ea:	f3bf 8f6f 	isb	sy
 800e6ee:	e7f2      	b.n	800e6d6 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800e6f0:	f000 ff4c 	bl	800f58c <xQueueSemaphoreTake>
 800e6f4:	2801      	cmp	r0, #1
 800e6f6:	d0ee      	beq.n	800e6d6 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 800e6f8:	2c00      	cmp	r4, #0
 800e6fa:	d0e6      	beq.n	800e6ca <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 800e6fc:	f06f 0001 	mvn.w	r0, #1
 800e700:	e7e5      	b.n	800e6ce <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 800e702:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800e706:	e7e2      	b.n	800e6ce <osSemaphoreAcquire+0x1e>

0800e708 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800e708:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800e70a:	b318      	cbz	r0, 800e754 <osSemaphoreRelease+0x4c>
 800e70c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800e710:	b1cb      	cbz	r3, 800e746 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 800e712:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800e714:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800e716:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800e718:	f000 fe49 	bl	800f3ae <xQueueGiveFromISR>
 800e71c:	2801      	cmp	r0, #1
 800e71e:	d004      	beq.n	800e72a <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800e720:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 800e724:	b003      	add	sp, #12
 800e726:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 800e72a:	9b01      	ldr	r3, [sp, #4]
 800e72c:	b14b      	cbz	r3, 800e742 <osSemaphoreRelease+0x3a>
 800e72e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e732:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e736:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e73a:	f3bf 8f4f 	dsb	sy
 800e73e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800e742:	2000      	movs	r0, #0
 800e744:	e7ee      	b.n	800e724 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800e746:	461a      	mov	r2, r3
 800e748:	4619      	mov	r1, r3
 800e74a:	f000 fd21 	bl	800f190 <xQueueGenericSend>
 800e74e:	2801      	cmp	r0, #1
 800e750:	d0f7      	beq.n	800e742 <osSemaphoreRelease+0x3a>
 800e752:	e7e5      	b.n	800e720 <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 800e754:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800e758:	e7e4      	b.n	800e724 <osSemaphoreRelease+0x1c>

0800e75a <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800e75a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e75c:	4605      	mov	r5, r0
 800e75e:	460e      	mov	r6, r1
 800e760:	4614      	mov	r4, r2
 800e762:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800e766:	b11f      	cbz	r7, 800e770 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800e768:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800e76a:	4628      	mov	r0, r5
 800e76c:	b003      	add	sp, #12
 800e76e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800e770:	2800      	cmp	r0, #0
 800e772:	d0f9      	beq.n	800e768 <osMessageQueueNew+0xe>
 800e774:	2900      	cmp	r1, #0
 800e776:	d0f7      	beq.n	800e768 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800e778:	b1da      	cbz	r2, 800e7b2 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800e77a:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800e77e:	b183      	cbz	r3, 800e7a2 <osMessageQueueNew+0x48>
 800e780:	2a4f      	cmp	r2, #79	@ 0x4f
 800e782:	d9f1      	bls.n	800e768 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800e784:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800e786:	2a00      	cmp	r2, #0
 800e788:	d0ee      	beq.n	800e768 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800e78a:	6966      	ldr	r6, [r4, #20]
 800e78c:	434d      	muls	r5, r1
 800e78e:	42ae      	cmp	r6, r5
 800e790:	d3ea      	bcc.n	800e768 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800e792:	9700      	str	r7, [sp, #0]
 800e794:	f000 fc47 	bl	800f026 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800e798:	4605      	mov	r5, r0
 800e79a:	2800      	cmp	r0, #0
 800e79c:	d0e4      	beq.n	800e768 <osMessageQueueNew+0xe>
        name = attr->name;
 800e79e:	6824      	ldr	r4, [r4, #0]
 800e7a0:	e011      	b.n	800e7c6 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800e7a2:	2a00      	cmp	r2, #0
 800e7a4:	d1e0      	bne.n	800e768 <osMessageQueueNew+0xe>
 800e7a6:	6923      	ldr	r3, [r4, #16]
 800e7a8:	2b00      	cmp	r3, #0
 800e7aa:	d1dd      	bne.n	800e768 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800e7ac:	6963      	ldr	r3, [r4, #20]
 800e7ae:	2b00      	cmp	r3, #0
 800e7b0:	d1da      	bne.n	800e768 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800e7b2:	4628      	mov	r0, r5
 800e7b4:	2200      	movs	r2, #0
 800e7b6:	4631      	mov	r1, r6
 800e7b8:	f000 fc83 	bl	800f0c2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800e7bc:	4605      	mov	r5, r0
 800e7be:	2800      	cmp	r0, #0
 800e7c0:	d0d2      	beq.n	800e768 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800e7c2:	2c00      	cmp	r4, #0
 800e7c4:	d1eb      	bne.n	800e79e <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800e7c6:	4621      	mov	r1, r4
 800e7c8:	4628      	mov	r0, r5
 800e7ca:	f000 ffe9 	bl	800f7a0 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800e7ce:	e7cc      	b.n	800e76a <osMessageQueueNew+0x10>

0800e7d0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800e7d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e7d2:	461c      	mov	r4, r3
 800e7d4:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800e7d8:	b1de      	cbz	r6, 800e812 <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800e7da:	b338      	cbz	r0, 800e82c <osMessageQueuePut+0x5c>
 800e7dc:	b331      	cbz	r1, 800e82c <osMessageQueuePut+0x5c>
 800e7de:	bb2b      	cbnz	r3, 800e82c <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800e7e0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800e7e2:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800e7e4:	f000 fd86 	bl	800f2f4 <xQueueGenericSendFromISR>
 800e7e8:	2801      	cmp	r0, #1
 800e7ea:	d003      	beq.n	800e7f4 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 800e7ec:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800e7f0:	b002      	add	sp, #8
 800e7f2:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800e7f4:	9b01      	ldr	r3, [sp, #4]
 800e7f6:	b90b      	cbnz	r3, 800e7fc <osMessageQueuePut+0x2c>
  stat = osOK;
 800e7f8:	2000      	movs	r0, #0
 800e7fa:	e7f9      	b.n	800e7f0 <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 800e7fc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e800:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e804:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e808:	f3bf 8f4f 	dsb	sy
 800e80c:	f3bf 8f6f 	isb	sy
 800e810:	e7f2      	b.n	800e7f8 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800e812:	b158      	cbz	r0, 800e82c <osMessageQueuePut+0x5c>
 800e814:	b151      	cbz	r1, 800e82c <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800e816:	4633      	mov	r3, r6
 800e818:	4622      	mov	r2, r4
 800e81a:	f000 fcb9 	bl	800f190 <xQueueGenericSend>
 800e81e:	2801      	cmp	r0, #1
 800e820:	d0ea      	beq.n	800e7f8 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 800e822:	2c00      	cmp	r4, #0
 800e824:	d0e2      	beq.n	800e7ec <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 800e826:	f06f 0001 	mvn.w	r0, #1
 800e82a:	e7e1      	b.n	800e7f0 <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 800e82c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800e830:	e7de      	b.n	800e7f0 <osMessageQueuePut+0x20>

0800e832 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800e832:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e834:	461c      	mov	r4, r3
 800e836:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800e83a:	b1db      	cbz	r3, 800e874 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800e83c:	b330      	cbz	r0, 800e88c <osMessageQueueGet+0x5a>
 800e83e:	b329      	cbz	r1, 800e88c <osMessageQueueGet+0x5a>
 800e840:	bb24      	cbnz	r4, 800e88c <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800e842:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800e844:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800e846:	f000 ff5e 	bl	800f706 <xQueueReceiveFromISR>
 800e84a:	2801      	cmp	r0, #1
 800e84c:	d003      	beq.n	800e856 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 800e84e:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800e852:	b003      	add	sp, #12
 800e854:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800e856:	9b01      	ldr	r3, [sp, #4]
 800e858:	b90b      	cbnz	r3, 800e85e <osMessageQueueGet+0x2c>
  stat = osOK;
 800e85a:	2000      	movs	r0, #0
 800e85c:	e7f9      	b.n	800e852 <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 800e85e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800e862:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800e866:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800e86a:	f3bf 8f4f 	dsb	sy
 800e86e:	f3bf 8f6f 	isb	sy
 800e872:	e7f2      	b.n	800e85a <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800e874:	b150      	cbz	r0, 800e88c <osMessageQueueGet+0x5a>
 800e876:	b149      	cbz	r1, 800e88c <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800e878:	4622      	mov	r2, r4
 800e87a:	f000 fde9 	bl	800f450 <xQueueReceive>
 800e87e:	2801      	cmp	r0, #1
 800e880:	d0eb      	beq.n	800e85a <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 800e882:	2c00      	cmp	r4, #0
 800e884:	d0e3      	beq.n	800e84e <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 800e886:	f06f 0001 	mvn.w	r0, #1
 800e88a:	e7e2      	b.n	800e852 <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 800e88c:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800e890:	e7df      	b.n	800e852 <osMessageQueueGet+0x20>
	...

0800e894 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800e894:	4b03      	ldr	r3, [pc, #12]	@ (800e8a4 <vApplicationGetIdleTaskMemory+0x10>)
 800e896:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800e898:	4b03      	ldr	r3, [pc, #12]	@ (800e8a8 <vApplicationGetIdleTaskMemory+0x14>)
 800e89a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800e89c:	2380      	movs	r3, #128	@ 0x80
 800e89e:	6013      	str	r3, [r2, #0]
}
 800e8a0:	4770      	bx	lr
 800e8a2:	bf00      	nop
 800e8a4:	2000384c 	.word	0x2000384c
 800e8a8:	2000364c 	.word	0x2000364c

0800e8ac <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800e8ac:	4b03      	ldr	r3, [pc, #12]	@ (800e8bc <vApplicationGetTimerTaskMemory+0x10>)
 800e8ae:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800e8b0:	4b03      	ldr	r3, [pc, #12]	@ (800e8c0 <vApplicationGetTimerTaskMemory+0x14>)
 800e8b2:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800e8b4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800e8b8:	6013      	str	r3, [r2, #0]
}
 800e8ba:	4770      	bx	lr
 800e8bc:	200035ec 	.word	0x200035ec
 800e8c0:	200031ec 	.word	0x200031ec

0800e8c4 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800e8c4:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e8c6:	4b10      	ldr	r3, [pc, #64]	@ (800e908 <prvInsertBlockIntoFreeList+0x44>)
 800e8c8:	461a      	mov	r2, r3
 800e8ca:	681b      	ldr	r3, [r3, #0]
 800e8cc:	4283      	cmp	r3, r0
 800e8ce:	d3fb      	bcc.n	800e8c8 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800e8d0:	6854      	ldr	r4, [r2, #4]
 800e8d2:	1911      	adds	r1, r2, r4
 800e8d4:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e8d6:	bf01      	itttt	eq
 800e8d8:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 800e8da:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e8dc:	1909      	addeq	r1, r1, r4
 800e8de:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e8e0:	6844      	ldr	r4, [r0, #4]
 800e8e2:	1901      	adds	r1, r0, r4
 800e8e4:	428b      	cmp	r3, r1
 800e8e6:	d10c      	bne.n	800e902 <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800e8e8:	4908      	ldr	r1, [pc, #32]	@ (800e90c <prvInsertBlockIntoFreeList+0x48>)
 800e8ea:	6809      	ldr	r1, [r1, #0]
 800e8ec:	428b      	cmp	r3, r1
 800e8ee:	d003      	beq.n	800e8f8 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e8f0:	6859      	ldr	r1, [r3, #4]
 800e8f2:	4421      	add	r1, r4
 800e8f4:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e8f6:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 800e8f8:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800e8fa:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800e8fc:	bf18      	it	ne
 800e8fe:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e900:	bd10      	pop	{r4, pc}
 800e902:	4619      	mov	r1, r3
 800e904:	e7f8      	b.n	800e8f8 <prvInsertBlockIntoFreeList+0x34>
 800e906:	bf00      	nop
 800e908:	200038c8 	.word	0x200038c8
 800e90c:	200038c4 	.word	0x200038c4

0800e910 <pvPortMalloc>:
{
 800e910:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e914:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800e916:	f001 f9b5 	bl	800fc84 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800e91a:	4942      	ldr	r1, [pc, #264]	@ (800ea24 <pvPortMalloc+0x114>)
 800e91c:	4d42      	ldr	r5, [pc, #264]	@ (800ea28 <pvPortMalloc+0x118>)
 800e91e:	680b      	ldr	r3, [r1, #0]
 800e920:	bb0b      	cbnz	r3, 800e966 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800e922:	4a42      	ldr	r2, [pc, #264]	@ (800ea2c <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800e924:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800e926:	bf1f      	itttt	ne
 800e928:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e92a:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800e92e:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800e932:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800e934:	bf0c      	ite	eq
 800e936:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e93a:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800e93c:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e93e:	4e3c      	ldr	r6, [pc, #240]	@ (800ea30 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800e940:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e942:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 800e946:	2000      	movs	r0, #0
 800e948:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e94a:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800e94c:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800e950:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800e952:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 800e956:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e958:	4b36      	ldr	r3, [pc, #216]	@ (800ea34 <pvPortMalloc+0x124>)
 800e95a:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e95c:	4b36      	ldr	r3, [pc, #216]	@ (800ea38 <pvPortMalloc+0x128>)
 800e95e:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e960:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800e964:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800e966:	682e      	ldr	r6, [r5, #0]
 800e968:	4226      	tst	r6, r4
 800e96a:	d155      	bne.n	800ea18 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800e96c:	2c00      	cmp	r4, #0
 800e96e:	d046      	beq.n	800e9fe <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800e970:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800e974:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800e976:	bf1c      	itt	ne
 800e978:	f023 0307 	bicne.w	r3, r3, #7
 800e97c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800e97e:	2b00      	cmp	r3, #0
 800e980:	d04a      	beq.n	800ea18 <pvPortMalloc+0x108>
 800e982:	4f2d      	ldr	r7, [pc, #180]	@ (800ea38 <pvPortMalloc+0x128>)
 800e984:	683c      	ldr	r4, [r7, #0]
 800e986:	429c      	cmp	r4, r3
 800e988:	d346      	bcc.n	800ea18 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800e98a:	4a29      	ldr	r2, [pc, #164]	@ (800ea30 <pvPortMalloc+0x120>)
 800e98c:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800e98e:	6868      	ldr	r0, [r5, #4]
 800e990:	4298      	cmp	r0, r3
 800e992:	d204      	bcs.n	800e99e <pvPortMalloc+0x8e>
 800e994:	f8d5 c000 	ldr.w	ip, [r5]
 800e998:	f1bc 0f00 	cmp.w	ip, #0
 800e99c:	d115      	bne.n	800e9ca <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800e99e:	6809      	ldr	r1, [r1, #0]
 800e9a0:	42a9      	cmp	r1, r5
 800e9a2:	d039      	beq.n	800ea18 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800e9a4:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800e9a6:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800e9aa:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800e9ac:	1ac2      	subs	r2, r0, r3
 800e9ae:	2a10      	cmp	r2, #16
 800e9b0:	d912      	bls.n	800e9d8 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800e9b2:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800e9b4:	0741      	lsls	r1, r0, #29
 800e9b6:	d00b      	beq.n	800e9d0 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800e9b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800e9bc:	f383 8811 	msr	BASEPRI, r3
 800e9c0:	f3bf 8f6f 	isb	sy
 800e9c4:	f3bf 8f4f 	dsb	sy
 800e9c8:	e7fe      	b.n	800e9c8 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 800e9ca:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 800e9cc:	4665      	mov	r5, ip
 800e9ce:	e7de      	b.n	800e98e <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800e9d0:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800e9d2:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800e9d4:	f7ff ff76 	bl	800e8c4 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e9d8:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e9da:	4916      	ldr	r1, [pc, #88]	@ (800ea34 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e9dc:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800e9de:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 800e9e0:	4a16      	ldr	r2, [pc, #88]	@ (800ea3c <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e9e2:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e9e4:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 800e9e6:	2300      	movs	r3, #0
 800e9e8:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800e9ea:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800e9ec:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e9ee:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 800e9f0:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800e9f4:	bf38      	it	cc
 800e9f6:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 800e9f8:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800e9fa:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800e9fe:	f001 f9e5 	bl	800fdcc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800ea02:	0763      	lsls	r3, r4, #29
 800ea04:	d00a      	beq.n	800ea1c <pvPortMalloc+0x10c>
 800ea06:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ea0a:	f383 8811 	msr	BASEPRI, r3
 800ea0e:	f3bf 8f6f 	isb	sy
 800ea12:	f3bf 8f4f 	dsb	sy
 800ea16:	e7fe      	b.n	800ea16 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800ea18:	2400      	movs	r4, #0
 800ea1a:	e7f0      	b.n	800e9fe <pvPortMalloc+0xee>
}
 800ea1c:	4620      	mov	r0, r4
 800ea1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea22:	bf00      	nop
 800ea24:	200038c4 	.word	0x200038c4
 800ea28:	200038b0 	.word	0x200038b0
 800ea2c:	200038d0 	.word	0x200038d0
 800ea30:	200038c8 	.word	0x200038c8
 800ea34:	200038bc 	.word	0x200038bc
 800ea38:	200038c0 	.word	0x200038c0
 800ea3c:	200038b8 	.word	0x200038b8

0800ea40 <vPortFree>:
{
 800ea40:	b510      	push	{r4, lr}
	if( pv != NULL )
 800ea42:	4604      	mov	r4, r0
 800ea44:	b390      	cbz	r0, 800eaac <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800ea46:	4a1a      	ldr	r2, [pc, #104]	@ (800eab0 <vPortFree+0x70>)
 800ea48:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800ea4c:	6812      	ldr	r2, [r2, #0]
 800ea4e:	4213      	tst	r3, r2
 800ea50:	d108      	bne.n	800ea64 <vPortFree+0x24>
 800ea52:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ea56:	f383 8811 	msr	BASEPRI, r3
 800ea5a:	f3bf 8f6f 	isb	sy
 800ea5e:	f3bf 8f4f 	dsb	sy
 800ea62:	e7fe      	b.n	800ea62 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800ea64:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800ea68:	b141      	cbz	r1, 800ea7c <vPortFree+0x3c>
 800ea6a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ea6e:	f383 8811 	msr	BASEPRI, r3
 800ea72:	f3bf 8f6f 	isb	sy
 800ea76:	f3bf 8f4f 	dsb	sy
 800ea7a:	e7fe      	b.n	800ea7a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800ea7c:	ea23 0302 	bic.w	r3, r3, r2
 800ea80:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800ea84:	f001 f8fe 	bl	800fc84 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ea88:	4a0a      	ldr	r2, [pc, #40]	@ (800eab4 <vPortFree+0x74>)
 800ea8a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ea8e:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800ea90:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800ea94:	440b      	add	r3, r1
 800ea96:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800ea98:	f7ff ff14 	bl	800e8c4 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800ea9c:	4a06      	ldr	r2, [pc, #24]	@ (800eab8 <vPortFree+0x78>)
 800ea9e:	6813      	ldr	r3, [r2, #0]
}
 800eaa0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800eaa4:	3301      	adds	r3, #1
 800eaa6:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800eaa8:	f001 b990 	b.w	800fdcc <xTaskResumeAll>
}
 800eaac:	bd10      	pop	{r4, pc}
 800eaae:	bf00      	nop
 800eab0:	200038b0 	.word	0x200038b0
 800eab4:	200038c0 	.word	0x200038c0
 800eab8:	200038b4 	.word	0x200038b4

0800eabc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800eabc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800eac0:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800eac4:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800eac8:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800eaca:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800eacc:	2300      	movs	r3, #0
 800eace:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800ead0:	4770      	bx	lr

0800ead2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800ead2:	2300      	movs	r3, #0
 800ead4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800ead6:	4770      	bx	lr

0800ead8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800ead8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800eada:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800eadc:	689a      	ldr	r2, [r3, #8]
 800eade:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800eae0:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800eae2:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800eae4:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800eae6:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800eae8:	3301      	adds	r3, #1
 800eaea:	6003      	str	r3, [r0, #0]
}
 800eaec:	4770      	bx	lr

0800eaee <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800eaee:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800eaf0:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800eaf2:	1c63      	adds	r3, r4, #1
 800eaf4:	d10a      	bne.n	800eb0c <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800eaf6:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800eaf8:	685a      	ldr	r2, [r3, #4]
 800eafa:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800eafc:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800eafe:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800eb00:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800eb02:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800eb04:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800eb06:	3301      	adds	r3, #1
 800eb08:	6003      	str	r3, [r0, #0]
}
 800eb0a:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800eb0c:	f100 0208 	add.w	r2, r0, #8
 800eb10:	4613      	mov	r3, r2
 800eb12:	6852      	ldr	r2, [r2, #4]
 800eb14:	6815      	ldr	r5, [r2, #0]
 800eb16:	42a5      	cmp	r5, r4
 800eb18:	d9fa      	bls.n	800eb10 <vListInsert+0x22>
 800eb1a:	e7ed      	b.n	800eaf8 <vListInsert+0xa>

0800eb1c <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800eb1c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800eb20:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800eb22:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800eb24:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800eb26:	6859      	ldr	r1, [r3, #4]
 800eb28:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800eb2a:	bf08      	it	eq
 800eb2c:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800eb2e:	2200      	movs	r2, #0
 800eb30:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800eb32:	681a      	ldr	r2, [r3, #0]
 800eb34:	3a01      	subs	r2, #1
 800eb36:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800eb38:	6818      	ldr	r0, [r3, #0]
}
 800eb3a:	4770      	bx	lr

0800eb3c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800eb3c:	4808      	ldr	r0, [pc, #32]	@ (800eb60 <prvPortStartFirstTask+0x24>)
 800eb3e:	6800      	ldr	r0, [r0, #0]
 800eb40:	6800      	ldr	r0, [r0, #0]
 800eb42:	f380 8808 	msr	MSP, r0
 800eb46:	f04f 0000 	mov.w	r0, #0
 800eb4a:	f380 8814 	msr	CONTROL, r0
 800eb4e:	b662      	cpsie	i
 800eb50:	b661      	cpsie	f
 800eb52:	f3bf 8f4f 	dsb	sy
 800eb56:	f3bf 8f6f 	isb	sy
 800eb5a:	df00      	svc	0
 800eb5c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800eb5e:	0000      	.short	0x0000
 800eb60:	e000ed08 	.word	0xe000ed08

0800eb64 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800eb64:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800eb74 <vPortEnableVFP+0x10>
 800eb68:	6801      	ldr	r1, [r0, #0]
 800eb6a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800eb6e:	6001      	str	r1, [r0, #0]
 800eb70:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800eb72:	0000      	.short	0x0000
 800eb74:	e000ed88 	.word	0xe000ed88

0800eb78 <prvTaskExitError>:
{
 800eb78:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800eb7a:	2300      	movs	r3, #0
 800eb7c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800eb7e:	4b0d      	ldr	r3, [pc, #52]	@ (800ebb4 <prvTaskExitError+0x3c>)
 800eb80:	681b      	ldr	r3, [r3, #0]
 800eb82:	3301      	adds	r3, #1
 800eb84:	d008      	beq.n	800eb98 <prvTaskExitError+0x20>
 800eb86:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eb8a:	f383 8811 	msr	BASEPRI, r3
 800eb8e:	f3bf 8f6f 	isb	sy
 800eb92:	f3bf 8f4f 	dsb	sy
 800eb96:	e7fe      	b.n	800eb96 <prvTaskExitError+0x1e>
 800eb98:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800eb9c:	f383 8811 	msr	BASEPRI, r3
 800eba0:	f3bf 8f6f 	isb	sy
 800eba4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800eba8:	9b01      	ldr	r3, [sp, #4]
 800ebaa:	2b00      	cmp	r3, #0
 800ebac:	d0fc      	beq.n	800eba8 <prvTaskExitError+0x30>
}
 800ebae:	b002      	add	sp, #8
 800ebb0:	4770      	bx	lr
 800ebb2:	bf00      	nop
 800ebb4:	2000009c 	.word	0x2000009c

0800ebb8 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ebb8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800ebbc:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ebc0:	4b07      	ldr	r3, [pc, #28]	@ (800ebe0 <pxPortInitialiseStack+0x28>)
 800ebc2:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800ebc6:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ebca:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800ebce:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800ebd2:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ebd6:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800ebda:	3844      	subs	r0, #68	@ 0x44
 800ebdc:	4770      	bx	lr
 800ebde:	bf00      	nop
 800ebe0:	0800eb79 	.word	0x0800eb79
	...

0800ebf0 <SVC_Handler>:
	__asm volatile (
 800ebf0:	4b07      	ldr	r3, [pc, #28]	@ (800ec10 <pxCurrentTCBConst2>)
 800ebf2:	6819      	ldr	r1, [r3, #0]
 800ebf4:	6808      	ldr	r0, [r1, #0]
 800ebf6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebfa:	f380 8809 	msr	PSP, r0
 800ebfe:	f3bf 8f6f 	isb	sy
 800ec02:	f04f 0000 	mov.w	r0, #0
 800ec06:	f380 8811 	msr	BASEPRI, r0
 800ec0a:	4770      	bx	lr
 800ec0c:	f3af 8000 	nop.w

0800ec10 <pxCurrentTCBConst2>:
 800ec10:	20013e10 	.word	0x20013e10

0800ec14 <vPortEnterCritical>:
 800ec14:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ec18:	f383 8811 	msr	BASEPRI, r3
 800ec1c:	f3bf 8f6f 	isb	sy
 800ec20:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800ec24:	4a0a      	ldr	r2, [pc, #40]	@ (800ec50 <vPortEnterCritical+0x3c>)
 800ec26:	6813      	ldr	r3, [r2, #0]
 800ec28:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800ec2a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800ec2c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800ec2e:	d10e      	bne.n	800ec4e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800ec30:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ec34:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 800ec38:	b2db      	uxtb	r3, r3
 800ec3a:	b143      	cbz	r3, 800ec4e <vPortEnterCritical+0x3a>
 800ec3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ec40:	f383 8811 	msr	BASEPRI, r3
 800ec44:	f3bf 8f6f 	isb	sy
 800ec48:	f3bf 8f4f 	dsb	sy
 800ec4c:	e7fe      	b.n	800ec4c <vPortEnterCritical+0x38>
}
 800ec4e:	4770      	bx	lr
 800ec50:	2000009c 	.word	0x2000009c

0800ec54 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800ec54:	4a08      	ldr	r2, [pc, #32]	@ (800ec78 <vPortExitCritical+0x24>)
 800ec56:	6813      	ldr	r3, [r2, #0]
 800ec58:	b943      	cbnz	r3, 800ec6c <vPortExitCritical+0x18>
 800ec5a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ec5e:	f383 8811 	msr	BASEPRI, r3
 800ec62:	f3bf 8f6f 	isb	sy
 800ec66:	f3bf 8f4f 	dsb	sy
 800ec6a:	e7fe      	b.n	800ec6a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800ec6c:	3b01      	subs	r3, #1
 800ec6e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800ec70:	b90b      	cbnz	r3, 800ec76 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800ec72:	f383 8811 	msr	BASEPRI, r3
}
 800ec76:	4770      	bx	lr
 800ec78:	2000009c 	.word	0x2000009c
 800ec7c:	00000000 	.word	0x00000000

0800ec80 <PendSV_Handler>:
	__asm volatile
 800ec80:	f3ef 8009 	mrs	r0, PSP
 800ec84:	f3bf 8f6f 	isb	sy
 800ec88:	4b15      	ldr	r3, [pc, #84]	@ (800ece0 <pxCurrentTCBConst>)
 800ec8a:	681a      	ldr	r2, [r3, #0]
 800ec8c:	f01e 0f10 	tst.w	lr, #16
 800ec90:	bf08      	it	eq
 800ec92:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800ec96:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec9a:	6010      	str	r0, [r2, #0]
 800ec9c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800eca0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800eca4:	f380 8811 	msr	BASEPRI, r0
 800eca8:	f3bf 8f4f 	dsb	sy
 800ecac:	f3bf 8f6f 	isb	sy
 800ecb0:	f001 f924 	bl	800fefc <vTaskSwitchContext>
 800ecb4:	f04f 0000 	mov.w	r0, #0
 800ecb8:	f380 8811 	msr	BASEPRI, r0
 800ecbc:	bc09      	pop	{r0, r3}
 800ecbe:	6819      	ldr	r1, [r3, #0]
 800ecc0:	6808      	ldr	r0, [r1, #0]
 800ecc2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ecc6:	f01e 0f10 	tst.w	lr, #16
 800ecca:	bf08      	it	eq
 800eccc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800ecd0:	f380 8809 	msr	PSP, r0
 800ecd4:	f3bf 8f6f 	isb	sy
 800ecd8:	4770      	bx	lr
 800ecda:	bf00      	nop
 800ecdc:	f3af 8000 	nop.w

0800ece0 <pxCurrentTCBConst>:
 800ece0:	20013e10 	.word	0x20013e10

0800ece4 <xPortSysTickHandler>:
{
 800ece4:	b508      	push	{r3, lr}
	__asm volatile
 800ece6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ecea:	f383 8811 	msr	BASEPRI, r3
 800ecee:	f3bf 8f6f 	isb	sy
 800ecf2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800ecf6:	f000 ffd3 	bl	800fca0 <xTaskIncrementTick>
 800ecfa:	b128      	cbz	r0, 800ed08 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800ecfc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ed00:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ed04:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 800ed08:	2300      	movs	r3, #0
 800ed0a:	f383 8811 	msr	BASEPRI, r3
}
 800ed0e:	bd08      	pop	{r3, pc}

0800ed10 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800ed10:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 800ed14:	2300      	movs	r3, #0
 800ed16:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800ed18:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ed1a:	4b05      	ldr	r3, [pc, #20]	@ (800ed30 <vPortSetupTimerInterrupt+0x20>)
 800ed1c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800ed20:	681b      	ldr	r3, [r3, #0]
 800ed22:	fbb3 f3f1 	udiv	r3, r3, r1
 800ed26:	3b01      	subs	r3, #1
 800ed28:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800ed2a:	2307      	movs	r3, #7
 800ed2c:	6113      	str	r3, [r2, #16]
}
 800ed2e:	4770      	bx	lr
 800ed30:	20000090 	.word	0x20000090

0800ed34 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800ed34:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 800ed38:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800ed3a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800ed3e:	4a38      	ldr	r2, [pc, #224]	@ (800ee20 <xPortStartScheduler+0xec>)
 800ed40:	4291      	cmp	r1, r2
 800ed42:	d108      	bne.n	800ed56 <xPortStartScheduler+0x22>
	__asm volatile
 800ed44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ed48:	f383 8811 	msr	BASEPRI, r3
 800ed4c:	f3bf 8f6f 	isb	sy
 800ed50:	f3bf 8f4f 	dsb	sy
 800ed54:	e7fe      	b.n	800ed54 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800ed56:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800ed5a:	4b32      	ldr	r3, [pc, #200]	@ (800ee24 <xPortStartScheduler+0xf0>)
 800ed5c:	429a      	cmp	r2, r3
 800ed5e:	d108      	bne.n	800ed72 <xPortStartScheduler+0x3e>
 800ed60:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ed64:	f383 8811 	msr	BASEPRI, r3
 800ed68:	f3bf 8f6f 	isb	sy
 800ed6c:	f3bf 8f4f 	dsb	sy
 800ed70:	e7fe      	b.n	800ed70 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800ed72:	4b2d      	ldr	r3, [pc, #180]	@ (800ee28 <xPortStartScheduler+0xf4>)
 800ed74:	781a      	ldrb	r2, [r3, #0]
 800ed76:	b2d2      	uxtb	r2, r2
 800ed78:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800ed7a:	22ff      	movs	r2, #255	@ 0xff
 800ed7c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800ed7e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ed80:	4a2a      	ldr	r2, [pc, #168]	@ (800ee2c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800ed82:	b2db      	uxtb	r3, r3
 800ed84:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ed88:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800ed8c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800ed90:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800ed92:	4a27      	ldr	r2, [pc, #156]	@ (800ee30 <xPortStartScheduler+0xfc>)
 800ed94:	2307      	movs	r3, #7
 800ed96:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800ed98:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 800ed9c:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800ed9e:	0609      	lsls	r1, r1, #24
 800eda0:	d40a      	bmi.n	800edb8 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800eda2:	2b03      	cmp	r3, #3
 800eda4:	d011      	beq.n	800edca <xPortStartScheduler+0x96>
 800eda6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800edaa:	f383 8811 	msr	BASEPRI, r3
 800edae:	f3bf 8f6f 	isb	sy
 800edb2:	f3bf 8f4f 	dsb	sy
 800edb6:	e7fe      	b.n	800edb6 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 800edb8:	3b01      	subs	r3, #1
 800edba:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800edbc:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800edc0:	005b      	lsls	r3, r3, #1
 800edc2:	b2db      	uxtb	r3, r3
 800edc4:	f88d 3003 	strb.w	r3, [sp, #3]
 800edc8:	e7e6      	b.n	800ed98 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800edca:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800edce:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800edd0:	9b01      	ldr	r3, [sp, #4]
 800edd2:	4a15      	ldr	r2, [pc, #84]	@ (800ee28 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800edd4:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800edd8:	b2db      	uxtb	r3, r3
 800edda:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800eddc:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800ede0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800ede4:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800ede8:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 800edec:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800edf0:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 800edf4:	f7ff ff8c 	bl	800ed10 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800edf8:	4b0e      	ldr	r3, [pc, #56]	@ (800ee34 <xPortStartScheduler+0x100>)
 800edfa:	2500      	movs	r5, #0
 800edfc:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800edfe:	f7ff feb1 	bl	800eb64 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800ee02:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 800ee06:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800ee0a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 800ee0e:	f7ff fe95 	bl	800eb3c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800ee12:	f001 f873 	bl	800fefc <vTaskSwitchContext>
	prvTaskExitError();
 800ee16:	f7ff feaf 	bl	800eb78 <prvTaskExitError>
}
 800ee1a:	4628      	mov	r0, r5
 800ee1c:	b003      	add	sp, #12
 800ee1e:	bd30      	pop	{r4, r5, pc}
 800ee20:	410fc271 	.word	0x410fc271
 800ee24:	410fc270 	.word	0x410fc270
 800ee28:	e000e400 	.word	0xe000e400
 800ee2c:	200138d4 	.word	0x200138d4
 800ee30:	200138d0 	.word	0x200138d0
 800ee34:	2000009c 	.word	0x2000009c

0800ee38 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800ee38:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800ee3c:	2b0f      	cmp	r3, #15
 800ee3e:	d90e      	bls.n	800ee5e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800ee40:	4a11      	ldr	r2, [pc, #68]	@ (800ee88 <vPortValidateInterruptPriority+0x50>)
 800ee42:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800ee44:	4a11      	ldr	r2, [pc, #68]	@ (800ee8c <vPortValidateInterruptPriority+0x54>)
 800ee46:	7812      	ldrb	r2, [r2, #0]
 800ee48:	429a      	cmp	r2, r3
 800ee4a:	d908      	bls.n	800ee5e <vPortValidateInterruptPriority+0x26>
 800ee4c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ee50:	f383 8811 	msr	BASEPRI, r3
 800ee54:	f3bf 8f6f 	isb	sy
 800ee58:	f3bf 8f4f 	dsb	sy
 800ee5c:	e7fe      	b.n	800ee5c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800ee5e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800ee62:	4a0b      	ldr	r2, [pc, #44]	@ (800ee90 <vPortValidateInterruptPriority+0x58>)
 800ee64:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 800ee68:	6812      	ldr	r2, [r2, #0]
 800ee6a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800ee6e:	4293      	cmp	r3, r2
 800ee70:	d908      	bls.n	800ee84 <vPortValidateInterruptPriority+0x4c>
 800ee72:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ee76:	f383 8811 	msr	BASEPRI, r3
 800ee7a:	f3bf 8f6f 	isb	sy
 800ee7e:	f3bf 8f4f 	dsb	sy
 800ee82:	e7fe      	b.n	800ee82 <vPortValidateInterruptPriority+0x4a>
	}
 800ee84:	4770      	bx	lr
 800ee86:	bf00      	nop
 800ee88:	e000e3f0 	.word	0xe000e3f0
 800ee8c:	200138d4 	.word	0x200138d4
 800ee90:	200138d0 	.word	0x200138d0

0800ee94 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800ee94:	b510      	push	{r4, lr}
 800ee96:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800ee98:	f7ff febc 	bl	800ec14 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ee9c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800ee9e:	f7ff fed9 	bl	800ec54 <vPortExitCritical>

	return xReturn;
}
 800eea2:	fab4 f084 	clz	r0, r4
 800eea6:	0940      	lsrs	r0, r0, #5
 800eea8:	bd10      	pop	{r4, pc}

0800eeaa <prvCopyDataToQueue>:
{
 800eeaa:	b570      	push	{r4, r5, r6, lr}
 800eeac:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800eeae:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eeb0:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 800eeb2:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800eeb4:	b942      	cbnz	r2, 800eec8 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800eeb6:	6806      	ldr	r6, [r0, #0]
 800eeb8:	b99e      	cbnz	r6, 800eee2 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800eeba:	6880      	ldr	r0, [r0, #8]
 800eebc:	f001 f96c 	bl	8010198 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800eec0:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800eec2:	3501      	adds	r5, #1
 800eec4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 800eec6:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800eec8:	b96e      	cbnz	r6, 800eee6 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800eeca:	6840      	ldr	r0, [r0, #4]
 800eecc:	f01b fe35 	bl	802ab3a <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eed0:	6863      	ldr	r3, [r4, #4]
 800eed2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800eed4:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800eed6:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eed8:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800eeda:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800eedc:	bf24      	itt	cs
 800eede:	6823      	ldrcs	r3, [r4, #0]
 800eee0:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 800eee2:	2000      	movs	r0, #0
 800eee4:	e7ed      	b.n	800eec2 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800eee6:	68c0      	ldr	r0, [r0, #12]
 800eee8:	f01b fe27 	bl	802ab3a <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800eeec:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 800eeee:	68e3      	ldr	r3, [r4, #12]
 800eef0:	4251      	negs	r1, r2
 800eef2:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800eef4:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800eef6:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800eef8:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800eefa:	bf3e      	ittt	cc
 800eefc:	68a3      	ldrcc	r3, [r4, #8]
 800eefe:	185b      	addcc	r3, r3, r1
 800ef00:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800ef02:	2e02      	cmp	r6, #2
 800ef04:	d1ed      	bne.n	800eee2 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ef06:	b10d      	cbz	r5, 800ef0c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 800ef08:	3d01      	subs	r5, #1
 800ef0a:	e7ea      	b.n	800eee2 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 800ef0c:	4628      	mov	r0, r5
 800ef0e:	e7d8      	b.n	800eec2 <prvCopyDataToQueue+0x18>

0800ef10 <prvCopyDataFromQueue>:
{
 800ef10:	4603      	mov	r3, r0
 800ef12:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ef14:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 800ef16:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ef18:	b16a      	cbz	r2, 800ef36 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ef1a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ef1c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ef1e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ef20:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ef22:	bf28      	it	cs
 800ef24:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ef26:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ef28:	bf28      	it	cs
 800ef2a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ef2c:	68d9      	ldr	r1, [r3, #12]
}
 800ef2e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ef32:	f01b be02 	b.w	802ab3a <memcpy>
}
 800ef36:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ef3a:	4770      	bx	lr

0800ef3c <prvUnlockQueue>:
{
 800ef3c:	b570      	push	{r4, r5, r6, lr}
 800ef3e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800ef40:	f7ff fe68 	bl	800ec14 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ef44:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef48:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800ef4c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef4e:	2d00      	cmp	r5, #0
 800ef50:	dd01      	ble.n	800ef56 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ef52:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800ef54:	b9b3      	cbnz	r3, 800ef84 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 800ef56:	23ff      	movs	r3, #255	@ 0xff
 800ef58:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 800ef5c:	f7ff fe7a 	bl	800ec54 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ef60:	f7ff fe58 	bl	800ec14 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ef64:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef68:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800ef6c:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ef6e:	2d00      	cmp	r5, #0
 800ef70:	dd01      	ble.n	800ef76 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef72:	6923      	ldr	r3, [r4, #16]
 800ef74:	b97b      	cbnz	r3, 800ef96 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 800ef76:	23ff      	movs	r3, #255	@ 0xff
 800ef78:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800ef7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800ef80:	f7ff be68 	b.w	800ec54 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef84:	4630      	mov	r0, r6
 800ef86:	f001 f82b 	bl	800ffe0 <xTaskRemoveFromEventList>
 800ef8a:	b108      	cbz	r0, 800ef90 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 800ef8c:	f001 f8b0 	bl	80100f0 <vTaskMissedYield>
			--cTxLock;
 800ef90:	3d01      	subs	r5, #1
 800ef92:	b26d      	sxtb	r5, r5
 800ef94:	e7db      	b.n	800ef4e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef96:	4630      	mov	r0, r6
 800ef98:	f001 f822 	bl	800ffe0 <xTaskRemoveFromEventList>
 800ef9c:	b108      	cbz	r0, 800efa2 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 800ef9e:	f001 f8a7 	bl	80100f0 <vTaskMissedYield>
				--cRxLock;
 800efa2:	3d01      	subs	r5, #1
 800efa4:	b26d      	sxtb	r5, r5
 800efa6:	e7e2      	b.n	800ef6e <prvUnlockQueue+0x32>

0800efa8 <xQueueGenericReset>:
{
 800efa8:	b538      	push	{r3, r4, r5, lr}
 800efaa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800efac:	4604      	mov	r4, r0
 800efae:	b940      	cbnz	r0, 800efc2 <xQueueGenericReset+0x1a>
 800efb0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800efb4:	f383 8811 	msr	BASEPRI, r3
 800efb8:	f3bf 8f6f 	isb	sy
 800efbc:	f3bf 8f4f 	dsb	sy
 800efc0:	e7fe      	b.n	800efc0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800efc2:	f7ff fe27 	bl	800ec14 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800efc6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 800efca:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800efcc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800efce:	434b      	muls	r3, r1
 800efd0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800efd2:	1a5b      	subs	r3, r3, r1
 800efd4:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800efd6:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800efd8:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800efda:	2000      	movs	r0, #0
 800efdc:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800efde:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 800efe0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800efe4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 800efe8:	b9a5      	cbnz	r5, 800f014 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800efea:	6923      	ldr	r3, [r4, #16]
 800efec:	b173      	cbz	r3, 800f00c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800efee:	f104 0010 	add.w	r0, r4, #16
 800eff2:	f000 fff5 	bl	800ffe0 <xTaskRemoveFromEventList>
 800eff6:	b148      	cbz	r0, 800f00c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800eff8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800effc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f000:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f004:	f3bf 8f4f 	dsb	sy
 800f008:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800f00c:	f7ff fe22 	bl	800ec54 <vPortExitCritical>
}
 800f010:	2001      	movs	r0, #1
 800f012:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800f014:	f104 0010 	add.w	r0, r4, #16
 800f018:	f7ff fd50 	bl	800eabc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800f01c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800f020:	f7ff fd4c 	bl	800eabc <vListInitialise>
 800f024:	e7f2      	b.n	800f00c <xQueueGenericReset+0x64>

0800f026 <xQueueGenericCreateStatic>:
	{
 800f026:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f028:	460d      	mov	r5, r1
 800f02a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800f02c:	b940      	cbnz	r0, 800f040 <xQueueGenericCreateStatic+0x1a>
 800f02e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f032:	f383 8811 	msr	BASEPRI, r3
 800f036:	f3bf 8f6f 	isb	sy
 800f03a:	f3bf 8f4f 	dsb	sy
 800f03e:	e7fe      	b.n	800f03e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 800f040:	b943      	cbnz	r3, 800f054 <xQueueGenericCreateStatic+0x2e>
 800f042:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f046:	f383 8811 	msr	BASEPRI, r3
 800f04a:	f3bf 8f6f 	isb	sy
 800f04e:	f3bf 8f4f 	dsb	sy
 800f052:	e7fe      	b.n	800f052 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800f054:	b14a      	cbz	r2, 800f06a <xQueueGenericCreateStatic+0x44>
 800f056:	b991      	cbnz	r1, 800f07e <xQueueGenericCreateStatic+0x58>
 800f058:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f05c:	f383 8811 	msr	BASEPRI, r3
 800f060:	f3bf 8f6f 	isb	sy
 800f064:	f3bf 8f4f 	dsb	sy
 800f068:	e7fe      	b.n	800f068 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800f06a:	b141      	cbz	r1, 800f07e <xQueueGenericCreateStatic+0x58>
 800f06c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f070:	f383 8811 	msr	BASEPRI, r3
 800f074:	f3bf 8f6f 	isb	sy
 800f078:	f3bf 8f4f 	dsb	sy
 800f07c:	e7fe      	b.n	800f07c <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800f07e:	2350      	movs	r3, #80	@ 0x50
 800f080:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800f082:	9b01      	ldr	r3, [sp, #4]
 800f084:	2b50      	cmp	r3, #80	@ 0x50
 800f086:	d008      	beq.n	800f09a <xQueueGenericCreateStatic+0x74>
 800f088:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f08c:	f383 8811 	msr	BASEPRI, r3
 800f090:	f3bf 8f6f 	isb	sy
 800f094:	f3bf 8f4f 	dsb	sy
 800f098:	e7fe      	b.n	800f098 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800f09a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800f09c:	2d00      	cmp	r5, #0
 800f09e:	bf08      	it	eq
 800f0a0:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 800f0a2:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800f0a6:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 800f0aa:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800f0ac:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800f0ae:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800f0b0:	f7ff ff7a 	bl	800efa8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800f0b4:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800f0b8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 800f0bc:	4620      	mov	r0, r4
 800f0be:	b003      	add	sp, #12
 800f0c0:	bd30      	pop	{r4, r5, pc}

0800f0c2 <xQueueGenericCreate>:
	{
 800f0c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f0c4:	460d      	mov	r5, r1
 800f0c6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800f0c8:	4606      	mov	r6, r0
 800f0ca:	b940      	cbnz	r0, 800f0de <xQueueGenericCreate+0x1c>
 800f0cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f0d0:	f383 8811 	msr	BASEPRI, r3
 800f0d4:	f3bf 8f6f 	isb	sy
 800f0d8:	f3bf 8f4f 	dsb	sy
 800f0dc:	e7fe      	b.n	800f0dc <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f0de:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800f0e0:	3050      	adds	r0, #80	@ 0x50
 800f0e2:	f7ff fc15 	bl	800e910 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800f0e6:	4604      	mov	r4, r0
 800f0e8:	b170      	cbz	r0, 800f108 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800f0ea:	2300      	movs	r3, #0
 800f0ec:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800f0f0:	b165      	cbz	r5, 800f10c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800f0f2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800f0f6:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 800f0fa:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800f0fc:	2101      	movs	r1, #1
 800f0fe:	4620      	mov	r0, r4
 800f100:	f7ff ff52 	bl	800efa8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800f104:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 800f108:	4620      	mov	r0, r4
 800f10a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800f10c:	4603      	mov	r3, r0
 800f10e:	e7f2      	b.n	800f0f6 <xQueueGenericCreate+0x34>

0800f110 <xQueueCreateCountingSemaphoreStatic>:
	{
 800f110:	b513      	push	{r0, r1, r4, lr}
 800f112:	4613      	mov	r3, r2
 800f114:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800f116:	b940      	cbnz	r0, 800f12a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800f118:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f11c:	f383 8811 	msr	BASEPRI, r3
 800f120:	f3bf 8f6f 	isb	sy
 800f124:	f3bf 8f4f 	dsb	sy
 800f128:	e7fe      	b.n	800f128 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800f12a:	4288      	cmp	r0, r1
 800f12c:	d208      	bcs.n	800f140 <xQueueCreateCountingSemaphoreStatic+0x30>
 800f12e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f132:	f383 8811 	msr	BASEPRI, r3
 800f136:	f3bf 8f6f 	isb	sy
 800f13a:	f3bf 8f4f 	dsb	sy
 800f13e:	e7fe      	b.n	800f13e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800f140:	2202      	movs	r2, #2
 800f142:	9200      	str	r2, [sp, #0]
 800f144:	2200      	movs	r2, #0
 800f146:	4611      	mov	r1, r2
 800f148:	f7ff ff6d 	bl	800f026 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800f14c:	b100      	cbz	r0, 800f150 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800f14e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800f150:	b002      	add	sp, #8
 800f152:	bd10      	pop	{r4, pc}

0800f154 <xQueueCreateCountingSemaphore>:
	{
 800f154:	b510      	push	{r4, lr}
 800f156:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800f158:	b940      	cbnz	r0, 800f16c <xQueueCreateCountingSemaphore+0x18>
 800f15a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f15e:	f383 8811 	msr	BASEPRI, r3
 800f162:	f3bf 8f6f 	isb	sy
 800f166:	f3bf 8f4f 	dsb	sy
 800f16a:	e7fe      	b.n	800f16a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800f16c:	4288      	cmp	r0, r1
 800f16e:	d208      	bcs.n	800f182 <xQueueCreateCountingSemaphore+0x2e>
 800f170:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f174:	f383 8811 	msr	BASEPRI, r3
 800f178:	f3bf 8f6f 	isb	sy
 800f17c:	f3bf 8f4f 	dsb	sy
 800f180:	e7fe      	b.n	800f180 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800f182:	2202      	movs	r2, #2
 800f184:	2100      	movs	r1, #0
 800f186:	f7ff ff9c 	bl	800f0c2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800f18a:	b100      	cbz	r0, 800f18e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800f18c:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800f18e:	bd10      	pop	{r4, pc}

0800f190 <xQueueGenericSend>:
{
 800f190:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f194:	460f      	mov	r7, r1
 800f196:	9201      	str	r2, [sp, #4]
 800f198:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800f19a:	4604      	mov	r4, r0
 800f19c:	b940      	cbnz	r0, 800f1b0 <xQueueGenericSend+0x20>
 800f19e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f1a2:	f383 8811 	msr	BASEPRI, r3
 800f1a6:	f3bf 8f6f 	isb	sy
 800f1aa:	f3bf 8f4f 	dsb	sy
 800f1ae:	e7fe      	b.n	800f1ae <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f1b0:	b951      	cbnz	r1, 800f1c8 <xQueueGenericSend+0x38>
 800f1b2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800f1b4:	b143      	cbz	r3, 800f1c8 <xQueueGenericSend+0x38>
 800f1b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f1ba:	f383 8811 	msr	BASEPRI, r3
 800f1be:	f3bf 8f6f 	isb	sy
 800f1c2:	f3bf 8f4f 	dsb	sy
 800f1c6:	e7fe      	b.n	800f1c6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800f1c8:	2e02      	cmp	r6, #2
 800f1ca:	d10b      	bne.n	800f1e4 <xQueueGenericSend+0x54>
 800f1cc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800f1ce:	2b01      	cmp	r3, #1
 800f1d0:	d008      	beq.n	800f1e4 <xQueueGenericSend+0x54>
 800f1d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f1d6:	f383 8811 	msr	BASEPRI, r3
 800f1da:	f3bf 8f6f 	isb	sy
 800f1de:	f3bf 8f4f 	dsb	sy
 800f1e2:	e7fe      	b.n	800f1e2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f1e4:	f000 ff8a 	bl	80100fc <xTaskGetSchedulerState>
 800f1e8:	4605      	mov	r5, r0
 800f1ea:	b320      	cbz	r0, 800f236 <xQueueGenericSend+0xa6>
 800f1ec:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800f1ee:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800f1f2:	f7ff fd0f 	bl	800ec14 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800f1f6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800f1f8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800f1fa:	429a      	cmp	r2, r3
 800f1fc:	d227      	bcs.n	800f24e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800f1fe:	4632      	mov	r2, r6
 800f200:	4639      	mov	r1, r7
 800f202:	4620      	mov	r0, r4
 800f204:	f7ff fe51 	bl	800eeaa <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f208:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800f20a:	b11b      	cbz	r3, 800f214 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f20c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800f210:	f000 fee6 	bl	800ffe0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800f214:	b148      	cbz	r0, 800f22a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 800f216:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800f21a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f21e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f222:	f3bf 8f4f 	dsb	sy
 800f226:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800f22a:	f7ff fd13 	bl	800ec54 <vPortExitCritical>
				return pdPASS;
 800f22e:	2001      	movs	r0, #1
}
 800f230:	b004      	add	sp, #16
 800f232:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f236:	9b01      	ldr	r3, [sp, #4]
 800f238:	2b00      	cmp	r3, #0
 800f23a:	d0d8      	beq.n	800f1ee <xQueueGenericSend+0x5e>
 800f23c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f240:	f383 8811 	msr	BASEPRI, r3
 800f244:	f3bf 8f6f 	isb	sy
 800f248:	f3bf 8f4f 	dsb	sy
 800f24c:	e7fe      	b.n	800f24c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800f24e:	2e02      	cmp	r6, #2
 800f250:	d0d5      	beq.n	800f1fe <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 800f252:	9b01      	ldr	r3, [sp, #4]
 800f254:	b91b      	cbnz	r3, 800f25e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 800f256:	f7ff fcfd 	bl	800ec54 <vPortExitCritical>
					return errQUEUE_FULL;
 800f25a:	2000      	movs	r0, #0
 800f25c:	e7e8      	b.n	800f230 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 800f25e:	b915      	cbnz	r5, 800f266 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800f260:	a802      	add	r0, sp, #8
 800f262:	f000 fefd 	bl	8010060 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800f266:	f7ff fcf5 	bl	800ec54 <vPortExitCritical>
		vTaskSuspendAll();
 800f26a:	f000 fd0b 	bl	800fc84 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800f26e:	f7ff fcd1 	bl	800ec14 <vPortEnterCritical>
 800f272:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800f276:	2bff      	cmp	r3, #255	@ 0xff
 800f278:	bf08      	it	eq
 800f27a:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800f27e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800f282:	2bff      	cmp	r3, #255	@ 0xff
 800f284:	bf08      	it	eq
 800f286:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800f28a:	f7ff fce3 	bl	800ec54 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800f28e:	a901      	add	r1, sp, #4
 800f290:	a802      	add	r0, sp, #8
 800f292:	f000 fef1 	bl	8010078 <xTaskCheckForTimeOut>
 800f296:	bb38      	cbnz	r0, 800f2e8 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800f298:	f7ff fcbc 	bl	800ec14 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800f29c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800f29e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800f2a0:	429a      	cmp	r2, r3
 800f2a2:	d10e      	bne.n	800f2c2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800f2a4:	f7ff fcd6 	bl	800ec54 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800f2a8:	9901      	ldr	r1, [sp, #4]
 800f2aa:	f104 0010 	add.w	r0, r4, #16
 800f2ae:	f000 fe5f 	bl	800ff70 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800f2b2:	4620      	mov	r0, r4
 800f2b4:	f7ff fe42 	bl	800ef3c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800f2b8:	f000 fd88 	bl	800fdcc <xTaskResumeAll>
 800f2bc:	b148      	cbz	r0, 800f2d2 <xQueueGenericSend+0x142>
 800f2be:	2501      	movs	r5, #1
 800f2c0:	e797      	b.n	800f1f2 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 800f2c2:	f7ff fcc7 	bl	800ec54 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800f2c6:	4620      	mov	r0, r4
 800f2c8:	f7ff fe38 	bl	800ef3c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800f2cc:	f000 fd7e 	bl	800fdcc <xTaskResumeAll>
 800f2d0:	e7f5      	b.n	800f2be <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 800f2d2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800f2d6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f2da:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f2de:	f3bf 8f4f 	dsb	sy
 800f2e2:	f3bf 8f6f 	isb	sy
 800f2e6:	e7ea      	b.n	800f2be <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 800f2e8:	4620      	mov	r0, r4
 800f2ea:	f7ff fe27 	bl	800ef3c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800f2ee:	f000 fd6d 	bl	800fdcc <xTaskResumeAll>
			return errQUEUE_FULL;
 800f2f2:	e7b2      	b.n	800f25a <xQueueGenericSend+0xca>

0800f2f4 <xQueueGenericSendFromISR>:
{
 800f2f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f2f8:	4689      	mov	r9, r1
 800f2fa:	4617      	mov	r7, r2
 800f2fc:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800f2fe:	4604      	mov	r4, r0
 800f300:	b940      	cbnz	r0, 800f314 <xQueueGenericSendFromISR+0x20>
 800f302:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f306:	f383 8811 	msr	BASEPRI, r3
 800f30a:	f3bf 8f6f 	isb	sy
 800f30e:	f3bf 8f4f 	dsb	sy
 800f312:	e7fe      	b.n	800f312 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f314:	b951      	cbnz	r1, 800f32c <xQueueGenericSendFromISR+0x38>
 800f316:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800f318:	b143      	cbz	r3, 800f32c <xQueueGenericSendFromISR+0x38>
 800f31a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f31e:	f383 8811 	msr	BASEPRI, r3
 800f322:	f3bf 8f6f 	isb	sy
 800f326:	f3bf 8f4f 	dsb	sy
 800f32a:	e7fe      	b.n	800f32a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800f32c:	2e02      	cmp	r6, #2
 800f32e:	d10b      	bne.n	800f348 <xQueueGenericSendFromISR+0x54>
 800f330:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800f332:	2b01      	cmp	r3, #1
 800f334:	d008      	beq.n	800f348 <xQueueGenericSendFromISR+0x54>
 800f336:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f33a:	f383 8811 	msr	BASEPRI, r3
 800f33e:	f3bf 8f6f 	isb	sy
 800f342:	f3bf 8f4f 	dsb	sy
 800f346:	e7fe      	b.n	800f346 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f348:	f7ff fd76 	bl	800ee38 <vPortValidateInterruptPriority>
	__asm volatile
 800f34c:	f3ef 8811 	mrs	r8, BASEPRI
 800f350:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f354:	f383 8811 	msr	BASEPRI, r3
 800f358:	f3bf 8f6f 	isb	sy
 800f35c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800f360:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 800f362:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800f364:	429a      	cmp	r2, r3
 800f366:	d301      	bcc.n	800f36c <xQueueGenericSendFromISR+0x78>
 800f368:	2e02      	cmp	r6, #2
 800f36a:	d11e      	bne.n	800f3aa <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 800f36c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f370:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800f372:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800f374:	4632      	mov	r2, r6
 800f376:	4649      	mov	r1, r9
 800f378:	4620      	mov	r0, r4
 800f37a:	f7ff fd96 	bl	800eeaa <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800f37e:	1c6b      	adds	r3, r5, #1
 800f380:	d10e      	bne.n	800f3a0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f382:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800f384:	b13b      	cbz	r3, 800f396 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f386:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800f38a:	f000 fe29 	bl	800ffe0 <xTaskRemoveFromEventList>
 800f38e:	b110      	cbz	r0, 800f396 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 800f390:	b10f      	cbz	r7, 800f396 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800f392:	2301      	movs	r3, #1
 800f394:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 800f396:	2001      	movs	r0, #1
	__asm volatile
 800f398:	f388 8811 	msr	BASEPRI, r8
}
 800f39c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800f3a0:	3501      	adds	r5, #1
 800f3a2:	b26d      	sxtb	r5, r5
 800f3a4:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 800f3a8:	e7f5      	b.n	800f396 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 800f3aa:	2000      	movs	r0, #0
 800f3ac:	e7f4      	b.n	800f398 <xQueueGenericSendFromISR+0xa4>

0800f3ae <xQueueGiveFromISR>:
{
 800f3ae:	b570      	push	{r4, r5, r6, lr}
 800f3b0:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800f3b2:	4604      	mov	r4, r0
 800f3b4:	b940      	cbnz	r0, 800f3c8 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800f3b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f3ba:	f383 8811 	msr	BASEPRI, r3
 800f3be:	f3bf 8f6f 	isb	sy
 800f3c2:	f3bf 8f4f 	dsb	sy
 800f3c6:	e7fe      	b.n	800f3c6 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800f3c8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800f3ca:	b143      	cbz	r3, 800f3de <xQueueGiveFromISR+0x30>
 800f3cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f3d0:	f383 8811 	msr	BASEPRI, r3
 800f3d4:	f3bf 8f6f 	isb	sy
 800f3d8:	f3bf 8f4f 	dsb	sy
 800f3dc:	e7fe      	b.n	800f3dc <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800f3de:	6803      	ldr	r3, [r0, #0]
 800f3e0:	b953      	cbnz	r3, 800f3f8 <xQueueGiveFromISR+0x4a>
 800f3e2:	6883      	ldr	r3, [r0, #8]
 800f3e4:	b143      	cbz	r3, 800f3f8 <xQueueGiveFromISR+0x4a>
 800f3e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f3ea:	f383 8811 	msr	BASEPRI, r3
 800f3ee:	f3bf 8f6f 	isb	sy
 800f3f2:	f3bf 8f4f 	dsb	sy
 800f3f6:	e7fe      	b.n	800f3f6 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f3f8:	f7ff fd1e 	bl	800ee38 <vPortValidateInterruptPriority>
	__asm volatile
 800f3fc:	f3ef 8611 	mrs	r6, BASEPRI
 800f400:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f404:	f383 8811 	msr	BASEPRI, r3
 800f408:	f3bf 8f6f 	isb	sy
 800f40c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f410:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800f412:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800f414:	4293      	cmp	r3, r2
 800f416:	d919      	bls.n	800f44c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 800f418:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800f41c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800f41e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800f420:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800f422:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 800f424:	d10d      	bne.n	800f442 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f426:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800f428:	b13b      	cbz	r3, 800f43a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f42a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800f42e:	f000 fdd7 	bl	800ffe0 <xTaskRemoveFromEventList>
 800f432:	b110      	cbz	r0, 800f43a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 800f434:	b10d      	cbz	r5, 800f43a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800f436:	2301      	movs	r3, #1
 800f438:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800f43a:	2001      	movs	r0, #1
	__asm volatile
 800f43c:	f386 8811 	msr	BASEPRI, r6
}
 800f440:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800f442:	3301      	adds	r3, #1
 800f444:	b25b      	sxtb	r3, r3
 800f446:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800f44a:	e7f6      	b.n	800f43a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 800f44c:	2000      	movs	r0, #0
 800f44e:	e7f5      	b.n	800f43c <xQueueGiveFromISR+0x8e>

0800f450 <xQueueReceive>:
{
 800f450:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f454:	460e      	mov	r6, r1
 800f456:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800f458:	4604      	mov	r4, r0
 800f45a:	b940      	cbnz	r0, 800f46e <xQueueReceive+0x1e>
	__asm volatile
 800f45c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f460:	f383 8811 	msr	BASEPRI, r3
 800f464:	f3bf 8f6f 	isb	sy
 800f468:	f3bf 8f4f 	dsb	sy
 800f46c:	e7fe      	b.n	800f46c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f46e:	b951      	cbnz	r1, 800f486 <xQueueReceive+0x36>
 800f470:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800f472:	b143      	cbz	r3, 800f486 <xQueueReceive+0x36>
 800f474:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f478:	f383 8811 	msr	BASEPRI, r3
 800f47c:	f3bf 8f6f 	isb	sy
 800f480:	f3bf 8f4f 	dsb	sy
 800f484:	e7fe      	b.n	800f484 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f486:	f000 fe39 	bl	80100fc <xTaskGetSchedulerState>
 800f48a:	4605      	mov	r5, r0
 800f48c:	b318      	cbz	r0, 800f4d6 <xQueueReceive+0x86>
 800f48e:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800f490:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 800f494:	f7ff fbbe 	bl	800ec14 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f498:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f49a:	b347      	cbz	r7, 800f4ee <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800f49c:	4631      	mov	r1, r6
 800f49e:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f4a0:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800f4a2:	f7ff fd35 	bl	800ef10 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f4a6:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f4a8:	6923      	ldr	r3, [r4, #16]
 800f4aa:	b173      	cbz	r3, 800f4ca <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f4ac:	f104 0010 	add.w	r0, r4, #16
 800f4b0:	f000 fd96 	bl	800ffe0 <xTaskRemoveFromEventList>
 800f4b4:	b148      	cbz	r0, 800f4ca <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 800f4b6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800f4ba:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f4be:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f4c2:	f3bf 8f4f 	dsb	sy
 800f4c6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800f4ca:	f7ff fbc3 	bl	800ec54 <vPortExitCritical>
				return pdPASS;
 800f4ce:	2001      	movs	r0, #1
}
 800f4d0:	b004      	add	sp, #16
 800f4d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f4d6:	9b01      	ldr	r3, [sp, #4]
 800f4d8:	2b00      	cmp	r3, #0
 800f4da:	d0d9      	beq.n	800f490 <xQueueReceive+0x40>
 800f4dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f4e0:	f383 8811 	msr	BASEPRI, r3
 800f4e4:	f3bf 8f6f 	isb	sy
 800f4e8:	f3bf 8f4f 	dsb	sy
 800f4ec:	e7fe      	b.n	800f4ec <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800f4ee:	9b01      	ldr	r3, [sp, #4]
 800f4f0:	b91b      	cbnz	r3, 800f4fa <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 800f4f2:	f7ff fbaf 	bl	800ec54 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800f4f6:	2000      	movs	r0, #0
 800f4f8:	e7ea      	b.n	800f4d0 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800f4fa:	b915      	cbnz	r5, 800f502 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800f4fc:	a802      	add	r0, sp, #8
 800f4fe:	f000 fdaf 	bl	8010060 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800f502:	f7ff fba7 	bl	800ec54 <vPortExitCritical>
		vTaskSuspendAll();
 800f506:	f000 fbbd 	bl	800fc84 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800f50a:	f7ff fb83 	bl	800ec14 <vPortEnterCritical>
 800f50e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800f512:	2bff      	cmp	r3, #255	@ 0xff
 800f514:	bf08      	it	eq
 800f516:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800f51a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800f51e:	2bff      	cmp	r3, #255	@ 0xff
 800f520:	bf08      	it	eq
 800f522:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 800f526:	f7ff fb95 	bl	800ec54 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800f52a:	a901      	add	r1, sp, #4
 800f52c:	a802      	add	r0, sp, #8
 800f52e:	f000 fda3 	bl	8010078 <xTaskCheckForTimeOut>
 800f532:	bb00      	cbnz	r0, 800f576 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800f534:	4620      	mov	r0, r4
 800f536:	f7ff fcad 	bl	800ee94 <prvIsQueueEmpty>
 800f53a:	b1b0      	cbz	r0, 800f56a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800f53c:	9901      	ldr	r1, [sp, #4]
 800f53e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800f542:	f000 fd15 	bl	800ff70 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800f546:	4620      	mov	r0, r4
 800f548:	f7ff fcf8 	bl	800ef3c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800f54c:	f000 fc3e 	bl	800fdcc <xTaskResumeAll>
 800f550:	b948      	cbnz	r0, 800f566 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 800f552:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800f556:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f55a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f55e:	f3bf 8f4f 	dsb	sy
 800f562:	f3bf 8f6f 	isb	sy
 800f566:	2501      	movs	r5, #1
 800f568:	e794      	b.n	800f494 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 800f56a:	4620      	mov	r0, r4
 800f56c:	f7ff fce6 	bl	800ef3c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800f570:	f000 fc2c 	bl	800fdcc <xTaskResumeAll>
 800f574:	e7f7      	b.n	800f566 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 800f576:	4620      	mov	r0, r4
 800f578:	f7ff fce0 	bl	800ef3c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800f57c:	f000 fc26 	bl	800fdcc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800f580:	4620      	mov	r0, r4
 800f582:	f7ff fc87 	bl	800ee94 <prvIsQueueEmpty>
 800f586:	2800      	cmp	r0, #0
 800f588:	d0ed      	beq.n	800f566 <xQueueReceive+0x116>
 800f58a:	e7b4      	b.n	800f4f6 <xQueueReceive+0xa6>

0800f58c <xQueueSemaphoreTake>:
{
 800f58c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f58e:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800f590:	4604      	mov	r4, r0
{
 800f592:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800f594:	b940      	cbnz	r0, 800f5a8 <xQueueSemaphoreTake+0x1c>
 800f596:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f59a:	f383 8811 	msr	BASEPRI, r3
 800f59e:	f3bf 8f6f 	isb	sy
 800f5a2:	f3bf 8f4f 	dsb	sy
 800f5a6:	e7fe      	b.n	800f5a6 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800f5a8:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 800f5aa:	b145      	cbz	r5, 800f5be <xQueueSemaphoreTake+0x32>
 800f5ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f5b0:	f383 8811 	msr	BASEPRI, r3
 800f5b4:	f3bf 8f6f 	isb	sy
 800f5b8:	f3bf 8f4f 	dsb	sy
 800f5bc:	e7fe      	b.n	800f5bc <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f5be:	f000 fd9d 	bl	80100fc <xTaskGetSchedulerState>
 800f5c2:	4606      	mov	r6, r0
 800f5c4:	b320      	cbz	r0, 800f610 <xQueueSemaphoreTake+0x84>
 800f5c6:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800f5c8:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800f5ca:	f7ff fb23 	bl	800ec14 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800f5ce:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800f5d0:	b353      	cbz	r3, 800f628 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800f5d2:	3b01      	subs	r3, #1
 800f5d4:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f5d6:	6823      	ldr	r3, [r4, #0]
 800f5d8:	b913      	cbnz	r3, 800f5e0 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800f5da:	f000 fe6d 	bl	80102b8 <pvTaskIncrementMutexHeldCount>
 800f5de:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f5e0:	6923      	ldr	r3, [r4, #16]
 800f5e2:	b173      	cbz	r3, 800f602 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f5e4:	f104 0010 	add.w	r0, r4, #16
 800f5e8:	f000 fcfa 	bl	800ffe0 <xTaskRemoveFromEventList>
 800f5ec:	b148      	cbz	r0, 800f602 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800f5ee:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800f5f2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f5f6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f5fa:	f3bf 8f4f 	dsb	sy
 800f5fe:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800f602:	f7ff fb27 	bl	800ec54 <vPortExitCritical>
				return pdPASS;
 800f606:	2001      	movs	r0, #1
}
 800f608:	b005      	add	sp, #20
 800f60a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f60c:	4635      	mov	r5, r6
 800f60e:	e7db      	b.n	800f5c8 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f610:	9b01      	ldr	r3, [sp, #4]
 800f612:	2b00      	cmp	r3, #0
 800f614:	d0fa      	beq.n	800f60c <xQueueSemaphoreTake+0x80>
 800f616:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f61a:	f383 8811 	msr	BASEPRI, r3
 800f61e:	f3bf 8f6f 	isb	sy
 800f622:	f3bf 8f4f 	dsb	sy
 800f626:	e7fe      	b.n	800f626 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 800f628:	9b01      	ldr	r3, [sp, #4]
 800f62a:	b953      	cbnz	r3, 800f642 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800f62c:	2d00      	cmp	r5, #0
 800f62e:	d066      	beq.n	800f6fe <xQueueSemaphoreTake+0x172>
 800f630:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f634:	f383 8811 	msr	BASEPRI, r3
 800f638:	f3bf 8f6f 	isb	sy
 800f63c:	f3bf 8f4f 	dsb	sy
 800f640:	e7fe      	b.n	800f640 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 800f642:	b916      	cbnz	r6, 800f64a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800f644:	a802      	add	r0, sp, #8
 800f646:	f000 fd0b 	bl	8010060 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800f64a:	f7ff fb03 	bl	800ec54 <vPortExitCritical>
		vTaskSuspendAll();
 800f64e:	f000 fb19 	bl	800fc84 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800f652:	f7ff fadf 	bl	800ec14 <vPortEnterCritical>
 800f656:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800f65a:	2bff      	cmp	r3, #255	@ 0xff
 800f65c:	bf08      	it	eq
 800f65e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 800f662:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800f666:	2bff      	cmp	r3, #255	@ 0xff
 800f668:	bf08      	it	eq
 800f66a:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 800f66e:	f7ff faf1 	bl	800ec54 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800f672:	a901      	add	r1, sp, #4
 800f674:	a802      	add	r0, sp, #8
 800f676:	f000 fcff 	bl	8010078 <xTaskCheckForTimeOut>
 800f67a:	bb50      	cbnz	r0, 800f6d2 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800f67c:	4620      	mov	r0, r4
 800f67e:	f7ff fc09 	bl	800ee94 <prvIsQueueEmpty>
 800f682:	b300      	cbz	r0, 800f6c6 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f684:	6823      	ldr	r3, [r4, #0]
 800f686:	b93b      	cbnz	r3, 800f698 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 800f688:	f7ff fac4 	bl	800ec14 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800f68c:	68a0      	ldr	r0, [r4, #8]
 800f68e:	f000 fd45 	bl	801011c <xTaskPriorityInherit>
 800f692:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800f694:	f7ff fade 	bl	800ec54 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800f698:	9901      	ldr	r1, [sp, #4]
 800f69a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800f69e:	f000 fc67 	bl	800ff70 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800f6a2:	4620      	mov	r0, r4
 800f6a4:	f7ff fc4a 	bl	800ef3c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800f6a8:	f000 fb90 	bl	800fdcc <xTaskResumeAll>
 800f6ac:	b948      	cbnz	r0, 800f6c2 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 800f6ae:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800f6b2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f6b6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f6ba:	f3bf 8f4f 	dsb	sy
 800f6be:	f3bf 8f6f 	isb	sy
 800f6c2:	2601      	movs	r6, #1
 800f6c4:	e781      	b.n	800f5ca <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 800f6c6:	4620      	mov	r0, r4
 800f6c8:	f7ff fc38 	bl	800ef3c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800f6cc:	f000 fb7e 	bl	800fdcc <xTaskResumeAll>
 800f6d0:	e7f7      	b.n	800f6c2 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 800f6d2:	4620      	mov	r0, r4
 800f6d4:	f7ff fc32 	bl	800ef3c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800f6d8:	f000 fb78 	bl	800fdcc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800f6dc:	4620      	mov	r0, r4
 800f6de:	f7ff fbd9 	bl	800ee94 <prvIsQueueEmpty>
 800f6e2:	2800      	cmp	r0, #0
 800f6e4:	d0ed      	beq.n	800f6c2 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 800f6e6:	b165      	cbz	r5, 800f702 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 800f6e8:	f7ff fa94 	bl	800ec14 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800f6ec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800f6ee:	b119      	cbz	r1, 800f6f8 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800f6f0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800f6f2:	6819      	ldr	r1, [r3, #0]
 800f6f4:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800f6f8:	68a0      	ldr	r0, [r4, #8]
 800f6fa:	f000 fd8f 	bl	801021c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800f6fe:	f7ff faa9 	bl	800ec54 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800f702:	2000      	movs	r0, #0
 800f704:	e780      	b.n	800f608 <xQueueSemaphoreTake+0x7c>

0800f706 <xQueueReceiveFromISR>:
{
 800f706:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f70a:	4689      	mov	r9, r1
 800f70c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800f70e:	4604      	mov	r4, r0
 800f710:	b940      	cbnz	r0, 800f724 <xQueueReceiveFromISR+0x1e>
 800f712:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f716:	f383 8811 	msr	BASEPRI, r3
 800f71a:	f3bf 8f6f 	isb	sy
 800f71e:	f3bf 8f4f 	dsb	sy
 800f722:	e7fe      	b.n	800f722 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f724:	b951      	cbnz	r1, 800f73c <xQueueReceiveFromISR+0x36>
 800f726:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800f728:	b143      	cbz	r3, 800f73c <xQueueReceiveFromISR+0x36>
 800f72a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f72e:	f383 8811 	msr	BASEPRI, r3
 800f732:	f3bf 8f6f 	isb	sy
 800f736:	f3bf 8f4f 	dsb	sy
 800f73a:	e7fe      	b.n	800f73a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f73c:	f7ff fb7c 	bl	800ee38 <vPortValidateInterruptPriority>
	__asm volatile
 800f740:	f3ef 8711 	mrs	r7, BASEPRI
 800f744:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f748:	f383 8811 	msr	BASEPRI, r3
 800f74c:	f3bf 8f6f 	isb	sy
 800f750:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f754:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f756:	b30d      	cbz	r5, 800f79c <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 800f758:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800f75c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800f75e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800f760:	4620      	mov	r0, r4
 800f762:	f7ff fbd5 	bl	800ef10 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f766:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800f768:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f76a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 800f76c:	d111      	bne.n	800f792 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f76e:	6923      	ldr	r3, [r4, #16]
 800f770:	b153      	cbz	r3, 800f788 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f772:	f104 0010 	add.w	r0, r4, #16
 800f776:	f000 fc33 	bl	800ffe0 <xTaskRemoveFromEventList>
 800f77a:	b128      	cbz	r0, 800f788 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 800f77c:	f1b8 0f00 	cmp.w	r8, #0
 800f780:	d002      	beq.n	800f788 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800f782:	2301      	movs	r3, #1
 800f784:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 800f788:	2001      	movs	r0, #1
	__asm volatile
 800f78a:	f387 8811 	msr	BASEPRI, r7
}
 800f78e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800f792:	3601      	adds	r6, #1
 800f794:	b276      	sxtb	r6, r6
 800f796:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 800f79a:	e7f5      	b.n	800f788 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 800f79c:	4628      	mov	r0, r5
 800f79e:	e7f4      	b.n	800f78a <xQueueReceiveFromISR+0x84>

0800f7a0 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800f7a0:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f7a2:	4a07      	ldr	r2, [pc, #28]	@ (800f7c0 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f7a4:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f7a6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800f7aa:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800f7ae:	b91d      	cbnz	r5, 800f7b8 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f7b0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f7b4:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800f7b6:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f7b8:	3301      	adds	r3, #1
 800f7ba:	2b08      	cmp	r3, #8
 800f7bc:	d1f3      	bne.n	800f7a6 <vQueueAddToRegistry+0x6>
 800f7be:	e7fa      	b.n	800f7b6 <vQueueAddToRegistry+0x16>
 800f7c0:	200138d8 	.word	0x200138d8

0800f7c4 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800f7c4:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f7c6:	4a09      	ldr	r2, [pc, #36]	@ (800f7ec <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f7c8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f7ca:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800f7ce:	4281      	cmp	r1, r0
 800f7d0:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800f7d4:	d106      	bne.n	800f7e4 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f7d6:	4a06      	ldr	r2, [pc, #24]	@ (800f7f0 <vQueueUnregisterQueue+0x2c>)
 800f7d8:	2100      	movs	r1, #0
 800f7da:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800f7de:	4422      	add	r2, r4
 800f7e0:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800f7e2:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f7e4:	3301      	adds	r3, #1
 800f7e6:	2b08      	cmp	r3, #8
 800f7e8:	d1ef      	bne.n	800f7ca <vQueueUnregisterQueue+0x6>
 800f7ea:	e7fa      	b.n	800f7e2 <vQueueUnregisterQueue+0x1e>
 800f7ec:	200138dc 	.word	0x200138dc
 800f7f0:	200138d8 	.word	0x200138d8

0800f7f4 <vQueueDelete>:
{
 800f7f4:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800f7f6:	b940      	cbnz	r0, 800f80a <vQueueDelete+0x16>
	__asm volatile
 800f7f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800f7fc:	f383 8811 	msr	BASEPRI, r3
 800f800:	f3bf 8f6f 	isb	sy
 800f804:	f3bf 8f4f 	dsb	sy
 800f808:	e7fe      	b.n	800f808 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800f80a:	f7ff ffdb 	bl	800f7c4 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800f80e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 800f812:	b91b      	cbnz	r3, 800f81c <vQueueDelete+0x28>
}
 800f814:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800f818:	f7ff b912 	b.w	800ea40 <vPortFree>
}
 800f81c:	bd10      	pop	{r4, pc}

0800f81e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f81e:	b570      	push	{r4, r5, r6, lr}
 800f820:	4604      	mov	r4, r0
 800f822:	460d      	mov	r5, r1
 800f824:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f826:	f7ff f9f5 	bl	800ec14 <vPortEnterCritical>
 800f82a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800f82e:	2bff      	cmp	r3, #255	@ 0xff
 800f830:	bf04      	itt	eq
 800f832:	2300      	moveq	r3, #0
 800f834:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 800f838:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800f83c:	2bff      	cmp	r3, #255	@ 0xff
 800f83e:	bf04      	itt	eq
 800f840:	2300      	moveq	r3, #0
 800f842:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 800f846:	f7ff fa05 	bl	800ec54 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f84a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800f84c:	b92b      	cbnz	r3, 800f85a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f84e:	4632      	mov	r2, r6
 800f850:	4629      	mov	r1, r5
 800f852:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800f856:	f000 fba5 	bl	800ffa4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800f85a:	4620      	mov	r0, r4
	}
 800f85c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800f860:	f7ff bb6c 	b.w	800ef3c <prvUnlockQueue>

0800f864 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f864:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f868:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f86a:	f7ff f9d3 	bl	800ec14 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f86e:	4b30      	ldr	r3, [pc, #192]	@ (800f930 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800f870:	4e30      	ldr	r6, [pc, #192]	@ (800f934 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800f872:	681a      	ldr	r2, [r3, #0]
 800f874:	4f30      	ldr	r7, [pc, #192]	@ (800f938 <prvAddNewTaskToReadyList+0xd4>)
 800f876:	3201      	adds	r2, #1
 800f878:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800f87a:	6835      	ldr	r5, [r6, #0]
 800f87c:	2d00      	cmp	r5, #0
 800f87e:	d14b      	bne.n	800f918 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800f880:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f882:	681b      	ldr	r3, [r3, #0]
 800f884:	2b01      	cmp	r3, #1
 800f886:	d11f      	bne.n	800f8c8 <prvAddNewTaskToReadyList+0x64>
 800f888:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f88a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f88c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f88e:	f7ff f915 	bl	800eabc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f892:	2d38      	cmp	r5, #56	@ 0x38
 800f894:	f108 0814 	add.w	r8, r8, #20
 800f898:	d1f7      	bne.n	800f88a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f89a:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 800f960 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800f89e:	4d27      	ldr	r5, [pc, #156]	@ (800f93c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800f8a0:	4640      	mov	r0, r8
 800f8a2:	f7ff f90b 	bl	800eabc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f8a6:	4628      	mov	r0, r5
 800f8a8:	f7ff f908 	bl	800eabc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f8ac:	4824      	ldr	r0, [pc, #144]	@ (800f940 <prvAddNewTaskToReadyList+0xdc>)
 800f8ae:	f7ff f905 	bl	800eabc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f8b2:	4824      	ldr	r0, [pc, #144]	@ (800f944 <prvAddNewTaskToReadyList+0xe0>)
 800f8b4:	f7ff f902 	bl	800eabc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f8b8:	4823      	ldr	r0, [pc, #140]	@ (800f948 <prvAddNewTaskToReadyList+0xe4>)
 800f8ba:	f7ff f8ff 	bl	800eabc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f8be:	4b23      	ldr	r3, [pc, #140]	@ (800f94c <prvAddNewTaskToReadyList+0xe8>)
 800f8c0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f8c4:	4b22      	ldr	r3, [pc, #136]	@ (800f950 <prvAddNewTaskToReadyList+0xec>)
 800f8c6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800f8c8:	4a22      	ldr	r2, [pc, #136]	@ (800f954 <prvAddNewTaskToReadyList+0xf0>)
 800f8ca:	6813      	ldr	r3, [r2, #0]
 800f8cc:	3301      	adds	r3, #1
 800f8ce:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800f8d0:	4a21      	ldr	r2, [pc, #132]	@ (800f958 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f8d2:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f8d4:	6811      	ldr	r1, [r2, #0]
 800f8d6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800f8d8:	2014      	movs	r0, #20
 800f8da:	428b      	cmp	r3, r1
 800f8dc:	fb00 7003 	mla	r0, r0, r3, r7
 800f8e0:	f104 0104 	add.w	r1, r4, #4
 800f8e4:	bf88      	it	hi
 800f8e6:	6013      	strhi	r3, [r2, #0]
 800f8e8:	f7ff f8f6 	bl	800ead8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800f8ec:	f7ff f9b2 	bl	800ec54 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800f8f0:	4b1a      	ldr	r3, [pc, #104]	@ (800f95c <prvAddNewTaskToReadyList+0xf8>)
 800f8f2:	681b      	ldr	r3, [r3, #0]
 800f8f4:	b173      	cbz	r3, 800f914 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f8f6:	6833      	ldr	r3, [r6, #0]
 800f8f8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f8fa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800f8fc:	429a      	cmp	r2, r3
 800f8fe:	d209      	bcs.n	800f914 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800f900:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800f904:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800f908:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800f90c:	f3bf 8f4f 	dsb	sy
 800f910:	f3bf 8f6f 	isb	sy
}
 800f914:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800f918:	4b10      	ldr	r3, [pc, #64]	@ (800f95c <prvAddNewTaskToReadyList+0xf8>)
 800f91a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f91c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800f91e:	2a00      	cmp	r2, #0
 800f920:	d1d2      	bne.n	800f8c8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f922:	6832      	ldr	r2, [r6, #0]
 800f924:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800f926:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800f928:	bf98      	it	ls
 800f92a:	6034      	strls	r4, [r6, #0]
 800f92c:	e7cc      	b.n	800f8c8 <prvAddNewTaskToReadyList+0x64>
 800f92e:	bf00      	nop
 800f930:	2001393c 	.word	0x2001393c
 800f934:	20013e10 	.word	0x20013e10
 800f938:	200139b0 	.word	0x200139b0
 800f93c:	20013988 	.word	0x20013988
 800f940:	2001396c 	.word	0x2001396c
 800f944:	20013958 	.word	0x20013958
 800f948:	20013940 	.word	0x20013940
 800f94c:	20013984 	.word	0x20013984
 800f950:	20013980 	.word	0x20013980
 800f954:	20013920 	.word	0x20013920
 800f958:	20013934 	.word	0x20013934
 800f95c:	20013930 	.word	0x20013930
 800f960:	2001399c 	.word	0x2001399c

0800f964 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800f964:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f966:	4b15      	ldr	r3, [pc, #84]	@ (800f9bc <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f968:	4d15      	ldr	r5, [pc, #84]	@ (800f9c0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800f96a:	681c      	ldr	r4, [r3, #0]
{
 800f96c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f96e:	6828      	ldr	r0, [r5, #0]
 800f970:	3004      	adds	r0, #4
{
 800f972:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f974:	f7ff f8d2 	bl	800eb1c <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800f978:	1c73      	adds	r3, r6, #1
 800f97a:	d107      	bne.n	800f98c <prvAddCurrentTaskToDelayedList+0x28>
 800f97c:	b137      	cbz	r7, 800f98c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f97e:	6829      	ldr	r1, [r5, #0]
 800f980:	4810      	ldr	r0, [pc, #64]	@ (800f9c4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800f982:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f986:	3104      	adds	r1, #4
 800f988:	f7ff b8a6 	b.w	800ead8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f98c:	682b      	ldr	r3, [r5, #0]
 800f98e:	19a4      	adds	r4, r4, r6
 800f990:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f992:	d307      	bcc.n	800f9a4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f994:	4b0c      	ldr	r3, [pc, #48]	@ (800f9c8 <prvAddCurrentTaskToDelayedList+0x64>)
 800f996:	6818      	ldr	r0, [r3, #0]
 800f998:	6829      	ldr	r1, [r5, #0]
}
 800f99a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f99e:	3104      	adds	r1, #4
 800f9a0:	f7ff b8a5 	b.w	800eaee <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f9a4:	4b09      	ldr	r3, [pc, #36]	@ (800f9cc <prvAddCurrentTaskToDelayedList+0x68>)
 800f9a6:	6818      	ldr	r0, [r3, #0]
 800f9a8:	6829      	ldr	r1, [r5, #0]
 800f9aa:	3104      	adds	r1, #4
 800f9ac:	f7ff f89f 	bl	800eaee <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f9b0:	4b07      	ldr	r3, [pc, #28]	@ (800f9d0 <prvAddCurrentTaskToDelayedList+0x6c>)
 800f9b2:	681a      	ldr	r2, [r3, #0]
 800f9b4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800f9b6:	bf88      	it	hi
 800f9b8:	601c      	strhi	r4, [r3, #0]
}
 800f9ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f9bc:	20013938 	.word	0x20013938
 800f9c0:	20013e10 	.word	0x20013e10
 800f9c4:	20013940 	.word	0x20013940
 800f9c8:	20013980 	.word	0x20013980
 800f9cc:	20013984 	.word	0x20013984
 800f9d0:	2001391c 	.word	0x2001391c

0800f9d4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f9d4:	4a06      	ldr	r2, [pc, #24]	@ (800f9f0 <prvResetNextTaskUnblockTime+0x1c>)
 800f9d6:	6813      	ldr	r3, [r2, #0]
 800f9d8:	6819      	ldr	r1, [r3, #0]
 800f9da:	4b06      	ldr	r3, [pc, #24]	@ (800f9f4 <prvResetNextTaskUnblockTime+0x20>)
 800f9dc:	b919      	cbnz	r1, 800f9e6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f9de:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f9e2:	601a      	str	r2, [r3, #0]
}
 800f9e4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9e6:	6812      	ldr	r2, [r2, #0]
 800f9e8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f9ea:	68d2      	ldr	r2, [r2, #12]
 800f9ec:	6852      	ldr	r2, [r2, #4]
 800f9ee:	e7f8      	b.n	800f9e2 <prvResetNextTaskUnblockTime+0xe>
 800f9f0:	20013984 	.word	0x20013984
 800f9f4:	2001391c 	.word	0x2001391c

0800f9f8 <prvDeleteTCB>:
	{
 800f9f8:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f9fa:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 800f9fe:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800fa00:	b93b      	cbnz	r3, 800fa12 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800fa02:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 800fa04:	f7ff f81c 	bl	800ea40 <vPortFree>
				vPortFree( pxTCB );
 800fa08:	4620      	mov	r0, r4
	}
 800fa0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800fa0e:	f7ff b817 	b.w	800ea40 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800fa12:	2b01      	cmp	r3, #1
 800fa14:	d0f9      	beq.n	800fa0a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800fa16:	2b02      	cmp	r3, #2
 800fa18:	d008      	beq.n	800fa2c <prvDeleteTCB+0x34>
 800fa1a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fa1e:	f383 8811 	msr	BASEPRI, r3
 800fa22:	f3bf 8f6f 	isb	sy
 800fa26:	f3bf 8f4f 	dsb	sy
 800fa2a:	e7fe      	b.n	800fa2a <prvDeleteTCB+0x32>
	}
 800fa2c:	bd10      	pop	{r4, pc}
	...

0800fa30 <prvIdleTask>:
{
 800fa30:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800fa32:	4c13      	ldr	r4, [pc, #76]	@ (800fa80 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa34:	4f13      	ldr	r7, [pc, #76]	@ (800fa84 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800fa36:	4d14      	ldr	r5, [pc, #80]	@ (800fa88 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800fa38:	6823      	ldr	r3, [r4, #0]
 800fa3a:	b973      	cbnz	r3, 800fa5a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800fa3c:	4b13      	ldr	r3, [pc, #76]	@ (800fa8c <prvIdleTask+0x5c>)
 800fa3e:	681b      	ldr	r3, [r3, #0]
 800fa40:	2b01      	cmp	r3, #1
 800fa42:	d9f8      	bls.n	800fa36 <prvIdleTask+0x6>
				taskYIELD();
 800fa44:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800fa48:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800fa4c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800fa50:	f3bf 8f4f 	dsb	sy
 800fa54:	f3bf 8f6f 	isb	sy
 800fa58:	e7ed      	b.n	800fa36 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800fa5a:	f7ff f8db 	bl	800ec14 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa5e:	68fb      	ldr	r3, [r7, #12]
 800fa60:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fa62:	1d30      	adds	r0, r6, #4
 800fa64:	f7ff f85a 	bl	800eb1c <uxListRemove>
				--uxCurrentNumberOfTasks;
 800fa68:	682b      	ldr	r3, [r5, #0]
 800fa6a:	3b01      	subs	r3, #1
 800fa6c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800fa6e:	6823      	ldr	r3, [r4, #0]
 800fa70:	3b01      	subs	r3, #1
 800fa72:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800fa74:	f7ff f8ee 	bl	800ec54 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800fa78:	4630      	mov	r0, r6
 800fa7a:	f7ff ffbd 	bl	800f9f8 <prvDeleteTCB>
 800fa7e:	e7db      	b.n	800fa38 <prvIdleTask+0x8>
 800fa80:	20013954 	.word	0x20013954
 800fa84:	20013958 	.word	0x20013958
 800fa88:	2001393c 	.word	0x2001393c
 800fa8c:	200139b0 	.word	0x200139b0

0800fa90 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800fa90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fa94:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800fa98:	0096      	lsls	r6, r2, #2
 800fa9a:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800fa9c:	4607      	mov	r7, r0
 800fa9e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800faa0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 800faa2:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800faa4:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800faa6:	f01a ff78 	bl	802a99a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800faaa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800faac:	3e04      	subs	r6, #4
 800faae:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800fab0:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 800fab4:	b3b5      	cbz	r5, 800fb24 <prvInitialiseNewTask.constprop.0+0x94>
 800fab6:	1e6b      	subs	r3, r5, #1
 800fab8:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 800fabc:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800fabe:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800fac2:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 800fac6:	b109      	cbz	r1, 800facc <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800fac8:	42ab      	cmp	r3, r5
 800faca:	d1f8      	bne.n	800fabe <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800facc:	2300      	movs	r3, #0
 800face:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800fad2:	9d08      	ldr	r5, [sp, #32]
 800fad4:	2d37      	cmp	r5, #55	@ 0x37
 800fad6:	bf28      	it	cs
 800fad8:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800fada:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800fade:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800fae0:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800fae2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800fae4:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800fae8:	f7fe fff3 	bl	800ead2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800faec:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800faf0:	f104 0018 	add.w	r0, r4, #24
 800faf4:	f7fe ffed 	bl	800ead2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800faf8:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800fafc:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fafe:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800fb00:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 800fb02:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800fb06:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800fb0a:	4642      	mov	r2, r8
 800fb0c:	4639      	mov	r1, r7
 800fb0e:	4630      	mov	r0, r6
 800fb10:	f7ff f852 	bl	800ebb8 <pxPortInitialiseStack>
 800fb14:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800fb16:	f1b9 0f00 	cmp.w	r9, #0
 800fb1a:	d001      	beq.n	800fb20 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800fb1c:	f8c9 4000 	str.w	r4, [r9]
}
 800fb20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800fb24:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 800fb28:	e7d3      	b.n	800fad2 <prvInitialiseNewTask.constprop.0+0x42>

0800fb2a <xTaskCreateStatic>:
	{
 800fb2a:	b570      	push	{r4, r5, r6, lr}
 800fb2c:	b086      	sub	sp, #24
 800fb2e:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 800fb32:	b945      	cbnz	r5, 800fb46 <xTaskCreateStatic+0x1c>
 800fb34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fb38:	f383 8811 	msr	BASEPRI, r3
 800fb3c:	f3bf 8f6f 	isb	sy
 800fb40:	f3bf 8f4f 	dsb	sy
 800fb44:	e7fe      	b.n	800fb44 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800fb46:	b944      	cbnz	r4, 800fb5a <xTaskCreateStatic+0x30>
 800fb48:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fb4c:	f383 8811 	msr	BASEPRI, r3
 800fb50:	f3bf 8f6f 	isb	sy
 800fb54:	f3bf 8f4f 	dsb	sy
 800fb58:	e7fe      	b.n	800fb58 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800fb5a:	2660      	movs	r6, #96	@ 0x60
 800fb5c:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800fb5e:	9e05      	ldr	r6, [sp, #20]
 800fb60:	2e60      	cmp	r6, #96	@ 0x60
 800fb62:	d008      	beq.n	800fb76 <xTaskCreateStatic+0x4c>
 800fb64:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fb68:	f383 8811 	msr	BASEPRI, r3
 800fb6c:	f3bf 8f6f 	isb	sy
 800fb70:	f3bf 8f4f 	dsb	sy
 800fb74:	e7fe      	b.n	800fb74 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800fb76:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fb78:	2502      	movs	r5, #2
 800fb7a:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fb7e:	ad04      	add	r5, sp, #16
 800fb80:	9501      	str	r5, [sp, #4]
 800fb82:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800fb84:	9402      	str	r4, [sp, #8]
 800fb86:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800fb88:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fb8a:	f7ff ff81 	bl	800fa90 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fb8e:	4620      	mov	r0, r4
 800fb90:	f7ff fe68 	bl	800f864 <prvAddNewTaskToReadyList>
	}
 800fb94:	9804      	ldr	r0, [sp, #16]
 800fb96:	b006      	add	sp, #24
 800fb98:	bd70      	pop	{r4, r5, r6, pc}

0800fb9a <xTaskCreate>:
	{
 800fb9a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fb9e:	4607      	mov	r7, r0
 800fba0:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800fba2:	0090      	lsls	r0, r2, #2
	{
 800fba4:	4688      	mov	r8, r1
 800fba6:	4616      	mov	r6, r2
 800fba8:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800fbaa:	f7fe feb1 	bl	800e910 <pvPortMalloc>
			if( pxStack != NULL )
 800fbae:	4605      	mov	r5, r0
 800fbb0:	b920      	cbnz	r0, 800fbbc <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800fbb2:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800fbb6:	b005      	add	sp, #20
 800fbb8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800fbbc:	2060      	movs	r0, #96	@ 0x60
 800fbbe:	f7fe fea7 	bl	800e910 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800fbc2:	4604      	mov	r4, r0
 800fbc4:	b198      	cbz	r0, 800fbee <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800fbc6:	2300      	movs	r3, #0
 800fbc8:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800fbcc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 800fbce:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800fbd0:	9301      	str	r3, [sp, #4]
 800fbd2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fbd4:	9002      	str	r0, [sp, #8]
 800fbd6:	9300      	str	r3, [sp, #0]
 800fbd8:	4632      	mov	r2, r6
 800fbda:	464b      	mov	r3, r9
 800fbdc:	4641      	mov	r1, r8
 800fbde:	4638      	mov	r0, r7
 800fbe0:	f7ff ff56 	bl	800fa90 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fbe4:	4620      	mov	r0, r4
 800fbe6:	f7ff fe3d 	bl	800f864 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800fbea:	2001      	movs	r0, #1
 800fbec:	e7e3      	b.n	800fbb6 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 800fbee:	4628      	mov	r0, r5
 800fbf0:	f7fe ff26 	bl	800ea40 <vPortFree>
		if( pxNewTCB != NULL )
 800fbf4:	e7dd      	b.n	800fbb2 <xTaskCreate+0x18>
	...

0800fbf8 <vTaskStartScheduler>:
{
 800fbf8:	b510      	push	{r4, lr}
 800fbfa:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800fbfc:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fbfe:	aa07      	add	r2, sp, #28
 800fc00:	a906      	add	r1, sp, #24
 800fc02:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800fc04:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fc08:	f7fe fe44 	bl	800e894 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800fc0c:	9b05      	ldr	r3, [sp, #20]
 800fc0e:	9302      	str	r3, [sp, #8]
 800fc10:	9b06      	ldr	r3, [sp, #24]
 800fc12:	9a07      	ldr	r2, [sp, #28]
 800fc14:	4916      	ldr	r1, [pc, #88]	@ (800fc70 <vTaskStartScheduler+0x78>)
 800fc16:	4817      	ldr	r0, [pc, #92]	@ (800fc74 <vTaskStartScheduler+0x7c>)
 800fc18:	e9cd 4300 	strd	r4, r3, [sp]
 800fc1c:	4623      	mov	r3, r4
 800fc1e:	f7ff ff84 	bl	800fb2a <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800fc22:	b318      	cbz	r0, 800fc6c <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 800fc24:	f000 fba6 	bl	8010374 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800fc28:	2801      	cmp	r0, #1
 800fc2a:	d114      	bne.n	800fc56 <vTaskStartScheduler+0x5e>
 800fc2c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fc30:	f383 8811 	msr	BASEPRI, r3
 800fc34:	f3bf 8f6f 	isb	sy
 800fc38:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800fc3c:	4b0e      	ldr	r3, [pc, #56]	@ (800fc78 <vTaskStartScheduler+0x80>)
 800fc3e:	f04f 32ff 	mov.w	r2, #4294967295
 800fc42:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800fc44:	4b0d      	ldr	r3, [pc, #52]	@ (800fc7c <vTaskStartScheduler+0x84>)
 800fc46:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800fc48:	4b0d      	ldr	r3, [pc, #52]	@ (800fc80 <vTaskStartScheduler+0x88>)
 800fc4a:	601c      	str	r4, [r3, #0]
}
 800fc4c:	b008      	add	sp, #32
 800fc4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800fc52:	f7ff b86f 	b.w	800ed34 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800fc56:	3001      	adds	r0, #1
 800fc58:	d108      	bne.n	800fc6c <vTaskStartScheduler+0x74>
 800fc5a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fc5e:	f383 8811 	msr	BASEPRI, r3
 800fc62:	f3bf 8f6f 	isb	sy
 800fc66:	f3bf 8f4f 	dsb	sy
 800fc6a:	e7fe      	b.n	800fc6a <vTaskStartScheduler+0x72>
}
 800fc6c:	b008      	add	sp, #32
 800fc6e:	bd10      	pop	{r4, pc}
 800fc70:	0802cc7a 	.word	0x0802cc7a
 800fc74:	0800fa31 	.word	0x0800fa31
 800fc78:	2001391c 	.word	0x2001391c
 800fc7c:	20013930 	.word	0x20013930
 800fc80:	20013938 	.word	0x20013938

0800fc84 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800fc84:	4a02      	ldr	r2, [pc, #8]	@ (800fc90 <vTaskSuspendAll+0xc>)
 800fc86:	6813      	ldr	r3, [r2, #0]
 800fc88:	3301      	adds	r3, #1
 800fc8a:	6013      	str	r3, [r2, #0]
}
 800fc8c:	4770      	bx	lr
 800fc8e:	bf00      	nop
 800fc90:	20013918 	.word	0x20013918

0800fc94 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800fc94:	4b01      	ldr	r3, [pc, #4]	@ (800fc9c <xTaskGetTickCount+0x8>)
 800fc96:	6818      	ldr	r0, [r3, #0]
}
 800fc98:	4770      	bx	lr
 800fc9a:	bf00      	nop
 800fc9c:	20013938 	.word	0x20013938

0800fca0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fca0:	4b3f      	ldr	r3, [pc, #252]	@ (800fda0 <xTaskIncrementTick+0x100>)
 800fca2:	681b      	ldr	r3, [r3, #0]
{
 800fca4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fca8:	2b00      	cmp	r3, #0
 800fcaa:	d172      	bne.n	800fd92 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800fcac:	4b3d      	ldr	r3, [pc, #244]	@ (800fda4 <xTaskIncrementTick+0x104>)
 800fcae:	681c      	ldr	r4, [r3, #0]
 800fcb0:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 800fcb2:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800fcb4:	b9bc      	cbnz	r4, 800fce6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800fcb6:	4b3c      	ldr	r3, [pc, #240]	@ (800fda8 <xTaskIncrementTick+0x108>)
 800fcb8:	681a      	ldr	r2, [r3, #0]
 800fcba:	6812      	ldr	r2, [r2, #0]
 800fcbc:	b142      	cbz	r2, 800fcd0 <xTaskIncrementTick+0x30>
 800fcbe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fcc2:	f383 8811 	msr	BASEPRI, r3
 800fcc6:	f3bf 8f6f 	isb	sy
 800fcca:	f3bf 8f4f 	dsb	sy
 800fcce:	e7fe      	b.n	800fcce <xTaskIncrementTick+0x2e>
 800fcd0:	4a36      	ldr	r2, [pc, #216]	@ (800fdac <xTaskIncrementTick+0x10c>)
 800fcd2:	6819      	ldr	r1, [r3, #0]
 800fcd4:	6810      	ldr	r0, [r2, #0]
 800fcd6:	6018      	str	r0, [r3, #0]
 800fcd8:	6011      	str	r1, [r2, #0]
 800fcda:	4a35      	ldr	r2, [pc, #212]	@ (800fdb0 <xTaskIncrementTick+0x110>)
 800fcdc:	6813      	ldr	r3, [r2, #0]
 800fcde:	3301      	adds	r3, #1
 800fce0:	6013      	str	r3, [r2, #0]
 800fce2:	f7ff fe77 	bl	800f9d4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800fce6:	4d33      	ldr	r5, [pc, #204]	@ (800fdb4 <xTaskIncrementTick+0x114>)
 800fce8:	4e33      	ldr	r6, [pc, #204]	@ (800fdb8 <xTaskIncrementTick+0x118>)
 800fcea:	682b      	ldr	r3, [r5, #0]
 800fcec:	4f33      	ldr	r7, [pc, #204]	@ (800fdbc <xTaskIncrementTick+0x11c>)
 800fcee:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 800fcf0:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800fcf4:	d212      	bcs.n	800fd1c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800fcf6:	683a      	ldr	r2, [r7, #0]
 800fcf8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800fcfa:	2114      	movs	r1, #20
 800fcfc:	434a      	muls	r2, r1
 800fcfe:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 800fd00:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 800fd02:	4a2f      	ldr	r2, [pc, #188]	@ (800fdc0 <xTaskIncrementTick+0x120>)
 800fd04:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 800fd06:	bf28      	it	cs
 800fd08:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 800fd0c:	2a00      	cmp	r2, #0
 800fd0e:	bf18      	it	ne
 800fd10:	f04f 0b01 	movne.w	fp, #1
}
 800fd14:	4658      	mov	r0, fp
 800fd16:	b003      	add	sp, #12
 800fd18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fd1c:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 800fda8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800fd20:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 800fdc8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fd24:	f8d9 2000 	ldr.w	r2, [r9]
 800fd28:	6812      	ldr	r2, [r2, #0]
 800fd2a:	b91a      	cbnz	r2, 800fd34 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd2c:	f04f 32ff 	mov.w	r2, #4294967295
 800fd30:	602a      	str	r2, [r5, #0]
					break;
 800fd32:	e7e0      	b.n	800fcf6 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fd34:	f8d9 2000 	ldr.w	r2, [r9]
 800fd38:	68d2      	ldr	r2, [r2, #12]
 800fd3a:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800fd3e:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 800fd42:	428c      	cmp	r4, r1
 800fd44:	d201      	bcs.n	800fd4a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800fd46:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800fd48:	e7d5      	b.n	800fcf6 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fd4a:	f108 0304 	add.w	r3, r8, #4
 800fd4e:	4618      	mov	r0, r3
 800fd50:	9301      	str	r3, [sp, #4]
 800fd52:	f7fe fee3 	bl	800eb1c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800fd56:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 800fd5a:	b119      	cbz	r1, 800fd64 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800fd5c:	f108 0018 	add.w	r0, r8, #24
 800fd60:	f7fe fedc 	bl	800eb1c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800fd64:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 800fd68:	f8da 1000 	ldr.w	r1, [sl]
 800fd6c:	2314      	movs	r3, #20
 800fd6e:	4288      	cmp	r0, r1
 800fd70:	bf88      	it	hi
 800fd72:	f8ca 0000 	strhi.w	r0, [sl]
 800fd76:	9901      	ldr	r1, [sp, #4]
 800fd78:	fb03 6000 	mla	r0, r3, r0, r6
 800fd7c:	f7fe feac 	bl	800ead8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800fd80:	6838      	ldr	r0, [r7, #0]
 800fd82:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800fd86:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 800fd88:	4291      	cmp	r1, r2
 800fd8a:	bf28      	it	cs
 800fd8c:	f04f 0b01 	movcs.w	fp, #1
 800fd90:	e7c8      	b.n	800fd24 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800fd92:	4a0c      	ldr	r2, [pc, #48]	@ (800fdc4 <xTaskIncrementTick+0x124>)
 800fd94:	6813      	ldr	r3, [r2, #0]
 800fd96:	3301      	adds	r3, #1
 800fd98:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800fd9a:	f04f 0b00 	mov.w	fp, #0
 800fd9e:	e7b9      	b.n	800fd14 <xTaskIncrementTick+0x74>
 800fda0:	20013918 	.word	0x20013918
 800fda4:	20013938 	.word	0x20013938
 800fda8:	20013984 	.word	0x20013984
 800fdac:	20013980 	.word	0x20013980
 800fdb0:	20013924 	.word	0x20013924
 800fdb4:	2001391c 	.word	0x2001391c
 800fdb8:	200139b0 	.word	0x200139b0
 800fdbc:	20013e10 	.word	0x20013e10
 800fdc0:	20013928 	.word	0x20013928
 800fdc4:	2001392c 	.word	0x2001392c
 800fdc8:	20013934 	.word	0x20013934

0800fdcc <xTaskResumeAll>:
{
 800fdcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800fdd0:	4c30      	ldr	r4, [pc, #192]	@ (800fe94 <xTaskResumeAll+0xc8>)
 800fdd2:	6823      	ldr	r3, [r4, #0]
 800fdd4:	b943      	cbnz	r3, 800fde8 <xTaskResumeAll+0x1c>
 800fdd6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fdda:	f383 8811 	msr	BASEPRI, r3
 800fdde:	f3bf 8f6f 	isb	sy
 800fde2:	f3bf 8f4f 	dsb	sy
 800fde6:	e7fe      	b.n	800fde6 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 800fde8:	f7fe ff14 	bl	800ec14 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800fdec:	6823      	ldr	r3, [r4, #0]
 800fdee:	3b01      	subs	r3, #1
 800fdf0:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fdf2:	6824      	ldr	r4, [r4, #0]
 800fdf4:	b12c      	cbz	r4, 800fe02 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 800fdf6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800fdf8:	f7fe ff2c 	bl	800ec54 <vPortExitCritical>
}
 800fdfc:	4620      	mov	r0, r4
 800fdfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800fe02:	4b25      	ldr	r3, [pc, #148]	@ (800fe98 <xTaskResumeAll+0xcc>)
 800fe04:	681b      	ldr	r3, [r3, #0]
 800fe06:	2b00      	cmp	r3, #0
 800fe08:	d0f5      	beq.n	800fdf6 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fe0a:	4d24      	ldr	r5, [pc, #144]	@ (800fe9c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800fe0c:	4e24      	ldr	r6, [pc, #144]	@ (800fea0 <xTaskResumeAll+0xd4>)
 800fe0e:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 800feb0 <xTaskResumeAll+0xe4>
 800fe12:	e01d      	b.n	800fe50 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe14:	68eb      	ldr	r3, [r5, #12]
 800fe16:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fe18:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800fe1a:	f104 0018 	add.w	r0, r4, #24
 800fe1e:	f7fe fe7d 	bl	800eb1c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fe22:	4638      	mov	r0, r7
 800fe24:	f7fe fe7a 	bl	800eb1c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800fe28:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800fe2a:	6832      	ldr	r2, [r6, #0]
 800fe2c:	2014      	movs	r0, #20
 800fe2e:	4293      	cmp	r3, r2
 800fe30:	fb00 8003 	mla	r0, r0, r3, r8
 800fe34:	4639      	mov	r1, r7
 800fe36:	bf88      	it	hi
 800fe38:	6033      	strhi	r3, [r6, #0]
 800fe3a:	f7fe fe4d 	bl	800ead8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800fe3e:	4b19      	ldr	r3, [pc, #100]	@ (800fea4 <xTaskResumeAll+0xd8>)
 800fe40:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800fe42:	681b      	ldr	r3, [r3, #0]
 800fe44:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fe46:	429a      	cmp	r2, r3
 800fe48:	d302      	bcc.n	800fe50 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 800fe4a:	4b17      	ldr	r3, [pc, #92]	@ (800fea8 <xTaskResumeAll+0xdc>)
 800fe4c:	2201      	movs	r2, #1
 800fe4e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fe50:	682b      	ldr	r3, [r5, #0]
 800fe52:	2b00      	cmp	r3, #0
 800fe54:	d1de      	bne.n	800fe14 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 800fe56:	b10c      	cbz	r4, 800fe5c <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 800fe58:	f7ff fdbc 	bl	800f9d4 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800fe5c:	4d13      	ldr	r5, [pc, #76]	@ (800feac <xTaskResumeAll+0xe0>)
 800fe5e:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800fe60:	b144      	cbz	r4, 800fe74 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 800fe62:	4e11      	ldr	r6, [pc, #68]	@ (800fea8 <xTaskResumeAll+0xdc>)
 800fe64:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800fe66:	f7ff ff1b 	bl	800fca0 <xTaskIncrementTick>
 800fe6a:	b100      	cbz	r0, 800fe6e <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 800fe6c:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800fe6e:	3c01      	subs	r4, #1
 800fe70:	d1f9      	bne.n	800fe66 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 800fe72:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800fe74:	4b0c      	ldr	r3, [pc, #48]	@ (800fea8 <xTaskResumeAll+0xdc>)
 800fe76:	681b      	ldr	r3, [r3, #0]
 800fe78:	2b00      	cmp	r3, #0
 800fe7a:	d0bc      	beq.n	800fdf6 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 800fe7c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800fe80:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800fe84:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800fe88:	f3bf 8f4f 	dsb	sy
 800fe8c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800fe90:	2401      	movs	r4, #1
 800fe92:	e7b1      	b.n	800fdf8 <xTaskResumeAll+0x2c>
 800fe94:	20013918 	.word	0x20013918
 800fe98:	2001393c 	.word	0x2001393c
 800fe9c:	2001396c 	.word	0x2001396c
 800fea0:	20013934 	.word	0x20013934
 800fea4:	20013e10 	.word	0x20013e10
 800fea8:	20013928 	.word	0x20013928
 800feac:	2001392c 	.word	0x2001392c
 800feb0:	200139b0 	.word	0x200139b0

0800feb4 <vTaskDelay>:
	{
 800feb4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800feb6:	b950      	cbnz	r0, 800fece <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800feb8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800febc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800fec0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800fec4:	f3bf 8f4f 	dsb	sy
 800fec8:	f3bf 8f6f 	isb	sy
	}
 800fecc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800fece:	4b0a      	ldr	r3, [pc, #40]	@ (800fef8 <vTaskDelay+0x44>)
 800fed0:	6819      	ldr	r1, [r3, #0]
 800fed2:	b141      	cbz	r1, 800fee6 <vTaskDelay+0x32>
 800fed4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800fed8:	f383 8811 	msr	BASEPRI, r3
 800fedc:	f3bf 8f6f 	isb	sy
 800fee0:	f3bf 8f4f 	dsb	sy
 800fee4:	e7fe      	b.n	800fee4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800fee6:	f7ff fecd 	bl	800fc84 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800feea:	f7ff fd3b 	bl	800f964 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800feee:	f7ff ff6d 	bl	800fdcc <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800fef2:	2800      	cmp	r0, #0
 800fef4:	d0e0      	beq.n	800feb8 <vTaskDelay+0x4>
 800fef6:	e7e9      	b.n	800fecc <vTaskDelay+0x18>
 800fef8:	20013918 	.word	0x20013918

0800fefc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800fefc:	4b17      	ldr	r3, [pc, #92]	@ (800ff5c <vTaskSwitchContext+0x60>)
 800fefe:	681a      	ldr	r2, [r3, #0]
 800ff00:	4b17      	ldr	r3, [pc, #92]	@ (800ff60 <vTaskSwitchContext+0x64>)
{
 800ff02:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800ff04:	b112      	cbz	r2, 800ff0c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800ff06:	2201      	movs	r2, #1
 800ff08:	601a      	str	r2, [r3, #0]
}
 800ff0a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ff0c:	4d15      	ldr	r5, [pc, #84]	@ (800ff64 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 800ff0e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ff10:	682a      	ldr	r2, [r5, #0]
 800ff12:	4915      	ldr	r1, [pc, #84]	@ (800ff68 <vTaskSwitchContext+0x6c>)
 800ff14:	2614      	movs	r6, #20
 800ff16:	fb06 f302 	mul.w	r3, r6, r2
 800ff1a:	18c8      	adds	r0, r1, r3
 800ff1c:	58cc      	ldr	r4, [r1, r3]
 800ff1e:	b18c      	cbz	r4, 800ff44 <vTaskSwitchContext+0x48>
 800ff20:	6844      	ldr	r4, [r0, #4]
 800ff22:	3308      	adds	r3, #8
 800ff24:	6864      	ldr	r4, [r4, #4]
 800ff26:	6044      	str	r4, [r0, #4]
 800ff28:	440b      	add	r3, r1
 800ff2a:	429c      	cmp	r4, r3
 800ff2c:	bf04      	itt	eq
 800ff2e:	6863      	ldreq	r3, [r4, #4]
 800ff30:	6043      	streq	r3, [r0, #4]
 800ff32:	2314      	movs	r3, #20
 800ff34:	fb03 1102 	mla	r1, r3, r2, r1
 800ff38:	684b      	ldr	r3, [r1, #4]
 800ff3a:	68d9      	ldr	r1, [r3, #12]
 800ff3c:	4b0b      	ldr	r3, [pc, #44]	@ (800ff6c <vTaskSwitchContext+0x70>)
 800ff3e:	6019      	str	r1, [r3, #0]
 800ff40:	602a      	str	r2, [r5, #0]
}
 800ff42:	e7e2      	b.n	800ff0a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ff44:	b942      	cbnz	r2, 800ff58 <vTaskSwitchContext+0x5c>
 800ff46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ff4a:	f383 8811 	msr	BASEPRI, r3
 800ff4e:	f3bf 8f6f 	isb	sy
 800ff52:	f3bf 8f4f 	dsb	sy
 800ff56:	e7fe      	b.n	800ff56 <vTaskSwitchContext+0x5a>
 800ff58:	3a01      	subs	r2, #1
 800ff5a:	e7dc      	b.n	800ff16 <vTaskSwitchContext+0x1a>
 800ff5c:	20013918 	.word	0x20013918
 800ff60:	20013928 	.word	0x20013928
 800ff64:	20013934 	.word	0x20013934
 800ff68:	200139b0 	.word	0x200139b0
 800ff6c:	20013e10 	.word	0x20013e10

0800ff70 <vTaskPlaceOnEventList>:
{
 800ff70:	b510      	push	{r4, lr}
 800ff72:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800ff74:	b940      	cbnz	r0, 800ff88 <vTaskPlaceOnEventList+0x18>
 800ff76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ff7a:	f383 8811 	msr	BASEPRI, r3
 800ff7e:	f3bf 8f6f 	isb	sy
 800ff82:	f3bf 8f4f 	dsb	sy
 800ff86:	e7fe      	b.n	800ff86 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ff88:	4b05      	ldr	r3, [pc, #20]	@ (800ffa0 <vTaskPlaceOnEventList+0x30>)
 800ff8a:	6819      	ldr	r1, [r3, #0]
 800ff8c:	3118      	adds	r1, #24
 800ff8e:	f7fe fdae 	bl	800eaee <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800ff92:	4620      	mov	r0, r4
 800ff94:	2101      	movs	r1, #1
}
 800ff96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800ff9a:	f7ff bce3 	b.w	800f964 <prvAddCurrentTaskToDelayedList>
 800ff9e:	bf00      	nop
 800ffa0:	20013e10 	.word	0x20013e10

0800ffa4 <vTaskPlaceOnEventListRestricted>:
	{
 800ffa4:	b538      	push	{r3, r4, r5, lr}
 800ffa6:	460d      	mov	r5, r1
 800ffa8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800ffaa:	b940      	cbnz	r0, 800ffbe <vTaskPlaceOnEventListRestricted+0x1a>
 800ffac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ffb0:	f383 8811 	msr	BASEPRI, r3
 800ffb4:	f3bf 8f6f 	isb	sy
 800ffb8:	f3bf 8f4f 	dsb	sy
 800ffbc:	e7fe      	b.n	800ffbc <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ffbe:	4b07      	ldr	r3, [pc, #28]	@ (800ffdc <vTaskPlaceOnEventListRestricted+0x38>)
 800ffc0:	6819      	ldr	r1, [r3, #0]
 800ffc2:	3118      	adds	r1, #24
 800ffc4:	f7fe fd88 	bl	800ead8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800ffc8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800ffca:	4621      	mov	r1, r4
 800ffcc:	bf0c      	ite	eq
 800ffce:	4628      	moveq	r0, r5
 800ffd0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800ffd4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800ffd8:	f7ff bcc4 	b.w	800f964 <prvAddCurrentTaskToDelayedList>
 800ffdc:	20013e10 	.word	0x20013e10

0800ffe0 <xTaskRemoveFromEventList>:
{
 800ffe0:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ffe2:	68c3      	ldr	r3, [r0, #12]
 800ffe4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800ffe6:	b944      	cbnz	r4, 800fffa <xTaskRemoveFromEventList+0x1a>
 800ffe8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ffec:	f383 8811 	msr	BASEPRI, r3
 800fff0:	f3bf 8f6f 	isb	sy
 800fff4:	f3bf 8f4f 	dsb	sy
 800fff8:	e7fe      	b.n	800fff8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800fffa:	f104 0518 	add.w	r5, r4, #24
 800fffe:	4628      	mov	r0, r5
 8010000:	f7fe fd8c 	bl	800eb1c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010004:	4b10      	ldr	r3, [pc, #64]	@ (8010048 <xTaskRemoveFromEventList+0x68>)
 8010006:	681b      	ldr	r3, [r3, #0]
 8010008:	b9db      	cbnz	r3, 8010042 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 801000a:	1d25      	adds	r5, r4, #4
 801000c:	4628      	mov	r0, r5
 801000e:	f7fe fd85 	bl	800eb1c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8010012:	4a0e      	ldr	r2, [pc, #56]	@ (801004c <xTaskRemoveFromEventList+0x6c>)
 8010014:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010016:	6811      	ldr	r1, [r2, #0]
 8010018:	428b      	cmp	r3, r1
 801001a:	bf88      	it	hi
 801001c:	6013      	strhi	r3, [r2, #0]
 801001e:	4a0c      	ldr	r2, [pc, #48]	@ (8010050 <xTaskRemoveFromEventList+0x70>)
 8010020:	2014      	movs	r0, #20
 8010022:	4629      	mov	r1, r5
 8010024:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8010028:	f7fe fd56 	bl	800ead8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 801002c:	4b09      	ldr	r3, [pc, #36]	@ (8010054 <xTaskRemoveFromEventList+0x74>)
 801002e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8010030:	681b      	ldr	r3, [r3, #0]
 8010032:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010034:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8010036:	bf83      	ittte	hi
 8010038:	4b07      	ldrhi	r3, [pc, #28]	@ (8010058 <xTaskRemoveFromEventList+0x78>)
 801003a:	2001      	movhi	r0, #1
 801003c:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 801003e:	2000      	movls	r0, #0
}
 8010040:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8010042:	4806      	ldr	r0, [pc, #24]	@ (801005c <xTaskRemoveFromEventList+0x7c>)
 8010044:	4629      	mov	r1, r5
 8010046:	e7ef      	b.n	8010028 <xTaskRemoveFromEventList+0x48>
 8010048:	20013918 	.word	0x20013918
 801004c:	20013934 	.word	0x20013934
 8010050:	200139b0 	.word	0x200139b0
 8010054:	20013e10 	.word	0x20013e10
 8010058:	20013928 	.word	0x20013928
 801005c:	2001396c 	.word	0x2001396c

08010060 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010060:	4b03      	ldr	r3, [pc, #12]	@ (8010070 <vTaskInternalSetTimeOutState+0x10>)
 8010062:	681b      	ldr	r3, [r3, #0]
 8010064:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010066:	4b03      	ldr	r3, [pc, #12]	@ (8010074 <vTaskInternalSetTimeOutState+0x14>)
 8010068:	681b      	ldr	r3, [r3, #0]
 801006a:	6043      	str	r3, [r0, #4]
}
 801006c:	4770      	bx	lr
 801006e:	bf00      	nop
 8010070:	20013924 	.word	0x20013924
 8010074:	20013938 	.word	0x20013938

08010078 <xTaskCheckForTimeOut>:
{
 8010078:	b570      	push	{r4, r5, r6, lr}
 801007a:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 801007c:	4605      	mov	r5, r0
 801007e:	b940      	cbnz	r0, 8010092 <xTaskCheckForTimeOut+0x1a>
 8010080:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010084:	f383 8811 	msr	BASEPRI, r3
 8010088:	f3bf 8f6f 	isb	sy
 801008c:	f3bf 8f4f 	dsb	sy
 8010090:	e7fe      	b.n	8010090 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8010092:	b941      	cbnz	r1, 80100a6 <xTaskCheckForTimeOut+0x2e>
 8010094:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010098:	f383 8811 	msr	BASEPRI, r3
 801009c:	f3bf 8f6f 	isb	sy
 80100a0:	f3bf 8f4f 	dsb	sy
 80100a4:	e7fe      	b.n	80100a4 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80100a6:	f7fe fdb5 	bl	800ec14 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80100aa:	4b0f      	ldr	r3, [pc, #60]	@ (80100e8 <xTaskCheckForTimeOut+0x70>)
 80100ac:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80100ae:	6823      	ldr	r3, [r4, #0]
 80100b0:	1c5a      	adds	r2, r3, #1
 80100b2:	d010      	beq.n	80100d6 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80100b4:	480d      	ldr	r0, [pc, #52]	@ (80100ec <xTaskCheckForTimeOut+0x74>)
 80100b6:	682e      	ldr	r6, [r5, #0]
 80100b8:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80100ba:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80100bc:	4286      	cmp	r6, r0
 80100be:	d001      	beq.n	80100c4 <xTaskCheckForTimeOut+0x4c>
 80100c0:	428a      	cmp	r2, r1
 80100c2:	d90f      	bls.n	80100e4 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80100c4:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80100c6:	4283      	cmp	r3, r0
 80100c8:	d90a      	bls.n	80100e0 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 80100ca:	1a5b      	subs	r3, r3, r1
 80100cc:	4413      	add	r3, r2
 80100ce:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80100d0:	4628      	mov	r0, r5
 80100d2:	f7ff ffc5 	bl	8010060 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80100d6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80100d8:	f7fe fdbc 	bl	800ec54 <vPortExitCritical>
}
 80100dc:	4620      	mov	r0, r4
 80100de:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 80100e0:	2300      	movs	r3, #0
 80100e2:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80100e4:	2401      	movs	r4, #1
 80100e6:	e7f7      	b.n	80100d8 <xTaskCheckForTimeOut+0x60>
 80100e8:	20013938 	.word	0x20013938
 80100ec:	20013924 	.word	0x20013924

080100f0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80100f0:	4b01      	ldr	r3, [pc, #4]	@ (80100f8 <vTaskMissedYield+0x8>)
 80100f2:	2201      	movs	r2, #1
 80100f4:	601a      	str	r2, [r3, #0]
}
 80100f6:	4770      	bx	lr
 80100f8:	20013928 	.word	0x20013928

080100fc <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 80100fc:	4b05      	ldr	r3, [pc, #20]	@ (8010114 <xTaskGetSchedulerState+0x18>)
 80100fe:	681b      	ldr	r3, [r3, #0]
 8010100:	b133      	cbz	r3, 8010110 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010102:	4b05      	ldr	r3, [pc, #20]	@ (8010118 <xTaskGetSchedulerState+0x1c>)
 8010104:	6818      	ldr	r0, [r3, #0]
 8010106:	fab0 f080 	clz	r0, r0
 801010a:	0940      	lsrs	r0, r0, #5
 801010c:	0040      	lsls	r0, r0, #1
 801010e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8010110:	2001      	movs	r0, #1
	}
 8010112:	4770      	bx	lr
 8010114:	20013930 	.word	0x20013930
 8010118:	20013918 	.word	0x20013918

0801011c <xTaskPriorityInherit>:
	{
 801011c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 801011e:	4604      	mov	r4, r0
 8010120:	b338      	cbz	r0, 8010172 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8010122:	4d1a      	ldr	r5, [pc, #104]	@ (801018c <xTaskPriorityInherit+0x70>)
 8010124:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8010126:	682a      	ldr	r2, [r5, #0]
 8010128:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 801012a:	4293      	cmp	r3, r2
 801012c:	d226      	bcs.n	801017c <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801012e:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8010130:	4e17      	ldr	r6, [pc, #92]	@ (8010190 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010132:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010134:	bfa1      	itttt	ge
 8010136:	682a      	ldrge	r2, [r5, #0]
 8010138:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 801013a:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 801013e:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8010140:	2214      	movs	r2, #20
 8010142:	fb02 6303 	mla	r3, r2, r3, r6
 8010146:	6942      	ldr	r2, [r0, #20]
 8010148:	429a      	cmp	r2, r3
 801014a:	d113      	bne.n	8010174 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801014c:	1d07      	adds	r7, r0, #4
 801014e:	4638      	mov	r0, r7
 8010150:	f7fe fce4 	bl	800eb1c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010154:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010156:	4a0f      	ldr	r2, [pc, #60]	@ (8010194 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010158:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 801015a:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 801015c:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 801015e:	2014      	movs	r0, #20
 8010160:	428b      	cmp	r3, r1
 8010162:	fb00 6003 	mla	r0, r0, r3, r6
 8010166:	4639      	mov	r1, r7
 8010168:	bf88      	it	hi
 801016a:	6013      	strhi	r3, [r2, #0]
 801016c:	f7fe fcb4 	bl	800ead8 <vListInsertEnd>
				xReturn = pdTRUE;
 8010170:	2001      	movs	r0, #1
	}
 8010172:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010174:	682b      	ldr	r3, [r5, #0]
 8010176:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010178:	62c3      	str	r3, [r0, #44]	@ 0x2c
 801017a:	e7f9      	b.n	8010170 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 801017c:	682b      	ldr	r3, [r5, #0]
 801017e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8010180:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010182:	4298      	cmp	r0, r3
 8010184:	bf2c      	ite	cs
 8010186:	2000      	movcs	r0, #0
 8010188:	2001      	movcc	r0, #1
 801018a:	e7f2      	b.n	8010172 <xTaskPriorityInherit+0x56>
 801018c:	20013e10 	.word	0x20013e10
 8010190:	200139b0 	.word	0x200139b0
 8010194:	20013934 	.word	0x20013934

08010198 <xTaskPriorityDisinherit>:
	{
 8010198:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 801019a:	b908      	cbnz	r0, 80101a0 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 801019c:	2000      	movs	r0, #0
	}
 801019e:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 80101a0:	4b1b      	ldr	r3, [pc, #108]	@ (8010210 <xTaskPriorityDisinherit+0x78>)
 80101a2:	681c      	ldr	r4, [r3, #0]
 80101a4:	4284      	cmp	r4, r0
 80101a6:	d008      	beq.n	80101ba <xTaskPriorityDisinherit+0x22>
 80101a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80101ac:	f383 8811 	msr	BASEPRI, r3
 80101b0:	f3bf 8f6f 	isb	sy
 80101b4:	f3bf 8f4f 	dsb	sy
 80101b8:	e7fe      	b.n	80101b8 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 80101ba:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80101bc:	b943      	cbnz	r3, 80101d0 <xTaskPriorityDisinherit+0x38>
 80101be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80101c2:	f383 8811 	msr	BASEPRI, r3
 80101c6:	f3bf 8f6f 	isb	sy
 80101ca:	f3bf 8f4f 	dsb	sy
 80101ce:	e7fe      	b.n	80101ce <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80101d0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80101d2:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 80101d4:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80101d6:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 80101d8:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80101da:	d0df      	beq.n	801019c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80101dc:	2b00      	cmp	r3, #0
 80101de:	d1dd      	bne.n	801019c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80101e0:	1d25      	adds	r5, r4, #4
 80101e2:	4628      	mov	r0, r5
 80101e4:	f7fe fc9a 	bl	800eb1c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80101e8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80101ea:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80101ec:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 80101f0:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 80101f2:	4a08      	ldr	r2, [pc, #32]	@ (8010214 <xTaskPriorityDisinherit+0x7c>)
 80101f4:	6811      	ldr	r1, [r2, #0]
 80101f6:	428b      	cmp	r3, r1
 80101f8:	bf88      	it	hi
 80101fa:	6013      	strhi	r3, [r2, #0]
 80101fc:	4a06      	ldr	r2, [pc, #24]	@ (8010218 <xTaskPriorityDisinherit+0x80>)
 80101fe:	2014      	movs	r0, #20
 8010200:	fb00 2003 	mla	r0, r0, r3, r2
 8010204:	4629      	mov	r1, r5
 8010206:	f7fe fc67 	bl	800ead8 <vListInsertEnd>
					xReturn = pdTRUE;
 801020a:	2001      	movs	r0, #1
		return xReturn;
 801020c:	e7c7      	b.n	801019e <xTaskPriorityDisinherit+0x6>
 801020e:	bf00      	nop
 8010210:	20013e10 	.word	0x20013e10
 8010214:	20013934 	.word	0x20013934
 8010218:	200139b0 	.word	0x200139b0

0801021c <vTaskPriorityDisinheritAfterTimeout>:
	{
 801021c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 801021e:	4604      	mov	r4, r0
 8010220:	2800      	cmp	r0, #0
 8010222:	d041      	beq.n	80102a8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8010224:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8010226:	b942      	cbnz	r2, 801023a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8010228:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801022c:	f383 8811 	msr	BASEPRI, r3
 8010230:	f3bf 8f6f 	isb	sy
 8010234:	f3bf 8f4f 	dsb	sy
 8010238:	e7fe      	b.n	8010238 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 801023a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 801023c:	4299      	cmp	r1, r3
 801023e:	bf38      	it	cc
 8010240:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8010242:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8010244:	428b      	cmp	r3, r1
 8010246:	d02f      	beq.n	80102a8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8010248:	2a01      	cmp	r2, #1
 801024a:	d12d      	bne.n	80102a8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 801024c:	4a17      	ldr	r2, [pc, #92]	@ (80102ac <vTaskPriorityDisinheritAfterTimeout+0x90>)
 801024e:	6812      	ldr	r2, [r2, #0]
 8010250:	4282      	cmp	r2, r0
 8010252:	d108      	bne.n	8010266 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8010254:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010258:	f383 8811 	msr	BASEPRI, r3
 801025c:	f3bf 8f6f 	isb	sy
 8010260:	f3bf 8f4f 	dsb	sy
 8010264:	e7fe      	b.n	8010264 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010266:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010268:	4d11      	ldr	r5, [pc, #68]	@ (80102b0 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 801026a:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801026c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 801026e:	f04f 0214 	mov.w	r2, #20
 8010272:	fb02 5303 	mla	r3, r2, r3, r5
 8010276:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010278:	bfa4      	itt	ge
 801027a:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 801027e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010280:	429a      	cmp	r2, r3
 8010282:	d111      	bne.n	80102a8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010284:	1d06      	adds	r6, r0, #4
 8010286:	4630      	mov	r0, r6
 8010288:	f7fe fc48 	bl	800eb1c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 801028c:	4a09      	ldr	r2, [pc, #36]	@ (80102b4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 801028e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010290:	6811      	ldr	r1, [r2, #0]
 8010292:	2014      	movs	r0, #20
 8010294:	428b      	cmp	r3, r1
 8010296:	fb00 5003 	mla	r0, r0, r3, r5
 801029a:	4631      	mov	r1, r6
	}
 801029c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 80102a0:	bf88      	it	hi
 80102a2:	6013      	strhi	r3, [r2, #0]
 80102a4:	f7fe bc18 	b.w	800ead8 <vListInsertEnd>
	}
 80102a8:	bd70      	pop	{r4, r5, r6, pc}
 80102aa:	bf00      	nop
 80102ac:	20013e10 	.word	0x20013e10
 80102b0:	200139b0 	.word	0x200139b0
 80102b4:	20013934 	.word	0x20013934

080102b8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80102b8:	4b04      	ldr	r3, [pc, #16]	@ (80102cc <pvTaskIncrementMutexHeldCount+0x14>)
 80102ba:	681a      	ldr	r2, [r3, #0]
 80102bc:	b11a      	cbz	r2, 80102c6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80102be:	6819      	ldr	r1, [r3, #0]
 80102c0:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 80102c2:	3201      	adds	r2, #1
 80102c4:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 80102c6:	6818      	ldr	r0, [r3, #0]
	}
 80102c8:	4770      	bx	lr
 80102ca:	bf00      	nop
 80102cc:	20013e10 	.word	0x20013e10

080102d0 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 80102d0:	4291      	cmp	r1, r2
{
 80102d2:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80102d4:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80102d6:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 80102d8:	d80a      	bhi.n	80102f0 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80102da:	1ad2      	subs	r2, r2, r3
 80102dc:	6983      	ldr	r3, [r0, #24]
 80102de:	429a      	cmp	r2, r3
 80102e0:	d20d      	bcs.n	80102fe <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80102e2:	4b08      	ldr	r3, [pc, #32]	@ (8010304 <prvInsertTimerInActiveList+0x34>)
 80102e4:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80102e6:	6818      	ldr	r0, [r3, #0]
 80102e8:	f7fe fc01 	bl	800eaee <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 80102ec:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 80102ee:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80102f0:	429a      	cmp	r2, r3
 80102f2:	d201      	bcs.n	80102f8 <prvInsertTimerInActiveList+0x28>
 80102f4:	4299      	cmp	r1, r3
 80102f6:	d202      	bcs.n	80102fe <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80102f8:	4b03      	ldr	r3, [pc, #12]	@ (8010308 <prvInsertTimerInActiveList+0x38>)
 80102fa:	1d01      	adds	r1, r0, #4
 80102fc:	e7f3      	b.n	80102e6 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 80102fe:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8010300:	e7f5      	b.n	80102ee <prvInsertTimerInActiveList+0x1e>
 8010302:	bf00      	nop
 8010304:	20013f10 	.word	0x20013f10
 8010308:	20013f14 	.word	0x20013f14

0801030c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 801030c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801030e:	4c11      	ldr	r4, [pc, #68]	@ (8010354 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8010310:	f7fe fc80 	bl	800ec14 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8010314:	6825      	ldr	r5, [r4, #0]
 8010316:	b9bd      	cbnz	r5, 8010348 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8010318:	4f0f      	ldr	r7, [pc, #60]	@ (8010358 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 801031a:	4e10      	ldr	r6, [pc, #64]	@ (801035c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 801031c:	4638      	mov	r0, r7
 801031e:	f7fe fbcd 	bl	800eabc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8010322:	4630      	mov	r0, r6
 8010324:	f7fe fbca 	bl	800eabc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8010328:	4b0d      	ldr	r3, [pc, #52]	@ (8010360 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801032a:	4a0e      	ldr	r2, [pc, #56]	@ (8010364 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 801032c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801032e:	4b0e      	ldr	r3, [pc, #56]	@ (8010368 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010330:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8010332:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010334:	200a      	movs	r0, #10
 8010336:	4b0d      	ldr	r3, [pc, #52]	@ (801036c <prvCheckForValidListAndQueue+0x60>)
 8010338:	9500      	str	r5, [sp, #0]
 801033a:	f7fe fe74 	bl	800f026 <xQueueGenericCreateStatic>
 801033e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8010340:	b110      	cbz	r0, 8010348 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8010342:	490b      	ldr	r1, [pc, #44]	@ (8010370 <prvCheckForValidListAndQueue+0x64>)
 8010344:	f7ff fa2c 	bl	800f7a0 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8010348:	b003      	add	sp, #12
 801034a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 801034e:	f7fe bc81 	b.w	800ec54 <vPortExitCritical>
 8010352:	bf00      	nop
 8010354:	20013f0c 	.word	0x20013f0c
 8010358:	20013f2c 	.word	0x20013f2c
 801035c:	20013f18 	.word	0x20013f18
 8010360:	20013f14 	.word	0x20013f14
 8010364:	20013e64 	.word	0x20013e64
 8010368:	20013f10 	.word	0x20013f10
 801036c:	20013e14 	.word	0x20013e14
 8010370:	0802cc7f 	.word	0x0802cc7f

08010374 <xTimerCreateTimerTask>:
{
 8010374:	b510      	push	{r4, lr}
 8010376:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8010378:	f7ff ffc8 	bl	801030c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 801037c:	4b12      	ldr	r3, [pc, #72]	@ (80103c8 <xTimerCreateTimerTask+0x54>)
 801037e:	681b      	ldr	r3, [r3, #0]
 8010380:	b1b3      	cbz	r3, 80103b0 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8010382:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8010384:	aa07      	add	r2, sp, #28
 8010386:	a906      	add	r1, sp, #24
 8010388:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801038a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801038e:	f7fe fa8d 	bl	800e8ac <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8010392:	9b05      	ldr	r3, [sp, #20]
 8010394:	9302      	str	r3, [sp, #8]
 8010396:	9b06      	ldr	r3, [sp, #24]
 8010398:	9301      	str	r3, [sp, #4]
 801039a:	2302      	movs	r3, #2
 801039c:	9300      	str	r3, [sp, #0]
 801039e:	9a07      	ldr	r2, [sp, #28]
 80103a0:	490a      	ldr	r1, [pc, #40]	@ (80103cc <xTimerCreateTimerTask+0x58>)
 80103a2:	480b      	ldr	r0, [pc, #44]	@ (80103d0 <xTimerCreateTimerTask+0x5c>)
 80103a4:	4623      	mov	r3, r4
 80103a6:	f7ff fbc0 	bl	800fb2a <xTaskCreateStatic>
 80103aa:	4b0a      	ldr	r3, [pc, #40]	@ (80103d4 <xTimerCreateTimerTask+0x60>)
 80103ac:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80103ae:	b940      	cbnz	r0, 80103c2 <xTimerCreateTimerTask+0x4e>
 80103b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80103b4:	f383 8811 	msr	BASEPRI, r3
 80103b8:	f3bf 8f6f 	isb	sy
 80103bc:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80103c0:	e7fe      	b.n	80103c0 <xTimerCreateTimerTask+0x4c>
}
 80103c2:	2001      	movs	r0, #1
 80103c4:	b008      	add	sp, #32
 80103c6:	bd10      	pop	{r4, pc}
 80103c8:	20013f0c 	.word	0x20013f0c
 80103cc:	0802cc84 	.word	0x0802cc84
 80103d0:	080104d5 	.word	0x080104d5
 80103d4:	20013f08 	.word	0x20013f08

080103d8 <xTimerGenericCommand>:
{
 80103d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80103da:	4616      	mov	r6, r2
	configASSERT( xTimer );
 80103dc:	4604      	mov	r4, r0
{
 80103de:	461a      	mov	r2, r3
	configASSERT( xTimer );
 80103e0:	b940      	cbnz	r0, 80103f4 <xTimerGenericCommand+0x1c>
 80103e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80103e6:	f383 8811 	msr	BASEPRI, r3
 80103ea:	f3bf 8f6f 	isb	sy
 80103ee:	f3bf 8f4f 	dsb	sy
 80103f2:	e7fe      	b.n	80103f2 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 80103f4:	4d0d      	ldr	r5, [pc, #52]	@ (801042c <xTimerGenericCommand+0x54>)
 80103f6:	6828      	ldr	r0, [r5, #0]
 80103f8:	b180      	cbz	r0, 801041c <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80103fa:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80103fc:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8010400:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8010402:	dc0d      	bgt.n	8010420 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010404:	f7ff fe7a 	bl	80100fc <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8010408:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 801040a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 801040c:	bf08      	it	eq
 801040e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8010410:	6828      	ldr	r0, [r5, #0]
 8010412:	bf18      	it	ne
 8010414:	461a      	movne	r2, r3
 8010416:	4669      	mov	r1, sp
 8010418:	f7fe feba 	bl	800f190 <xQueueGenericSend>
}
 801041c:	b004      	add	sp, #16
 801041e:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8010420:	2300      	movs	r3, #0
 8010422:	4669      	mov	r1, sp
 8010424:	f7fe ff66 	bl	800f2f4 <xQueueGenericSendFromISR>
 8010428:	e7f8      	b.n	801041c <xTimerGenericCommand+0x44>
 801042a:	bf00      	nop
 801042c:	20013f0c 	.word	0x20013f0c

08010430 <prvSampleTimeNow>:
{
 8010430:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8010434:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 80104d0 <prvSampleTimeNow+0xa0>
{
 8010438:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 801043a:	f7ff fc2b 	bl	800fc94 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801043e:	f8d8 3000 	ldr.w	r3, [r8]
 8010442:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8010444:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8010446:	d909      	bls.n	801045c <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8010448:	4f1f      	ldr	r7, [pc, #124]	@ (80104c8 <prvSampleTimeNow+0x98>)
 801044a:	683b      	ldr	r3, [r7, #0]
 801044c:	681a      	ldr	r2, [r3, #0]
 801044e:	b96a      	cbnz	r2, 801046c <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8010450:	4a1e      	ldr	r2, [pc, #120]	@ (80104cc <prvSampleTimeNow+0x9c>)
 8010452:	6811      	ldr	r1, [r2, #0]
 8010454:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8010456:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8010458:	2301      	movs	r3, #1
 801045a:	e000      	b.n	801045e <prvSampleTimeNow+0x2e>
 801045c:	2300      	movs	r3, #0
}
 801045e:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8010460:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8010462:	f8c8 5000 	str.w	r5, [r8]
}
 8010466:	b002      	add	sp, #8
 8010468:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801046c:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801046e:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8010470:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010474:	f104 0a04 	add.w	sl, r4, #4
 8010478:	4650      	mov	r0, sl
 801047a:	f7fe fb4f 	bl	800eb1c <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 801047e:	6a23      	ldr	r3, [r4, #32]
 8010480:	4620      	mov	r0, r4
 8010482:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010484:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8010488:	075b      	lsls	r3, r3, #29
 801048a:	d5de      	bpl.n	801044a <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 801048c:	69a3      	ldr	r3, [r4, #24]
 801048e:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 8010490:	4599      	cmp	r9, r3
 8010492:	d206      	bcs.n	80104a2 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010494:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8010496:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8010498:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801049a:	4651      	mov	r1, sl
 801049c:	f7fe fb27 	bl	800eaee <vListInsert>
 80104a0:	e7d3      	b.n	801044a <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80104a2:	2300      	movs	r3, #0
 80104a4:	9300      	str	r3, [sp, #0]
 80104a6:	464a      	mov	r2, r9
 80104a8:	4619      	mov	r1, r3
 80104aa:	4620      	mov	r0, r4
 80104ac:	f7ff ff94 	bl	80103d8 <xTimerGenericCommand>
				configASSERT( xResult );
 80104b0:	2800      	cmp	r0, #0
 80104b2:	d1ca      	bne.n	801044a <prvSampleTimeNow+0x1a>
 80104b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80104b8:	f383 8811 	msr	BASEPRI, r3
 80104bc:	f3bf 8f6f 	isb	sy
 80104c0:	f3bf 8f4f 	dsb	sy
 80104c4:	e7fe      	b.n	80104c4 <prvSampleTimeNow+0x94>
 80104c6:	bf00      	nop
 80104c8:	20013f14 	.word	0x20013f14
 80104cc:	20013f10 	.word	0x20013f10
 80104d0:	20013f04 	.word	0x20013f04

080104d4 <prvTimerTask>:
{
 80104d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80104d8:	4d6e      	ldr	r5, [pc, #440]	@ (8010694 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80104da:	4e6f      	ldr	r6, [pc, #444]	@ (8010698 <prvTimerTask+0x1c4>)
{
 80104dc:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80104de:	682b      	ldr	r3, [r5, #0]
 80104e0:	f8d3 8000 	ldr.w	r8, [r3]
 80104e4:	f1b8 0f00 	cmp.w	r8, #0
 80104e8:	d035      	beq.n	8010556 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80104ea:	68db      	ldr	r3, [r3, #12]
 80104ec:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80104f0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 80104f2:	f7ff fbc7 	bl	800fc84 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80104f6:	a804      	add	r0, sp, #16
 80104f8:	f7ff ff9a 	bl	8010430 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 80104fc:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80104fe:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8010500:	2b00      	cmp	r3, #0
 8010502:	d169      	bne.n	80105d8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8010504:	2c00      	cmp	r4, #0
 8010506:	d14c      	bne.n	80105a2 <prvTimerTask+0xce>
 8010508:	4540      	cmp	r0, r8
 801050a:	d350      	bcc.n	80105ae <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 801050c:	f7ff fc5e 	bl	800fdcc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010510:	682b      	ldr	r3, [r5, #0]
 8010512:	68db      	ldr	r3, [r3, #12]
 8010514:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010516:	1d38      	adds	r0, r7, #4
 8010518:	f7fe fb00 	bl	800eb1c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 801051c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8010520:	0758      	lsls	r0, r3, #29
 8010522:	d51a      	bpl.n	801055a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8010524:	69b9      	ldr	r1, [r7, #24]
 8010526:	4643      	mov	r3, r8
 8010528:	464a      	mov	r2, r9
 801052a:	4441      	add	r1, r8
 801052c:	4638      	mov	r0, r7
 801052e:	f7ff fecf 	bl	80102d0 <prvInsertTimerInActiveList>
 8010532:	b1b0      	cbz	r0, 8010562 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8010534:	9400      	str	r4, [sp, #0]
 8010536:	4623      	mov	r3, r4
 8010538:	4642      	mov	r2, r8
 801053a:	4621      	mov	r1, r4
 801053c:	4638      	mov	r0, r7
 801053e:	f7ff ff4b 	bl	80103d8 <xTimerGenericCommand>
			configASSERT( xResult );
 8010542:	b970      	cbnz	r0, 8010562 <prvTimerTask+0x8e>
 8010544:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010548:	f383 8811 	msr	BASEPRI, r3
 801054c:	f3bf 8f6f 	isb	sy
 8010550:	f3bf 8f4f 	dsb	sy
 8010554:	e7fe      	b.n	8010554 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8010556:	2401      	movs	r4, #1
 8010558:	e7cb      	b.n	80104f2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801055a:	f023 0301 	bic.w	r3, r3, #1
 801055e:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010562:	6a3b      	ldr	r3, [r7, #32]
 8010564:	4638      	mov	r0, r7
 8010566:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8010568:	6830      	ldr	r0, [r6, #0]
 801056a:	2200      	movs	r2, #0
 801056c:	a904      	add	r1, sp, #16
 801056e:	f7fe ff6f 	bl	800f450 <xQueueReceive>
 8010572:	2800      	cmp	r0, #0
 8010574:	d0b3      	beq.n	80104de <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8010576:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8010578:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 801057a:	2b00      	cmp	r3, #0
 801057c:	db2f      	blt.n	80105de <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 801057e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8010580:	6963      	ldr	r3, [r4, #20]
 8010582:	2b00      	cmp	r3, #0
 8010584:	d132      	bne.n	80105ec <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8010586:	a803      	add	r0, sp, #12
 8010588:	f7ff ff52 	bl	8010430 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 801058c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 801058e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8010590:	2b09      	cmp	r3, #9
 8010592:	d8e9      	bhi.n	8010568 <prvTimerTask+0x94>
 8010594:	e8df f003 	tbb	[pc, r3]
 8010598:	572e2e2e 	.word	0x572e2e2e
 801059c:	2e2e765e 	.word	0x2e2e765e
 80105a0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80105a2:	4b3e      	ldr	r3, [pc, #248]	@ (801069c <prvTimerTask+0x1c8>)
 80105a4:	681b      	ldr	r3, [r3, #0]
 80105a6:	681c      	ldr	r4, [r3, #0]
 80105a8:	fab4 f484 	clz	r4, r4
 80105ac:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80105ae:	6830      	ldr	r0, [r6, #0]
 80105b0:	4622      	mov	r2, r4
 80105b2:	eba8 0109 	sub.w	r1, r8, r9
 80105b6:	f7ff f932 	bl	800f81e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80105ba:	f7ff fc07 	bl	800fdcc <xTaskResumeAll>
 80105be:	2800      	cmp	r0, #0
 80105c0:	d1d2      	bne.n	8010568 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 80105c2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80105c6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80105ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80105ce:	f3bf 8f4f 	dsb	sy
 80105d2:	f3bf 8f6f 	isb	sy
 80105d6:	e7c7      	b.n	8010568 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 80105d8:	f7ff fbf8 	bl	800fdcc <xTaskResumeAll>
}
 80105dc:	e7c4      	b.n	8010568 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80105de:	9b05      	ldr	r3, [sp, #20]
 80105e0:	9907      	ldr	r1, [sp, #28]
 80105e2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80105e4:	9b04      	ldr	r3, [sp, #16]
 80105e6:	2b00      	cmp	r3, #0
 80105e8:	dbbe      	blt.n	8010568 <prvTimerTask+0x94>
 80105ea:	e7c8      	b.n	801057e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80105ec:	1d20      	adds	r0, r4, #4
 80105ee:	f7fe fa95 	bl	800eb1c <uxListRemove>
 80105f2:	e7c8      	b.n	8010586 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80105f4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80105f8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80105fa:	f043 0301 	orr.w	r3, r3, #1
 80105fe:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8010602:	9b05      	ldr	r3, [sp, #20]
 8010604:	4620      	mov	r0, r4
 8010606:	4419      	add	r1, r3
 8010608:	f7ff fe62 	bl	80102d0 <prvInsertTimerInActiveList>
 801060c:	2800      	cmp	r0, #0
 801060e:	d0ab      	beq.n	8010568 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010610:	6a23      	ldr	r3, [r4, #32]
 8010612:	4620      	mov	r0, r4
 8010614:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010616:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 801061a:	0759      	lsls	r1, r3, #29
 801061c:	d5a4      	bpl.n	8010568 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 801061e:	69a2      	ldr	r2, [r4, #24]
 8010620:	9905      	ldr	r1, [sp, #20]
 8010622:	2300      	movs	r3, #0
 8010624:	440a      	add	r2, r1
 8010626:	9300      	str	r3, [sp, #0]
 8010628:	4619      	mov	r1, r3
 801062a:	4620      	mov	r0, r4
 801062c:	f7ff fed4 	bl	80103d8 <xTimerGenericCommand>
							configASSERT( xResult );
 8010630:	2800      	cmp	r0, #0
 8010632:	d199      	bne.n	8010568 <prvTimerTask+0x94>
 8010634:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8010638:	f383 8811 	msr	BASEPRI, r3
 801063c:	f3bf 8f6f 	isb	sy
 8010640:	f3bf 8f4f 	dsb	sy
 8010644:	e7fe      	b.n	8010644 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010646:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801064a:	f023 0301 	bic.w	r3, r3, #1
 801064e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 8010652:	e789      	b.n	8010568 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010654:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8010658:	f043 0301 	orr.w	r3, r3, #1
 801065c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8010660:	9905      	ldr	r1, [sp, #20]
 8010662:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010664:	b941      	cbnz	r1, 8010678 <prvTimerTask+0x1a4>
 8010666:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801066a:	f383 8811 	msr	BASEPRI, r3
 801066e:	f3bf 8f6f 	isb	sy
 8010672:	f3bf 8f4f 	dsb	sy
 8010676:	e7fe      	b.n	8010676 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8010678:	4603      	mov	r3, r0
 801067a:	4401      	add	r1, r0
 801067c:	4620      	mov	r0, r4
 801067e:	f7ff fe27 	bl	80102d0 <prvInsertTimerInActiveList>
					break;
 8010682:	e771      	b.n	8010568 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8010684:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8010688:	079a      	lsls	r2, r3, #30
 801068a:	d4de      	bmi.n	801064a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 801068c:	4620      	mov	r0, r4
 801068e:	f7fe f9d7 	bl	800ea40 <vPortFree>
 8010692:	e769      	b.n	8010568 <prvTimerTask+0x94>
 8010694:	20013f14 	.word	0x20013f14
 8010698:	20013f0c 	.word	0x20013f0c
 801069c:	20013f10 	.word	0x20013f10

080106a0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80106a0:	8880      	ldrh	r0, [r0, #4]
 80106a2:	4770      	bx	lr

080106a4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80106a4:	b570      	push	{r4, r5, r6, lr}
 80106a6:	6803      	ldr	r3, [r0, #0]
 80106a8:	4605      	mov	r5, r0
 80106aa:	460c      	mov	r4, r1
 80106ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80106ae:	2100      	movs	r1, #0
 80106b0:	4798      	blx	r3
 80106b2:	682b      	ldr	r3, [r5, #0]
 80106b4:	4606      	mov	r6, r0
 80106b6:	6a1b      	ldr	r3, [r3, #32]
 80106b8:	4628      	mov	r0, r5
 80106ba:	4798      	blx	r3
 80106bc:	1ba4      	subs	r4, r4, r6
 80106be:	b2a4      	uxth	r4, r4
 80106c0:	fbb4 f0f0 	udiv	r0, r4, r0
 80106c4:	bd70      	pop	{r4, r5, r6, pc}

080106c6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 80106c6:	2300      	movs	r3, #0
 80106c8:	8083      	strh	r3, [r0, #4]
 80106ca:	4770      	bx	lr

080106cc <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80106cc:	b510      	push	{r4, lr}
 80106ce:	6803      	ldr	r3, [r0, #0]
 80106d0:	8881      	ldrh	r1, [r0, #4]
 80106d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80106d4:	4604      	mov	r4, r0
 80106d6:	4798      	blx	r3
 80106d8:	88a3      	ldrh	r3, [r4, #4]
 80106da:	3301      	adds	r3, #1
 80106dc:	80a3      	strh	r3, [r4, #4]
 80106de:	bd10      	pop	{r4, pc}

080106e0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80106e0:	6803      	ldr	r3, [r0, #0]
 80106e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80106e4:	4718      	bx	r3

080106e6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80106e6:	4770      	bx	lr

080106e8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80106e8:	4a02      	ldr	r2, [pc, #8]	@ (80106f4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80106ea:	6002      	str	r2, [r0, #0]
 80106ec:	2200      	movs	r2, #0
 80106ee:	8082      	strh	r2, [r0, #4]
 80106f0:	4770      	bx	lr
 80106f2:	bf00      	nop
 80106f4:	0802e130 	.word	0x0802e130

080106f8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80106f8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80106fa:	2000      	movs	r0, #0
 80106fc:	b12b      	cbz	r3, 801070a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80106fe:	b920      	cbnz	r0, 801070a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010700:	1a5a      	subs	r2, r3, r1
 8010702:	4250      	negs	r0, r2
 8010704:	4150      	adcs	r0, r2
 8010706:	699b      	ldr	r3, [r3, #24]
 8010708:	e7f8      	b.n	80106fc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801070a:	4770      	bx	lr

0801070c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 801070c:	2300      	movs	r3, #0
 801070e:	6148      	str	r0, [r1, #20]
 8010710:	618b      	str	r3, [r1, #24]
 8010712:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8010714:	b913      	cbnz	r3, 801071c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8010716:	6281      	str	r1, [r0, #40]	@ 0x28
 8010718:	4770      	bx	lr
 801071a:	4613      	mov	r3, r2
 801071c:	699a      	ldr	r2, [r3, #24]
 801071e:	2a00      	cmp	r2, #0
 8010720:	d1fb      	bne.n	801071a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010722:	6199      	str	r1, [r3, #24]
 8010724:	4770      	bx	lr

08010726 <_ZN8touchgfx9Container9removeAllEv>:
 8010726:	2200      	movs	r2, #0
 8010728:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801072a:	b123      	cbz	r3, 8010736 <_ZN8touchgfx9Container9removeAllEv+0x10>
 801072c:	6999      	ldr	r1, [r3, #24]
 801072e:	6281      	str	r1, [r0, #40]	@ 0x28
 8010730:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010734:	e7f8      	b.n	8010728 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8010736:	4770      	bx	lr

08010738 <_ZN8touchgfx9Container6unlinkEv>:
 8010738:	2300      	movs	r3, #0
 801073a:	6283      	str	r3, [r0, #40]	@ 0x28
 801073c:	4770      	bx	lr

0801073e <_ZNK8touchgfx9Container12getSolidRectEv>:
 801073e:	2200      	movs	r2, #0
 8010740:	8002      	strh	r2, [r0, #0]
 8010742:	8042      	strh	r2, [r0, #2]
 8010744:	8082      	strh	r2, [r0, #4]
 8010746:	80c2      	strh	r2, [r0, #6]
 8010748:	4770      	bx	lr

0801074a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801074a:	b570      	push	{r4, r5, r6, lr}
 801074c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801074e:	460d      	mov	r5, r1
 8010750:	4616      	mov	r6, r2
 8010752:	b13c      	cbz	r4, 8010764 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010754:	6823      	ldr	r3, [r4, #0]
 8010756:	4620      	mov	r0, r4
 8010758:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801075a:	4632      	mov	r2, r6
 801075c:	4629      	mov	r1, r5
 801075e:	4798      	blx	r3
 8010760:	69a4      	ldr	r4, [r4, #24]
 8010762:	e7f6      	b.n	8010752 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010764:	bd70      	pop	{r4, r5, r6, pc}

08010766 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8010766:	b538      	push	{r3, r4, r5, lr}
 8010768:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801076a:	460d      	mov	r5, r1
 801076c:	b134      	cbz	r4, 801077c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 801076e:	682b      	ldr	r3, [r5, #0]
 8010770:	4621      	mov	r1, r4
 8010772:	689b      	ldr	r3, [r3, #8]
 8010774:	4628      	mov	r0, r5
 8010776:	4798      	blx	r3
 8010778:	69a4      	ldr	r4, [r4, #24]
 801077a:	e7f7      	b.n	801076c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 801077c:	bd38      	pop	{r3, r4, r5, pc}

0801077e <_ZN8touchgfx9ContainerD1Ev>:
 801077e:	4770      	bx	lr

08010780 <_ZN8touchgfx9ContainerD0Ev>:
 8010780:	b510      	push	{r4, lr}
 8010782:	212c      	movs	r1, #44	@ 0x2c
 8010784:	4604      	mov	r4, r0
 8010786:	f018 ffc5 	bl	8029714 <_ZdlPvj>
 801078a:	4620      	mov	r0, r4
 801078c:	bd10      	pop	{r4, pc}

0801078e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 801078e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8010790:	b19b      	cbz	r3, 80107ba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010792:	428b      	cmp	r3, r1
 8010794:	d109      	bne.n	80107aa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8010796:	699a      	ldr	r2, [r3, #24]
 8010798:	2100      	movs	r1, #0
 801079a:	6159      	str	r1, [r3, #20]
 801079c:	6282      	str	r2, [r0, #40]	@ 0x28
 801079e:	b902      	cbnz	r2, 80107a2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80107a0:	4770      	bx	lr
 80107a2:	6199      	str	r1, [r3, #24]
 80107a4:	4770      	bx	lr
 80107a6:	4613      	mov	r3, r2
 80107a8:	b13a      	cbz	r2, 80107ba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80107aa:	699a      	ldr	r2, [r3, #24]
 80107ac:	428a      	cmp	r2, r1
 80107ae:	d1fa      	bne.n	80107a6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80107b0:	698a      	ldr	r2, [r1, #24]
 80107b2:	619a      	str	r2, [r3, #24]
 80107b4:	2300      	movs	r3, #0
 80107b6:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80107ba:	4770      	bx	lr

080107bc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80107bc:	b410      	push	{r4}
 80107be:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80107c0:	4604      	mov	r4, r0
 80107c2:	b92b      	cbnz	r3, 80107d0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80107c4:	6803      	ldr	r3, [r0, #0]
 80107c6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80107ca:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80107cc:	4611      	mov	r1, r2
 80107ce:	4718      	bx	r3
 80107d0:	b941      	cbnz	r1, 80107e4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80107d2:	6193      	str	r3, [r2, #24]
 80107d4:	6282      	str	r2, [r0, #40]	@ 0x28
 80107d6:	6154      	str	r4, [r2, #20]
 80107d8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80107dc:	4770      	bx	lr
 80107de:	4603      	mov	r3, r0
 80107e0:	2800      	cmp	r0, #0
 80107e2:	d0f9      	beq.n	80107d8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80107e4:	4299      	cmp	r1, r3
 80107e6:	6998      	ldr	r0, [r3, #24]
 80107e8:	d1f9      	bne.n	80107de <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80107ea:	6190      	str	r0, [r2, #24]
 80107ec:	618a      	str	r2, [r1, #24]
 80107ee:	e7f2      	b.n	80107d6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080107f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80107f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80107f4:	461f      	mov	r7, r3
 80107f6:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 80107fa:	460d      	mov	r5, r1
 80107fc:	4616      	mov	r6, r2
 80107fe:	b103      	cbz	r3, 8010802 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010800:	6038      	str	r0, [r7, #0]
 8010802:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010804:	b314      	cbz	r4, 801084c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8010806:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 801080a:	b1eb      	cbz	r3, 8010848 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801080c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010810:	428d      	cmp	r5, r1
 8010812:	db19      	blt.n	8010848 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010814:	8923      	ldrh	r3, [r4, #8]
 8010816:	b289      	uxth	r1, r1
 8010818:	440b      	add	r3, r1
 801081a:	b21b      	sxth	r3, r3
 801081c:	429d      	cmp	r5, r3
 801081e:	da13      	bge.n	8010848 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010820:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010824:	4296      	cmp	r6, r2
 8010826:	db0f      	blt.n	8010848 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010828:	8963      	ldrh	r3, [r4, #10]
 801082a:	b292      	uxth	r2, r2
 801082c:	4413      	add	r3, r2
 801082e:	b21b      	sxth	r3, r3
 8010830:	429e      	cmp	r6, r3
 8010832:	da09      	bge.n	8010848 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010834:	6823      	ldr	r3, [r4, #0]
 8010836:	1ab2      	subs	r2, r6, r2
 8010838:	1a69      	subs	r1, r5, r1
 801083a:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 801083e:	b212      	sxth	r2, r2
 8010840:	463b      	mov	r3, r7
 8010842:	b209      	sxth	r1, r1
 8010844:	4620      	mov	r0, r4
 8010846:	47c0      	blx	r8
 8010848:	69a4      	ldr	r4, [r4, #24]
 801084a:	e7db      	b.n	8010804 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 801084c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010850 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010854:	4c6e      	ldr	r4, [pc, #440]	@ (8010a10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8010856:	b0a1      	sub	sp, #132	@ 0x84
 8010858:	6824      	ldr	r4, [r4, #0]
 801085a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801085c:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 8010860:	9303      	str	r3, [sp, #12]
 8010862:	2400      	movs	r4, #0
 8010864:	802c      	strh	r4, [r5, #0]
 8010866:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 8010868:	802c      	strh	r4, [r5, #0]
 801086a:	601c      	str	r4, [r3, #0]
 801086c:	4606      	mov	r6, r0
 801086e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010872:	f7ff ffbd 	bl	80107f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010876:	f1b9 0f03 	cmp.w	r9, #3
 801087a:	f340 80c2 	ble.w	8010a02 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 801087e:	4631      	mov	r1, r6
 8010880:	a80c      	add	r0, sp, #48	@ 0x30
 8010882:	f007 fb4b 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010886:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801088a:	9306      	str	r3, [sp, #24]
 801088c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8010890:	9307      	str	r3, [sp, #28]
 8010892:	9b03      	ldr	r3, [sp, #12]
 8010894:	f8d3 a000 	ldr.w	sl, [r3]
 8010898:	f1ba 0f00 	cmp.w	sl, #0
 801089c:	f000 80b4 	beq.w	8010a08 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80108a0:	4651      	mov	r1, sl
 80108a2:	a810      	add	r0, sp, #64	@ 0x40
 80108a4:	f007 fb3a 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80108a8:	9b01      	ldr	r3, [sp, #4]
 80108aa:	9a06      	ldr	r2, [sp, #24]
 80108ac:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 80108b0:	189d      	adds	r5, r3, r2
 80108b2:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 80108b6:	9a07      	ldr	r2, [sp, #28]
 80108b8:	2002      	movs	r0, #2
 80108ba:	fb91 f1f0 	sdiv	r1, r1, r0
 80108be:	4419      	add	r1, r3
 80108c0:	1a6d      	subs	r5, r5, r1
 80108c2:	9b02      	ldr	r3, [sp, #8]
 80108c4:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 80108c8:	4413      	add	r3, r2
 80108ca:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 80108ce:	fb92 f2f0 	sdiv	r2, r2, r0
 80108d2:	440a      	add	r2, r1
 80108d4:	1a9b      	subs	r3, r3, r2
 80108d6:	435b      	muls	r3, r3
 80108d8:	fb05 3505 	mla	r5, r5, r5, r3
 80108dc:	4f4d      	ldr	r7, [pc, #308]	@ (8010a14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80108de:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80108e0:	ac10      	add	r4, sp, #64	@ 0x40
 80108e2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80108e4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80108e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80108e8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80108ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80108ec:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80108f0:	f1b9 0f0c 	cmp.w	r9, #12
 80108f4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80108f8:	f04f 0303 	mov.w	r3, #3
 80108fc:	bfc8      	it	gt
 80108fe:	4698      	movgt	r8, r3
 8010900:	f8cd 9000 	str.w	r9, [sp]
 8010904:	f04f 0400 	mov.w	r4, #0
 8010908:	bfdc      	itt	le
 801090a:	f109 32ff 	addle.w	r2, r9, #4294967295
 801090e:	fb92 f8f3 	sdivle	r8, r2, r3
 8010912:	1c63      	adds	r3, r4, #1
 8010914:	aa10      	add	r2, sp, #64	@ 0x40
 8010916:	f004 0401 	and.w	r4, r4, #1
 801091a:	9308      	str	r3, [sp, #32]
 801091c:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010920:	9b00      	ldr	r3, [sp, #0]
 8010922:	fb93 f3f8 	sdiv	r3, r3, r8
 8010926:	b29b      	uxth	r3, r3
 8010928:	3404      	adds	r4, #4
 801092a:	f04f 0b00 	mov.w	fp, #0
 801092e:	9304      	str	r3, [sp, #16]
 8010930:	9a04      	ldr	r2, [sp, #16]
 8010932:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8010936:	fb13 f302 	smulbb	r3, r3, r2
 801093a:	9a01      	ldr	r2, [sp, #4]
 801093c:	b29b      	uxth	r3, r3
 801093e:	1899      	adds	r1, r3, r2
 8010940:	9305      	str	r3, [sp, #20]
 8010942:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010946:	b209      	sxth	r1, r1
 8010948:	4299      	cmp	r1, r3
 801094a:	db4d      	blt.n	80109e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801094c:	8932      	ldrh	r2, [r6, #8]
 801094e:	4413      	add	r3, r2
 8010950:	b21b      	sxth	r3, r3
 8010952:	4299      	cmp	r1, r3
 8010954:	da48      	bge.n	80109e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010956:	9b04      	ldr	r3, [sp, #16]
 8010958:	6827      	ldr	r7, [r4, #0]
 801095a:	fb17 f703 	smulbb	r7, r7, r3
 801095e:	9b02      	ldr	r3, [sp, #8]
 8010960:	b2bf      	uxth	r7, r7
 8010962:	18fa      	adds	r2, r7, r3
 8010964:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010968:	b212      	sxth	r2, r2
 801096a:	429a      	cmp	r2, r3
 801096c:	db3c      	blt.n	80109e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801096e:	8970      	ldrh	r0, [r6, #10]
 8010970:	4403      	add	r3, r0
 8010972:	b21b      	sxth	r3, r3
 8010974:	429a      	cmp	r2, r3
 8010976:	da37      	bge.n	80109e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010978:	2300      	movs	r3, #0
 801097a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801097c:	4630      	mov	r0, r6
 801097e:	ab0b      	add	r3, sp, #44	@ 0x2c
 8010980:	f7ff ff36 	bl	80107f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010984:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8010986:	b37a      	cbz	r2, 80109e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010988:	4552      	cmp	r2, sl
 801098a:	d02d      	beq.n	80109e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801098c:	4611      	mov	r1, r2
 801098e:	a80e      	add	r0, sp, #56	@ 0x38
 8010990:	9209      	str	r2, [sp, #36]	@ 0x24
 8010992:	f007 fac3 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010996:	9a06      	ldr	r2, [sp, #24]
 8010998:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 801099c:	9b01      	ldr	r3, [sp, #4]
 801099e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 80109a2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 80109a6:	4413      	add	r3, r2
 80109a8:	f04f 0e02 	mov.w	lr, #2
 80109ac:	fb91 f1fe 	sdiv	r1, r1, lr
 80109b0:	4401      	add	r1, r0
 80109b2:	1a58      	subs	r0, r3, r1
 80109b4:	9a07      	ldr	r2, [sp, #28]
 80109b6:	9b02      	ldr	r3, [sp, #8]
 80109b8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 80109bc:	fb9c fcfe 	sdiv	ip, ip, lr
 80109c0:	4413      	add	r3, r2
 80109c2:	448c      	add	ip, r1
 80109c4:	eba3 030c 	sub.w	r3, r3, ip
 80109c8:	435b      	muls	r3, r3
 80109ca:	fb00 3300 	mla	r3, r0, r0, r3
 80109ce:	42ab      	cmp	r3, r5
 80109d0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80109d2:	d208      	bcs.n	80109e6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80109d4:	9803      	ldr	r0, [sp, #12]
 80109d6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80109d8:	6001      	str	r1, [r0, #0]
 80109da:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80109dc:	9805      	ldr	r0, [sp, #20]
 80109de:	8008      	strh	r0, [r1, #0]
 80109e0:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80109e2:	461d      	mov	r5, r3
 80109e4:	800f      	strh	r7, [r1, #0]
 80109e6:	4692      	mov	sl, r2
 80109e8:	f10b 0b01 	add.w	fp, fp, #1
 80109ec:	f1bb 0f04 	cmp.w	fp, #4
 80109f0:	f104 0408 	add.w	r4, r4, #8
 80109f4:	d19c      	bne.n	8010930 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80109f6:	9b00      	ldr	r3, [sp, #0]
 80109f8:	9c08      	ldr	r4, [sp, #32]
 80109fa:	444b      	add	r3, r9
 80109fc:	4544      	cmp	r4, r8
 80109fe:	9300      	str	r3, [sp, #0]
 8010a00:	d187      	bne.n	8010912 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010a02:	b021      	add	sp, #132	@ 0x84
 8010a04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a08:	f04f 35ff 	mov.w	r5, #4294967295
 8010a0c:	e766      	b.n	80108dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010a0e:	bf00      	nop
 8010a10:	20013f4c 	.word	0x20013f4c
 8010a14:	0802b6a0 	.word	0x0802b6a0

08010a18 <_ZN8touchgfx4RectaNERKS0_>:
 8010a18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a1c:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010a20:	888c      	ldrh	r4, [r1, #4]
 8010a22:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010a26:	443c      	add	r4, r7
 8010a28:	b2a4      	uxth	r4, r4
 8010a2a:	fa0f f884 	sxth.w	r8, r4
 8010a2e:	45c1      	cmp	r9, r8
 8010a30:	da2f      	bge.n	8010a92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010a32:	8882      	ldrh	r2, [r0, #4]
 8010a34:	444a      	add	r2, r9
 8010a36:	b292      	uxth	r2, r2
 8010a38:	fa0f fe82 	sxth.w	lr, r2
 8010a3c:	4577      	cmp	r7, lr
 8010a3e:	da28      	bge.n	8010a92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010a40:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010a44:	88cb      	ldrh	r3, [r1, #6]
 8010a46:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010a4a:	442b      	add	r3, r5
 8010a4c:	b21b      	sxth	r3, r3
 8010a4e:	429e      	cmp	r6, r3
 8010a50:	da1f      	bge.n	8010a92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010a52:	88c3      	ldrh	r3, [r0, #6]
 8010a54:	4433      	add	r3, r6
 8010a56:	b29b      	uxth	r3, r3
 8010a58:	fa0f fc83 	sxth.w	ip, r3
 8010a5c:	4565      	cmp	r5, ip
 8010a5e:	da18      	bge.n	8010a92 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010a60:	454f      	cmp	r7, r9
 8010a62:	bfb8      	it	lt
 8010a64:	464f      	movlt	r7, r9
 8010a66:	42b5      	cmp	r5, r6
 8010a68:	bfb8      	it	lt
 8010a6a:	4635      	movlt	r5, r6
 8010a6c:	45f0      	cmp	r8, lr
 8010a6e:	bfd8      	it	le
 8010a70:	4622      	movle	r2, r4
 8010a72:	1bd2      	subs	r2, r2, r7
 8010a74:	8082      	strh	r2, [r0, #4]
 8010a76:	884a      	ldrh	r2, [r1, #2]
 8010a78:	88c9      	ldrh	r1, [r1, #6]
 8010a7a:	8007      	strh	r7, [r0, #0]
 8010a7c:	440a      	add	r2, r1
 8010a7e:	b292      	uxth	r2, r2
 8010a80:	b211      	sxth	r1, r2
 8010a82:	458c      	cmp	ip, r1
 8010a84:	bfa8      	it	ge
 8010a86:	4613      	movge	r3, r2
 8010a88:	1b5b      	subs	r3, r3, r5
 8010a8a:	80c3      	strh	r3, [r0, #6]
 8010a8c:	8045      	strh	r5, [r0, #2]
 8010a8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010a92:	2300      	movs	r3, #0
 8010a94:	8003      	strh	r3, [r0, #0]
 8010a96:	8043      	strh	r3, [r0, #2]
 8010a98:	8083      	strh	r3, [r0, #4]
 8010a9a:	80c3      	strh	r3, [r0, #6]
 8010a9c:	e7f7      	b.n	8010a8e <_ZN8touchgfx4RectaNERKS0_+0x76>

08010a9e <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010a9e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010aa2:	2b00      	cmp	r3, #0
 8010aa4:	dd06      	ble.n	8010ab4 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8010aa6:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010aaa:	2800      	cmp	r0, #0
 8010aac:	bfcc      	ite	gt
 8010aae:	2000      	movgt	r0, #0
 8010ab0:	2001      	movle	r0, #1
 8010ab2:	4770      	bx	lr
 8010ab4:	2001      	movs	r0, #1
 8010ab6:	4770      	bx	lr

08010ab8 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010ab8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010abc:	2300      	movs	r3, #0
 8010abe:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8010ac0:	8003      	strh	r3, [r0, #0]
 8010ac2:	4604      	mov	r4, r0
 8010ac4:	8043      	strh	r3, [r0, #2]
 8010ac6:	8083      	strh	r3, [r0, #4]
 8010ac8:	80c3      	strh	r3, [r0, #6]
 8010aca:	2d00      	cmp	r5, #0
 8010acc:	d040      	beq.n	8010b50 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010ace:	1d28      	adds	r0, r5, #4
 8010ad0:	f7ff ffe5 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ad4:	b988      	cbnz	r0, 8010afa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010ad6:	4620      	mov	r0, r4
 8010ad8:	f7ff ffe1 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8010adc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010ae0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010ae4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010ae8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010aec:	b138      	cbz	r0, 8010afe <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010aee:	8022      	strh	r2, [r4, #0]
 8010af0:	8063      	strh	r3, [r4, #2]
 8010af2:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010af6:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010afa:	69ad      	ldr	r5, [r5, #24]
 8010afc:	e7e5      	b.n	8010aca <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010afe:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010b02:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010b06:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010b0a:	4290      	cmp	r0, r2
 8010b0c:	4607      	mov	r7, r0
 8010b0e:	bfa8      	it	ge
 8010b10:	4617      	movge	r7, r2
 8010b12:	4472      	add	r2, lr
 8010b14:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010b18:	8027      	strh	r7, [r4, #0]
 8010b1a:	4299      	cmp	r1, r3
 8010b1c:	460e      	mov	r6, r1
 8010b1e:	4440      	add	r0, r8
 8010b20:	bfa8      	it	ge
 8010b22:	461e      	movge	r6, r3
 8010b24:	4471      	add	r1, lr
 8010b26:	4463      	add	r3, ip
 8010b28:	b200      	sxth	r0, r0
 8010b2a:	b212      	sxth	r2, r2
 8010b2c:	b209      	sxth	r1, r1
 8010b2e:	b21b      	sxth	r3, r3
 8010b30:	4290      	cmp	r0, r2
 8010b32:	bfac      	ite	ge
 8010b34:	ebc7 0200 	rsbge	r2, r7, r0
 8010b38:	ebc7 0202 	rsblt	r2, r7, r2
 8010b3c:	4299      	cmp	r1, r3
 8010b3e:	bfac      	ite	ge
 8010b40:	ebc6 0301 	rsbge	r3, r6, r1
 8010b44:	ebc6 0303 	rsblt	r3, r6, r3
 8010b48:	8066      	strh	r6, [r4, #2]
 8010b4a:	80a2      	strh	r2, [r4, #4]
 8010b4c:	80e3      	strh	r3, [r4, #6]
 8010b4e:	e7d4      	b.n	8010afa <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010b50:	4620      	mov	r0, r4
 8010b52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010b56 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010b56:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010b5a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8010b5e:	b383      	cbz	r3, 8010bc2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010b60:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010b62:	b374      	cbz	r4, 8010bc2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010b64:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010b68:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010b6c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010b70:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010b74:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8010b78:	b303      	cbz	r3, 8010bbc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010b7a:	4668      	mov	r0, sp
 8010b7c:	1d21      	adds	r1, r4, #4
 8010b7e:	f8ad 5000 	strh.w	r5, [sp]
 8010b82:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010b86:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010b8a:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010b8e:	f7ff ff43 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8010b92:	4668      	mov	r0, sp
 8010b94:	f7ff ff83 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8010b98:	b980      	cbnz	r0, 8010bbc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010b9a:	f8bd 3000 	ldrh.w	r3, [sp]
 8010b9e:	88a2      	ldrh	r2, [r4, #4]
 8010ba0:	1a9b      	subs	r3, r3, r2
 8010ba2:	f8ad 3000 	strh.w	r3, [sp]
 8010ba6:	88e2      	ldrh	r2, [r4, #6]
 8010ba8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010bac:	1a9b      	subs	r3, r3, r2
 8010bae:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010bb2:	6823      	ldr	r3, [r4, #0]
 8010bb4:	4669      	mov	r1, sp
 8010bb6:	689b      	ldr	r3, [r3, #8]
 8010bb8:	4620      	mov	r0, r4
 8010bba:	4798      	blx	r3
 8010bbc:	69a4      	ldr	r4, [r4, #24]
 8010bbe:	2c00      	cmp	r4, #0
 8010bc0:	d1d8      	bne.n	8010b74 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010bc2:	b002      	add	sp, #8
 8010bc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010bc8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010bc8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010bca:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8010bce:	460d      	mov	r5, r1
 8010bd0:	4616      	mov	r6, r2
 8010bd2:	b323      	cbz	r3, 8010c1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010bd4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010bd6:	b314      	cbz	r4, 8010c1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010bd8:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8010bdc:	b1eb      	cbz	r3, 8010c1a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010bde:	6828      	ldr	r0, [r5, #0]
 8010be0:	6869      	ldr	r1, [r5, #4]
 8010be2:	466b      	mov	r3, sp
 8010be4:	c303      	stmia	r3!, {r0, r1}
 8010be6:	4668      	mov	r0, sp
 8010be8:	1d21      	adds	r1, r4, #4
 8010bea:	f7ff ff15 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8010bee:	4668      	mov	r0, sp
 8010bf0:	f7ff ff55 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8010bf4:	b988      	cbnz	r0, 8010c1a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010bf6:	f8bd 3000 	ldrh.w	r3, [sp]
 8010bfa:	88a2      	ldrh	r2, [r4, #4]
 8010bfc:	1a9b      	subs	r3, r3, r2
 8010bfe:	f8ad 3000 	strh.w	r3, [sp]
 8010c02:	88e2      	ldrh	r2, [r4, #6]
 8010c04:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010c08:	1a9b      	subs	r3, r3, r2
 8010c0a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010c0e:	6823      	ldr	r3, [r4, #0]
 8010c10:	4632      	mov	r2, r6
 8010c12:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8010c14:	4669      	mov	r1, sp
 8010c16:	4620      	mov	r0, r4
 8010c18:	4798      	blx	r3
 8010c1a:	69a4      	ldr	r4, [r4, #24]
 8010c1c:	e7db      	b.n	8010bd6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010c1e:	b002      	add	sp, #8
 8010c20:	bd70      	pop	{r4, r5, r6, pc}

08010c22 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010c22:	b513      	push	{r0, r1, r4, lr}
 8010c24:	6803      	ldr	r3, [r0, #0]
 8010c26:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 8010c2a:	2300      	movs	r3, #0
 8010c2c:	e9cd 3300 	strd	r3, r3, [sp]
 8010c30:	466b      	mov	r3, sp
 8010c32:	47a0      	blx	r4
 8010c34:	b002      	add	sp, #8
 8010c36:	bd10      	pop	{r4, pc}

08010c38 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010c38:	2301      	movs	r3, #1
 8010c3a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8010c3e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8010c42:	4770      	bx	lr

08010c44 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010c44:	2301      	movs	r3, #1
 8010c46:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8010c4a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8010c4e:	4770      	bx	lr

08010c50 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010c50:	6843      	ldr	r3, [r0, #4]
 8010c52:	2201      	movs	r2, #1
 8010c54:	725a      	strb	r2, [r3, #9]
 8010c56:	6840      	ldr	r0, [r0, #4]
 8010c58:	6803      	ldr	r3, [r0, #0]
 8010c5a:	691b      	ldr	r3, [r3, #16]
 8010c5c:	4718      	bx	r3

08010c5e <_ZN8touchgfx3HAL8flushDMAEv>:
 8010c5e:	6840      	ldr	r0, [r0, #4]
 8010c60:	6803      	ldr	r3, [r0, #0]
 8010c62:	689b      	ldr	r3, [r3, #8]
 8010c64:	4718      	bx	r3

08010c66 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010c66:	b530      	push	{r4, r5, lr}
 8010c68:	b08b      	sub	sp, #44	@ 0x2c
 8010c6a:	6804      	ldr	r4, [r0, #0]
 8010c6c:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8010c70:	9509      	str	r5, [sp, #36]	@ 0x24
 8010c72:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8010c76:	9508      	str	r5, [sp, #32]
 8010c78:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8010c7c:	9507      	str	r5, [sp, #28]
 8010c7e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 8010c82:	9506      	str	r5, [sp, #24]
 8010c84:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8010c88:	9505      	str	r5, [sp, #20]
 8010c8a:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8010c8e:	9504      	str	r5, [sp, #16]
 8010c90:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8010c94:	9503      	str	r5, [sp, #12]
 8010c96:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8010c9a:	9502      	str	r5, [sp, #8]
 8010c9c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8010ca0:	e9cd 3500 	strd	r3, r5, [sp]
 8010ca4:	4613      	mov	r3, r2
 8010ca6:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 8010ca8:	2200      	movs	r2, #0
 8010caa:	47a0      	blx	r4
 8010cac:	b00b      	add	sp, #44	@ 0x2c
 8010cae:	bd30      	pop	{r4, r5, pc}

08010cb0 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010cb0:	4b04      	ldr	r3, [pc, #16]	@ (8010cc4 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010cb2:	781b      	ldrb	r3, [r3, #0]
 8010cb4:	b123      	cbz	r3, 8010cc0 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010cb6:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 8010cba:	f080 0001 	eor.w	r0, r0, #1
 8010cbe:	4770      	bx	lr
 8010cc0:	2001      	movs	r0, #1
 8010cc2:	4770      	bx	lr
 8010cc4:	20013f4a 	.word	0x20013f4a

08010cc8 <_ZN8touchgfx3HAL8endFrameEv>:
 8010cc8:	b510      	push	{r4, lr}
 8010cca:	4604      	mov	r4, r0
 8010ccc:	6840      	ldr	r0, [r0, #4]
 8010cce:	6803      	ldr	r3, [r0, #0]
 8010cd0:	689b      	ldr	r3, [r3, #8]
 8010cd2:	4798      	blx	r3
 8010cd4:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 8010cd8:	b113      	cbz	r3, 8010ce0 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010cda:	2301      	movs	r3, #1
 8010cdc:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8010ce0:	bd10      	pop	{r4, pc}

08010ce2 <_ZN8touchgfx3HAL10initializeEv>:
 8010ce2:	b510      	push	{r4, lr}
 8010ce4:	4604      	mov	r4, r0
 8010ce6:	f7ef ff27 	bl	8000b38 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010cea:	f7ef fe2f 	bl	800094c <_ZN8touchgfx4GPIO4initEv>
 8010cee:	6860      	ldr	r0, [r4, #4]
 8010cf0:	6803      	ldr	r3, [r0, #0]
 8010cf2:	68db      	ldr	r3, [r3, #12]
 8010cf4:	4798      	blx	r3
 8010cf6:	68e0      	ldr	r0, [r4, #12]
 8010cf8:	6803      	ldr	r3, [r0, #0]
 8010cfa:	689b      	ldr	r3, [r3, #8]
 8010cfc:	4798      	blx	r3
 8010cfe:	6823      	ldr	r3, [r4, #0]
 8010d00:	4620      	mov	r0, r4
 8010d02:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8010d04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010d08:	4718      	bx	r3
	...

08010d0c <_ZN8touchgfx3HAL4tickEv>:
 8010d0c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010d0e:	6803      	ldr	r3, [r0, #0]
 8010d10:	4d62      	ldr	r5, [pc, #392]	@ (8010e9c <_ZN8touchgfx3HAL4tickEv+0x190>)
 8010d12:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8010d16:	4604      	mov	r4, r0
 8010d18:	4798      	blx	r3
 8010d1a:	2800      	cmp	r0, #0
 8010d1c:	f000 809e 	beq.w	8010e5c <_ZN8touchgfx3HAL4tickEv+0x150>
 8010d20:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 8010d24:	2b02      	cmp	r3, #2
 8010d26:	d002      	beq.n	8010d2e <_ZN8touchgfx3HAL4tickEv+0x22>
 8010d28:	2001      	movs	r0, #1
 8010d2a:	f7ef fd8d 	bl	8000848 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010d2e:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8010d32:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8010d36:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 8010d3a:	2600      	movs	r6, #0
 8010d3c:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8010d40:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8010d44:	b133      	cbz	r3, 8010d54 <_ZN8touchgfx3HAL4tickEv+0x48>
 8010d46:	6823      	ldr	r3, [r4, #0]
 8010d48:	4620      	mov	r0, r4
 8010d4a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8010d4e:	4798      	blx	r3
 8010d50:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8010d54:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8010d58:	6862      	ldr	r2, [r4, #4]
 8010d5a:	f083 0301 	eor.w	r3, r3, #1
 8010d5e:	7253      	strb	r3, [r2, #9]
 8010d60:	2601      	movs	r6, #1
 8010d62:	702e      	strb	r6, [r5, #0]
 8010d64:	f005 fe1a 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
 8010d68:	6803      	ldr	r3, [r0, #0]
 8010d6a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010d6c:	4798      	blx	r3
 8010d6e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8010d72:	b90b      	cbnz	r3, 8010d78 <_ZN8touchgfx3HAL4tickEv+0x6c>
 8010d74:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8010d78:	f005 fe10 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
 8010d7c:	6803      	ldr	r3, [r0, #0]
 8010d7e:	695b      	ldr	r3, [r3, #20]
 8010d80:	4798      	blx	r3
 8010d82:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8010d84:	6803      	ldr	r3, [r0, #0]
 8010d86:	691b      	ldr	r3, [r3, #16]
 8010d88:	4798      	blx	r3
 8010d8a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8010d8e:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8010d92:	3b01      	subs	r3, #1
 8010d94:	b2db      	uxtb	r3, r3
 8010d96:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8010d9a:	b10a      	cbz	r2, 8010da0 <_ZN8touchgfx3HAL4tickEv+0x94>
 8010d9c:	2b00      	cmp	r3, #0
 8010d9e:	d1eb      	bne.n	8010d78 <_ZN8touchgfx3HAL4tickEv+0x6c>
 8010da0:	4a3f      	ldr	r2, [pc, #252]	@ (8010ea0 <_ZN8touchgfx3HAL4tickEv+0x194>)
 8010da2:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8010da6:	7813      	ldrb	r3, [r2, #0]
 8010da8:	3301      	adds	r3, #1
 8010daa:	b25b      	sxtb	r3, r3
 8010dac:	4299      	cmp	r1, r3
 8010dae:	7013      	strb	r3, [r2, #0]
 8010db0:	dc10      	bgt.n	8010dd4 <_ZN8touchgfx3HAL4tickEv+0xc8>
 8010db2:	68e0      	ldr	r0, [r4, #12]
 8010db4:	2300      	movs	r3, #0
 8010db6:	7013      	strb	r3, [r2, #0]
 8010db8:	6803      	ldr	r3, [r0, #0]
 8010dba:	aa03      	add	r2, sp, #12
 8010dbc:	68db      	ldr	r3, [r3, #12]
 8010dbe:	a902      	add	r1, sp, #8
 8010dc0:	4798      	blx	r3
 8010dc2:	6823      	ldr	r3, [r4, #0]
 8010dc4:	2800      	cmp	r0, #0
 8010dc6:	d059      	beq.n	8010e7c <_ZN8touchgfx3HAL4tickEv+0x170>
 8010dc8:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 8010dcc:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010dd0:	4620      	mov	r0, r4
 8010dd2:	4798      	blx	r3
 8010dd4:	6960      	ldr	r0, [r4, #20]
 8010dd6:	2300      	movs	r3, #0
 8010dd8:	f88d 3007 	strb.w	r3, [sp, #7]
 8010ddc:	b158      	cbz	r0, 8010df6 <_ZN8touchgfx3HAL4tickEv+0xea>
 8010dde:	6803      	ldr	r3, [r0, #0]
 8010de0:	f10d 0107 	add.w	r1, sp, #7
 8010de4:	68db      	ldr	r3, [r3, #12]
 8010de6:	4798      	blx	r3
 8010de8:	b128      	cbz	r0, 8010df6 <_ZN8touchgfx3HAL4tickEv+0xea>
 8010dea:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8010dec:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010df0:	6803      	ldr	r3, [r0, #0]
 8010df2:	68db      	ldr	r3, [r3, #12]
 8010df4:	4798      	blx	r3
 8010df6:	f104 001c 	add.w	r0, r4, #28
 8010dfa:	f017 fe6b 	bl	8028ad4 <_ZN8touchgfx8Gestures4tickEv>
 8010dfe:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 8010e02:	b30b      	cbz	r3, 8010e48 <_ZN8touchgfx3HAL4tickEv+0x13c>
 8010e04:	6920      	ldr	r0, [r4, #16]
 8010e06:	6803      	ldr	r3, [r0, #0]
 8010e08:	691b      	ldr	r3, [r3, #16]
 8010e0a:	4798      	blx	r3
 8010e0c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010e0e:	4606      	mov	r6, r0
 8010e10:	b903      	cbnz	r3, 8010e14 <_ZN8touchgfx3HAL4tickEv+0x108>
 8010e12:	6760      	str	r0, [r4, #116]	@ 0x74
 8010e14:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010e16:	4a23      	ldr	r2, [pc, #140]	@ (8010ea4 <_ZN8touchgfx3HAL4tickEv+0x198>)
 8010e18:	1af3      	subs	r3, r6, r3
 8010e1a:	4293      	cmp	r3, r2
 8010e1c:	d914      	bls.n	8010e48 <_ZN8touchgfx3HAL4tickEv+0x13c>
 8010e1e:	6920      	ldr	r0, [r4, #16]
 8010e20:	6803      	ldr	r3, [r0, #0]
 8010e22:	699b      	ldr	r3, [r3, #24]
 8010e24:	4798      	blx	r3
 8010e26:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010e28:	2264      	movs	r2, #100	@ 0x64
 8010e2a:	1af3      	subs	r3, r6, r3
 8010e2c:	fbb3 f3f2 	udiv	r3, r3, r2
 8010e30:	fbb0 f0f3 	udiv	r0, r0, r3
 8010e34:	2800      	cmp	r0, #0
 8010e36:	dc26      	bgt.n	8010e86 <_ZN8touchgfx3HAL4tickEv+0x17a>
 8010e38:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 8010e3c:	6920      	ldr	r0, [r4, #16]
 8010e3e:	6803      	ldr	r3, [r0, #0]
 8010e40:	2100      	movs	r1, #0
 8010e42:	69db      	ldr	r3, [r3, #28]
 8010e44:	4798      	blx	r3
 8010e46:	6766      	str	r6, [r4, #116]	@ 0x74
 8010e48:	6823      	ldr	r3, [r4, #0]
 8010e4a:	4620      	mov	r0, r4
 8010e4c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8010e50:	4798      	blx	r3
 8010e52:	f005 fda3 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
 8010e56:	6803      	ldr	r3, [r0, #0]
 8010e58:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010e5a:	4798      	blx	r3
 8010e5c:	6823      	ldr	r3, [r4, #0]
 8010e5e:	4620      	mov	r0, r4
 8010e60:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8010e64:	4798      	blx	r3
 8010e66:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 8010e6a:	2b02      	cmp	r3, #2
 8010e6c:	d002      	beq.n	8010e74 <_ZN8touchgfx3HAL4tickEv+0x168>
 8010e6e:	2001      	movs	r0, #1
 8010e70:	f7ef fd14 	bl	800089c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010e74:	2300      	movs	r3, #0
 8010e76:	702b      	strb	r3, [r5, #0]
 8010e78:	b004      	add	sp, #16
 8010e7a:	bd70      	pop	{r4, r5, r6, pc}
 8010e7c:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 8010e80:	4620      	mov	r0, r4
 8010e82:	4798      	blx	r3
 8010e84:	e7a6      	b.n	8010dd4 <_ZN8touchgfx3HAL4tickEv+0xc8>
 8010e86:	2863      	cmp	r0, #99	@ 0x63
 8010e88:	bfcb      	itete	gt
 8010e8a:	2300      	movgt	r3, #0
 8010e8c:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 8010e90:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 8010e94:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 8010e98:	e7d0      	b.n	8010e3c <_ZN8touchgfx3HAL4tickEv+0x130>
 8010e9a:	bf00      	nop
 8010e9c:	20013f50 	.word	0x20013f50
 8010ea0:	20013f51 	.word	0x20013f51
 8010ea4:	05f5e100 	.word	0x05f5e100

08010ea8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010ea8:	b510      	push	{r4, lr}
 8010eaa:	4604      	mov	r4, r0
 8010eac:	f7ef fe74 	bl	8000b98 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010eb0:	6863      	ldr	r3, [r4, #4]
 8010eb2:	2200      	movs	r2, #0
 8010eb4:	729a      	strb	r2, [r3, #10]
 8010eb6:	bd10      	pop	{r4, pc}

08010eb8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010eb8:	65c1      	str	r1, [r0, #92]	@ 0x5c
 8010eba:	301c      	adds	r0, #28
 8010ebc:	f017 be08 	b.w	8028ad0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010ec0 <_ZN8touchgfx3HAL5touchEll>:
 8010ec0:	b530      	push	{r4, r5, lr}
 8010ec2:	b087      	sub	sp, #28
 8010ec4:	4604      	mov	r4, r0
 8010ec6:	a804      	add	r0, sp, #16
 8010ec8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010ecc:	f005 fb4e 	bl	801656c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010ed0:	9b04      	ldr	r3, [sp, #16]
 8010ed2:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010ed6:	a906      	add	r1, sp, #24
 8010ed8:	9b05      	ldr	r3, [sp, #20]
 8010eda:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010ede:	a803      	add	r0, sp, #12
 8010ee0:	f005 fb96 	bl	8016610 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010ee4:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 8010ee8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010eec:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010ef0:	f104 001c 	add.w	r0, r4, #28
 8010ef4:	b189      	cbz	r1, 8010f1a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8010ef6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 8010efa:	9300      	str	r3, [sp, #0]
 8010efc:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 8010f00:	4613      	mov	r3, r2
 8010f02:	462a      	mov	r2, r5
 8010f04:	f017 fdf4 	bl	8028af0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010f08:	b128      	cbz	r0, 8010f16 <_ZN8touchgfx3HAL5touchEll+0x56>
 8010f0a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010f0e:	6623      	str	r3, [r4, #96]	@ 0x60
 8010f10:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010f14:	6663      	str	r3, [r4, #100]	@ 0x64
 8010f16:	b007      	add	sp, #28
 8010f18:	bd30      	pop	{r4, r5, pc}
 8010f1a:	f017 fe29 	bl	8028b70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010f1e:	2301      	movs	r3, #1
 8010f20:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8010f24:	e7f1      	b.n	8010f0a <_ZN8touchgfx3HAL5touchEll+0x4a>

08010f26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8010f26:	b510      	push	{r4, lr}
 8010f28:	2b00      	cmp	r3, #0
 8010f2a:	d046      	beq.n	8010fba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010f2c:	ea81 0002 	eor.w	r0, r1, r2
 8010f30:	07c4      	lsls	r4, r0, #31
 8010f32:	d508      	bpl.n	8010f46 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8010f34:	440b      	add	r3, r1
 8010f36:	3a01      	subs	r2, #1
 8010f38:	428b      	cmp	r3, r1
 8010f3a:	d93e      	bls.n	8010fba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010f3c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010f40:	f801 0b01 	strb.w	r0, [r1], #1
 8010f44:	e7f8      	b.n	8010f38 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8010f46:	07d0      	lsls	r0, r2, #31
 8010f48:	bf42      	ittt	mi
 8010f4a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010f4e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8010f52:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8010f56:	2b01      	cmp	r3, #1
 8010f58:	d911      	bls.n	8010f7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010f5a:	ea81 0402 	eor.w	r4, r1, r2
 8010f5e:	07a4      	lsls	r4, r4, #30
 8010f60:	4610      	mov	r0, r2
 8010f62:	d022      	beq.n	8010faa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8010f64:	f023 0401 	bic.w	r4, r3, #1
 8010f68:	440c      	add	r4, r1
 8010f6a:	428c      	cmp	r4, r1
 8010f6c:	4602      	mov	r2, r0
 8010f6e:	d904      	bls.n	8010f7a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010f70:	8812      	ldrh	r2, [r2, #0]
 8010f72:	f821 2b02 	strh.w	r2, [r1], #2
 8010f76:	3002      	adds	r0, #2
 8010f78:	e7f7      	b.n	8010f6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010f7a:	f003 0301 	and.w	r3, r3, #1
 8010f7e:	f023 0003 	bic.w	r0, r3, #3
 8010f82:	4408      	add	r0, r1
 8010f84:	4288      	cmp	r0, r1
 8010f86:	4614      	mov	r4, r2
 8010f88:	d904      	bls.n	8010f94 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010f8a:	6824      	ldr	r4, [r4, #0]
 8010f8c:	f841 4b04 	str.w	r4, [r1], #4
 8010f90:	3204      	adds	r2, #4
 8010f92:	e7f7      	b.n	8010f84 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8010f94:	f003 0303 	and.w	r3, r3, #3
 8010f98:	440b      	add	r3, r1
 8010f9a:	3a01      	subs	r2, #1
 8010f9c:	428b      	cmp	r3, r1
 8010f9e:	d90c      	bls.n	8010fba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010fa0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010fa4:	f801 0b01 	strb.w	r0, [r1], #1
 8010fa8:	e7f8      	b.n	8010f9c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010faa:	0790      	lsls	r0, r2, #30
 8010fac:	d0e7      	beq.n	8010f7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010fae:	f832 0b02 	ldrh.w	r0, [r2], #2
 8010fb2:	f821 0b02 	strh.w	r0, [r1], #2
 8010fb6:	3b02      	subs	r3, #2
 8010fb8:	e7e1      	b.n	8010f7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010fba:	2001      	movs	r0, #1
 8010fbc:	bd10      	pop	{r4, pc}

08010fbe <_ZN8touchgfx3HAL7noTouchEv>:
 8010fbe:	b510      	push	{r4, lr}
 8010fc0:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 8010fc4:	4604      	mov	r4, r0
 8010fc6:	b153      	cbz	r3, 8010fde <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010fc8:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 8010fcc:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 8010fd0:	2101      	movs	r1, #1
 8010fd2:	301c      	adds	r0, #28
 8010fd4:	f017 fdcc 	bl	8028b70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010fd8:	2300      	movs	r3, #0
 8010fda:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8010fde:	bd10      	pop	{r4, pc}

08010fe0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010fe0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010fe4:	b085      	sub	sp, #20
 8010fe6:	ad04      	add	r5, sp, #16
 8010fe8:	4604      	mov	r4, r0
 8010fea:	2000      	movs	r0, #0
 8010fec:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010ff0:	69a0      	ldr	r0, [r4, #24]
 8010ff2:	6806      	ldr	r6, [r0, #0]
 8010ff4:	9501      	str	r5, [sp, #4]
 8010ff6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 8010ffa:	9500      	str	r5, [sp, #0]
 8010ffc:	6835      	ldr	r5, [r6, #0]
 8010ffe:	4699      	mov	r9, r3
 8011000:	460f      	mov	r7, r1
 8011002:	4690      	mov	r8, r2
 8011004:	47a8      	blx	r5
 8011006:	4d10      	ldr	r5, [pc, #64]	@ (8011048 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8011008:	4606      	mov	r6, r0
 801100a:	f8a5 9000 	strh.w	r9, [r5]
 801100e:	f7f1 ffe3 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 8011012:	6803      	ldr	r3, [r0, #0]
 8011014:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011016:	4798      	blx	r3
 8011018:	b128      	cbz	r0, 8011026 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 801101a:	2801      	cmp	r0, #1
 801101c:	d00b      	beq.n	8011036 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 801101e:	4630      	mov	r0, r6
 8011020:	b005      	add	sp, #20
 8011022:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011026:	882b      	ldrh	r3, [r5, #0]
 8011028:	fb08 7203 	mla	r2, r8, r3, r7
 801102c:	9b03      	ldr	r3, [sp, #12]
 801102e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8011032:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8011034:	e7f3      	b.n	801101e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011036:	882a      	ldrh	r2, [r5, #0]
 8011038:	9b03      	ldr	r3, [sp, #12]
 801103a:	fb08 7202 	mla	r2, r8, r2, r7
 801103e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011042:	1a9a      	subs	r2, r3, r2
 8011044:	63e2      	str	r2, [r4, #60]	@ 0x3c
 8011046:	e7ea      	b.n	801101e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011048:	20013f46 	.word	0x20013f46

0801104c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 801104c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801104e:	4b15      	ldr	r3, [pc, #84]	@ (80110a4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 8011050:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 8011054:	881b      	ldrh	r3, [r3, #0]
 8011056:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 8011058:	fb93 f4f4 	sdiv	r4, r3, r4
 801105c:	460f      	mov	r7, r1
 801105e:	4606      	mov	r6, r0
 8011060:	f7f1 ffba 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 8011064:	6803      	ldr	r3, [r0, #0]
 8011066:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011068:	4798      	blx	r3
 801106a:	2801      	cmp	r0, #1
 801106c:	d00b      	beq.n	8011086 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 801106e:	d303      	bcc.n	8011078 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 8011070:	2802      	cmp	r0, #2
 8011072:	d010      	beq.n	8011096 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 8011074:	63f5      	str	r5, [r6, #60]	@ 0x3c
 8011076:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011078:	4b0b      	ldr	r3, [pc, #44]	@ (80110a8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 801107a:	8819      	ldrh	r1, [r3, #0]
 801107c:	437c      	muls	r4, r7
 801107e:	434c      	muls	r4, r1
 8011080:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 8011084:	e7f6      	b.n	8011074 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 8011086:	4b08      	ldr	r3, [pc, #32]	@ (80110a8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 8011088:	8819      	ldrh	r1, [r3, #0]
 801108a:	437c      	muls	r4, r7
 801108c:	434c      	muls	r4, r1
 801108e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8011092:	1b2d      	subs	r5, r5, r4
 8011094:	e7ee      	b.n	8011074 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 8011096:	4b04      	ldr	r3, [pc, #16]	@ (80110a8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 8011098:	8819      	ldrh	r1, [r3, #0]
 801109a:	437c      	muls	r4, r7
 801109c:	434c      	muls	r4, r1
 801109e:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 80110a2:	e7e7      	b.n	8011074 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 80110a4:	20013f48 	.word	0x20013f48
 80110a8:	20013f46 	.word	0x20013f46

080110ac <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 80110ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80110ae:	b08b      	sub	sp, #44	@ 0x2c
 80110b0:	4617      	mov	r7, r2
 80110b2:	4604      	mov	r4, r0
 80110b4:	460e      	mov	r6, r1
 80110b6:	461d      	mov	r5, r3
 80110b8:	f7f1 ff8e 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 80110bc:	6803      	ldr	r3, [r0, #0]
 80110be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80110c0:	4798      	blx	r3
 80110c2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 80110c6:	9007      	str	r0, [sp, #28]
 80110c8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80110cc:	4b0d      	ldr	r3, [pc, #52]	@ (8011104 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 80110ce:	6822      	ldr	r2, [r4, #0]
 80110d0:	881b      	ldrh	r3, [r3, #0]
 80110d2:	9306      	str	r3, [sp, #24]
 80110d4:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 80110d8:	9305      	str	r3, [sp, #20]
 80110da:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 80110de:	9304      	str	r3, [sp, #16]
 80110e0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80110e4:	9303      	str	r3, [sp, #12]
 80110e6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80110ea:	9302      	str	r3, [sp, #8]
 80110ec:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80110f0:	e9cd 5300 	strd	r5, r3, [sp]
 80110f4:	4631      	mov	r1, r6
 80110f6:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 80110f8:	463b      	mov	r3, r7
 80110fa:	2200      	movs	r2, #0
 80110fc:	4620      	mov	r0, r4
 80110fe:	47a8      	blx	r5
 8011100:	b00b      	add	sp, #44	@ 0x2c
 8011102:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011104:	20013f46 	.word	0x20013f46

08011108 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011108:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801110c:	4698      	mov	r8, r3
 801110e:	6803      	ldr	r3, [r0, #0]
 8011110:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 8011112:	4b15      	ldr	r3, [pc, #84]	@ (8011168 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8011114:	b08b      	sub	sp, #44	@ 0x2c
 8011116:	4617      	mov	r7, r2
 8011118:	f8b3 9000 	ldrh.w	r9, [r3]
 801111c:	460e      	mov	r6, r1
 801111e:	4604      	mov	r4, r0
 8011120:	f7f1 ff5a 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 8011124:	6803      	ldr	r3, [r0, #0]
 8011126:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011128:	4798      	blx	r3
 801112a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 801112e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011132:	2302      	movs	r3, #2
 8011134:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011138:	2301      	movs	r3, #1
 801113a:	9305      	str	r3, [sp, #20]
 801113c:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8011140:	9304      	str	r3, [sp, #16]
 8011142:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8011146:	9303      	str	r3, [sp, #12]
 8011148:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 801114c:	9302      	str	r3, [sp, #8]
 801114e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8011152:	2200      	movs	r2, #0
 8011154:	e9cd 8300 	strd	r8, r3, [sp]
 8011158:	4631      	mov	r1, r6
 801115a:	463b      	mov	r3, r7
 801115c:	4620      	mov	r0, r4
 801115e:	47a8      	blx	r5
 8011160:	b00b      	add	sp, #44	@ 0x2c
 8011162:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011166:	bf00      	nop
 8011168:	20013f46 	.word	0x20013f46

0801116c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 801116c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011170:	4698      	mov	r8, r3
 8011172:	6803      	ldr	r3, [r0, #0]
 8011174:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 8011176:	4b11      	ldr	r3, [pc, #68]	@ (80111bc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011178:	b087      	sub	sp, #28
 801117a:	f8b3 9000 	ldrh.w	r9, [r3]
 801117e:	460e      	mov	r6, r1
 8011180:	4617      	mov	r7, r2
 8011182:	4604      	mov	r4, r0
 8011184:	f7f1 ff28 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 8011188:	6803      	ldr	r3, [r0, #0]
 801118a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801118c:	4798      	blx	r3
 801118e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 8011192:	f8cd 900c 	str.w	r9, [sp, #12]
 8011196:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801119a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 801119e:	9302      	str	r3, [sp, #8]
 80111a0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 80111a4:	9301      	str	r3, [sp, #4]
 80111a6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80111aa:	9300      	str	r3, [sp, #0]
 80111ac:	463a      	mov	r2, r7
 80111ae:	4643      	mov	r3, r8
 80111b0:	4631      	mov	r1, r6
 80111b2:	4620      	mov	r0, r4
 80111b4:	47a8      	blx	r5
 80111b6:	b007      	add	sp, #28
 80111b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80111bc:	20013f46 	.word	0x20013f46

080111c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80111c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80111c4:	4604      	mov	r4, r0
 80111c6:	b08f      	sub	sp, #60	@ 0x3c
 80111c8:	4610      	mov	r0, r2
 80111ca:	460d      	mov	r5, r1
 80111cc:	4691      	mov	r9, r2
 80111ce:	461e      	mov	r6, r3
 80111d0:	f009 f96e 	bl	801a4b0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80111d4:	2800      	cmp	r0, #0
 80111d6:	f000 809d 	beq.w	8011314 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80111da:	6823      	ldr	r3, [r4, #0]
 80111dc:	f8df b198 	ldr.w	fp, [pc, #408]	@ 8011378 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80111e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80111e2:	f8df a198 	ldr.w	sl, [pc, #408]	@ 801137c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80111e6:	4f61      	ldr	r7, [pc, #388]	@ (801136c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80111e8:	4620      	mov	r0, r4
 80111ea:	4798      	blx	r3
 80111ec:	6823      	ldr	r3, [r4, #0]
 80111ee:	4620      	mov	r0, r4
 80111f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80111f2:	4798      	blx	r3
 80111f4:	f8bb 3000 	ldrh.w	r3, [fp]
 80111f8:	9301      	str	r3, [sp, #4]
 80111fa:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 80111fe:	f8ba 3000 	ldrh.w	r3, [sl]
 8011202:	9302      	str	r3, [sp, #8]
 8011204:	883b      	ldrh	r3, [r7, #0]
 8011206:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 801120a:	9303      	str	r3, [sp, #12]
 801120c:	4b58      	ldr	r3, [pc, #352]	@ (8011370 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801120e:	9305      	str	r3, [sp, #20]
 8011210:	881a      	ldrh	r2, [r3, #0]
 8011212:	9204      	str	r2, [sp, #16]
 8011214:	4640      	mov	r0, r8
 8011216:	f009 f9df 	bl	801a5d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801121a:	8038      	strh	r0, [r7, #0]
 801121c:	4640      	mov	r0, r8
 801121e:	f009 fa0f 	bl	801a640 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011222:	9b05      	ldr	r3, [sp, #20]
 8011224:	b280      	uxth	r0, r0
 8011226:	8018      	strh	r0, [r3, #0]
 8011228:	4b52      	ldr	r3, [pc, #328]	@ (8011374 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 801122a:	781b      	ldrb	r3, [r3, #0]
 801122c:	2b00      	cmp	r3, #0
 801122e:	d174      	bne.n	801131a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011230:	883b      	ldrh	r3, [r7, #0]
 8011232:	f8ab 3000 	strh.w	r3, [fp]
 8011236:	f8aa 0000 	strh.w	r0, [sl]
 801123a:	4648      	mov	r0, r9
 801123c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 8011240:	f009 f936 	bl	801a4b0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011244:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 8011248:	2200      	movs	r2, #0
 801124a:	4611      	mov	r1, r2
 801124c:	4628      	mov	r0, r5
 801124e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8011252:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8011256:	f7f1 f927 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 801125a:	2301      	movs	r3, #1
 801125c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 8011260:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 8011264:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011268:	2b00      	cmp	r3, #0
 801126a:	dd5c      	ble.n	8011326 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801126c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011270:	2b00      	cmp	r3, #0
 8011272:	dd58      	ble.n	8011326 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011274:	462a      	mov	r2, r5
 8011276:	ab0a      	add	r3, sp, #40	@ 0x28
 8011278:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801127c:	6851      	ldr	r1, [r2, #4]
 801127e:	c303      	stmia	r3!, {r0, r1}
 8011280:	4631      	mov	r1, r6
 8011282:	a80a      	add	r0, sp, #40	@ 0x28
 8011284:	f7ff fbc8 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8011288:	4b38      	ldr	r3, [pc, #224]	@ (801136c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801128a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801128e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8011292:	2100      	movs	r1, #0
 8011294:	aa0a      	add	r2, sp, #40	@ 0x28
 8011296:	4b36      	ldr	r3, [pc, #216]	@ (8011370 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011298:	910c      	str	r1, [sp, #48]	@ 0x30
 801129a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801129e:	f9b3 3000 	ldrsh.w	r3, [r3]
 80112a2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80112a6:	ab08      	add	r3, sp, #32
 80112a8:	e883 0003 	stmia.w	r3, {r0, r1}
 80112ac:	4618      	mov	r0, r3
 80112ae:	a90c      	add	r1, sp, #48	@ 0x30
 80112b0:	f7ff fbb2 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 80112b4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80112b6:	2b00      	cmp	r3, #0
 80112b8:	d13c      	bne.n	8011334 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80112ba:	2000      	movs	r0, #0
 80112bc:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 80112c0:	2600      	movs	r6, #0
 80112c2:	682a      	ldr	r2, [r5, #0]
 80112c4:	696b      	ldr	r3, [r5, #20]
 80112c6:	616e      	str	r6, [r5, #20]
 80112c8:	9305      	str	r3, [sp, #20]
 80112ca:	6892      	ldr	r2, [r2, #8]
 80112cc:	a908      	add	r1, sp, #32
 80112ce:	4628      	mov	r0, r5
 80112d0:	4790      	blx	r2
 80112d2:	9b05      	ldr	r3, [sp, #20]
 80112d4:	616b      	str	r3, [r5, #20]
 80112d6:	4652      	mov	r2, sl
 80112d8:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 80112dc:	4649      	mov	r1, r9
 80112de:	4628      	mov	r0, r5
 80112e0:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 80112e4:	f7f1 f8e0 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 80112e8:	4b23      	ldr	r3, [pc, #140]	@ (8011378 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80112ea:	9a01      	ldr	r2, [sp, #4]
 80112ec:	801a      	strh	r2, [r3, #0]
 80112ee:	4b23      	ldr	r3, [pc, #140]	@ (801137c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80112f0:	9a02      	ldr	r2, [sp, #8]
 80112f2:	801a      	strh	r2, [r3, #0]
 80112f4:	4b1d      	ldr	r3, [pc, #116]	@ (801136c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80112f6:	9a03      	ldr	r2, [sp, #12]
 80112f8:	801a      	strh	r2, [r3, #0]
 80112fa:	4b1d      	ldr	r3, [pc, #116]	@ (8011370 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80112fc:	9a04      	ldr	r2, [sp, #16]
 80112fe:	801a      	strh	r2, [r3, #0]
 8011300:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 8011304:	6823      	ldr	r3, [r4, #0]
 8011306:	4620      	mov	r0, r4
 8011308:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801130a:	4798      	blx	r3
 801130c:	6823      	ldr	r3, [r4, #0]
 801130e:	4620      	mov	r0, r4
 8011310:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011312:	4798      	blx	r3
 8011314:	b00f      	add	sp, #60	@ 0x3c
 8011316:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801131a:	883b      	ldrh	r3, [r7, #0]
 801131c:	f8ab 0000 	strh.w	r0, [fp]
 8011320:	f8aa 3000 	strh.w	r3, [sl]
 8011324:	e789      	b.n	801123a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8011326:	462a      	mov	r2, r5
 8011328:	ab0a      	add	r3, sp, #40	@ 0x28
 801132a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801132e:	6851      	ldr	r1, [r2, #4]
 8011330:	c303      	stmia	r3!, {r0, r1}
 8011332:	e7a9      	b.n	8011288 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011334:	a807      	add	r0, sp, #28
 8011336:	f009 fac5 	bl	801a8c4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801133a:	4606      	mov	r6, r0
 801133c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 801133e:	6803      	ldr	r3, [r0, #0]
 8011340:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011342:	4798      	blx	r3
 8011344:	4286      	cmp	r6, r0
 8011346:	d1b8      	bne.n	80112ba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011348:	f7f1 fe46 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 801134c:	6803      	ldr	r3, [r0, #0]
 801134e:	4606      	mov	r6, r0
 8011350:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011352:	9305      	str	r3, [sp, #20]
 8011354:	a807      	add	r0, sp, #28
 8011356:	f009 fab5 	bl	801a8c4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801135a:	9b05      	ldr	r3, [sp, #20]
 801135c:	4601      	mov	r1, r0
 801135e:	4630      	mov	r0, r6
 8011360:	4798      	blx	r3
 8011362:	f080 0001 	eor.w	r0, r0, #1
 8011366:	b2c0      	uxtb	r0, r0
 8011368:	e7a8      	b.n	80112bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 801136a:	bf00      	nop
 801136c:	20013f40 	.word	0x20013f40
 8011370:	20013f42 	.word	0x20013f42
 8011374:	20013f44 	.word	0x20013f44
 8011378:	20013f46 	.word	0x20013f46
 801137c:	20013f48 	.word	0x20013f48

08011380 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011380:	b510      	push	{r4, lr}
 8011382:	4b07      	ldr	r3, [pc, #28]	@ (80113a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011384:	781b      	ldrb	r3, [r3, #0]
 8011386:	4604      	mov	r4, r0
 8011388:	b13b      	cbz	r3, 801139a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801138a:	6803      	ldr	r3, [r0, #0]
 801138c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801138e:	4798      	blx	r3
 8011390:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8011392:	4283      	cmp	r3, r0
 8011394:	d101      	bne.n	801139a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011396:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8011398:	bd10      	pop	{r4, pc}
 801139a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 801139c:	e7fc      	b.n	8011398 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 801139e:	bf00      	nop
 80113a0:	20013f4a 	.word	0x20013f4a

080113a4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 80113a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80113a8:	b08a      	sub	sp, #40	@ 0x28
 80113aa:	461d      	mov	r5, r3
 80113ac:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80113b0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80113b4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80113b8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80113bc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80113c0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80113c4:	2400      	movs	r4, #0
 80113c6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80113ca:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 80113ce:	f8ad 301c 	strh.w	r3, [sp, #28]
 80113d2:	4690      	mov	r8, r2
 80113d4:	4607      	mov	r7, r0
 80113d6:	9404      	str	r4, [sp, #16]
 80113d8:	f88d 4020 	strb.w	r4, [sp, #32]
 80113dc:	f7ff ffd0 	bl	8011380 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80113e0:	fb06 8505 	mla	r5, r6, r5, r8
 80113e4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80113e8:	6878      	ldr	r0, [r7, #4]
 80113ea:	9505      	str	r5, [sp, #20]
 80113ec:	f8ad 601e 	strh.w	r6, [sp, #30]
 80113f0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 80113f4:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 80113f8:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 80113fc:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8011400:	6803      	ldr	r3, [r0, #0]
 8011402:	a901      	add	r1, sp, #4
 8011404:	685b      	ldr	r3, [r3, #4]
 8011406:	4798      	blx	r3
 8011408:	b00a      	add	sp, #40	@ 0x28
 801140a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801140e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801140e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011412:	b08b      	sub	sp, #44	@ 0x2c
 8011414:	2400      	movs	r4, #0
 8011416:	461d      	mov	r5, r3
 8011418:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 801141c:	4688      	mov	r8, r1
 801141e:	4691      	mov	r9, r2
 8011420:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 8011424:	9404      	str	r4, [sp, #16]
 8011426:	4607      	mov	r7, r0
 8011428:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801142c:	f7ff ffa8 	bl	8011380 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011430:	fb06 9505 	mla	r5, r6, r5, r9
 8011434:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8011438:	f8ad 3018 	strh.w	r3, [sp, #24]
 801143c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011440:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8011444:	6878      	ldr	r0, [r7, #4]
 8011446:	9505      	str	r5, [sp, #20]
 8011448:	f8ad 301a 	strh.w	r3, [sp, #26]
 801144c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011450:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011454:	f8cd 8010 	str.w	r8, [sp, #16]
 8011458:	f8ad 4020 	strh.w	r4, [sp, #32]
 801145c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8011460:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8011464:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8011468:	6803      	ldr	r3, [r0, #0]
 801146a:	a901      	add	r1, sp, #4
 801146c:	685b      	ldr	r3, [r3, #4]
 801146e:	4798      	blx	r3
 8011470:	b00b      	add	sp, #44	@ 0x2c
 8011472:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011478 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8011478:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801147c:	b08a      	sub	sp, #40	@ 0x28
 801147e:	4698      	mov	r8, r3
 8011480:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 8011484:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 8011488:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 801148c:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 8011490:	2300      	movs	r3, #0
 8011492:	2d0b      	cmp	r5, #11
 8011494:	4606      	mov	r6, r0
 8011496:	9304      	str	r3, [sp, #16]
 8011498:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801149c:	d138      	bne.n	8011510 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 801149e:	2380      	movs	r3, #128	@ 0x80
 80114a0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80114a4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80114a8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80114ac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80114b0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80114b4:	f88d 0020 	strb.w	r0, [sp, #32]
 80114b8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 80114bc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80114c0:	4630      	mov	r0, r6
 80114c2:	9203      	str	r2, [sp, #12]
 80114c4:	f7ff ff5c 	bl	8011380 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80114c8:	2c0b      	cmp	r4, #11
 80114ca:	bf98      	it	ls
 80114cc:	4b1b      	ldrls	r3, [pc, #108]	@ (801153c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80114ce:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 80114d2:	bf98      	it	ls
 80114d4:	5d19      	ldrbls	r1, [r3, r4]
 80114d6:	f8ad 701e 	strh.w	r7, [sp, #30]
 80114da:	bf88      	it	hi
 80114dc:	2100      	movhi	r1, #0
 80114de:	fb02 8307 	mla	r3, r2, r7, r8
 80114e2:	10c9      	asrs	r1, r1, #3
 80114e4:	fb01 0003 	mla	r0, r1, r3, r0
 80114e8:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 80114ec:	9005      	str	r0, [sp, #20]
 80114ee:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 80114f2:	6870      	ldr	r0, [r6, #4]
 80114f4:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 80114f8:	2300      	movs	r3, #0
 80114fa:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 80114fe:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8011502:	6803      	ldr	r3, [r0, #0]
 8011504:	a901      	add	r1, sp, #4
 8011506:	685b      	ldr	r3, [r3, #4]
 8011508:	4798      	blx	r3
 801150a:	b00a      	add	sp, #40	@ 0x28
 801150c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011510:	2d02      	cmp	r5, #2
 8011512:	d109      	bne.n	8011528 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8011514:	28ff      	cmp	r0, #255	@ 0xff
 8011516:	d105      	bne.n	8011524 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8011518:	f1bc 0f00 	cmp.w	ip, #0
 801151c:	bf14      	ite	ne
 801151e:	2340      	movne	r3, #64	@ 0x40
 8011520:	2320      	moveq	r3, #32
 8011522:	e7bd      	b.n	80114a0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011524:	2340      	movs	r3, #64	@ 0x40
 8011526:	e7bb      	b.n	80114a0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011528:	28ff      	cmp	r0, #255	@ 0xff
 801152a:	d105      	bne.n	8011538 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 801152c:	f1bc 0f00 	cmp.w	ip, #0
 8011530:	bf14      	ite	ne
 8011532:	2304      	movne	r3, #4
 8011534:	2301      	moveq	r3, #1
 8011536:	e7b3      	b.n	80114a0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011538:	2304      	movs	r3, #4
 801153a:	e7b1      	b.n	80114a0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801153c:	0802e1ec 	.word	0x0802e1ec

08011540 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011544:	b08b      	sub	sp, #44	@ 0x2c
 8011546:	461d      	mov	r5, r3
 8011548:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 801154c:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 8011550:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 8011554:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8011558:	bf14      	ite	ne
 801155a:	2308      	movne	r3, #8
 801155c:	2302      	moveq	r3, #2
 801155e:	2400      	movs	r4, #0
 8011560:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011564:	4688      	mov	r8, r1
 8011566:	4693      	mov	fp, r2
 8011568:	9404      	str	r4, [sp, #16]
 801156a:	4607      	mov	r7, r0
 801156c:	f7ff ff08 	bl	8011380 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011570:	2e0b      	cmp	r6, #11
 8011572:	bf98      	it	ls
 8011574:	4b15      	ldrls	r3, [pc, #84]	@ (80115cc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8011576:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801157a:	bf98      	it	ls
 801157c:	5d9c      	ldrbls	r4, [r3, r6]
 801157e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8011582:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011586:	fb05 b50a 	mla	r5, r5, sl, fp
 801158a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801158e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011592:	10e4      	asrs	r4, r4, #3
 8011594:	fb04 0405 	mla	r4, r4, r5, r0
 8011598:	2300      	movs	r3, #0
 801159a:	6878      	ldr	r0, [r7, #4]
 801159c:	9405      	str	r4, [sp, #20]
 801159e:	f8ad 301c 	strh.w	r3, [sp, #28]
 80115a2:	f8ad a01e 	strh.w	sl, [sp, #30]
 80115a6:	f8cd 8010 	str.w	r8, [sp, #16]
 80115aa:	f88d 9020 	strb.w	r9, [sp, #32]
 80115ae:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 80115b2:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 80115b6:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 80115ba:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 80115be:	6803      	ldr	r3, [r0, #0]
 80115c0:	a901      	add	r1, sp, #4
 80115c2:	685b      	ldr	r3, [r3, #4]
 80115c4:	4798      	blx	r3
 80115c6:	b00b      	add	sp, #44	@ 0x2c
 80115c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115cc:	0802e1ec 	.word	0x0802e1ec

080115d0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80115d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80115d4:	461e      	mov	r6, r3
 80115d6:	4b0a      	ldr	r3, [pc, #40]	@ (8011600 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80115d8:	460f      	mov	r7, r1
 80115da:	881d      	ldrh	r5, [r3, #0]
 80115dc:	4690      	mov	r8, r2
 80115de:	f7f1 fcfb 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 80115e2:	6803      	ldr	r3, [r0, #0]
 80115e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80115e6:	4798      	blx	r3
 80115e8:	280b      	cmp	r0, #11
 80115ea:	bf9a      	itte	ls
 80115ec:	4b05      	ldrls	r3, [pc, #20]	@ (8011604 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80115ee:	5c1c      	ldrbls	r4, [r3, r0]
 80115f0:	2400      	movhi	r4, #0
 80115f2:	fb08 7005 	mla	r0, r8, r5, r7
 80115f6:	10e4      	asrs	r4, r4, #3
 80115f8:	fb04 6000 	mla	r0, r4, r0, r6
 80115fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011600:	20013f46 	.word	0x20013f46
 8011604:	0802e1ec 	.word	0x0802e1ec

08011608 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011608:	b5f0      	push	{r4, r5, r6, r7, lr}
 801160a:	b08b      	sub	sp, #44	@ 0x2c
 801160c:	461f      	mov	r7, r3
 801160e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8011612:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011616:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801161a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801161e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8011622:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011626:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801162a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801162e:	2500      	movs	r5, #0
 8011630:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8011634:	f88d 3020 	strb.w	r3, [sp, #32]
 8011638:	4604      	mov	r4, r0
 801163a:	4616      	mov	r6, r2
 801163c:	9504      	str	r5, [sp, #16]
 801163e:	f7ff fe9f 	bl	8011380 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011642:	463a      	mov	r2, r7
 8011644:	4631      	mov	r1, r6
 8011646:	4603      	mov	r3, r0
 8011648:	4620      	mov	r0, r4
 801164a:	f7ff ffc1 	bl	80115d0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801164e:	4b0e      	ldr	r3, [pc, #56]	@ (8011688 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011650:	9005      	str	r0, [sp, #20]
 8011652:	881b      	ldrh	r3, [r3, #0]
 8011654:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011658:	f7f1 fcbe 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 801165c:	6803      	ldr	r3, [r0, #0]
 801165e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011660:	4798      	blx	r3
 8011662:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8011664:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 8011668:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 801166c:	9304      	str	r3, [sp, #16]
 801166e:	6860      	ldr	r0, [r4, #4]
 8011670:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8011674:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8011678:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 801167c:	6803      	ldr	r3, [r0, #0]
 801167e:	a901      	add	r1, sp, #4
 8011680:	685b      	ldr	r3, [r3, #4]
 8011682:	4798      	blx	r3
 8011684:	b00b      	add	sp, #44	@ 0x2c
 8011686:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011688:	20013f46 	.word	0x20013f46

0801168c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801168c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801168e:	b08d      	sub	sp, #52	@ 0x34
 8011690:	466b      	mov	r3, sp
 8011692:	e883 0006 	stmia.w	r3, {r1, r2}
 8011696:	2300      	movs	r3, #0
 8011698:	9306      	str	r3, [sp, #24]
 801169a:	6803      	ldr	r3, [r0, #0]
 801169c:	f8bd 6000 	ldrh.w	r6, [sp]
 80116a0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80116a2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80116a6:	2501      	movs	r5, #1
 80116a8:	9503      	str	r5, [sp, #12]
 80116aa:	4604      	mov	r4, r0
 80116ac:	4798      	blx	r3
 80116ae:	463a      	mov	r2, r7
 80116b0:	4631      	mov	r1, r6
 80116b2:	4603      	mov	r3, r0
 80116b4:	4620      	mov	r0, r4
 80116b6:	f7ff ff8b 	bl	80115d0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80116ba:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80116bc:	9307      	str	r3, [sp, #28]
 80116be:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80116c2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80116c6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80116ca:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80116ce:	4b0f      	ldr	r3, [pc, #60]	@ (801170c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80116d0:	9004      	str	r0, [sp, #16]
 80116d2:	881b      	ldrh	r3, [r3, #0]
 80116d4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80116d8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 80116dc:	f7f1 fc7c 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 80116e0:	6803      	ldr	r3, [r0, #0]
 80116e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80116e4:	4798      	blx	r3
 80116e6:	23ff      	movs	r3, #255	@ 0xff
 80116e8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 80116ec:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 80116f0:	6860      	ldr	r0, [r4, #4]
 80116f2:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 80116f6:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 80116fa:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 80116fe:	6803      	ldr	r3, [r0, #0]
 8011700:	a903      	add	r1, sp, #12
 8011702:	685b      	ldr	r3, [r3, #4]
 8011704:	4798      	blx	r3
 8011706:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8011708:	b00d      	add	sp, #52	@ 0x34
 801170a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801170c:	20013f46 	.word	0x20013f46

08011710 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011710:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011714:	b08c      	sub	sp, #48	@ 0x30
 8011716:	461e      	mov	r6, r3
 8011718:	466d      	mov	r5, sp
 801171a:	2300      	movs	r3, #0
 801171c:	e885 0006 	stmia.w	r5, {r1, r2}
 8011720:	9306      	str	r3, [sp, #24]
 8011722:	6803      	ldr	r3, [r0, #0]
 8011724:	f8bd 7000 	ldrh.w	r7, [sp]
 8011728:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801172a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801172e:	2501      	movs	r5, #1
 8011730:	9503      	str	r5, [sp, #12]
 8011732:	4604      	mov	r4, r0
 8011734:	4798      	blx	r3
 8011736:	4642      	mov	r2, r8
 8011738:	4639      	mov	r1, r7
 801173a:	4603      	mov	r3, r0
 801173c:	4620      	mov	r0, r4
 801173e:	f7ff ff47 	bl	80115d0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011742:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011746:	f8ad 3020 	strh.w	r3, [sp, #32]
 801174a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801174e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8011752:	4b11      	ldr	r3, [pc, #68]	@ (8011798 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011754:	9004      	str	r0, [sp, #16]
 8011756:	881b      	ldrh	r3, [r3, #0]
 8011758:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 801175c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801175e:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8011762:	9607      	str	r6, [sp, #28]
 8011764:	f7f1 fc38 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 8011768:	6803      	ldr	r3, [r0, #0]
 801176a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801176c:	4798      	blx	r3
 801176e:	23ff      	movs	r3, #255	@ 0xff
 8011770:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8011774:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8011778:	6860      	ldr	r0, [r4, #4]
 801177a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 801177e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 8011782:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 8011786:	6803      	ldr	r3, [r0, #0]
 8011788:	a903      	add	r1, sp, #12
 801178a:	685b      	ldr	r3, [r3, #4]
 801178c:	4798      	blx	r3
 801178e:	4630      	mov	r0, r6
 8011790:	b00c      	add	sp, #48	@ 0x30
 8011792:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011796:	bf00      	nop
 8011798:	20013f46 	.word	0x20013f46

0801179c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 801179c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801179e:	b085      	sub	sp, #20
 80117a0:	ac02      	add	r4, sp, #8
 80117a2:	e884 0006 	stmia.w	r4, {r1, r2}
 80117a6:	4605      	mov	r5, r0
 80117a8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80117ac:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80117b0:	f7ff fde6 	bl	8011380 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80117b4:	463a      	mov	r2, r7
 80117b6:	4603      	mov	r3, r0
 80117b8:	4631      	mov	r1, r6
 80117ba:	4628      	mov	r0, r5
 80117bc:	f7ff ff08 	bl	80115d0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80117c0:	4a05      	ldr	r2, [pc, #20]	@ (80117d8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80117c2:	682b      	ldr	r3, [r5, #0]
 80117c4:	8812      	ldrh	r2, [r2, #0]
 80117c6:	9200      	str	r2, [sp, #0]
 80117c8:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 80117ca:	e894 0006 	ldmia.w	r4, {r1, r2}
 80117ce:	4603      	mov	r3, r0
 80117d0:	4628      	mov	r0, r5
 80117d2:	47b0      	blx	r6
 80117d4:	b005      	add	sp, #20
 80117d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80117d8:	20013f46 	.word	0x20013f46

080117dc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80117dc:	b570      	push	{r4, r5, r6, lr}
 80117de:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 80117e2:	4604      	mov	r4, r0
 80117e4:	b19b      	cbz	r3, 801180e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80117e6:	2002      	movs	r0, #2
 80117e8:	f7ef f882 	bl	80008f0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80117ec:	2300      	movs	r3, #0
 80117ee:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 80117f2:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 80117f6:	6823      	ldr	r3, [r4, #0]
 80117f8:	4620      	mov	r0, r4
 80117fa:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 80117fe:	f7ff fdbf 	bl	8011380 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011802:	462b      	mov	r3, r5
 8011804:	4601      	mov	r1, r0
 8011806:	4620      	mov	r0, r4
 8011808:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801180c:	4718      	bx	r3
 801180e:	bd70      	pop	{r4, r5, r6, pc}

08011810 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011810:	b538      	push	{r3, r4, r5, lr}
 8011812:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 8011816:	428b      	cmp	r3, r1
 8011818:	4604      	mov	r4, r0
 801181a:	460d      	mov	r5, r1
 801181c:	d006      	beq.n	801182c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801181e:	6803      	ldr	r3, [r0, #0]
 8011820:	b929      	cbnz	r1, 801182e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8011822:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8011826:	4798      	blx	r3
 8011828:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 801182c:	bd38      	pop	{r3, r4, r5, pc}
 801182e:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8011832:	e7f8      	b.n	8011826 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08011834 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8011834:	b510      	push	{r4, lr}
 8011836:	4b0c      	ldr	r3, [pc, #48]	@ (8011868 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 8011838:	781b      	ldrb	r3, [r3, #0]
 801183a:	4604      	mov	r4, r0
 801183c:	b953      	cbnz	r3, 8011854 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 801183e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 8011842:	b93b      	cbnz	r3, 8011854 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 8011844:	6840      	ldr	r0, [r0, #4]
 8011846:	f000 f92b 	bl	8011aa0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801184a:	b118      	cbz	r0, 8011854 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 801184c:	6862      	ldr	r2, [r4, #4]
 801184e:	7a53      	ldrb	r3, [r2, #9]
 8011850:	2b00      	cmp	r3, #0
 8011852:	d0fc      	beq.n	801184e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 8011854:	f7ef f998 	bl	8000b88 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011858:	4620      	mov	r0, r4
 801185a:	2100      	movs	r1, #0
 801185c:	f7ff ffd8 	bl	8011810 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011860:	4620      	mov	r0, r4
 8011862:	f7ff fd8d 	bl	8011380 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011866:	bd10      	pop	{r4, pc}
 8011868:	20013f4a 	.word	0x20013f4a

0801186c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 801186c:	b570      	push	{r4, r5, r6, lr}
 801186e:	4604      	mov	r4, r0
 8011870:	6803      	ldr	r3, [r0, #0]
 8011872:	b919      	cbnz	r1, 801187c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8011874:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011876:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801187a:	4718      	bx	r3
 801187c:	2200      	movs	r2, #0
 801187e:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 8011882:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 8011886:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011888:	4798      	blx	r3
 801188a:	6863      	ldr	r3, [r4, #4]
 801188c:	2101      	movs	r1, #1
 801188e:	4605      	mov	r5, r0
 8011890:	7299      	strb	r1, [r3, #10]
 8011892:	4620      	mov	r0, r4
 8011894:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 8011898:	f7ff ffba 	bl	8011810 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801189c:	4628      	mov	r0, r5
 801189e:	bd70      	pop	{r4, r5, r6, pc}

080118a0 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80118a0:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80118a4:	1a13      	subs	r3, r2, r0
 80118a6:	4258      	negs	r0, r3
 80118a8:	4158      	adcs	r0, r3
 80118aa:	4770      	bx	lr

080118ac <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80118ac:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80118b0:	1a9b      	subs	r3, r3, r2
 80118b2:	2b00      	cmp	r3, #0
 80118b4:	bfdc      	itt	le
 80118b6:	6882      	ldrle	r2, [r0, #8]
 80118b8:	189b      	addle	r3, r3, r2
 80118ba:	2b01      	cmp	r3, #1
 80118bc:	bfcc      	ite	gt
 80118be:	2000      	movgt	r0, #0
 80118c0:	2001      	movle	r0, #1
 80118c2:	4770      	bx	lr

080118c4 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80118c4:	6902      	ldr	r2, [r0, #16]
 80118c6:	6843      	ldr	r3, [r0, #4]
 80118c8:	2024      	movs	r0, #36	@ 0x24
 80118ca:	fb00 3002 	mla	r0, r0, r2, r3
 80118ce:	4770      	bx	lr

080118d0 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80118d0:	6803      	ldr	r3, [r0, #0]
 80118d2:	691b      	ldr	r3, [r3, #16]
 80118d4:	4718      	bx	r3

080118d6 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80118d6:	b570      	push	{r4, r5, r6, lr}
 80118d8:	2301      	movs	r3, #1
 80118da:	7203      	strb	r3, [r0, #8]
 80118dc:	4604      	mov	r4, r0
 80118de:	6840      	ldr	r0, [r0, #4]
 80118e0:	6803      	ldr	r3, [r0, #0]
 80118e2:	699b      	ldr	r3, [r3, #24]
 80118e4:	4798      	blx	r3
 80118e6:	6803      	ldr	r3, [r0, #0]
 80118e8:	2b40      	cmp	r3, #64	@ 0x40
 80118ea:	4605      	mov	r5, r0
 80118ec:	d00c      	beq.n	8011908 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80118ee:	d810      	bhi.n	8011912 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80118f0:	2b04      	cmp	r3, #4
 80118f2:	d01d      	beq.n	8011930 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80118f4:	d804      	bhi.n	8011900 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80118f6:	2b01      	cmp	r3, #1
 80118f8:	d006      	beq.n	8011908 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80118fa:	2b02      	cmp	r3, #2
 80118fc:	d02c      	beq.n	8011958 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80118fe:	bd70      	pop	{r4, r5, r6, pc}
 8011900:	2b08      	cmp	r3, #8
 8011902:	d01d      	beq.n	8011940 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8011904:	2b20      	cmp	r3, #32
 8011906:	d1fa      	bne.n	80118fe <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8011908:	6823      	ldr	r3, [r4, #0]
 801190a:	4620      	mov	r0, r4
 801190c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801190e:	4798      	blx	r3
 8011910:	e013      	b.n	801193a <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8011912:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8011916:	d0f7      	beq.n	8011908 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011918:	d804      	bhi.n	8011924 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801191a:	2b80      	cmp	r3, #128	@ 0x80
 801191c:	d0f4      	beq.n	8011908 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801191e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8011922:	e7f0      	b.n	8011906 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011924:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8011928:	d0ee      	beq.n	8011908 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801192a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 801192e:	e7e5      	b.n	80118fc <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8011930:	6823      	ldr	r3, [r4, #0]
 8011932:	7f01      	ldrb	r1, [r0, #28]
 8011934:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011936:	4620      	mov	r0, r4
 8011938:	4798      	blx	r3
 801193a:	6823      	ldr	r3, [r4, #0]
 801193c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801193e:	e006      	b.n	801194e <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8011940:	6823      	ldr	r3, [r4, #0]
 8011942:	7f01      	ldrb	r1, [r0, #28]
 8011944:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011946:	4620      	mov	r0, r4
 8011948:	4798      	blx	r3
 801194a:	6823      	ldr	r3, [r4, #0]
 801194c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801194e:	4629      	mov	r1, r5
 8011950:	4620      	mov	r0, r4
 8011952:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011956:	4718      	bx	r3
 8011958:	6823      	ldr	r3, [r4, #0]
 801195a:	4620      	mov	r0, r4
 801195c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801195e:	4798      	blx	r3
 8011960:	e7f3      	b.n	801194a <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08011962 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8011962:	4770      	bx	lr

08011964 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011964:	4770      	bx	lr

08011966 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8011966:	4770      	bx	lr

08011968 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011968:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 801196c:	1ad2      	subs	r2, r2, r3
 801196e:	2a00      	cmp	r2, #0
 8011970:	b510      	push	{r4, lr}
 8011972:	bfdc      	itt	le
 8011974:	6884      	ldrle	r4, [r0, #8]
 8011976:	1912      	addle	r2, r2, r4
 8011978:	2a01      	cmp	r2, #1
 801197a:	dd16      	ble.n	80119aa <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 801197c:	6842      	ldr	r2, [r0, #4]
 801197e:	2424      	movs	r4, #36	@ 0x24
 8011980:	fb04 2303 	mla	r3, r4, r3, r2
 8011984:	f101 0220 	add.w	r2, r1, #32
 8011988:	f851 4b04 	ldr.w	r4, [r1], #4
 801198c:	f843 4b04 	str.w	r4, [r3], #4
 8011990:	4291      	cmp	r1, r2
 8011992:	d1f9      	bne.n	8011988 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011994:	780a      	ldrb	r2, [r1, #0]
 8011996:	701a      	strb	r2, [r3, #0]
 8011998:	68c3      	ldr	r3, [r0, #12]
 801199a:	6882      	ldr	r2, [r0, #8]
 801199c:	f3bf 8f5b 	dmb	ish
 80119a0:	3301      	adds	r3, #1
 80119a2:	429a      	cmp	r2, r3
 80119a4:	bfd8      	it	le
 80119a6:	1a9b      	suble	r3, r3, r2
 80119a8:	60c3      	str	r3, [r0, #12]
 80119aa:	bd10      	pop	{r4, pc}

080119ac <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80119ac:	6903      	ldr	r3, [r0, #16]
 80119ae:	6882      	ldr	r2, [r0, #8]
 80119b0:	f3bf 8f5b 	dmb	ish
 80119b4:	3301      	adds	r3, #1
 80119b6:	429a      	cmp	r2, r3
 80119b8:	bfd8      	it	le
 80119ba:	1a9b      	suble	r3, r3, r2
 80119bc:	6103      	str	r3, [r0, #16]
 80119be:	4770      	bx	lr

080119c0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80119c0:	b570      	push	{r4, r5, r6, lr}
 80119c2:	4604      	mov	r4, r0
 80119c4:	460e      	mov	r6, r1
 80119c6:	6860      	ldr	r0, [r4, #4]
 80119c8:	6803      	ldr	r3, [r0, #0]
 80119ca:	685b      	ldr	r3, [r3, #4]
 80119cc:	4798      	blx	r3
 80119ce:	2800      	cmp	r0, #0
 80119d0:	d1f9      	bne.n	80119c6 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80119d2:	4d0d      	ldr	r5, [pc, #52]	@ (8011a08 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80119d4:	6828      	ldr	r0, [r5, #0]
 80119d6:	6803      	ldr	r3, [r0, #0]
 80119d8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80119dc:	4798      	blx	r3
 80119de:	f7ef f8e1 	bl	8000ba4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80119e2:	6828      	ldr	r0, [r5, #0]
 80119e4:	2101      	movs	r1, #1
 80119e6:	f7ff ff13 	bl	8011810 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80119ea:	6860      	ldr	r0, [r4, #4]
 80119ec:	6803      	ldr	r3, [r0, #0]
 80119ee:	4631      	mov	r1, r6
 80119f0:	689b      	ldr	r3, [r3, #8]
 80119f2:	4798      	blx	r3
 80119f4:	6823      	ldr	r3, [r4, #0]
 80119f6:	4620      	mov	r0, r4
 80119f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80119fa:	4798      	blx	r3
 80119fc:	6828      	ldr	r0, [r5, #0]
 80119fe:	6803      	ldr	r3, [r0, #0]
 8011a00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a04:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011a06:	4718      	bx	r3
 8011a08:	20013f4c 	.word	0x20013f4c

08011a0c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011a0c:	b508      	push	{r3, lr}
 8011a0e:	f7ef f8bb 	bl	8000b88 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011a12:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011a16:	f7ef b8bf 	b.w	8000b98 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011a1a <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011a1a:	b510      	push	{r4, lr}
 8011a1c:	2114      	movs	r1, #20
 8011a1e:	4604      	mov	r4, r0
 8011a20:	f017 fe78 	bl	8029714 <_ZdlPvj>
 8011a24:	4620      	mov	r0, r4
 8011a26:	bd10      	pop	{r4, pc}

08011a28 <_ZN8touchgfx13DMA_Interface5startEv>:
 8011a28:	b510      	push	{r4, lr}
 8011a2a:	4604      	mov	r4, r0
 8011a2c:	6840      	ldr	r0, [r0, #4]
 8011a2e:	6803      	ldr	r3, [r0, #0]
 8011a30:	681b      	ldr	r3, [r3, #0]
 8011a32:	4798      	blx	r3
 8011a34:	b948      	cbnz	r0, 8011a4a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011a36:	7a63      	ldrb	r3, [r4, #9]
 8011a38:	b13b      	cbz	r3, 8011a4a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011a3a:	7a23      	ldrb	r3, [r4, #8]
 8011a3c:	b92b      	cbnz	r3, 8011a4a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011a3e:	6823      	ldr	r3, [r4, #0]
 8011a40:	4620      	mov	r0, r4
 8011a42:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011a44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011a48:	4718      	bx	r3
 8011a4a:	bd10      	pop	{r4, pc}

08011a4c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011a4c:	b570      	push	{r4, r5, r6, lr}
 8011a4e:	4604      	mov	r4, r0
 8011a50:	6840      	ldr	r0, [r0, #4]
 8011a52:	6803      	ldr	r3, [r0, #0]
 8011a54:	681b      	ldr	r3, [r3, #0]
 8011a56:	4798      	blx	r3
 8011a58:	4605      	mov	r5, r0
 8011a5a:	b930      	cbnz	r0, 8011a6a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011a5c:	7a23      	ldrb	r3, [r4, #8]
 8011a5e:	b123      	cbz	r3, 8011a6a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011a60:	6860      	ldr	r0, [r4, #4]
 8011a62:	6803      	ldr	r3, [r0, #0]
 8011a64:	695b      	ldr	r3, [r3, #20]
 8011a66:	4798      	blx	r3
 8011a68:	7225      	strb	r5, [r4, #8]
 8011a6a:	6860      	ldr	r0, [r4, #4]
 8011a6c:	6803      	ldr	r3, [r0, #0]
 8011a6e:	681b      	ldr	r3, [r3, #0]
 8011a70:	4798      	blx	r3
 8011a72:	b928      	cbnz	r0, 8011a80 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011a74:	6823      	ldr	r3, [r4, #0]
 8011a76:	4620      	mov	r0, r4
 8011a78:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011a7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a7e:	4718      	bx	r3
 8011a80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a84:	f7ef b896 	b.w	8000bb4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011a88 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011a88:	b510      	push	{r4, lr}
 8011a8a:	4c04      	ldr	r4, [pc, #16]	@ (8011a9c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011a8c:	6082      	str	r2, [r0, #8]
 8011a8e:	2200      	movs	r2, #0
 8011a90:	e9c0 4100 	strd	r4, r1, [r0]
 8011a94:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011a98:	bd10      	pop	{r4, pc}
 8011a9a:	bf00      	nop
 8011a9c:	0802e200 	.word	0x0802e200

08011aa0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8011aa0:	6840      	ldr	r0, [r0, #4]
 8011aa2:	6803      	ldr	r3, [r0, #0]
 8011aa4:	681b      	ldr	r3, [r3, #0]
 8011aa6:	4718      	bx	r3

08011aa8 <_ZN8touchgfxL10applyNoiseEiihhh>:
 8011aa8:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 8011aac:	4f20      	ldr	r7, [pc, #128]	@ (8011b30 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 8011aae:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8011ab2:	fb80 0101 	smull	r0, r1, r0, r1
 8011ab6:	fba0 bc07 	umull	fp, ip, r0, r7
 8011aba:	fb07 cc01 	mla	ip, r7, r1, ip
 8011abe:	fb0b f70c 	mul.w	r7, fp, ip
 8011ac2:	fbab 010b 	umull	r0, r1, fp, fp
 8011ac6:	461c      	mov	r4, r3
 8011ac8:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8011acc:	fb00 f30c 	mul.w	r3, r0, ip
 8011ad0:	fb0b 3301 	mla	r3, fp, r1, r3
 8011ad4:	fba0 010b 	umull	r0, r1, r0, fp
 8011ad8:	4616      	mov	r6, r2
 8011ada:	4419      	add	r1, r3
 8011adc:	a312      	add	r3, pc, #72	@ (adr r3, 8011b28 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 8011ade:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011ae2:	f7ee fbd5 	bl	8000290 <__aeabi_ldivmod>
 8011ae6:	2ef7      	cmp	r6, #247	@ 0xf7
 8011ae8:	b290      	uxth	r0, r2
 8011aea:	bf9e      	ittt	ls
 8011aec:	f002 0207 	andls.w	r2, r2, #7
 8011af0:	18b6      	addls	r6, r6, r2
 8011af2:	b2f6      	uxtbls	r6, r6
 8011af4:	2cfb      	cmp	r4, #251	@ 0xfb
 8011af6:	bf9e      	ittt	ls
 8011af8:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 8011afc:	18e4      	addls	r4, r4, r3
 8011afe:	b2e4      	uxtbls	r4, r4
 8011b00:	2df7      	cmp	r5, #247	@ 0xf7
 8011b02:	bf9c      	itt	ls
 8011b04:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 8011b08:	182d      	addls	r5, r5, r0
 8011b0a:	480a      	ldr	r0, [pc, #40]	@ (8011b34 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 8011b0c:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8011b10:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 8011b14:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8011b18:	bf98      	it	ls
 8011b1a:	b2ed      	uxtbls	r5, r5
 8011b1c:	4304      	orrs	r4, r0
 8011b1e:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 8011b22:	b280      	uxth	r0, r0
 8011b24:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 8011b28:	797a8d77 	.word	0x797a8d77
 8011b2c:	00000000 	.word	0x00000000
 8011b30:	00ec4ba7 	.word	0x00ec4ba7
 8011b34:	fffff800 	.word	0xfffff800

08011b38 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 8011b38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b3c:	ed2d 8b02 	vpush	{d8}
 8011b40:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011b44:	b087      	sub	sp, #28
 8011b46:	7c41      	ldrb	r1, [r0, #17]
 8011b48:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 8011b4c:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 8011b50:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 8011b54:	4605      	mov	r5, r0
 8011b56:	2900      	cmp	r1, #0
 8011b58:	f000 809a 	beq.w	8011c90 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 8011b5c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8011b60:	ed90 7a08 	vldr	s14, [r0, #32]
 8011b64:	68c0      	ldr	r0, [r0, #12]
 8011b66:	454a      	cmp	r2, r9
 8011b68:	db25      	blt.n	8011bb6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 8011b6a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8011b6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011b72:	f640 72fc 	movw	r2, #4092	@ 0xffc
 8011b76:	bfc8      	it	gt
 8011b78:	2200      	movgt	r2, #0
 8011b7a:	5882      	ldr	r2, [r0, r2]
 8011b7c:	2100      	movs	r1, #0
 8011b7e:	7c2d      	ldrb	r5, [r5, #16]
 8011b80:	ea4f 2812 	mov.w	r8, r2, lsr #8
 8011b84:	0950      	lsrs	r0, r2, #5
 8011b86:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 8011b8a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8011b8e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 8011b92:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 8011b96:	2d00      	cmp	r5, #0
 8011b98:	d044      	beq.n	8011c24 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 8011b9a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8011b9e:	d141      	bne.n	8011c24 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 8011ba0:	bb61      	cbnz	r1, 8011bfc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 8011ba2:	ea4e 0000 	orr.w	r0, lr, r0
 8011ba6:	ea4c 0500 	orr.w	r5, ip, r0
 8011baa:	42bc      	cmp	r4, r7
 8011bac:	f080 8217 	bcs.w	8011fde <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8011bb0:	f824 5b02 	strh.w	r5, [r4], #2
 8011bb4:	e7f9      	b.n	8011baa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 8011bb6:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 8011bba:	454f      	cmp	r7, r9
 8011bbc:	dc08      	bgt.n	8011bd0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 8011bbe:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8011bc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011bc6:	f640 72fc 	movw	r2, #4092	@ 0xffc
 8011bca:	bfd8      	it	le
 8011bcc:	2200      	movle	r2, #0
 8011bce:	e7d4      	b.n	8011b7a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 8011bd0:	eba9 0202 	sub.w	r2, r9, r2
 8011bd4:	ee07 2a90 	vmov	s15, r2
 8011bd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011bdc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8011be0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8011be4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011be8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011bec:	ee17 2a90 	vmov	r2, s15
 8011bf0:	bfd8      	it	le
 8011bf2:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 8011bf6:	0092      	lsls	r2, r2, #2
 8011bf8:	5882      	ldr	r2, [r0, r2]
 8011bfa:	e7c0      	b.n	8011b7e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 8011bfc:	b2d5      	uxtb	r5, r2
 8011bfe:	fa5f f888 	uxtb.w	r8, r8
 8011c02:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 8011c06:	461e      	mov	r6, r3
 8011c08:	42bc      	cmp	r4, r7
 8011c0a:	f080 81e8 	bcs.w	8011fde <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8011c0e:	4630      	mov	r0, r6
 8011c10:	9500      	str	r5, [sp, #0]
 8011c12:	4643      	mov	r3, r8
 8011c14:	4652      	mov	r2, sl
 8011c16:	4649      	mov	r1, r9
 8011c18:	f7ff ff46 	bl	8011aa8 <_ZN8touchgfxL10applyNoiseEiihhh>
 8011c1c:	3601      	adds	r6, #1
 8011c1e:	f824 0b02 	strh.w	r0, [r4], #2
 8011c22:	e7f1      	b.n	8011c08 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 8011c24:	0e12      	lsrs	r2, r2, #24
 8011c26:	fb02 f20a 	mul.w	r2, r2, sl
 8011c2a:	1c53      	adds	r3, r2, #1
 8011c2c:	eb03 2222 	add.w	r2, r3, r2, asr #8
 8011c30:	1212      	asrs	r2, r2, #8
 8011c32:	fb02 f50c 	mul.w	r5, r2, ip
 8011c36:	fb02 f10e 	mul.w	r1, r2, lr
 8011c3a:	4350      	muls	r0, r2
 8011c3c:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 8011ff0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8011c40:	43d2      	mvns	r2, r2
 8011c42:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8011c46:	26ff      	movs	r6, #255	@ 0xff
 8011c48:	42bc      	cmp	r4, r7
 8011c4a:	f080 81c8 	bcs.w	8011fde <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8011c4e:	f8b4 e000 	ldrh.w	lr, [r4]
 8011c52:	ea0e 030c 	and.w	r3, lr, ip
 8011c56:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 8011c5a:	fb02 1303 	mla	r3, r2, r3, r1
 8011c5e:	fb02 0808 	mla	r8, r2, r8, r0
 8011c62:	fb93 f3f6 	sdiv	r3, r3, r6
 8011c66:	fb98 f8f6 	sdiv	r8, r8, r6
 8011c6a:	ea03 030c 	and.w	r3, r3, ip
 8011c6e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8011c72:	f00e 0e1f 	and.w	lr, lr, #31
 8011c76:	ea43 0308 	orr.w	r3, r3, r8
 8011c7a:	fb02 5e0e 	mla	lr, r2, lr, r5
 8011c7e:	fb9e fef6 	sdiv	lr, lr, r6
 8011c82:	f00e 0e1f 	and.w	lr, lr, #31
 8011c86:	ea43 030e 	orr.w	r3, r3, lr
 8011c8a:	f824 3b02 	strh.w	r3, [r4], #2
 8011c8e:	e7db      	b.n	8011c48 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 8011c90:	7c82      	ldrb	r2, [r0, #18]
 8011c92:	2a00      	cmp	r2, #0
 8011c94:	d04f      	beq.n	8011d36 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 8011c96:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8011c9a:	ee07 2a90 	vmov	s15, r2
 8011c9e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011ca2:	ee07 3a10 	vmov	s14, r3
 8011ca6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011caa:	461f      	mov	r7, r3
 8011cac:	eef4 6ae7 	vcmpe.f32	s13, s15
 8011cb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cb4:	f200 8095 	bhi.w	8011de2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 8011cb8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011cbc:	ee37 7a87 	vadd.f32	s14, s15, s14
 8011cc0:	f640 71fc 	movw	r1, #4092	@ 0xffc
 8011cc4:	ee37 7a66 	vsub.f32	s14, s14, s13
 8011cc8:	ee06 6a90 	vmov	s13, r6
 8011ccc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8011cd0:	68ea      	ldr	r2, [r5, #12]
 8011cd2:	f895 c010 	ldrb.w	ip, [r5, #16]
 8011cd6:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8011cda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cde:	bf4a      	itet	mi
 8011ce0:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 8011ce4:	9602      	strpl	r6, [sp, #8]
 8011ce6:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 8011cea:	ed95 7a08 	vldr	s14, [r5, #32]
 8011cee:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8011cf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011cf6:	bfc8      	it	gt
 8011cf8:	2100      	movgt	r1, #0
 8011cfa:	5852      	ldr	r2, [r2, r1]
 8011cfc:	9902      	ldr	r1, [sp, #8]
 8011cfe:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 8011d02:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8011d06:	0950      	lsrs	r0, r2, #5
 8011d08:	9103      	str	r1, [sp, #12]
 8011d0a:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8011d0e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8011d12:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 8011d16:	f1bc 0f00 	cmp.w	ip, #0
 8011d1a:	d024      	beq.n	8011d66 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 8011d1c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8011d20:	d121      	bne.n	8011d66 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 8011d22:	ea4b 0b00 	orr.w	fp, fp, r0
 8011d26:	ea41 010b 	orr.w	r1, r1, fp
 8011d2a:	9a03      	ldr	r2, [sp, #12]
 8011d2c:	4294      	cmp	r4, r2
 8011d2e:	d255      	bcs.n	8011ddc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 8011d30:	f824 1b02 	strh.w	r1, [r4], #2
 8011d34:	e7f9      	b.n	8011d2a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 8011d36:	ee07 9a10 	vmov	s14, r9
 8011d3a:	edd0 7a06 	vldr	s15, [r0, #24]
 8011d3e:	edd0 6a05 	vldr	s13, [r0, #20]
 8011d42:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011d46:	ee37 7a67 	vsub.f32	s14, s14, s15
 8011d4a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8011d4e:	ed90 7a08 	vldr	s14, [r0, #32]
 8011d52:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8011d56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011d5a:	bf44      	itt	mi
 8011d5c:	ed90 7a07 	vldrmi	s14, [r0, #28]
 8011d60:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 8011d64:	e79d      	b.n	8011ca2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 8011d66:	0e12      	lsrs	r2, r2, #24
 8011d68:	fb02 f20a 	mul.w	r2, r2, sl
 8011d6c:	f102 0c01 	add.w	ip, r2, #1
 8011d70:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 8011d74:	1212      	asrs	r2, r2, #8
 8011d76:	4350      	muls	r0, r2
 8011d78:	4351      	muls	r1, r2
 8011d7a:	fb02 fb0b 	mul.w	fp, r2, fp
 8011d7e:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 8011ff0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8011d82:	9004      	str	r0, [sp, #16]
 8011d84:	43d2      	mvns	r2, r2
 8011d86:	9105      	str	r1, [sp, #20]
 8011d88:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8011d8c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 8011d90:	9903      	ldr	r1, [sp, #12]
 8011d92:	428c      	cmp	r4, r1
 8011d94:	d222      	bcs.n	8011ddc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 8011d96:	8820      	ldrh	r0, [r4, #0]
 8011d98:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 8011d9c:	460f      	mov	r7, r1
 8011d9e:	9904      	ldr	r1, [sp, #16]
 8011da0:	ea00 0c08 	and.w	ip, r0, r8
 8011da4:	fb02 bc0c 	mla	ip, r2, ip, fp
 8011da8:	fb02 1107 	mla	r1, r2, r7, r1
 8011dac:	fb9c fcfe 	sdiv	ip, ip, lr
 8011db0:	fb91 f1fe 	sdiv	r1, r1, lr
 8011db4:	ea0c 0c08 	and.w	ip, ip, r8
 8011db8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8011dbc:	ea4c 0101 	orr.w	r1, ip, r1
 8011dc0:	f000 0c1f 	and.w	ip, r0, #31
 8011dc4:	9805      	ldr	r0, [sp, #20]
 8011dc6:	fb02 0c0c 	mla	ip, r2, ip, r0
 8011dca:	fb9c fcfe 	sdiv	ip, ip, lr
 8011dce:	f00c 0c1f 	and.w	ip, ip, #31
 8011dd2:	ea41 010c 	orr.w	r1, r1, ip
 8011dd6:	f824 1b02 	strh.w	r1, [r4], #2
 8011dda:	e7d9      	b.n	8011d90 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 8011ddc:	9a02      	ldr	r2, [sp, #8]
 8011dde:	441a      	add	r2, r3
 8011de0:	4617      	mov	r7, r2
 8011de2:	441e      	add	r6, r3
 8011de4:	b236      	sxth	r6, r6
 8011de6:	42be      	cmp	r6, r7
 8011de8:	f340 80f9 	ble.w	8011fde <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8011dec:	ed95 7a07 	vldr	s14, [r5, #28]
 8011df0:	ee06 7a90 	vmov	s13, r7
 8011df4:	ee37 7a87 	vadd.f32	s14, s15, s14
 8011df8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8011dfc:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8011e00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011e04:	f340 80b5 	ble.w	8011f72 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 8011e08:	ee06 6a10 	vmov	s12, r6
 8011e0c:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8011e10:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 8011fe8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 8011e14:	7c2b      	ldrb	r3, [r5, #16]
 8011e16:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8011e1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011e1e:	bfd8      	it	le
 8011e20:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 8011e24:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 8011fec <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 8011e28:	bfd8      	it	le
 8011e2a:	ee17 8a10 	vmovle	r8, s14
 8011e2e:	ed95 7a08 	vldr	s14, [r5, #32]
 8011e32:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8011e36:	bfc8      	it	gt
 8011e38:	46b0      	movgt	r8, r6
 8011e3a:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8011e3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011e42:	eba8 0707 	sub.w	r7, r8, r7
 8011e46:	bfd8      	it	le
 8011e48:	eeb0 8a46 	vmovle.f32	s16, s12
 8011e4c:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 8011e50:	eea7 8a27 	vfma.f32	s16, s14, s15
 8011e54:	b1db      	cbz	r3, 8011e8e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 8011e56:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8011e5a:	d118      	bne.n	8011e8e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 8011e5c:	42bc      	cmp	r4, r7
 8011e5e:	d262      	bcs.n	8011f26 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 8011e60:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8011e64:	68eb      	ldr	r3, [r5, #12]
 8011e66:	ee17 0a90 	vmov	r0, s15
 8011e6a:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 8011e6e:	b2d3      	uxtb	r3, r2
 8011e70:	9300      	str	r3, [sp, #0]
 8011e72:	4649      	mov	r1, r9
 8011e74:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8011e78:	f3c2 4207 	ubfx	r2, r2, #16, #8
 8011e7c:	f7ff fe14 	bl	8011aa8 <_ZN8touchgfxL10applyNoiseEiihhh>
 8011e80:	f824 0b02 	strh.w	r0, [r4], #2
 8011e84:	edd5 7a08 	vldr	s15, [r5, #32]
 8011e88:	ee38 8a27 	vadd.f32	s16, s16, s15
 8011e8c:	e7e6      	b.n	8011e5c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 8011e8e:	f8df b160 	ldr.w	fp, [pc, #352]	@ 8011ff0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8011e92:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 8011e96:	42bc      	cmp	r4, r7
 8011e98:	d245      	bcs.n	8011f26 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 8011e9a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8011e9e:	68eb      	ldr	r3, [r5, #12]
 8011ea0:	f8b4 e000 	ldrh.w	lr, [r4]
 8011ea4:	ee17 2a90 	vmov	r2, s15
 8011ea8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8011eac:	0e13      	lsrs	r3, r2, #24
 8011eae:	fb03 f30a 	mul.w	r3, r3, sl
 8011eb2:	1c58      	adds	r0, r3, #1
 8011eb4:	eb00 2023 	add.w	r0, r0, r3, asr #8
 8011eb8:	1200      	asrs	r0, r0, #8
 8011eba:	ea6f 0c00 	mvn.w	ip, r0
 8011ebe:	fa5f fc8c 	uxtb.w	ip, ip
 8011ec2:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 8011ec6:	ea0e 030b 	and.w	r3, lr, fp
 8011eca:	fb0c f303 	mul.w	r3, ip, r3
 8011ece:	b289      	uxth	r1, r1
 8011ed0:	fb00 3101 	mla	r1, r0, r1, r3
 8011ed4:	fb91 f1f9 	sdiv	r1, r1, r9
 8011ed8:	ea01 030b 	and.w	r3, r1, fp
 8011edc:	9302      	str	r3, [sp, #8]
 8011ede:	0953      	lsrs	r3, r2, #5
 8011ee0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8011ee4:	4619      	mov	r1, r3
 8011ee6:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 8011eea:	fb0c f303 	mul.w	r3, ip, r3
 8011eee:	fb00 3301 	mla	r3, r0, r1, r3
 8011ef2:	f00e 0e1f 	and.w	lr, lr, #31
 8011ef6:	9902      	ldr	r1, [sp, #8]
 8011ef8:	fb93 f3f9 	sdiv	r3, r3, r9
 8011efc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8011f00:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8011f04:	fb0c fc0e 	mul.w	ip, ip, lr
 8011f08:	4319      	orrs	r1, r3
 8011f0a:	fb00 c002 	mla	r0, r0, r2, ip
 8011f0e:	fb90 f0f9 	sdiv	r0, r0, r9
 8011f12:	f000 001f 	and.w	r0, r0, #31
 8011f16:	4301      	orrs	r1, r0
 8011f18:	f824 1b02 	strh.w	r1, [r4], #2
 8011f1c:	edd5 7a08 	vldr	s15, [r5, #32]
 8011f20:	ee38 8a27 	vadd.f32	s16, s16, s15
 8011f24:	e7b7      	b.n	8011e96 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 8011f26:	4546      	cmp	r6, r8
 8011f28:	dd59      	ble.n	8011fde <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8011f2a:	edd5 7a08 	vldr	s15, [r5, #32]
 8011f2e:	68ea      	ldr	r2, [r5, #12]
 8011f30:	7c29      	ldrb	r1, [r5, #16]
 8011f32:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8011f36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f3a:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8011f3e:	bfd8      	it	le
 8011f40:	2300      	movle	r3, #0
 8011f42:	eba6 0608 	sub.w	r6, r6, r8
 8011f46:	58d2      	ldr	r2, [r2, r3]
 8011f48:	0a10      	lsrs	r0, r2, #8
 8011f4a:	0953      	lsrs	r3, r2, #5
 8011f4c:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 8011f50:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8011f54:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8011f58:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 8011f5c:	b159      	cbz	r1, 8011f76 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 8011f5e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8011f62:	d108      	bne.n	8011f76 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 8011f64:	4318      	orrs	r0, r3
 8011f66:	4338      	orrs	r0, r7
 8011f68:	42b4      	cmp	r4, r6
 8011f6a:	d238      	bcs.n	8011fde <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8011f6c:	f824 0b02 	strh.w	r0, [r4], #2
 8011f70:	e7fa      	b.n	8011f68 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 8011f72:	46b8      	mov	r8, r7
 8011f74:	e7d9      	b.n	8011f2a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 8011f76:	0e12      	lsrs	r2, r2, #24
 8011f78:	fb02 f10a 	mul.w	r1, r2, sl
 8011f7c:	1c4a      	adds	r2, r1, #1
 8011f7e:	eb02 2221 	add.w	r2, r2, r1, asr #8
 8011f82:	1212      	asrs	r2, r2, #8
 8011f84:	fb02 f507 	mul.w	r5, r2, r7
 8011f88:	4350      	muls	r0, r2
 8011f8a:	4353      	muls	r3, r2
 8011f8c:	f8df c060 	ldr.w	ip, [pc, #96]	@ 8011ff0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 8011f90:	43d2      	mvns	r2, r2
 8011f92:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8011f96:	27ff      	movs	r7, #255	@ 0xff
 8011f98:	42b4      	cmp	r4, r6
 8011f9a:	d220      	bcs.n	8011fde <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 8011f9c:	f8b4 e000 	ldrh.w	lr, [r4]
 8011fa0:	ea0e 010c 	and.w	r1, lr, ip
 8011fa4:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 8011fa8:	fb02 0101 	mla	r1, r2, r1, r0
 8011fac:	fb02 3808 	mla	r8, r2, r8, r3
 8011fb0:	fb91 f1f7 	sdiv	r1, r1, r7
 8011fb4:	fb98 f8f7 	sdiv	r8, r8, r7
 8011fb8:	ea01 010c 	and.w	r1, r1, ip
 8011fbc:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8011fc0:	f00e 0e1f 	and.w	lr, lr, #31
 8011fc4:	ea41 0108 	orr.w	r1, r1, r8
 8011fc8:	fb02 5e0e 	mla	lr, r2, lr, r5
 8011fcc:	fb9e fef7 	sdiv	lr, lr, r7
 8011fd0:	f00e 0e1f 	and.w	lr, lr, #31
 8011fd4:	ea41 010e 	orr.w	r1, r1, lr
 8011fd8:	f824 1b02 	strh.w	r1, [r4], #2
 8011fdc:	e7dc      	b.n	8011f98 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 8011fde:	b007      	add	sp, #28
 8011fe0:	ecbd 8b02 	vpop	{d8}
 8011fe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011fe8:	00000000 	.word	0x00000000
 8011fec:	447ffffe 	.word	0x447ffffe
 8011ff0:	fffff800 	.word	0xfffff800

08011ff4 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 8011ff4:	4770      	bx	lr

08011ff6 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 8011ff6:	4770      	bx	lr

08011ff8 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 8011ff8:	b510      	push	{r4, lr}
 8011ffa:	2124      	movs	r1, #36	@ 0x24
 8011ffc:	4604      	mov	r4, r0
 8011ffe:	f017 fb89 	bl	8029714 <_ZdlPvj>
 8012002:	4620      	mov	r0, r4
 8012004:	bd10      	pop	{r4, pc}
	...

08012008 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8012008:	4b06      	ldr	r3, [pc, #24]	@ (8012024 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 801200a:	60c1      	str	r1, [r0, #12]
 801200c:	094a      	lsrs	r2, r1, #5
 801200e:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8012012:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8012016:	4313      	orrs	r3, r2
 8012018:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801201c:	4319      	orrs	r1, r3
 801201e:	8201      	strh	r1, [r0, #16]
 8012020:	4770      	bx	lr
 8012022:	bf00      	nop
 8012024:	fffff800 	.word	0xfffff800

08012028 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8012028:	f1a0 0008 	sub.w	r0, r0, #8
 801202c:	e7ec      	b.n	8012008 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 801202e:	bf00      	nop

08012030 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8012030:	b508      	push	{r3, lr}
 8012032:	4b05      	ldr	r3, [pc, #20]	@ (8012048 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8012034:	6818      	ldr	r0, [r3, #0]
 8012036:	6803      	ldr	r3, [r0, #0]
 8012038:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 801203c:	4798      	blx	r3
 801203e:	1e43      	subs	r3, r0, #1
 8012040:	4258      	negs	r0, r3
 8012042:	4158      	adcs	r0, r3
 8012044:	bd08      	pop	{r3, pc}
 8012046:	bf00      	nop
 8012048:	20013f4c 	.word	0x20013f4c

0801204c <_ZN8touchgfx13PainterRGB565D1Ev>:
 801204c:	4770      	bx	lr

0801204e <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 801204e:	3808      	subs	r0, #8
 8012050:	4770      	bx	lr

08012052 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8012052:	b430      	push	{r4, r5}
 8012054:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8012058:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 801205c:	8a02      	ldrh	r2, [r0, #16]
 801205e:	9202      	str	r2, [sp, #8]
 8012060:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8012064:	68c2      	ldr	r2, [r0, #12]
 8012066:	4629      	mov	r1, r5
 8012068:	4620      	mov	r0, r4
 801206a:	bc30      	pop	{r4, r5}
 801206c:	f7ee bf6a 	b.w	8000f44 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08012070 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8012070:	f7ee bf5c 	b.w	8000f2c <_ZN8touchgfx5paint8tearDownEv>

08012074 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8012074:	b510      	push	{r4, lr}
 8012076:	2114      	movs	r1, #20
 8012078:	4604      	mov	r4, r0
 801207a:	f017 fb4b 	bl	8029714 <_ZdlPvj>
 801207e:	4620      	mov	r0, r4
 8012080:	bd10      	pop	{r4, pc}

08012082 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8012082:	f1a0 0008 	sub.w	r0, r0, #8
 8012086:	e7f5      	b.n	8012074 <_ZN8touchgfx13PainterRGB565D0Ev>

08012088 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 8012088:	2300      	movs	r3, #0
 801208a:	84c3      	strh	r3, [r0, #38]	@ 0x26
 801208c:	8503      	strh	r3, [r0, #40]	@ 0x28
 801208e:	8543      	strh	r3, [r0, #42]	@ 0x2a
 8012090:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8012092:	6980      	ldr	r0, [r0, #24]
 8012094:	b110      	cbz	r0, 801209c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 8012096:	6803      	ldr	r3, [r0, #0]
 8012098:	691b      	ldr	r3, [r3, #16]
 801209a:	4718      	bx	r3
 801209c:	4770      	bx	lr

0801209e <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 801209e:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 80120a2:	4770      	bx	lr

080120a4 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 80120a4:	b538      	push	{r3, r4, r5, lr}
 80120a6:	0e0b      	lsrs	r3, r1, #24
 80120a8:	7783      	strb	r3, [r0, #30]
 80120aa:	6803      	ldr	r3, [r0, #0]
 80120ac:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80120ae:	4604      	mov	r4, r0
 80120b0:	460d      	mov	r5, r1
 80120b2:	4798      	blx	r3
 80120b4:	6803      	ldr	r3, [r0, #0]
 80120b6:	4629      	mov	r1, r5
 80120b8:	689b      	ldr	r3, [r3, #8]
 80120ba:	4798      	blx	r3
 80120bc:	6823      	ldr	r3, [r4, #0]
 80120be:	4620      	mov	r0, r4
 80120c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80120c2:	4798      	blx	r3
 80120c4:	61a0      	str	r0, [r4, #24]
 80120c6:	bd38      	pop	{r3, r4, r5, pc}

080120c8 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 80120c8:	7741      	strb	r1, [r0, #29]
 80120ca:	4770      	bx	lr

080120cc <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 80120cc:	b530      	push	{r4, r5, lr}
 80120ce:	460d      	mov	r5, r1
 80120d0:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 80120d4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80120d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80120d8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80120da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80120dc:	682b      	ldr	r3, [r5, #0]
 80120de:	6023      	str	r3, [r4, #0]
 80120e0:	bd30      	pop	{r4, r5, pc}

080120e2 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 80120e2:	b538      	push	{r3, r4, r5, lr}
 80120e4:	4604      	mov	r4, r0
 80120e6:	1d03      	adds	r3, r0, #4
 80120e8:	6808      	ldr	r0, [r1, #0]
 80120ea:	6849      	ldr	r1, [r1, #4]
 80120ec:	c303      	stmia	r3!, {r0, r1}
 80120ee:	6813      	ldr	r3, [r2, #0]
 80120f0:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 80120f4:	6853      	ldr	r3, [r2, #4]
 80120f6:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 80120fa:	2500      	movs	r5, #0
 80120fc:	61a5      	str	r5, [r4, #24]
 80120fe:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8012102:	f006 f9fd 	bl	8018500 <_ZN8touchgfx9Matrix3x35resetEv>
 8012106:	23ff      	movs	r3, #255	@ 0xff
 8012108:	7763      	strb	r3, [r4, #29]
 801210a:	77a3      	strb	r3, [r4, #30]
 801210c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8012110:	6323      	str	r3, [r4, #48]	@ 0x30
 8012112:	2301      	movs	r3, #1
 8012114:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 8012118:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 801211c:	bd38      	pop	{r3, r4, r5, pc}
	...

08012120 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 8012120:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012124:	ed2d 8b0a 	vpush	{d8-d12}
 8012128:	ee70 7a41 	vsub.f32	s15, s0, s2
 801212c:	b087      	sub	sp, #28
 801212e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8012132:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012136:	4605      	mov	r5, r0
 8012138:	eef0 9a40 	vmov.f32	s19, s0
 801213c:	eeb0 aa60 	vmov.f32	s20, s1
 8012140:	eeb0 9a41 	vmov.f32	s18, s2
 8012144:	eef0 8a61 	vmov.f32	s17, s3
 8012148:	eeb0 ca42 	vmov.f32	s24, s4
 801214c:	eef0 ca62 	vmov.f32	s25, s5
 8012150:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 8012154:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8012156:	6802      	ldr	r2, [r0, #0]
 8012158:	d112      	bne.n	8012180 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 801215a:	ee70 7ae1 	vsub.f32	s15, s1, s3
 801215e:	eef5 7a40 	vcmp.f32	s15, #0.0
 8012162:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012166:	d10b      	bne.n	8012180 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 8012168:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801216c:	3901      	subs	r1, #1
 801216e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 8012170:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 8012174:	b007      	add	sp, #28
 8012176:	ecbd 8b0a 	vpop	{d8-d12}
 801217a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801217e:	4710      	bx	r2
 8012180:	23ff      	movs	r3, #255	@ 0xff
 8012182:	77ab      	strb	r3, [r5, #30]
 8012184:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8012186:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 801244c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 801218a:	4628      	mov	r0, r5
 801218c:	4798      	blx	r3
 801218e:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 8012192:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8012196:	80c3      	strh	r3, [r0, #6]
 8012198:	eef0 0a4a 	vmov.f32	s1, s20
 801219c:	eeb0 0a69 	vmov.f32	s0, s19
 80121a0:	4604      	mov	r4, r0
 80121a2:	4640      	mov	r0, r8
 80121a4:	f006 fa5b 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80121a8:	4640      	mov	r0, r8
 80121aa:	eeb0 ba40 	vmov.f32	s22, s0
 80121ae:	eef0 ba60 	vmov.f32	s23, s1
 80121b2:	ed8d 0a00 	vstr	s0, [sp]
 80121b6:	edcd 0a01 	vstr	s1, [sp, #4]
 80121ba:	eeb0 0a49 	vmov.f32	s0, s18
 80121be:	eef0 0a68 	vmov.f32	s1, s17
 80121c2:	f006 fa4c 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80121c6:	eeb4 ba40 	vcmp.f32	s22, s0
 80121ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80121ce:	eef4 ba60 	vcmp.f32	s23, s1
 80121d2:	bf0c      	ite	eq
 80121d4:	2301      	moveq	r3, #1
 80121d6:	2300      	movne	r3, #0
 80121d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80121dc:	eeb4 ba40 	vcmp.f32	s22, s0
 80121e0:	7463      	strb	r3, [r4, #17]
 80121e2:	bf0c      	ite	eq
 80121e4:	2301      	moveq	r3, #1
 80121e6:	2300      	movne	r3, #0
 80121e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80121ec:	eeb0 8a40 	vmov.f32	s16, s0
 80121f0:	eef0 aa60 	vmov.f32	s21, s1
 80121f4:	ed8d 0a02 	vstr	s0, [sp, #8]
 80121f8:	edcd 0a03 	vstr	s1, [sp, #12]
 80121fc:	74a3      	strb	r3, [r4, #18]
 80121fe:	d030      	beq.n	8012262 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 8012200:	eef4 ba60 	vcmp.f32	s23, s1
 8012204:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012208:	d02b      	beq.n	8012262 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 801220a:	ee39 9a69 	vsub.f32	s18, s18, s19
 801220e:	ee78 8aca 	vsub.f32	s17, s17, s20
 8012212:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 8012216:	4640      	mov	r0, r8
 8012218:	eec8 7aac 	vdiv.f32	s15, s17, s25
 801221c:	eef0 0a4a 	vmov.f32	s1, s20
 8012220:	eeb0 0a69 	vmov.f32	s0, s19
 8012224:	eea7 0acc 	vfms.f32	s0, s15, s24
 8012228:	eeec 0a87 	vfma.f32	s1, s25, s14
 801222c:	f006 fa17 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8012230:	f899 3000 	ldrb.w	r3, [r9]
 8012234:	edcd 0a05 	vstr	s1, [sp, #20]
 8012238:	ee70 0aeb 	vsub.f32	s1, s1, s23
 801223c:	2b01      	cmp	r3, #1
 801223e:	ed8d 0a04 	vstr	s0, [sp, #16]
 8012242:	ee30 0a4b 	vsub.f32	s0, s0, s22
 8012246:	bf02      	ittt	eq
 8012248:	eef1 7a60 	vnegeq.f32	s15, s1
 801224c:	eef0 0a40 	vmoveq.f32	s1, s0
 8012250:	eeb0 0a67 	vmoveq.f32	s0, s15
 8012254:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8012258:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801225c:	d134      	bne.n	80122c8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 801225e:	2301      	movs	r3, #1
 8012260:	74a3      	strb	r3, [r4, #18]
 8012262:	f899 2000 	ldrb.w	r2, [r9]
 8012266:	7c63      	ldrb	r3, [r4, #17]
 8012268:	2a01      	cmp	r2, #1
 801226a:	f040 80a3 	bne.w	80123b4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 801226e:	2b00      	cmp	r3, #0
 8012270:	d072      	beq.n	8012358 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 8012272:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 8012276:	eddf 6a73 	vldr	s13, [pc, #460]	@ 8012444 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 801227a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 801227e:	eef4 baea 	vcmpe.f32	s23, s21
 8012282:	edc4 7a08 	vstr	s15, [r4, #32]
 8012286:	eefd 7aea 	vcvt.s32.f32	s15, s21
 801228a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801228e:	ee17 3a90 	vmov	r3, s15
 8012292:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 8012296:	b21a      	sxth	r2, r3
 8012298:	ee17 3a90 	vmov	r3, s15
 801229c:	b21b      	sxth	r3, r3
 801229e:	bf47      	ittee	mi
 80122a0:	8123      	strhmi	r3, [r4, #8]
 80122a2:	8162      	strhmi	r2, [r4, #10]
 80122a4:	8122      	strhpl	r2, [r4, #8]
 80122a6:	8163      	strhpl	r3, [r4, #10]
 80122a8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80122ac:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80122b0:	1a9b      	subs	r3, r3, r2
 80122b2:	ee07 3a90 	vmov	s15, r3
 80122b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80122ba:	2300      	movs	r3, #0
 80122bc:	7463      	strb	r3, [r4, #17]
 80122be:	edc4 7a07 	vstr	s15, [r4, #28]
 80122c2:	2301      	movs	r3, #1
 80122c4:	74a3      	strb	r3, [r4, #18]
 80122c6:	e03f      	b.n	8012348 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 80122c8:	ee80 7a80 	vdiv.f32	s14, s1, s0
 80122cc:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80122d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80122d4:	ed84 7a05 	vstr	s14, [r4, #20]
 80122d8:	d102      	bne.n	80122e0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 80122da:	2301      	movs	r3, #1
 80122dc:	7463      	strb	r3, [r4, #17]
 80122de:	e7c0      	b.n	8012262 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 80122e0:	2b01      	cmp	r3, #1
 80122e2:	bf03      	ittte	eq
 80122e4:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 80122e8:	ee07 2a90 	vmoveq	s15, r2
 80122ec:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 80122f0:	eef0 7a6b 	vmovne.f32	s15, s23
 80122f4:	bf0a      	itet	eq
 80122f6:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 80122fa:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 80122fe:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 8012302:	2b01      	cmp	r3, #1
 8012304:	ee38 8a4b 	vsub.f32	s16, s16, s22
 8012308:	ee7a aaeb 	vsub.f32	s21, s21, s23
 801230c:	edc4 7a06 	vstr	s15, [r4, #24]
 8012310:	bf02      	ittt	eq
 8012312:	eef1 7a48 	vnegeq.f32	s15, s16
 8012316:	eeb0 8a6a 	vmoveq.f32	s16, s21
 801231a:	eef0 aa67 	vmoveq.f32	s21, s15
 801231e:	eeca 7a87 	vdiv.f32	s15, s21, s14
 8012322:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8012448 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 8012326:	ee38 8a67 	vsub.f32	s16, s16, s15
 801232a:	eec7 7a08 	vdiv.f32	s15, s14, s16
 801232e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8012332:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012336:	ed84 8a07 	vstr	s16, [r4, #28]
 801233a:	edc4 7a08 	vstr	s15, [r4, #32]
 801233e:	d503      	bpl.n	8012348 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 8012340:	eeb1 8a48 	vneg.f32	s16, s16
 8012344:	ed84 8a07 	vstr	s16, [r4, #28]
 8012348:	60e7      	str	r7, [r4, #12]
 801234a:	7426      	strb	r6, [r4, #16]
 801234c:	61ac      	str	r4, [r5, #24]
 801234e:	b007      	add	sp, #28
 8012350:	ecbd 8b0a 	vpop	{d8-d12}
 8012354:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012358:	7ca3      	ldrb	r3, [r4, #18]
 801235a:	2b00      	cmp	r3, #0
 801235c:	d0f4      	beq.n	8012348 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 801235e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012362:	eddf 6a38 	vldr	s13, [pc, #224]	@ 8012444 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 8012366:	ee00 3a10 	vmov	s0, r3
 801236a:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 801236e:	ee30 8a48 	vsub.f32	s16, s0, s16
 8012372:	ee30 0a4b 	vsub.f32	s0, s0, s22
 8012376:	ee38 7a40 	vsub.f32	s14, s16, s0
 801237a:	eeb4 8ac0 	vcmpe.f32	s16, s0
 801237e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8012382:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012386:	edc4 7a08 	vstr	s15, [r4, #32]
 801238a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 801238e:	ee17 3a90 	vmov	r3, s15
 8012392:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8012396:	b21a      	sxth	r2, r3
 8012398:	ee17 3a90 	vmov	r3, s15
 801239c:	b21b      	sxth	r3, r3
 801239e:	bfcc      	ite	gt
 80123a0:	8123      	strhgt	r3, [r4, #8]
 80123a2:	8163      	strhle	r3, [r4, #10]
 80123a4:	f04f 0301 	mov.w	r3, #1
 80123a8:	7463      	strb	r3, [r4, #17]
 80123aa:	bfcc      	ite	gt
 80123ac:	8162      	strhgt	r2, [r4, #10]
 80123ae:	8122      	strhle	r2, [r4, #8]
 80123b0:	2300      	movs	r3, #0
 80123b2:	e787      	b.n	80122c4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 80123b4:	b1db      	cbz	r3, 80123ee <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 80123b6:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 80123ba:	eddf 6a22 	vldr	s13, [pc, #136]	@ 8012444 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 80123be:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80123c2:	eef4 baea 	vcmpe.f32	s23, s21
 80123c6:	edc4 7a08 	vstr	s15, [r4, #32]
 80123ca:	eefd 7aea 	vcvt.s32.f32	s15, s21
 80123ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80123d2:	ee17 3a90 	vmov	r3, s15
 80123d6:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 80123da:	b21a      	sxth	r2, r3
 80123dc:	ee17 3a90 	vmov	r3, s15
 80123e0:	b21b      	sxth	r3, r3
 80123e2:	bf47      	ittee	mi
 80123e4:	8123      	strhmi	r3, [r4, #8]
 80123e6:	8162      	strhmi	r2, [r4, #10]
 80123e8:	8122      	strhpl	r2, [r4, #8]
 80123ea:	8163      	strhpl	r3, [r4, #10]
 80123ec:	e7ac      	b.n	8012348 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 80123ee:	7ca3      	ldrb	r3, [r4, #18]
 80123f0:	2b00      	cmp	r3, #0
 80123f2:	d0a9      	beq.n	8012348 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 80123f4:	ee38 7a4b 	vsub.f32	s14, s16, s22
 80123f8:	eddf 6a12 	vldr	s13, [pc, #72]	@ 8012444 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 80123fc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8012400:	eeb4 bac8 	vcmpe.f32	s22, s16
 8012404:	edc4 7a08 	vstr	s15, [r4, #32]
 8012408:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 801240c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012410:	ee17 3a90 	vmov	r3, s15
 8012414:	eefd 7acb 	vcvt.s32.f32	s15, s22
 8012418:	b21a      	sxth	r2, r3
 801241a:	ee17 3a90 	vmov	r3, s15
 801241e:	b21b      	sxth	r3, r3
 8012420:	bf47      	ittee	mi
 8012422:	8123      	strhmi	r3, [r4, #8]
 8012424:	8162      	strhmi	r2, [r4, #10]
 8012426:	8122      	strhpl	r2, [r4, #8]
 8012428:	8163      	strhpl	r3, [r4, #10]
 801242a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801242e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012432:	1a9b      	subs	r3, r3, r2
 8012434:	ee07 3a90 	vmov	s15, r3
 8012438:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801243c:	edc4 7a07 	vstr	s15, [r4, #28]
 8012440:	e782      	b.n	8012348 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 8012442:	bf00      	nop
 8012444:	447ffffe 	.word	0x447ffffe
 8012448:	44800000 	.word	0x44800000
 801244c:	20013f44 	.word	0x20013f44

08012450 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 8012450:	b510      	push	{r4, lr}
 8012452:	2100      	movs	r1, #0
 8012454:	ed2d 8b02 	vpush	{d8}
 8012458:	eef0 8a62 	vmov.f32	s17, s5
 801245c:	4604      	mov	r4, r0
 801245e:	eeb0 8a42 	vmov.f32	s16, s4
 8012462:	f016 fec7 	bl	80291f4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 8012466:	eef0 7a68 	vmov.f32	s15, s17
 801246a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801246e:	6823      	ldr	r3, [r4, #0]
 8012470:	ee17 2a90 	vmov	r2, s15
 8012474:	eef0 7a48 	vmov.f32	s15, s16
 8012478:	ecbd 8b02 	vpop	{d8}
 801247c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8012480:	4620      	mov	r0, r4
 8012482:	689b      	ldr	r3, [r3, #8]
 8012484:	ee17 1a90 	vmov	r1, s15
 8012488:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801248c:	4718      	bx	r3

0801248e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 801248e:	b510      	push	{r4, lr}
 8012490:	2100      	movs	r1, #0
 8012492:	ed2d 8b02 	vpush	{d8}
 8012496:	eef0 8a63 	vmov.f32	s17, s7
 801249a:	4604      	mov	r4, r0
 801249c:	eeb0 8a43 	vmov.f32	s16, s6
 80124a0:	f016 ff6a 	bl	8029378 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 80124a4:	eef0 7a68 	vmov.f32	s15, s17
 80124a8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80124ac:	6823      	ldr	r3, [r4, #0]
 80124ae:	ee17 2a90 	vmov	r2, s15
 80124b2:	eef0 7a48 	vmov.f32	s15, s16
 80124b6:	ecbd 8b02 	vpop	{d8}
 80124ba:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80124be:	4620      	mov	r0, r4
 80124c0:	689b      	ldr	r3, [r3, #8]
 80124c2:	ee17 1a90 	vmov	r1, s15
 80124c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80124ca:	4718      	bx	r3

080124cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 80124cc:	b513      	push	{r0, r1, r4, lr}
 80124ce:	4604      	mov	r4, r0
 80124d0:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 80124d2:	f006 f8c4 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80124d6:	eef0 7a60 	vmov.f32	s15, s1
 80124da:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80124de:	4620      	mov	r0, r4
 80124e0:	ee17 2a90 	vmov	r2, s15
 80124e4:	eef0 7a40 	vmov.f32	s15, s0
 80124e8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 80124ec:	ee17 1a90 	vmov	r1, s15
 80124f0:	b002      	add	sp, #8
 80124f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80124f6:	f016 bdd7 	b.w	80290a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

080124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 80124fa:	b513      	push	{r0, r1, r4, lr}
 80124fc:	4604      	mov	r4, r0
 80124fe:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 8012500:	f006 f8ad 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8012504:	eef0 7a60 	vmov.f32	s15, s1
 8012508:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801250c:	4620      	mov	r0, r4
 801250e:	ee17 2a90 	vmov	r2, s15
 8012512:	eef0 7a40 	vmov.f32	s15, s0
 8012516:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801251a:	ee17 1a90 	vmov	r1, s15
 801251e:	b002      	add	sp, #8
 8012520:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012524:	f016 be0d 	b.w	8029142 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

08012528 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 8012528:	b5f0      	push	{r4, r5, r6, r7, lr}
 801252a:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 801252e:	2400      	movs	r4, #0
 8012530:	9f07      	ldr	r7, [sp, #28]
 8012532:	4463      	add	r3, ip
 8012534:	4626      	mov	r6, r4
 8012536:	f04f 0e01 	mov.w	lr, #1
 801253a:	4563      	cmp	r3, ip
 801253c:	d02d      	beq.n	801259a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 801253e:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 8012542:	2d06      	cmp	r5, #6
 8012544:	d8f9      	bhi.n	801253a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 8012546:	fa0e f505 	lsl.w	r5, lr, r5
 801254a:	f015 0f66 	tst.w	r5, #102	@ 0x66
 801254e:	d10d      	bne.n	801256c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 8012550:	f015 0f10 	tst.w	r5, #16
 8012554:	d117      	bne.n	8012586 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 8012556:	072d      	lsls	r5, r5, #28
 8012558:	d5ef      	bpl.n	801253a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 801255a:	3801      	subs	r0, #1
 801255c:	b91e      	cbnz	r6, 8012566 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 801255e:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 8012562:	682d      	ldr	r5, [r5, #0]
 8012564:	600d      	str	r5, [r1, #0]
 8012566:	b96c      	cbnz	r4, 8012584 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8012568:	2601      	movs	r6, #1
 801256a:	e7e6      	b.n	801253a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 801256c:	b926      	cbnz	r6, 8012578 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 801256e:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 8012572:	f853 3c08 	ldr.w	r3, [r3, #-8]
 8012576:	600b      	str	r3, [r1, #0]
 8012578:	b924      	cbnz	r4, 8012584 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 801257a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 801257e:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8012582:	6013      	str	r3, [r2, #0]
 8012584:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012586:	3801      	subs	r0, #1
 8012588:	b91c      	cbnz	r4, 8012592 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 801258a:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 801258e:	6824      	ldr	r4, [r4, #0]
 8012590:	6014      	str	r4, [r2, #0]
 8012592:	2e00      	cmp	r6, #0
 8012594:	d1f6      	bne.n	8012584 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 8012596:	2401      	movs	r4, #1
 8012598:	e7cf      	b.n	801253a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 801259a:	b90e      	cbnz	r6, 80125a0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 801259c:	2300      	movs	r3, #0
 801259e:	600b      	str	r3, [r1, #0]
 80125a0:	2c00      	cmp	r4, #0
 80125a2:	d1ef      	bne.n	8012584 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 80125a4:	2300      	movs	r3, #0
 80125a6:	e7ec      	b.n	8012582 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

080125a8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 80125a8:	b538      	push	{r3, r4, r5, lr}
 80125aa:	4604      	mov	r4, r0
 80125ac:	ed2d 8b0a 	vpush	{d8-d12}
 80125b0:	460d      	mov	r5, r1
 80125b2:	eef0 ba40 	vmov.f32	s23, s0
 80125b6:	eeb0 ca60 	vmov.f32	s24, s1
 80125ba:	eef0 aa41 	vmov.f32	s21, s2
 80125be:	eeb0 ba61 	vmov.f32	s22, s3
 80125c2:	eeb0 9a42 	vmov.f32	s18, s4
 80125c6:	eef0 9a62 	vmov.f32	s19, s5
 80125ca:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 80125ce:	ee7b 8a29 	vadd.f32	s17, s22, s19
 80125d2:	ee3a 8a89 	vadd.f32	s16, s21, s18
 80125d6:	ee68 8a8a 	vmul.f32	s17, s17, s20
 80125da:	ee28 8a0a 	vmul.f32	s16, s16, s20
 80125de:	ee3c 0a68 	vsub.f32	s0, s24, s17
 80125e2:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 80125e6:	ee20 0a00 	vmul.f32	s0, s0, s0
 80125ea:	eea7 0aa7 	vfma.f32	s0, s15, s15
 80125ee:	f017 f8bb 	bl	8029768 <sqrtf>
 80125f2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 80125f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125fa:	d12e      	bne.n	801265a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 80125fc:	ee79 7a6a 	vsub.f32	s15, s18, s21
 8012600:	ee39 7acb 	vsub.f32	s14, s19, s22
 8012604:	eeb0 8a6a 	vmov.f32	s16, s21
 8012608:	eef0 8a4b 	vmov.f32	s17, s22
 801260c:	eea7 8a8a 	vfma.f32	s16, s15, s20
 8012610:	eee7 8a0a 	vfma.f32	s17, s14, s20
 8012614:	eea7 8a0a 	vfma.f32	s16, s14, s20
 8012618:	eee7 8aca 	vfms.f32	s17, s15, s20
 801261c:	2d02      	cmp	r5, #2
 801261e:	dc2f      	bgt.n	8012680 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 8012620:	3501      	adds	r5, #1
 8012622:	eef0 1a4b 	vmov.f32	s3, s22
 8012626:	eeb0 1a6a 	vmov.f32	s2, s21
 801262a:	4629      	mov	r1, r5
 801262c:	eef0 2a68 	vmov.f32	s5, s17
 8012630:	eeb0 2a48 	vmov.f32	s4, s16
 8012634:	eef0 0a4c 	vmov.f32	s1, s24
 8012638:	eeb0 0a6b 	vmov.f32	s0, s23
 801263c:	4620      	mov	r0, r4
 801263e:	f7ff ffb3 	bl	80125a8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 8012642:	eef0 0a68 	vmov.f32	s1, s17
 8012646:	eeb0 0a48 	vmov.f32	s0, s16
 801264a:	4620      	mov	r0, r4
 801264c:	f7ff ff55 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8012650:	eeb0 ba68 	vmov.f32	s22, s17
 8012654:	eef0 aa48 	vmov.f32	s21, s16
 8012658:	e7b9      	b.n	80125ce <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 801265a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 801265e:	ee38 8a6b 	vsub.f32	s16, s16, s23
 8012662:	ee78 8acc 	vsub.f32	s17, s17, s24
 8012666:	ee28 7a27 	vmul.f32	s14, s16, s15
 801266a:	ee68 7aa7 	vmul.f32	s15, s17, s15
 801266e:	ee87 8a00 	vdiv.f32	s16, s14, s0
 8012672:	eec7 8a80 	vdiv.f32	s17, s15, s0
 8012676:	ee3b 8a88 	vadd.f32	s16, s23, s16
 801267a:	ee7c 8a28 	vadd.f32	s17, s24, s17
 801267e:	e7cd      	b.n	801261c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 8012680:	eef0 0a68 	vmov.f32	s1, s17
 8012684:	eeb0 0a48 	vmov.f32	s0, s16
 8012688:	4620      	mov	r0, r4
 801268a:	f7ff ff36 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801268e:	ecbd 8b0a 	vpop	{d8-d12}
 8012692:	bd38      	pop	{r3, r4, r5, pc}

08012694 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 8012694:	b510      	push	{r4, lr}
 8012696:	ed2d 8b0a 	vpush	{d8-d12}
 801269a:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 801269e:	2b02      	cmp	r3, #2
 80126a0:	4604      	mov	r4, r0
 80126a2:	eeb0 ca40 	vmov.f32	s24, s0
 80126a6:	eeb0 9a60 	vmov.f32	s18, s1
 80126aa:	eef0 9a41 	vmov.f32	s19, s2
 80126ae:	eef0 8a61 	vmov.f32	s17, s3
 80126b2:	eeb0 ba42 	vmov.f32	s22, s4
 80126b6:	eef0 ba62 	vmov.f32	s23, s5
 80126ba:	eeb0 aa43 	vmov.f32	s20, s6
 80126be:	eef0 aa63 	vmov.f32	s21, s7
 80126c2:	eeb0 8a44 	vmov.f32	s16, s8
 80126c6:	eef0 ca64 	vmov.f32	s25, s9
 80126ca:	d12c      	bne.n	8012726 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 80126cc:	eef0 0a62 	vmov.f32	s1, s5
 80126d0:	eeb0 0a42 	vmov.f32	s0, s4
 80126d4:	f7ff ff11 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80126d8:	ee79 9acb 	vsub.f32	s19, s19, s22
 80126dc:	ee7a caec 	vsub.f32	s25, s21, s25
 80126e0:	ee78 8aeb 	vsub.f32	s17, s17, s23
 80126e4:	ee3a 8a48 	vsub.f32	s16, s20, s16
 80126e8:	ee69 9aac 	vmul.f32	s19, s19, s25
 80126ec:	ee28 8a88 	vmul.f32	s16, s17, s16
 80126f0:	eef4 9ac8 	vcmpe.f32	s19, s16
 80126f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80126f8:	db0f      	blt.n	801271a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 80126fa:	2101      	movs	r1, #1
 80126fc:	eef0 2a6a 	vmov.f32	s5, s21
 8012700:	eeb0 2a4a 	vmov.f32	s4, s20
 8012704:	eef0 1a6b 	vmov.f32	s3, s23
 8012708:	eeb0 1a4b 	vmov.f32	s2, s22
 801270c:	eef0 0a49 	vmov.f32	s1, s18
 8012710:	eeb0 0a4c 	vmov.f32	s0, s24
 8012714:	4620      	mov	r0, r4
 8012716:	f7ff ff47 	bl	80125a8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 801271a:	eef0 0a6a 	vmov.f32	s1, s21
 801271e:	eeb0 0a4a 	vmov.f32	s0, s20
 8012722:	4620      	mov	r0, r4
 8012724:	e035      	b.n	8012792 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 8012726:	2b01      	cmp	r3, #1
 8012728:	d138      	bne.n	801279c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 801272a:	ee31 4ae2 	vsub.f32	s8, s3, s5
 801272e:	ee33 6a48 	vsub.f32	s12, s6, s16
 8012732:	ee71 7a42 	vsub.f32	s15, s2, s4
 8012736:	ee73 6ae4 	vsub.f32	s13, s7, s9
 801273a:	ee26 7a44 	vnmul.f32	s14, s12, s8
 801273e:	eea7 7aa6 	vfma.f32	s14, s15, s13
 8012742:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8012746:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801274a:	d027      	beq.n	801279c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 801274c:	ee28 8a63 	vnmul.f32	s16, s16, s7
 8012750:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 8012754:	eea4 8a83 	vfma.f32	s16, s9, s6
 8012758:	eee1 8a22 	vfma.f32	s17, s2, s5
 801275c:	ee68 7a67 	vnmul.f32	s15, s16, s15
 8012760:	ee28 8a44 	vnmul.f32	s16, s16, s8
 8012764:	eee6 7a28 	vfma.f32	s15, s12, s17
 8012768:	eea6 8aa8 	vfma.f32	s16, s13, s17
 801276c:	ee87 0a87 	vdiv.f32	s0, s15, s14
 8012770:	eec8 0a07 	vdiv.f32	s1, s16, s14
 8012774:	ee3c ca40 	vsub.f32	s24, s24, s0
 8012778:	ee39 9a60 	vsub.f32	s18, s18, s1
 801277c:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 8012780:	ee29 9a09 	vmul.f32	s18, s18, s18
 8012784:	eeac 9a0c 	vfma.f32	s18, s24, s24
 8012788:	eef4 7ac9 	vcmpe.f32	s15, s18
 801278c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012790:	db04      	blt.n	801279c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 8012792:	f7ff feb2 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8012796:	ecbd 8b0a 	vpop	{d8-d12}
 801279a:	bd10      	pop	{r4, pc}
 801279c:	eef0 0a6b 	vmov.f32	s1, s23
 80127a0:	eeb0 0a4b 	vmov.f32	s0, s22
 80127a4:	4620      	mov	r0, r4
 80127a6:	f7ff fea8 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80127aa:	e7b6      	b.n	801271a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

080127ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 80127ac:	b510      	push	{r4, lr}
 80127ae:	ed2d 8b0c 	vpush	{d8-d13}
 80127b2:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 80127b6:	4604      	mov	r4, r0
 80127b8:	eeb0 9a40 	vmov.f32	s18, s0
 80127bc:	eef0 9a60 	vmov.f32	s19, s1
 80127c0:	eef0 aa41 	vmov.f32	s21, s2
 80127c4:	eeb0 ba61 	vmov.f32	s22, s3
 80127c8:	b933      	cbnz	r3, 80127d8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 80127ca:	f7ff fe96 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80127ce:	eef0 0a4b 	vmov.f32	s1, s22
 80127d2:	eeb0 0a6a 	vmov.f32	s0, s21
 80127d6:	e015      	b.n	8012804 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 80127d8:	ee71 8a40 	vsub.f32	s17, s2, s0
 80127dc:	ee31 8ae0 	vsub.f32	s16, s3, s1
 80127e0:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80127e4:	2b02      	cmp	r3, #2
 80127e6:	ee68 8aa7 	vmul.f32	s17, s17, s15
 80127ea:	ee28 8a27 	vmul.f32	s16, s16, s15
 80127ee:	d10f      	bne.n	8012810 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 80127f0:	ee70 0ae8 	vsub.f32	s1, s1, s17
 80127f4:	ee30 0a08 	vadd.f32	s0, s0, s16
 80127f8:	f7ff fe7f 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80127fc:	ee7b 0a68 	vsub.f32	s1, s22, s17
 8012800:	ee3a 0a88 	vadd.f32	s0, s21, s16
 8012804:	4620      	mov	r0, r4
 8012806:	f7ff fe78 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801280a:	ecbd 8b0c 	vpop	{d8-d13}
 801280e:	bd10      	pop	{r4, pc}
 8012810:	f7ff fe73 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 8012814:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 801294c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 8012818:	eddf ba4d 	vldr	s23, [pc, #308]	@ 8012950 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 801281c:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 8012954 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 8012820:	eddf ca4d 	vldr	s25, [pc, #308]	@ 8012958 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 8012824:	ed9f da4d 	vldr	s26, [pc, #308]	@ 801295c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 8012828:	eef0 0a69 	vmov.f32	s1, s19
 801282c:	eeb0 0a49 	vmov.f32	s0, s18
 8012830:	eee8 0a27 	vfma.f32	s1, s16, s15
 8012834:	4620      	mov	r0, r4
 8012836:	eea8 0aa7 	vfma.f32	s0, s17, s15
 801283a:	eeb1 aa68 	vneg.f32	s20, s17
 801283e:	eeea 0a2b 	vfma.f32	s1, s20, s23
 8012842:	eea8 0a2b 	vfma.f32	s0, s16, s23
 8012846:	f7ff fe58 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801284a:	eddf 7a45 	vldr	s15, [pc, #276]	@ 8012960 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 801284e:	eef0 0a69 	vmov.f32	s1, s19
 8012852:	eeb0 0a49 	vmov.f32	s0, s18
 8012856:	eee8 0a27 	vfma.f32	s1, s16, s15
 801285a:	4620      	mov	r0, r4
 801285c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8012860:	eeea 0a0c 	vfma.f32	s1, s20, s24
 8012864:	eea8 0a0c 	vfma.f32	s0, s16, s24
 8012868:	f7ff fe47 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801286c:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 8012964 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 8012870:	eef0 0a69 	vmov.f32	s1, s19
 8012874:	eeb0 0a49 	vmov.f32	s0, s18
 8012878:	eee8 0a27 	vfma.f32	s1, s16, s15
 801287c:	4620      	mov	r0, r4
 801287e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8012882:	eeea 0a2c 	vfma.f32	s1, s20, s25
 8012886:	eea8 0a2c 	vfma.f32	s0, s16, s25
 801288a:	f7ff fe36 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801288e:	eddf 7a36 	vldr	s15, [pc, #216]	@ 8012968 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 8012892:	eef0 0a69 	vmov.f32	s1, s19
 8012896:	eeb0 0a49 	vmov.f32	s0, s18
 801289a:	eee8 0a27 	vfma.f32	s1, s16, s15
 801289e:	4620      	mov	r0, r4
 80128a0:	eea8 0aa7 	vfma.f32	s0, s17, s15
 80128a4:	eeea 0a0d 	vfma.f32	s1, s20, s26
 80128a8:	eea8 0a0d 	vfma.f32	s0, s16, s26
 80128ac:	f7ff fe25 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80128b0:	ee79 0a88 	vadd.f32	s1, s19, s16
 80128b4:	ee39 0a28 	vadd.f32	s0, s18, s17
 80128b8:	ee70 0ae8 	vsub.f32	s1, s1, s17
 80128bc:	ee30 0a08 	vadd.f32	s0, s0, s16
 80128c0:	4620      	mov	r0, r4
 80128c2:	f7ff fe1a 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80128c6:	eddf 7a29 	vldr	s15, [pc, #164]	@ 801296c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 80128ca:	eef0 0a69 	vmov.f32	s1, s19
 80128ce:	eeb0 0a49 	vmov.f32	s0, s18
 80128d2:	eee8 0a27 	vfma.f32	s1, s16, s15
 80128d6:	4620      	mov	r0, r4
 80128d8:	eea8 0aa7 	vfma.f32	s0, s17, s15
 80128dc:	eeea 0a0d 	vfma.f32	s1, s20, s26
 80128e0:	eea8 0a0d 	vfma.f32	s0, s16, s26
 80128e4:	f7ff fe09 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 80128e8:	eddf 7a21 	vldr	s15, [pc, #132]	@ 8012970 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 80128ec:	eef0 0a69 	vmov.f32	s1, s19
 80128f0:	eeb0 0a49 	vmov.f32	s0, s18
 80128f4:	eee8 0a27 	vfma.f32	s1, s16, s15
 80128f8:	4620      	mov	r0, r4
 80128fa:	eea8 0aa7 	vfma.f32	s0, s17, s15
 80128fe:	eeea 0a2c 	vfma.f32	s1, s20, s25
 8012902:	eea8 0a2c 	vfma.f32	s0, s16, s25
 8012906:	f7ff fdf8 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801290a:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8012974 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 801290e:	eef0 0a69 	vmov.f32	s1, s19
 8012912:	eeb0 0a49 	vmov.f32	s0, s18
 8012916:	eee8 0a27 	vfma.f32	s1, s16, s15
 801291a:	4620      	mov	r0, r4
 801291c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8012920:	eeea 0a0c 	vfma.f32	s1, s20, s24
 8012924:	eea8 0a0c 	vfma.f32	s0, s16, s24
 8012928:	f7ff fde7 	bl	80124fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 801292c:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8012978 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 8012930:	eef0 0a69 	vmov.f32	s1, s19
 8012934:	eeb0 0a49 	vmov.f32	s0, s18
 8012938:	eee8 0a27 	vfma.f32	s1, s16, s15
 801293c:	4620      	mov	r0, r4
 801293e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 8012942:	eeea 0a2b 	vfma.f32	s1, s20, s23
 8012946:	eea8 0a2b 	vfma.f32	s0, s16, s23
 801294a:	e73e      	b.n	80127ca <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 801294c:	3d23d70a 	.word	0x3d23d70a
 8012950:	3e8f5c29 	.word	0x3e8f5c29
 8012954:	3f19999a 	.word	0x3f19999a
 8012958:	3f4ccccd 	.word	0x3f4ccccd
 801295c:	3f75c28f 	.word	0x3f75c28f
 8012960:	3e4ccccd 	.word	0x3e4ccccd
 8012964:	3ecccccd 	.word	0x3ecccccd
 8012968:	3f3851ec 	.word	0x3f3851ec
 801296c:	3fa3d70a 	.word	0x3fa3d70a
 8012970:	3fcccccd 	.word	0x3fcccccd
 8012974:	3fe66666 	.word	0x3fe66666
 8012978:	3ffae148 	.word	0x3ffae148

0801297c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 801297c:	b570      	push	{r4, r5, r6, lr}
 801297e:	ed2d 8b06 	vpush	{d8-d10}
 8012982:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 8012986:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 801298a:	ee30 8ac8 	vsub.f32	s16, s1, s16
 801298e:	ee30 9a49 	vsub.f32	s18, s0, s18
 8012992:	eef0 aa40 	vmov.f32	s21, s0
 8012996:	ee28 0a08 	vmul.f32	s0, s16, s16
 801299a:	4604      	mov	r4, r0
 801299c:	eea9 0a09 	vfma.f32	s0, s18, s18
 80129a0:	eeb0 aa60 	vmov.f32	s20, s1
 80129a4:	f016 fee0 	bl	8029768 <sqrtf>
 80129a8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80129ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80129b0:	dd36      	ble.n	8012a20 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 80129b2:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 80129b6:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 80129ba:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 80129be:	eec0 6a27 	vdiv.f32	s13, s0, s15
 80129c2:	2600      	movs	r6, #0
 80129c4:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 80129c8:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 80129cc:	eec8 8a26 	vdiv.f32	s17, s16, s13
 80129d0:	ee89 8a26 	vdiv.f32	s16, s18, s13
 80129d4:	ee70 9a28 	vadd.f32	s19, s0, s17
 80129d8:	ee30 9ac8 	vsub.f32	s18, s1, s16
 80129dc:	ee78 8aaa 	vadd.f32	s17, s17, s21
 80129e0:	ee3a 8a48 	vsub.f32	s16, s20, s16
 80129e4:	b1fd      	cbz	r5, 8012a26 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 80129e6:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 80129ea:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 80129ee:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 80129f2:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 80129f6:	eef0 0a49 	vmov.f32	s1, s18
 80129fa:	eeb0 0a69 	vmov.f32	s0, s19
 80129fe:	4620      	mov	r0, r4
 8012a00:	f7ff fd64 	bl	80124cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 8012a04:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 8012a08:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 8012a0c:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 8012a10:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 8012a14:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 8012a18:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 8012a1c:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 8012a20:	ecbd 8b06 	vpop	{d8-d10}
 8012a24:	bd70      	pop	{r4, r5, r6, pc}
 8012a26:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 8012a2a:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 8012a2e:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 8012a32:	b16b      	cbz	r3, 8012a50 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 8012a34:	eef0 1a49 	vmov.f32	s3, s18
 8012a38:	eeb0 1a69 	vmov.f32	s2, s19
 8012a3c:	eef0 0a62 	vmov.f32	s1, s5
 8012a40:	eeb0 0a42 	vmov.f32	s0, s4
 8012a44:	4620      	mov	r0, r4
 8012a46:	f7ff feb1 	bl	80127ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 8012a4a:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 8012a4e:	e7db      	b.n	8012a08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 8012a50:	eef0 4a48 	vmov.f32	s9, s16
 8012a54:	eeb0 4a68 	vmov.f32	s8, s17
 8012a58:	eef0 3a49 	vmov.f32	s7, s18
 8012a5c:	eeb0 3a69 	vmov.f32	s6, s19
 8012a60:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 8012a64:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 8012a68:	4620      	mov	r0, r4
 8012a6a:	f7ff fe13 	bl	8012694 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 8012a6e:	e7cb      	b.n	8012a08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

08012a70 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 8012a70:	ee07 2a90 	vmov	s15, r2
 8012a74:	ee07 1a10 	vmov	s14, r1
 8012a78:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8012a7c:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 8012a80:	eddf 7a03 	vldr	s15, [pc, #12]	@ 8012a90 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 8012a84:	ee60 0aa7 	vmul.f32	s1, s1, s15
 8012a88:	ee20 0a27 	vmul.f32	s0, s0, s15
 8012a8c:	f7ff bf76 	b.w	801297c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8012a90:	3d000000 	.word	0x3d000000

08012a94 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 8012a94:	b538      	push	{r3, r4, r5, lr}
 8012a96:	ed2d 8b02 	vpush	{d8}
 8012a9a:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 8012a9e:	4604      	mov	r4, r0
 8012aa0:	b31d      	cbz	r5, 8012aea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 8012aa2:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 8012aa6:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 8012aaa:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 8012aae:	ee78 8a67 	vsub.f32	s17, s16, s15
 8012ab2:	ee38 8a27 	vadd.f32	s16, s16, s15
 8012ab6:	eef0 0a68 	vmov.f32	s1, s17
 8012aba:	f7ff fd07 	bl	80124cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 8012abe:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 8012ac2:	eef0 1a48 	vmov.f32	s3, s16
 8012ac6:	eeb0 0a41 	vmov.f32	s0, s2
 8012aca:	eef0 0a68 	vmov.f32	s1, s17
 8012ace:	4620      	mov	r0, r4
 8012ad0:	f7ff fe6c 	bl	80127ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 8012ad4:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 8012ad8:	eef0 1a68 	vmov.f32	s3, s17
 8012adc:	eef0 0a48 	vmov.f32	s1, s16
 8012ae0:	eeb0 0a41 	vmov.f32	s0, s2
 8012ae4:	4620      	mov	r0, r4
 8012ae6:	f7ff fe61 	bl	80127ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 8012aea:	ecbd 8b02 	vpop	{d8}
 8012aee:	4628      	mov	r0, r5
 8012af0:	bd38      	pop	{r3, r4, r5, pc}

08012af2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 8012af2:	b510      	push	{r4, lr}
 8012af4:	ed2d 8b02 	vpush	{d8}
 8012af8:	4604      	mov	r4, r0
 8012afa:	eeb0 8a40 	vmov.f32	s16, s0
 8012afe:	eef0 8a60 	vmov.f32	s17, s1
 8012b02:	f7ff ffc7 	bl	8012a94 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 8012b06:	b9d0      	cbnz	r0, 8012b3e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 8012b08:	4620      	mov	r0, r4
 8012b0a:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 8012b0e:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 8012b12:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 8012b16:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 8012b1a:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 8012b1e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 8012b22:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 8012b26:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 8012b2a:	eef0 0a68 	vmov.f32	s1, s17
 8012b2e:	eeb0 0a48 	vmov.f32	s0, s16
 8012b32:	f7ff fdaf 	bl	8012694 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 8012b36:	2001      	movs	r0, #1
 8012b38:	ecbd 8b02 	vpop	{d8}
 8012b3c:	bd10      	pop	{r4, pc}
 8012b3e:	2000      	movs	r0, #0
 8012b40:	e7fa      	b.n	8012b38 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

08012b42 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 8012b42:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 8012b46:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 8012b4a:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 8012b4e:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 8012b52:	f7ff be2b 	b.w	80127ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

08012b58 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 8012b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b5c:	b089      	sub	sp, #36	@ 0x24
 8012b5e:	461c      	mov	r4, r3
 8012b60:	f10d 0820 	add.w	r8, sp, #32
 8012b64:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8012b68:	9304      	str	r3, [sp, #16]
 8012b6a:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8012b6c:	9105      	str	r1, [sp, #20]
 8012b6e:	2300      	movs	r3, #0
 8012b70:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 8012b74:	9306      	str	r3, [sp, #24]
 8012b76:	f848 3d04 	str.w	r3, [r8, #-4]!
 8012b7a:	9b04      	ldr	r3, [sp, #16]
 8012b7c:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 8012b80:	4682      	mov	sl, r0
 8012b82:	4615      	mov	r5, r2
 8012b84:	9b05      	ldr	r3, [sp, #20]
 8012b86:	429d      	cmp	r5, r3
 8012b88:	d96d      	bls.n	8012c66 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 8012b8a:	3d01      	subs	r5, #1
 8012b8c:	f819 3005 	ldrb.w	r3, [r9, r5]
 8012b90:	2b06      	cmp	r3, #6
 8012b92:	d8f7      	bhi.n	8012b84 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8012b94:	a201      	add	r2, pc, #4	@ (adr r2, 8012b9c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 8012b96:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8012b9a:	bf00      	nop
 8012b9c:	08012bbb 	.word	0x08012bbb
 8012ba0:	08012b85 	.word	0x08012b85
 8012ba4:	08012bb9 	.word	0x08012bb9
 8012ba8:	08012bdd 	.word	0x08012bdd
 8012bac:	08012bdd 	.word	0x08012bdd
 8012bb0:	08012be1 	.word	0x08012be1
 8012bb4:	08012c21 	.word	0x08012c21
 8012bb8:	3c02      	subs	r4, #2
 8012bba:	4650      	mov	r0, sl
 8012bbc:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8012bc0:	9400      	str	r4, [sp, #0]
 8012bc2:	462b      	mov	r3, r5
 8012bc4:	4642      	mov	r2, r8
 8012bc6:	a906      	add	r1, sp, #24
 8012bc8:	f7ff fcae 	bl	8012528 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 8012bcc:	eddd 0a07 	vldr	s1, [sp, #28]
 8012bd0:	ed9d 0a06 	vldr	s0, [sp, #24]
 8012bd4:	4630      	mov	r0, r6
 8012bd6:	f7ff fed1 	bl	801297c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8012bda:	e7d3      	b.n	8012b84 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8012bdc:	3c01      	subs	r4, #1
 8012bde:	e7ec      	b.n	8012bba <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 8012be0:	f1a4 0b04 	sub.w	fp, r4, #4
 8012be4:	3c02      	subs	r4, #2
 8012be6:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 8012bea:	4650      	mov	r0, sl
 8012bec:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8012bf0:	f8cd b000 	str.w	fp, [sp]
 8012bf4:	462b      	mov	r3, r5
 8012bf6:	4642      	mov	r2, r8
 8012bf8:	a906      	add	r1, sp, #24
 8012bfa:	f7ff fc95 	bl	8012528 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 8012bfe:	eddd 2a07 	vldr	s5, [sp, #28]
 8012c02:	ed9d 2a06 	vldr	s4, [sp, #24]
 8012c06:	ed54 1a01 	vldr	s3, [r4, #-4]
 8012c0a:	ed14 1a02 	vldr	s2, [r4, #-8]
 8012c0e:	edd4 0a01 	vldr	s1, [r4, #4]
 8012c12:	ed94 0a00 	vldr	s0, [r4]
 8012c16:	4630      	mov	r0, r6
 8012c18:	f7ff fc1a 	bl	8012450 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8012c1c:	465c      	mov	r4, fp
 8012c1e:	e7b1      	b.n	8012b84 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 8012c20:	f1a4 0b06 	sub.w	fp, r4, #6
 8012c24:	3c02      	subs	r4, #2
 8012c26:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 8012c2a:	4650      	mov	r0, sl
 8012c2c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 8012c30:	f8cd b000 	str.w	fp, [sp]
 8012c34:	462b      	mov	r3, r5
 8012c36:	4642      	mov	r2, r8
 8012c38:	a906      	add	r1, sp, #24
 8012c3a:	f7ff fc75 	bl	8012528 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 8012c3e:	eddd 3a07 	vldr	s7, [sp, #28]
 8012c42:	ed9d 3a06 	vldr	s6, [sp, #24]
 8012c46:	ed54 2a03 	vldr	s5, [r4, #-12]
 8012c4a:	ed14 2a04 	vldr	s4, [r4, #-16]
 8012c4e:	ed54 1a01 	vldr	s3, [r4, #-4]
 8012c52:	ed14 1a02 	vldr	s2, [r4, #-8]
 8012c56:	edd4 0a01 	vldr	s1, [r4, #4]
 8012c5a:	ed94 0a00 	vldr	s0, [r4]
 8012c5e:	4630      	mov	r0, r6
 8012c60:	f7ff fc15 	bl	801248e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8012c64:	e7da      	b.n	8012c1c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 8012c66:	9b04      	ldr	r3, [sp, #16]
 8012c68:	b113      	cbz	r3, 8012c70 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 8012c6a:	4630      	mov	r0, r6
 8012c6c:	f7ff ff69 	bl	8012b42 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 8012c70:	b009      	add	sp, #36	@ 0x24
 8012c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c76:	bf00      	nop

08012c78 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 8012c78:	eef0 7a60 	vmov.f32	s15, s1
 8012c7c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8012c80:	6803      	ldr	r3, [r0, #0]
 8012c82:	ee17 2a90 	vmov	r2, s15
 8012c86:	eef0 7a40 	vmov.f32	s15, s0
 8012c8a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 8012c8e:	689b      	ldr	r3, [r3, #8]
 8012c90:	ee17 1a90 	vmov	r1, s15
 8012c94:	4718      	bx	r3
	...

08012c98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 8012c98:	b510      	push	{r4, lr}
 8012c9a:	4b04      	ldr	r3, [pc, #16]	@ (8012cac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 8012c9c:	4604      	mov	r4, r0
 8012c9e:	f840 3b14 	str.w	r3, [r0], #20
 8012ca2:	f001 fafd 	bl	80142a0 <_ZN8touchgfx7OutlineD1Ev>
 8012ca6:	4620      	mov	r0, r4
 8012ca8:	bd10      	pop	{r4, pc}
 8012caa:	bf00      	nop
 8012cac:	0802ea44 	.word	0x0802ea44

08012cb0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 8012cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012cb4:	ed2d 8b04 	vpush	{d8-d9}
 8012cb8:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 8012cbc:	b0b5      	sub	sp, #212	@ 0xd4
 8012cbe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012cc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012cc6:	4605      	mov	r5, r0
 8012cc8:	468b      	mov	fp, r1
 8012cca:	9206      	str	r2, [sp, #24]
 8012ccc:	461e      	mov	r6, r3
 8012cce:	f04f 0400 	mov.w	r4, #0
 8012cd2:	f240 814e 	bls.w	8012f72 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 8012cd6:	23ff      	movs	r3, #255	@ 0xff
 8012cd8:	9300      	str	r3, [sp, #0]
 8012cda:	1d02      	adds	r2, r0, #4
 8012cdc:	6981      	ldr	r1, [r0, #24]
 8012cde:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 8012ce0:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 8012f78 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 8012ce4:	a808      	add	r0, sp, #32
 8012ce6:	f016 f893 	bl	8028e10 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 8012cea:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 8012cee:	4ba3      	ldr	r3, [pc, #652]	@ (8012f7c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 8012cf0:	edd5 6a08 	vldr	s13, [r5, #32]
 8012cf4:	9308      	str	r3, [sp, #32]
 8012cf6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012cfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012cfe:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8012d02:	bf48      	it	mi
 8012d04:	eef1 7a67 	vnegmi.f32	s15, s15
 8012d08:	ee67 7a87 	vmul.f32	s15, s15, s14
 8012d0c:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 8012d10:	2201      	movs	r2, #1
 8012d12:	9325      	str	r3, [sp, #148]	@ 0x94
 8012d14:	2300      	movs	r3, #0
 8012d16:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8012d1a:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 8012d1e:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 8012d22:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 8012d26:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 8012d2a:	7f6a      	ldrb	r2, [r5, #29]
 8012d2c:	7fab      	ldrb	r3, [r5, #30]
 8012d2e:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 8012d32:	435a      	muls	r2, r3
 8012d34:	ee27 7a26 	vmul.f32	s14, s14, s13
 8012d38:	1c53      	adds	r3, r2, #1
 8012d3a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8012d3e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8012d42:	f04f 0800 	mov.w	r8, #0
 8012d46:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 8012d4a:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 8012d4e:	942a      	str	r4, [sp, #168]	@ 0xa8
 8012d50:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8012d54:	942b      	str	r4, [sp, #172]	@ 0xac
 8012d56:	942c      	str	r4, [sp, #176]	@ 0xb0
 8012d58:	942d      	str	r4, [sp, #180]	@ 0xb4
 8012d5a:	942e      	str	r4, [sp, #184]	@ 0xb8
 8012d5c:	942f      	str	r4, [sp, #188]	@ 0xbc
 8012d5e:	9430      	str	r4, [sp, #192]	@ 0xc0
 8012d60:	9431      	str	r4, [sp, #196]	@ 0xc4
 8012d62:	9432      	str	r4, [sp, #200]	@ 0xc8
 8012d64:	9433      	str	r4, [sp, #204]	@ 0xcc
 8012d66:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 8012d6a:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 8012d6e:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 8012d72:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 8012d76:	eef0 9a49 	vmov.f32	s19, s18
 8012d7a:	eeb0 8a49 	vmov.f32	s16, s18
 8012d7e:	eef0 8a49 	vmov.f32	s17, s18
 8012d82:	4644      	mov	r4, r8
 8012d84:	46c1      	mov	r9, r8
 8012d86:	af08      	add	r7, sp, #32
 8012d88:	f04f 0a01 	mov.w	sl, #1
 8012d8c:	9b06      	ldr	r3, [sp, #24]
 8012d8e:	454b      	cmp	r3, r9
 8012d90:	f000 80cc 	beq.w	8012f2c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 8012d94:	f109 0301 	add.w	r3, r9, #1
 8012d98:	9305      	str	r3, [sp, #20]
 8012d9a:	f81b 3009 	ldrb.w	r3, [fp, r9]
 8012d9e:	2b06      	cmp	r3, #6
 8012da0:	d839      	bhi.n	8012e16 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8012da2:	e8df f003 	tbb	[pc, r3]
 8012da6:	3b04      	.short	0x3b04
 8012da8:	817c6f60 	.word	0x817c6f60
 8012dac:	a0          	.byte	0xa0
 8012dad:	00          	.byte	0x00
 8012dae:	45c1      	cmp	r9, r8
 8012db0:	d92b      	bls.n	8012e0a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 8012db2:	eef0 0a49 	vmov.f32	s1, s18
 8012db6:	eeb0 0a69 	vmov.f32	s0, s19
 8012dba:	4638      	mov	r0, r7
 8012dbc:	f7ff fdde 	bl	801297c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8012dc0:	4638      	mov	r0, r7
 8012dc2:	f7ff fe67 	bl	8012a94 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 8012dc6:	4681      	mov	r9, r0
 8012dc8:	b9f8      	cbnz	r0, 8012e0a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 8012dca:	eef0 0a49 	vmov.f32	s1, s18
 8012dce:	eeb0 0a69 	vmov.f32	s0, s19
 8012dd2:	4638      	mov	r0, r7
 8012dd4:	f7ff fe8d 	bl	8012af2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 8012dd8:	4628      	mov	r0, r5
 8012dda:	e9cd 9702 	strd	r9, r7, [sp, #8]
 8012dde:	e9cd b600 	strd	fp, r6, [sp]
 8012de2:	4623      	mov	r3, r4
 8012de4:	9a05      	ldr	r2, [sp, #20]
 8012de6:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 8012dea:	4641      	mov	r1, r8
 8012dec:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 8012df0:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 8012df4:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 8012df8:	f7ff feae 	bl	8012b58 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 8012dfc:	eef0 0a49 	vmov.f32	s1, s18
 8012e00:	eeb0 0a69 	vmov.f32	s0, s19
 8012e04:	4638      	mov	r0, r7
 8012e06:	f7ff fe74 	bl	8012af2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 8012e0a:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8012e0e:	eeb0 8a49 	vmov.f32	s16, s18
 8012e12:	eef0 8a69 	vmov.f32	s17, s19
 8012e16:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8012e1a:	e7b7      	b.n	8012d8c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 8012e1c:	45c1      	cmp	r9, r8
 8012e1e:	d90d      	bls.n	8012e3c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 8012e20:	4638      	mov	r0, r7
 8012e22:	f7ff fe37 	bl	8012a94 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 8012e26:	b948      	cbnz	r0, 8012e3c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 8012e28:	e9cd a702 	strd	sl, r7, [sp, #8]
 8012e2c:	e9cd b600 	strd	fp, r6, [sp]
 8012e30:	4623      	mov	r3, r4
 8012e32:	464a      	mov	r2, r9
 8012e34:	4641      	mov	r1, r8
 8012e36:	4628      	mov	r0, r5
 8012e38:	f7ff fe8e 	bl	8012b58 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 8012e3c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8012e40:	edd3 8a00 	vldr	s17, [r3]
 8012e44:	ed93 8a01 	vldr	s16, [r3, #4]
 8012e48:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 8012e4c:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 8012e50:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 8012e54:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 8012e58:	3402      	adds	r4, #2
 8012e5a:	46c8      	mov	r8, r9
 8012e5c:	eeb0 9a48 	vmov.f32	s18, s16
 8012e60:	eef0 9a68 	vmov.f32	s19, s17
 8012e64:	e7d7      	b.n	8012e16 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8012e66:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8012e6a:	edd3 8a00 	vldr	s17, [r3]
 8012e6e:	ed93 8a01 	vldr	s16, [r3, #4]
 8012e72:	eeb0 0a68 	vmov.f32	s0, s17
 8012e76:	eef0 0a48 	vmov.f32	s1, s16
 8012e7a:	4638      	mov	r0, r7
 8012e7c:	f7ff fd7e 	bl	801297c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8012e80:	3402      	adds	r4, #2
 8012e82:	e7c8      	b.n	8012e16 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8012e84:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8012e88:	edd3 8a00 	vldr	s17, [r3]
 8012e8c:	eef0 0a48 	vmov.f32	s1, s16
 8012e90:	eeb0 0a68 	vmov.f32	s0, s17
 8012e94:	4638      	mov	r0, r7
 8012e96:	f7ff fd71 	bl	801297c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 8012e9a:	3401      	adds	r4, #1
 8012e9c:	e7bb      	b.n	8012e16 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8012e9e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8012ea2:	ed93 8a00 	vldr	s16, [r3]
 8012ea6:	e7f1      	b.n	8012e8c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 8012ea8:	00a3      	lsls	r3, r4, #2
 8012eaa:	f103 0208 	add.w	r2, r3, #8
 8012eae:	f103 090c 	add.w	r9, r3, #12
 8012eb2:	4432      	add	r2, r6
 8012eb4:	4433      	add	r3, r6
 8012eb6:	44b1      	add	r9, r6
 8012eb8:	ed92 2a00 	vldr	s4, [r2]
 8012ebc:	edd9 2a00 	vldr	s5, [r9]
 8012ec0:	edd3 1a01 	vldr	s3, [r3, #4]
 8012ec4:	ed93 1a00 	vldr	s2, [r3]
 8012ec8:	9207      	str	r2, [sp, #28]
 8012eca:	eef0 0a48 	vmov.f32	s1, s16
 8012ece:	eeb0 0a68 	vmov.f32	s0, s17
 8012ed2:	4638      	mov	r0, r7
 8012ed4:	f7ff fabc 	bl	8012450 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8012ed8:	9a07      	ldr	r2, [sp, #28]
 8012eda:	ed99 8a00 	vldr	s16, [r9]
 8012ede:	edd2 8a00 	vldr	s17, [r2]
 8012ee2:	3404      	adds	r4, #4
 8012ee4:	e797      	b.n	8012e16 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8012ee6:	00a3      	lsls	r3, r4, #2
 8012ee8:	f103 0210 	add.w	r2, r3, #16
 8012eec:	f103 0914 	add.w	r9, r3, #20
 8012ef0:	4432      	add	r2, r6
 8012ef2:	4433      	add	r3, r6
 8012ef4:	44b1      	add	r9, r6
 8012ef6:	ed92 3a00 	vldr	s6, [r2]
 8012efa:	edd9 3a00 	vldr	s7, [r9]
 8012efe:	edd3 2a03 	vldr	s5, [r3, #12]
 8012f02:	ed93 2a02 	vldr	s4, [r3, #8]
 8012f06:	edd3 1a01 	vldr	s3, [r3, #4]
 8012f0a:	ed93 1a00 	vldr	s2, [r3]
 8012f0e:	9207      	str	r2, [sp, #28]
 8012f10:	eef0 0a48 	vmov.f32	s1, s16
 8012f14:	eeb0 0a68 	vmov.f32	s0, s17
 8012f18:	4638      	mov	r0, r7
 8012f1a:	f7ff fab8 	bl	801248e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8012f1e:	9a07      	ldr	r2, [sp, #28]
 8012f20:	ed99 8a00 	vldr	s16, [r9]
 8012f24:	edd2 8a00 	vldr	s17, [r2]
 8012f28:	3406      	adds	r4, #6
 8012f2a:	e774      	b.n	8012e16 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 8012f2c:	9b06      	ldr	r3, [sp, #24]
 8012f2e:	4543      	cmp	r3, r8
 8012f30:	af08      	add	r7, sp, #32
 8012f32:	d90f      	bls.n	8012f54 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 8012f34:	4638      	mov	r0, r7
 8012f36:	f7ff fdad 	bl	8012a94 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 8012f3a:	b958      	cbnz	r0, 8012f54 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 8012f3c:	2301      	movs	r3, #1
 8012f3e:	e9cd 6301 	strd	r6, r3, [sp, #4]
 8012f42:	9703      	str	r7, [sp, #12]
 8012f44:	f8cd b000 	str.w	fp, [sp]
 8012f48:	4623      	mov	r3, r4
 8012f4a:	9a06      	ldr	r2, [sp, #24]
 8012f4c:	4641      	mov	r1, r8
 8012f4e:	4628      	mov	r0, r5
 8012f50:	f7ff fe02 	bl	8012b58 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 8012f54:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 8012f58:	4638      	mov	r0, r7
 8012f5a:	f015 ffed 	bl	8028f38 <_ZN8touchgfx6Canvas6renderEh>
 8012f5e:	4604      	mov	r4, r0
 8012f60:	4638      	mov	r0, r7
 8012f62:	f7ff fe99 	bl	8012c98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 8012f66:	4620      	mov	r0, r4
 8012f68:	b035      	add	sp, #212	@ 0xd4
 8012f6a:	ecbd 8b04 	vpop	{d8-d9}
 8012f6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012f72:	2401      	movs	r4, #1
 8012f74:	e7f7      	b.n	8012f66 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 8012f76:	bf00      	nop
 8012f78:	00000000 	.word	0x00000000
 8012f7c:	0802e27c 	.word	0x0802e27c

08012f80 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 8012f80:	b510      	push	{r4, lr}
 8012f82:	4604      	mov	r4, r0
 8012f84:	f7ff fe88 	bl	8012c98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 8012f88:	4620      	mov	r0, r4
 8012f8a:	21b0      	movs	r1, #176	@ 0xb0
 8012f8c:	f016 fbc2 	bl	8029714 <_ZdlPvj>
 8012f90:	4620      	mov	r0, r4
 8012f92:	bd10      	pop	{r4, pc}

08012f94 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 8012f94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012f98:	ed2d 8b06 	vpush	{d8-d10}
 8012f9c:	b0aa      	sub	sp, #168	@ 0xa8
 8012f9e:	4698      	mov	r8, r3
 8012fa0:	23ff      	movs	r3, #255	@ 0xff
 8012fa2:	4607      	mov	r7, r0
 8012fa4:	9300      	str	r3, [sp, #0]
 8012fa6:	4689      	mov	r9, r1
 8012fa8:	4692      	mov	sl, r2
 8012faa:	6981      	ldr	r1, [r0, #24]
 8012fac:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 8012fae:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 80131b8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 8012fb2:	1d02      	adds	r2, r0, #4
 8012fb4:	a80d      	add	r0, sp, #52	@ 0x34
 8012fb6:	f015 ff2b 	bl	8028e10 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 8012fba:	7f3b      	ldrb	r3, [r7, #28]
 8012fbc:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 80131b8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 8012fc0:	1e5a      	subs	r2, r3, #1
 8012fc2:	4253      	negs	r3, r2
 8012fc4:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 8012fc8:	4153      	adcs	r3, r2
 8012fca:	eeb0 0a60 	vmov.f32	s0, s1
 8012fce:	4628      	mov	r0, r5
 8012fd0:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 8012fd4:	f005 fb43 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8012fd8:	44ca      	add	sl, r9
 8012fda:	eeb0 9a40 	vmov.f32	s18, s0
 8012fde:	eef0 9a60 	vmov.f32	s19, s1
 8012fe2:	eef0 8a48 	vmov.f32	s17, s16
 8012fe6:	2400      	movs	r4, #0
 8012fe8:	45ca      	cmp	sl, r9
 8012fea:	f000 80cd 	beq.w	8013188 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 8012fee:	f819 3b01 	ldrb.w	r3, [r9], #1
 8012ff2:	2b06      	cmp	r3, #6
 8012ff4:	d8f8      	bhi.n	8012fe8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 8012ff6:	e8df f003 	tbb	[pc, r3]
 8012ffa:	0804      	.short	0x0804
 8012ffc:	58533f2a 	.word	0x58533f2a
 8013000:	8a          	.byte	0x8a
 8013001:	00          	.byte	0x00
 8013002:	a80d      	add	r0, sp, #52	@ 0x34
 8013004:	f015 ff76 	bl	8028ef4 <_ZN8touchgfx6Canvas5closeEv>
 8013008:	e7ee      	b.n	8012fe8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 801300a:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 801300e:	edd3 8a00 	vldr	s17, [r3]
 8013012:	ed93 8a01 	vldr	s16, [r3, #4]
 8013016:	eeb0 0a68 	vmov.f32	s0, s17
 801301a:	eef0 0a48 	vmov.f32	s1, s16
 801301e:	4628      	mov	r0, r5
 8013020:	f005 fb1d 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8013024:	eef0 7a60 	vmov.f32	s15, s1
 8013028:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801302c:	a80d      	add	r0, sp, #52	@ 0x34
 801302e:	ee17 2a90 	vmov	r2, s15
 8013032:	eef0 7a40 	vmov.f32	s15, s0
 8013036:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 801303a:	eeb0 9a40 	vmov.f32	s18, s0
 801303e:	ee17 1a90 	vmov	r1, s15
 8013042:	eef0 9a60 	vmov.f32	s19, s1
 8013046:	f016 f82f 	bl	80290a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801304a:	3402      	adds	r4, #2
 801304c:	e7cc      	b.n	8012fe8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 801304e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8013052:	edd3 8a00 	vldr	s17, [r3]
 8013056:	ed93 8a01 	vldr	s16, [r3, #4]
 801305a:	eeb0 0a68 	vmov.f32	s0, s17
 801305e:	eef0 0a48 	vmov.f32	s1, s16
 8013062:	4628      	mov	r0, r5
 8013064:	f005 fafb 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8013068:	a80d      	add	r0, sp, #52	@ 0x34
 801306a:	eeb0 9a40 	vmov.f32	s18, s0
 801306e:	eef0 9a60 	vmov.f32	s19, s1
 8013072:	f7ff fe01 	bl	8012c78 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8013076:	e7e8      	b.n	801304a <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 8013078:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 801307c:	edd3 8a00 	vldr	s17, [r3]
 8013080:	eef0 0a48 	vmov.f32	s1, s16
 8013084:	eeb0 0a68 	vmov.f32	s0, s17
 8013088:	4628      	mov	r0, r5
 801308a:	f005 fae8 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801308e:	a80d      	add	r0, sp, #52	@ 0x34
 8013090:	eeb0 9a40 	vmov.f32	s18, s0
 8013094:	eef0 9a60 	vmov.f32	s19, s1
 8013098:	3401      	adds	r4, #1
 801309a:	f7ff fded 	bl	8012c78 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 801309e:	e7a3      	b.n	8012fe8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 80130a0:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 80130a4:	ed93 8a00 	vldr	s16, [r3]
 80130a8:	e7ea      	b.n	8013080 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 80130aa:	1ca3      	adds	r3, r4, #2
 80130ac:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 80130b0:	ed53 0a01 	vldr	s1, [r3, #-4]
 80130b4:	ed13 0a02 	vldr	s0, [r3, #-8]
 80130b8:	edd3 8a00 	vldr	s17, [r3]
 80130bc:	ed93 8a01 	vldr	s16, [r3, #4]
 80130c0:	4628      	mov	r0, r5
 80130c2:	f005 facc 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80130c6:	4628      	mov	r0, r5
 80130c8:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 80130cc:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 80130d0:	eeb0 0a68 	vmov.f32	s0, s17
 80130d4:	eef0 0a48 	vmov.f32	s1, s16
 80130d8:	f005 fac1 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 80130dc:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 80130e0:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 80130e4:	eef0 2a60 	vmov.f32	s5, s1
 80130e8:	eeb0 2a40 	vmov.f32	s4, s0
 80130ec:	eeb0 aa40 	vmov.f32	s20, s0
 80130f0:	eef0 aa60 	vmov.f32	s21, s1
 80130f4:	eeb0 0a49 	vmov.f32	s0, s18
 80130f8:	eef0 0a69 	vmov.f32	s1, s19
 80130fc:	a80d      	add	r0, sp, #52	@ 0x34
 80130fe:	f7ff f9a7 	bl	8012450 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 8013102:	3404      	adds	r4, #4
 8013104:	eef0 9a6a 	vmov.f32	s19, s21
 8013108:	eeb0 9a4a 	vmov.f32	s18, s20
 801310c:	e76c      	b.n	8012fe8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 801310e:	1d26      	adds	r6, r4, #4
 8013110:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8013114:	ed56 0a03 	vldr	s1, [r6, #-12]
 8013118:	ed16 0a04 	vldr	s0, [r6, #-16]
 801311c:	edd6 8a00 	vldr	s17, [r6]
 8013120:	ed96 8a01 	vldr	s16, [r6, #4]
 8013124:	4628      	mov	r0, r5
 8013126:	f005 fa9a 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 801312a:	4628      	mov	r0, r5
 801312c:	ed8d 0a07 	vstr	s0, [sp, #28]
 8013130:	edcd 0a08 	vstr	s1, [sp, #32]
 8013134:	ed16 0a02 	vldr	s0, [r6, #-8]
 8013138:	ed56 0a01 	vldr	s1, [r6, #-4]
 801313c:	f005 fa8f 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8013140:	4628      	mov	r0, r5
 8013142:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 8013146:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 801314a:	eeb0 0a68 	vmov.f32	s0, s17
 801314e:	eef0 0a48 	vmov.f32	s1, s16
 8013152:	f005 fa84 	bl	801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 8013156:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 801315a:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 801315e:	eddd 1a08 	vldr	s3, [sp, #32]
 8013162:	ed9d 1a07 	vldr	s2, [sp, #28]
 8013166:	eef0 3a60 	vmov.f32	s7, s1
 801316a:	eeb0 3a40 	vmov.f32	s6, s0
 801316e:	eeb0 aa40 	vmov.f32	s20, s0
 8013172:	eef0 aa60 	vmov.f32	s21, s1
 8013176:	eeb0 0a49 	vmov.f32	s0, s18
 801317a:	eef0 0a69 	vmov.f32	s1, s19
 801317e:	a80d      	add	r0, sp, #52	@ 0x34
 8013180:	f7ff f985 	bl	801248e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 8013184:	3406      	adds	r4, #6
 8013186:	e7bd      	b.n	8013104 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 8013188:	7f7b      	ldrb	r3, [r7, #29]
 801318a:	7fb9      	ldrb	r1, [r7, #30]
 801318c:	4359      	muls	r1, r3
 801318e:	1c4b      	adds	r3, r1, #1
 8013190:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8013194:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8013198:	a80d      	add	r0, sp, #52	@ 0x34
 801319a:	f015 fecd 	bl	8028f38 <_ZN8touchgfx6Canvas6renderEh>
 801319e:	4b07      	ldr	r3, [pc, #28]	@ (80131bc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 80131a0:	930d      	str	r3, [sp, #52]	@ 0x34
 80131a2:	4604      	mov	r4, r0
 80131a4:	a812      	add	r0, sp, #72	@ 0x48
 80131a6:	f001 f87b 	bl	80142a0 <_ZN8touchgfx7OutlineD1Ev>
 80131aa:	4620      	mov	r0, r4
 80131ac:	b02a      	add	sp, #168	@ 0xa8
 80131ae:	ecbd 8b06 	vpop	{d8-d10}
 80131b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80131b6:	bf00      	nop
 80131b8:	00000000 	.word	0x00000000
 80131bc:	0802ea44 	.word	0x0802ea44

080131c0 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 80131c0:	b410      	push	{r4}
 80131c2:	7f04      	ldrb	r4, [r0, #28]
 80131c4:	b11c      	cbz	r4, 80131ce <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 80131c6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80131ca:	f7ff bee3 	b.w	8012f94 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 80131ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 80131d2:	f7ff bd6d 	b.w	8012cb0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

080131d8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 80131d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80131dc:	4691      	mov	r9, r2
 80131de:	4602      	mov	r2, r0
 80131e0:	4605      	mov	r5, r0
 80131e2:	f852 0f26 	ldr.w	r0, [r2, #38]!
 80131e6:	b085      	sub	sp, #20
 80131e8:	4688      	mov	r8, r1
 80131ea:	6851      	ldr	r1, [r2, #4]
 80131ec:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 80131f0:	469a      	mov	sl, r3
 80131f2:	ab02      	add	r3, sp, #8
 80131f4:	c303      	stmia	r3!, {r0, r1}
 80131f6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80131fa:	2b00      	cmp	r3, #0
 80131fc:	af02      	add	r7, sp, #8
 80131fe:	dd08      	ble.n	8013212 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 8013200:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 8013204:	2c00      	cmp	r4, #0
 8013206:	dd04      	ble.n	8013212 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 8013208:	4a2e      	ldr	r2, [pc, #184]	@ (80132c4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 801320a:	7812      	ldrb	r2, [r2, #0]
 801320c:	b122      	cbz	r2, 8013218 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 801320e:	2a01      	cmp	r2, #1
 8013210:	d02d      	beq.n	801326e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 8013212:	b005      	add	sp, #20
 8013214:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013218:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801321c:	441c      	add	r4, r3
 801321e:	b2a4      	uxth	r4, r4
 8013220:	b226      	sxth	r6, r4
 8013222:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8013226:	42b3      	cmp	r3, r6
 8013228:	daf3      	bge.n	8013212 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 801322a:	e9cd b700 	strd	fp, r7, [sp]
 801322e:	4653      	mov	r3, sl
 8013230:	464a      	mov	r2, r9
 8013232:	4641      	mov	r1, r8
 8013234:	4628      	mov	r0, r5
 8013236:	f7ff ffc3 	bl	80131c0 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 801323a:	b940      	cbnz	r0, 801324e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 801323c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013240:	2b01      	cmp	r3, #1
 8013242:	d004      	beq.n	801324e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 8013244:	3301      	adds	r3, #1
 8013246:	105b      	asrs	r3, r3, #1
 8013248:	f8ad 300e 	strh.w	r3, [sp, #14]
 801324c:	e7ed      	b.n	801322a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 801324e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8013252:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013256:	4413      	add	r3, r2
 8013258:	b29b      	uxth	r3, r3
 801325a:	441a      	add	r2, r3
 801325c:	b212      	sxth	r2, r2
 801325e:	4296      	cmp	r6, r2
 8013260:	f8ad 300a 	strh.w	r3, [sp, #10]
 8013264:	dadd      	bge.n	8013222 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 8013266:	1ae3      	subs	r3, r4, r3
 8013268:	f8ad 300e 	strh.w	r3, [sp, #14]
 801326c:	e7d9      	b.n	8013222 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 801326e:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 8013272:	441c      	add	r4, r3
 8013274:	b2a4      	uxth	r4, r4
 8013276:	b226      	sxth	r6, r4
 8013278:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801327c:	42b3      	cmp	r3, r6
 801327e:	dac8      	bge.n	8013212 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 8013280:	e9cd b700 	strd	fp, r7, [sp]
 8013284:	4653      	mov	r3, sl
 8013286:	464a      	mov	r2, r9
 8013288:	4641      	mov	r1, r8
 801328a:	4628      	mov	r0, r5
 801328c:	f7ff ff98 	bl	80131c0 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 8013290:	b940      	cbnz	r0, 80132a4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 8013292:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8013296:	2b01      	cmp	r3, #1
 8013298:	d004      	beq.n	80132a4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 801329a:	3301      	adds	r3, #1
 801329c:	105b      	asrs	r3, r3, #1
 801329e:	f8ad 300c 	strh.w	r3, [sp, #12]
 80132a2:	e7ed      	b.n	8013280 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 80132a4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80132a8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80132ac:	4413      	add	r3, r2
 80132ae:	b29b      	uxth	r3, r3
 80132b0:	441a      	add	r2, r3
 80132b2:	b212      	sxth	r2, r2
 80132b4:	4296      	cmp	r6, r2
 80132b6:	f8ad 3008 	strh.w	r3, [sp, #8]
 80132ba:	dadd      	bge.n	8013278 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 80132bc:	1ae3      	subs	r3, r4, r3
 80132be:	f8ad 300c 	strh.w	r3, [sp, #12]
 80132c2:	e7d9      	b.n	8013278 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 80132c4:	20013f44 	.word	0x20013f44

080132c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80132c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80132ca:	6803      	ldr	r3, [r0, #0]
 80132cc:	460d      	mov	r5, r1
 80132ce:	4604      	mov	r4, r0
 80132d0:	4601      	mov	r1, r0
 80132d2:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80132d4:	a802      	add	r0, sp, #8
 80132d6:	4798      	blx	r3
 80132d8:	6828      	ldr	r0, [r5, #0]
 80132da:	6869      	ldr	r1, [r5, #4]
 80132dc:	466b      	mov	r3, sp
 80132de:	c303      	stmia	r3!, {r0, r1}
 80132e0:	4668      	mov	r0, sp
 80132e2:	4619      	mov	r1, r3
 80132e4:	f7fd fb98 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 80132e8:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80132ea:	b188      	cbz	r0, 8013310 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80132ec:	6803      	ldr	r3, [r0, #0]
 80132ee:	1d21      	adds	r1, r4, #4
 80132f0:	68db      	ldr	r3, [r3, #12]
 80132f2:	4798      	blx	r3
 80132f4:	b160      	cbz	r0, 8013310 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80132f6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80132fa:	2b00      	cmp	r3, #0
 80132fc:	dd08      	ble.n	8013310 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80132fe:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8013302:	2d00      	cmp	r5, #0
 8013304:	dd04      	ble.n	8013310 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013306:	4a2b      	ldr	r2, [pc, #172]	@ (80133b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8013308:	7812      	ldrb	r2, [r2, #0]
 801330a:	b11a      	cbz	r2, 8013314 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 801330c:	2a01      	cmp	r2, #1
 801330e:	d029      	beq.n	8013364 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8013310:	b004      	add	sp, #16
 8013312:	bd70      	pop	{r4, r5, r6, pc}
 8013314:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013318:	441d      	add	r5, r3
 801331a:	b2ad      	uxth	r5, r5
 801331c:	b22e      	sxth	r6, r5
 801331e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8013322:	42b3      	cmp	r3, r6
 8013324:	daf4      	bge.n	8013310 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013326:	6823      	ldr	r3, [r4, #0]
 8013328:	4669      	mov	r1, sp
 801332a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 801332c:	4620      	mov	r0, r4
 801332e:	4798      	blx	r3
 8013330:	b940      	cbnz	r0, 8013344 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8013332:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8013336:	2b01      	cmp	r3, #1
 8013338:	d004      	beq.n	8013344 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801333a:	3301      	adds	r3, #1
 801333c:	105b      	asrs	r3, r3, #1
 801333e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013342:	e7f0      	b.n	8013326 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8013344:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8013348:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801334c:	4413      	add	r3, r2
 801334e:	b29b      	uxth	r3, r3
 8013350:	441a      	add	r2, r3
 8013352:	b212      	sxth	r2, r2
 8013354:	4296      	cmp	r6, r2
 8013356:	f8ad 3002 	strh.w	r3, [sp, #2]
 801335a:	dae0      	bge.n	801331e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 801335c:	1aeb      	subs	r3, r5, r3
 801335e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013362:	e7dc      	b.n	801331e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8013364:	f8bd 5000 	ldrh.w	r5, [sp]
 8013368:	441d      	add	r5, r3
 801336a:	b2ad      	uxth	r5, r5
 801336c:	b22e      	sxth	r6, r5
 801336e:	f9bd 3000 	ldrsh.w	r3, [sp]
 8013372:	42b3      	cmp	r3, r6
 8013374:	dacc      	bge.n	8013310 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013376:	6823      	ldr	r3, [r4, #0]
 8013378:	4669      	mov	r1, sp
 801337a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 801337c:	4620      	mov	r0, r4
 801337e:	4798      	blx	r3
 8013380:	b940      	cbnz	r0, 8013394 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8013382:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8013386:	2b01      	cmp	r3, #1
 8013388:	d004      	beq.n	8013394 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801338a:	3301      	adds	r3, #1
 801338c:	105b      	asrs	r3, r3, #1
 801338e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013392:	e7f0      	b.n	8013376 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8013394:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8013398:	f8bd 3000 	ldrh.w	r3, [sp]
 801339c:	4413      	add	r3, r2
 801339e:	b29b      	uxth	r3, r3
 80133a0:	441a      	add	r2, r3
 80133a2:	b212      	sxth	r2, r2
 80133a4:	4296      	cmp	r6, r2
 80133a6:	f8ad 3000 	strh.w	r3, [sp]
 80133aa:	dae0      	bge.n	801336e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80133ac:	1aeb      	subs	r3, r5, r3
 80133ae:	f8ad 3004 	strh.w	r3, [sp, #4]
 80133b2:	e7dc      	b.n	801336e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80133b4:	20013f44 	.word	0x20013f44

080133b8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 80133b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80133ba:	6803      	ldr	r3, [r0, #0]
 80133bc:	4604      	mov	r4, r0
 80133be:	4601      	mov	r1, r0
 80133c0:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80133c2:	4668      	mov	r0, sp
 80133c4:	4798      	blx	r3
 80133c6:	2100      	movs	r1, #0
 80133c8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80133cc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80133d0:	9102      	str	r1, [sp, #8]
 80133d2:	4668      	mov	r0, sp
 80133d4:	a902      	add	r1, sp, #8
 80133d6:	f8ad 200c 	strh.w	r2, [sp, #12]
 80133da:	f8ad 300e 	strh.w	r3, [sp, #14]
 80133de:	f7fd fb1b 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 80133e2:	6823      	ldr	r3, [r4, #0]
 80133e4:	4669      	mov	r1, sp
 80133e6:	691b      	ldr	r3, [r3, #16]
 80133e8:	4620      	mov	r0, r4
 80133ea:	4798      	blx	r3
 80133ec:	b004      	add	sp, #16
 80133ee:	bd10      	pop	{r4, pc}

080133f0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80133f0:	2101      	movs	r1, #1
 80133f2:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 80133f6:	490b      	ldr	r1, [pc, #44]	@ (8013424 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80133f8:	6001      	str	r1, [r0, #0]
 80133fa:	2200      	movs	r2, #0
 80133fc:	21ff      	movs	r1, #255	@ 0xff
 80133fe:	8082      	strh	r2, [r0, #4]
 8013400:	80c2      	strh	r2, [r0, #6]
 8013402:	8102      	strh	r2, [r0, #8]
 8013404:	8142      	strh	r2, [r0, #10]
 8013406:	8182      	strh	r2, [r0, #12]
 8013408:	81c2      	strh	r2, [r0, #14]
 801340a:	8202      	strh	r2, [r0, #16]
 801340c:	8242      	strh	r2, [r0, #18]
 801340e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013412:	61c2      	str	r2, [r0, #28]
 8013414:	8402      	strh	r2, [r0, #32]
 8013416:	8442      	strh	r2, [r0, #34]	@ 0x22
 8013418:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 801341c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 8013420:	6282      	str	r2, [r0, #40]	@ 0x28
 8013422:	4770      	bx	lr
 8013424:	0802e2dc 	.word	0x0802e2dc

08013428 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 8013428:	b508      	push	{r3, lr}
 801342a:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 801342e:	b10b      	cbz	r3, 8013434 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 8013430:	f7ee f838 	bl	80014a4 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8013434:	bd08      	pop	{r3, pc}

08013436 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 8013436:	6803      	ldr	r3, [r0, #0]
 8013438:	f64f 71fe 	movw	r1, #65534	@ 0xfffe
 801343c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 801343e:	4718      	bx	r3

08013440 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 8013440:	4770      	bx	lr

08013442 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 8013442:	b510      	push	{r4, lr}
 8013444:	212c      	movs	r1, #44	@ 0x2c
 8013446:	4604      	mov	r4, r0
 8013448:	f016 f964 	bl	8029714 <_ZdlPvj>
 801344c:	4620      	mov	r0, r4
 801344e:	bd10      	pop	{r4, pc}

08013450 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 8013450:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 8013454:	2bff      	cmp	r3, #255	@ 0xff
 8013456:	b510      	push	{r4, lr}
 8013458:	d104      	bne.n	8013464 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 801345a:	8cca      	ldrh	r2, [r1, #38]	@ 0x26
 801345c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8013460:	429a      	cmp	r2, r3
 8013462:	d105      	bne.n	8013470 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 8013464:	2300      	movs	r3, #0
 8013466:	8003      	strh	r3, [r0, #0]
 8013468:	8043      	strh	r3, [r0, #2]
 801346a:	8083      	strh	r3, [r0, #4]
 801346c:	80c3      	strh	r3, [r0, #6]
 801346e:	bd10      	pop	{r4, pc}
 8013470:	2300      	movs	r3, #0
 8013472:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8013476:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 801347a:	8003      	strh	r3, [r0, #0]
 801347c:	8043      	strh	r3, [r0, #2]
 801347e:	8084      	strh	r4, [r0, #4]
 8013480:	80c2      	strh	r2, [r0, #6]
 8013482:	e7f4      	b.n	801346e <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

08013484 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 8013484:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013488:	f890 3028 	ldrb.w	r3, [r0, #40]	@ 0x28
 801348c:	b087      	sub	sp, #28
 801348e:	4604      	mov	r4, r0
 8013490:	4689      	mov	r9, r1
 8013492:	b363      	cbz	r3, 80134ee <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 8013494:	8cc2      	ldrh	r2, [r0, #38]	@ 0x26
 8013496:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801349a:	429a      	cmp	r2, r3
 801349c:	d027      	beq.n	80134ee <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 801349e:	ad06      	add	r5, sp, #24
 80134a0:	2700      	movs	r7, #0
 80134a2:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 80134a6:	4628      	mov	r0, r5
 80134a8:	f007 f896 	bl	801a5d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80134ac:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80134b0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80134b4:	6823      	ldr	r3, [r4, #0]
 80134b6:	f8ad 0014 	strh.w	r0, [sp, #20]
 80134ba:	a904      	add	r1, sp, #16
 80134bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80134be:	9704      	str	r7, [sp, #16]
 80134c0:	4620      	mov	r0, r4
 80134c2:	4798      	blx	r3
 80134c4:	f7ef fd88 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 80134c8:	6803      	ldr	r3, [r0, #0]
 80134ca:	4606      	mov	r6, r0
 80134cc:	f8d3 800c 	ldr.w	r8, [r3, #12]
 80134d0:	8ce3      	ldrh	r3, [r4, #38]	@ 0x26
 80134d2:	f8ad 300c 	strh.w	r3, [sp, #12]
 80134d6:	4628      	mov	r0, r5
 80134d8:	f007 f970 	bl	801a7bc <_ZNK8touchgfx6Bitmap7getDataEv>
 80134dc:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80134e0:	9300      	str	r3, [sp, #0]
 80134e2:	4601      	mov	r1, r0
 80134e4:	9701      	str	r7, [sp, #4]
 80134e6:	464b      	mov	r3, r9
 80134e8:	aa04      	add	r2, sp, #16
 80134ea:	4630      	mov	r0, r6
 80134ec:	47c0      	blx	r8
 80134ee:	b007      	add	sp, #28
 80134f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080134f4 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 80134f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80134f6:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80134fa:	f8ad 3006 	strh.w	r3, [sp, #6]
 80134fe:	6803      	ldr	r3, [r0, #0]
 8013500:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8013504:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013508:	460d      	mov	r5, r1
 801350a:	2100      	movs	r1, #0
 801350c:	4604      	mov	r4, r0
 801350e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013510:	9100      	str	r1, [sp, #0]
 8013512:	4669      	mov	r1, sp
 8013514:	4798      	blx	r3
 8013516:	4621      	mov	r1, r4
 8013518:	a802      	add	r0, sp, #8
 801351a:	f004 fcff 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801351e:	f7ef fd5b 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 8013522:	6803      	ldr	r3, [r0, #0]
 8013524:	aa02      	add	r2, sp, #8
 8013526:	695e      	ldr	r6, [r3, #20]
 8013528:	4669      	mov	r1, sp
 801352a:	462b      	mov	r3, r5
 801352c:	47b0      	blx	r6
 801352e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8013532:	2800      	cmp	r0, #0
 8013534:	bf08      	it	eq
 8013536:	461d      	moveq	r5, r3
 8013538:	84e5      	strh	r5, [r4, #38]	@ 0x26
 801353a:	b004      	add	sp, #16
 801353c:	bd70      	pop	{r4, r5, r6, pc}
	...

08013540 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 8013540:	2200      	movs	r2, #0
 8013542:	8082      	strh	r2, [r0, #4]
 8013544:	80c2      	strh	r2, [r0, #6]
 8013546:	8102      	strh	r2, [r0, #8]
 8013548:	8142      	strh	r2, [r0, #10]
 801354a:	8182      	strh	r2, [r0, #12]
 801354c:	81c2      	strh	r2, [r0, #14]
 801354e:	8202      	strh	r2, [r0, #16]
 8013550:	8242      	strh	r2, [r0, #18]
 8013552:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013556:	61c2      	str	r2, [r0, #28]
 8013558:	8402      	strh	r2, [r0, #32]
 801355a:	8442      	strh	r2, [r0, #34]	@ 0x22
 801355c:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 8013560:	2201      	movs	r2, #1
 8013562:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
 8013566:	4a04      	ldr	r2, [pc, #16]	@ (8013578 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 8013568:	6002      	str	r2, [r0, #0]
 801356a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 801356e:	84c2      	strh	r2, [r0, #38]	@ 0x26
 8013570:	f880 2028 	strb.w	r2, [r0, #40]	@ 0x28
 8013574:	4770      	bx	lr
 8013576:	bf00      	nop
 8013578:	0802e354 	.word	0x0802e354

0801357c <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 801357c:	2000      	movs	r0, #0
 801357e:	4770      	bx	lr

08013580 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8013580:	4b07      	ldr	r3, [pc, #28]	@ (80135a0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8013582:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8013584:	881b      	ldrh	r3, [r3, #0]
 8013586:	4293      	cmp	r3, r2
 8013588:	bf81      	itttt	hi
 801358a:	4b06      	ldrhi	r3, [pc, #24]	@ (80135a4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 801358c:	681b      	ldrhi	r3, [r3, #0]
 801358e:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8013592:	7858      	ldrbhi	r0, [r3, #1]
 8013594:	bf8c      	ite	hi
 8013596:	f000 0003 	andhi.w	r0, r0, #3
 801359a:	2000      	movls	r0, #0
 801359c:	4770      	bx	lr
 801359e:	bf00      	nop
 80135a0:	20013fa8 	.word	0x20013fa8
 80135a4:	20013fa4 	.word	0x20013fa4

080135a8 <_ZN8touchgfx8TextAreaD1Ev>:
 80135a8:	4770      	bx	lr
	...

080135ac <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80135ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80135b0:	4b10      	ldr	r3, [pc, #64]	@ (80135f4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80135b2:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 80135b4:	881b      	ldrh	r3, [r3, #0]
 80135b6:	428b      	cmp	r3, r1
 80135b8:	4604      	mov	r4, r0
 80135ba:	d918      	bls.n	80135ee <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80135bc:	6803      	ldr	r3, [r0, #0]
 80135be:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 80135c0:	4b0d      	ldr	r3, [pc, #52]	@ (80135f8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80135c2:	6818      	ldr	r0, [r3, #0]
 80135c4:	f7f3 fe6a 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 80135c8:	6823      	ldr	r3, [r4, #0]
 80135ca:	4606      	mov	r6, r0
 80135cc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80135ce:	4620      	mov	r0, r4
 80135d0:	4798      	blx	r3
 80135d2:	6823      	ldr	r3, [r4, #0]
 80135d4:	4607      	mov	r7, r0
 80135d6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80135da:	4620      	mov	r0, r4
 80135dc:	4798      	blx	r3
 80135de:	463a      	mov	r2, r7
 80135e0:	4603      	mov	r3, r0
 80135e2:	4631      	mov	r1, r6
 80135e4:	4620      	mov	r0, r4
 80135e6:	46ac      	mov	ip, r5
 80135e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80135ec:	4760      	bx	ip
 80135ee:	2000      	movs	r0, #0
 80135f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80135f4:	20013fa8 	.word	0x20013fa8
 80135f8:	20013fb0 	.word	0x20013fb0

080135fc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80135fc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8013600:	4b17      	ldr	r3, [pc, #92]	@ (8013660 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8013602:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8013604:	881b      	ldrh	r3, [r3, #0]
 8013606:	428b      	cmp	r3, r1
 8013608:	4604      	mov	r4, r0
 801360a:	d926      	bls.n	801365a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 801360c:	4b15      	ldr	r3, [pc, #84]	@ (8013664 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801360e:	681b      	ldr	r3, [r3, #0]
 8013610:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8013614:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8013618:	4b13      	ldr	r3, [pc, #76]	@ (8013668 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801361a:	7855      	ldrb	r5, [r2, #1]
 801361c:	681b      	ldr	r3, [r3, #0]
 801361e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8013622:	6833      	ldr	r3, [r6, #0]
 8013624:	69df      	ldr	r7, [r3, #28]
 8013626:	4b11      	ldr	r3, [pc, #68]	@ (801366c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8013628:	6818      	ldr	r0, [r3, #0]
 801362a:	f7f3 fe37 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 801362e:	6823      	ldr	r3, [r4, #0]
 8013630:	4680      	mov	r8, r0
 8013632:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013634:	4620      	mov	r0, r4
 8013636:	4798      	blx	r3
 8013638:	6823      	ldr	r3, [r4, #0]
 801363a:	4681      	mov	r9, r0
 801363c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8013640:	4620      	mov	r0, r4
 8013642:	4798      	blx	r3
 8013644:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8013648:	9000      	str	r0, [sp, #0]
 801364a:	464b      	mov	r3, r9
 801364c:	4642      	mov	r2, r8
 801364e:	4629      	mov	r1, r5
 8013650:	4630      	mov	r0, r6
 8013652:	47b8      	blx	r7
 8013654:	b003      	add	sp, #12
 8013656:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801365a:	2000      	movs	r0, #0
 801365c:	e7fa      	b.n	8013654 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 801365e:	bf00      	nop
 8013660:	20013fa8 	.word	0x20013fa8
 8013664:	20013fa4 	.word	0x20013fa4
 8013668:	20013fac 	.word	0x20013fac
 801366c:	20013fb0 	.word	0x20013fb0

08013670 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8013670:	b40e      	push	{r1, r2, r3}
 8013672:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013676:	4b2f      	ldr	r3, [pc, #188]	@ (8013734 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8013678:	881a      	ldrh	r2, [r3, #0]
 801367a:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 801367c:	429a      	cmp	r2, r3
 801367e:	b09d      	sub	sp, #116	@ 0x74
 8013680:	4604      	mov	r4, r0
 8013682:	d954      	bls.n	801372e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8013684:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 8013738 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8013688:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 801373c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 801368c:	aa26      	add	r2, sp, #152	@ 0x98
 801368e:	9202      	str	r2, [sp, #8]
 8013690:	f8d9 2000 	ldr.w	r2, [r9]
 8013694:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013698:	f8d8 3000 	ldr.w	r3, [r8]
 801369c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80136a0:	682b      	ldr	r3, [r5, #0]
 80136a2:	4628      	mov	r0, r5
 80136a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80136a6:	4798      	blx	r3
 80136a8:	b207      	sxth	r7, r0
 80136aa:	4606      	mov	r6, r0
 80136ac:	a803      	add	r0, sp, #12
 80136ae:	f005 fbd0 	bl	8018e52 <_ZN8touchgfx12TextProviderC1Ev>
 80136b2:	682b      	ldr	r3, [r5, #0]
 80136b4:	4628      	mov	r0, r5
 80136b6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80136b8:	4798      	blx	r3
 80136ba:	682b      	ldr	r3, [r5, #0]
 80136bc:	4682      	mov	sl, r0
 80136be:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80136c0:	4628      	mov	r0, r5
 80136c2:	4798      	blx	r3
 80136c4:	4653      	mov	r3, sl
 80136c6:	9000      	str	r0, [sp, #0]
 80136c8:	9a02      	ldr	r2, [sp, #8]
 80136ca:	9925      	ldr	r1, [sp, #148]	@ 0x94
 80136cc:	a803      	add	r0, sp, #12
 80136ce:	f005 fc1b 	bl	8018f08 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80136d2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 80136d4:	f8d9 3000 	ldr.w	r3, [r9]
 80136d8:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 80136dc:	8925      	ldrh	r5, [r4, #8]
 80136de:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80136e2:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80136e6:	eba5 050c 	sub.w	r5, r5, ip
 80136ea:	784a      	ldrb	r2, [r1, #1]
 80136ec:	f8d8 3000 	ldr.w	r3, [r8]
 80136f0:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 80136f4:	b22d      	sxth	r5, r5
 80136f6:	9500      	str	r5, [sp, #0]
 80136f8:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80136fc:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013700:	a803      	add	r0, sp, #12
 8013702:	f002 fcb9 	bl	8016078 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8013706:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 801370a:	18b9      	adds	r1, r7, r2
 801370c:	2900      	cmp	r1, #0
 801370e:	b203      	sxth	r3, r0
 8013710:	dd0b      	ble.n	801372a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8013712:	3b01      	subs	r3, #1
 8013714:	fb13 f302 	smulbb	r3, r3, r2
 8013718:	fb16 3300 	smlabb	r3, r6, r0, r3
 801371c:	b21f      	sxth	r7, r3
 801371e:	4638      	mov	r0, r7
 8013720:	b01d      	add	sp, #116	@ 0x74
 8013722:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013726:	b003      	add	sp, #12
 8013728:	4770      	bx	lr
 801372a:	2b00      	cmp	r3, #0
 801372c:	dcf7      	bgt.n	801371e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801372e:	2700      	movs	r7, #0
 8013730:	e7f5      	b.n	801371e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8013732:	bf00      	nop
 8013734:	20013fa8 	.word	0x20013fa8
 8013738:	20013fa4 	.word	0x20013fa4
 801373c:	20013fac 	.word	0x20013fac

08013740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8013740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013744:	4bbc      	ldr	r3, [pc, #752]	@ (8013a38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8013746:	460c      	mov	r4, r1
 8013748:	881b      	ldrh	r3, [r3, #0]
 801374a:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 801374c:	428b      	cmp	r3, r1
 801374e:	b0a9      	sub	sp, #164	@ 0xa4
 8013750:	4680      	mov	r8, r0
 8013752:	d809      	bhi.n	8013768 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8013754:	2300      	movs	r3, #0
 8013756:	f04f 32ff 	mov.w	r2, #4294967295
 801375a:	e9c0 3200 	strd	r3, r2, [r0]
 801375e:	6083      	str	r3, [r0, #8]
 8013760:	4640      	mov	r0, r8
 8013762:	b029      	add	sp, #164	@ 0xa4
 8013764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013768:	4eb4      	ldr	r6, [pc, #720]	@ (8013a3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801376a:	6833      	ldr	r3, [r6, #0]
 801376c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8013770:	4bb3      	ldr	r3, [pc, #716]	@ (8013a40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8013772:	681b      	ldr	r3, [r3, #0]
 8013774:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013778:	4bb2      	ldr	r3, [pc, #712]	@ (8013a44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801377a:	6818      	ldr	r0, [r3, #0]
 801377c:	f7f3 fd8e 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 8013780:	682b      	ldr	r3, [r5, #0]
 8013782:	4681      	mov	r9, r0
 8013784:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013786:	4628      	mov	r0, r5
 8013788:	4798      	blx	r3
 801378a:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 801378c:	b203      	sxth	r3, r0
 801378e:	4407      	add	r7, r0
 8013790:	9304      	str	r3, [sp, #16]
 8013792:	b2bb      	uxth	r3, r7
 8013794:	9303      	str	r3, [sp, #12]
 8013796:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 801379a:	4682      	mov	sl, r0
 801379c:	a80f      	add	r0, sp, #60	@ 0x3c
 801379e:	2b00      	cmp	r3, #0
 80137a0:	f040 80a6 	bne.w	80138f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 80137a4:	f005 fb55 	bl	8018e52 <_ZN8touchgfx12TextProviderC1Ev>
 80137a8:	682b      	ldr	r3, [r5, #0]
 80137aa:	4628      	mov	r0, r5
 80137ac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80137ae:	4798      	blx	r3
 80137b0:	682b      	ldr	r3, [r5, #0]
 80137b2:	4606      	mov	r6, r0
 80137b4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80137b6:	4628      	mov	r0, r5
 80137b8:	4798      	blx	r3
 80137ba:	6823      	ldr	r3, [r4, #0]
 80137bc:	4607      	mov	r7, r0
 80137be:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80137c0:	4620      	mov	r0, r4
 80137c2:	4798      	blx	r3
 80137c4:	6823      	ldr	r3, [r4, #0]
 80137c6:	4683      	mov	fp, r0
 80137c8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80137cc:	4620      	mov	r0, r4
 80137ce:	4798      	blx	r3
 80137d0:	463b      	mov	r3, r7
 80137d2:	e9cd b000 	strd	fp, r0, [sp]
 80137d6:	4649      	mov	r1, r9
 80137d8:	4632      	mov	r2, r6
 80137da:	a80f      	add	r0, sp, #60	@ 0x3c
 80137dc:	f005 fba9 	bl	8018f32 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80137e0:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80137e4:	f8df b254 	ldr.w	fp, [pc, #596]	@ 8013a3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80137e8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 80137ec:	f04f 0600 	mov.w	r6, #0
 80137f0:	bf0c      	ite	eq
 80137f2:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80137f6:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80137fa:	4637      	mov	r7, r6
 80137fc:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 80137fe:	f8db 3000 	ldr.w	r3, [fp]
 8013802:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013806:	4629      	mov	r1, r5
 8013808:	785b      	ldrb	r3, [r3, #1]
 801380a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801380e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013812:	a80f      	add	r0, sp, #60	@ 0x3c
 8013814:	f002 f937 	bl	8015a86 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8013818:	9b03      	ldr	r3, [sp, #12]
 801381a:	4286      	cmp	r6, r0
 801381c:	bfb8      	it	lt
 801381e:	4606      	movlt	r6, r0
 8013820:	3701      	adds	r7, #1
 8013822:	eba9 0903 	sub.w	r9, r9, r3
 8013826:	a80f      	add	r0, sp, #60	@ 0x3c
 8013828:	b236      	sxth	r6, r6
 801382a:	b2bf      	uxth	r7, r7
 801382c:	fa0f f989 	sxth.w	r9, r9
 8013830:	f005 fb36 	bl	8018ea0 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8013834:	b918      	cbnz	r0, 801383e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013836:	7a2b      	ldrb	r3, [r5, #8]
 8013838:	444b      	add	r3, r9
 801383a:	2b00      	cmp	r3, #0
 801383c:	dcde      	bgt.n	80137fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801383e:	9b03      	ldr	r3, [sp, #12]
 8013840:	9a04      	ldr	r2, [sp, #16]
 8013842:	f895 9009 	ldrb.w	r9, [r5, #9]
 8013846:	fb13 f707 	smulbb	r7, r3, r7
 801384a:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 801384c:	1aff      	subs	r7, r7, r3
 801384e:	b2bf      	uxth	r7, r7
 8013850:	b23b      	sxth	r3, r7
 8013852:	429a      	cmp	r2, r3
 8013854:	bfa8      	it	ge
 8013856:	4657      	movge	r7, sl
 8013858:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801385c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8013860:	6823      	ldr	r3, [r4, #0]
 8013862:	bf08      	it	eq
 8013864:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8013868:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 801386a:	bf18      	it	ne
 801386c:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8013870:	4620      	mov	r0, r4
 8013872:	4798      	blx	r3
 8013874:	444f      	add	r7, r9
 8013876:	fa1f f987 	uxth.w	r9, r7
 801387a:	2801      	cmp	r0, #1
 801387c:	fa0f f789 	sxth.w	r7, r9
 8013880:	b2b3      	uxth	r3, r6
 8013882:	f000 80e1 	beq.w	8013a48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8013886:	2802      	cmp	r0, #2
 8013888:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 801388c:	f000 80e2 	beq.w	8013a54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8013890:	7aea      	ldrb	r2, [r5, #11]
 8013892:	7b2d      	ldrb	r5, [r5, #12]
 8013894:	b236      	sxth	r6, r6
 8013896:	1ab6      	subs	r6, r6, r2
 8013898:	442a      	add	r2, r5
 801389a:	4413      	add	r3, r2
 801389c:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 80138a0:	fa1f fa86 	uxth.w	sl, r6
 80138a4:	b29b      	uxth	r3, r3
 80138a6:	2a02      	cmp	r2, #2
 80138a8:	fa0f fb8a 	sxth.w	fp, sl
 80138ac:	b21e      	sxth	r6, r3
 80138ae:	f000 80d5 	beq.w	8013a5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 80138b2:	2a03      	cmp	r2, #3
 80138b4:	f000 80dd 	beq.w	8013a72 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80138b8:	2a01      	cmp	r2, #1
 80138ba:	f040 80e5 	bne.w	8013a88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80138be:	8925      	ldrh	r5, [r4, #8]
 80138c0:	4633      	mov	r3, r6
 80138c2:	eba5 0909 	sub.w	r9, r5, r9
 80138c6:	463e      	mov	r6, r7
 80138c8:	465d      	mov	r5, fp
 80138ca:	461f      	mov	r7, r3
 80138cc:	fa0f fb89 	sxth.w	fp, r9
 80138d0:	4b5c      	ldr	r3, [pc, #368]	@ (8013a44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80138d2:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 80138d4:	6818      	ldr	r0, [r3, #0]
 80138d6:	f7f3 fce1 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 80138da:	f8a8 b000 	strh.w	fp, [r8]
 80138de:	f8a8 5002 	strh.w	r5, [r8, #2]
 80138e2:	f8a8 6004 	strh.w	r6, [r8, #4]
 80138e6:	f8a8 7006 	strh.w	r7, [r8, #6]
 80138ea:	f8c8 0008 	str.w	r0, [r8, #8]
 80138ee:	e737      	b.n	8013760 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80138f0:	f005 faaf 	bl	8018e52 <_ZN8touchgfx12TextProviderC1Ev>
 80138f4:	682b      	ldr	r3, [r5, #0]
 80138f6:	4628      	mov	r0, r5
 80138f8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80138fa:	4798      	blx	r3
 80138fc:	682b      	ldr	r3, [r5, #0]
 80138fe:	4607      	mov	r7, r0
 8013900:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8013902:	4628      	mov	r0, r5
 8013904:	4798      	blx	r3
 8013906:	6823      	ldr	r3, [r4, #0]
 8013908:	4683      	mov	fp, r0
 801390a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801390c:	4620      	mov	r0, r4
 801390e:	4798      	blx	r3
 8013910:	6822      	ldr	r2, [r4, #0]
 8013912:	9005      	str	r0, [sp, #20]
 8013914:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 8013918:	4620      	mov	r0, r4
 801391a:	4790      	blx	r2
 801391c:	9b05      	ldr	r3, [sp, #20]
 801391e:	9001      	str	r0, [sp, #4]
 8013920:	463a      	mov	r2, r7
 8013922:	4649      	mov	r1, r9
 8013924:	9300      	str	r3, [sp, #0]
 8013926:	a80f      	add	r0, sp, #60	@ 0x3c
 8013928:	465b      	mov	r3, fp
 801392a:	f005 fb02 	bl	8018f32 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801392e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8013932:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8013936:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8013938:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 801393c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8013940:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8013944:	bf0a      	itet	eq
 8013946:	464a      	moveq	r2, r9
 8013948:	461a      	movne	r2, r3
 801394a:	4699      	moveq	r9, r3
 801394c:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 8013950:	1ad2      	subs	r2, r2, r3
 8013952:	6833      	ldr	r3, [r6, #0]
 8013954:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 8013958:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 801395c:	af0f      	add	r7, sp, #60	@ 0x3c
 801395e:	7859      	ldrb	r1, [r3, #1]
 8013960:	9707      	str	r7, [sp, #28]
 8013962:	2300      	movs	r3, #0
 8013964:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8013968:	f8ad 3018 	strh.w	r3, [sp, #24]
 801396c:	f88d 1020 	strb.w	r1, [sp, #32]
 8013970:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8013974:	9509      	str	r5, [sp, #36]	@ 0x24
 8013976:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801397a:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 801397e:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 8013982:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8013986:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801398a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801398e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8013992:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013996:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801399a:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 801399e:	b350      	cbz	r0, 80139f6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80139a0:	682b      	ldr	r3, [r5, #0]
 80139a2:	4628      	mov	r0, r5
 80139a4:	695b      	ldr	r3, [r3, #20]
 80139a6:	4798      	blx	r3
 80139a8:	4607      	mov	r7, r0
 80139aa:	b320      	cbz	r0, 80139f6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80139ac:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80139ae:	6803      	ldr	r3, [r0, #0]
 80139b0:	4639      	mov	r1, r7
 80139b2:	68db      	ldr	r3, [r3, #12]
 80139b4:	4798      	blx	r3
 80139b6:	4606      	mov	r6, r0
 80139b8:	b1e8      	cbz	r0, 80139f6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80139ba:	7b43      	ldrb	r3, [r0, #13]
 80139bc:	7a82      	ldrb	r2, [r0, #10]
 80139be:	005b      	lsls	r3, r3, #1
 80139c0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80139c4:	4313      	orrs	r3, r2
 80139c6:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80139ca:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 80139ce:	2b06      	cmp	r3, #6
 80139d0:	d111      	bne.n	80139f6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80139d2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80139d4:	6803      	ldr	r3, [r0, #0]
 80139d6:	4632      	mov	r2, r6
 80139d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80139da:	4639      	mov	r1, r7
 80139dc:	4798      	blx	r3
 80139de:	7b73      	ldrb	r3, [r6, #13]
 80139e0:	005b      	lsls	r3, r3, #1
 80139e2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80139e6:	7ab3      	ldrb	r3, [r6, #10]
 80139e8:	4313      	orrs	r3, r2
 80139ea:	4418      	add	r0, r3
 80139ec:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80139f0:	4418      	add	r0, r3
 80139f2:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 80139f6:	2600      	movs	r6, #0
 80139f8:	4637      	mov	r7, r6
 80139fa:	a806      	add	r0, sp, #24
 80139fc:	f002 fa38 	bl	8015e70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013a00:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 8013a04:	9b03      	ldr	r3, [sp, #12]
 8013a06:	4286      	cmp	r6, r0
 8013a08:	eba9 0903 	sub.w	r9, r9, r3
 8013a0c:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8013a10:	bfb8      	it	lt
 8013a12:	4606      	movlt	r6, r0
 8013a14:	3701      	adds	r7, #1
 8013a16:	b236      	sxth	r6, r6
 8013a18:	b2bf      	uxth	r7, r7
 8013a1a:	fa0f f989 	sxth.w	r9, r9
 8013a1e:	2b00      	cmp	r3, #0
 8013a20:	f43f af0d 	beq.w	801383e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013a24:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 8013a28:	2b00      	cmp	r3, #0
 8013a2a:	f47f af08 	bne.w	801383e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013a2e:	7a2b      	ldrb	r3, [r5, #8]
 8013a30:	444b      	add	r3, r9
 8013a32:	2b00      	cmp	r3, #0
 8013a34:	dce1      	bgt.n	80139fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8013a36:	e702      	b.n	801383e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013a38:	20013fa8 	.word	0x20013fa8
 8013a3c:	20013fa4 	.word	0x20013fa4
 8013a40:	20013fac 	.word	0x20013fac
 8013a44:	20013fb0 	.word	0x20013fb0
 8013a48:	ebaa 0606 	sub.w	r6, sl, r6
 8013a4c:	2002      	movs	r0, #2
 8013a4e:	fb96 f6f0 	sdiv	r6, r6, r0
 8013a52:	e71d      	b.n	8013890 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013a54:	441e      	add	r6, r3
 8013a56:	ebaa 0606 	sub.w	r6, sl, r6
 8013a5a:	e719      	b.n	8013890 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013a5c:	8925      	ldrh	r5, [r4, #8]
 8013a5e:	1aed      	subs	r5, r5, r3
 8013a60:	eba5 050a 	sub.w	r5, r5, sl
 8013a64:	fa0f fb85 	sxth.w	fp, r5
 8013a68:	8965      	ldrh	r5, [r4, #10]
 8013a6a:	eba5 0509 	sub.w	r5, r5, r9
 8013a6e:	b22d      	sxth	r5, r5
 8013a70:	e72e      	b.n	80138d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8013a72:	8965      	ldrh	r5, [r4, #10]
 8013a74:	1aed      	subs	r5, r5, r3
 8013a76:	eba5 050a 	sub.w	r5, r5, sl
 8013a7a:	4633      	mov	r3, r6
 8013a7c:	b22d      	sxth	r5, r5
 8013a7e:	463e      	mov	r6, r7
 8013a80:	f04f 0b00 	mov.w	fp, #0
 8013a84:	461f      	mov	r7, r3
 8013a86:	e723      	b.n	80138d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8013a88:	2500      	movs	r5, #0
 8013a8a:	e721      	b.n	80138d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08013a8c <_ZN8touchgfx8TextAreaD0Ev>:
 8013a8c:	b510      	push	{r4, lr}
 8013a8e:	2148      	movs	r1, #72	@ 0x48
 8013a90:	4604      	mov	r4, r0
 8013a92:	f015 fe3f 	bl	8029714 <_ZdlPvj>
 8013a96:	4620      	mov	r0, r4
 8013a98:	bd10      	pop	{r4, pc}
	...

08013a9c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8013a9c:	b513      	push	{r0, r1, r4, lr}
 8013a9e:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 8013aa2:	4604      	mov	r4, r0
 8013aa4:	b1fb      	cbz	r3, 8013ae6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013aa6:	4b16      	ldr	r3, [pc, #88]	@ (8013b00 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8013aa8:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8013aaa:	881b      	ldrh	r3, [r3, #0]
 8013aac:	428b      	cmp	r3, r1
 8013aae:	d91a      	bls.n	8013ae6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013ab0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013ab4:	2b00      	cmp	r3, #0
 8013ab6:	dd16      	ble.n	8013ae6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013ab8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013abc:	2b00      	cmp	r3, #0
 8013abe:	dd12      	ble.n	8013ae6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013ac0:	4b10      	ldr	r3, [pc, #64]	@ (8013b04 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8013ac2:	6818      	ldr	r0, [r3, #0]
 8013ac4:	f7f3 fbea 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 8013ac8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8013acc:	6822      	ldr	r2, [r4, #0]
 8013ace:	2b00      	cmp	r3, #0
 8013ad0:	db06      	blt.n	8013ae0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8013ad2:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8013ad6:	2b00      	cmp	r3, #0
 8013ad8:	db02      	blt.n	8013ae0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8013ada:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8013adc:	4298      	cmp	r0, r3
 8013ade:	d004      	beq.n	8013aea <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8013ae0:	6953      	ldr	r3, [r2, #20]
 8013ae2:	4620      	mov	r0, r4
 8013ae4:	4798      	blx	r3
 8013ae6:	b002      	add	sp, #8
 8013ae8:	bd10      	pop	{r4, pc}
 8013aea:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 8013aee:	c903      	ldmia	r1, {r0, r1}
 8013af0:	466b      	mov	r3, sp
 8013af2:	e883 0003 	stmia.w	r3, {r0, r1}
 8013af6:	6912      	ldr	r2, [r2, #16]
 8013af8:	4619      	mov	r1, r3
 8013afa:	4620      	mov	r0, r4
 8013afc:	4790      	blx	r2
 8013afe:	e7f2      	b.n	8013ae6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013b00:	20013fa8 	.word	0x20013fa8
 8013b04:	20013fb0 	.word	0x20013fb0

08013b08 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8013b08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013b0c:	4b44      	ldr	r3, [pc, #272]	@ (8013c20 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8013b0e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8013b10:	881b      	ldrh	r3, [r3, #0]
 8013b12:	4293      	cmp	r3, r2
 8013b14:	b08e      	sub	sp, #56	@ 0x38
 8013b16:	4604      	mov	r4, r0
 8013b18:	d97e      	bls.n	8013c18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013b1a:	6808      	ldr	r0, [r1, #0]
 8013b1c:	4d41      	ldr	r5, [pc, #260]	@ (8013c24 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8013b1e:	6849      	ldr	r1, [r1, #4]
 8013b20:	ab05      	add	r3, sp, #20
 8013b22:	c303      	stmia	r3!, {r0, r1}
 8013b24:	4611      	mov	r1, r2
 8013b26:	6828      	ldr	r0, [r5, #0]
 8013b28:	f7f3 fbb8 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 8013b2c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8013b30:	2b00      	cmp	r3, #0
 8013b32:	db11      	blt.n	8013b58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013b34:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8013b38:	2b00      	cmp	r3, #0
 8013b3a:	db0d      	blt.n	8013b58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013b3c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8013b3e:	4298      	cmp	r0, r3
 8013b40:	d10a      	bne.n	8013b58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013b42:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 8013b46:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013b4a:	ab09      	add	r3, sp, #36	@ 0x24
 8013b4c:	e883 0003 	stmia.w	r3, {r0, r1}
 8013b50:	4619      	mov	r1, r3
 8013b52:	a805      	add	r0, sp, #20
 8013b54:	f7fc ff60 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8013b58:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013b5c:	2b00      	cmp	r3, #0
 8013b5e:	dd5b      	ble.n	8013c18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013b60:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013b64:	2b00      	cmp	r3, #0
 8013b66:	dd57      	ble.n	8013c18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013b68:	4f2f      	ldr	r7, [pc, #188]	@ (8013c28 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8013b6a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8013b6c:	683b      	ldr	r3, [r7, #0]
 8013b6e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8013b72:	4b2e      	ldr	r3, [pc, #184]	@ (8013c2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8013b74:	681b      	ldr	r3, [r3, #0]
 8013b76:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013b7a:	2e00      	cmp	r6, #0
 8013b7c:	d04c      	beq.n	8013c18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013b7e:	6823      	ldr	r3, [r4, #0]
 8013b80:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 8013b84:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8013b86:	4620      	mov	r0, r4
 8013b88:	4798      	blx	r3
 8013b8a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8013b8c:	683b      	ldr	r3, [r7, #0]
 8013b8e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 8013b92:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 8013b96:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 8013b9a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8013b9c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013ba0:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 8013ba4:	785b      	ldrb	r3, [r3, #1]
 8013ba6:	9609      	str	r6, [sp, #36]	@ 0x24
 8013ba8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013bac:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8013bb0:	4b1f      	ldr	r3, [pc, #124]	@ (8013c30 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8013bb2:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 8013bb6:	681b      	ldr	r3, [r3, #0]
 8013bb8:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 8013bbc:	910b      	str	r1, [sp, #44]	@ 0x2c
 8013bbe:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 8013bc2:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 8013bc6:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 8013bca:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 8013bce:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8013bd2:	b10a      	cbz	r2, 8013bd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8013bd4:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 8013bd6:	b906      	cbnz	r6, 8013bda <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8013bd8:	689e      	ldr	r6, [r3, #8]
 8013bda:	af07      	add	r7, sp, #28
 8013bdc:	4621      	mov	r1, r4
 8013bde:	4638      	mov	r0, r7
 8013be0:	f004 f99c 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013be4:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8013be6:	6828      	ldr	r0, [r5, #0]
 8013be8:	f7f3 fb58 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 8013bec:	6823      	ldr	r3, [r4, #0]
 8013bee:	4605      	mov	r5, r0
 8013bf0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013bf2:	4620      	mov	r0, r4
 8013bf4:	4798      	blx	r3
 8013bf6:	6823      	ldr	r3, [r4, #0]
 8013bf8:	4680      	mov	r8, r0
 8013bfa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8013bfe:	4620      	mov	r0, r4
 8013c00:	4798      	blx	r3
 8013c02:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8013c06:	ab09      	add	r3, sp, #36	@ 0x24
 8013c08:	9300      	str	r3, [sp, #0]
 8013c0a:	9501      	str	r5, [sp, #4]
 8013c0c:	ab05      	add	r3, sp, #20
 8013c0e:	e897 0006 	ldmia.w	r7, {r1, r2}
 8013c12:	4630      	mov	r0, r6
 8013c14:	f7f3 faf4 	bl	8007200 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013c18:	b00e      	add	sp, #56	@ 0x38
 8013c1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013c1e:	bf00      	nop
 8013c20:	20013fa8 	.word	0x20013fa8
 8013c24:	20013fb0 	.word	0x20013fb0
 8013c28:	20013fa4 	.word	0x20013fa4
 8013c2c:	20013fac 	.word	0x20013fac
 8013c30:	20013f4c 	.word	0x20013f4c

08013c34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8013c34:	b538      	push	{r3, r4, r5, lr}
 8013c36:	4b0e      	ldr	r3, [pc, #56]	@ (8013c70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8013c38:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8013c3a:	881b      	ldrh	r3, [r3, #0]
 8013c3c:	429a      	cmp	r2, r3
 8013c3e:	4604      	mov	r4, r0
 8013c40:	d214      	bcs.n	8013c6c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8013c42:	6803      	ldr	r3, [r0, #0]
 8013c44:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8013c46:	4798      	blx	r3
 8013c48:	6823      	ldr	r3, [r4, #0]
 8013c4a:	4605      	mov	r5, r0
 8013c4c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8013c4e:	4620      	mov	r0, r4
 8013c50:	4798      	blx	r3
 8013c52:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8013c56:	b22d      	sxth	r5, r5
 8013c58:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8013c5c:	4601      	mov	r1, r0
 8013c5e:	bf06      	itte	eq
 8013c60:	4602      	moveq	r2, r0
 8013c62:	4629      	moveq	r1, r5
 8013c64:	462a      	movne	r2, r5
 8013c66:	4620      	mov	r0, r4
 8013c68:	f7f7 fa88 	bl	800b17c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013c6c:	bd38      	pop	{r3, r4, r5, pc}
 8013c6e:	bf00      	nop
 8013c70:	20013fa8 	.word	0x20013fa8

08013c74 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8013c74:	b530      	push	{r4, r5, lr}
 8013c76:	888b      	ldrh	r3, [r1, #4]
 8013c78:	8583      	strh	r3, [r0, #44]	@ 0x2c
 8013c7a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013c7e:	b085      	sub	sp, #20
 8013c80:	4604      	mov	r4, r0
 8013c82:	b923      	cbnz	r3, 8013c8e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013c84:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013c88:	b90b      	cbnz	r3, 8013c8e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013c8a:	f7ff ffd3 	bl	8013c34 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8013c8e:	6823      	ldr	r3, [r4, #0]
 8013c90:	466d      	mov	r5, sp
 8013c92:	4621      	mov	r1, r4
 8013c94:	4628      	mov	r0, r5
 8013c96:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8013c9a:	4798      	blx	r3
 8013c9c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8013ca0:	343c      	adds	r4, #60	@ 0x3c
 8013ca2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8013ca6:	b005      	add	sp, #20
 8013ca8:	bd30      	pop	{r4, r5, pc}

08013caa <_ZNK8touchgfx3Box12getSolidRectEv>:
 8013caa:	2300      	movs	r3, #0
 8013cac:	8083      	strh	r3, [r0, #4]
 8013cae:	80c3      	strh	r3, [r0, #6]
 8013cb0:	8003      	strh	r3, [r0, #0]
 8013cb2:	8043      	strh	r3, [r0, #2]
 8013cb4:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 8013cb8:	2bff      	cmp	r3, #255	@ 0xff
 8013cba:	bf01      	itttt	eq
 8013cbc:	890b      	ldrheq	r3, [r1, #8]
 8013cbe:	8083      	strheq	r3, [r0, #4]
 8013cc0:	894b      	ldrheq	r3, [r1, #10]
 8013cc2:	80c3      	strheq	r3, [r0, #6]
 8013cc4:	4770      	bx	lr
	...

08013cc8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8013cc8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013cca:	4604      	mov	r4, r0
 8013ccc:	6808      	ldr	r0, [r1, #0]
 8013cce:	6849      	ldr	r1, [r1, #4]
 8013cd0:	466b      	mov	r3, sp
 8013cd2:	c303      	stmia	r3!, {r0, r1}
 8013cd4:	6823      	ldr	r3, [r4, #0]
 8013cd6:	4669      	mov	r1, sp
 8013cd8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013cda:	4620      	mov	r0, r4
 8013cdc:	4798      	blx	r3
 8013cde:	4b08      	ldr	r3, [pc, #32]	@ (8013d00 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8013ce0:	681b      	ldr	r3, [r3, #0]
 8013ce2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8013ce6:	b10a      	cbz	r2, 8013cec <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8013ce8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8013cea:	b900      	cbnz	r0, 8013cee <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8013cec:	6898      	ldr	r0, [r3, #8]
 8013cee:	6803      	ldr	r3, [r0, #0]
 8013cf0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8013cf2:	6a1d      	ldr	r5, [r3, #32]
 8013cf4:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8013cf8:	4669      	mov	r1, sp
 8013cfa:	47a8      	blx	r5
 8013cfc:	b003      	add	sp, #12
 8013cfe:	bd30      	pop	{r4, r5, pc}
 8013d00:	20013f4c 	.word	0x20013f4c

08013d04 <_ZN8touchgfx3BoxD1Ev>:
 8013d04:	4770      	bx	lr

08013d06 <_ZN8touchgfx3BoxD0Ev>:
 8013d06:	b510      	push	{r4, lr}
 8013d08:	212c      	movs	r1, #44	@ 0x2c
 8013d0a:	4604      	mov	r4, r0
 8013d0c:	f015 fd02 	bl	8029714 <_ZdlPvj>
 8013d10:	4620      	mov	r0, r4
 8013d12:	bd10      	pop	{r4, pc}

08013d14 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8013d14:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 8013d18:	b12a      	cbz	r2, 8013d26 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8013d1a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8013d1e:	b112      	cbz	r2, 8013d26 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8013d20:	6803      	ldr	r3, [r0, #0]
 8013d22:	695b      	ldr	r3, [r3, #20]
 8013d24:	4718      	bx	r3
 8013d26:	4770      	bx	lr

08013d28 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8013d28:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 8013d2c:	4770      	bx	lr

08013d2e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8013d2e:	b570      	push	{r4, r5, r6, lr}
 8013d30:	880b      	ldrh	r3, [r1, #0]
 8013d32:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 8013d34:	4605      	mov	r5, r0
 8013d36:	8813      	ldrh	r3, [r2, #0]
 8013d38:	f825 3f30 	strh.w	r3, [r5, #48]!
 8013d3c:	4604      	mov	r4, r0
 8013d3e:	4628      	mov	r0, r5
 8013d40:	f006 fc4a 	bl	801a5d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013d44:	4606      	mov	r6, r0
 8013d46:	4628      	mov	r0, r5
 8013d48:	f006 fc7a 	bl	801a640 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013d4c:	6823      	ldr	r3, [r4, #0]
 8013d4e:	4605      	mov	r5, r0
 8013d50:	4631      	mov	r1, r6
 8013d52:	4620      	mov	r0, r4
 8013d54:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013d56:	4798      	blx	r3
 8013d58:	6823      	ldr	r3, [r4, #0]
 8013d5a:	4629      	mov	r1, r5
 8013d5c:	4620      	mov	r0, r4
 8013d5e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8013d60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013d64:	4718      	bx	r3

08013d66 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8013d66:	b510      	push	{r4, lr}
 8013d68:	4604      	mov	r4, r0
 8013d6a:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8013d6c:	b150      	cbz	r0, 8013d84 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013d6e:	6803      	ldr	r3, [r0, #0]
 8013d70:	68db      	ldr	r3, [r3, #12]
 8013d72:	4798      	blx	r3
 8013d74:	b130      	cbz	r0, 8013d84 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013d76:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8013d78:	6803      	ldr	r3, [r0, #0]
 8013d7a:	4621      	mov	r1, r4
 8013d7c:	689b      	ldr	r3, [r3, #8]
 8013d7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013d82:	4718      	bx	r3
 8013d84:	bd10      	pop	{r4, pc}

08013d86 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8013d86:	b510      	push	{r4, lr}
 8013d88:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 8013d8c:	2bff      	cmp	r3, #255	@ 0xff
 8013d8e:	4604      	mov	r4, r0
 8013d90:	d006      	beq.n	8013da0 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8013d92:	2300      	movs	r3, #0
 8013d94:	8003      	strh	r3, [r0, #0]
 8013d96:	8043      	strh	r3, [r0, #2]
 8013d98:	8083      	strh	r3, [r0, #4]
 8013d9a:	80c3      	strh	r3, [r0, #6]
 8013d9c:	4620      	mov	r0, r4
 8013d9e:	bd10      	pop	{r4, pc}
 8013da0:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 8013da4:	b11b      	cbz	r3, 8013dae <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8013da6:	3130      	adds	r1, #48	@ 0x30
 8013da8:	f006 fc7e 	bl	801a6a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013dac:	e7f6      	b.n	8013d9c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8013dae:	312e      	adds	r1, #46	@ 0x2e
 8013db0:	e7fa      	b.n	8013da8 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08013db4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8013db4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013db8:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8013dbc:	b08a      	sub	sp, #40	@ 0x28
 8013dbe:	4604      	mov	r4, r0
 8013dc0:	4688      	mov	r8, r1
 8013dc2:	2b00      	cmp	r3, #0
 8013dc4:	d066      	beq.n	8013e94 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8013dc6:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8013dc8:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013dcc:	a805      	add	r0, sp, #20
 8013dce:	f006 fc03 	bl	801a5d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013dd2:	4607      	mov	r7, r0
 8013dd4:	a805      	add	r0, sp, #20
 8013dd6:	f006 fc33 	bl	801a640 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013dda:	f9b8 6000 	ldrsh.w	r6, [r8]
 8013dde:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8013de2:	4432      	add	r2, r6
 8013de4:	b292      	uxth	r2, r2
 8013de6:	2300      	movs	r3, #0
 8013de8:	fa0f fc82 	sxth.w	ip, r2
 8013dec:	459c      	cmp	ip, r3
 8013dee:	9306      	str	r3, [sp, #24]
 8013df0:	dd52      	ble.n	8013e98 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013df2:	42b7      	cmp	r7, r6
 8013df4:	dd50      	ble.n	8013e98 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013df6:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8013dfa:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8013dfe:	442b      	add	r3, r5
 8013e00:	b29b      	uxth	r3, r3
 8013e02:	b219      	sxth	r1, r3
 8013e04:	2900      	cmp	r1, #0
 8013e06:	dd47      	ble.n	8013e98 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013e08:	42a8      	cmp	r0, r5
 8013e0a:	dd45      	ble.n	8013e98 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013e0c:	4567      	cmp	r7, ip
 8013e0e:	bfb8      	it	lt
 8013e10:	b2ba      	uxthlt	r2, r7
 8013e12:	4288      	cmp	r0, r1
 8013e14:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8013e18:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013e1c:	bfb8      	it	lt
 8013e1e:	b283      	uxthlt	r3, r0
 8013e20:	1b92      	subs	r2, r2, r6
 8013e22:	1b5b      	subs	r3, r3, r5
 8013e24:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013e28:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013e2c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013e30:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013e34:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013e38:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8013e3c:	429a      	cmp	r2, r3
 8013e3e:	d026      	beq.n	8013e8e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013e40:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013e44:	2b00      	cmp	r3, #0
 8013e46:	dd22      	ble.n	8013e8e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013e48:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013e4c:	2b00      	cmp	r3, #0
 8013e4e:	dd1e      	ble.n	8013e8e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013e50:	2300      	movs	r3, #0
 8013e52:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8013e56:	6823      	ldr	r3, [r4, #0]
 8013e58:	a908      	add	r1, sp, #32
 8013e5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013e5c:	4620      	mov	r0, r4
 8013e5e:	4798      	blx	r3
 8013e60:	4b0f      	ldr	r3, [pc, #60]	@ (8013ea0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8013e62:	681b      	ldr	r3, [r3, #0]
 8013e64:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8013e68:	b10a      	cbz	r2, 8013e6e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8013e6a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8013e6c:	b900      	cbnz	r0, 8013e70 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8013e6e:	6898      	ldr	r0, [r3, #8]
 8013e70:	6801      	ldr	r1, [r0, #0]
 8013e72:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8013e76:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013e7a:	2501      	movs	r5, #1
 8013e7c:	9502      	str	r5, [sp, #8]
 8013e7e:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 8013e82:	9401      	str	r4, [sp, #4]
 8013e84:	ac06      	add	r4, sp, #24
 8013e86:	9400      	str	r4, [sp, #0]
 8013e88:	688c      	ldr	r4, [r1, #8]
 8013e8a:	a905      	add	r1, sp, #20
 8013e8c:	47a0      	blx	r4
 8013e8e:	b00a      	add	sp, #40	@ 0x28
 8013e90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e94:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 8013e96:	e797      	b.n	8013dc8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8013e98:	2300      	movs	r3, #0
 8013e9a:	9307      	str	r3, [sp, #28]
 8013e9c:	e7ca      	b.n	8013e34 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8013e9e:	bf00      	nop
 8013ea0:	20013f4c 	.word	0x20013f4c

08013ea4 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8013ea4:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 8013ea8:	b12a      	cbz	r2, 8013eb6 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013eaa:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8013eae:	b112      	cbz	r2, 8013eb6 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013eb0:	6803      	ldr	r3, [r0, #0]
 8013eb2:	695b      	ldr	r3, [r3, #20]
 8013eb4:	4718      	bx	r3
 8013eb6:	4770      	bx	lr

08013eb8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8013eb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013ebc:	4b2f      	ldr	r3, [pc, #188]	@ (8013f7c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8013ebe:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8013ec0:	881b      	ldrh	r3, [r3, #0]
 8013ec2:	4293      	cmp	r3, r2
 8013ec4:	b08d      	sub	sp, #52	@ 0x34
 8013ec6:	4604      	mov	r4, r0
 8013ec8:	460f      	mov	r7, r1
 8013eca:	d954      	bls.n	8013f76 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013ecc:	4b2c      	ldr	r3, [pc, #176]	@ (8013f80 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8013ece:	6819      	ldr	r1, [r3, #0]
 8013ed0:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8013ed4:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8013ed8:	4a2a      	ldr	r2, [pc, #168]	@ (8013f84 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8013eda:	6812      	ldr	r2, [r2, #0]
 8013edc:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8013ee0:	2900      	cmp	r1, #0
 8013ee2:	d048      	beq.n	8013f76 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013ee4:	785a      	ldrb	r2, [r3, #1]
 8013ee6:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 8013eea:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8013eee:	4b26      	ldr	r3, [pc, #152]	@ (8013f88 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8013ef0:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 8013ef4:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 8013ef8:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 8013efc:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 8013efe:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 8013f02:	9107      	str	r1, [sp, #28]
 8013f04:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8013f08:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013f0c:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8013f10:	681a      	ldr	r2, [r3, #0]
 8013f12:	f88d 8020 	strb.w	r8, [sp, #32]
 8013f16:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 8013f1a:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 8013f1e:	9609      	str	r6, [sp, #36]	@ 0x24
 8013f20:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 8013f24:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 8013f28:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 8013f2c:	b10b      	cbz	r3, 8013f32 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8013f2e:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 8013f30:	b905      	cbnz	r5, 8013f34 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8013f32:	6895      	ldr	r5, [r2, #8]
 8013f34:	ae05      	add	r6, sp, #20
 8013f36:	4621      	mov	r1, r4
 8013f38:	4630      	mov	r0, r6
 8013f3a:	f003 ffef 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013f3e:	4b13      	ldr	r3, [pc, #76]	@ (8013f8c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8013f40:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8013f42:	6818      	ldr	r0, [r3, #0]
 8013f44:	f7f3 f9aa 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 8013f48:	6823      	ldr	r3, [r4, #0]
 8013f4a:	4680      	mov	r8, r0
 8013f4c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8013f4e:	4620      	mov	r0, r4
 8013f50:	4798      	blx	r3
 8013f52:	6823      	ldr	r3, [r4, #0]
 8013f54:	4681      	mov	r9, r0
 8013f56:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8013f5a:	4620      	mov	r0, r4
 8013f5c:	4798      	blx	r3
 8013f5e:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8013f62:	ab07      	add	r3, sp, #28
 8013f64:	9300      	str	r3, [sp, #0]
 8013f66:	f8cd 8004 	str.w	r8, [sp, #4]
 8013f6a:	463b      	mov	r3, r7
 8013f6c:	e896 0006 	ldmia.w	r6, {r1, r2}
 8013f70:	4628      	mov	r0, r5
 8013f72:	f7f3 f945 	bl	8007200 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013f76:	b00d      	add	sp, #52	@ 0x34
 8013f78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013f7c:	20013fa8 	.word	0x20013fa8
 8013f80:	20013fa4 	.word	0x20013fa4
 8013f84:	20013fac 	.word	0x20013fac
 8013f88:	20013f4c 	.word	0x20013f4c
 8013f8c:	20013fb0 	.word	0x20013fb0

08013f90 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 8013f90:	4770      	bx	lr

08013f92 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 8013f92:	b510      	push	{r4, lr}
 8013f94:	2134      	movs	r1, #52	@ 0x34
 8013f96:	4604      	mov	r4, r0
 8013f98:	f015 fbbc 	bl	8029714 <_ZdlPvj>
 8013f9c:	4620      	mov	r0, r4
 8013f9e:	bd10      	pop	{r4, pc}

08013fa0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8013fa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013fa4:	4604      	mov	r4, r0
 8013fa6:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8013fa8:	8962      	ldrh	r2, [r4, #10]
 8013faa:	b218      	sxth	r0, r3
 8013fac:	460e      	mov	r6, r1
 8013fae:	005b      	lsls	r3, r3, #1
 8013fb0:	8921      	ldrh	r1, [r4, #8]
 8013fb2:	b29b      	uxth	r3, r3
 8013fb4:	1ac9      	subs	r1, r1, r3
 8013fb6:	b08e      	sub	sp, #56	@ 0x38
 8013fb8:	b209      	sxth	r1, r1
 8013fba:	1ad3      	subs	r3, r2, r3
 8013fbc:	b21b      	sxth	r3, r3
 8013fbe:	2900      	cmp	r1, #0
 8013fc0:	f8ad 0000 	strh.w	r0, [sp]
 8013fc4:	f8ad 0002 	strh.w	r0, [sp, #2]
 8013fc8:	f8ad 1004 	strh.w	r1, [sp, #4]
 8013fcc:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013fd0:	dd5e      	ble.n	8014090 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8013fd2:	2b00      	cmp	r3, #0
 8013fd4:	dd5c      	ble.n	8014090 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8013fd6:	6830      	ldr	r0, [r6, #0]
 8013fd8:	6871      	ldr	r1, [r6, #4]
 8013fda:	ab02      	add	r3, sp, #8
 8013fdc:	c303      	stmia	r3!, {r0, r1}
 8013fde:	4669      	mov	r1, sp
 8013fe0:	a802      	add	r0, sp, #8
 8013fe2:	f7fc fd19 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8013fe6:	4620      	mov	r0, r4
 8013fe8:	a902      	add	r1, sp, #8
 8013fea:	f7ff fe6d 	bl	8013cc8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8013fee:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 8013ff0:	2800      	cmp	r0, #0
 8013ff2:	d05f      	beq.n	80140b4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8013ff4:	8963      	ldrh	r3, [r4, #10]
 8013ff6:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013ffa:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013ffe:	1a1f      	subs	r7, r3, r0
 8014000:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8014004:	b202      	sxth	r2, r0
 8014006:	2500      	movs	r5, #0
 8014008:	b21b      	sxth	r3, r3
 801400a:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 801400e:	1a09      	subs	r1, r1, r0
 8014010:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8014014:	9506      	str	r5, [sp, #24]
 8014016:	f8ad 201e 	strh.w	r2, [sp, #30]
 801401a:	f8ad 5020 	strh.w	r5, [sp, #32]
 801401e:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 8014022:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 8014026:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801402a:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 801402e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8014032:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8014036:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801403a:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 801403e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8014042:	af04      	add	r7, sp, #16
 8014044:	ab06      	add	r3, sp, #24
 8014046:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801404a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801404e:	e887 0003 	stmia.w	r7, {r0, r1}
 8014052:	4631      	mov	r1, r6
 8014054:	4638      	mov	r0, r7
 8014056:	f7fc fcdf 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 801405a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801405e:	2b00      	cmp	r3, #0
 8014060:	dd12      	ble.n	8014088 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8014062:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014066:	2b00      	cmp	r3, #0
 8014068:	dd0e      	ble.n	8014088 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801406a:	6823      	ldr	r3, [r4, #0]
 801406c:	4639      	mov	r1, r7
 801406e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014070:	4620      	mov	r0, r4
 8014072:	4798      	blx	r3
 8014074:	f7ee ffb0 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 8014078:	6803      	ldr	r3, [r0, #0]
 801407a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 801407c:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8014080:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8014084:	4639      	mov	r1, r7
 8014086:	47c0      	blx	r8
 8014088:	3501      	adds	r5, #1
 801408a:	2d04      	cmp	r5, #4
 801408c:	d1da      	bne.n	8014044 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 801408e:	e011      	b.n	80140b4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8014090:	6830      	ldr	r0, [r6, #0]
 8014092:	6871      	ldr	r1, [r6, #4]
 8014094:	ab06      	add	r3, sp, #24
 8014096:	c303      	stmia	r3!, {r0, r1}
 8014098:	6823      	ldr	r3, [r4, #0]
 801409a:	a906      	add	r1, sp, #24
 801409c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801409e:	4620      	mov	r0, r4
 80140a0:	4798      	blx	r3
 80140a2:	f7ee ff99 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 80140a6:	6803      	ldr	r3, [r0, #0]
 80140a8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80140aa:	6a1d      	ldr	r5, [r3, #32]
 80140ac:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80140b0:	a906      	add	r1, sp, #24
 80140b2:	47a8      	blx	r5
 80140b4:	b00e      	add	sp, #56	@ 0x38
 80140b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080140ba <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80140ba:	4770      	bx	lr

080140bc <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80140bc:	b510      	push	{r4, lr}
 80140be:	2148      	movs	r1, #72	@ 0x48
 80140c0:	4604      	mov	r4, r0
 80140c2:	f015 fb27 	bl	8029714 <_ZdlPvj>
 80140c6:	4620      	mov	r0, r4
 80140c8:	bd10      	pop	{r4, pc}
	...

080140cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80140cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80140d0:	b08d      	sub	sp, #52	@ 0x34
 80140d2:	4604      	mov	r4, r0
 80140d4:	460f      	mov	r7, r1
 80140d6:	f7ff fe6d 	bl	8013db4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80140da:	4a55      	ldr	r2, [pc, #340]	@ (8014230 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80140dc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80140de:	8812      	ldrh	r2, [r2, #0]
 80140e0:	429a      	cmp	r2, r3
 80140e2:	f240 8082 	bls.w	80141ea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80140e6:	4d53      	ldr	r5, [pc, #332]	@ (8014234 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80140e8:	682a      	ldr	r2, [r5, #0]
 80140ea:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80140ee:	4b52      	ldr	r3, [pc, #328]	@ (8014238 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80140f0:	681b      	ldr	r3, [r3, #0]
 80140f2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80140f6:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
 80140fa:	2200      	movs	r2, #0
 80140fc:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8014100:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 8014104:	2a03      	cmp	r2, #3
 8014106:	d811      	bhi.n	801412c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8014108:	e8df f002 	tbb	[pc, r2]
 801410c:	89727902 	.word	0x89727902
 8014110:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8014114:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8014118:	1ad2      	subs	r2, r2, r3
 801411a:	2002      	movs	r0, #2
 801411c:	f8ad 1010 	strh.w	r1, [sp, #16]
 8014120:	fb92 f2f0 	sdiv	r2, r2, r0
 8014124:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014128:	f8ad 200e 	strh.w	r2, [sp, #14]
 801412c:	f10d 080c 	add.w	r8, sp, #12
 8014130:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014134:	f10d 0914 	add.w	r9, sp, #20
 8014138:	e889 0003 	stmia.w	r9, {r0, r1}
 801413c:	4639      	mov	r1, r7
 801413e:	4648      	mov	r0, r9
 8014140:	f7fc fc6a 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8014144:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014148:	2b00      	cmp	r3, #0
 801414a:	dd4e      	ble.n	80141ea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 801414c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8014150:	2b00      	cmp	r3, #0
 8014152:	dd4a      	ble.n	80141ea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8014154:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014158:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801415c:	1a9b      	subs	r3, r3, r2
 801415e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8014162:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8014166:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 801416a:	1a9b      	subs	r3, r3, r2
 801416c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8014170:	6823      	ldr	r3, [r4, #0]
 8014172:	4641      	mov	r1, r8
 8014174:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014176:	4620      	mov	r0, r4
 8014178:	4798      	blx	r3
 801417a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 801417e:	2b00      	cmp	r3, #0
 8014180:	d053      	beq.n	801422a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8014182:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8014184:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
 8014186:	682b      	ldr	r3, [r5, #0]
 8014188:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
 801418c:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
 8014190:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8014194:	785b      	ldrb	r3, [r3, #1]
 8014196:	9209      	str	r2, [sp, #36]	@ 0x24
 8014198:	f3c3 0501 	ubfx	r5, r3, #0, #2
 801419c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80141a0:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 80141a4:	2300      	movs	r3, #0
 80141a6:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80141aa:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
 80141ae:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 80141b2:	4b22      	ldr	r3, [pc, #136]	@ (801423c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80141b4:	9607      	str	r6, [sp, #28]
 80141b6:	681b      	ldr	r3, [r3, #0]
 80141b8:	f88d 5020 	strb.w	r5, [sp, #32]
 80141bc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80141c0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 80141c4:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 80141c8:	b10a      	cbz	r2, 80141ce <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 80141ca:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 80141cc:	b904      	cbnz	r4, 80141d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 80141ce:	689c      	ldr	r4, [r3, #8]
 80141d0:	4b1b      	ldr	r3, [pc, #108]	@ (8014240 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80141d2:	6818      	ldr	r0, [r3, #0]
 80141d4:	f7f3 f862 	bl	800729c <_ZNK8touchgfx5Texts7getTextEt>
 80141d8:	ab07      	add	r3, sp, #28
 80141da:	9001      	str	r0, [sp, #4]
 80141dc:	9300      	str	r3, [sp, #0]
 80141de:	e898 0006 	ldmia.w	r8, {r1, r2}
 80141e2:	464b      	mov	r3, r9
 80141e4:	4620      	mov	r0, r4
 80141e6:	f7f3 f80b 	bl	8007200 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80141ea:	b00d      	add	sp, #52	@ 0x34
 80141ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80141f0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80141f4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80141f8:	1ad2      	subs	r2, r2, r3
 80141fa:	3201      	adds	r2, #1
 80141fc:	e78d      	b.n	801411a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80141fe:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8014202:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8014206:	1ad2      	subs	r2, r2, r3
 8014208:	3201      	adds	r2, #1
 801420a:	2002      	movs	r0, #2
 801420c:	f8ad 3010 	strh.w	r3, [sp, #16]
 8014210:	fb92 f2f0 	sdiv	r2, r2, r0
 8014214:	f8ad 1012 	strh.w	r1, [sp, #18]
 8014218:	f8ad 200c 	strh.w	r2, [sp, #12]
 801421c:	e786      	b.n	801412c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801421e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8014222:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8014226:	1ad2      	subs	r2, r2, r3
 8014228:	e7ef      	b.n	801420a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 801422a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 801422c:	e7aa      	b.n	8014184 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801422e:	bf00      	nop
 8014230:	20013fa8 	.word	0x20013fa8
 8014234:	20013fa4 	.word	0x20013fa4
 8014238:	20013fac 	.word	0x20013fac
 801423c:	20013f4c 	.word	0x20013f4c
 8014240:	20013fb0 	.word	0x20013fb0

08014244 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8014244:	b510      	push	{r4, lr}
 8014246:	2101      	movs	r1, #1
 8014248:	4c13      	ldr	r4, [pc, #76]	@ (8014298 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 801424a:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 801424e:	2200      	movs	r2, #0
 8014250:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 8014254:	6004      	str	r4, [r0, #0]
 8014256:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 801425a:	4c10      	ldr	r4, [pc, #64]	@ (801429c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 801425c:	8082      	strh	r2, [r0, #4]
 801425e:	80c2      	strh	r2, [r0, #6]
 8014260:	8102      	strh	r2, [r0, #8]
 8014262:	8142      	strh	r2, [r0, #10]
 8014264:	8182      	strh	r2, [r0, #12]
 8014266:	81c2      	strh	r2, [r0, #14]
 8014268:	8202      	strh	r2, [r0, #16]
 801426a:	8242      	strh	r2, [r0, #18]
 801426c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8014270:	61c2      	str	r2, [r0, #28]
 8014272:	8402      	strh	r2, [r0, #32]
 8014274:	8442      	strh	r2, [r0, #34]	@ 0x22
 8014276:	6282      	str	r2, [r0, #40]	@ 0x28
 8014278:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 801427c:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 801427e:	8601      	strh	r1, [r0, #48]	@ 0x30
 8014280:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 8014284:	6344      	str	r4, [r0, #52]	@ 0x34
 8014286:	8701      	strh	r1, [r0, #56]	@ 0x38
 8014288:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801428c:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
 8014290:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
 8014294:	bd10      	pop	{r4, pc}
 8014296:	bf00      	nop
 8014298:	0802e524 	.word	0x0802e524
 801429c:	0802d030 	.word	0x0802d030

080142a0 <_ZN8touchgfx7OutlineD1Ev>:
 80142a0:	4770      	bx	lr

080142a2 <_ZN8touchgfx7OutlineD0Ev>:
 80142a2:	b510      	push	{r4, lr}
 80142a4:	2130      	movs	r1, #48	@ 0x30
 80142a6:	4604      	mov	r4, r0
 80142a8:	f015 fa34 	bl	8029714 <_ZdlPvj>
 80142ac:	4620      	mov	r0, r4
 80142ae:	bd10      	pop	{r4, pc}

080142b0 <_ZN8touchgfx7Outline5resetEv>:
 80142b0:	b510      	push	{r4, lr}
 80142b2:	4604      	mov	r4, r0
 80142b4:	f000 fe82 	bl	8014fbc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80142b8:	60e0      	str	r0, [r4, #12]
 80142ba:	f000 fe85 	bl	8014fc8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80142be:	68e3      	ldr	r3, [r4, #12]
 80142c0:	6123      	str	r3, [r4, #16]
 80142c2:	08c0      	lsrs	r0, r0, #3
 80142c4:	2200      	movs	r2, #0
 80142c6:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 80142ca:	3801      	subs	r0, #1
 80142cc:	6060      	str	r0, [r4, #4]
 80142ce:	60a2      	str	r2, [r4, #8]
 80142d0:	8019      	strh	r1, [r3, #0]
 80142d2:	8059      	strh	r1, [r3, #2]
 80142d4:	809a      	strh	r2, [r3, #4]
 80142d6:	80da      	strh	r2, [r3, #6]
 80142d8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80142da:	f023 0301 	bic.w	r3, r3, #1
 80142de:	f043 0302 	orr.w	r3, r3, #2
 80142e2:	6263      	str	r3, [r4, #36]	@ 0x24
 80142e4:	bd10      	pop	{r4, pc}
	...

080142e8 <_ZN8touchgfx7OutlineC1Ev>:
 80142e8:	b510      	push	{r4, lr}
 80142ea:	4b0a      	ldr	r3, [pc, #40]	@ (8014314 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80142ec:	6003      	str	r3, [r0, #0]
 80142ee:	2300      	movs	r3, #0
 80142f0:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80142f4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80142f8:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80142fc:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8014300:	6243      	str	r3, [r0, #36]	@ 0x24
 8014302:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8014306:	4604      	mov	r4, r0
 8014308:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 801430c:	f7ff ffd0 	bl	80142b0 <_ZN8touchgfx7Outline5resetEv>
 8014310:	4620      	mov	r0, r4
 8014312:	bd10      	pop	{r4, pc}
 8014314:	0802e598 	.word	0x0802e598

08014318 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8014318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801431c:	b093      	sub	sp, #76	@ 0x4c
 801431e:	1156      	asrs	r6, r2, #5
 8014320:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8014322:	9305      	str	r3, [sp, #20]
 8014324:	f004 051f 	and.w	r5, r4, #31
 8014328:	1153      	asrs	r3, r2, #5
 801432a:	9504      	str	r5, [sp, #16]
 801432c:	1165      	asrs	r5, r4, #5
 801432e:	9303      	str	r3, [sp, #12]
 8014330:	42ae      	cmp	r6, r5
 8014332:	ea4f 1364 	mov.w	r3, r4, asr #5
 8014336:	9306      	str	r3, [sp, #24]
 8014338:	f002 031f 	and.w	r3, r2, #31
 801433c:	f040 80f8 	bne.w	8014530 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8014340:	9c04      	ldr	r4, [sp, #16]
 8014342:	9a05      	ldr	r2, [sp, #20]
 8014344:	42a3      	cmp	r3, r4
 8014346:	ea4f 1e62 	mov.w	lr, r2, asr #5
 801434a:	6902      	ldr	r2, [r0, #16]
 801434c:	d125      	bne.n	801439a <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801434e:	f9b2 3000 	ldrsh.w	r3, [r2]
 8014352:	459e      	cmp	lr, r3
 8014354:	d103      	bne.n	801435e <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8014356:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801435a:	429e      	cmp	r6, r3
 801435c:	d035      	beq.n	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801435e:	88d1      	ldrh	r1, [r2, #6]
 8014360:	8893      	ldrh	r3, [r2, #4]
 8014362:	430b      	orrs	r3, r1
 8014364:	d010      	beq.n	8014388 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014366:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801436a:	2b00      	cmp	r3, #0
 801436c:	db0c      	blt.n	8014388 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801436e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8014370:	428b      	cmp	r3, r1
 8014372:	da09      	bge.n	8014388 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014374:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014378:	428b      	cmp	r3, r1
 801437a:	bf38      	it	cc
 801437c:	3208      	addcc	r2, #8
 801437e:	f103 0301 	add.w	r3, r3, #1
 8014382:	bf38      	it	cc
 8014384:	6102      	strcc	r2, [r0, #16]
 8014386:	6083      	str	r3, [r0, #8]
 8014388:	6903      	ldr	r3, [r0, #16]
 801438a:	9a03      	ldr	r2, [sp, #12]
 801438c:	f8a3 e000 	strh.w	lr, [r3]
 8014390:	805a      	strh	r2, [r3, #2]
 8014392:	2200      	movs	r2, #0
 8014394:	809a      	strh	r2, [r3, #4]
 8014396:	80da      	strh	r2, [r3, #6]
 8014398:	e017      	b.n	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801439a:	9c05      	ldr	r4, [sp, #20]
 801439c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80143a0:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80143a4:	f004 041f 	and.w	r4, r4, #31
 80143a8:	114e      	asrs	r6, r1, #5
 80143aa:	9402      	str	r4, [sp, #8]
 80143ac:	9c04      	ldr	r4, [sp, #16]
 80143ae:	4576      	cmp	r6, lr
 80143b0:	f001 0c1f 	and.w	ip, r1, #31
 80143b4:	eba4 0403 	sub.w	r4, r4, r3
 80143b8:	d10a      	bne.n	80143d0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80143ba:	9b02      	ldr	r3, [sp, #8]
 80143bc:	449c      	add	ip, r3
 80143be:	44a0      	add	r8, r4
 80143c0:	fb04 a40c 	mla	r4, r4, ip, sl
 80143c4:	f8a2 8004 	strh.w	r8, [r2, #4]
 80143c8:	80d4      	strh	r4, [r2, #6]
 80143ca:	b013      	add	sp, #76	@ 0x4c
 80143cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80143d0:	9d05      	ldr	r5, [sp, #20]
 80143d2:	1a69      	subs	r1, r5, r1
 80143d4:	bf5b      	ittet	pl
 80143d6:	f1cc 0520 	rsbpl	r5, ip, #32
 80143da:	436c      	mulpl	r4, r5
 80143dc:	2500      	movmi	r5, #0
 80143de:	2520      	movpl	r5, #32
 80143e0:	bf44      	itt	mi
 80143e2:	fb04 f40c 	mulmi.w	r4, r4, ip
 80143e6:	4249      	negmi	r1, r1
 80143e8:	9501      	str	r5, [sp, #4]
 80143ea:	9f01      	ldr	r7, [sp, #4]
 80143ec:	fb94 f5f1 	sdiv	r5, r4, r1
 80143f0:	fb01 4415 	mls	r4, r1, r5, r4
 80143f4:	bf54      	ite	pl
 80143f6:	f04f 0901 	movpl.w	r9, #1
 80143fa:	f04f 39ff 	movmi.w	r9, #4294967295
 80143fe:	2c00      	cmp	r4, #0
 8014400:	bfb8      	it	lt
 8014402:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014406:	44bc      	add	ip, r7
 8014408:	44a8      	add	r8, r5
 801440a:	fb05 ac0c 	mla	ip, r5, ip, sl
 801440e:	f8a2 8004 	strh.w	r8, [r2, #4]
 8014412:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014416:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801441a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801441e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8014422:	bfb8      	it	lt
 8014424:	1864      	addlt	r4, r4, r1
 8014426:	ea58 0202 	orrs.w	r2, r8, r2
 801442a:	444e      	add	r6, r9
 801442c:	d011      	beq.n	8014452 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801442e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014432:	f1b8 0f00 	cmp.w	r8, #0
 8014436:	db0c      	blt.n	8014452 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014438:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 801443a:	4590      	cmp	r8, r2
 801443c:	da09      	bge.n	8014452 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801443e:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8014442:	4590      	cmp	r8, r2
 8014444:	bf3c      	itt	cc
 8014446:	f10c 0208 	addcc.w	r2, ip, #8
 801444a:	6102      	strcc	r2, [r0, #16]
 801444c:	f108 0201 	add.w	r2, r8, #1
 8014450:	6082      	str	r2, [r0, #8]
 8014452:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014456:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801445a:	f8ac 6000 	strh.w	r6, [ip]
 801445e:	2700      	movs	r7, #0
 8014460:	45b6      	cmp	lr, r6
 8014462:	f8ac 2002 	strh.w	r2, [ip, #2]
 8014466:	f8ac 7004 	strh.w	r7, [ip, #4]
 801446a:	f8ac 7006 	strh.w	r7, [ip, #6]
 801446e:	442b      	add	r3, r5
 8014470:	d04d      	beq.n	801450e <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8014472:	9f04      	ldr	r7, [sp, #16]
 8014474:	1aff      	subs	r7, r7, r3
 8014476:	443d      	add	r5, r7
 8014478:	016d      	lsls	r5, r5, #5
 801447a:	fb95 f8f1 	sdiv	r8, r5, r1
 801447e:	fb01 5518 	mls	r5, r1, r8, r5
 8014482:	2d00      	cmp	r5, #0
 8014484:	bfb8      	it	lt
 8014486:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801448a:	f108 0701 	add.w	r7, r8, #1
 801448e:	bfb8      	it	lt
 8014490:	186d      	addlt	r5, r5, r1
 8014492:	1a64      	subs	r4, r4, r1
 8014494:	9703      	str	r7, [sp, #12]
 8014496:	f04f 0a00 	mov.w	sl, #0
 801449a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801449e:	1964      	adds	r4, r4, r5
 80144a0:	bf58      	it	pl
 80144a2:	9f03      	ldrpl	r7, [sp, #12]
 80144a4:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80144a8:	bf48      	it	mi
 80144aa:	4647      	movmi	r7, r8
 80144ac:	44bb      	add	fp, r7
 80144ae:	f8ac b004 	strh.w	fp, [ip, #4]
 80144b2:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80144b6:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80144ba:	f8ac b006 	strh.w	fp, [ip, #6]
 80144be:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80144c2:	443b      	add	r3, r7
 80144c4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80144c8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80144cc:	bf58      	it	pl
 80144ce:	1a64      	subpl	r4, r4, r1
 80144d0:	ea5b 0707 	orrs.w	r7, fp, r7
 80144d4:	444e      	add	r6, r9
 80144d6:	d011      	beq.n	80144fc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80144d8:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80144dc:	f1bb 0f00 	cmp.w	fp, #0
 80144e0:	db0c      	blt.n	80144fc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80144e2:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80144e4:	45bb      	cmp	fp, r7
 80144e6:	da09      	bge.n	80144fc <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80144e8:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80144ec:	45bb      	cmp	fp, r7
 80144ee:	bf3c      	itt	cc
 80144f0:	f10c 0708 	addcc.w	r7, ip, #8
 80144f4:	6107      	strcc	r7, [r0, #16]
 80144f6:	f10b 0701 	add.w	r7, fp, #1
 80144fa:	6087      	str	r7, [r0, #8]
 80144fc:	6907      	ldr	r7, [r0, #16]
 80144fe:	45b6      	cmp	lr, r6
 8014500:	803e      	strh	r6, [r7, #0]
 8014502:	807a      	strh	r2, [r7, #2]
 8014504:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014508:	f8a7 a006 	strh.w	sl, [r7, #6]
 801450c:	d1c5      	bne.n	801449a <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801450e:	9a04      	ldr	r2, [sp, #16]
 8014510:	1ad3      	subs	r3, r2, r3
 8014512:	6902      	ldr	r2, [r0, #16]
 8014514:	8891      	ldrh	r1, [r2, #4]
 8014516:	88d6      	ldrh	r6, [r2, #6]
 8014518:	4419      	add	r1, r3
 801451a:	8091      	strh	r1, [r2, #4]
 801451c:	9902      	ldr	r1, [sp, #8]
 801451e:	f101 0c20 	add.w	ip, r1, #32
 8014522:	9901      	ldr	r1, [sp, #4]
 8014524:	ebac 0c01 	sub.w	ip, ip, r1
 8014528:	fb03 630c 	mla	r3, r3, ip, r6
 801452c:	80d3      	strh	r3, [r2, #6]
 801452e:	e74c      	b.n	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014530:	9d05      	ldr	r5, [sp, #20]
 8014532:	1aa2      	subs	r2, r4, r2
 8014534:	eba5 0501 	sub.w	r5, r5, r1
 8014538:	9508      	str	r5, [sp, #32]
 801453a:	9202      	str	r2, [sp, #8]
 801453c:	f140 8128 	bpl.w	8014790 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8014540:	9a03      	ldr	r2, [sp, #12]
 8014542:	2a00      	cmp	r2, #0
 8014544:	f6ff af41 	blt.w	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014548:	9a02      	ldr	r2, [sp, #8]
 801454a:	4252      	negs	r2, r2
 801454c:	9202      	str	r2, [sp, #8]
 801454e:	9a06      	ldr	r2, [sp, #24]
 8014550:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8014554:	f04f 34ff 	mov.w	r4, #4294967295
 8014558:	9206      	str	r2, [sp, #24]
 801455a:	462a      	mov	r2, r5
 801455c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801455e:	435a      	muls	r2, r3
 8014560:	2400      	movs	r4, #0
 8014562:	9d02      	ldr	r5, [sp, #8]
 8014564:	9401      	str	r4, [sp, #4]
 8014566:	9c02      	ldr	r4, [sp, #8]
 8014568:	fb92 f4f4 	sdiv	r4, r2, r4
 801456c:	fb05 2214 	mls	r2, r5, r4, r2
 8014570:	2a00      	cmp	r2, #0
 8014572:	9207      	str	r2, [sp, #28]
 8014574:	bfbc      	itt	lt
 8014576:	1952      	addlt	r2, r2, r5
 8014578:	9207      	strlt	r2, [sp, #28]
 801457a:	9a01      	ldr	r2, [sp, #4]
 801457c:	6905      	ldr	r5, [r0, #16]
 801457e:	bfb8      	it	lt
 8014580:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014584:	eb04 0901 	add.w	r9, r4, r1
 8014588:	429a      	cmp	r2, r3
 801458a:	ea4f 1669 	mov.w	r6, r9, asr #5
 801458e:	f040 8112 	bne.w	80147b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8014592:	f9b5 3000 	ldrsh.w	r3, [r5]
 8014596:	429e      	cmp	r6, r3
 8014598:	d104      	bne.n	80145a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 801459a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801459e:	9a03      	ldr	r2, [sp, #12]
 80145a0:	429a      	cmp	r2, r3
 80145a2:	d01b      	beq.n	80145dc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80145a4:	88ea      	ldrh	r2, [r5, #6]
 80145a6:	88ab      	ldrh	r3, [r5, #4]
 80145a8:	4313      	orrs	r3, r2
 80145aa:	d010      	beq.n	80145ce <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80145ac:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80145b0:	2a00      	cmp	r2, #0
 80145b2:	db0c      	blt.n	80145ce <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80145b4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80145b6:	429a      	cmp	r2, r3
 80145b8:	da09      	bge.n	80145ce <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80145ba:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80145be:	429a      	cmp	r2, r3
 80145c0:	bf38      	it	cc
 80145c2:	3508      	addcc	r5, #8
 80145c4:	f102 0201 	add.w	r2, r2, #1
 80145c8:	bf38      	it	cc
 80145ca:	6105      	strcc	r5, [r0, #16]
 80145cc:	6082      	str	r2, [r0, #8]
 80145ce:	6903      	ldr	r3, [r0, #16]
 80145d0:	9a03      	ldr	r2, [sp, #12]
 80145d2:	805a      	strh	r2, [r3, #2]
 80145d4:	2200      	movs	r2, #0
 80145d6:	801e      	strh	r6, [r3, #0]
 80145d8:	809a      	strh	r2, [r3, #4]
 80145da:	80da      	strh	r2, [r3, #6]
 80145dc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80145de:	9a03      	ldr	r2, [sp, #12]
 80145e0:	6901      	ldr	r1, [r0, #16]
 80145e2:	441a      	add	r2, r3
 80145e4:	f9b1 3000 	ldrsh.w	r3, [r1]
 80145e8:	42b3      	cmp	r3, r6
 80145ea:	d103      	bne.n	80145f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80145ec:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80145f0:	429a      	cmp	r2, r3
 80145f2:	d01a      	beq.n	801462a <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80145f4:	88cc      	ldrh	r4, [r1, #6]
 80145f6:	888b      	ldrh	r3, [r1, #4]
 80145f8:	4323      	orrs	r3, r4
 80145fa:	d010      	beq.n	801461e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80145fc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8014600:	2c00      	cmp	r4, #0
 8014602:	db0c      	blt.n	801461e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014604:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8014606:	429c      	cmp	r4, r3
 8014608:	da09      	bge.n	801461e <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 801460a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801460e:	429c      	cmp	r4, r3
 8014610:	bf38      	it	cc
 8014612:	3108      	addcc	r1, #8
 8014614:	f104 0401 	add.w	r4, r4, #1
 8014618:	bf38      	it	cc
 801461a:	6101      	strcc	r1, [r0, #16]
 801461c:	6084      	str	r4, [r0, #8]
 801461e:	6903      	ldr	r3, [r0, #16]
 8014620:	2100      	movs	r1, #0
 8014622:	801e      	strh	r6, [r3, #0]
 8014624:	805a      	strh	r2, [r3, #2]
 8014626:	8099      	strh	r1, [r3, #4]
 8014628:	80d9      	strh	r1, [r3, #6]
 801462a:	9b06      	ldr	r3, [sp, #24]
 801462c:	4293      	cmp	r3, r2
 801462e:	f000 8082 	beq.w	8014736 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8014632:	9b08      	ldr	r3, [sp, #32]
 8014634:	9c02      	ldr	r4, [sp, #8]
 8014636:	9902      	ldr	r1, [sp, #8]
 8014638:	015b      	lsls	r3, r3, #5
 801463a:	fb93 f1f1 	sdiv	r1, r3, r1
 801463e:	fb04 3311 	mls	r3, r4, r1, r3
 8014642:	2b00      	cmp	r3, #0
 8014644:	9103      	str	r1, [sp, #12]
 8014646:	9308      	str	r3, [sp, #32]
 8014648:	da04      	bge.n	8014654 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 801464a:	1e4b      	subs	r3, r1, #1
 801464c:	9303      	str	r3, [sp, #12]
 801464e:	9b08      	ldr	r3, [sp, #32]
 8014650:	4423      	add	r3, r4
 8014652:	9308      	str	r3, [sp, #32]
 8014654:	9b07      	ldr	r3, [sp, #28]
 8014656:	9902      	ldr	r1, [sp, #8]
 8014658:	1a5b      	subs	r3, r3, r1
 801465a:	9307      	str	r3, [sp, #28]
 801465c:	9b01      	ldr	r3, [sp, #4]
 801465e:	f1c3 0320 	rsb	r3, r3, #32
 8014662:	930e      	str	r3, [sp, #56]	@ 0x38
 8014664:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8014666:	9b01      	ldr	r3, [sp, #4]
 8014668:	1a5b      	subs	r3, r3, r1
 801466a:	464f      	mov	r7, r9
 801466c:	930a      	str	r3, [sp, #40]	@ 0x28
 801466e:	2600      	movs	r6, #0
 8014670:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8014674:	185b      	adds	r3, r3, r1
 8014676:	bf58      	it	pl
 8014678:	9902      	ldrpl	r1, [sp, #8]
 801467a:	9307      	str	r3, [sp, #28]
 801467c:	bf5d      	ittte	pl
 801467e:	1a5b      	subpl	r3, r3, r1
 8014680:	9307      	strpl	r3, [sp, #28]
 8014682:	9b03      	ldrpl	r3, [sp, #12]
 8014684:	9903      	ldrmi	r1, [sp, #12]
 8014686:	bf58      	it	pl
 8014688:	1c59      	addpl	r1, r3, #1
 801468a:	4489      	add	r9, r1
 801468c:	2a00      	cmp	r2, #0
 801468e:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8014692:	db2e      	blt.n	80146f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014694:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8014696:	4293      	cmp	r3, r2
 8014698:	dd2b      	ble.n	80146f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801469a:	9c01      	ldr	r4, [sp, #4]
 801469c:	6905      	ldr	r5, [r0, #16]
 801469e:	46a0      	mov	r8, r4
 80146a0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80146a2:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80146a6:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80146aa:	45a0      	cmp	r8, r4
 80146ac:	f040 814f 	bne.w	801494e <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80146b0:	f9b5 1000 	ldrsh.w	r1, [r5]
 80146b4:	4551      	cmp	r1, sl
 80146b6:	d103      	bne.n	80146c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80146b8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80146bc:	4291      	cmp	r1, r2
 80146be:	d018      	beq.n	80146f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80146c0:	ea5c 010e 	orrs.w	r1, ip, lr
 80146c4:	d00f      	beq.n	80146e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80146c6:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80146ca:	2900      	cmp	r1, #0
 80146cc:	db0b      	blt.n	80146e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80146ce:	428b      	cmp	r3, r1
 80146d0:	dd09      	ble.n	80146e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80146d2:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80146d6:	4299      	cmp	r1, r3
 80146d8:	bf38      	it	cc
 80146da:	3508      	addcc	r5, #8
 80146dc:	f101 0101 	add.w	r1, r1, #1
 80146e0:	bf38      	it	cc
 80146e2:	6105      	strcc	r5, [r0, #16]
 80146e4:	6081      	str	r1, [r0, #8]
 80146e6:	6903      	ldr	r3, [r0, #16]
 80146e8:	f8a3 a000 	strh.w	sl, [r3]
 80146ec:	805a      	strh	r2, [r3, #2]
 80146ee:	809e      	strh	r6, [r3, #4]
 80146f0:	80de      	strh	r6, [r3, #6]
 80146f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80146f4:	6901      	ldr	r1, [r0, #16]
 80146f6:	441a      	add	r2, r3
 80146f8:	88cc      	ldrh	r4, [r1, #6]
 80146fa:	888b      	ldrh	r3, [r1, #4]
 80146fc:	4323      	orrs	r3, r4
 80146fe:	d010      	beq.n	8014722 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014700:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8014704:	2c00      	cmp	r4, #0
 8014706:	db0c      	blt.n	8014722 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014708:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801470a:	429c      	cmp	r4, r3
 801470c:	da09      	bge.n	8014722 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801470e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8014712:	429c      	cmp	r4, r3
 8014714:	bf38      	it	cc
 8014716:	3108      	addcc	r1, #8
 8014718:	f104 0401 	add.w	r4, r4, #1
 801471c:	bf38      	it	cc
 801471e:	6101      	strcc	r1, [r0, #16]
 8014720:	6084      	str	r4, [r0, #8]
 8014722:	6903      	ldr	r3, [r0, #16]
 8014724:	f8a3 a000 	strh.w	sl, [r3]
 8014728:	805a      	strh	r2, [r3, #2]
 801472a:	809e      	strh	r6, [r3, #4]
 801472c:	80de      	strh	r6, [r3, #6]
 801472e:	9b06      	ldr	r3, [sp, #24]
 8014730:	4293      	cmp	r3, r2
 8014732:	464f      	mov	r7, r9
 8014734:	d19c      	bne.n	8014670 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8014736:	9b01      	ldr	r3, [sp, #4]
 8014738:	6907      	ldr	r7, [r0, #16]
 801473a:	f1c3 0620 	rsb	r6, r3, #32
 801473e:	9b05      	ldr	r3, [sp, #20]
 8014740:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8014744:	9b04      	ldr	r3, [sp, #16]
 8014746:	429e      	cmp	r6, r3
 8014748:	f040 81cc 	bne.w	8014ae4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 801474c:	f9b7 3000 	ldrsh.w	r3, [r7]
 8014750:	459e      	cmp	lr, r3
 8014752:	d104      	bne.n	801475e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8014754:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014758:	429a      	cmp	r2, r3
 801475a:	f43f ae36 	beq.w	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801475e:	88f9      	ldrh	r1, [r7, #6]
 8014760:	88bb      	ldrh	r3, [r7, #4]
 8014762:	430b      	orrs	r3, r1
 8014764:	d010      	beq.n	8014788 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014766:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801476a:	2b00      	cmp	r3, #0
 801476c:	db0c      	blt.n	8014788 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801476e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8014770:	428b      	cmp	r3, r1
 8014772:	da09      	bge.n	8014788 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014774:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014778:	428b      	cmp	r3, r1
 801477a:	bf38      	it	cc
 801477c:	3708      	addcc	r7, #8
 801477e:	f103 0301 	add.w	r3, r3, #1
 8014782:	bf38      	it	cc
 8014784:	6107      	strcc	r7, [r0, #16]
 8014786:	6083      	str	r3, [r0, #8]
 8014788:	6903      	ldr	r3, [r0, #16]
 801478a:	f8a3 e000 	strh.w	lr, [r3]
 801478e:	e5ff      	b.n	8014390 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8014790:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8014792:	9c03      	ldr	r4, [sp, #12]
 8014794:	42a2      	cmp	r2, r4
 8014796:	f6ff ae18 	blt.w	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801479a:	9c06      	ldr	r4, [sp, #24]
 801479c:	42a2      	cmp	r2, r4
 801479e:	bfb8      	it	lt
 80147a0:	3201      	addlt	r2, #1
 80147a2:	9c08      	ldr	r4, [sp, #32]
 80147a4:	bfb8      	it	lt
 80147a6:	9206      	strlt	r2, [sp, #24]
 80147a8:	f1c3 0220 	rsb	r2, r3, #32
 80147ac:	4362      	muls	r2, r4
 80147ae:	2401      	movs	r4, #1
 80147b0:	940b      	str	r4, [sp, #44]	@ 0x2c
 80147b2:	2420      	movs	r4, #32
 80147b4:	e6d5      	b.n	8014562 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80147b6:	f009 021f 	and.w	r2, r9, #31
 80147ba:	ea4f 1861 	mov.w	r8, r1, asr #5
 80147be:	920c      	str	r2, [sp, #48]	@ 0x30
 80147c0:	9a01      	ldr	r2, [sp, #4]
 80147c2:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80147c6:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80147ca:	45b0      	cmp	r8, r6
 80147cc:	f001 011f 	and.w	r1, r1, #31
 80147d0:	eba2 0203 	sub.w	r2, r2, r3
 80147d4:	d108      	bne.n	80147e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80147d6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80147d8:	4419      	add	r1, r3
 80147da:	4496      	add	lr, r2
 80147dc:	fb02 a101 	mla	r1, r2, r1, sl
 80147e0:	f8a5 e004 	strh.w	lr, [r5, #4]
 80147e4:	80e9      	strh	r1, [r5, #6]
 80147e6:	e6f9      	b.n	80145dc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80147e8:	2c00      	cmp	r4, #0
 80147ea:	f2c0 80a9 	blt.w	8014940 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80147ee:	2701      	movs	r7, #1
 80147f0:	f1c1 0c20 	rsb	ip, r1, #32
 80147f4:	970a      	str	r7, [sp, #40]	@ 0x28
 80147f6:	fb02 f20c 	mul.w	r2, r2, ip
 80147fa:	2720      	movs	r7, #32
 80147fc:	9709      	str	r7, [sp, #36]	@ 0x24
 80147fe:	fb92 fcf4 	sdiv	ip, r2, r4
 8014802:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8014804:	fb04 221c 	mls	r2, r4, ip, r2
 8014808:	2a00      	cmp	r2, #0
 801480a:	bfb8      	it	lt
 801480c:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8014810:	4439      	add	r1, r7
 8014812:	fb0c a101 	mla	r1, ip, r1, sl
 8014816:	80e9      	strh	r1, [r5, #6]
 8014818:	44e6      	add	lr, ip
 801481a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801481c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014820:	eb08 0501 	add.w	r5, r8, r1
 8014824:	6901      	ldr	r1, [r0, #16]
 8014826:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 801482a:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801482e:	bfb8      	it	lt
 8014830:	1912      	addlt	r2, r2, r4
 8014832:	ea58 070e 	orrs.w	r7, r8, lr
 8014836:	d010      	beq.n	801485a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014838:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 801483c:	f1be 0f00 	cmp.w	lr, #0
 8014840:	db0b      	blt.n	801485a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014842:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8014844:	45be      	cmp	lr, r7
 8014846:	da08      	bge.n	801485a <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014848:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 801484c:	45be      	cmp	lr, r7
 801484e:	bf3c      	itt	cc
 8014850:	3108      	addcc	r1, #8
 8014852:	6101      	strcc	r1, [r0, #16]
 8014854:	f10e 0101 	add.w	r1, lr, #1
 8014858:	6081      	str	r1, [r0, #8]
 801485a:	6901      	ldr	r1, [r0, #16]
 801485c:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8014860:	800d      	strh	r5, [r1, #0]
 8014862:	f04f 0e00 	mov.w	lr, #0
 8014866:	42ae      	cmp	r6, r5
 8014868:	f8a1 8002 	strh.w	r8, [r1, #2]
 801486c:	f8a1 e004 	strh.w	lr, [r1, #4]
 8014870:	f8a1 e006 	strh.w	lr, [r1, #6]
 8014874:	4463      	add	r3, ip
 8014876:	d054      	beq.n	8014922 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8014878:	9901      	ldr	r1, [sp, #4]
 801487a:	1ac9      	subs	r1, r1, r3
 801487c:	4461      	add	r1, ip
 801487e:	0149      	lsls	r1, r1, #5
 8014880:	fb91 fef4 	sdiv	lr, r1, r4
 8014884:	fb04 111e 	mls	r1, r4, lr, r1
 8014888:	2900      	cmp	r1, #0
 801488a:	bfb8      	it	lt
 801488c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8014890:	f10e 0701 	add.w	r7, lr, #1
 8014894:	bfb8      	it	lt
 8014896:	1909      	addlt	r1, r1, r4
 8014898:	1b12      	subs	r2, r2, r4
 801489a:	970d      	str	r7, [sp, #52]	@ 0x34
 801489c:	f8d0 a010 	ldr.w	sl, [r0, #16]
 80148a0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80148a2:	f8ba b004 	ldrh.w	fp, [sl, #4]
 80148a6:	1852      	adds	r2, r2, r1
 80148a8:	bf54      	ite	pl
 80148aa:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 80148ae:	46f4      	movmi	ip, lr
 80148b0:	44e3      	add	fp, ip
 80148b2:	f8aa b004 	strh.w	fp, [sl, #4]
 80148b6:	f8ba b006 	ldrh.w	fp, [sl, #6]
 80148ba:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80148be:	f8aa b006 	strh.w	fp, [sl, #6]
 80148c2:	4463      	add	r3, ip
 80148c4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80148c8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80148cc:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80148d0:	bf58      	it	pl
 80148d2:	1b12      	subpl	r2, r2, r4
 80148d4:	443d      	add	r5, r7
 80148d6:	ea5b 070a 	orrs.w	r7, fp, sl
 80148da:	d014      	beq.n	8014906 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80148dc:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80148e0:	f1ba 0f00 	cmp.w	sl, #0
 80148e4:	db0f      	blt.n	8014906 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80148e6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80148e8:	45ba      	cmp	sl, r7
 80148ea:	da0c      	bge.n	8014906 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80148ec:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80148f0:	45ba      	cmp	sl, r7
 80148f2:	bf38      	it	cc
 80148f4:	f10c 0c08 	addcc.w	ip, ip, #8
 80148f8:	f10a 0a01 	add.w	sl, sl, #1
 80148fc:	bf38      	it	cc
 80148fe:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8014902:	f8c0 a008 	str.w	sl, [r0, #8]
 8014906:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801490a:	f04f 0700 	mov.w	r7, #0
 801490e:	42ae      	cmp	r6, r5
 8014910:	f8ac 5000 	strh.w	r5, [ip]
 8014914:	f8ac 8002 	strh.w	r8, [ip, #2]
 8014918:	f8ac 7004 	strh.w	r7, [ip, #4]
 801491c:	f8ac 7006 	strh.w	r7, [ip, #6]
 8014920:	d1bc      	bne.n	801489c <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8014922:	6904      	ldr	r4, [r0, #16]
 8014924:	9a01      	ldr	r2, [sp, #4]
 8014926:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8014928:	1ad3      	subs	r3, r2, r3
 801492a:	88a2      	ldrh	r2, [r4, #4]
 801492c:	441a      	add	r2, r3
 801492e:	80a2      	strh	r2, [r4, #4]
 8014930:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014932:	3120      	adds	r1, #32
 8014934:	1a89      	subs	r1, r1, r2
 8014936:	88e2      	ldrh	r2, [r4, #6]
 8014938:	fb03 2301 	mla	r3, r3, r1, r2
 801493c:	80e3      	strh	r3, [r4, #6]
 801493e:	e64d      	b.n	80145dc <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014940:	f04f 37ff 	mov.w	r7, #4294967295
 8014944:	970a      	str	r7, [sp, #40]	@ 0x28
 8014946:	434a      	muls	r2, r1
 8014948:	4264      	negs	r4, r4
 801494a:	2700      	movs	r7, #0
 801494c:	e756      	b.n	80147fc <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801494e:	ea4f 1867 	mov.w	r8, r7, asr #5
 8014952:	f009 031f 	and.w	r3, r9, #31
 8014956:	45d0      	cmp	r8, sl
 8014958:	f007 071f 	and.w	r7, r7, #31
 801495c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801495e:	fa1f fc8c 	uxth.w	ip, ip
 8014962:	fa1f fe8e 	uxth.w	lr, lr
 8014966:	d10a      	bne.n	801497e <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8014968:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801496a:	449c      	add	ip, r3
 801496c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801496e:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014972:	441f      	add	r7, r3
 8014974:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014976:	fb03 e707 	mla	r7, r3, r7, lr
 801497a:	80ef      	strh	r7, [r5, #6]
 801497c:	e6b9      	b.n	80146f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801497e:	2900      	cmp	r1, #0
 8014980:	f2c0 80a8 	blt.w	8014ad4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8014984:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8014986:	f1c7 0320 	rsb	r3, r7, #32
 801498a:	4363      	muls	r3, r4
 801498c:	2401      	movs	r4, #1
 801498e:	940d      	str	r4, [sp, #52]	@ 0x34
 8014990:	2420      	movs	r4, #32
 8014992:	940c      	str	r4, [sp, #48]	@ 0x30
 8014994:	fb93 f4f1 	sdiv	r4, r3, r1
 8014998:	fb01 3b14 	mls	fp, r1, r4, r3
 801499c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801499e:	f1bb 0f00 	cmp.w	fp, #0
 80149a2:	bfb8      	it	lt
 80149a4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80149a8:	441f      	add	r7, r3
 80149aa:	fb04 e707 	mla	r7, r4, r7, lr
 80149ae:	44a4      	add	ip, r4
 80149b0:	f8a5 c004 	strh.w	ip, [r5, #4]
 80149b4:	80ef      	strh	r7, [r5, #6]
 80149b6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80149ba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80149bc:	f8bc e006 	ldrh.w	lr, [ip, #6]
 80149c0:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80149c4:	bfb8      	it	lt
 80149c6:	448b      	addlt	fp, r1
 80149c8:	eb08 0503 	add.w	r5, r8, r3
 80149cc:	ea5e 0307 	orrs.w	r3, lr, r7
 80149d0:	d011      	beq.n	80149f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80149d2:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80149d6:	f1be 0f00 	cmp.w	lr, #0
 80149da:	db0c      	blt.n	80149f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80149dc:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80149de:	45be      	cmp	lr, r7
 80149e0:	da09      	bge.n	80149f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80149e2:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80149e6:	45be      	cmp	lr, r7
 80149e8:	bf3c      	itt	cc
 80149ea:	f10c 0708 	addcc.w	r7, ip, #8
 80149ee:	6107      	strcc	r7, [r0, #16]
 80149f0:	f10e 0701 	add.w	r7, lr, #1
 80149f4:	6087      	str	r7, [r0, #8]
 80149f6:	6907      	ldr	r7, [r0, #16]
 80149f8:	b213      	sxth	r3, r2
 80149fa:	9310      	str	r3, [sp, #64]	@ 0x40
 80149fc:	807b      	strh	r3, [r7, #2]
 80149fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a00:	803d      	strh	r5, [r7, #0]
 8014a02:	4555      	cmp	r5, sl
 8014a04:	80be      	strh	r6, [r7, #4]
 8014a06:	80fe      	strh	r6, [r7, #6]
 8014a08:	eb04 0c03 	add.w	ip, r4, r3
 8014a0c:	d051      	beq.n	8014ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8014a0e:	9b01      	ldr	r3, [sp, #4]
 8014a10:	eba3 070c 	sub.w	r7, r3, ip
 8014a14:	443c      	add	r4, r7
 8014a16:	0164      	lsls	r4, r4, #5
 8014a18:	fb94 f8f1 	sdiv	r8, r4, r1
 8014a1c:	fb01 4418 	mls	r4, r1, r8, r4
 8014a20:	2c00      	cmp	r4, #0
 8014a22:	bfb8      	it	lt
 8014a24:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014a28:	ebab 0301 	sub.w	r3, fp, r1
 8014a2c:	f108 0701 	add.w	r7, r8, #1
 8014a30:	bfb8      	it	lt
 8014a32:	1864      	addlt	r4, r4, r1
 8014a34:	9309      	str	r3, [sp, #36]	@ 0x24
 8014a36:	9711      	str	r7, [sp, #68]	@ 0x44
 8014a38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014a3a:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014a3e:	191b      	adds	r3, r3, r4
 8014a40:	bf58      	it	pl
 8014a42:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 8014a44:	f8be b004 	ldrh.w	fp, [lr, #4]
 8014a48:	9309      	str	r3, [sp, #36]	@ 0x24
 8014a4a:	bf48      	it	mi
 8014a4c:	4647      	movmi	r7, r8
 8014a4e:	44bb      	add	fp, r7
 8014a50:	f8ae b004 	strh.w	fp, [lr, #4]
 8014a54:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014a58:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014a5c:	f8ae b006 	strh.w	fp, [lr, #6]
 8014a60:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014a64:	44bc      	add	ip, r7
 8014a66:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 8014a68:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014a6c:	443d      	add	r5, r7
 8014a6e:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8014a72:	bf5c      	itt	pl
 8014a74:	1a5b      	subpl	r3, r3, r1
 8014a76:	9309      	strpl	r3, [sp, #36]	@ 0x24
 8014a78:	ea5b 0307 	orrs.w	r3, fp, r7
 8014a7c:	d011      	beq.n	8014aa2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014a7e:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8014a82:	f1bb 0f00 	cmp.w	fp, #0
 8014a86:	db0c      	blt.n	8014aa2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014a88:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8014a8a:	45bb      	cmp	fp, r7
 8014a8c:	da09      	bge.n	8014aa2 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014a8e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014a92:	45bb      	cmp	fp, r7
 8014a94:	bf3c      	itt	cc
 8014a96:	f10e 0708 	addcc.w	r7, lr, #8
 8014a9a:	6107      	strcc	r7, [r0, #16]
 8014a9c:	f10b 0701 	add.w	r7, fp, #1
 8014aa0:	6087      	str	r7, [r0, #8]
 8014aa2:	6907      	ldr	r7, [r0, #16]
 8014aa4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014aa6:	803d      	strh	r5, [r7, #0]
 8014aa8:	4555      	cmp	r5, sl
 8014aaa:	807b      	strh	r3, [r7, #2]
 8014aac:	80be      	strh	r6, [r7, #4]
 8014aae:	80fe      	strh	r6, [r7, #6]
 8014ab0:	d1c2      	bne.n	8014a38 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8014ab2:	9b01      	ldr	r3, [sp, #4]
 8014ab4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8014ab6:	eba3 0c0c 	sub.w	ip, r3, ip
 8014aba:	6903      	ldr	r3, [r0, #16]
 8014abc:	8899      	ldrh	r1, [r3, #4]
 8014abe:	4461      	add	r1, ip
 8014ac0:	8099      	strh	r1, [r3, #4]
 8014ac2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8014ac4:	3720      	adds	r7, #32
 8014ac6:	1a7f      	subs	r7, r7, r1
 8014ac8:	88d9      	ldrh	r1, [r3, #6]
 8014aca:	fb0c 1c07 	mla	ip, ip, r7, r1
 8014ace:	f8a3 c006 	strh.w	ip, [r3, #6]
 8014ad2:	e60e      	b.n	80146f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014ad4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014ad6:	f04f 34ff 	mov.w	r4, #4294967295
 8014ada:	940d      	str	r4, [sp, #52]	@ 0x34
 8014adc:	437b      	muls	r3, r7
 8014ade:	4249      	negs	r1, r1
 8014ae0:	2400      	movs	r4, #0
 8014ae2:	e756      	b.n	8014992 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8014ae4:	9905      	ldr	r1, [sp, #20]
 8014ae6:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8014aea:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8014aee:	f001 011f 	and.w	r1, r1, #31
 8014af2:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8014af6:	9102      	str	r1, [sp, #8]
 8014af8:	9904      	ldr	r1, [sp, #16]
 8014afa:	45f3      	cmp	fp, lr
 8014afc:	f009 0c1f 	and.w	ip, r9, #31
 8014b00:	eba1 0406 	sub.w	r4, r1, r6
 8014b04:	d108      	bne.n	8014b18 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8014b06:	9b02      	ldr	r3, [sp, #8]
 8014b08:	449c      	add	ip, r3
 8014b0a:	44a0      	add	r8, r4
 8014b0c:	fb04 a40c 	mla	r4, r4, ip, sl
 8014b10:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014b14:	80fc      	strh	r4, [r7, #6]
 8014b16:	e458      	b.n	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014b18:	9905      	ldr	r1, [sp, #20]
 8014b1a:	ebb1 0109 	subs.w	r1, r1, r9
 8014b1e:	bf5b      	ittet	pl
 8014b20:	f1cc 0520 	rsbpl	r5, ip, #32
 8014b24:	436c      	mulpl	r4, r5
 8014b26:	2500      	movmi	r5, #0
 8014b28:	2520      	movpl	r5, #32
 8014b2a:	bf44      	itt	mi
 8014b2c:	fb04 f40c 	mulmi.w	r4, r4, ip
 8014b30:	4249      	negmi	r1, r1
 8014b32:	9501      	str	r5, [sp, #4]
 8014b34:	9b01      	ldr	r3, [sp, #4]
 8014b36:	fb94 f5f1 	sdiv	r5, r4, r1
 8014b3a:	fb01 4415 	mls	r4, r1, r5, r4
 8014b3e:	bf54      	ite	pl
 8014b40:	f04f 0901 	movpl.w	r9, #1
 8014b44:	f04f 39ff 	movmi.w	r9, #4294967295
 8014b48:	2c00      	cmp	r4, #0
 8014b4a:	bfb8      	it	lt
 8014b4c:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014b50:	449c      	add	ip, r3
 8014b52:	44a8      	add	r8, r5
 8014b54:	fb05 ac0c 	mla	ip, r5, ip, sl
 8014b58:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014b5c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014b60:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014b64:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8014b68:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014b6c:	bfb8      	it	lt
 8014b6e:	1864      	addlt	r4, r4, r1
 8014b70:	ea58 0707 	orrs.w	r7, r8, r7
 8014b74:	eb0b 0309 	add.w	r3, fp, r9
 8014b78:	d011      	beq.n	8014b9e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014b7a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014b7e:	f1b8 0f00 	cmp.w	r8, #0
 8014b82:	db0c      	blt.n	8014b9e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014b84:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8014b86:	45b8      	cmp	r8, r7
 8014b88:	da09      	bge.n	8014b9e <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014b8a:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8014b8e:	45b8      	cmp	r8, r7
 8014b90:	bf3c      	itt	cc
 8014b92:	f10c 0708 	addcc.w	r7, ip, #8
 8014b96:	6107      	strcc	r7, [r0, #16]
 8014b98:	f108 0701 	add.w	r7, r8, #1
 8014b9c:	6087      	str	r7, [r0, #8]
 8014b9e:	6907      	ldr	r7, [r0, #16]
 8014ba0:	f04f 0c00 	mov.w	ip, #0
 8014ba4:	b212      	sxth	r2, r2
 8014ba6:	459e      	cmp	lr, r3
 8014ba8:	803b      	strh	r3, [r7, #0]
 8014baa:	807a      	strh	r2, [r7, #2]
 8014bac:	f8a7 c004 	strh.w	ip, [r7, #4]
 8014bb0:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014bb4:	442e      	add	r6, r5
 8014bb6:	d04d      	beq.n	8014c54 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8014bb8:	9f04      	ldr	r7, [sp, #16]
 8014bba:	1bbf      	subs	r7, r7, r6
 8014bbc:	443d      	add	r5, r7
 8014bbe:	016d      	lsls	r5, r5, #5
 8014bc0:	fb95 f8f1 	sdiv	r8, r5, r1
 8014bc4:	fb01 5518 	mls	r5, r1, r8, r5
 8014bc8:	4565      	cmp	r5, ip
 8014bca:	bfb8      	it	lt
 8014bcc:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014bd0:	f108 0701 	add.w	r7, r8, #1
 8014bd4:	bfb8      	it	lt
 8014bd6:	186d      	addlt	r5, r5, r1
 8014bd8:	1a64      	subs	r4, r4, r1
 8014bda:	9703      	str	r7, [sp, #12]
 8014bdc:	f04f 0a00 	mov.w	sl, #0
 8014be0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014be4:	1964      	adds	r4, r4, r5
 8014be6:	bf58      	it	pl
 8014be8:	9f03      	ldrpl	r7, [sp, #12]
 8014bea:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014bee:	bf48      	it	mi
 8014bf0:	4647      	movmi	r7, r8
 8014bf2:	44bb      	add	fp, r7
 8014bf4:	f8ac b004 	strh.w	fp, [ip, #4]
 8014bf8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014bfc:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014c00:	f8ac b006 	strh.w	fp, [ip, #6]
 8014c04:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014c08:	443e      	add	r6, r7
 8014c0a:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014c0e:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014c12:	bf58      	it	pl
 8014c14:	1a64      	subpl	r4, r4, r1
 8014c16:	ea5b 0707 	orrs.w	r7, fp, r7
 8014c1a:	444b      	add	r3, r9
 8014c1c:	d011      	beq.n	8014c42 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014c1e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014c22:	f1bb 0f00 	cmp.w	fp, #0
 8014c26:	db0c      	blt.n	8014c42 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014c28:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8014c2a:	45bb      	cmp	fp, r7
 8014c2c:	da09      	bge.n	8014c42 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014c2e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014c32:	45bb      	cmp	fp, r7
 8014c34:	bf3c      	itt	cc
 8014c36:	f10c 0708 	addcc.w	r7, ip, #8
 8014c3a:	6107      	strcc	r7, [r0, #16]
 8014c3c:	f10b 0701 	add.w	r7, fp, #1
 8014c40:	6087      	str	r7, [r0, #8]
 8014c42:	6907      	ldr	r7, [r0, #16]
 8014c44:	459e      	cmp	lr, r3
 8014c46:	803b      	strh	r3, [r7, #0]
 8014c48:	807a      	strh	r2, [r7, #2]
 8014c4a:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014c4e:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014c52:	d1c5      	bne.n	8014be0 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8014c54:	9b04      	ldr	r3, [sp, #16]
 8014c56:	1b9e      	subs	r6, r3, r6
 8014c58:	6903      	ldr	r3, [r0, #16]
 8014c5a:	889a      	ldrh	r2, [r3, #4]
 8014c5c:	4432      	add	r2, r6
 8014c5e:	809a      	strh	r2, [r3, #4]
 8014c60:	9a02      	ldr	r2, [sp, #8]
 8014c62:	f102 0c20 	add.w	ip, r2, #32
 8014c66:	9a01      	ldr	r2, [sp, #4]
 8014c68:	ebac 0c02 	sub.w	ip, ip, r2
 8014c6c:	88da      	ldrh	r2, [r3, #6]
 8014c6e:	fb06 260c 	mla	r6, r6, ip, r2
 8014c72:	80de      	strh	r6, [r3, #6]
 8014c74:	f7ff bba9 	b.w	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08014c78 <_ZN8touchgfx7Outline6lineToEii>:
 8014c78:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014c7a:	079b      	lsls	r3, r3, #30
 8014c7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014c7e:	460e      	mov	r6, r1
 8014c80:	4615      	mov	r5, r2
 8014c82:	d511      	bpl.n	8014ca8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014c84:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8014c88:	ea86 0701 	eor.w	r7, r6, r1
 8014c8c:	ea85 0302 	eor.w	r3, r5, r2
 8014c90:	433b      	orrs	r3, r7
 8014c92:	d009      	beq.n	8014ca8 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014c94:	4633      	mov	r3, r6
 8014c96:	9500      	str	r5, [sp, #0]
 8014c98:	f7ff fb3e 	bl	8014318 <_ZN8touchgfx7Outline10renderLineEiiii>
 8014c9c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014c9e:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8014ca2:	f043 0301 	orr.w	r3, r3, #1
 8014ca6:	6243      	str	r3, [r0, #36]	@ 0x24
 8014ca8:	b003      	add	sp, #12
 8014caa:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014cac <_ZN8touchgfx7Outline6moveToEii>:
 8014cac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014cae:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014cb0:	4615      	mov	r5, r2
 8014cb2:	079a      	lsls	r2, r3, #30
 8014cb4:	4604      	mov	r4, r0
 8014cb6:	460e      	mov	r6, r1
 8014cb8:	d401      	bmi.n	8014cbe <_ZN8touchgfx7Outline6moveToEii+0x12>
 8014cba:	f7ff faf9 	bl	80142b0 <_ZN8touchgfx7Outline5resetEv>
 8014cbe:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8014cc0:	07db      	lsls	r3, r3, #31
 8014cc2:	d504      	bpl.n	8014cce <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014cc4:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8014cc8:	4620      	mov	r0, r4
 8014cca:	f7ff ffd5 	bl	8014c78 <_ZN8touchgfx7Outline6lineToEii>
 8014cce:	6923      	ldr	r3, [r4, #16]
 8014cd0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014cd4:	1170      	asrs	r0, r6, #5
 8014cd6:	4290      	cmp	r0, r2
 8014cd8:	ea4f 1165 	mov.w	r1, r5, asr #5
 8014cdc:	d103      	bne.n	8014ce6 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8014cde:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014ce2:	4291      	cmp	r1, r2
 8014ce4:	d01a      	beq.n	8014d1c <_ZN8touchgfx7Outline6moveToEii+0x70>
 8014ce6:	88df      	ldrh	r7, [r3, #6]
 8014ce8:	889a      	ldrh	r2, [r3, #4]
 8014cea:	433a      	orrs	r2, r7
 8014cec:	d010      	beq.n	8014d10 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014cee:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014cf2:	2a00      	cmp	r2, #0
 8014cf4:	db0c      	blt.n	8014d10 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014cf6:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8014cf8:	42ba      	cmp	r2, r7
 8014cfa:	da09      	bge.n	8014d10 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014cfc:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8014d00:	42ba      	cmp	r2, r7
 8014d02:	bf38      	it	cc
 8014d04:	3308      	addcc	r3, #8
 8014d06:	f102 0201 	add.w	r2, r2, #1
 8014d0a:	bf38      	it	cc
 8014d0c:	6123      	strcc	r3, [r4, #16]
 8014d0e:	60a2      	str	r2, [r4, #8]
 8014d10:	6923      	ldr	r3, [r4, #16]
 8014d12:	2200      	movs	r2, #0
 8014d14:	8018      	strh	r0, [r3, #0]
 8014d16:	8059      	strh	r1, [r3, #2]
 8014d18:	809a      	strh	r2, [r3, #4]
 8014d1a:	80da      	strh	r2, [r3, #6]
 8014d1c:	6166      	str	r6, [r4, #20]
 8014d1e:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8014d22:	6225      	str	r5, [r4, #32]
 8014d24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014d26 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8014d26:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014d2a:	b0d0      	sub	sp, #320	@ 0x140
 8014d2c:	466c      	mov	r4, sp
 8014d2e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8014d32:	4627      	mov	r7, r4
 8014d34:	1a0d      	subs	r5, r1, r0
 8014d36:	2d48      	cmp	r5, #72	@ 0x48
 8014d38:	f100 0308 	add.w	r3, r0, #8
 8014d3c:	f340 80d5 	ble.w	8014eea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014d40:	112d      	asrs	r5, r5, #4
 8014d42:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8014d46:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014d4a:	6816      	ldr	r6, [r2, #0]
 8014d4c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8014d50:	6006      	str	r6, [r0, #0]
 8014d52:	6856      	ldr	r6, [r2, #4]
 8014d54:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014d58:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014d5c:	6046      	str	r6, [r0, #4]
 8014d5e:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8014d62:	f8a2 8002 	strh.w	r8, [r2, #2]
 8014d66:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014d6a:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014d6e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014d72:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8014d76:	4565      	cmp	r5, ip
 8014d78:	f1a1 0208 	sub.w	r2, r1, #8
 8014d7c:	db06      	blt.n	8014d8c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8014d7e:	d119      	bne.n	8014db4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014d80:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8014d84:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8014d88:	42ae      	cmp	r6, r5
 8014d8a:	dd13      	ble.n	8014db4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014d8c:	460e      	mov	r6, r1
 8014d8e:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8014d92:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014d96:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8014d9a:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8014d9e:	601d      	str	r5, [r3, #0]
 8014da0:	6875      	ldr	r5, [r6, #4]
 8014da2:	605d      	str	r5, [r3, #4]
 8014da4:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014da8:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014dac:	f821 8c04 	strh.w	r8, [r1, #-4]
 8014db0:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014db4:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8014db8:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8014dbc:	42ae      	cmp	r6, r5
 8014dbe:	db06      	blt.n	8014dce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8014dc0:	d116      	bne.n	8014df0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014dc2:	f9b0 c000 	ldrsh.w	ip, [r0]
 8014dc6:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8014dca:	45ac      	cmp	ip, r5
 8014dcc:	da10      	bge.n	8014df0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014dce:	681d      	ldr	r5, [r3, #0]
 8014dd0:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014dd4:	6005      	str	r5, [r0, #0]
 8014dd6:	685d      	ldr	r5, [r3, #4]
 8014dd8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014ddc:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014de0:	f8a0 8008 	strh.w	r8, [r0, #8]
 8014de4:	6045      	str	r5, [r0, #4]
 8014de6:	8146      	strh	r6, [r0, #10]
 8014de8:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8014dec:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8014df0:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014df4:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014df8:	4565      	cmp	r5, ip
 8014dfa:	db06      	blt.n	8014e0a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8014dfc:	d119      	bne.n	8014e32 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014dfe:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8014e02:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014e06:	42ae      	cmp	r6, r5
 8014e08:	da13      	bge.n	8014e32 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014e0a:	460e      	mov	r6, r1
 8014e0c:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014e10:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014e14:	6005      	str	r5, [r0, #0]
 8014e16:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8014e1a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8014e1e:	6875      	ldr	r5, [r6, #4]
 8014e20:	6045      	str	r5, [r0, #4]
 8014e22:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014e26:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014e2a:	f821 8c04 	strh.w	r8, [r1, #-4]
 8014e2e:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014e32:	3308      	adds	r3, #8
 8014e34:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014e38:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8014e3c:	45e6      	cmp	lr, ip
 8014e3e:	dbf8      	blt.n	8014e32 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014e40:	d105      	bne.n	8014e4e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014e42:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014e46:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014e4a:	42ae      	cmp	r6, r5
 8014e4c:	dbf1      	blt.n	8014e32 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014e4e:	4615      	mov	r5, r2
 8014e50:	3a08      	subs	r2, #8
 8014e52:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8014e56:	45b4      	cmp	ip, r6
 8014e58:	dbf9      	blt.n	8014e4e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014e5a:	d105      	bne.n	8014e68 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8014e5c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014e60:	f9b2 6000 	ldrsh.w	r6, [r2]
 8014e64:	45b0      	cmp	r8, r6
 8014e66:	dbf2      	blt.n	8014e4e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014e68:	4293      	cmp	r3, r2
 8014e6a:	f1a5 0608 	sub.w	r6, r5, #8
 8014e6e:	d816      	bhi.n	8014e9e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8014e70:	f8d6 c000 	ldr.w	ip, [r6]
 8014e74:	f9b3 a000 	ldrsh.w	sl, [r3]
 8014e78:	f8c3 c000 	str.w	ip, [r3]
 8014e7c:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8014e80:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8014e84:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8014e88:	f8c3 c004 	str.w	ip, [r3, #4]
 8014e8c:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014e90:	f825 ec06 	strh.w	lr, [r5, #-6]
 8014e94:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014e98:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014e9c:	e7c9      	b.n	8014e32 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014e9e:	f8d6 e000 	ldr.w	lr, [r6]
 8014ea2:	f9b0 a000 	ldrsh.w	sl, [r0]
 8014ea6:	f8c0 e000 	str.w	lr, [r0]
 8014eaa:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8014eae:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8014eb2:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8014eb6:	f8c0 e004 	str.w	lr, [r0, #4]
 8014eba:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014ebe:	f825 cc06 	strh.w	ip, [r5, #-6]
 8014ec2:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014ec6:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014eca:	1acd      	subs	r5, r1, r3
 8014ecc:	1a16      	subs	r6, r2, r0
 8014ece:	10ed      	asrs	r5, r5, #3
 8014ed0:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014ed4:	bfb5      	itete	lt
 8014ed6:	e9c4 0200 	strdlt	r0, r2, [r4]
 8014eda:	e9c4 3100 	strdge	r3, r1, [r4]
 8014ede:	460a      	movlt	r2, r1
 8014ee0:	4603      	movge	r3, r0
 8014ee2:	3408      	adds	r4, #8
 8014ee4:	4618      	mov	r0, r3
 8014ee6:	4611      	mov	r1, r2
 8014ee8:	e724      	b.n	8014d34 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014eea:	4299      	cmp	r1, r3
 8014eec:	d928      	bls.n	8014f40 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8014eee:	f1a3 0210 	sub.w	r2, r3, #16
 8014ef2:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8014ef6:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8014efa:	45ac      	cmp	ip, r5
 8014efc:	db06      	blt.n	8014f0c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8014efe:	d11d      	bne.n	8014f3c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014f00:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8014f04:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8014f08:	42ae      	cmp	r6, r5
 8014f0a:	da17      	bge.n	8014f3c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014f0c:	4615      	mov	r5, r2
 8014f0e:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8014f12:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8014f16:	6116      	str	r6, [r2, #16]
 8014f18:	686e      	ldr	r6, [r5, #4]
 8014f1a:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8014f1e:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8014f22:	f8a2 9008 	strh.w	r9, [r2, #8]
 8014f26:	42a8      	cmp	r0, r5
 8014f28:	6156      	str	r6, [r2, #20]
 8014f2a:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8014f2e:	f8a2 800c 	strh.w	r8, [r2, #12]
 8014f32:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8014f36:	f1a2 0208 	sub.w	r2, r2, #8
 8014f3a:	d1da      	bne.n	8014ef2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8014f3c:	3308      	adds	r3, #8
 8014f3e:	e7d4      	b.n	8014eea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014f40:	42bc      	cmp	r4, r7
 8014f42:	d903      	bls.n	8014f4c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8014f44:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8014f48:	3c08      	subs	r4, #8
 8014f4a:	e6f3      	b.n	8014d34 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014f4c:	b050      	add	sp, #320	@ 0x140
 8014f4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08014f52 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8014f52:	b510      	push	{r4, lr}
 8014f54:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014f56:	07da      	lsls	r2, r3, #31
 8014f58:	4604      	mov	r4, r0
 8014f5a:	d507      	bpl.n	8014f6c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8014f5c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8014f60:	f7ff fe8a 	bl	8014c78 <_ZN8touchgfx7Outline6lineToEii>
 8014f64:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014f66:	f023 0301 	bic.w	r3, r3, #1
 8014f6a:	6243      	str	r3, [r0, #36]	@ 0x24
 8014f6c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8014f6e:	079b      	lsls	r3, r3, #30
 8014f70:	d521      	bpl.n	8014fb6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8014f72:	6923      	ldr	r3, [r4, #16]
 8014f74:	88d9      	ldrh	r1, [r3, #6]
 8014f76:	889a      	ldrh	r2, [r3, #4]
 8014f78:	430a      	orrs	r2, r1
 8014f7a:	d010      	beq.n	8014f9e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014f7c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014f80:	2a00      	cmp	r2, #0
 8014f82:	db0c      	blt.n	8014f9e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014f84:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8014f86:	428a      	cmp	r2, r1
 8014f88:	da09      	bge.n	8014f9e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014f8a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8014f8e:	4291      	cmp	r1, r2
 8014f90:	bf88      	it	hi
 8014f92:	3308      	addhi	r3, #8
 8014f94:	f102 0201 	add.w	r2, r2, #1
 8014f98:	bf88      	it	hi
 8014f9a:	6123      	strhi	r3, [r4, #16]
 8014f9c:	60a2      	str	r2, [r4, #8]
 8014f9e:	68a1      	ldr	r1, [r4, #8]
 8014fa0:	b129      	cbz	r1, 8014fae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014fa2:	6863      	ldr	r3, [r4, #4]
 8014fa4:	4299      	cmp	r1, r3
 8014fa6:	d802      	bhi.n	8014fae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014fa8:	68e0      	ldr	r0, [r4, #12]
 8014faa:	f7ff febc 	bl	8014d26 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8014fae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8014fb0:	f023 0302 	bic.w	r3, r3, #2
 8014fb4:	6263      	str	r3, [r4, #36]	@ 0x24
 8014fb6:	68e0      	ldr	r0, [r4, #12]
 8014fb8:	bd10      	pop	{r4, pc}
	...

08014fbc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014fbc:	4b01      	ldr	r3, [pc, #4]	@ (8014fc4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014fbe:	6818      	ldr	r0, [r3, #0]
 8014fc0:	4770      	bx	lr
 8014fc2:	bf00      	nop
 8014fc4:	20013f54 	.word	0x20013f54

08014fc8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8014fc8:	4b01      	ldr	r3, [pc, #4]	@ (8014fd0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8014fca:	6818      	ldr	r0, [r3, #0]
 8014fcc:	4770      	bx	lr
 8014fce:	bf00      	nop
 8014fd0:	20013f58 	.word	0x20013f58

08014fd4 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014fd4:	b510      	push	{r4, lr}
 8014fd6:	6803      	ldr	r3, [r0, #0]
 8014fd8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014fda:	460c      	mov	r4, r1
 8014fdc:	4798      	blx	r3
 8014fde:	1b03      	subs	r3, r0, r4
 8014fe0:	4258      	negs	r0, r3
 8014fe2:	4158      	adcs	r0, r3
 8014fe4:	bd10      	pop	{r4, pc}
	...

08014fe8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8014fe8:	4b01      	ldr	r3, [pc, #4]	@ (8014ff0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8014fea:	6019      	str	r1, [r3, #0]
 8014fec:	4770      	bx	lr
 8014fee:	bf00      	nop
 8014ff0:	20013f5c 	.word	0x20013f5c

08014ff4 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014ff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ff8:	4696      	mov	lr, r2
 8014ffa:	4605      	mov	r5, r0
 8014ffc:	4614      	mov	r4, r2
 8014ffe:	460e      	mov	r6, r1
 8015000:	461f      	mov	r7, r3
 8015002:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015006:	b097      	sub	sp, #92	@ 0x5c
 8015008:	f10d 0c1c 	add.w	ip, sp, #28
 801500c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015010:	f8de 3000 	ldr.w	r3, [lr]
 8015014:	f8cc 3000 	str.w	r3, [ip]
 8015018:	f104 0e14 	add.w	lr, r4, #20
 801501c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015020:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8015024:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015028:	f8de 3000 	ldr.w	r3, [lr]
 801502c:	f8cc 3000 	str.w	r3, [ip]
 8015030:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8015034:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015038:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 801503c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015040:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 8015044:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 8015048:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 801504c:	f8de 3000 	ldr.w	r3, [lr]
 8015050:	f8cc 3000 	str.w	r3, [ip]
 8015054:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8015056:	682b      	ldr	r3, [r5, #0]
 8015058:	9201      	str	r2, [sp, #4]
 801505a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801505e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8015060:	9200      	str	r2, [sp, #0]
 8015062:	f8cd 8008 	str.w	r8, [sp, #8]
 8015066:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 801506a:	aa07      	add	r2, sp, #28
 801506c:	463b      	mov	r3, r7
 801506e:	4631      	mov	r1, r6
 8015070:	4628      	mov	r0, r5
 8015072:	47d8      	blx	fp
 8015074:	46a6      	mov	lr, r4
 8015076:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801507a:	f10d 0c1c 	add.w	ip, sp, #28
 801507e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015082:	f8de 3000 	ldr.w	r3, [lr]
 8015086:	f8cc 3000 	str.w	r3, [ip]
 801508a:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 801508e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015092:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8015096:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801509a:	343c      	adds	r4, #60	@ 0x3c
 801509c:	f8de 3000 	ldr.w	r3, [lr]
 80150a0:	f8cc 3000 	str.w	r3, [ip]
 80150a4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80150a6:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 80150aa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80150ae:	6823      	ldr	r3, [r4, #0]
 80150b0:	f8cc 3000 	str.w	r3, [ip]
 80150b4:	682b      	ldr	r3, [r5, #0]
 80150b6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80150ba:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80150bc:	9201      	str	r2, [sp, #4]
 80150be:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80150c0:	9200      	str	r2, [sp, #0]
 80150c2:	f8cd 8008 	str.w	r8, [sp, #8]
 80150c6:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 80150c8:	aa07      	add	r2, sp, #28
 80150ca:	463b      	mov	r3, r7
 80150cc:	4631      	mov	r1, r6
 80150ce:	4628      	mov	r0, r5
 80150d0:	47a0      	blx	r4
 80150d2:	b017      	add	sp, #92	@ 0x5c
 80150d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080150d8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80150d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150dc:	b08d      	sub	sp, #52	@ 0x34
 80150de:	4688      	mov	r8, r1
 80150e0:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80150e2:	f8d3 c000 	ldr.w	ip, [r3]
 80150e6:	680f      	ldr	r7, [r1, #0]
 80150e8:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 80150ec:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 80150f0:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 80150f4:	edd3 6a07 	vldr	s13, [r3, #28]
 80150f8:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80150fa:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 80150fe:	f9b1 9000 	ldrsh.w	r9, [r1]
 8015102:	f9ba 1000 	ldrsh.w	r1, [sl]
 8015106:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 801510a:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 801510e:	eba7 070c 	sub.w	r7, r7, ip
 8015112:	42bc      	cmp	r4, r7
 8015114:	bfa8      	it	ge
 8015116:	463c      	movge	r4, r7
 8015118:	ee07 4a90 	vmov	s15, r4
 801511c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8015120:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 8015124:	ee25 4a04 	vmul.f32	s8, s10, s8
 8015128:	ee65 4a24 	vmul.f32	s9, s10, s9
 801512c:	ee25 5a27 	vmul.f32	s10, s10, s15
 8015130:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8015134:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8015138:	eb09 0e0c 	add.w	lr, r9, ip
 801513c:	4571      	cmp	r1, lr
 801513e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8015142:	ee32 1a05 	vadd.f32	s2, s4, s10
 8015146:	ee36 0a84 	vadd.f32	s0, s13, s8
 801514a:	ee61 1a87 	vmul.f32	s3, s3, s14
 801514e:	ee22 2a07 	vmul.f32	s4, s4, s14
 8015152:	f340 808d 	ble.w	8015270 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8015156:	eba1 060e 	sub.w	r6, r1, lr
 801515a:	fb96 f5f4 	sdiv	r5, r6, r4
 801515e:	ee07 5a10 	vmov	s14, r5
 8015162:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015166:	2d00      	cmp	r5, #0
 8015168:	fb04 6615 	mls	r6, r4, r5, r6
 801516c:	eea7 0a04 	vfma.f32	s0, s14, s8
 8015170:	eee7 0a24 	vfma.f32	s1, s14, s9
 8015174:	eea7 1a05 	vfma.f32	s2, s14, s10
 8015178:	dd13      	ble.n	80151a2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801517a:	ee70 6a44 	vsub.f32	s13, s0, s8
 801517e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8015182:	eef5 6a40 	vcmp.f32	s13, #0.0
 8015186:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801518a:	bf18      	it	ne
 801518c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8015190:	ee31 2a45 	vsub.f32	s4, s2, s10
 8015194:	bf08      	it	eq
 8015196:	eeb0 7a67 	vmoveq.f32	s14, s15
 801519a:	ee61 1a87 	vmul.f32	s3, s3, s14
 801519e:	ee22 2a07 	vmul.f32	s4, s4, s14
 80151a2:	fb05 f204 	mul.w	r2, r5, r4
 80151a6:	1abf      	subs	r7, r7, r2
 80151a8:	4494      	add	ip, r2
 80151aa:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80151ae:	4411      	add	r1, r2
 80151b0:	eb09 020c 	add.w	r2, r9, ip
 80151b4:	443a      	add	r2, r7
 80151b6:	b209      	sxth	r1, r1
 80151b8:	428a      	cmp	r2, r1
 80151ba:	bfc4      	itt	gt
 80151bc:	eba1 0209 	subgt.w	r2, r1, r9
 80151c0:	eba2 070c 	subgt.w	r7, r2, ip
 80151c4:	2f00      	cmp	r7, #0
 80151c6:	dd50      	ble.n	801526a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80151c8:	fb97 f1f4 	sdiv	r1, r7, r4
 80151cc:	fb04 7211 	mls	r2, r4, r1, r7
 80151d0:	b90a      	cbnz	r2, 80151d6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80151d2:	3901      	subs	r1, #1
 80151d4:	4622      	mov	r2, r4
 80151d6:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80151da:	6840      	ldr	r0, [r0, #4]
 80151dc:	900b      	str	r0, [sp, #44]	@ 0x2c
 80151de:	f8d0 a000 	ldr.w	sl, [r0]
 80151e2:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80151e4:	9008      	str	r0, [sp, #32]
 80151e6:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 80151ea:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80151ec:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 80151f0:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80151f4:	695b      	ldr	r3, [r3, #20]
 80151f6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80151f8:	445b      	add	r3, fp
 80151fa:	eef0 6a42 	vmov.f32	s13, s4
 80151fe:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8015202:	ee21 3a23 	vmul.f32	s6, s2, s7
 8015206:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801520a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801520e:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015212:	9307      	str	r3, [sp, #28]
 8015214:	ee17 7a90 	vmov	r7, s15
 8015218:	ee73 7a42 	vsub.f32	s15, s6, s4
 801521c:	eeb0 7a61 	vmov.f32	s14, s3
 8015220:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015224:	ee16 3a90 	vmov	r3, s13
 8015228:	fb97 f7f4 	sdiv	r7, r7, r4
 801522c:	ee17 ca90 	vmov	ip, s15
 8015230:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015234:	fb9c fcf4 	sdiv	ip, ip, r4
 8015238:	fb0c 3306 	mla	r3, ip, r6, r3
 801523c:	9302      	str	r3, [sp, #8]
 801523e:	ee17 3a10 	vmov	r3, s14
 8015242:	44b6      	add	lr, r6
 8015244:	fb04 e505 	mla	r5, r4, r5, lr
 8015248:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 801524c:	fb07 3706 	mla	r7, r7, r6, r3
 8015250:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8015254:	e9cd 4700 	strd	r4, r7, [sp]
 8015258:	2900      	cmp	r1, #0
 801525a:	bfcc      	ite	gt
 801525c:	46a1      	movgt	r9, r4
 801525e:	4691      	movle	r9, r2
 8015260:	eba9 0306 	sub.w	r3, r9, r6
 8015264:	f8da 4008 	ldr.w	r4, [sl, #8]
 8015268:	47a0      	blx	r4
 801526a:	b00d      	add	sp, #52	@ 0x34
 801526c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015270:	2500      	movs	r5, #0
 8015272:	462e      	mov	r6, r5
 8015274:	e799      	b.n	80151aa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08015278 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8015278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801527c:	b0db      	sub	sp, #364	@ 0x16c
 801527e:	461d      	mov	r5, r3
 8015280:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 8015284:	930a      	str	r3, [sp, #40]	@ 0x28
 8015286:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 801528a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801528c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 8015290:	9310      	str	r3, [sp, #64]	@ 0x40
 8015292:	6803      	ldr	r3, [r0, #0]
 8015294:	910f      	str	r1, [sp, #60]	@ 0x3c
 8015296:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 8015298:	9009      	str	r0, [sp, #36]	@ 0x24
 801529a:	4614      	mov	r4, r2
 801529c:	4629      	mov	r1, r5
 801529e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 80152a2:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 80152a6:	47b8      	blx	r7
 80152a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80152aa:	6058      	str	r0, [r3, #4]
 80152ac:	2800      	cmp	r0, #0
 80152ae:	f000 83a1 	beq.w	80159f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80152b2:	682b      	ldr	r3, [r5, #0]
 80152b4:	9314      	str	r3, [sp, #80]	@ 0x50
 80152b6:	686b      	ldr	r3, [r5, #4]
 80152b8:	9315      	str	r3, [sp, #84]	@ 0x54
 80152ba:	4bc4      	ldr	r3, [pc, #784]	@ (80155cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80152bc:	ed94 7a02 	vldr	s14, [r4, #8]
 80152c0:	7819      	ldrb	r1, [r3, #0]
 80152c2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80152c6:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 80152ca:	2900      	cmp	r1, #0
 80152cc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80152d0:	bf16      	itet	ne
 80152d2:	4619      	movne	r1, r3
 80152d4:	4611      	moveq	r1, r2
 80152d6:	4613      	movne	r3, r2
 80152d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80152dc:	9116      	str	r1, [sp, #88]	@ 0x58
 80152de:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 80152e2:	f240 8387 	bls.w	80159f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80152e6:	ed94 7a07 	vldr	s14, [r4, #28]
 80152ea:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80152ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80152f2:	f240 837f 	bls.w	80159f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80152f6:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 80152fa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80152fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015302:	f240 8377 	bls.w	80159f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015306:	6822      	ldr	r2, [r4, #0]
 8015308:	4bb1      	ldr	r3, [pc, #708]	@ (80155d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801530a:	429a      	cmp	r2, r3
 801530c:	f2c0 8372 	blt.w	80159f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015310:	49b0      	ldr	r1, [pc, #704]	@ (80155d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8015312:	6963      	ldr	r3, [r4, #20]
 8015314:	428a      	cmp	r2, r1
 8015316:	f300 836d 	bgt.w	80159f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801531a:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 801531e:	48ae      	ldr	r0, [pc, #696]	@ (80155d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8015320:	33ff      	adds	r3, #255	@ 0xff
 8015322:	4283      	cmp	r3, r0
 8015324:	f200 8366 	bhi.w	80159f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015328:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 801532a:	4dac      	ldr	r5, [pc, #688]	@ (80155dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 801532c:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8015330:	33ff      	adds	r3, #255	@ 0xff
 8015332:	42ab      	cmp	r3, r5
 8015334:	f200 835e 	bhi.w	80159f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015338:	6862      	ldr	r2, [r4, #4]
 801533a:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 801533e:	33ff      	adds	r3, #255	@ 0xff
 8015340:	4283      	cmp	r3, r0
 8015342:	f200 8357 	bhi.w	80159f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015346:	69a1      	ldr	r1, [r4, #24]
 8015348:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 801534c:	33ff      	adds	r3, #255	@ 0xff
 801534e:	4283      	cmp	r3, r0
 8015350:	f200 8350 	bhi.w	80159f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015354:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8015356:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 801535a:	30ff      	adds	r0, #255	@ 0xff
 801535c:	42a8      	cmp	r0, r5
 801535e:	f200 8349 	bhi.w	80159f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015362:	428a      	cmp	r2, r1
 8015364:	f280 8110 	bge.w	8015588 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8015368:	429a      	cmp	r2, r3
 801536a:	f300 8119 	bgt.w	80155a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801536e:	4299      	cmp	r1, r3
 8015370:	f280 811d 	bge.w	80155ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8015374:	2502      	movs	r5, #2
 8015376:	2701      	movs	r7, #1
 8015378:	46a9      	mov	r9, r5
 801537a:	46b8      	mov	r8, r7
 801537c:	f04f 0a00 	mov.w	sl, #0
 8015380:	4621      	mov	r1, r4
 8015382:	a849      	add	r0, sp, #292	@ 0x124
 8015384:	f004 fad6 	bl	8019934 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8015388:	4622      	mov	r2, r4
 801538a:	4653      	mov	r3, sl
 801538c:	a949      	add	r1, sp, #292	@ 0x124
 801538e:	f8cd 9000 	str.w	r9, [sp]
 8015392:	a819      	add	r0, sp, #100	@ 0x64
 8015394:	f004 fbfe 	bl	8019b94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015398:	4622      	mov	r2, r4
 801539a:	4653      	mov	r3, sl
 801539c:	a949      	add	r1, sp, #292	@ 0x124
 801539e:	f8cd 8000 	str.w	r8, [sp]
 80153a2:	a829      	add	r0, sp, #164	@ 0xa4
 80153a4:	f004 fbf6 	bl	8019b94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80153a8:	4643      	mov	r3, r8
 80153aa:	4622      	mov	r2, r4
 80153ac:	a949      	add	r1, sp, #292	@ 0x124
 80153ae:	f8cd 9000 	str.w	r9, [sp]
 80153b2:	a839      	add	r0, sp, #228	@ 0xe4
 80153b4:	f004 fbee 	bl	8019b94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80153b8:	42af      	cmp	r7, r5
 80153ba:	bfb5      	itete	lt
 80153bc:	2300      	movlt	r3, #0
 80153be:	2301      	movge	r3, #1
 80153c0:	930e      	strlt	r3, [sp, #56]	@ 0x38
 80153c2:	930e      	strge	r3, [sp, #56]	@ 0x38
 80153c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80153c6:	e893 0003 	ldmia.w	r3, {r0, r1}
 80153ca:	af12      	add	r7, sp, #72	@ 0x48
 80153cc:	bfb9      	ittee	lt
 80153ce:	ad29      	addlt	r5, sp, #164	@ 0xa4
 80153d0:	ac19      	addlt	r4, sp, #100	@ 0x64
 80153d2:	ad19      	addge	r5, sp, #100	@ 0x64
 80153d4:	ac29      	addge	r4, sp, #164	@ 0xa4
 80153d6:	e887 0003 	stmia.w	r7, {r0, r1}
 80153da:	b928      	cbnz	r0, 80153e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80153dc:	4b80      	ldr	r3, [pc, #512]	@ (80155e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80153de:	6818      	ldr	r0, [r3, #0]
 80153e0:	6803      	ldr	r3, [r0, #0]
 80153e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80153e4:	4798      	blx	r3
 80153e6:	6038      	str	r0, [r7, #0]
 80153e8:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80153ea:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80153ee:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80153f2:	930c      	str	r3, [sp, #48]	@ 0x30
 80153f4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80153f6:	6963      	ldr	r3, [r4, #20]
 80153f8:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 80153fa:	440b      	add	r3, r1
 80153fc:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015400:	4408      	add	r0, r1
 8015402:	b200      	sxth	r0, r0
 8015404:	4283      	cmp	r3, r0
 8015406:	900d      	str	r0, [sp, #52]	@ 0x34
 8015408:	f280 80dd 	bge.w	80155c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 801540c:	428b      	cmp	r3, r1
 801540e:	da08      	bge.n	8015422 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015410:	2a00      	cmp	r2, #0
 8015412:	dd06      	ble.n	8015422 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015414:	1acb      	subs	r3, r1, r3
 8015416:	429a      	cmp	r2, r3
 8015418:	f2c0 80e4 	blt.w	80155e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 801541c:	2b00      	cmp	r3, #0
 801541e:	f300 80e2 	bgt.w	80155e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8015422:	6967      	ldr	r7, [r4, #20]
 8015424:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015426:	443b      	add	r3, r7
 8015428:	461f      	mov	r7, r3
 801542a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801542c:	1bdf      	subs	r7, r3, r7
 801542e:	4297      	cmp	r7, r2
 8015430:	bfa8      	it	ge
 8015432:	4617      	movge	r7, r2
 8015434:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8015438:	2f00      	cmp	r7, #0
 801543a:	f340 8166 	ble.w	801570a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801543e:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8015440:	6829      	ldr	r1, [r5, #0]
 8015442:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015446:	f9bb 3000 	ldrsh.w	r3, [fp]
 801544a:	6820      	ldr	r0, [r4, #0]
 801544c:	4411      	add	r1, r2
 801544e:	4299      	cmp	r1, r3
 8015450:	dd1a      	ble.n	8015488 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015452:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015456:	440b      	add	r3, r1
 8015458:	4402      	add	r2, r0
 801545a:	b21b      	sxth	r3, r3
 801545c:	429a      	cmp	r2, r3
 801545e:	dc13      	bgt.n	8015488 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015460:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015462:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015464:	681b      	ldr	r3, [r3, #0]
 8015466:	9206      	str	r2, [sp, #24]
 8015468:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801546a:	9205      	str	r2, [sp, #20]
 801546c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801546e:	9500      	str	r5, [sp, #0]
 8015470:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015474:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8015476:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8015478:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801547c:	a912      	add	r1, sp, #72	@ 0x48
 801547e:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8015482:	aa49      	add	r2, sp, #292	@ 0x124
 8015484:	4623      	mov	r3, r4
 8015486:	47c8      	blx	r9
 8015488:	e9d4 2300 	ldrd	r2, r3, [r4]
 801548c:	441a      	add	r2, r3
 801548e:	6963      	ldr	r3, [r4, #20]
 8015490:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8015494:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8015498:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 801549c:	68a1      	ldr	r1, [r4, #8]
 801549e:	ed94 6a08 	vldr	s12, [r4, #32]
 80154a2:	6022      	str	r2, [r4, #0]
 80154a4:	3301      	adds	r3, #1
 80154a6:	6163      	str	r3, [r4, #20]
 80154a8:	69a3      	ldr	r3, [r4, #24]
 80154aa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80154ae:	3b01      	subs	r3, #1
 80154b0:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 80154b4:	61a3      	str	r3, [r4, #24]
 80154b6:	6923      	ldr	r3, [r4, #16]
 80154b8:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80154bc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80154c0:	edd4 6a07 	vldr	s13, [r4, #28]
 80154c4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80154c8:	440b      	add	r3, r1
 80154ca:	68e1      	ldr	r1, [r4, #12]
 80154cc:	6123      	str	r3, [r4, #16]
 80154ce:	ee76 6a86 	vadd.f32	s13, s13, s12
 80154d2:	428b      	cmp	r3, r1
 80154d4:	edc4 6a07 	vstr	s13, [r4, #28]
 80154d8:	db15      	blt.n	8015506 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80154da:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 80154de:	ee76 6a26 	vadd.f32	s13, s12, s13
 80154e2:	3201      	adds	r2, #1
 80154e4:	edc4 6a07 	vstr	s13, [r4, #28]
 80154e8:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 80154ec:	6022      	str	r2, [r4, #0]
 80154ee:	ee36 7a87 	vadd.f32	s14, s13, s14
 80154f2:	1a5b      	subs	r3, r3, r1
 80154f4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80154f8:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 80154fc:	6123      	str	r3, [r4, #16]
 80154fe:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015502:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8015506:	e9d5 2300 	ldrd	r2, r3, [r5]
 801550a:	441a      	add	r2, r3
 801550c:	696b      	ldr	r3, [r5, #20]
 801550e:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8015512:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8015516:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 801551a:	68a9      	ldr	r1, [r5, #8]
 801551c:	ed95 6a08 	vldr	s12, [r5, #32]
 8015520:	602a      	str	r2, [r5, #0]
 8015522:	3301      	adds	r3, #1
 8015524:	616b      	str	r3, [r5, #20]
 8015526:	69ab      	ldr	r3, [r5, #24]
 8015528:	ee37 7a27 	vadd.f32	s14, s14, s15
 801552c:	3b01      	subs	r3, #1
 801552e:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8015532:	61ab      	str	r3, [r5, #24]
 8015534:	692b      	ldr	r3, [r5, #16]
 8015536:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 801553a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801553e:	edd5 6a07 	vldr	s13, [r5, #28]
 8015542:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8015546:	440b      	add	r3, r1
 8015548:	68e9      	ldr	r1, [r5, #12]
 801554a:	612b      	str	r3, [r5, #16]
 801554c:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015550:	428b      	cmp	r3, r1
 8015552:	edc5 6a07 	vstr	s13, [r5, #28]
 8015556:	db15      	blt.n	8015584 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8015558:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 801555c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015560:	3201      	adds	r2, #1
 8015562:	edc5 6a07 	vstr	s13, [r5, #28]
 8015566:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 801556a:	602a      	str	r2, [r5, #0]
 801556c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015570:	1a5b      	subs	r3, r3, r1
 8015572:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8015576:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 801557a:	612b      	str	r3, [r5, #16]
 801557c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015580:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8015584:	3f01      	subs	r7, #1
 8015586:	e757      	b.n	8015438 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8015588:	4299      	cmp	r1, r3
 801558a:	dc13      	bgt.n	80155b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 801558c:	429a      	cmp	r2, r3
 801558e:	da14      	bge.n	80155ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8015590:	2502      	movs	r5, #2
 8015592:	2703      	movs	r7, #3
 8015594:	46a9      	mov	r9, r5
 8015596:	f04f 0800 	mov.w	r8, #0
 801559a:	f04f 0a01 	mov.w	sl, #1
 801559e:	e6ef      	b.n	8015380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80155a0:	2501      	movs	r5, #1
 80155a2:	2700      	movs	r7, #0
 80155a4:	46a9      	mov	r9, r5
 80155a6:	46b8      	mov	r8, r7
 80155a8:	f04f 0a02 	mov.w	sl, #2
 80155ac:	e6e8      	b.n	8015380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80155ae:	2501      	movs	r5, #1
 80155b0:	2702      	movs	r7, #2
 80155b2:	e6e1      	b.n	8015378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80155b4:	2500      	movs	r5, #0
 80155b6:	2701      	movs	r7, #1
 80155b8:	e7f4      	b.n	80155a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80155ba:	2702      	movs	r7, #2
 80155bc:	2503      	movs	r5, #3
 80155be:	f04f 0900 	mov.w	r9, #0
 80155c2:	46b8      	mov	r8, r7
 80155c4:	e7e9      	b.n	801559a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80155c6:	4613      	mov	r3, r2
 80155c8:	e728      	b.n	801541c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80155ca:	bf00      	nop
 80155cc:	20013f44 	.word	0x20013f44
 80155d0:	fffd8f01 	.word	0xfffd8f01
 80155d4:	00027100 	.word	0x00027100
 80155d8:	0004e1ff 	.word	0x0004e1ff
 80155dc:	0004e1fe 	.word	0x0004e1fe
 80155e0:	20013f4c 	.word	0x20013f4c
 80155e4:	4613      	mov	r3, r2
 80155e6:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80155e8:	9111      	str	r1, [sp, #68]	@ 0x44
 80155ea:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 80155ee:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 80155f2:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 80155f4:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 80155f8:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 80155fc:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 8015600:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 8015604:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 8015608:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 801560c:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 8015610:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 8015614:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 8015618:	469e      	mov	lr, r3
 801561a:	469c      	mov	ip, r3
 801561c:	f04f 0900 	mov.w	r9, #0
 8015620:	f1bc 0f00 	cmp.w	ip, #0
 8015624:	d147      	bne.n	80156b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8015626:	eb03 0c07 	add.w	ip, r3, r7
 801562a:	1ad7      	subs	r7, r2, r3
 801562c:	f1b9 0f00 	cmp.w	r9, #0
 8015630:	d009      	beq.n	8015646 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8015632:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8015636:	9029      	str	r0, [sp, #164]	@ 0xa4
 8015638:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 801563c:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 8015640:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 8015644:	912d      	str	r1, [sp, #180]	@ 0xb4
 8015646:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8015648:	9111      	str	r1, [sp, #68]	@ 0x44
 801564a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 801564e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8015652:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8015656:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 801565a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 801565e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8015662:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8015666:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 801566a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 801566e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8015672:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8015676:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 801567a:	f04f 0800 	mov.w	r8, #0
 801567e:	f1be 0f00 	cmp.w	lr, #0
 8015682:	d031      	beq.n	80156e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8015684:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8015686:	4431      	add	r1, r6
 8015688:	4549      	cmp	r1, r9
 801568a:	4450      	add	r0, sl
 801568c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015690:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015694:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015698:	db08      	blt.n	80156ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801569a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801569e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80156a2:	ee37 7a06 	vadd.f32	s14, s14, s12
 80156a6:	3001      	adds	r0, #1
 80156a8:	eba1 0109 	sub.w	r1, r1, r9
 80156ac:	f10e 3eff 	add.w	lr, lr, #4294967295
 80156b0:	f04f 0801 	mov.w	r8, #1
 80156b4:	e7e3      	b.n	801567e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80156b6:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 80156b8:	4431      	add	r1, r6
 80156ba:	4541      	cmp	r1, r8
 80156bc:	4450      	add	r0, sl
 80156be:	ee37 7a24 	vadd.f32	s14, s14, s9
 80156c2:	ee77 7a84 	vadd.f32	s15, s15, s8
 80156c6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80156ca:	db08      	blt.n	80156de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80156cc:	ee76 6a85 	vadd.f32	s13, s13, s10
 80156d0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80156d4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80156d8:	3001      	adds	r0, #1
 80156da:	eba1 0108 	sub.w	r1, r1, r8
 80156de:	f10c 3cff 	add.w	ip, ip, #4294967295
 80156e2:	f04f 0901 	mov.w	r9, #1
 80156e6:	e79b      	b.n	8015620 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80156e8:	449c      	add	ip, r3
 80156ea:	1aff      	subs	r7, r7, r3
 80156ec:	f1b8 0f00 	cmp.w	r8, #0
 80156f0:	d009      	beq.n	8015706 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80156f2:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 80156f6:	9019      	str	r0, [sp, #100]	@ 0x64
 80156f8:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 80156fc:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8015700:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8015704:	911d      	str	r1, [sp, #116]	@ 0x74
 8015706:	1ad2      	subs	r2, r2, r3
 8015708:	e68b      	b.n	8015422 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801570a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801570c:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 801570e:	2b00      	cmp	r3, #0
 8015710:	f000 80d1 	beq.w	80158b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8015714:	ad19      	add	r5, sp, #100	@ 0x64
 8015716:	ac39      	add	r4, sp, #228	@ 0xe4
 8015718:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 801571a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801571e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015722:	930c      	str	r3, [sp, #48]	@ 0x30
 8015724:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015726:	6963      	ldr	r3, [r4, #20]
 8015728:	440b      	add	r3, r1
 801572a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801572e:	4408      	add	r0, r1
 8015730:	b200      	sxth	r0, r0
 8015732:	4283      	cmp	r3, r0
 8015734:	900d      	str	r0, [sp, #52]	@ 0x34
 8015736:	f280 80c1 	bge.w	80158bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801573a:	428b      	cmp	r3, r1
 801573c:	da08      	bge.n	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801573e:	2a00      	cmp	r2, #0
 8015740:	dd06      	ble.n	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015742:	1acb      	subs	r3, r1, r3
 8015744:	429a      	cmp	r2, r3
 8015746:	f2c0 80bb 	blt.w	80158c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801574a:	2b00      	cmp	r3, #0
 801574c:	f300 80b9 	bgt.w	80158c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8015750:	6967      	ldr	r7, [r4, #20]
 8015752:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015754:	443b      	add	r3, r7
 8015756:	461f      	mov	r7, r3
 8015758:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801575a:	1bdf      	subs	r7, r3, r7
 801575c:	4297      	cmp	r7, r2
 801575e:	bfa8      	it	ge
 8015760:	4617      	movge	r7, r2
 8015762:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8015766:	2f00      	cmp	r7, #0
 8015768:	f340 813c 	ble.w	80159e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 801576c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 801576e:	6829      	ldr	r1, [r5, #0]
 8015770:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015774:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015778:	6820      	ldr	r0, [r4, #0]
 801577a:	4411      	add	r1, r2
 801577c:	4299      	cmp	r1, r3
 801577e:	dd1a      	ble.n	80157b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015780:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015784:	440b      	add	r3, r1
 8015786:	4402      	add	r2, r0
 8015788:	b21b      	sxth	r3, r3
 801578a:	429a      	cmp	r2, r3
 801578c:	dc13      	bgt.n	80157b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801578e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015790:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015792:	681b      	ldr	r3, [r3, #0]
 8015794:	9206      	str	r2, [sp, #24]
 8015796:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015798:	9205      	str	r2, [sp, #20]
 801579a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801579c:	9500      	str	r5, [sp, #0]
 801579e:	e9cd b203 	strd	fp, r2, [sp, #12]
 80157a2:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 80157a4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80157a6:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80157aa:	a912      	add	r1, sp, #72	@ 0x48
 80157ac:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 80157b0:	aa49      	add	r2, sp, #292	@ 0x124
 80157b2:	4623      	mov	r3, r4
 80157b4:	47c8      	blx	r9
 80157b6:	e9d4 2300 	ldrd	r2, r3, [r4]
 80157ba:	441a      	add	r2, r3
 80157bc:	6963      	ldr	r3, [r4, #20]
 80157be:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 80157c2:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 80157c6:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 80157ca:	68a1      	ldr	r1, [r4, #8]
 80157cc:	ed94 6a08 	vldr	s12, [r4, #32]
 80157d0:	6022      	str	r2, [r4, #0]
 80157d2:	3301      	adds	r3, #1
 80157d4:	6163      	str	r3, [r4, #20]
 80157d6:	69a3      	ldr	r3, [r4, #24]
 80157d8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80157dc:	3b01      	subs	r3, #1
 80157de:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 80157e2:	61a3      	str	r3, [r4, #24]
 80157e4:	6923      	ldr	r3, [r4, #16]
 80157e6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80157ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80157ee:	edd4 6a07 	vldr	s13, [r4, #28]
 80157f2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80157f6:	440b      	add	r3, r1
 80157f8:	68e1      	ldr	r1, [r4, #12]
 80157fa:	6123      	str	r3, [r4, #16]
 80157fc:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015800:	428b      	cmp	r3, r1
 8015802:	edc4 6a07 	vstr	s13, [r4, #28]
 8015806:	db15      	blt.n	8015834 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8015808:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 801580c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015810:	3201      	adds	r2, #1
 8015812:	edc4 6a07 	vstr	s13, [r4, #28]
 8015816:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 801581a:	6022      	str	r2, [r4, #0]
 801581c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015820:	1a5b      	subs	r3, r3, r1
 8015822:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8015826:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 801582a:	6123      	str	r3, [r4, #16]
 801582c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015830:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8015834:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015838:	441a      	add	r2, r3
 801583a:	696b      	ldr	r3, [r5, #20]
 801583c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8015840:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8015844:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8015848:	68a9      	ldr	r1, [r5, #8]
 801584a:	ed95 6a08 	vldr	s12, [r5, #32]
 801584e:	602a      	str	r2, [r5, #0]
 8015850:	3301      	adds	r3, #1
 8015852:	616b      	str	r3, [r5, #20]
 8015854:	69ab      	ldr	r3, [r5, #24]
 8015856:	ee37 7a27 	vadd.f32	s14, s14, s15
 801585a:	3b01      	subs	r3, #1
 801585c:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8015860:	61ab      	str	r3, [r5, #24]
 8015862:	692b      	ldr	r3, [r5, #16]
 8015864:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8015868:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801586c:	edd5 6a07 	vldr	s13, [r5, #28]
 8015870:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8015874:	440b      	add	r3, r1
 8015876:	68e9      	ldr	r1, [r5, #12]
 8015878:	612b      	str	r3, [r5, #16]
 801587a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801587e:	428b      	cmp	r3, r1
 8015880:	edc5 6a07 	vstr	s13, [r5, #28]
 8015884:	db15      	blt.n	80158b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8015886:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 801588a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801588e:	3201      	adds	r2, #1
 8015890:	edc5 6a07 	vstr	s13, [r5, #28]
 8015894:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8015898:	602a      	str	r2, [r5, #0]
 801589a:	ee36 7a87 	vadd.f32	s14, s13, s14
 801589e:	1a5b      	subs	r3, r3, r1
 80158a0:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 80158a4:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 80158a8:	612b      	str	r3, [r5, #16]
 80158aa:	ee77 7a27 	vadd.f32	s15, s14, s15
 80158ae:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 80158b2:	3f01      	subs	r7, #1
 80158b4:	e757      	b.n	8015766 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80158b6:	ad39      	add	r5, sp, #228	@ 0xe4
 80158b8:	ac19      	add	r4, sp, #100	@ 0x64
 80158ba:	e72d      	b.n	8015718 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80158bc:	4613      	mov	r3, r2
 80158be:	e744      	b.n	801574a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80158c0:	4613      	mov	r3, r2
 80158c2:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 80158c6:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 80158c8:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 80158cc:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 80158d0:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 80158d4:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 80158d8:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 80158dc:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 80158e0:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 80158e4:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 80158e6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 80158ea:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 80158ee:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 80158f2:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 80158f6:	960e      	str	r6, [sp, #56]	@ 0x38
 80158f8:	469e      	mov	lr, r3
 80158fa:	461f      	mov	r7, r3
 80158fc:	f04f 0900 	mov.w	r9, #0
 8015900:	2f00      	cmp	r7, #0
 8015902:	d146      	bne.n	8015992 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8015904:	449c      	add	ip, r3
 8015906:	1ad7      	subs	r7, r2, r3
 8015908:	f1b9 0f00 	cmp.w	r9, #0
 801590c:	d009      	beq.n	8015922 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 801590e:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 8015912:	9039      	str	r0, [sp, #228]	@ 0xe4
 8015914:	913d      	str	r1, [sp, #244]	@ 0xf4
 8015916:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 801591a:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 801591e:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 8015922:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8015924:	910e      	str	r1, [sp, #56]	@ 0x38
 8015926:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 801592a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 801592e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8015932:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8015936:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 801593a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 801593e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8015942:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8015946:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 801594a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 801594e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8015952:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8015956:	f04f 0800 	mov.w	r8, #0
 801595a:	f1be 0f00 	cmp.w	lr, #0
 801595e:	d030      	beq.n	80159c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8015960:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8015962:	4431      	add	r1, r6
 8015964:	4549      	cmp	r1, r9
 8015966:	4450      	add	r0, sl
 8015968:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801596c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015970:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015974:	db08      	blt.n	8015988 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8015976:	ee77 7a85 	vadd.f32	s15, s15, s10
 801597a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801597e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015982:	3001      	adds	r0, #1
 8015984:	eba1 0109 	sub.w	r1, r1, r9
 8015988:	f10e 3eff 	add.w	lr, lr, #4294967295
 801598c:	f04f 0801 	mov.w	r8, #1
 8015990:	e7e3      	b.n	801595a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8015992:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8015994:	4431      	add	r1, r6
 8015996:	4541      	cmp	r1, r8
 8015998:	4450      	add	r0, sl
 801599a:	ee37 7a24 	vadd.f32	s14, s14, s9
 801599e:	ee77 7a84 	vadd.f32	s15, s15, s8
 80159a2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80159a6:	db08      	blt.n	80159ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80159a8:	ee76 6a85 	vadd.f32	s13, s13, s10
 80159ac:	ee37 7a25 	vadd.f32	s14, s14, s11
 80159b0:	ee77 7a86 	vadd.f32	s15, s15, s12
 80159b4:	3001      	adds	r0, #1
 80159b6:	eba1 0108 	sub.w	r1, r1, r8
 80159ba:	3f01      	subs	r7, #1
 80159bc:	f04f 0901 	mov.w	r9, #1
 80159c0:	e79e      	b.n	8015900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80159c2:	449c      	add	ip, r3
 80159c4:	1aff      	subs	r7, r7, r3
 80159c6:	f1b8 0f00 	cmp.w	r8, #0
 80159ca:	d009      	beq.n	80159e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80159cc:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 80159d0:	9019      	str	r0, [sp, #100]	@ 0x64
 80159d2:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 80159d6:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 80159da:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 80159de:	911d      	str	r1, [sp, #116]	@ 0x74
 80159e0:	1ad2      	subs	r2, r2, r3
 80159e2:	e6b5      	b.n	8015750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80159e4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80159e6:	681b      	ldr	r3, [r3, #0]
 80159e8:	b923      	cbnz	r3, 80159f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80159ea:	4b04      	ldr	r3, [pc, #16]	@ (80159fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80159ec:	6818      	ldr	r0, [r3, #0]
 80159ee:	6803      	ldr	r3, [r0, #0]
 80159f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80159f2:	4798      	blx	r3
 80159f4:	b05b      	add	sp, #364	@ 0x16c
 80159f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80159fa:	bf00      	nop
 80159fc:	20013f4c 	.word	0x20013f4c

08015a00 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8015a00:	b570      	push	{r4, r5, r6, lr}
 8015a02:	4604      	mov	r4, r0
 8015a04:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8015a08:	9805      	ldr	r0, [sp, #20]
 8015a0a:	6061      	str	r1, [r4, #4]
 8015a0c:	2500      	movs	r5, #0
 8015a0e:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8015a12:	8263      	strh	r3, [r4, #18]
 8015a14:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015a18:	8025      	strh	r5, [r4, #0]
 8015a1a:	7221      	strb	r1, [r4, #8]
 8015a1c:	7266      	strb	r6, [r4, #9]
 8015a1e:	60e0      	str	r0, [r4, #12]
 8015a20:	8222      	strh	r2, [r4, #16]
 8015a22:	82a3      	strh	r3, [r4, #20]
 8015a24:	82e5      	strh	r5, [r4, #22]
 8015a26:	8325      	strh	r5, [r4, #24]
 8015a28:	8365      	strh	r5, [r4, #26]
 8015a2a:	83a5      	strh	r5, [r4, #28]
 8015a2c:	83e5      	strh	r5, [r4, #30]
 8015a2e:	8425      	strh	r5, [r4, #32]
 8015a30:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 8015a34:	b32e      	cbz	r6, 8015a82 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015a36:	6803      	ldr	r3, [r0, #0]
 8015a38:	695b      	ldr	r3, [r3, #20]
 8015a3a:	4798      	blx	r3
 8015a3c:	4606      	mov	r6, r0
 8015a3e:	b300      	cbz	r0, 8015a82 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015a40:	68e0      	ldr	r0, [r4, #12]
 8015a42:	6803      	ldr	r3, [r0, #0]
 8015a44:	4631      	mov	r1, r6
 8015a46:	68db      	ldr	r3, [r3, #12]
 8015a48:	4798      	blx	r3
 8015a4a:	4605      	mov	r5, r0
 8015a4c:	b1c8      	cbz	r0, 8015a82 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015a4e:	7b43      	ldrb	r3, [r0, #13]
 8015a50:	7a82      	ldrb	r2, [r0, #10]
 8015a52:	005b      	lsls	r3, r3, #1
 8015a54:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8015a58:	4313      	orrs	r3, r2
 8015a5a:	8423      	strh	r3, [r4, #32]
 8015a5c:	7a63      	ldrb	r3, [r4, #9]
 8015a5e:	2b06      	cmp	r3, #6
 8015a60:	d10f      	bne.n	8015a82 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015a62:	68e0      	ldr	r0, [r4, #12]
 8015a64:	6803      	ldr	r3, [r0, #0]
 8015a66:	462a      	mov	r2, r5
 8015a68:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015a6a:	4631      	mov	r1, r6
 8015a6c:	4798      	blx	r3
 8015a6e:	7b6b      	ldrb	r3, [r5, #13]
 8015a70:	005b      	lsls	r3, r3, #1
 8015a72:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015a76:	7aab      	ldrb	r3, [r5, #10]
 8015a78:	4313      	orrs	r3, r2
 8015a7a:	4418      	add	r0, r3
 8015a7c:	8c23      	ldrh	r3, [r4, #32]
 8015a7e:	4418      	add	r0, r3
 8015a80:	8420      	strh	r0, [r4, #32]
 8015a82:	4620      	mov	r0, r4
 8015a84:	bd70      	pop	{r4, r5, r6, pc}

08015a86 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8015a86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a8a:	2400      	movs	r4, #0
 8015a8c:	b085      	sub	sp, #20
 8015a8e:	4681      	mov	r9, r0
 8015a90:	4688      	mov	r8, r1
 8015a92:	4692      	mov	sl, r2
 8015a94:	469b      	mov	fp, r3
 8015a96:	4627      	mov	r7, r4
 8015a98:	4625      	mov	r5, r4
 8015a9a:	4626      	mov	r6, r4
 8015a9c:	4554      	cmp	r4, sl
 8015a9e:	da2a      	bge.n	8015af6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015aa0:	2300      	movs	r3, #0
 8015aa2:	9303      	str	r3, [sp, #12]
 8015aa4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8015aa8:	429d      	cmp	r5, r3
 8015aaa:	d004      	beq.n	8015ab6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8015aac:	f242 030b 	movw	r3, #8203	@ 0x200b
 8015ab0:	429d      	cmp	r5, r3
 8015ab2:	bf18      	it	ne
 8015ab4:	462f      	movne	r7, r5
 8015ab6:	ab03      	add	r3, sp, #12
 8015ab8:	4642      	mov	r2, r8
 8015aba:	4659      	mov	r1, fp
 8015abc:	4648      	mov	r0, r9
 8015abe:	f003 fd4f 	bl	8019560 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015ac2:	4605      	mov	r5, r0
 8015ac4:	b1b8      	cbz	r0, 8015af6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015ac6:	280a      	cmp	r0, #10
 8015ac8:	d015      	beq.n	8015af6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015aca:	9a03      	ldr	r2, [sp, #12]
 8015acc:	b18a      	cbz	r2, 8015af2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8015ace:	7b50      	ldrb	r0, [r2, #13]
 8015ad0:	7a93      	ldrb	r3, [r2, #10]
 8015ad2:	8895      	ldrh	r5, [r2, #4]
 8015ad4:	0040      	lsls	r0, r0, #1
 8015ad6:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8015ada:	4303      	orrs	r3, r0
 8015adc:	9301      	str	r3, [sp, #4]
 8015ade:	f8d8 3000 	ldr.w	r3, [r8]
 8015ae2:	4639      	mov	r1, r7
 8015ae4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015ae6:	4640      	mov	r0, r8
 8015ae8:	4798      	blx	r3
 8015aea:	9b01      	ldr	r3, [sp, #4]
 8015aec:	4418      	add	r0, r3
 8015aee:	4406      	add	r6, r0
 8015af0:	b2b6      	uxth	r6, r6
 8015af2:	3401      	adds	r4, #1
 8015af4:	e7d2      	b.n	8015a9c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8015af6:	4630      	mov	r0, r6
 8015af8:	b005      	add	sp, #20
 8015afa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015afe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8015afe:	2a02      	cmp	r2, #2
 8015b00:	b530      	push	{r4, r5, lr}
 8015b02:	d011      	beq.n	8015b28 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8015b04:	2a03      	cmp	r2, #3
 8015b06:	d01c      	beq.n	8015b42 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8015b08:	2a01      	cmp	r2, #1
 8015b0a:	d10c      	bne.n	8015b26 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015b0c:	888b      	ldrh	r3, [r1, #4]
 8015b0e:	8801      	ldrh	r1, [r0, #0]
 8015b10:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8015b14:	8844      	ldrh	r4, [r0, #2]
 8015b16:	8004      	strh	r4, [r0, #0]
 8015b18:	1a5b      	subs	r3, r3, r1
 8015b1a:	1a9b      	subs	r3, r3, r2
 8015b1c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015b20:	8043      	strh	r3, [r0, #2]
 8015b22:	8081      	strh	r1, [r0, #4]
 8015b24:	80c2      	strh	r2, [r0, #6]
 8015b26:	bd30      	pop	{r4, r5, pc}
 8015b28:	88cb      	ldrh	r3, [r1, #6]
 8015b2a:	8842      	ldrh	r2, [r0, #2]
 8015b2c:	1a9b      	subs	r3, r3, r2
 8015b2e:	88c2      	ldrh	r2, [r0, #6]
 8015b30:	1a9b      	subs	r3, r3, r2
 8015b32:	888a      	ldrh	r2, [r1, #4]
 8015b34:	8801      	ldrh	r1, [r0, #0]
 8015b36:	8043      	strh	r3, [r0, #2]
 8015b38:	1a52      	subs	r2, r2, r1
 8015b3a:	8881      	ldrh	r1, [r0, #4]
 8015b3c:	1a52      	subs	r2, r2, r1
 8015b3e:	8002      	strh	r2, [r0, #0]
 8015b40:	e7f1      	b.n	8015b26 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015b42:	88cb      	ldrh	r3, [r1, #6]
 8015b44:	8841      	ldrh	r1, [r0, #2]
 8015b46:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8015b4a:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015b4e:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8015b52:	8045      	strh	r5, [r0, #2]
 8015b54:	1a5b      	subs	r3, r3, r1
 8015b56:	1a9b      	subs	r3, r3, r2
 8015b58:	8003      	strh	r3, [r0, #0]
 8015b5a:	8082      	strh	r2, [r0, #4]
 8015b5c:	80c4      	strh	r4, [r0, #6]
 8015b5e:	e7e2      	b.n	8015b26 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08015b60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8015b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b64:	b09f      	sub	sp, #124	@ 0x7c
 8015b66:	920f      	str	r2, [sp, #60]	@ 0x3c
 8015b68:	9312      	str	r3, [sp, #72]	@ 0x48
 8015b6a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8015b6c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8015b6e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8015b70:	8812      	ldrh	r2, [r2, #0]
 8015b72:	889b      	ldrh	r3, [r3, #4]
 8015b74:	900e      	str	r0, [sp, #56]	@ 0x38
 8015b76:	4413      	add	r3, r2
 8015b78:	6828      	ldr	r0, [r5, #0]
 8015b7a:	9117      	str	r1, [sp, #92]	@ 0x5c
 8015b7c:	b21b      	sxth	r3, r3
 8015b7e:	9311      	str	r3, [sp, #68]	@ 0x44
 8015b80:	6803      	ldr	r3, [r0, #0]
 8015b82:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 8015b86:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8015b88:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 8015b8c:	4798      	blx	r3
 8015b8e:	682b      	ldr	r3, [r5, #0]
 8015b90:	9013      	str	r0, [sp, #76]	@ 0x4c
 8015b92:	7b1a      	ldrb	r2, [r3, #12]
 8015b94:	7adb      	ldrb	r3, [r3, #11]
 8015b96:	9215      	str	r2, [sp, #84]	@ 0x54
 8015b98:	9316      	str	r3, [sp, #88]	@ 0x58
 8015b9a:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 8015b9e:	2c00      	cmp	r4, #0
 8015ba0:	d067      	beq.n	8015c72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8015ba2:	7c2b      	ldrb	r3, [r5, #16]
 8015ba4:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8015ba6:	2b06      	cmp	r3, #6
 8015ba8:	bf14      	ite	ne
 8015baa:	2301      	movne	r3, #1
 8015bac:	2302      	moveq	r3, #2
 8015bae:	4413      	add	r3, r2
 8015bb0:	f04f 0900 	mov.w	r9, #0
 8015bb4:	9310      	str	r3, [sp, #64]	@ 0x40
 8015bb6:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8015bba:	464c      	mov	r4, r9
 8015bbc:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 8015bc0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015bc2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015bc4:	4293      	cmp	r3, r2
 8015bc6:	f280 808b 	bge.w	8015ce0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8015bca:	2300      	movs	r3, #0
 8015bcc:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 8015bd0:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 8015bd4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8015bd8:	429c      	cmp	r4, r3
 8015bda:	d006      	beq.n	8015bea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 8015bdc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015bde:	f242 020b 	movw	r2, #8203	@ 0x200b
 8015be2:	4294      	cmp	r4, r2
 8015be4:	bf18      	it	ne
 8015be6:	4623      	movne	r3, r4
 8015be8:	930c      	str	r3, [sp, #48]	@ 0x30
 8015bea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015bec:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8015bee:	682a      	ldr	r2, [r5, #0]
 8015bf0:	428b      	cmp	r3, r1
 8015bf2:	db40      	blt.n	8015c76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8015bf4:	6813      	ldr	r3, [r2, #0]
 8015bf6:	4610      	mov	r0, r2
 8015bf8:	695b      	ldr	r3, [r3, #20]
 8015bfa:	4798      	blx	r3
 8015bfc:	4604      	mov	r4, r0
 8015bfe:	6828      	ldr	r0, [r5, #0]
 8015c00:	6803      	ldr	r3, [r0, #0]
 8015c02:	aa1d      	add	r2, sp, #116	@ 0x74
 8015c04:	689f      	ldr	r7, [r3, #8]
 8015c06:	4621      	mov	r1, r4
 8015c08:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8015c0c:	47b8      	blx	r7
 8015c0e:	901c      	str	r0, [sp, #112]	@ 0x70
 8015c10:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8015c14:	429c      	cmp	r4, r3
 8015c16:	f000 80ea 	beq.w	8015dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015c1a:	f242 030b 	movw	r3, #8203	@ 0x200b
 8015c1e:	429c      	cmp	r4, r3
 8015c20:	f000 80e5 	beq.w	8015dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015c24:	2c00      	cmp	r4, #0
 8015c26:	f000 810c 	beq.w	8015e42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8015c2a:	2c0a      	cmp	r4, #10
 8015c2c:	d05e      	beq.n	8015cec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8015c2e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8015c30:	b36a      	cbz	r2, 8015c8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8015c32:	8894      	ldrh	r4, [r2, #4]
 8015c34:	f1bb 0f00 	cmp.w	fp, #0
 8015c38:	d03a      	beq.n	8015cb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8015c3a:	f892 900d 	ldrb.w	r9, [r2, #13]
 8015c3e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015c42:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8015c46:	f892 900a 	ldrb.w	r9, [r2, #10]
 8015c4a:	f1bb 0f01 	cmp.w	fp, #1
 8015c4e:	ea49 0903 	orr.w	r9, r9, r3
 8015c52:	d133      	bne.n	8015cbc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 8015c54:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015c56:	eba6 0609 	sub.w	r6, r6, r9
 8015c5a:	2b00      	cmp	r3, #0
 8015c5c:	d14d      	bne.n	8015cfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8015c5e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8015c60:	eb09 0306 	add.w	r3, r9, r6
 8015c64:	4413      	add	r3, r2
 8015c66:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8015c68:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015c6c:	4293      	cmp	r3, r2
 8015c6e:	da4e      	bge.n	8015d0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8015c70:	e036      	b.n	8015ce0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8015c72:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8015c74:	e79c      	b.n	8015bb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 8015c76:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8015c7a:	9301      	str	r3, [sp, #4]
 8015c7c:	ab1d      	add	r3, sp, #116	@ 0x74
 8015c7e:	9300      	str	r3, [sp, #0]
 8015c80:	4659      	mov	r1, fp
 8015c82:	ab1c      	add	r3, sp, #112	@ 0x70
 8015c84:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8015c86:	f003 fcb4 	bl	80195f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8015c8a:	4604      	mov	r4, r0
 8015c8c:	e7c0      	b.n	8015c10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8015c8e:	6828      	ldr	r0, [r5, #0]
 8015c90:	6803      	ldr	r3, [r0, #0]
 8015c92:	691b      	ldr	r3, [r3, #16]
 8015c94:	4798      	blx	r3
 8015c96:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8015c9a:	4298      	cmp	r0, r3
 8015c9c:	f000 80a7 	beq.w	8015dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015ca0:	f242 030b 	movw	r3, #8203	@ 0x200b
 8015ca4:	4298      	cmp	r0, r3
 8015ca6:	f000 80a2 	beq.w	8015dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015caa:	f1bb 0f00 	cmp.w	fp, #0
 8015cae:	d100      	bne.n	8015cb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8015cb0:	444e      	add	r6, r9
 8015cb2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8015cb4:	2a00      	cmp	r2, #0
 8015cb6:	d1c0      	bne.n	8015c3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8015cb8:	4691      	mov	r9, r2
 8015cba:	e098      	b.n	8015dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015cbc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015cbe:	2b00      	cmp	r3, #0
 8015cc0:	f000 80c1 	beq.w	8015e46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 8015cc4:	f1bb 0f00 	cmp.w	fp, #0
 8015cc8:	d117      	bne.n	8015cfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8015cca:	6828      	ldr	r0, [r5, #0]
 8015ccc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015cce:	6803      	ldr	r3, [r0, #0]
 8015cd0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015cd2:	4798      	blx	r3
 8015cd4:	4406      	add	r6, r0
 8015cd6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8015cd8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015cda:	1af3      	subs	r3, r6, r3
 8015cdc:	4293      	cmp	r3, r2
 8015cde:	dd16      	ble.n	8015d0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8015ce0:	2c00      	cmp	r4, #0
 8015ce2:	f000 80ae 	beq.w	8015e42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8015ce6:	2c0a      	cmp	r4, #10
 8015ce8:	f040 809c 	bne.w	8015e24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 8015cec:	240a      	movs	r4, #10
 8015cee:	fab4 f084 	clz	r0, r4
 8015cf2:	0940      	lsrs	r0, r0, #5
 8015cf4:	b01f      	add	sp, #124	@ 0x7c
 8015cf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015cfa:	6828      	ldr	r0, [r5, #0]
 8015cfc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015cfe:	6803      	ldr	r3, [r0, #0]
 8015d00:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015d02:	4798      	blx	r3
 8015d04:	f1bb 0f01 	cmp.w	fp, #1
 8015d08:	eba6 0600 	sub.w	r6, r6, r0
 8015d0c:	d0a7      	beq.n	8015c5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8015d0e:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8015d10:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8015d12:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8015d16:	f9b3 8000 	ldrsh.w	r8, [r3]
 8015d1a:	7b43      	ldrb	r3, [r0, #13]
 8015d1c:	015b      	lsls	r3, r3, #5
 8015d1e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015d22:	7983      	ldrb	r3, [r0, #6]
 8015d24:	4431      	add	r1, r6
 8015d26:	4313      	orrs	r3, r2
 8015d28:	440b      	add	r3, r1
 8015d2a:	4543      	cmp	r3, r8
 8015d2c:	db5f      	blt.n	8015dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015d2e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8015d30:	4299      	cmp	r1, r3
 8015d32:	da5c      	bge.n	8015dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015d34:	6828      	ldr	r0, [r5, #0]
 8015d36:	6803      	ldr	r3, [r0, #0]
 8015d38:	45b0      	cmp	r8, r6
 8015d3a:	bfc8      	it	gt
 8015d3c:	eba8 0806 	subgt.w	r8, r8, r6
 8015d40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015d42:	bfcc      	ite	gt
 8015d44:	fa1f f888 	uxthgt.w	r8, r8
 8015d48:	f04f 0800 	movle.w	r8, #0
 8015d4c:	4798      	blx	r3
 8015d4e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8015d50:	7b53      	ldrb	r3, [r2, #13]
 8015d52:	00d9      	lsls	r1, r3, #3
 8015d54:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 8015d58:	7a11      	ldrb	r1, [r2, #8]
 8015d5a:	4339      	orrs	r1, r7
 8015d5c:	065f      	lsls	r7, r3, #25
 8015d5e:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8015d60:	bf44      	itt	mi
 8015d62:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 8015d66:	b209      	sxthmi	r1, r1
 8015d68:	19c7      	adds	r7, r0, r7
 8015d6a:	1a7f      	subs	r7, r7, r1
 8015d6c:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8015d6e:	b2bf      	uxth	r7, r7
 8015d70:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8015d74:	fa0f fa87 	sxth.w	sl, r7
 8015d78:	4551      	cmp	r1, sl
 8015d7a:	dd3c      	ble.n	8015df6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8015d7c:	011b      	lsls	r3, r3, #4
 8015d7e:	79d0      	ldrb	r0, [r2, #7]
 8015d80:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8015d84:	4303      	orrs	r3, r0
 8015d86:	449a      	add	sl, r3
 8015d88:	4551      	cmp	r1, sl
 8015d8a:	dc30      	bgt.n	8015dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015d8c:	1bcf      	subs	r7, r1, r7
 8015d8e:	b23f      	sxth	r7, r7
 8015d90:	468a      	mov	sl, r1
 8015d92:	9219      	str	r2, [sp, #100]	@ 0x64
 8015d94:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015d96:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8015d98:	6828      	ldr	r0, [r5, #0]
 8015d9a:	2a00      	cmp	r2, #0
 8015d9c:	d12d      	bne.n	8015dfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8015d9e:	9318      	str	r3, [sp, #96]	@ 0x60
 8015da0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015da2:	6819      	ldr	r1, [r3, #0]
 8015da4:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 8015da6:	6801      	ldr	r1, [r0, #0]
 8015da8:	9314      	str	r3, [sp, #80]	@ 0x50
 8015daa:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8015dac:	4788      	blx	r1
 8015dae:	79a9      	ldrb	r1, [r5, #6]
 8015db0:	910b      	str	r1, [sp, #44]	@ 0x2c
 8015db2:	7ba9      	ldrb	r1, [r5, #14]
 8015db4:	910a      	str	r1, [sp, #40]	@ 0x28
 8015db6:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 8015dba:	9109      	str	r1, [sp, #36]	@ 0x24
 8015dbc:	68a9      	ldr	r1, [r5, #8]
 8015dbe:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8015dc0:	9306      	str	r3, [sp, #24]
 8015dc2:	b2bf      	uxth	r7, r7
 8015dc4:	e9cd 8702 	strd	r8, r7, [sp, #8]
 8015dc8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8015dca:	9304      	str	r3, [sp, #16]
 8015dcc:	44b0      	add	r8, r6
 8015dce:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8015dd2:	fa0f f388 	sxth.w	r3, r8
 8015dd6:	9300      	str	r3, [sp, #0]
 8015dd8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8015dda:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8015ddc:	9205      	str	r2, [sp, #20]
 8015dde:	f8cd a004 	str.w	sl, [sp, #4]
 8015de2:	681a      	ldr	r2, [r3, #0]
 8015de4:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8015de6:	685b      	ldr	r3, [r3, #4]
 8015de8:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8015dea:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 8015dec:	47b8      	blx	r7
 8015dee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015df0:	3301      	adds	r3, #1
 8015df2:	930d      	str	r3, [sp, #52]	@ 0x34
 8015df4:	e6e4      	b.n	8015bc0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 8015df6:	2700      	movs	r7, #0
 8015df8:	e7cb      	b.n	8015d92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 8015dfa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8015dfc:	f8d2 c008 	ldr.w	ip, [r2, #8]
 8015e00:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015e02:	f8dc 1000 	ldr.w	r1, [ip]
 8015e06:	e9cd 6204 	strd	r6, r2, [sp, #16]
 8015e0a:	79aa      	ldrb	r2, [r5, #6]
 8015e0c:	9203      	str	r2, [sp, #12]
 8015e0e:	7baa      	ldrb	r2, [r5, #14]
 8015e10:	9202      	str	r2, [sp, #8]
 8015e12:	68aa      	ldr	r2, [r5, #8]
 8015e14:	e9cd 0200 	strd	r0, r2, [sp]
 8015e18:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8015e1a:	688f      	ldr	r7, [r1, #8]
 8015e1c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8015e1e:	4660      	mov	r0, ip
 8015e20:	47b8      	blx	r7
 8015e22:	e7e4      	b.n	8015dee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8015e24:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8015e26:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8015e28:	3501      	adds	r5, #1
 8015e2a:	429d      	cmp	r5, r3
 8015e2c:	f6bf af5f 	bge.w	8015cee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8015e30:	4659      	mov	r1, fp
 8015e32:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8015e34:	f7f1 f9a0 	bl	8007178 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015e38:	4604      	mov	r4, r0
 8015e3a:	b110      	cbz	r0, 8015e42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8015e3c:	280a      	cmp	r0, #10
 8015e3e:	d1f2      	bne.n	8015e26 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 8015e40:	e754      	b.n	8015cec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8015e42:	2400      	movs	r4, #0
 8015e44:	e753      	b.n	8015cee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8015e46:	f1bb 0f00 	cmp.w	fp, #0
 8015e4a:	f43f af44 	beq.w	8015cd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 8015e4e:	e75e      	b.n	8015d0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08015e50 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8015e50:	b530      	push	{r4, r5, lr}
 8015e52:	8ac4      	ldrh	r4, [r0, #22]
 8015e54:	8b45      	ldrh	r5, [r0, #26]
 8015e56:	8343      	strh	r3, [r0, #26]
 8015e58:	442c      	add	r4, r5
 8015e5a:	1ae4      	subs	r4, r4, r3
 8015e5c:	82c4      	strh	r4, [r0, #22]
 8015e5e:	8b83      	ldrh	r3, [r0, #28]
 8015e60:	8b04      	ldrh	r4, [r0, #24]
 8015e62:	4422      	add	r2, r4
 8015e64:	440c      	add	r4, r1
 8015e66:	1a59      	subs	r1, r3, r1
 8015e68:	83c2      	strh	r2, [r0, #30]
 8015e6a:	8304      	strh	r4, [r0, #24]
 8015e6c:	8381      	strh	r1, [r0, #28]
 8015e6e:	bd30      	pop	{r4, r5, pc}

08015e70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8015e70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e74:	4604      	mov	r4, r0
 8015e76:	8a47      	ldrh	r7, [r0, #18]
 8015e78:	68c0      	ldr	r0, [r0, #12]
 8015e7a:	6803      	ldr	r3, [r0, #0]
 8015e7c:	b085      	sub	sp, #20
 8015e7e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015e80:	4798      	blx	r3
 8015e82:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8015e86:	7a63      	ldrb	r3, [r4, #9]
 8015e88:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8015e8c:	42b7      	cmp	r7, r6
 8015e8e:	f103 33ff 	add.w	r3, r3, #4294967295
 8015e92:	bfac      	ite	ge
 8015e94:	f04f 0900 	movge.w	r9, #0
 8015e98:	f04f 0901 	movlt.w	r9, #1
 8015e9c:	2b05      	cmp	r3, #5
 8015e9e:	d804      	bhi.n	8015eaa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8015ea0:	e8df f003 	tbb	[pc, r3]
 8015ea4:	470e0854 	.word	0x470e0854
 8015ea8:	4c4c      	.short	0x4c4c
 8015eaa:	2500      	movs	r5, #0
 8015eac:	46a9      	mov	r9, r5
 8015eae:	462e      	mov	r6, r5
 8015eb0:	462f      	mov	r7, r5
 8015eb2:	e00d      	b.n	8015ed0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015eb4:	42b7      	cmp	r7, r6
 8015eb6:	bfb4      	ite	lt
 8015eb8:	2600      	movlt	r6, #0
 8015eba:	2601      	movge	r6, #1
 8015ebc:	2500      	movs	r5, #0
 8015ebe:	e7f7      	b.n	8015eb0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015ec0:	42b7      	cmp	r7, r6
 8015ec2:	464d      	mov	r5, r9
 8015ec4:	f04f 0900 	mov.w	r9, #0
 8015ec8:	bfb4      	ite	lt
 8015eca:	2600      	movlt	r6, #0
 8015ecc:	2601      	movge	r6, #1
 8015ece:	464f      	mov	r7, r9
 8015ed0:	f04f 0800 	mov.w	r8, #0
 8015ed4:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015ed8:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015edc:	f8cd 8004 	str.w	r8, [sp, #4]
 8015ee0:	2300      	movs	r3, #0
 8015ee2:	9303      	str	r3, [sp, #12]
 8015ee4:	8823      	ldrh	r3, [r4, #0]
 8015ee6:	2b20      	cmp	r3, #32
 8015ee8:	d034      	beq.n	8015f54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015eea:	f242 010b 	movw	r1, #8203	@ 0x200b
 8015eee:	1a5a      	subs	r2, r3, r1
 8015ef0:	f1d2 0a00 	rsbs	sl, r2, #0
 8015ef4:	eb4a 0a02 	adc.w	sl, sl, r2
 8015ef8:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8015efc:	4293      	cmp	r3, r2
 8015efe:	d009      	beq.n	8015f14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015f00:	428b      	cmp	r3, r1
 8015f02:	9a01      	ldr	r2, [sp, #4]
 8015f04:	bf18      	it	ne
 8015f06:	461a      	movne	r2, r3
 8015f08:	9201      	str	r2, [sp, #4]
 8015f0a:	bf0c      	ite	eq
 8015f0c:	f04f 0a01 	moveq.w	sl, #1
 8015f10:	f04f 0a00 	movne.w	sl, #0
 8015f14:	ab03      	add	r3, sp, #12
 8015f16:	68e2      	ldr	r2, [r4, #12]
 8015f18:	7a21      	ldrb	r1, [r4, #8]
 8015f1a:	6860      	ldr	r0, [r4, #4]
 8015f1c:	f003 fb20 	bl	8019560 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015f20:	8020      	strh	r0, [r4, #0]
 8015f22:	b9d8      	cbnz	r0, 8015f5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8015f24:	8ba2      	ldrh	r2, [r4, #28]
 8015f26:	2300      	movs	r3, #0
 8015f28:	4611      	mov	r1, r2
 8015f2a:	4620      	mov	r0, r4
 8015f2c:	f7ff ff90 	bl	8015e50 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015f30:	e06e      	b.n	8016010 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015f32:	2500      	movs	r5, #0
 8015f34:	46a9      	mov	r9, r5
 8015f36:	462e      	mov	r6, r5
 8015f38:	2701      	movs	r7, #1
 8015f3a:	e7c9      	b.n	8015ed0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015f3c:	42b7      	cmp	r7, r6
 8015f3e:	f04f 0500 	mov.w	r5, #0
 8015f42:	bfb4      	ite	lt
 8015f44:	2700      	movlt	r7, #0
 8015f46:	2701      	movge	r7, #1
 8015f48:	462e      	mov	r6, r5
 8015f4a:	e7c1      	b.n	8015ed0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015f4c:	2500      	movs	r5, #0
 8015f4e:	46a9      	mov	r9, r5
 8015f50:	2601      	movs	r6, #1
 8015f52:	e7ad      	b.n	8015eb0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015f54:	9301      	str	r3, [sp, #4]
 8015f56:	f04f 0a01 	mov.w	sl, #1
 8015f5a:	e7db      	b.n	8015f14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015f5c:	8b63      	ldrh	r3, [r4, #26]
 8015f5e:	280a      	cmp	r0, #10
 8015f60:	f103 0301 	add.w	r3, r3, #1
 8015f64:	8363      	strh	r3, [r4, #26]
 8015f66:	d0dd      	beq.n	8015f24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8015f68:	9a03      	ldr	r2, [sp, #12]
 8015f6a:	bb62      	cbnz	r2, 8015fc6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8015f6c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8015f70:	4298      	cmp	r0, r3
 8015f72:	d003      	beq.n	8015f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015f74:	f242 030b 	movw	r3, #8203	@ 0x200b
 8015f78:	4298      	cmp	r0, r3
 8015f7a:	d1b1      	bne.n	8015ee0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015f7c:	8823      	ldrh	r3, [r4, #0]
 8015f7e:	8ba1      	ldrh	r1, [r4, #28]
 8015f80:	2b20      	cmp	r3, #32
 8015f82:	d003      	beq.n	8015f8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8015f84:	f242 000b 	movw	r0, #8203	@ 0x200b
 8015f88:	4283      	cmp	r3, r0
 8015f8a:	d131      	bne.n	8015ff0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8015f8c:	f1ba 0f00 	cmp.w	sl, #0
 8015f90:	bf0a      	itet	eq
 8015f92:	4688      	moveq	r8, r1
 8015f94:	4650      	movne	r0, sl
 8015f96:	2001      	moveq	r0, #1
 8015f98:	440a      	add	r2, r1
 8015f9a:	8b23      	ldrh	r3, [r4, #24]
 8015f9c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8015fa0:	b292      	uxth	r2, r2
 8015fa2:	83a2      	strh	r2, [r4, #28]
 8015fa4:	4413      	add	r3, r2
 8015fa6:	f1b9 0f00 	cmp.w	r9, #0
 8015faa:	d102      	bne.n	8015fb2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015fac:	2d00      	cmp	r5, #0
 8015fae:	d042      	beq.n	8016036 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8015fb0:	b300      	cbz	r0, 8015ff4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8015fb2:	8c21      	ldrh	r1, [r4, #32]
 8015fb4:	4419      	add	r1, r3
 8015fb6:	458c      	cmp	ip, r1
 8015fb8:	da37      	bge.n	801602a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015fba:	8ae1      	ldrh	r1, [r4, #22]
 8015fbc:	2900      	cmp	r1, #0
 8015fbe:	d034      	beq.n	801602a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015fc0:	4563      	cmp	r3, ip
 8015fc2:	dd8d      	ble.n	8015ee0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015fc4:	e01d      	b.n	8016002 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015fc6:	8893      	ldrh	r3, [r2, #4]
 8015fc8:	8023      	strh	r3, [r4, #0]
 8015fca:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8015fce:	9901      	ldr	r1, [sp, #4]
 8015fd0:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015fd4:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 8015fd8:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015fdc:	ea4b 0b00 	orr.w	fp, fp, r0
 8015fe0:	68e0      	ldr	r0, [r4, #12]
 8015fe2:	6803      	ldr	r3, [r0, #0]
 8015fe4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015fe6:	4798      	blx	r3
 8015fe8:	eb0b 0200 	add.w	r2, fp, r0
 8015fec:	b292      	uxth	r2, r2
 8015fee:	e7c5      	b.n	8015f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015ff0:	2000      	movs	r0, #0
 8015ff2:	e7d1      	b.n	8015f98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8015ff4:	4563      	cmp	r3, ip
 8015ff6:	f77f af73 	ble.w	8015ee0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015ffa:	8ae3      	ldrh	r3, [r4, #22]
 8015ffc:	2b00      	cmp	r3, #0
 8015ffe:	f43f af6f 	beq.w	8015ee0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016002:	2301      	movs	r3, #1
 8016004:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8016008:	8c22      	ldrh	r2, [r4, #32]
 801600a:	8be3      	ldrh	r3, [r4, #30]
 801600c:	4413      	add	r3, r2
 801600e:	83e3      	strh	r3, [r4, #30]
 8016010:	68e0      	ldr	r0, [r4, #12]
 8016012:	6803      	ldr	r3, [r0, #0]
 8016014:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016016:	4798      	blx	r3
 8016018:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 801601c:	4418      	add	r0, r3
 801601e:	8a63      	ldrh	r3, [r4, #18]
 8016020:	1a18      	subs	r0, r3, r0
 8016022:	8260      	strh	r0, [r4, #18]
 8016024:	b005      	add	sp, #20
 8016026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801602a:	2300      	movs	r3, #0
 801602c:	4611      	mov	r1, r2
 801602e:	4620      	mov	r0, r4
 8016030:	f7ff ff0e 	bl	8015e50 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8016034:	e754      	b.n	8015ee0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016036:	4563      	cmp	r3, ip
 8016038:	dd14      	ble.n	8016064 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 801603a:	b117      	cbz	r7, 8016042 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 801603c:	2301      	movs	r3, #1
 801603e:	460a      	mov	r2, r1
 8016040:	e772      	b.n	8015f28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8016042:	2e00      	cmp	r6, #0
 8016044:	f43f af4c 	beq.w	8015ee0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016048:	2800      	cmp	r0, #0
 801604a:	f47f af49 	bne.w	8015ee0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801604e:	f1ba 0f00 	cmp.w	sl, #0
 8016052:	d002      	beq.n	801605a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8016054:	2301      	movs	r3, #1
 8016056:	4642      	mov	r2, r8
 8016058:	e767      	b.n	8015f2a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 801605a:	8ae3      	ldrh	r3, [r4, #22]
 801605c:	2b00      	cmp	r3, #0
 801605e:	f43f af3f 	beq.w	8015ee0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016062:	e7d5      	b.n	8016010 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8016064:	2800      	cmp	r0, #0
 8016066:	f47f af3b 	bne.w	8015ee0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801606a:	f1ba 0f00 	cmp.w	sl, #0
 801606e:	f43f af37 	beq.w	8015ee0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016072:	2301      	movs	r3, #1
 8016074:	4642      	mov	r2, r8
 8016076:	e7da      	b.n	801602e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08016078 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8016078:	b5f0      	push	{r4, r5, r6, r7, lr}
 801607a:	4605      	mov	r5, r0
 801607c:	b08f      	sub	sp, #60	@ 0x3c
 801607e:	4617      	mov	r7, r2
 8016080:	461c      	mov	r4, r3
 8016082:	460e      	mov	r6, r1
 8016084:	b1d1      	cbz	r1, 80160bc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8016086:	681b      	ldr	r3, [r3, #0]
 8016088:	4620      	mov	r0, r4
 801608a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801608c:	4798      	blx	r3
 801608e:	4240      	negs	r0, r0
 8016090:	b200      	sxth	r0, r0
 8016092:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8016096:	9603      	str	r6, [sp, #12]
 8016098:	9700      	str	r7, [sp, #0]
 801609a:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801609e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 80160a2:	4629      	mov	r1, r5
 80160a4:	a805      	add	r0, sp, #20
 80160a6:	f7ff fcab 	bl	8015a00 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80160aa:	2401      	movs	r4, #1
 80160ac:	a805      	add	r0, sp, #20
 80160ae:	f7ff fedf 	bl	8015e70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80160b2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80160b6:	b163      	cbz	r3, 80160d2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80160b8:	3401      	adds	r4, #1
 80160ba:	e7f7      	b.n	80160ac <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80160bc:	f003 fb1e 	bl	80196fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 80160c0:	2401      	movs	r4, #1
 80160c2:	280a      	cmp	r0, #10
 80160c4:	4628      	mov	r0, r5
 80160c6:	bf08      	it	eq
 80160c8:	3401      	addeq	r4, #1
 80160ca:	f003 fb17 	bl	80196fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 80160ce:	2800      	cmp	r0, #0
 80160d0:	d1f7      	bne.n	80160c2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80160d2:	b2a0      	uxth	r0, r4
 80160d4:	b00f      	add	sp, #60	@ 0x3c
 80160d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080160d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80160d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80160dc:	b0e3      	sub	sp, #396	@ 0x18c
 80160de:	461c      	mov	r4, r3
 80160e0:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 80160e2:	4683      	mov	fp, r0
 80160e4:	4688      	mov	r8, r1
 80160e6:	2b00      	cmp	r3, #0
 80160e8:	f000 8112 	beq.w	8016310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80160ec:	6823      	ldr	r3, [r4, #0]
 80160ee:	2b00      	cmp	r3, #0
 80160f0:	f000 810e 	beq.w	8016310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80160f4:	7ba3      	ldrb	r3, [r4, #14]
 80160f6:	2b00      	cmp	r3, #0
 80160f8:	f000 810a 	beq.w	8016310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80160fc:	6810      	ldr	r0, [r2, #0]
 80160fe:	6851      	ldr	r1, [r2, #4]
 8016100:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8016104:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8016108:	ad0a      	add	r5, sp, #40	@ 0x28
 801610a:	462b      	mov	r3, r5
 801610c:	c303      	stmia	r3!, {r0, r1}
 801610e:	2100      	movs	r1, #0
 8016110:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8016114:	910c      	str	r1, [sp, #48]	@ 0x30
 8016116:	79a2      	ldrb	r2, [r4, #6]
 8016118:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801611c:	a90c      	add	r1, sp, #48	@ 0x30
 801611e:	4628      	mov	r0, r5
 8016120:	f7ff fced 	bl	8015afe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8016124:	a90c      	add	r1, sp, #48	@ 0x30
 8016126:	4608      	mov	r0, r1
 8016128:	79a2      	ldrb	r2, [r4, #6]
 801612a:	f7ff fce8 	bl	8015afe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801612e:	a817      	add	r0, sp, #92	@ 0x5c
 8016130:	f002 fe8f 	bl	8018e52 <_ZN8touchgfx12TextProviderC1Ev>
 8016134:	6820      	ldr	r0, [r4, #0]
 8016136:	6803      	ldr	r3, [r0, #0]
 8016138:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801613a:	4798      	blx	r3
 801613c:	4606      	mov	r6, r0
 801613e:	6820      	ldr	r0, [r4, #0]
 8016140:	6803      	ldr	r3, [r0, #0]
 8016142:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8016144:	4798      	blx	r3
 8016146:	4633      	mov	r3, r6
 8016148:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 801614a:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801614c:	9000      	str	r0, [sp, #0]
 801614e:	a817      	add	r0, sp, #92	@ 0x5c
 8016150:	f002 feda 	bl	8018f08 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016154:	6820      	ldr	r0, [r4, #0]
 8016156:	f894 a004 	ldrb.w	sl, [r4, #4]
 801615a:	6803      	ldr	r3, [r0, #0]
 801615c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801615e:	4798      	blx	r3
 8016160:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8016164:	6823      	ldr	r3, [r4, #0]
 8016166:	4607      	mov	r7, r0
 8016168:	4406      	add	r6, r0
 801616a:	a830      	add	r0, sp, #192	@ 0xc0
 801616c:	f893 9009 	ldrb.w	r9, [r3, #9]
 8016170:	f002 fe6f 	bl	8018e52 <_ZN8touchgfx12TextProviderC1Ev>
 8016174:	7c23      	ldrb	r3, [r4, #16]
 8016176:	b17b      	cbz	r3, 8016198 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8016178:	6820      	ldr	r0, [r4, #0]
 801617a:	6803      	ldr	r3, [r0, #0]
 801617c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801617e:	4798      	blx	r3
 8016180:	9009      	str	r0, [sp, #36]	@ 0x24
 8016182:	6820      	ldr	r0, [r4, #0]
 8016184:	6802      	ldr	r2, [r0, #0]
 8016186:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8016188:	4790      	blx	r2
 801618a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801618c:	9000      	str	r0, [sp, #0]
 801618e:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8016190:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8016192:	a830      	add	r0, sp, #192	@ 0xc0
 8016194:	f002 feb8 	bl	8018f08 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016198:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801619c:	7be2      	ldrb	r2, [r4, #15]
 801619e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 80161a2:	1a8a      	subs	r2, r1, r2
 80161a4:	7c21      	ldrb	r1, [r4, #16]
 80161a6:	9103      	str	r1, [sp, #12]
 80161a8:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80161ac:	9102      	str	r1, [sp, #8]
 80161ae:	6821      	ldr	r1, [r4, #0]
 80161b0:	9101      	str	r1, [sp, #4]
 80161b2:	7961      	ldrb	r1, [r4, #5]
 80161b4:	9100      	str	r1, [sp, #0]
 80161b6:	b292      	uxth	r2, r2
 80161b8:	a930      	add	r1, sp, #192	@ 0xc0
 80161ba:	a80e      	add	r0, sp, #56	@ 0x38
 80161bc:	f7ff fc20 	bl	8015a00 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80161c0:	2e00      	cmp	r6, #0
 80161c2:	dc5b      	bgt.n	801627c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80161c4:	af17      	add	r7, sp, #92	@ 0x5c
 80161c6:	f04f 0900 	mov.w	r9, #0
 80161ca:	7c23      	ldrb	r3, [r4, #16]
 80161cc:	2b00      	cmp	r3, #0
 80161ce:	f000 80b1 	beq.w	8016334 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80161d2:	a80e      	add	r0, sp, #56	@ 0x38
 80161d4:	f7ff fe4c 	bl	8015e70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80161d8:	f1ba 0f00 	cmp.w	sl, #0
 80161dc:	f000 80a5 	beq.w	801632a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80161e0:	7c23      	ldrb	r3, [r4, #16]
 80161e2:	9309      	str	r3, [sp, #36]	@ 0x24
 80161e4:	2264      	movs	r2, #100	@ 0x64
 80161e6:	4639      	mov	r1, r7
 80161e8:	a849      	add	r0, sp, #292	@ 0x124
 80161ea:	f014 fca6 	bl	802ab3a <memcpy>
 80161ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80161f0:	2b00      	cmp	r3, #0
 80161f2:	f000 80a7 	beq.w	8016344 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80161f6:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 80161fa:	7922      	ldrb	r2, [r4, #4]
 80161fc:	2a01      	cmp	r2, #1
 80161fe:	f040 808a 	bne.w	8016316 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8016202:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8016206:	1ac0      	subs	r0, r0, r3
 8016208:	2302      	movs	r3, #2
 801620a:	fb90 f0f3 	sdiv	r0, r0, r3
 801620e:	b200      	sxth	r0, r0
 8016210:	7c23      	ldrb	r3, [r4, #16]
 8016212:	2b00      	cmp	r3, #0
 8016214:	f000 808b 	beq.w	801632e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8016218:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 801621c:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 8016220:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8016224:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8016228:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801622c:	4410      	add	r0, r2
 801622e:	b200      	sxth	r0, r0
 8016230:	9000      	str	r0, [sp, #0]
 8016232:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8016236:	e9cd 5401 	strd	r5, r4, [sp, #4]
 801623a:	4642      	mov	r2, r8
 801623c:	2100      	movs	r1, #0
 801623e:	4658      	mov	r0, fp
 8016240:	f7ff fc8e 	bl	8015b60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8016244:	2800      	cmp	r0, #0
 8016246:	d163      	bne.n	8016310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016248:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801624c:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8016250:	b2b2      	uxth	r2, r6
 8016252:	4413      	add	r3, r2
 8016254:	1a8a      	subs	r2, r1, r2
 8016256:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 801625a:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 801625e:	b21b      	sxth	r3, r3
 8016260:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8016264:	2a00      	cmp	r2, #0
 8016266:	d153      	bne.n	8016310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016268:	6822      	ldr	r2, [r4, #0]
 801626a:	8869      	ldrh	r1, [r5, #2]
 801626c:	7a12      	ldrb	r2, [r2, #8]
 801626e:	1a9b      	subs	r3, r3, r2
 8016270:	88ea      	ldrh	r2, [r5, #6]
 8016272:	440a      	add	r2, r1
 8016274:	b212      	sxth	r2, r2
 8016276:	4293      	cmp	r3, r2
 8016278:	dda7      	ble.n	80161ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 801627a:	e049      	b.n	8016310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801627c:	7c23      	ldrb	r3, [r4, #16]
 801627e:	444f      	add	r7, r9
 8016280:	b1c3      	cbz	r3, 80162b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8016282:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 8016286:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801628a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801628e:	443b      	add	r3, r7
 8016290:	4293      	cmp	r3, r2
 8016292:	da97      	bge.n	80161c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8016294:	a80e      	add	r0, sp, #56	@ 0x38
 8016296:	f7ff fdeb 	bl	8015e70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801629a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 801629e:	3b01      	subs	r3, #1
 80162a0:	b29b      	uxth	r3, r3
 80162a2:	454b      	cmp	r3, r9
 80162a4:	9309      	str	r3, [sp, #36]	@ 0x24
 80162a6:	d021      	beq.n	80162ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80162a8:	7961      	ldrb	r1, [r4, #5]
 80162aa:	a817      	add	r0, sp, #92	@ 0x5c
 80162ac:	f7f0 ff64 	bl	8007178 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80162b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80162b2:	e7f4      	b.n	801629e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80162b4:	fa1f f986 	uxth.w	r9, r6
 80162b8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80162bc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80162c0:	443b      	add	r3, r7
 80162c2:	4293      	cmp	r3, r2
 80162c4:	f6bf af7e 	bge.w	80161c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80162c8:	a817      	add	r0, sp, #92	@ 0x5c
 80162ca:	f003 fa17 	bl	80196fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 80162ce:	b1f8      	cbz	r0, 8016310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80162d0:	280a      	cmp	r0, #10
 80162d2:	d1f1      	bne.n	80162b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80162d4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80162d8:	444b      	add	r3, r9
 80162da:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80162de:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 80162e2:	eba3 0309 	sub.w	r3, r3, r9
 80162e6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80162ea:	e7e5      	b.n	80162b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80162ec:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 80162f0:	b2b3      	uxth	r3, r6
 80162f2:	441a      	add	r2, r3
 80162f4:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80162f8:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 80162fc:	1ad3      	subs	r3, r2, r3
 80162fe:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8016302:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8016306:	b11b      	cbz	r3, 8016310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016308:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 801630c:	2b00      	cmp	r3, #0
 801630e:	d0ba      	beq.n	8016286 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8016310:	b063      	add	sp, #396	@ 0x18c
 8016312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016316:	2a02      	cmp	r2, #2
 8016318:	d105      	bne.n	8016326 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 801631a:	7be2      	ldrb	r2, [r4, #15]
 801631c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8016320:	1a80      	subs	r0, r0, r2
 8016322:	1ac0      	subs	r0, r0, r3
 8016324:	e773      	b.n	801620e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8016326:	2000      	movs	r0, #0
 8016328:	e772      	b.n	8016210 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801632a:	7be0      	ldrb	r0, [r4, #15]
 801632c:	e770      	b.n	8016210 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801632e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8016332:	e773      	b.n	801621c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8016334:	f1ba 0f00 	cmp.w	sl, #0
 8016338:	d0f7      	beq.n	801632a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801633a:	2264      	movs	r2, #100	@ 0x64
 801633c:	4639      	mov	r1, r7
 801633e:	a849      	add	r0, sp, #292	@ 0x124
 8016340:	f014 fbfb 	bl	802ab3a <memcpy>
 8016344:	2300      	movs	r3, #0
 8016346:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801634a:	6821      	ldr	r1, [r4, #0]
 801634c:	a849      	add	r0, sp, #292	@ 0x124
 801634e:	f7ff fb9a 	bl	8015a86 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8016352:	b203      	sxth	r3, r0
 8016354:	e751      	b.n	80161fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08016356 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8016356:	2b03      	cmp	r3, #3
 8016358:	d818      	bhi.n	801638c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 801635a:	e8df f003 	tbb	[pc, r3]
 801635e:	0602      	.short	0x0602
 8016360:	130d      	.short	0x130d
 8016362:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016366:	1850      	adds	r0, r2, r1
 8016368:	4770      	bx	lr
 801636a:	8803      	ldrh	r3, [r0, #0]
 801636c:	8880      	ldrh	r0, [r0, #4]
 801636e:	4418      	add	r0, r3
 8016370:	b200      	sxth	r0, r0
 8016372:	1a80      	subs	r0, r0, r2
 8016374:	3801      	subs	r0, #1
 8016376:	4770      	bx	lr
 8016378:	8803      	ldrh	r3, [r0, #0]
 801637a:	8880      	ldrh	r0, [r0, #4]
 801637c:	4418      	add	r0, r3
 801637e:	b200      	sxth	r0, r0
 8016380:	1a40      	subs	r0, r0, r1
 8016382:	e7f7      	b.n	8016374 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8016384:	f9b0 0000 	ldrsh.w	r0, [r0]
 8016388:	4410      	add	r0, r2
 801638a:	4770      	bx	lr
 801638c:	2000      	movs	r0, #0
 801638e:	4770      	bx	lr

08016390 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8016390:	2b03      	cmp	r3, #3
 8016392:	d817      	bhi.n	80163c4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8016394:	e8df f003 	tbb	[pc, r3]
 8016398:	10090602 	.word	0x10090602
 801639c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80163a0:	1850      	adds	r0, r2, r1
 80163a2:	4770      	bx	lr
 80163a4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80163a8:	e7fa      	b.n	80163a0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80163aa:	8843      	ldrh	r3, [r0, #2]
 80163ac:	88c0      	ldrh	r0, [r0, #6]
 80163ae:	4418      	add	r0, r3
 80163b0:	b200      	sxth	r0, r0
 80163b2:	1a80      	subs	r0, r0, r2
 80163b4:	3801      	subs	r0, #1
 80163b6:	4770      	bx	lr
 80163b8:	8843      	ldrh	r3, [r0, #2]
 80163ba:	88c0      	ldrh	r0, [r0, #6]
 80163bc:	4418      	add	r0, r3
 80163be:	b200      	sxth	r0, r0
 80163c0:	1a40      	subs	r0, r0, r1
 80163c2:	e7f7      	b.n	80163b4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80163c4:	2000      	movs	r0, #0
 80163c6:	4770      	bx	lr

080163c8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80163c8:	4b01      	ldr	r3, [pc, #4]	@ (80163d0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80163ca:	2200      	movs	r2, #0
 80163cc:	601a      	str	r2, [r3, #0]
 80163ce:	4770      	bx	lr
 80163d0:	20013f5c 	.word	0x20013f5c

080163d4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80163d4:	4603      	mov	r3, r0
 80163d6:	b1c8      	cbz	r0, 801640c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80163d8:	0c02      	lsrs	r2, r0, #16
 80163da:	0412      	lsls	r2, r2, #16
 80163dc:	b9a2      	cbnz	r2, 8016408 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80163de:	0403      	lsls	r3, r0, #16
 80163e0:	2010      	movs	r0, #16
 80163e2:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 80163e6:	bf04      	itt	eq
 80163e8:	021b      	lsleq	r3, r3, #8
 80163ea:	3008      	addeq	r0, #8
 80163ec:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 80163f0:	bf04      	itt	eq
 80163f2:	011b      	lsleq	r3, r3, #4
 80163f4:	3004      	addeq	r0, #4
 80163f6:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 80163fa:	bf04      	itt	eq
 80163fc:	009b      	lsleq	r3, r3, #2
 80163fe:	3002      	addeq	r0, #2
 8016400:	2b00      	cmp	r3, #0
 8016402:	db04      	blt.n	801640e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8016404:	3001      	adds	r0, #1
 8016406:	4770      	bx	lr
 8016408:	2000      	movs	r0, #0
 801640a:	e7ea      	b.n	80163e2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 801640c:	2020      	movs	r0, #32
 801640e:	4770      	bx	lr

08016410 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8016410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016414:	b087      	sub	sp, #28
 8016416:	460d      	mov	r5, r1
 8016418:	4616      	mov	r6, r2
 801641a:	4698      	mov	r8, r3
 801641c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 8016420:	4601      	mov	r1, r0
 8016422:	b120      	cbz	r0, 801642e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016424:	b11a      	cbz	r2, 801642e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016426:	2d1f      	cmp	r5, #31
 8016428:	d801      	bhi.n	801642e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801642a:	2b1f      	cmp	r3, #31
 801642c:	d904      	bls.n	8016438 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801642e:	2000      	movs	r0, #0
 8016430:	6038      	str	r0, [r7, #0]
 8016432:	b007      	add	sp, #28
 8016434:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016438:	b97d      	cbnz	r5, 801645a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 801643a:	b143      	cbz	r3, 801644e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 801643c:	4602      	mov	r2, r0
 801643e:	e9cd 4700 	strd	r4, r7, [sp]
 8016442:	462b      	mov	r3, r5
 8016444:	4641      	mov	r1, r8
 8016446:	4630      	mov	r0, r6
 8016448:	f7ff ffe2 	bl	8016410 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801644c:	e7f1      	b.n	8016432 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801644e:	f04f 33ff 	mov.w	r3, #4294967295
 8016452:	603b      	str	r3, [r7, #0]
 8016454:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8016458:	e7eb      	b.n	8016432 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801645a:	fa32 fa05 	lsrs.w	sl, r2, r5
 801645e:	d106      	bne.n	801646e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8016460:	4346      	muls	r6, r0
 8016462:	fbb6 f0f4 	udiv	r0, r6, r4
 8016466:	fb04 6610 	mls	r6, r4, r0, r6
 801646a:	603e      	str	r6, [r7, #0]
 801646c:	e7e1      	b.n	8016432 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801646e:	2201      	movs	r2, #1
 8016470:	40aa      	lsls	r2, r5
 8016472:	3a01      	subs	r2, #1
 8016474:	4016      	ands	r6, r2
 8016476:	fa00 fb05 	lsl.w	fp, r0, r5
 801647a:	4630      	mov	r0, r6
 801647c:	fbbb f9f4 	udiv	r9, fp, r4
 8016480:	fb0a f309 	mul.w	r3, sl, r9
 8016484:	9303      	str	r3, [sp, #12]
 8016486:	f7ff ffa5 	bl	80163d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801648a:	462b      	mov	r3, r5
 801648c:	460a      	mov	r2, r1
 801648e:	e9cd 4700 	strd	r4, r7, [sp]
 8016492:	4601      	mov	r1, r0
 8016494:	4630      	mov	r0, r6
 8016496:	f7ff ffbb 	bl	8016410 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801649a:	fb04 b919 	mls	r9, r4, r9, fp
 801649e:	4606      	mov	r6, r0
 80164a0:	4648      	mov	r0, r9
 80164a2:	eb05 0108 	add.w	r1, r5, r8
 80164a6:	f7ff ff95 	bl	80163d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80164aa:	ab05      	add	r3, sp, #20
 80164ac:	e9cd 4300 	strd	r4, r3, [sp]
 80164b0:	464a      	mov	r2, r9
 80164b2:	4603      	mov	r3, r0
 80164b4:	4650      	mov	r0, sl
 80164b6:	f7ff ffab 	bl	8016410 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80164ba:	6839      	ldr	r1, [r7, #0]
 80164bc:	9a05      	ldr	r2, [sp, #20]
 80164be:	9b03      	ldr	r3, [sp, #12]
 80164c0:	4411      	add	r1, r2
 80164c2:	fbb1 f2f4 	udiv	r2, r1, r4
 80164c6:	18d3      	adds	r3, r2, r3
 80164c8:	441e      	add	r6, r3
 80164ca:	fb04 1412 	mls	r4, r4, r2, r1
 80164ce:	4430      	add	r0, r6
 80164d0:	603c      	str	r4, [r7, #0]
 80164d2:	e7ae      	b.n	8016432 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080164d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80164d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80164d8:	b085      	sub	sp, #20
 80164da:	f1b0 0900 	subs.w	r9, r0, #0
 80164de:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80164e0:	461d      	mov	r5, r3
 80164e2:	bfbf      	itttt	lt
 80164e4:	6823      	ldrlt	r3, [r4, #0]
 80164e6:	425b      	neglt	r3, r3
 80164e8:	f1c9 0900 	rsblt	r9, r9, #0
 80164ec:	6023      	strlt	r3, [r4, #0]
 80164ee:	bfb4      	ite	lt
 80164f0:	f04f 36ff 	movlt.w	r6, #4294967295
 80164f4:	2601      	movge	r6, #1
 80164f6:	2a00      	cmp	r2, #0
 80164f8:	4617      	mov	r7, r2
 80164fa:	da04      	bge.n	8016506 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80164fc:	6823      	ldr	r3, [r4, #0]
 80164fe:	425b      	negs	r3, r3
 8016500:	4257      	negs	r7, r2
 8016502:	4276      	negs	r6, r6
 8016504:	6023      	str	r3, [r4, #0]
 8016506:	2d00      	cmp	r5, #0
 8016508:	4638      	mov	r0, r7
 801650a:	bfba      	itte	lt
 801650c:	426d      	neglt	r5, r5
 801650e:	f04f 38ff 	movlt.w	r8, #4294967295
 8016512:	f04f 0801 	movge.w	r8, #1
 8016516:	f7ff ff5d 	bl	80163d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801651a:	ab03      	add	r3, sp, #12
 801651c:	e9cd 5300 	strd	r5, r3, [sp]
 8016520:	463a      	mov	r2, r7
 8016522:	4603      	mov	r3, r0
 8016524:	4648      	mov	r0, r9
 8016526:	f7ff ff73 	bl	8016410 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801652a:	6823      	ldr	r3, [r4, #0]
 801652c:	9a03      	ldr	r2, [sp, #12]
 801652e:	4546      	cmp	r6, r8
 8016530:	441a      	add	r2, r3
 8016532:	fb92 f3f5 	sdiv	r3, r2, r5
 8016536:	4418      	add	r0, r3
 8016538:	bf18      	it	ne
 801653a:	4240      	negne	r0, r0
 801653c:	fb05 2313 	mls	r3, r5, r3, r2
 8016540:	1c72      	adds	r2, r6, #1
 8016542:	6023      	str	r3, [r4, #0]
 8016544:	d105      	bne.n	8016552 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8016546:	2b00      	cmp	r3, #0
 8016548:	f1c3 0200 	rsb	r2, r3, #0
 801654c:	db0b      	blt.n	8016566 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801654e:	6022      	str	r2, [r4, #0]
 8016550:	e006      	b.n	8016560 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016552:	2e01      	cmp	r6, #1
 8016554:	d104      	bne.n	8016560 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016556:	2b00      	cmp	r3, #0
 8016558:	da02      	bge.n	8016560 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801655a:	442b      	add	r3, r5
 801655c:	3801      	subs	r0, #1
 801655e:	6023      	str	r3, [r4, #0]
 8016560:	b005      	add	sp, #20
 8016562:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016566:	3801      	subs	r0, #1
 8016568:	1b52      	subs	r2, r2, r5
 801656a:	e7f0      	b.n	801654e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0801656c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 801656c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8016570:	4c1c      	ldr	r4, [pc, #112]	@ (80165e4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8016572:	6807      	ldr	r7, [r0, #0]
 8016574:	69a3      	ldr	r3, [r4, #24]
 8016576:	4605      	mov	r5, r0
 8016578:	b92b      	cbnz	r3, 8016586 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801657a:	6840      	ldr	r0, [r0, #4]
 801657c:	e9c5 7000 	strd	r7, r0, [r5]
 8016580:	b004      	add	sp, #16
 8016582:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016586:	68a2      	ldr	r2, [r4, #8]
 8016588:	6820      	ldr	r0, [r4, #0]
 801658a:	ae04      	add	r6, sp, #16
 801658c:	f04f 0802 	mov.w	r8, #2
 8016590:	fb93 f1f8 	sdiv	r1, r3, r8
 8016594:	440a      	add	r2, r1
 8016596:	f846 2d04 	str.w	r2, [r6, #-4]!
 801659a:	69e1      	ldr	r1, [r4, #28]
 801659c:	9600      	str	r6, [sp, #0]
 801659e:	463a      	mov	r2, r7
 80165a0:	f7ff ff98 	bl	80164d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80165a4:	69a3      	ldr	r3, [r4, #24]
 80165a6:	686a      	ldr	r2, [r5, #4]
 80165a8:	6a21      	ldr	r1, [r4, #32]
 80165aa:	9600      	str	r6, [sp, #0]
 80165ac:	4607      	mov	r7, r0
 80165ae:	6860      	ldr	r0, [r4, #4]
 80165b0:	f7ff ff90 	bl	80164d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80165b4:	6962      	ldr	r2, [r4, #20]
 80165b6:	69a3      	ldr	r3, [r4, #24]
 80165b8:	fb93 f8f8 	sdiv	r8, r3, r8
 80165bc:	4442      	add	r2, r8
 80165be:	9203      	str	r2, [sp, #12]
 80165c0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80165c2:	682a      	ldr	r2, [r5, #0]
 80165c4:	9600      	str	r6, [sp, #0]
 80165c6:	4407      	add	r7, r0
 80165c8:	68e0      	ldr	r0, [r4, #12]
 80165ca:	f7ff ff83 	bl	80164d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80165ce:	9600      	str	r6, [sp, #0]
 80165d0:	4680      	mov	r8, r0
 80165d2:	69a3      	ldr	r3, [r4, #24]
 80165d4:	686a      	ldr	r2, [r5, #4]
 80165d6:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 80165d8:	6920      	ldr	r0, [r4, #16]
 80165da:	f7ff ff7b 	bl	80164d4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80165de:	4440      	add	r0, r8
 80165e0:	e7cc      	b.n	801657c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80165e2:	bf00      	nop
 80165e4:	20013f60 	.word	0x20013f60

080165e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80165e8:	4b07      	ldr	r3, [pc, #28]	@ (8016608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80165ea:	781b      	ldrb	r3, [r3, #0]
 80165ec:	2b01      	cmp	r3, #1
 80165ee:	d109      	bne.n	8016604 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80165f0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80165f4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80165f8:	8003      	strh	r3, [r0, #0]
 80165fa:	4b04      	ldr	r3, [pc, #16]	@ (801660c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80165fc:	881b      	ldrh	r3, [r3, #0]
 80165fe:	3b01      	subs	r3, #1
 8016600:	1a9b      	subs	r3, r3, r2
 8016602:	800b      	strh	r3, [r1, #0]
 8016604:	4770      	bx	lr
 8016606:	bf00      	nop
 8016608:	20013f44 	.word	0x20013f44
 801660c:	20013f40 	.word	0x20013f40

08016610 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8016610:	b510      	push	{r4, lr}
 8016612:	4b07      	ldr	r3, [pc, #28]	@ (8016630 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8016614:	781b      	ldrb	r3, [r3, #0]
 8016616:	2b01      	cmp	r3, #1
 8016618:	d108      	bne.n	801662c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801661a:	4b06      	ldr	r3, [pc, #24]	@ (8016634 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 801661c:	880c      	ldrh	r4, [r1, #0]
 801661e:	881b      	ldrh	r3, [r3, #0]
 8016620:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016624:	3b01      	subs	r3, #1
 8016626:	1b1b      	subs	r3, r3, r4
 8016628:	8003      	strh	r3, [r0, #0]
 801662a:	800a      	strh	r2, [r1, #0]
 801662c:	bd10      	pop	{r4, pc}
 801662e:	bf00      	nop
 8016630:	20013f44 	.word	0x20013f44
 8016634:	20013f40 	.word	0x20013f40

08016638 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8016638:	b510      	push	{r4, lr}
 801663a:	4b0a      	ldr	r3, [pc, #40]	@ (8016664 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 801663c:	781b      	ldrb	r3, [r3, #0]
 801663e:	2b01      	cmp	r3, #1
 8016640:	d10e      	bne.n	8016660 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8016642:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016646:	8843      	ldrh	r3, [r0, #2]
 8016648:	f9b0 4000 	ldrsh.w	r4, [r0]
 801664c:	8044      	strh	r4, [r0, #2]
 801664e:	18ca      	adds	r2, r1, r3
 8016650:	4b05      	ldr	r3, [pc, #20]	@ (8016668 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8016652:	881b      	ldrh	r3, [r3, #0]
 8016654:	1a9b      	subs	r3, r3, r2
 8016656:	8003      	strh	r3, [r0, #0]
 8016658:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801665c:	80c3      	strh	r3, [r0, #6]
 801665e:	8081      	strh	r1, [r0, #4]
 8016660:	bd10      	pop	{r4, pc}
 8016662:	bf00      	nop
 8016664:	20013f44 	.word	0x20013f44
 8016668:	20013f40 	.word	0x20013f40

0801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 801666c:	4b08      	ldr	r3, [pc, #32]	@ (8016690 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801666e:	781b      	ldrb	r3, [r3, #0]
 8016670:	2b01      	cmp	r3, #1
 8016672:	d10c      	bne.n	801668e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8016674:	8803      	ldrh	r3, [r0, #0]
 8016676:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801667a:	8842      	ldrh	r2, [r0, #2]
 801667c:	8002      	strh	r2, [r0, #0]
 801667e:	185a      	adds	r2, r3, r1
 8016680:	4b04      	ldr	r3, [pc, #16]	@ (8016694 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8016682:	881b      	ldrh	r3, [r3, #0]
 8016684:	1a9b      	subs	r3, r3, r2
 8016686:	8043      	strh	r3, [r0, #2]
 8016688:	88c3      	ldrh	r3, [r0, #6]
 801668a:	8083      	strh	r3, [r0, #4]
 801668c:	80c1      	strh	r1, [r0, #6]
 801668e:	4770      	bx	lr
 8016690:	20013f44 	.word	0x20013f44
 8016694:	20013f40 	.word	0x20013f40

08016698 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8016698:	b510      	push	{r4, lr}
 801669a:	4b07      	ldr	r3, [pc, #28]	@ (80166b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801669c:	781b      	ldrb	r3, [r3, #0]
 801669e:	2b01      	cmp	r3, #1
 80166a0:	d108      	bne.n	80166b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80166a2:	f9b1 3000 	ldrsh.w	r3, [r1]
 80166a6:	f9b0 4000 	ldrsh.w	r4, [r0]
 80166aa:	8003      	strh	r3, [r0, #0]
 80166ac:	8893      	ldrh	r3, [r2, #4]
 80166ae:	3b01      	subs	r3, #1
 80166b0:	1b1b      	subs	r3, r3, r4
 80166b2:	800b      	strh	r3, [r1, #0]
 80166b4:	bd10      	pop	{r4, pc}
 80166b6:	bf00      	nop
 80166b8:	20013f44 	.word	0x20013f44

080166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80166bc:	b510      	push	{r4, lr}
 80166be:	4b0a      	ldr	r3, [pc, #40]	@ (80166e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80166c0:	781b      	ldrb	r3, [r3, #0]
 80166c2:	2b01      	cmp	r3, #1
 80166c4:	460a      	mov	r2, r1
 80166c6:	d10d      	bne.n	80166e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80166c8:	8881      	ldrh	r1, [r0, #4]
 80166ca:	8803      	ldrh	r3, [r0, #0]
 80166cc:	440b      	add	r3, r1
 80166ce:	4601      	mov	r1, r0
 80166d0:	3b01      	subs	r3, #1
 80166d2:	f821 3b02 	strh.w	r3, [r1], #2
 80166d6:	f7ff ffdf 	bl	8016698 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80166da:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80166de:	88c2      	ldrh	r2, [r0, #6]
 80166e0:	8082      	strh	r2, [r0, #4]
 80166e2:	80c3      	strh	r3, [r0, #6]
 80166e4:	bd10      	pop	{r4, pc}
 80166e6:	bf00      	nop
 80166e8:	20013f44 	.word	0x20013f44

080166ec <_ZN8touchgfx11Application13requestRedrawEv>:
 80166ec:	4b06      	ldr	r3, [pc, #24]	@ (8016708 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80166ee:	f9b3 2000 	ldrsh.w	r2, [r3]
 80166f2:	4b06      	ldr	r3, [pc, #24]	@ (801670c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80166f4:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 80166f8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80166fc:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8016700:	2100      	movs	r1, #0
 8016702:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 8016706:	4770      	bx	lr
 8016708:	20013f40 	.word	0x20013f40
 801670c:	20013f42 	.word	0x20013f42

08016710 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8016710:	4b03      	ldr	r3, [pc, #12]	@ (8016720 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8016712:	6818      	ldr	r0, [r3, #0]
 8016714:	b110      	cbz	r0, 801671c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8016716:	6803      	ldr	r3, [r0, #0]
 8016718:	699b      	ldr	r3, [r3, #24]
 801671a:	4718      	bx	r3
 801671c:	4770      	bx	lr
 801671e:	bf00      	nop
 8016720:	20013f90 	.word	0x20013f90

08016724 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8016724:	4770      	bx	lr
	...

08016728 <_ZN8touchgfx11Application4drawEv>:
 8016728:	b507      	push	{r0, r1, r2, lr}
 801672a:	4b09      	ldr	r3, [pc, #36]	@ (8016750 <_ZN8touchgfx11Application4drawEv+0x28>)
 801672c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016730:	4b08      	ldr	r3, [pc, #32]	@ (8016754 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8016732:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016736:	f9b3 3000 	ldrsh.w	r3, [r3]
 801673a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801673e:	6803      	ldr	r3, [r0, #0]
 8016740:	2100      	movs	r1, #0
 8016742:	9100      	str	r1, [sp, #0]
 8016744:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8016746:	4669      	mov	r1, sp
 8016748:	4798      	blx	r3
 801674a:	b003      	add	sp, #12
 801674c:	f85d fb04 	ldr.w	pc, [sp], #4
 8016750:	20013f40 	.word	0x20013f40
 8016754:	20013f42 	.word	0x20013f42

08016758 <_ZN8touchgfx11Application10invalidateEv>:
 8016758:	4b09      	ldr	r3, [pc, #36]	@ (8016780 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801675a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801675e:	4b09      	ldr	r3, [pc, #36]	@ (8016784 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8016760:	b082      	sub	sp, #8
 8016762:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016766:	f8ad 2004 	strh.w	r2, [sp, #4]
 801676a:	2100      	movs	r1, #0
 801676c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016770:	9100      	str	r1, [sp, #0]
 8016772:	6803      	ldr	r3, [r0, #0]
 8016774:	aa02      	add	r2, sp, #8
 8016776:	e912 0006 	ldmdb	r2, {r1, r2}
 801677a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801677c:	b002      	add	sp, #8
 801677e:	4718      	bx	r3
 8016780:	20013f40 	.word	0x20013f40
 8016784:	20013f42 	.word	0x20013f42

08016788 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8016788:	4b03      	ldr	r3, [pc, #12]	@ (8016798 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801678a:	6818      	ldr	r0, [r3, #0]
 801678c:	b110      	cbz	r0, 8016794 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801678e:	6803      	ldr	r3, [r0, #0]
 8016790:	69db      	ldr	r3, [r3, #28]
 8016792:	4718      	bx	r3
 8016794:	4770      	bx	lr
 8016796:	bf00      	nop
 8016798:	20013f90 	.word	0x20013f90

0801679c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 801679c:	4b03      	ldr	r3, [pc, #12]	@ (80167ac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801679e:	6818      	ldr	r0, [r3, #0]
 80167a0:	b110      	cbz	r0, 80167a8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80167a2:	6803      	ldr	r3, [r0, #0]
 80167a4:	6a1b      	ldr	r3, [r3, #32]
 80167a6:	4718      	bx	r3
 80167a8:	4770      	bx	lr
 80167aa:	bf00      	nop
 80167ac:	20013f90 	.word	0x20013f90

080167b0 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80167b0:	2300      	movs	r3, #0
 80167b2:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 80167b6:	4770      	bx	lr

080167b8 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80167b8:	4b03      	ldr	r3, [pc, #12]	@ (80167c8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80167ba:	6818      	ldr	r0, [r3, #0]
 80167bc:	b110      	cbz	r0, 80167c4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80167be:	6803      	ldr	r3, [r0, #0]
 80167c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80167c2:	4718      	bx	r3
 80167c4:	4770      	bx	lr
 80167c6:	bf00      	nop
 80167c8:	20013f90 	.word	0x20013f90

080167cc <_ZN8touchgfx11ApplicationD1Ev>:
 80167cc:	4770      	bx	lr

080167ce <_ZN8touchgfx11ApplicationD0Ev>:
 80167ce:	b510      	push	{r4, lr}
 80167d0:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 80167d4:	4604      	mov	r4, r0
 80167d6:	f012 ff9d 	bl	8029714 <_ZdlPvj>
 80167da:	4620      	mov	r0, r4
 80167dc:	bd10      	pop	{r4, pc}

080167de <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80167de:	b510      	push	{r4, lr}
 80167e0:	f9b1 4000 	ldrsh.w	r4, [r1]
 80167e4:	888a      	ldrh	r2, [r1, #4]
 80167e6:	f9b0 3000 	ldrsh.w	r3, [r0]
 80167ea:	4422      	add	r2, r4
 80167ec:	b212      	sxth	r2, r2
 80167ee:	4293      	cmp	r3, r2
 80167f0:	da15      	bge.n	801681e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80167f2:	8882      	ldrh	r2, [r0, #4]
 80167f4:	4413      	add	r3, r2
 80167f6:	b21b      	sxth	r3, r3
 80167f8:	429c      	cmp	r4, r3
 80167fa:	da10      	bge.n	801681e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80167fc:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8016800:	88c9      	ldrh	r1, [r1, #6]
 8016802:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016806:	4419      	add	r1, r3
 8016808:	b209      	sxth	r1, r1
 801680a:	428a      	cmp	r2, r1
 801680c:	da07      	bge.n	801681e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801680e:	88c0      	ldrh	r0, [r0, #6]
 8016810:	4410      	add	r0, r2
 8016812:	b200      	sxth	r0, r0
 8016814:	4283      	cmp	r3, r0
 8016816:	bfac      	ite	ge
 8016818:	2000      	movge	r0, #0
 801681a:	2001      	movlt	r0, #1
 801681c:	bd10      	pop	{r4, pc}
 801681e:	2000      	movs	r0, #0
 8016820:	e7fc      	b.n	801681c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08016822 <_ZN8touchgfx4Rect10restrictToEss>:
 8016822:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016826:	2b00      	cmp	r3, #0
 8016828:	b510      	push	{r4, lr}
 801682a:	da04      	bge.n	8016836 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801682c:	8884      	ldrh	r4, [r0, #4]
 801682e:	4423      	add	r3, r4
 8016830:	8083      	strh	r3, [r0, #4]
 8016832:	2300      	movs	r3, #0
 8016834:	8003      	strh	r3, [r0, #0]
 8016836:	f9b0 4000 	ldrsh.w	r4, [r0]
 801683a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801683e:	1b09      	subs	r1, r1, r4
 8016840:	428b      	cmp	r3, r1
 8016842:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8016846:	bfc8      	it	gt
 8016848:	8081      	strhgt	r1, [r0, #4]
 801684a:	2b00      	cmp	r3, #0
 801684c:	da04      	bge.n	8016858 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 801684e:	88c1      	ldrh	r1, [r0, #6]
 8016850:	440b      	add	r3, r1
 8016852:	80c3      	strh	r3, [r0, #6]
 8016854:	2300      	movs	r3, #0
 8016856:	8043      	strh	r3, [r0, #2]
 8016858:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801685c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8016860:	1a52      	subs	r2, r2, r1
 8016862:	4293      	cmp	r3, r2
 8016864:	bfc8      	it	gt
 8016866:	80c2      	strhgt	r2, [r0, #6]
 8016868:	bd10      	pop	{r4, pc}
	...

0801686c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801686c:	b510      	push	{r4, lr}
 801686e:	4b10      	ldr	r3, [pc, #64]	@ (80168b0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8016870:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016874:	4b0f      	ldr	r3, [pc, #60]	@ (80168b4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8016876:	460c      	mov	r4, r1
 8016878:	4620      	mov	r0, r4
 801687a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801687e:	f7ff ffd0 	bl	8016822 <_ZN8touchgfx4Rect10restrictToEss>
 8016882:	4b0d      	ldr	r3, [pc, #52]	@ (80168b8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8016884:	6818      	ldr	r0, [r3, #0]
 8016886:	b190      	cbz	r0, 80168ae <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8016888:	6803      	ldr	r3, [r0, #0]
 801688a:	4621      	mov	r1, r4
 801688c:	689b      	ldr	r3, [r3, #8]
 801688e:	4798      	blx	r3
 8016890:	4b0a      	ldr	r3, [pc, #40]	@ (80168bc <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8016892:	6818      	ldr	r0, [r3, #0]
 8016894:	b118      	cbz	r0, 801689e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8016896:	6803      	ldr	r3, [r0, #0]
 8016898:	4621      	mov	r1, r4
 801689a:	689b      	ldr	r3, [r3, #8]
 801689c:	4798      	blx	r3
 801689e:	4b08      	ldr	r3, [pc, #32]	@ (80168c0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80168a0:	6818      	ldr	r0, [r3, #0]
 80168a2:	6803      	ldr	r3, [r0, #0]
 80168a4:	4621      	mov	r1, r4
 80168a6:	69db      	ldr	r3, [r3, #28]
 80168a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80168ac:	4718      	bx	r3
 80168ae:	bd10      	pop	{r4, pc}
 80168b0:	20013f42 	.word	0x20013f42
 80168b4:	20013f40 	.word	0x20013f40
 80168b8:	20013f90 	.word	0x20013f90
 80168bc:	20013f8c 	.word	0x20013f8c
 80168c0:	20013f4c 	.word	0x20013f4c

080168c4 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80168c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80168c6:	4606      	mov	r6, r0
 80168c8:	4608      	mov	r0, r1
 80168ca:	460f      	mov	r7, r1
 80168cc:	f7fa f8e7 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 80168d0:	b9e8      	cbnz	r0, 801690e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80168d2:	f9b7 5000 	ldrsh.w	r5, [r7]
 80168d6:	f9b6 4000 	ldrsh.w	r4, [r6]
 80168da:	42a5      	cmp	r5, r4
 80168dc:	db17      	blt.n	801690e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80168de:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80168e2:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80168e6:	429a      	cmp	r2, r3
 80168e8:	db11      	blt.n	801690e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80168ea:	88b9      	ldrh	r1, [r7, #4]
 80168ec:	440d      	add	r5, r1
 80168ee:	88b1      	ldrh	r1, [r6, #4]
 80168f0:	440c      	add	r4, r1
 80168f2:	b22d      	sxth	r5, r5
 80168f4:	b224      	sxth	r4, r4
 80168f6:	42a5      	cmp	r5, r4
 80168f8:	dc09      	bgt.n	801690e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80168fa:	88f8      	ldrh	r0, [r7, #6]
 80168fc:	4410      	add	r0, r2
 80168fe:	88f2      	ldrh	r2, [r6, #6]
 8016900:	4413      	add	r3, r2
 8016902:	b200      	sxth	r0, r0
 8016904:	b21b      	sxth	r3, r3
 8016906:	4298      	cmp	r0, r3
 8016908:	bfcc      	ite	gt
 801690a:	2000      	movgt	r0, #0
 801690c:	2001      	movle	r0, #1
 801690e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016910 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8016910:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016912:	4604      	mov	r4, r0
 8016914:	4608      	mov	r0, r1
 8016916:	460d      	mov	r5, r1
 8016918:	f7fa f8c1 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 801691c:	b978      	cbnz	r0, 801693e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801691e:	4620      	mov	r0, r4
 8016920:	f7fa f8bd 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8016924:	f9b5 6000 	ldrsh.w	r6, [r5]
 8016928:	b150      	cbz	r0, 8016940 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801692a:	8026      	strh	r6, [r4, #0]
 801692c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016930:	8063      	strh	r3, [r4, #2]
 8016932:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8016936:	80a3      	strh	r3, [r4, #4]
 8016938:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801693c:	80e3      	strh	r3, [r4, #6]
 801693e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016940:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016944:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8016948:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 801694c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8016950:	88ed      	ldrh	r5, [r5, #6]
 8016952:	42b1      	cmp	r1, r6
 8016954:	460f      	mov	r7, r1
 8016956:	bfa8      	it	ge
 8016958:	4637      	movge	r7, r6
 801695a:	4293      	cmp	r3, r2
 801695c:	4618      	mov	r0, r3
 801695e:	4466      	add	r6, ip
 8016960:	bfa8      	it	ge
 8016962:	4610      	movge	r0, r2
 8016964:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016968:	8027      	strh	r7, [r4, #0]
 801696a:	442a      	add	r2, r5
 801696c:	88e5      	ldrh	r5, [r4, #6]
 801696e:	8060      	strh	r0, [r4, #2]
 8016970:	4461      	add	r1, ip
 8016972:	442b      	add	r3, r5
 8016974:	b236      	sxth	r6, r6
 8016976:	b209      	sxth	r1, r1
 8016978:	b212      	sxth	r2, r2
 801697a:	b21b      	sxth	r3, r3
 801697c:	428e      	cmp	r6, r1
 801697e:	bfac      	ite	ge
 8016980:	ebc7 0106 	rsbge	r1, r7, r6
 8016984:	ebc7 0101 	rsblt	r1, r7, r1
 8016988:	429a      	cmp	r2, r3
 801698a:	bfac      	ite	ge
 801698c:	ebc0 0202 	rsbge	r2, r0, r2
 8016990:	ebc0 0203 	rsblt	r2, r0, r3
 8016994:	80a1      	strh	r1, [r4, #4]
 8016996:	80e2      	strh	r2, [r4, #6]
 8016998:	e7d1      	b.n	801693e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0801699c <_ZN8touchgfx11Application11getInstanceEv>:
 801699c:	4b01      	ldr	r3, [pc, #4]	@ (80169a4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801699e:	6818      	ldr	r0, [r3, #0]
 80169a0:	4770      	bx	lr
 80169a2:	bf00      	nop
 80169a4:	20013fa0 	.word	0x20013fa0

080169a8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 80169a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80169aa:	4b10      	ldr	r3, [pc, #64]	@ (80169ec <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 80169ac:	781b      	ldrb	r3, [r3, #0]
 80169ae:	4605      	mov	r5, r0
 80169b0:	b1d3      	cbz	r3, 80169e8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 80169b2:	4b0f      	ldr	r3, [pc, #60]	@ (80169f0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 80169b4:	4f0f      	ldr	r7, [pc, #60]	@ (80169f4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 80169b6:	881c      	ldrh	r4, [r3, #0]
 80169b8:	f100 06ee 	add.w	r6, r0, #238	@ 0xee
 80169bc:	f8b5 312e 	ldrh.w	r3, [r5, #302]	@ 0x12e
 80169c0:	42a3      	cmp	r3, r4
 80169c2:	d90e      	bls.n	80169e2 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 80169c4:	683b      	ldr	r3, [r7, #0]
 80169c6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80169ca:	b10a      	cbz	r2, 80169d0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 80169cc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80169ce:	b900      	cbnz	r0, 80169d2 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 80169d0:	6898      	ldr	r0, [r3, #8]
 80169d2:	6803      	ldr	r3, [r0, #0]
 80169d4:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 80169d8:	69db      	ldr	r3, [r3, #28]
 80169da:	3401      	adds	r4, #1
 80169dc:	4798      	blx	r3
 80169de:	b2a4      	uxth	r4, r4
 80169e0:	e7ec      	b.n	80169bc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 80169e2:	2300      	movs	r3, #0
 80169e4:	f8a5 312e 	strh.w	r3, [r5, #302]	@ 0x12e
 80169e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80169ea:	bf00      	nop
 80169ec:	20013f4a 	.word	0x20013f4a
 80169f0:	200000a0 	.word	0x200000a0
 80169f4:	20013f4c 	.word	0x20013f4c

080169f8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80169f8:	b510      	push	{r4, lr}
 80169fa:	2300      	movs	r3, #0
 80169fc:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8016a00:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8016a04:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8016a08:	4604      	mov	r4, r0
 8016a0a:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8016a0e:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 8016a12:	429a      	cmp	r2, r3
 8016a14:	d90e      	bls.n	8016a34 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8016a16:	18e2      	adds	r2, r4, r3
 8016a18:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 8016a1c:	b122      	cbz	r2, 8016a28 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8016a1e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8016a22:	6803      	ldr	r3, [r0, #0]
 8016a24:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8016a26:	4798      	blx	r3
 8016a28:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8016a2c:	3301      	adds	r3, #1
 8016a2e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8016a32:	e7ea      	b.n	8016a0a <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8016a34:	bd10      	pop	{r4, pc}

08016a36 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8016a36:	b530      	push	{r4, r5, lr}
 8016a38:	f8b0 5080 	ldrh.w	r5, [r0, #128]	@ 0x80
 8016a3c:	2200      	movs	r2, #0
 8016a3e:	b293      	uxth	r3, r2
 8016a40:	429d      	cmp	r5, r3
 8016a42:	d90e      	bls.n	8016a62 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016a44:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8016a48:	428b      	cmp	r3, r1
 8016a4a:	d10b      	bne.n	8016a64 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016a4c:	1884      	adds	r4, r0, r2
 8016a4e:	f894 3084 	ldrb.w	r3, [r4, #132]	@ 0x84
 8016a52:	b13b      	cbz	r3, 8016a64 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016a54:	3b01      	subs	r3, #1
 8016a56:	b2db      	uxtb	r3, r3
 8016a58:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
 8016a5c:	b90b      	cbnz	r3, 8016a62 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016a5e:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8016a62:	bd30      	pop	{r4, r5, pc}
 8016a64:	3201      	adds	r2, #1
 8016a66:	e7ea      	b.n	8016a3e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8016a68:	2300      	movs	r3, #0
 8016a6a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8016a6e:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 8016a72:	30a4      	adds	r0, #164	@ 0xa4
 8016a74:	f802 3b01 	strb.w	r3, [r2], #1
 8016a78:	4282      	cmp	r2, r0
 8016a7a:	d1fb      	bne.n	8016a74 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8016a7c:	4770      	bx	lr
	...

08016a80 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8016a80:	b570      	push	{r4, r5, r6, lr}
 8016a82:	4c0b      	ldr	r4, [pc, #44]	@ (8016ab0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8016a84:	4605      	mov	r5, r0
 8016a86:	6820      	ldr	r0, [r4, #0]
 8016a88:	460e      	mov	r6, r1
 8016a8a:	b110      	cbz	r0, 8016a92 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8016a8c:	6803      	ldr	r3, [r0, #0]
 8016a8e:	695b      	ldr	r3, [r3, #20]
 8016a90:	4798      	blx	r3
 8016a92:	1d28      	adds	r0, r5, #4
 8016a94:	f7ff ffe8 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016a98:	6026      	str	r6, [r4, #0]
 8016a9a:	6833      	ldr	r3, [r6, #0]
 8016a9c:	4630      	mov	r0, r6
 8016a9e:	68db      	ldr	r3, [r3, #12]
 8016aa0:	4798      	blx	r3
 8016aa2:	682b      	ldr	r3, [r5, #0]
 8016aa4:	4628      	mov	r0, r5
 8016aa6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8016aa8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016aac:	4718      	bx	r3
 8016aae:	bf00      	nop
 8016ab0:	20013f90 	.word	0x20013f90

08016ab4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8016ab4:	2300      	movs	r3, #0
 8016ab6:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 8016aba:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 8016abe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016ac0:	461a      	mov	r2, r3
 8016ac2:	461c      	mov	r4, r3
 8016ac4:	461d      	mov	r5, r3
 8016ac6:	459c      	cmp	ip, r3
 8016ac8:	dd1a      	ble.n	8016b00 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8016aca:	18c6      	adds	r6, r0, r3
 8016acc:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8016ad0:	b16e      	cbz	r6, 8016aee <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8016ad2:	429a      	cmp	r2, r3
 8016ad4:	d008      	beq.n	8016ae8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8016ad6:	fa1f fe82 	uxth.w	lr, r2
 8016ada:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8016ade:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8016ae2:	1887      	adds	r7, r0, r2
 8016ae4:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8016ae8:	3201      	adds	r2, #1
 8016aea:	3301      	adds	r3, #1
 8016aec:	e7eb      	b.n	8016ac6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8016aee:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 8016af2:	4299      	cmp	r1, r3
 8016af4:	bfa8      	it	ge
 8016af6:	3501      	addge	r5, #1
 8016af8:	429e      	cmp	r6, r3
 8016afa:	bfc8      	it	gt
 8016afc:	3401      	addgt	r4, #1
 8016afe:	e7f4      	b.n	8016aea <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8016b00:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8016b04:	1b49      	subs	r1, r1, r5
 8016b06:	1b1b      	subs	r3, r3, r4
 8016b08:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 8016b0c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8016b10:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8016b14:	4293      	cmp	r3, r2
 8016b16:	dd03      	ble.n	8016b20 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8016b18:	3b01      	subs	r3, #1
 8016b1a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8016b1e:	e7f7      	b.n	8016b10 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8016b20:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016b24 <_ZN8touchgfx11Application15handleTickEventEv>:
 8016b24:	b570      	push	{r4, r5, r6, lr}
 8016b26:	4d16      	ldr	r5, [pc, #88]	@ (8016b80 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8016b28:	4604      	mov	r4, r0
 8016b2a:	6828      	ldr	r0, [r5, #0]
 8016b2c:	b140      	cbz	r0, 8016b40 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016b2e:	7a03      	ldrb	r3, [r0, #8]
 8016b30:	b933      	cbnz	r3, 8016b40 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016b32:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8016b36:	6803      	ldr	r3, [r0, #0]
 8016b38:	689b      	ldr	r3, [r3, #8]
 8016b3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016b3e:	4718      	bx	r3
 8016b40:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 8016b44:	4e0f      	ldr	r6, [pc, #60]	@ (8016b84 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8016b46:	b973      	cbnz	r3, 8016b66 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016b48:	b168      	cbz	r0, 8016b66 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016b4a:	7a03      	ldrb	r3, [r0, #8]
 8016b4c:	b15b      	cbz	r3, 8016b66 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016b4e:	6830      	ldr	r0, [r6, #0]
 8016b50:	b110      	cbz	r0, 8016b58 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8016b52:	6803      	ldr	r3, [r0, #0]
 8016b54:	691b      	ldr	r3, [r3, #16]
 8016b56:	4798      	blx	r3
 8016b58:	6828      	ldr	r0, [r5, #0]
 8016b5a:	6803      	ldr	r3, [r0, #0]
 8016b5c:	68db      	ldr	r3, [r3, #12]
 8016b5e:	4798      	blx	r3
 8016b60:	2301      	movs	r3, #1
 8016b62:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8016b66:	3404      	adds	r4, #4
 8016b68:	4620      	mov	r0, r4
 8016b6a:	f7ff ff45 	bl	80169f8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8016b6e:	4620      	mov	r0, r4
 8016b70:	f7ff ffa0 	bl	8016ab4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016b74:	6830      	ldr	r0, [r6, #0]
 8016b76:	b110      	cbz	r0, 8016b7e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8016b78:	6803      	ldr	r3, [r0, #0]
 8016b7a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016b7c:	e7dd      	b.n	8016b3a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8016b7e:	bd70      	pop	{r4, r5, r6, pc}
 8016b80:	20013f94 	.word	0x20013f94
 8016b84:	20013f90 	.word	0x20013f90

08016b88 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8016b88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016b8a:	2300      	movs	r3, #0
 8016b8c:	4604      	mov	r4, r0
 8016b8e:	460d      	mov	r5, r1
 8016b90:	f8b0 1080 	ldrh.w	r1, [r0, #128]	@ 0x80
 8016b94:	4618      	mov	r0, r3
 8016b96:	b29a      	uxth	r2, r3
 8016b98:	4291      	cmp	r1, r2
 8016b9a:	d911      	bls.n	8016bc0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8016b9c:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8016ba0:	18e6      	adds	r6, r4, r3
 8016ba2:	42af      	cmp	r7, r5
 8016ba4:	f896 2084 	ldrb.w	r2, [r6, #132]	@ 0x84
 8016ba8:	d105      	bne.n	8016bb6 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8016baa:	2aff      	cmp	r2, #255	@ 0xff
 8016bac:	d002      	beq.n	8016bb4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016bae:	3201      	adds	r2, #1
 8016bb0:	f886 2084 	strb.w	r2, [r6, #132]	@ 0x84
 8016bb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016bb6:	2a00      	cmp	r2, #0
 8016bb8:	bf08      	it	eq
 8016bba:	2001      	moveq	r0, #1
 8016bbc:	3301      	adds	r3, #1
 8016bbe:	e7ea      	b.n	8016b96 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8016bc0:	b120      	cbz	r0, 8016bcc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8016bc2:	2920      	cmp	r1, #32
 8016bc4:	d102      	bne.n	8016bcc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8016bc6:	4620      	mov	r0, r4
 8016bc8:	f7ff ff74 	bl	8016ab4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016bcc:	f8b4 3080 	ldrh.w	r3, [r4, #128]	@ 0x80
 8016bd0:	2b1f      	cmp	r3, #31
 8016bd2:	d8ef      	bhi.n	8016bb4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016bd4:	18e2      	adds	r2, r4, r3
 8016bd6:	2101      	movs	r1, #1
 8016bd8:	f882 1084 	strb.w	r1, [r2, #132]	@ 0x84
 8016bdc:	185a      	adds	r2, r3, r1
 8016bde:	f8a4 2080 	strh.w	r2, [r4, #128]	@ 0x80
 8016be2:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8016be6:	e7e5      	b.n	8016bb4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08016be8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8016be8:	4603      	mov	r3, r0
 8016bea:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 8016bee:	2200      	movs	r2, #0
 8016bf0:	801a      	strh	r2, [r3, #0]
 8016bf2:	805a      	strh	r2, [r3, #2]
 8016bf4:	809a      	strh	r2, [r3, #4]
 8016bf6:	80da      	strh	r2, [r3, #6]
 8016bf8:	3308      	adds	r3, #8
 8016bfa:	428b      	cmp	r3, r1
 8016bfc:	d1f8      	bne.n	8016bf0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8016bfe:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 8016c02:	4770      	bx	lr

08016c04 <_ZN8touchgfx11ApplicationC1Ev>:
 8016c04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016c06:	4606      	mov	r6, r0
 8016c08:	4b1c      	ldr	r3, [pc, #112]	@ (8016c7c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8016c0a:	f846 3b04 	str.w	r3, [r6], #4
 8016c0e:	4604      	mov	r4, r0
 8016c10:	2500      	movs	r5, #0
 8016c12:	22a8      	movs	r2, #168	@ 0xa8
 8016c14:	2100      	movs	r1, #0
 8016c16:	4630      	mov	r0, r6
 8016c18:	f013 febf 	bl	802a99a <memset>
 8016c1c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8016c20:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8016c24:	f7ff ffe0 	bl	8016be8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016c28:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8016c2c:	f7ff ffdc 	bl	8016be8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016c30:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8016c34:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 8016c38:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 8016c3c:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8016c40:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8016c44:	490e      	ldr	r1, [pc, #56]	@ (8016c80 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8016c46:	480f      	ldr	r0, [pc, #60]	@ (8016c84 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8016c48:	4f0f      	ldr	r7, [pc, #60]	@ (8016c88 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8016c4a:	f011 fecf 	bl	80289ec <CRC_Lock>
 8016c4e:	4b0f      	ldr	r3, [pc, #60]	@ (8016c8c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8016c50:	b158      	cbz	r0, 8016c6a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8016c52:	801d      	strh	r5, [r3, #0]
 8016c54:	4a0e      	ldr	r2, [pc, #56]	@ (8016c90 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8016c56:	2300      	movs	r3, #0
 8016c58:	6013      	str	r3, [r2, #0]
 8016c5a:	4a0e      	ldr	r2, [pc, #56]	@ (8016c94 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8016c5c:	603b      	str	r3, [r7, #0]
 8016c5e:	4630      	mov	r0, r6
 8016c60:	6013      	str	r3, [r2, #0]
 8016c62:	f7ff ff01 	bl	8016a68 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016c66:	4620      	mov	r0, r4
 8016c68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016c6a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8016c6e:	2002      	movs	r0, #2
 8016c70:	801a      	strh	r2, [r3, #0]
 8016c72:	6038      	str	r0, [r7, #0]
 8016c74:	f001 ff40 	bl	8018af8 <_ZN8touchgfx6Screen4drawEv>
 8016c78:	e7ec      	b.n	8016c54 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8016c7a:	bf00      	nop
 8016c7c:	0802e5a8 	.word	0x0802e5a8
 8016c80:	b5e8b5cd 	.word	0xb5e8b5cd
 8016c84:	f407a5c2 	.word	0xf407a5c2
 8016c88:	20013f90 	.word	0x20013f90
 8016c8c:	200000a0 	.word	0x200000a0
 8016c90:	20013fa0 	.word	0x20013fa0
 8016c94:	20013f94 	.word	0x20013f94

08016c98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8016c98:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 8016c9c:	3b01      	subs	r3, #1
 8016c9e:	b29b      	uxth	r3, r3
 8016ca0:	428b      	cmp	r3, r1
 8016ca2:	b510      	push	{r4, lr}
 8016ca4:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8016ca8:	d908      	bls.n	8016cbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8016caa:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016cae:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8016cb2:	681a      	ldr	r2, [r3, #0]
 8016cb4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8016cb8:	685a      	ldr	r2, [r3, #4]
 8016cba:	6062      	str	r2, [r4, #4]
 8016cbc:	bd10      	pop	{r4, pc}
	...

08016cc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016cc4:	4b92      	ldr	r3, [pc, #584]	@ (8016f10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 8016cc6:	b08f      	sub	sp, #60	@ 0x3c
 8016cc8:	ac0a      	add	r4, sp, #40	@ 0x28
 8016cca:	e884 0006 	stmia.w	r4, {r1, r2}
 8016cce:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016cd2:	4b90      	ldr	r3, [pc, #576]	@ (8016f14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 8016cd4:	4683      	mov	fp, r0
 8016cd6:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016cda:	4620      	mov	r0, r4
 8016cdc:	f7ff fda1 	bl	8016822 <_ZN8touchgfx4Rect10restrictToEss>
 8016ce0:	4620      	mov	r0, r4
 8016ce2:	f7f9 fedc 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8016ce6:	2800      	cmp	r0, #0
 8016ce8:	d170      	bne.n	8016dcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8016cea:	4b8b      	ldr	r3, [pc, #556]	@ (8016f18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8016cec:	681b      	ldr	r3, [r3, #0]
 8016cee:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8016cf2:	2b02      	cmp	r3, #2
 8016cf4:	d06a      	beq.n	8016dcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8016cf6:	9403      	str	r4, [sp, #12]
 8016cf8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8016cfc:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8016d00:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8016d04:	35a4      	adds	r5, #164	@ 0xa4
 8016d06:	9301      	str	r3, [sp, #4]
 8016d08:	b15c      	cbz	r4, 8016d22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 8016d0a:	4629      	mov	r1, r5
 8016d0c:	9803      	ldr	r0, [sp, #12]
 8016d0e:	f7ff fdd9 	bl	80168c4 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016d12:	3c01      	subs	r4, #1
 8016d14:	b118      	cbz	r0, 8016d1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 8016d16:	b2a1      	uxth	r1, r4
 8016d18:	9801      	ldr	r0, [sp, #4]
 8016d1a:	f7ff ffbd 	bl	8016c98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016d1e:	3d08      	subs	r5, #8
 8016d20:	e7f2      	b.n	8016d08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 8016d22:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 8016d26:	f8cd a010 	str.w	sl, [sp, #16]
 8016d2a:	f10a 33ff 	add.w	r3, sl, #4294967295
 8016d2e:	9302      	str	r3, [sp, #8]
 8016d30:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8016d34:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8016d38:	9306      	str	r3, [sp, #24]
 8016d3a:	445c      	add	r4, fp
 8016d3c:	2500      	movs	r5, #0
 8016d3e:	4626      	mov	r6, r4
 8016d40:	f8cd a014 	str.w	sl, [sp, #20]
 8016d44:	462f      	mov	r7, r5
 8016d46:	9b05      	ldr	r3, [sp, #20]
 8016d48:	2b00      	cmp	r3, #0
 8016d4a:	d073      	beq.n	8016e34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 8016d4c:	9903      	ldr	r1, [sp, #12]
 8016d4e:	4630      	mov	r0, r6
 8016d50:	f7ff fd45 	bl	80167de <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016d54:	b350      	cbz	r0, 8016dac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 8016d56:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 8016d5a:	f9b6 c000 	ldrsh.w	ip, [r6]
 8016d5e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8016d62:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8016d66:	45e6      	cmp	lr, ip
 8016d68:	db33      	blt.n	8016dd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 8016d6a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8016d6e:	88b3      	ldrh	r3, [r6, #4]
 8016d70:	4472      	add	r2, lr
 8016d72:	4463      	add	r3, ip
 8016d74:	b212      	sxth	r2, r2
 8016d76:	b21b      	sxth	r3, r3
 8016d78:	429a      	cmp	r2, r3
 8016d7a:	dc2a      	bgt.n	8016dd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 8016d7c:	88f3      	ldrh	r3, [r6, #6]
 8016d7e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8016d82:	fa1f f289 	uxth.w	r2, r9
 8016d86:	4413      	add	r3, r2
 8016d88:	b29b      	uxth	r3, r3
 8016d8a:	45c8      	cmp	r8, r9
 8016d8c:	fa1f fc88 	uxth.w	ip, r8
 8016d90:	fa0f fe83 	sxth.w	lr, r3
 8016d94:	db0f      	blt.n	8016db6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 8016d96:	eba3 030c 	sub.w	r3, r3, ip
 8016d9a:	1ac9      	subs	r1, r1, r3
 8016d9c:	b209      	sxth	r1, r1
 8016d9e:	2900      	cmp	r1, #0
 8016da0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8016da4:	dd12      	ble.n	8016dcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8016da6:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8016daa:	4605      	mov	r5, r0
 8016dac:	9b05      	ldr	r3, [sp, #20]
 8016dae:	3b01      	subs	r3, #1
 8016db0:	9305      	str	r3, [sp, #20]
 8016db2:	3e08      	subs	r6, #8
 8016db4:	e7c7      	b.n	8016d46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 8016db6:	4461      	add	r1, ip
 8016db8:	b209      	sxth	r1, r1
 8016dba:	4571      	cmp	r1, lr
 8016dbc:	dc38      	bgt.n	8016e30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8016dbe:	eba2 020c 	sub.w	r2, r2, ip
 8016dc2:	b212      	sxth	r2, r2
 8016dc4:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8016dc8:	2a00      	cmp	r2, #0
 8016dca:	dcee      	bgt.n	8016daa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8016dcc:	b00f      	add	sp, #60	@ 0x3c
 8016dce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016dd2:	45c8      	cmp	r8, r9
 8016dd4:	db2c      	blt.n	8016e30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8016dd6:	88f3      	ldrh	r3, [r6, #6]
 8016dd8:	4499      	add	r9, r3
 8016dda:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8016dde:	4498      	add	r8, r3
 8016de0:	fa0f f989 	sxth.w	r9, r9
 8016de4:	fa0f f888 	sxth.w	r8, r8
 8016de8:	45c1      	cmp	r9, r8
 8016dea:	db21      	blt.n	8016e30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8016dec:	88b3      	ldrh	r3, [r6, #4]
 8016dee:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8016df2:	fa1f f28c 	uxth.w	r2, ip
 8016df6:	4413      	add	r3, r2
 8016df8:	b29b      	uxth	r3, r3
 8016dfa:	45e6      	cmp	lr, ip
 8016dfc:	fa1f f88e 	uxth.w	r8, lr
 8016e00:	fa0f f983 	sxth.w	r9, r3
 8016e04:	db0a      	blt.n	8016e1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 8016e06:	eba3 0308 	sub.w	r3, r3, r8
 8016e0a:	1ac9      	subs	r1, r1, r3
 8016e0c:	b209      	sxth	r1, r1
 8016e0e:	2900      	cmp	r1, #0
 8016e10:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8016e14:	ddda      	ble.n	8016dcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8016e16:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8016e1a:	e7c6      	b.n	8016daa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8016e1c:	4441      	add	r1, r8
 8016e1e:	b209      	sxth	r1, r1
 8016e20:	4549      	cmp	r1, r9
 8016e22:	dc05      	bgt.n	8016e30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8016e24:	eba2 0208 	sub.w	r2, r2, r8
 8016e28:	b212      	sxth	r2, r2
 8016e2a:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8016e2e:	e7cb      	b.n	8016dc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 8016e30:	4607      	mov	r7, r0
 8016e32:	e7bb      	b.n	8016dac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 8016e34:	2d00      	cmp	r5, #0
 8016e36:	d181      	bne.n	8016d3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 8016e38:	2f00      	cmp	r7, #0
 8016e3a:	f000 81df 	beq.w	80171fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016e3e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8016e42:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 8016e46:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 8016e4a:	b2b3      	uxth	r3, r6
 8016e4c:	9305      	str	r3, [sp, #20]
 8016e4e:	9a05      	ldr	r2, [sp, #20]
 8016e50:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8016e54:	4413      	add	r3, r2
 8016e56:	b2ba      	uxth	r2, r7
 8016e58:	4492      	add	sl, r2
 8016e5a:	b29b      	uxth	r3, r3
 8016e5c:	fa1f fa8a 	uxth.w	sl, sl
 8016e60:	fa0f f883 	sxth.w	r8, r3
 8016e64:	fa0f f98a 	sxth.w	r9, sl
 8016e68:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8016e6c:	9b04      	ldr	r3, [sp, #16]
 8016e6e:	2b00      	cmp	r3, #0
 8016e70:	d054      	beq.n	8016f1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 8016e72:	9903      	ldr	r1, [sp, #12]
 8016e74:	4620      	mov	r0, r4
 8016e76:	f7ff fcb2 	bl	80167de <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016e7a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016e7e:	b1c0      	cbz	r0, 8016eb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8016e80:	f9b4 e000 	ldrsh.w	lr, [r4]
 8016e84:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016e88:	4576      	cmp	r6, lr
 8016e8a:	dc22      	bgt.n	8016ed2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 8016e8c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016e90:	44f4      	add	ip, lr
 8016e92:	fa0f fc8c 	sxth.w	ip, ip
 8016e96:	45e0      	cmp	r8, ip
 8016e98:	db1b      	blt.n	8016ed2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 8016e9a:	428f      	cmp	r7, r1
 8016e9c:	fa1f fc81 	uxth.w	ip, r1
 8016ea0:	88e1      	ldrh	r1, [r4, #6]
 8016ea2:	dc0d      	bgt.n	8016ec0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 8016ea4:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016ea8:	eba1 010c 	sub.w	r1, r1, ip
 8016eac:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016eb0:	80e1      	strh	r1, [r4, #6]
 8016eb2:	4628      	mov	r0, r5
 8016eb4:	9904      	ldr	r1, [sp, #16]
 8016eb6:	3901      	subs	r1, #1
 8016eb8:	9104      	str	r1, [sp, #16]
 8016eba:	3c08      	subs	r4, #8
 8016ebc:	4605      	mov	r5, r0
 8016ebe:	e7d3      	b.n	8016e68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 8016ec0:	4461      	add	r1, ip
 8016ec2:	b209      	sxth	r1, r1
 8016ec4:	4549      	cmp	r1, r9
 8016ec6:	dcf5      	bgt.n	8016eb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8016ec8:	eba2 0c0c 	sub.w	ip, r2, ip
 8016ecc:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016ed0:	e7ef      	b.n	8016eb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8016ed2:	428f      	cmp	r7, r1
 8016ed4:	dcee      	bgt.n	8016eb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8016ed6:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8016eda:	4461      	add	r1, ip
 8016edc:	b209      	sxth	r1, r1
 8016ede:	4589      	cmp	r9, r1
 8016ee0:	dbe8      	blt.n	8016eb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8016ee2:	4576      	cmp	r6, lr
 8016ee4:	fa1f fc8e 	uxth.w	ip, lr
 8016ee8:	88a1      	ldrh	r1, [r4, #4]
 8016eea:	dc07      	bgt.n	8016efc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 8016eec:	eba3 0c0c 	sub.w	ip, r3, ip
 8016ef0:	eba1 010c 	sub.w	r1, r1, ip
 8016ef4:	f8a4 8000 	strh.w	r8, [r4]
 8016ef8:	80a1      	strh	r1, [r4, #4]
 8016efa:	e7da      	b.n	8016eb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8016efc:	4461      	add	r1, ip
 8016efe:	b209      	sxth	r1, r1
 8016f00:	4588      	cmp	r8, r1
 8016f02:	dbd7      	blt.n	8016eb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8016f04:	9905      	ldr	r1, [sp, #20]
 8016f06:	eba1 0c0c 	sub.w	ip, r1, ip
 8016f0a:	f8a4 c004 	strh.w	ip, [r4, #4]
 8016f0e:	e7d0      	b.n	8016eb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8016f10:	20013f42 	.word	0x20013f42
 8016f14:	20013f40 	.word	0x20013f40
 8016f18:	20013f4c 	.word	0x20013f4c
 8016f1c:	2d00      	cmp	r5, #0
 8016f1e:	f000 816d 	beq.w	80171fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016f22:	9b06      	ldr	r3, [sp, #24]
 8016f24:	445b      	add	r3, fp
 8016f26:	461c      	mov	r4, r3
 8016f28:	9b02      	ldr	r3, [sp, #8]
 8016f2a:	3301      	adds	r3, #1
 8016f2c:	f000 8166 	beq.w	80171fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016f30:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8016f34:	4629      	mov	r1, r5
 8016f36:	9803      	ldr	r0, [sp, #12]
 8016f38:	f7ff fcc4 	bl	80168c4 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016f3c:	b120      	cbz	r0, 8016f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 8016f3e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016f42:	9801      	ldr	r0, [sp, #4]
 8016f44:	f7ff fea8 	bl	8016c98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016f48:	9903      	ldr	r1, [sp, #12]
 8016f4a:	4628      	mov	r0, r5
 8016f4c:	f7ff fc47 	bl	80167de <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016f50:	2800      	cmp	r0, #0
 8016f52:	f000 809c 	beq.w	801708e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 8016f56:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 8016f5a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8016f5e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8016f62:	9309      	str	r3, [sp, #36]	@ 0x24
 8016f64:	fa1f f189 	uxth.w	r1, r9
 8016f68:	eb01 0c03 	add.w	ip, r1, r3
 8016f6c:	fa1f fa8c 	uxth.w	sl, ip
 8016f70:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8016f74:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8016f78:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8016f7c:	b283      	uxth	r3, r0
 8016f7e:	eb03 050c 	add.w	r5, r3, ip
 8016f82:	b2ad      	uxth	r5, r5
 8016f84:	9505      	str	r5, [sp, #20]
 8016f86:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8016f8a:	9504      	str	r5, [sp, #16]
 8016f8c:	4548      	cmp	r0, r9
 8016f8e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8016f92:	f340 8099 	ble.w	80170c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 8016f96:	1a5b      	subs	r3, r3, r1
 8016f98:	b29b      	uxth	r3, r3
 8016f9a:	4596      	cmp	lr, r2
 8016f9c:	fa0f f08a 	sxth.w	r0, sl
 8016fa0:	b21e      	sxth	r6, r3
 8016fa2:	dd2e      	ble.n	8017002 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 8016fa4:	9f02      	ldr	r7, [sp, #8]
 8016fa6:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 8016faa:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016fae:	9f04      	ldr	r7, [sp, #16]
 8016fb0:	1a3f      	subs	r7, r7, r0
 8016fb2:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8016fb6:	fa1f fe8e 	uxth.w	lr, lr
 8016fba:	b292      	uxth	r2, r2
 8016fbc:	ebae 0102 	sub.w	r1, lr, r2
 8016fc0:	44a6      	add	lr, r4
 8016fc2:	4402      	add	r2, r0
 8016fc4:	b289      	uxth	r1, r1
 8016fc6:	fa0f fe8e 	sxth.w	lr, lr
 8016fca:	b212      	sxth	r2, r2
 8016fcc:	b20d      	sxth	r5, r1
 8016fce:	ebae 0202 	sub.w	r2, lr, r2
 8016fd2:	436f      	muls	r7, r5
 8016fd4:	4372      	muls	r2, r6
 8016fd6:	4297      	cmp	r7, r2
 8016fd8:	db09      	blt.n	8016fee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 8016fda:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8016fde:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8016fe2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8016fe6:	449c      	add	ip, r3
 8016fe8:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8016fec:	e684      	b.n	8016cf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8016fee:	4421      	add	r1, r4
 8016ff0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 8016ff4:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8016ff8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8016ffc:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017000:	e67a      	b.n	8016cf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8017002:	9f04      	ldr	r7, [sp, #16]
 8017004:	42b8      	cmp	r0, r7
 8017006:	da27      	bge.n	8017058 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 8017008:	9902      	ldr	r1, [sp, #8]
 801700a:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 801700e:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8017012:	eb05 010e 	add.w	r1, r5, lr
 8017016:	fa1f f881 	uxth.w	r8, r1
 801701a:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 801701e:	4411      	add	r1, r2
 8017020:	eba1 0108 	sub.w	r1, r1, r8
 8017024:	b289      	uxth	r1, r1
 8017026:	fa0f f988 	sxth.w	r9, r8
 801702a:	eba2 020e 	sub.w	r2, r2, lr
 801702e:	fa0f f881 	sxth.w	r8, r1
 8017032:	1a3f      	subs	r7, r7, r0
 8017034:	4372      	muls	r2, r6
 8017036:	fb08 f707 	mul.w	r7, r8, r7
 801703a:	42ba      	cmp	r2, r7
 801703c:	dc06      	bgt.n	801704c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 801703e:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8017042:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 8017046:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 801704a:	e7ca      	b.n	8016fe2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 801704c:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8017050:	4429      	add	r1, r5
 8017052:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8017056:	e64f      	b.n	8016cf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8017058:	9805      	ldr	r0, [sp, #20]
 801705a:	ebaa 0000 	sub.w	r0, sl, r0
 801705e:	b280      	uxth	r0, r0
 8017060:	2d06      	cmp	r5, #6
 8017062:	fa0f fe80 	sxth.w	lr, r0
 8017066:	d817      	bhi.n	8017098 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 8017068:	9b04      	ldr	r3, [sp, #16]
 801706a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801706e:	1c6b      	adds	r3, r5, #1
 8017070:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8017074:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8017078:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801707c:	9b01      	ldr	r3, [sp, #4]
 801707e:	9801      	ldr	r0, [sp, #4]
 8017080:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8017084:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8017088:	805a      	strh	r2, [r3, #2]
 801708a:	809e      	strh	r6, [r3, #4]
 801708c:	80d9      	strh	r1, [r3, #6]
 801708e:	9b02      	ldr	r3, [sp, #8]
 8017090:	3b01      	subs	r3, #1
 8017092:	9302      	str	r3, [sp, #8]
 8017094:	3c08      	subs	r4, #8
 8017096:	e747      	b.n	8016f28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 8017098:	9a02      	ldr	r2, [sp, #8]
 801709a:	45b6      	cmp	lr, r6
 801709c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80170a0:	db0d      	blt.n	80170be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 80170a2:	449c      	add	ip, r3
 80170a4:	fa1f fc8c 	uxth.w	ip, ip
 80170a8:	445a      	add	r2, fp
 80170aa:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 80170ae:	448c      	add	ip, r1
 80170b0:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 80170b4:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 80170b8:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 80170bc:	e61c      	b.n	8016cf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80170be:	445a      	add	r2, fp
 80170c0:	4484      	add	ip, r0
 80170c2:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 80170c6:	e78f      	b.n	8016fe8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 80170c8:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 80170cc:	fa1f f18e 	uxth.w	r1, lr
 80170d0:	eb01 0806 	add.w	r8, r1, r6
 80170d4:	b293      	uxth	r3, r2
 80170d6:	fa1f f888 	uxth.w	r8, r8
 80170da:	9306      	str	r3, [sp, #24]
 80170dc:	fa0f f388 	sxth.w	r3, r8
 80170e0:	9307      	str	r3, [sp, #28]
 80170e2:	9f06      	ldr	r7, [sp, #24]
 80170e4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 80170e8:	443b      	add	r3, r7
 80170ea:	b29b      	uxth	r3, r3
 80170ec:	4596      	cmp	lr, r2
 80170ee:	9308      	str	r3, [sp, #32]
 80170f0:	da24      	bge.n	801713c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 80170f2:	9905      	ldr	r1, [sp, #20]
 80170f4:	eba3 0308 	sub.w	r3, r3, r8
 80170f8:	ebaa 0401 	sub.w	r4, sl, r1
 80170fc:	b2a4      	uxth	r4, r4
 80170fe:	b29b      	uxth	r3, r3
 8017100:	b225      	sxth	r5, r4
 8017102:	b219      	sxth	r1, r3
 8017104:	eba2 020e 	sub.w	r2, r2, lr
 8017108:	eba9 0000 	sub.w	r0, r9, r0
 801710c:	436a      	muls	r2, r5
 801710e:	4348      	muls	r0, r1
 8017110:	4282      	cmp	r2, r0
 8017112:	9a02      	ldr	r2, [sp, #8]
 8017114:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8017118:	445a      	add	r2, fp
 801711a:	dc06      	bgt.n	801712a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 801711c:	9b07      	ldr	r3, [sp, #28]
 801711e:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 8017122:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 8017126:	44a4      	add	ip, r4
 8017128:	e75e      	b.n	8016fe8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 801712a:	9904      	ldr	r1, [sp, #16]
 801712c:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8017130:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8017134:	4433      	add	r3, r6
 8017136:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801713a:	e5dd      	b.n	8016cf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801713c:	9f06      	ldr	r7, [sp, #24]
 801713e:	9b04      	ldr	r3, [sp, #16]
 8017140:	1bc9      	subs	r1, r1, r7
 8017142:	fa0f f78a 	sxth.w	r7, sl
 8017146:	b289      	uxth	r1, r1
 8017148:	429f      	cmp	r7, r3
 801714a:	fa0f fe81 	sxth.w	lr, r1
 801714e:	dd23      	ble.n	8017198 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 8017150:	9a05      	ldr	r2, [sp, #20]
 8017152:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8017156:	9d07      	ldr	r5, [sp, #28]
 8017158:	ebaa 0202 	sub.w	r2, sl, r2
 801715c:	b292      	uxth	r2, r2
 801715e:	eba5 0a03 	sub.w	sl, r5, r3
 8017162:	b214      	sxth	r4, r2
 8017164:	eba9 0000 	sub.w	r0, r9, r0
 8017168:	9b02      	ldr	r3, [sp, #8]
 801716a:	fb0e f000 	mul.w	r0, lr, r0
 801716e:	fb04 fa0a 	mul.w	sl, r4, sl
 8017172:	00db      	lsls	r3, r3, #3
 8017174:	4550      	cmp	r0, sl
 8017176:	445b      	add	r3, fp
 8017178:	db03      	blt.n	8017182 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 801717a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 801717e:	4494      	add	ip, r2
 8017180:	e732      	b.n	8016fe8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8017182:	9a04      	ldr	r2, [sp, #16]
 8017184:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8017188:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 801718c:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8017190:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017194:	4431      	add	r1, r6
 8017196:	e75c      	b.n	8017052 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 8017198:	9b08      	ldr	r3, [sp, #32]
 801719a:	eba3 0308 	sub.w	r3, r3, r8
 801719e:	b29b      	uxth	r3, r3
 80171a0:	2d06      	cmp	r5, #6
 80171a2:	b218      	sxth	r0, r3
 80171a4:	d813      	bhi.n	80171ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 80171a6:	9b07      	ldr	r3, [sp, #28]
 80171a8:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 80171ac:	1c6b      	adds	r3, r5, #1
 80171ae:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 80171b2:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 80171b6:	9b01      	ldr	r3, [sp, #4]
 80171b8:	9901      	ldr	r1, [sp, #4]
 80171ba:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80171be:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80171c2:	805a      	strh	r2, [r3, #2]
 80171c4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80171c6:	809a      	strh	r2, [r3, #4]
 80171c8:	f8a3 e006 	strh.w	lr, [r3, #6]
 80171cc:	e75f      	b.n	801708e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 80171ce:	9c02      	ldr	r4, [sp, #8]
 80171d0:	4570      	cmp	r0, lr
 80171d2:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80171d6:	db0d      	blt.n	80171f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 80171d8:	4431      	add	r1, r6
 80171da:	9b06      	ldr	r3, [sp, #24]
 80171dc:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80171e0:	b289      	uxth	r1, r1
 80171e2:	445c      	add	r4, fp
 80171e4:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80171e8:	4419      	add	r1, r3
 80171ea:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 80171ee:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 80171f2:	e581      	b.n	8016cf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80171f4:	445c      	add	r4, fp
 80171f6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 80171fa:	e79b      	b.n	8017134 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 80171fc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8017200:	1e65      	subs	r5, r4, #1
 8017202:	b2ad      	uxth	r5, r5
 8017204:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8017208:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 801720c:	42b5      	cmp	r5, r6
 801720e:	d044      	beq.n	801729a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 8017210:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017214:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8017218:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801721c:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8017220:	4282      	cmp	r2, r0
 8017222:	d11f      	bne.n	8017264 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 8017224:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8017228:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 801722c:	459c      	cmp	ip, r3
 801722e:	d119      	bne.n	8017264 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 8017230:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8017234:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8017238:	19d8      	adds	r0, r3, r7
 801723a:	b200      	sxth	r0, r0
 801723c:	4288      	cmp	r0, r1
 801723e:	d109      	bne.n	8017254 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017240:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8017244:	4413      	add	r3, r2
 8017246:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801724a:	4629      	mov	r1, r5
 801724c:	9801      	ldr	r0, [sp, #4]
 801724e:	f7ff fd23 	bl	8016c98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017252:	e003      	b.n	801725c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8017254:	4411      	add	r1, r2
 8017256:	b209      	sxth	r1, r1
 8017258:	42b9      	cmp	r1, r7
 801725a:	d0f3      	beq.n	8017244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 801725c:	3d01      	subs	r5, #1
 801725e:	b2ad      	uxth	r5, r5
 8017260:	3c08      	subs	r4, #8
 8017262:	e7d3      	b.n	801720c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 8017264:	42b9      	cmp	r1, r7
 8017266:	d1f9      	bne.n	801725c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8017268:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 801726c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8017270:	4299      	cmp	r1, r3
 8017272:	d1f3      	bne.n	801725c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8017274:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8017278:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801727c:	181f      	adds	r7, r3, r0
 801727e:	b23f      	sxth	r7, r7
 8017280:	42ba      	cmp	r2, r7
 8017282:	d105      	bne.n	8017290 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 8017284:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8017288:	440b      	add	r3, r1
 801728a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801728e:	e7dc      	b.n	801724a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 8017290:	440a      	add	r2, r1
 8017292:	b212      	sxth	r2, r2
 8017294:	4290      	cmp	r0, r2
 8017296:	d1e1      	bne.n	801725c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 8017298:	e7f6      	b.n	8017288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 801729a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 801729e:	2e07      	cmp	r6, #7
 80172a0:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80172a4:	d812      	bhi.n	80172cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 80172a6:	1c75      	adds	r5, r6, #1
 80172a8:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 80172ac:	9d01      	ldr	r5, [sp, #4]
 80172ae:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80172b2:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80172b6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80172ba:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80172be:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80172c2:	442c      	add	r4, r5
 80172c4:	8061      	strh	r1, [r4, #2]
 80172c6:	80a2      	strh	r2, [r4, #4]
 80172c8:	80e3      	strh	r3, [r4, #6]
 80172ca:	e57f      	b.n	8016dcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 80172cc:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80172d0:	3e01      	subs	r6, #1
 80172d2:	445c      	add	r4, fp
 80172d4:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 80172d8:	f04f 37ff 	mov.w	r7, #4294967295
 80172dc:	2500      	movs	r5, #0
 80172de:	9305      	str	r3, [sp, #20]
 80172e0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80172e4:	9302      	str	r3, [sp, #8]
 80172e6:	1e72      	subs	r2, r6, #1
 80172e8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80172ec:	9304      	str	r3, [sp, #16]
 80172ee:	4691      	mov	r9, r2
 80172f0:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 80172f4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80172f8:	bf14      	ite	ne
 80172fa:	9905      	ldrne	r1, [sp, #20]
 80172fc:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8017300:	6818      	ldr	r0, [r3, #0]
 8017302:	9207      	str	r2, [sp, #28]
 8017304:	bf18      	it	ne
 8017306:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801730a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801730e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8017312:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8017316:	9306      	str	r3, [sp, #24]
 8017318:	fb18 f801 	smulbb	r8, r8, r1
 801731c:	6859      	ldr	r1, [r3, #4]
 801731e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017322:	4671      	mov	r1, lr
 8017324:	a80c      	add	r0, sp, #48	@ 0x30
 8017326:	f7ff faf3 	bl	8016910 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801732a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801732e:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8017332:	9b04      	ldr	r3, [sp, #16]
 8017334:	9a02      	ldr	r2, [sp, #8]
 8017336:	fb10 f001 	smulbb	r0, r0, r1
 801733a:	fb02 8803 	mla	r8, r2, r3, r8
 801733e:	eba0 0108 	sub.w	r1, r0, r8
 8017342:	f04f 0c08 	mov.w	ip, #8
 8017346:	fb90 f0fc 	sdiv	r0, r0, ip
 801734a:	4288      	cmp	r0, r1
 801734c:	dc20      	bgt.n	8017390 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 801734e:	4551      	cmp	r1, sl
 8017350:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8017354:	da03      	bge.n	801735e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 8017356:	b1d9      	cbz	r1, 8017390 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 8017358:	468a      	mov	sl, r1
 801735a:	464f      	mov	r7, r9
 801735c:	4635      	mov	r5, r6
 801735e:	f109 39ff 	add.w	r9, r9, #4294967295
 8017362:	f119 0f02 	cmn.w	r9, #2
 8017366:	d1c5      	bne.n	80172f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 8017368:	4616      	mov	r6, r2
 801736a:	3201      	adds	r2, #1
 801736c:	f1a4 0408 	sub.w	r4, r4, #8
 8017370:	d1b6      	bne.n	80172e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 8017372:	9b01      	ldr	r3, [sp, #4]
 8017374:	b2ac      	uxth	r4, r5
 8017376:	00ed      	lsls	r5, r5, #3
 8017378:	1958      	adds	r0, r3, r5
 801737a:	1c7b      	adds	r3, r7, #1
 801737c:	d10b      	bne.n	8017396 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 801737e:	4601      	mov	r1, r0
 8017380:	9803      	ldr	r0, [sp, #12]
 8017382:	f7ff fac5 	bl	8016910 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8017386:	4621      	mov	r1, r4
 8017388:	9801      	ldr	r0, [sp, #4]
 801738a:	f7ff fc85 	bl	8016c98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801738e:	e4b3      	b.n	8016cf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8017390:	464f      	mov	r7, r9
 8017392:	4635      	mov	r5, r6
 8017394:	e7ed      	b.n	8017372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 8017396:	9b01      	ldr	r3, [sp, #4]
 8017398:	00ff      	lsls	r7, r7, #3
 801739a:	19d9      	adds	r1, r3, r7
 801739c:	f7ff fab8 	bl	8016910 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80173a0:	9b03      	ldr	r3, [sp, #12]
 80173a2:	cb03      	ldmia	r3!, {r0, r1}
 80173a4:	445f      	add	r7, fp
 80173a6:	445d      	add	r5, fp
 80173a8:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 80173ac:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 80173b0:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80173b4:	9b03      	ldr	r3, [sp, #12]
 80173b6:	6869      	ldr	r1, [r5, #4]
 80173b8:	c303      	stmia	r3!, {r0, r1}
 80173ba:	e7e4      	b.n	8017386 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

080173bc <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80173bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173c0:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 80173c4:	b0a1      	sub	sp, #132	@ 0x84
 80173c6:	4604      	mov	r4, r0
 80173c8:	4630      	mov	r0, r6
 80173ca:	f7f9 fb68 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 80173ce:	4605      	mov	r5, r0
 80173d0:	b948      	cbnz	r0, 80173e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80173d2:	6823      	ldr	r3, [r4, #0]
 80173d4:	e896 0006 	ldmia.w	r6, {r1, r2}
 80173d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80173da:	4620      	mov	r0, r4
 80173dc:	4798      	blx	r3
 80173de:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 80173e2:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 80173e6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80173ea:	2b00      	cmp	r3, #0
 80173ec:	d149      	bne.n	8017482 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 80173ee:	4bb1      	ldr	r3, [pc, #708]	@ (80176b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 80173f0:	681b      	ldr	r3, [r3, #0]
 80173f2:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 80173f6:	1ebb      	subs	r3, r7, #2
 80173f8:	425f      	negs	r7, r3
 80173fa:	415f      	adcs	r7, r3
 80173fc:	4bae      	ldr	r3, [pc, #696]	@ (80176b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 80173fe:	681b      	ldr	r3, [r3, #0]
 8017400:	2b00      	cmp	r3, #0
 8017402:	d040      	beq.n	8017486 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8017404:	4dad      	ldr	r5, [pc, #692]	@ (80176bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 8017406:	4628      	mov	r0, r5
 8017408:	f7f9 fb49 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 801740c:	4606      	mov	r6, r0
 801740e:	2800      	cmp	r0, #0
 8017410:	d139      	bne.n	8017486 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8017412:	4628      	mov	r0, r5
 8017414:	f7ff f910 	bl	8016638 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017418:	6823      	ldr	r3, [r4, #0]
 801741a:	6829      	ldr	r1, [r5, #0]
 801741c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801741e:	686a      	ldr	r2, [r5, #4]
 8017420:	4620      	mov	r0, r4
 8017422:	4798      	blx	r3
 8017424:	802e      	strh	r6, [r5, #0]
 8017426:	806e      	strh	r6, [r5, #2]
 8017428:	80ae      	strh	r6, [r5, #4]
 801742a:	80ee      	strh	r6, [r5, #6]
 801742c:	af0f      	add	r7, sp, #60	@ 0x3c
 801742e:	4ea4      	ldr	r6, [pc, #656]	@ (80176c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 8017430:	4638      	mov	r0, r7
 8017432:	f7ff fbd9 	bl	8016be8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8017436:	8835      	ldrh	r5, [r6, #0]
 8017438:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 801743c:	462b      	mov	r3, r5
 801743e:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8017442:	4563      	cmp	r3, ip
 8017444:	d224      	bcs.n	8017490 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 8017446:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 801744a:	2907      	cmp	r1, #7
 801744c:	d816      	bhi.n	801747c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801744e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8017452:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8017456:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801745a:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 801745e:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 8017462:	1c4a      	adds	r2, r1, #1
 8017464:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 8017468:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 801746c:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 8017470:	f8a2 a002 	strh.w	sl, [r2, #2]
 8017474:	f8a2 8004 	strh.w	r8, [r2, #4]
 8017478:	f8a2 e006 	strh.w	lr, [r2, #6]
 801747c:	3301      	adds	r3, #1
 801747e:	b29b      	uxth	r3, r3
 8017480:	e7df      	b.n	8017442 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8017482:	2701      	movs	r7, #1
 8017484:	e7ba      	b.n	80173fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 8017486:	2f00      	cmp	r7, #0
 8017488:	d1d0      	bne.n	801742c <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 801748a:	b021      	add	sp, #132	@ 0x84
 801748c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017490:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8017494:	42ab      	cmp	r3, r5
 8017496:	d90c      	bls.n	80174b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 8017498:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801749c:	6822      	ldr	r2, [r4, #0]
 801749e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 80174a2:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 80174a4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 80174a8:	4620      	mov	r0, r4
 80174aa:	3501      	adds	r5, #1
 80174ac:	47b8      	blx	r7
 80174ae:	b2ad      	uxth	r5, r5
 80174b0:	e7ee      	b.n	8017490 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 80174b2:	4d80      	ldr	r5, [pc, #512]	@ (80176b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 80174b4:	6828      	ldr	r0, [r5, #0]
 80174b6:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 80174ba:	2b01      	cmp	r3, #1
 80174bc:	f040 813b 	bne.w	8017736 <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 80174c0:	4a80      	ldr	r2, [pc, #512]	@ (80176c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 80174c2:	8833      	ldrh	r3, [r6, #0]
 80174c4:	7812      	ldrb	r2, [r2, #0]
 80174c6:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 80174ca:	2a01      	cmp	r2, #1
 80174cc:	d014      	beq.n	80174f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80174ce:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 80174d2:	32ae      	adds	r2, #174	@ 0xae
 80174d4:	f04f 0900 	mov.w	r9, #0
 80174d8:	4283      	cmp	r3, r0
 80174da:	f102 0208 	add.w	r2, r2, #8
 80174de:	f280 8082 	bge.w	80175e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 80174e2:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 80174e6:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 80174ea:	4439      	add	r1, r7
 80174ec:	b209      	sxth	r1, r1
 80174ee:	4589      	cmp	r9, r1
 80174f0:	bfb8      	it	lt
 80174f2:	4689      	movlt	r9, r1
 80174f4:	3301      	adds	r3, #1
 80174f6:	e7ef      	b.n	80174d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 80174f8:	4f73      	ldr	r7, [pc, #460]	@ (80176c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 80174fa:	883a      	ldrh	r2, [r7, #0]
 80174fc:	4693      	mov	fp, r2
 80174fe:	4283      	cmp	r3, r0
 8017500:	da08      	bge.n	8017514 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 8017502:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 8017506:	3301      	adds	r3, #1
 8017508:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 801750c:	458b      	cmp	fp, r1
 801750e:	bfa8      	it	ge
 8017510:	468b      	movge	fp, r1
 8017512:	e7f4      	b.n	80174fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 8017514:	2300      	movs	r3, #0
 8017516:	2a0f      	cmp	r2, #15
 8017518:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 80176cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 801751c:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8017520:	bf8c      	ite	hi
 8017522:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 8017526:	f04f 0801 	movls.w	r8, #1
 801752a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801752e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8017532:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017536:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801753a:	6828      	ldr	r0, [r5, #0]
 801753c:	455b      	cmp	r3, fp
 801753e:	f340 80c7 	ble.w	80176d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 8017542:	6803      	ldr	r3, [r0, #0]
 8017544:	f8b7 a000 	ldrh.w	sl, [r7]
 8017548:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801754c:	4798      	blx	r3
 801754e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8017552:	682b      	ldr	r3, [r5, #0]
 8017554:	ebaa 0000 	sub.w	r0, sl, r0
 8017558:	b280      	uxth	r0, r0
 801755a:	ebac 0e08 	sub.w	lr, ip, r8
 801755e:	4570      	cmp	r0, lr
 8017560:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 8017564:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 8017568:	dd05      	ble.n	8017576 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 801756a:	4558      	cmp	r0, fp
 801756c:	dd03      	ble.n	8017576 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 801756e:	b901      	cbnz	r1, 8017572 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8017570:	b392      	cbz	r2, 80175d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 8017572:	4658      	mov	r0, fp
 8017574:	e006      	b.n	8017584 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 8017576:	2900      	cmp	r1, #0
 8017578:	d1fb      	bne.n	8017572 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 801757a:	2a00      	cmp	r2, #0
 801757c:	d1f9      	bne.n	8017572 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 801757e:	4558      	cmp	r0, fp
 8017580:	bfb8      	it	lt
 8017582:	4658      	movlt	r0, fp
 8017584:	f9b9 3000 	ldrsh.w	r3, [r9]
 8017588:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 801758c:	2200      	movs	r2, #0
 801758e:	ebac 0000 	sub.w	r0, ip, r0
 8017592:	f8b6 a000 	ldrh.w	sl, [r6]
 8017596:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801759a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801759e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80175a2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80175a6:	4553      	cmp	r3, sl
 80175a8:	ddc5      	ble.n	8017536 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 80175aa:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 80175ae:	ab0d      	add	r3, sp, #52	@ 0x34
 80175b0:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80175b4:	6851      	ldr	r1, [r2, #4]
 80175b6:	c303      	stmia	r3!, {r0, r1}
 80175b8:	a80d      	add	r0, sp, #52	@ 0x34
 80175ba:	a90b      	add	r1, sp, #44	@ 0x2c
 80175bc:	f7f9 fa2c 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 80175c0:	a80d      	add	r0, sp, #52	@ 0x34
 80175c2:	f7f9 fa6c 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 80175c6:	b920      	cbnz	r0, 80175d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 80175c8:	6823      	ldr	r3, [r4, #0]
 80175ca:	a90d      	add	r1, sp, #52	@ 0x34
 80175cc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80175ce:	4620      	mov	r0, r4
 80175d0:	4798      	blx	r3
 80175d2:	f10a 0a01 	add.w	sl, sl, #1
 80175d6:	e7e4      	b.n	80175a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 80175d8:	681a      	ldr	r2, [r3, #0]
 80175da:	2101      	movs	r1, #1
 80175dc:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 80175e0:	4618      	mov	r0, r3
 80175e2:	4790      	blx	r2
 80175e4:	e7a7      	b.n	8017536 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 80175e6:	4b39      	ldr	r3, [pc, #228]	@ (80176cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 80175e8:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 80176c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 80175ec:	881f      	ldrh	r7, [r3, #0]
 80175ee:	2300      	movs	r3, #0
 80175f0:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 80175f4:	2f0f      	cmp	r7, #15
 80175f6:	bf8c      	ite	hi
 80175f8:	08ff      	lsrhi	r7, r7, #3
 80175fa:	2701      	movls	r7, #1
 80175fc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8017600:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 8017604:	6828      	ldr	r0, [r5, #0]
 8017606:	4413      	add	r3, r2
 8017608:	b21b      	sxth	r3, r3
 801760a:	454b      	cmp	r3, r9
 801760c:	da60      	bge.n	80176d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 801760e:	6803      	ldr	r3, [r0, #0]
 8017610:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8017614:	4798      	blx	r3
 8017616:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 801761a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801761e:	682a      	ldr	r2, [r5, #0]
 8017620:	4473      	add	r3, lr
 8017622:	b21b      	sxth	r3, r3
 8017624:	eb03 0e07 	add.w	lr, r3, r7
 8017628:	4570      	cmp	r0, lr
 801762a:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 801762e:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 8017632:	da0d      	bge.n	8017650 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8017634:	4548      	cmp	r0, r9
 8017636:	da0b      	bge.n	8017650 <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 8017638:	f1bc 0f00 	cmp.w	ip, #0
 801763c:	d138      	bne.n	80176b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 801763e:	2900      	cmp	r1, #0
 8017640:	d136      	bne.n	80176b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8017642:	6813      	ldr	r3, [r2, #0]
 8017644:	2101      	movs	r1, #1
 8017646:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 801764a:	4610      	mov	r0, r2
 801764c:	4798      	blx	r3
 801764e:	e7d5      	b.n	80175fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8017650:	f1bc 0f00 	cmp.w	ip, #0
 8017654:	d12c      	bne.n	80176b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8017656:	bb59      	cbnz	r1, 80176b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 8017658:	4548      	cmp	r0, r9
 801765a:	bfa8      	it	ge
 801765c:	4648      	movge	r0, r9
 801765e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8017662:	f8b6 a000 	ldrh.w	sl, [r6]
 8017666:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801766a:	2100      	movs	r1, #0
 801766c:	1ac0      	subs	r0, r0, r3
 801766e:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8017672:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8017676:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 801767a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801767e:	4553      	cmp	r3, sl
 8017680:	ddbc      	ble.n	80175fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8017682:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8017686:	ab0d      	add	r3, sp, #52	@ 0x34
 8017688:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801768c:	6851      	ldr	r1, [r2, #4]
 801768e:	c303      	stmia	r3!, {r0, r1}
 8017690:	a80d      	add	r0, sp, #52	@ 0x34
 8017692:	a90b      	add	r1, sp, #44	@ 0x2c
 8017694:	f7f9 f9c0 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8017698:	a80d      	add	r0, sp, #52	@ 0x34
 801769a:	f7f9 fa00 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 801769e:	b920      	cbnz	r0, 80176aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 80176a0:	6823      	ldr	r3, [r4, #0]
 80176a2:	a90d      	add	r1, sp, #52	@ 0x34
 80176a4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80176a6:	4620      	mov	r0, r4
 80176a8:	4798      	blx	r3
 80176aa:	f10a 0a01 	add.w	sl, sl, #1
 80176ae:	e7e4      	b.n	801767a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 80176b0:	4648      	mov	r0, r9
 80176b2:	e7d4      	b.n	801765e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 80176b4:	20013f4c 	.word	0x20013f4c
 80176b8:	20013f8c 	.word	0x20013f8c
 80176bc:	20013f98 	.word	0x20013f98
 80176c0:	200000a0 	.word	0x200000a0
 80176c4:	20013f44 	.word	0x20013f44
 80176c8:	20013f40 	.word	0x20013f40
 80176cc:	20013f42 	.word	0x20013f42
 80176d0:	6828      	ldr	r0, [r5, #0]
 80176d2:	6803      	ldr	r3, [r0, #0]
 80176d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80176d6:	4798      	blx	r3
 80176d8:	4ba5      	ldr	r3, [pc, #660]	@ (8017970 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 80176da:	781b      	ldrb	r3, [r3, #0]
 80176dc:	2b00      	cmp	r3, #0
 80176de:	f43f aed4 	beq.w	801748a <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 80176e2:	2300      	movs	r3, #0
 80176e4:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 80176e8:	4ba2      	ldr	r3, [pc, #648]	@ (8017974 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 80176ea:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 80176ee:	881b      	ldrh	r3, [r3, #0]
 80176f0:	a80f      	add	r0, sp, #60	@ 0x3c
 80176f2:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 80176f6:	42b3      	cmp	r3, r6
 80176f8:	f4bf aec7 	bcs.w	801748a <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 80176fc:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8017700:	2907      	cmp	r1, #7
 8017702:	d815      	bhi.n	8017730 <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 8017704:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8017708:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 801770c:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8017710:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8017714:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8017718:	1c4a      	adds	r2, r1, #1
 801771a:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 801771e:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 8017722:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 8017726:	f8a2 e002 	strh.w	lr, [r2, #2]
 801772a:	f8a2 c004 	strh.w	ip, [r2, #4]
 801772e:	80d7      	strh	r7, [r2, #6]
 8017730:	3301      	adds	r3, #1
 8017732:	b29b      	uxth	r3, r3
 8017734:	e7df      	b.n	80176f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8017736:	2b02      	cmp	r3, #2
 8017738:	f040 80d1 	bne.w	80178de <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801773c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8017740:	9308      	str	r3, [sp, #32]
 8017742:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 8017746:	9307      	str	r3, [sp, #28]
 8017748:	6803      	ldr	r3, [r0, #0]
 801774a:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 801774e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8017752:	4798      	blx	r3
 8017754:	4b88      	ldr	r3, [pc, #544]	@ (8017978 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 8017756:	881b      	ldrh	r3, [r3, #0]
 8017758:	9302      	str	r3, [sp, #8]
 801775a:	4b88      	ldr	r3, [pc, #544]	@ (801797c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 801775c:	881e      	ldrh	r6, [r3, #0]
 801775e:	4b88      	ldr	r3, [pc, #544]	@ (8017980 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8017760:	781b      	ldrb	r3, [r3, #0]
 8017762:	f10b 37ff 	add.w	r7, fp, #4294967295
 8017766:	2b01      	cmp	r3, #1
 8017768:	bf1c      	itt	ne
 801776a:	9b02      	ldrne	r3, [sp, #8]
 801776c:	9602      	strne	r6, [sp, #8]
 801776e:	b2bf      	uxth	r7, r7
 8017770:	fa0f f887 	sxth.w	r8, r7
 8017774:	4682      	mov	sl, r0
 8017776:	f04f 0000 	mov.w	r0, #0
 801777a:	bf18      	it	ne
 801777c:	461e      	movne	r6, r3
 801777e:	f7e9 f863 	bl	8000848 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8017782:	fb96 fbfb 	sdiv	fp, r6, fp
 8017786:	fb0b f808 	mul.w	r8, fp, r8
 801778a:	45c2      	cmp	sl, r8
 801778c:	da0c      	bge.n	80177a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 801778e:	6828      	ldr	r0, [r5, #0]
 8017790:	6803      	ldr	r3, [r0, #0]
 8017792:	210a      	movs	r1, #10
 8017794:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8017798:	4798      	blx	r3
 801779a:	6828      	ldr	r0, [r5, #0]
 801779c:	6803      	ldr	r3, [r0, #0]
 801779e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80177a2:	4798      	blx	r3
 80177a4:	4682      	mov	sl, r0
 80177a6:	e7f0      	b.n	801778a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 80177a8:	2000      	movs	r0, #0
 80177aa:	f7e9 f877 	bl	800089c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80177ae:	fa1f f38b 	uxth.w	r3, fp
 80177b2:	fb17 f703 	smulbb	r7, r7, r3
 80177b6:	9304      	str	r3, [sp, #16]
 80177b8:	b2bb      	uxth	r3, r7
 80177ba:	9305      	str	r3, [sp, #20]
 80177bc:	f04f 0800 	mov.w	r8, #0
 80177c0:	0973      	lsrs	r3, r6, #5
 80177c2:	4f70      	ldr	r7, [pc, #448]	@ (8017984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 80177c4:	9306      	str	r3, [sp, #24]
 80177c6:	4645      	mov	r5, r8
 80177c8:	42b5      	cmp	r5, r6
 80177ca:	d085      	beq.n	80176d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80177cc:	6838      	ldr	r0, [r7, #0]
 80177ce:	6803      	ldr	r3, [r0, #0]
 80177d0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80177d4:	4798      	blx	r3
 80177d6:	4582      	cmp	sl, r0
 80177d8:	4681      	mov	r9, r0
 80177da:	d907      	bls.n	80177ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 80177dc:	f1b8 0f00 	cmp.w	r8, #0
 80177e0:	d007      	beq.n	80177f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 80177e2:	6838      	ldr	r0, [r7, #0]
 80177e4:	6803      	ldr	r3, [r0, #0]
 80177e6:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 80177ea:	e774      	b.n	80176d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 80177ec:	f1b8 0f00 	cmp.w	r8, #0
 80177f0:	d003      	beq.n	80177fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 80177f2:	454d      	cmp	r5, r9
 80177f4:	d3f5      	bcc.n	80177e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 80177f6:	f04f 0801 	mov.w	r8, #1
 80177fa:	9a04      	ldr	r2, [sp, #16]
 80177fc:	fb95 f3fb 	sdiv	r3, r5, fp
 8017800:	9303      	str	r3, [sp, #12]
 8017802:	3301      	adds	r3, #1
 8017804:	fb13 f302 	smulbb	r3, r3, r2
 8017808:	b299      	uxth	r1, r3
 801780a:	f1b8 0f00 	cmp.w	r8, #0
 801780e:	d04e      	beq.n	80178ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 8017810:	eb09 030b 	add.w	r3, r9, fp
 8017814:	42b3      	cmp	r3, r6
 8017816:	bfa8      	it	ge
 8017818:	4633      	movge	r3, r6
 801781a:	9807      	ldr	r0, [sp, #28]
 801781c:	b29b      	uxth	r3, r3
 801781e:	428b      	cmp	r3, r1
 8017820:	bf94      	ite	ls
 8017822:	ebc5 0203 	rsbls	r2, r5, r3
 8017826:	ebc5 0201 	rsbhi	r2, r5, r1
 801782a:	4282      	cmp	r2, r0
 801782c:	bfa8      	it	ge
 801782e:	4602      	movge	r2, r0
 8017830:	9808      	ldr	r0, [sp, #32]
 8017832:	fa1f fa82 	uxth.w	sl, r2
 8017836:	4582      	cmp	sl, r0
 8017838:	d205      	bcs.n	8017846 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 801783a:	fa15 f082 	uxtah	r0, r5, r2
 801783e:	4286      	cmp	r6, r0
 8017840:	d001      	beq.n	8017846 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8017842:	4299      	cmp	r1, r3
 8017844:	d240      	bcs.n	80178c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 8017846:	2001      	movs	r0, #1
 8017848:	9209      	str	r2, [sp, #36]	@ 0x24
 801784a:	f7e8 fffd 	bl	8000848 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801784e:	6838      	ldr	r0, [r7, #0]
 8017850:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8017854:	6803      	ldr	r3, [r0, #0]
 8017856:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 801785a:	4798      	blx	r3
 801785c:	4b48      	ldr	r3, [pc, #288]	@ (8017980 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 801785e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017860:	781b      	ldrb	r3, [r3, #0]
 8017862:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017866:	2b01      	cmp	r3, #1
 8017868:	b212      	sxth	r2, r2
 801786a:	f04f 0000 	mov.w	r0, #0
 801786e:	d122      	bne.n	80178b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 8017870:	1b73      	subs	r3, r6, r5
 8017872:	eba3 030a 	sub.w	r3, r3, sl
 8017876:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801787a:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 801787e:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8017882:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 8017886:	6823      	ldr	r3, [r4, #0]
 8017888:	a90d      	add	r1, sp, #52	@ 0x34
 801788a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801788c:	4620      	mov	r0, r4
 801788e:	4798      	blx	r3
 8017890:	6838      	ldr	r0, [r7, #0]
 8017892:	9b03      	ldr	r3, [sp, #12]
 8017894:	4259      	negs	r1, r3
 8017896:	6803      	ldr	r3, [r0, #0]
 8017898:	b209      	sxth	r1, r1
 801789a:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 801789e:	4798      	blx	r3
 80178a0:	4455      	add	r5, sl
 80178a2:	2001      	movs	r0, #1
 80178a4:	b2ad      	uxth	r5, r5
 80178a6:	f7e8 fff9 	bl	800089c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80178aa:	46ca      	mov	sl, r9
 80178ac:	e78c      	b.n	80177c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 80178ae:	9b05      	ldr	r3, [sp, #20]
 80178b0:	eba9 0303 	sub.w	r3, r9, r3
 80178b4:	e7b1      	b.n	801781a <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 80178b6:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 80178ba:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 80178be:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 80178c2:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 80178c6:	e7de      	b.n	8017886 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 80178c8:	6838      	ldr	r0, [r7, #0]
 80178ca:	6803      	ldr	r3, [r0, #0]
 80178cc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80178ce:	4798      	blx	r3
 80178d0:	6838      	ldr	r0, [r7, #0]
 80178d2:	9906      	ldr	r1, [sp, #24]
 80178d4:	6803      	ldr	r3, [r0, #0]
 80178d6:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80178da:	4798      	blx	r3
 80178dc:	e7e5      	b.n	80178aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 80178de:	2b03      	cmp	r3, #3
 80178e0:	f040 8130 	bne.w	8017b44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 80178e4:	4b26      	ldr	r3, [pc, #152]	@ (8017980 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 80178e6:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 80178ea:	781b      	ldrb	r3, [r3, #0]
 80178ec:	2b01      	cmp	r3, #1
 80178ee:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 80178f2:	f000 8093 	beq.w	8017a1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 80178f6:	8832      	ldrh	r2, [r6, #0]
 80178f8:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 80178fc:	3201      	adds	r2, #1
 80178fe:	b292      	uxth	r2, r2
 8017900:	2900      	cmp	r1, #0
 8017902:	f43f aee9 	beq.w	80176d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017906:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 801790a:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 801790e:	441d      	add	r5, r3
 8017910:	b22d      	sxth	r5, r5
 8017912:	4694      	mov	ip, r2
 8017914:	f04f 0800 	mov.w	r8, #0
 8017918:	fa1f f38c 	uxth.w	r3, ip
 801791c:	4299      	cmp	r1, r3
 801791e:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8017922:	f240 80ba 	bls.w	8017a9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 8017926:	4427      	add	r7, r4
 8017928:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801792c:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8017930:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8017934:	4283      	cmp	r3, r0
 8017936:	f340 809c 	ble.w	8017a72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 801793a:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 801793e:	4405      	add	r5, r0
 8017940:	b22d      	sxth	r5, r5
 8017942:	429d      	cmp	r5, r3
 8017944:	bfa8      	it	ge
 8017946:	461d      	movge	r5, r3
 8017948:	46e0      	mov	r8, ip
 801794a:	f10c 0c01 	add.w	ip, ip, #1
 801794e:	e7e3      	b.n	8017918 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 8017950:	d10a      	bne.n	8017968 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 8017952:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 8017956:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 801795a:	4562      	cmp	r2, ip
 801795c:	bfb8      	it	lt
 801795e:	4662      	movlt	r2, ip
 8017960:	4288      	cmp	r0, r1
 8017962:	bfb8      	it	lt
 8017964:	4698      	movlt	r8, r3
 8017966:	e082      	b.n	8017a6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8017968:	428a      	cmp	r2, r1
 801796a:	bfb8      	it	lt
 801796c:	460a      	movlt	r2, r1
 801796e:	e07e      	b.n	8017a6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8017970:	20013f4a 	.word	0x20013f4a
 8017974:	200000a0 	.word	0x200000a0
 8017978:	20013f42 	.word	0x20013f42
 801797c:	20013f40 	.word	0x20013f40
 8017980:	20013f44 	.word	0x20013f44
 8017984:	20013f4c 	.word	0x20013f4c
 8017988:	19e1      	adds	r1, r4, r7
 801798a:	ab0d      	add	r3, sp, #52	@ 0x34
 801798c:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8017990:	6849      	ldr	r1, [r1, #4]
 8017992:	c303      	stmia	r3!, {r0, r1}
 8017994:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8017998:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801799c:	454b      	cmp	r3, r9
 801799e:	bfb8      	it	lt
 80179a0:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 80179a4:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80179a8:	440b      	add	r3, r1
 80179aa:	1a9b      	subs	r3, r3, r2
 80179ac:	a80d      	add	r0, sp, #52	@ 0x34
 80179ae:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80179b2:	f7fe fe5b 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80179b6:	a80d      	add	r0, sp, #52	@ 0x34
 80179b8:	f7f9 f871 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 80179bc:	bb70      	cbnz	r0, 8017a1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 80179be:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 80179c2:	6828      	ldr	r0, [r5, #0]
 80179c4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80179c8:	f8d0 e000 	ldr.w	lr, [r0]
 80179cc:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 80179d0:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80179d4:	45cc      	cmp	ip, r9
 80179d6:	bfd4      	ite	le
 80179d8:	fa1f fc8c 	uxthle.w	ip, ip
 80179dc:	fa1f fc89 	uxthgt.w	ip, r9
 80179e0:	f8cd c000 	str.w	ip, [sp]
 80179e4:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 80179e8:	47d8      	blx	fp
 80179ea:	4683      	mov	fp, r0
 80179ec:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 80179f0:	a80d      	add	r0, sp, #52	@ 0x34
 80179f2:	f7fe fe21 	bl	8016638 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80179f6:	6823      	ldr	r3, [r4, #0]
 80179f8:	4427      	add	r7, r4
 80179fa:	4620      	mov	r0, r4
 80179fc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80179fe:	a90d      	add	r1, sp, #52	@ 0x34
 8017a00:	4798      	blx	r3
 8017a02:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 8017a06:	eba0 000b 	sub.w	r0, r0, fp
 8017a0a:	b200      	sxth	r0, r0
 8017a0c:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 8017a10:	b920      	cbnz	r0, 8017a1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8017a12:	fa1f f188 	uxth.w	r1, r8
 8017a16:	4650      	mov	r0, sl
 8017a18:	f7ff f93e 	bl	8016c98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017a1c:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8017a20:	f1bb 0f00 	cmp.w	fp, #0
 8017a24:	f43f ae58 	beq.w	80176d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017a28:	8833      	ldrh	r3, [r6, #0]
 8017a2a:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8017a2e:	3301      	adds	r3, #1
 8017a30:	b29b      	uxth	r3, r3
 8017a32:	f04f 0800 	mov.w	r8, #0
 8017a36:	b299      	uxth	r1, r3
 8017a38:	458b      	cmp	fp, r1
 8017a3a:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8017a3e:	d9a3      	bls.n	8017988 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 8017a40:	4427      	add	r7, r4
 8017a42:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8017a46:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 8017a4a:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 8017a4e:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8017a52:	4408      	add	r0, r1
 8017a54:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8017a58:	4461      	add	r1, ip
 8017a5a:	b200      	sxth	r0, r0
 8017a5c:	b209      	sxth	r1, r1
 8017a5e:	4288      	cmp	r0, r1
 8017a60:	f6bf af76 	bge.w	8017950 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 8017a64:	4584      	cmp	ip, r0
 8017a66:	4662      	mov	r2, ip
 8017a68:	4698      	mov	r8, r3
 8017a6a:	bfb8      	it	lt
 8017a6c:	4602      	movlt	r2, r0
 8017a6e:	3301      	adds	r3, #1
 8017a70:	e7e1      	b.n	8017a36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 8017a72:	d10e      	bne.n	8017a92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 8017a74:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8017a78:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8017a7c:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8017a80:	4473      	add	r3, lr
 8017a82:	b21b      	sxth	r3, r3
 8017a84:	429d      	cmp	r5, r3
 8017a86:	bfa8      	it	ge
 8017a88:	461d      	movge	r5, r3
 8017a8a:	4287      	cmp	r7, r0
 8017a8c:	bfb8      	it	lt
 8017a8e:	46e0      	movlt	r8, ip
 8017a90:	e75b      	b.n	801794a <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8017a92:	4285      	cmp	r5, r0
 8017a94:	bfa8      	it	ge
 8017a96:	4605      	movge	r5, r0
 8017a98:	e757      	b.n	801794a <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8017a9a:	eb0a 0007 	add.w	r0, sl, r7
 8017a9e:	4427      	add	r7, r4
 8017aa0:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8017aa4:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8017aa8:	45cb      	cmp	fp, r9
 8017aaa:	bfbe      	ittt	lt
 8017aac:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 8017ab0:	445d      	addlt	r5, fp
 8017ab2:	b22d      	sxthlt	r5, r5
 8017ab4:	f7f8 fff3 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8017ab8:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8017abc:	2800      	cmp	r0, #0
 8017abe:	f47f af1f 	bne.w	8017900 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 8017ac2:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8017ac6:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8017aca:	482b      	ldr	r0, [pc, #172]	@ (8017b78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 8017acc:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8017ad0:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8017ad4:	6800      	ldr	r0, [r0, #0]
 8017ad6:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 8017ada:	1aad      	subs	r5, r5, r2
 8017adc:	454d      	cmp	r5, r9
 8017ade:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8017ae2:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8017ae6:	bfa8      	it	ge
 8017ae8:	464d      	movge	r5, r9
 8017aea:	f8d0 c000 	ldr.w	ip, [r0]
 8017aee:	b2ad      	uxth	r5, r5
 8017af0:	fa1f fb8b 	uxth.w	fp, fp
 8017af4:	455d      	cmp	r5, fp
 8017af6:	bf94      	ite	ls
 8017af8:	9500      	strls	r5, [sp, #0]
 8017afa:	f8cd b000 	strhi.w	fp, [sp]
 8017afe:	b292      	uxth	r2, r2
 8017b00:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 8017b04:	b29b      	uxth	r3, r3
 8017b06:	b289      	uxth	r1, r1
 8017b08:	47a8      	blx	r5
 8017b0a:	6823      	ldr	r3, [r4, #0]
 8017b0c:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8017b10:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8017b12:	a90d      	add	r1, sp, #52	@ 0x34
 8017b14:	4620      	mov	r0, r4
 8017b16:	4798      	blx	r3
 8017b18:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8017b1c:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8017b20:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8017b24:	1a5b      	subs	r3, r3, r1
 8017b26:	440a      	add	r2, r1
 8017b28:	b21b      	sxth	r3, r3
 8017b2a:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8017b2e:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8017b32:	2b00      	cmp	r3, #0
 8017b34:	f47f aedf 	bne.w	80178f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8017b38:	fa1f f188 	uxth.w	r1, r8
 8017b3c:	4650      	mov	r0, sl
 8017b3e:	f7ff f8ab 	bl	8016c98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017b42:	e6d8      	b.n	80178f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8017b44:	8835      	ldrh	r5, [r6, #0]
 8017b46:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8017b4a:	42ab      	cmp	r3, r5
 8017b4c:	f67f adc4 	bls.w	80176d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017b50:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8017b54:	ab0d      	add	r3, sp, #52	@ 0x34
 8017b56:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8017b5a:	6851      	ldr	r1, [r2, #4]
 8017b5c:	c303      	stmia	r3!, {r0, r1}
 8017b5e:	a80d      	add	r0, sp, #52	@ 0x34
 8017b60:	f7f8 ff9d 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8017b64:	b920      	cbnz	r0, 8017b70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 8017b66:	6823      	ldr	r3, [r4, #0]
 8017b68:	a90d      	add	r1, sp, #52	@ 0x34
 8017b6a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8017b6c:	4620      	mov	r0, r4
 8017b6e:	4798      	blx	r3
 8017b70:	3501      	adds	r5, #1
 8017b72:	b2ad      	uxth	r5, r5
 8017b74:	e7e7      	b.n	8017b46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 8017b76:	bf00      	nop
 8017b78:	20013f4c 	.word	0x20013f4c

08017b7c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8017b7c:	4b03      	ldr	r3, [pc, #12]	@ (8017b8c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8017b7e:	2200      	movs	r2, #0
 8017b80:	801a      	strh	r2, [r3, #0]
 8017b82:	805a      	strh	r2, [r3, #2]
 8017b84:	809a      	strh	r2, [r3, #4]
 8017b86:	80da      	strh	r2, [r3, #6]
 8017b88:	4770      	bx	lr
 8017b8a:	bf00      	nop
 8017b8c:	20013f98 	.word	0x20013f98

08017b90 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8017b90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b94:	4606      	mov	r6, r0
 8017b96:	b09d      	sub	sp, #116	@ 0x74
 8017b98:	a803      	add	r0, sp, #12
 8017b9a:	4614      	mov	r4, r2
 8017b9c:	468a      	mov	sl, r1
 8017b9e:	461d      	mov	r5, r3
 8017ba0:	f001 f957 	bl	8018e52 <_ZN8touchgfx12TextProviderC1Ev>
 8017ba4:	6833      	ldr	r3, [r6, #0]
 8017ba6:	4630      	mov	r0, r6
 8017ba8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8017baa:	4798      	blx	r3
 8017bac:	6833      	ldr	r3, [r6, #0]
 8017bae:	4607      	mov	r7, r0
 8017bb0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8017bb2:	4630      	mov	r0, r6
 8017bb4:	4798      	blx	r3
 8017bb6:	462a      	mov	r2, r5
 8017bb8:	9000      	str	r0, [sp, #0]
 8017bba:	4621      	mov	r1, r4
 8017bbc:	463b      	mov	r3, r7
 8017bbe:	a803      	add	r0, sp, #12
 8017bc0:	f001 f9a2 	bl	8018f08 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017bc4:	2500      	movs	r5, #0
 8017bc6:	462c      	mov	r4, r5
 8017bc8:	46a9      	mov	r9, r5
 8017bca:	46a8      	mov	r8, r5
 8017bcc:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8017bd0:	2300      	movs	r3, #0
 8017bd2:	9302      	str	r3, [sp, #8]
 8017bd4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8017bd8:	429c      	cmp	r4, r3
 8017bda:	d002      	beq.n	8017be2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8017bdc:	455c      	cmp	r4, fp
 8017bde:	bf18      	it	ne
 8017be0:	4625      	movne	r5, r4
 8017be2:	ab02      	add	r3, sp, #8
 8017be4:	4632      	mov	r2, r6
 8017be6:	4651      	mov	r1, sl
 8017be8:	a803      	add	r0, sp, #12
 8017bea:	f001 fcb9 	bl	8019560 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017bee:	4604      	mov	r4, r0
 8017bf0:	b108      	cbz	r0, 8017bf6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8017bf2:	280a      	cmp	r0, #10
 8017bf4:	d10a      	bne.n	8017c0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8017bf6:	45c1      	cmp	r9, r8
 8017bf8:	bf38      	it	cc
 8017bfa:	46c1      	movcc	r9, r8
 8017bfc:	f04f 0800 	mov.w	r8, #0
 8017c00:	2c00      	cmp	r4, #0
 8017c02:	d1e5      	bne.n	8017bd0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017c04:	4648      	mov	r0, r9
 8017c06:	b01d      	add	sp, #116	@ 0x74
 8017c08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c0c:	9a02      	ldr	r2, [sp, #8]
 8017c0e:	2a00      	cmp	r2, #0
 8017c10:	d0de      	beq.n	8017bd0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017c12:	7b57      	ldrb	r7, [r2, #13]
 8017c14:	6833      	ldr	r3, [r6, #0]
 8017c16:	8894      	ldrh	r4, [r2, #4]
 8017c18:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8017c1a:	007f      	lsls	r7, r7, #1
 8017c1c:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8017c20:	7a97      	ldrb	r7, [r2, #10]
 8017c22:	4629      	mov	r1, r5
 8017c24:	4307      	orrs	r7, r0
 8017c26:	4630      	mov	r0, r6
 8017c28:	4798      	blx	r3
 8017c2a:	4438      	add	r0, r7
 8017c2c:	4480      	add	r8, r0
 8017c2e:	fa1f f888 	uxth.w	r8, r8
 8017c32:	e7e5      	b.n	8017c00 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08017c34 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8017c34:	b508      	push	{r3, lr}
 8017c36:	6803      	ldr	r3, [r0, #0]
 8017c38:	68db      	ldr	r3, [r3, #12]
 8017c3a:	4798      	blx	r3
 8017c3c:	b128      	cbz	r0, 8017c4a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8017c3e:	7b43      	ldrb	r3, [r0, #13]
 8017c40:	7a80      	ldrb	r0, [r0, #10]
 8017c42:	005b      	lsls	r3, r3, #1
 8017c44:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8017c48:	4318      	orrs	r0, r3
 8017c4a:	bd08      	pop	{r3, pc}

08017c4c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8017c4c:	b40e      	push	{r1, r2, r3}
 8017c4e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017c50:	b09e      	sub	sp, #120	@ 0x78
 8017c52:	ab23      	add	r3, sp, #140	@ 0x8c
 8017c54:	4605      	mov	r5, r0
 8017c56:	f853 4b04 	ldr.w	r4, [r3], #4
 8017c5a:	9303      	str	r3, [sp, #12]
 8017c5c:	a805      	add	r0, sp, #20
 8017c5e:	f001 f8f8 	bl	8018e52 <_ZN8touchgfx12TextProviderC1Ev>
 8017c62:	682b      	ldr	r3, [r5, #0]
 8017c64:	4628      	mov	r0, r5
 8017c66:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8017c68:	4798      	blx	r3
 8017c6a:	682b      	ldr	r3, [r5, #0]
 8017c6c:	4606      	mov	r6, r0
 8017c6e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8017c70:	4628      	mov	r0, r5
 8017c72:	4798      	blx	r3
 8017c74:	4633      	mov	r3, r6
 8017c76:	ae1e      	add	r6, sp, #120	@ 0x78
 8017c78:	4621      	mov	r1, r4
 8017c7a:	9000      	str	r0, [sp, #0]
 8017c7c:	9a03      	ldr	r2, [sp, #12]
 8017c7e:	2400      	movs	r4, #0
 8017c80:	a805      	add	r0, sp, #20
 8017c82:	f001 f941 	bl	8018f08 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017c86:	f846 4d68 	str.w	r4, [r6, #-104]!
 8017c8a:	462a      	mov	r2, r5
 8017c8c:	4633      	mov	r3, r6
 8017c8e:	4621      	mov	r1, r4
 8017c90:	a805      	add	r0, sp, #20
 8017c92:	f001 fc65 	bl	8019560 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017c96:	b1f0      	cbz	r0, 8017cd6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8017c98:	280a      	cmp	r0, #10
 8017c9a:	d018      	beq.n	8017cce <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017c9c:	9f04      	ldr	r7, [sp, #16]
 8017c9e:	b1b7      	cbz	r7, 8017cce <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017ca0:	7b78      	ldrb	r0, [r7, #13]
 8017ca2:	7a3b      	ldrb	r3, [r7, #8]
 8017ca4:	88ea      	ldrh	r2, [r5, #6]
 8017ca6:	00c1      	lsls	r1, r0, #3
 8017ca8:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8017cac:	4319      	orrs	r1, r3
 8017cae:	0643      	lsls	r3, r0, #25
 8017cb0:	bf44      	itt	mi
 8017cb2:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8017cb6:	b219      	sxthmi	r1, r3
 8017cb8:	0100      	lsls	r0, r0, #4
 8017cba:	79fb      	ldrb	r3, [r7, #7]
 8017cbc:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8017cc0:	4303      	orrs	r3, r0
 8017cc2:	4413      	add	r3, r2
 8017cc4:	1a5b      	subs	r3, r3, r1
 8017cc6:	b21b      	sxth	r3, r3
 8017cc8:	429c      	cmp	r4, r3
 8017cca:	bfb8      	it	lt
 8017ccc:	461c      	movlt	r4, r3
 8017cce:	4633      	mov	r3, r6
 8017cd0:	462a      	mov	r2, r5
 8017cd2:	2100      	movs	r1, #0
 8017cd4:	e7dc      	b.n	8017c90 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8017cd6:	b2a0      	uxth	r0, r4
 8017cd8:	b01e      	add	sp, #120	@ 0x78
 8017cda:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017cde:	b003      	add	sp, #12
 8017ce0:	4770      	bx	lr

08017ce2 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8017ce2:	7a43      	ldrb	r3, [r0, #9]
 8017ce4:	8880      	ldrh	r0, [r0, #4]
 8017ce6:	4418      	add	r0, r3
 8017ce8:	b280      	uxth	r0, r0
 8017cea:	4770      	bx	lr

08017cec <_ZNK8touchgfx4Font13getFontHeightEv>:
 8017cec:	6803      	ldr	r3, [r0, #0]
 8017cee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017cf0:	4718      	bx	r3

08017cf2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8017cf2:	b40e      	push	{r1, r2, r3}
 8017cf4:	b570      	push	{r4, r5, r6, lr}
 8017cf6:	b09d      	sub	sp, #116	@ 0x74
 8017cf8:	ab21      	add	r3, sp, #132	@ 0x84
 8017cfa:	4604      	mov	r4, r0
 8017cfc:	f853 5b04 	ldr.w	r5, [r3], #4
 8017d00:	9302      	str	r3, [sp, #8]
 8017d02:	a803      	add	r0, sp, #12
 8017d04:	f001 f8a5 	bl	8018e52 <_ZN8touchgfx12TextProviderC1Ev>
 8017d08:	6823      	ldr	r3, [r4, #0]
 8017d0a:	4620      	mov	r0, r4
 8017d0c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8017d0e:	4798      	blx	r3
 8017d10:	6823      	ldr	r3, [r4, #0]
 8017d12:	4606      	mov	r6, r0
 8017d14:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8017d16:	4620      	mov	r0, r4
 8017d18:	4798      	blx	r3
 8017d1a:	4633      	mov	r3, r6
 8017d1c:	9000      	str	r0, [sp, #0]
 8017d1e:	9a02      	ldr	r2, [sp, #8]
 8017d20:	4629      	mov	r1, r5
 8017d22:	a803      	add	r0, sp, #12
 8017d24:	f001 f8f0 	bl	8018f08 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017d28:	a803      	add	r0, sp, #12
 8017d2a:	f001 fce7 	bl	80196fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017d2e:	2401      	movs	r4, #1
 8017d30:	b2a3      	uxth	r3, r4
 8017d32:	b140      	cbz	r0, 8017d46 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8017d34:	280a      	cmp	r0, #10
 8017d36:	bf08      	it	eq
 8017d38:	3301      	addeq	r3, #1
 8017d3a:	a803      	add	r0, sp, #12
 8017d3c:	bf08      	it	eq
 8017d3e:	b21c      	sxtheq	r4, r3
 8017d40:	f001 fcdc 	bl	80196fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017d44:	e7f4      	b.n	8017d30 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8017d46:	4618      	mov	r0, r3
 8017d48:	b01d      	add	sp, #116	@ 0x74
 8017d4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017d4e:	b003      	add	sp, #12
 8017d50:	4770      	bx	lr

08017d52 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8017d52:	b40e      	push	{r1, r2, r3}
 8017d54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017d56:	b09e      	sub	sp, #120	@ 0x78
 8017d58:	ab23      	add	r3, sp, #140	@ 0x8c
 8017d5a:	4604      	mov	r4, r0
 8017d5c:	f853 5b04 	ldr.w	r5, [r3], #4
 8017d60:	9303      	str	r3, [sp, #12]
 8017d62:	a805      	add	r0, sp, #20
 8017d64:	f001 f875 	bl	8018e52 <_ZN8touchgfx12TextProviderC1Ev>
 8017d68:	6823      	ldr	r3, [r4, #0]
 8017d6a:	4620      	mov	r0, r4
 8017d6c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8017d6e:	4798      	blx	r3
 8017d70:	6823      	ldr	r3, [r4, #0]
 8017d72:	4606      	mov	r6, r0
 8017d74:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8017d76:	4620      	mov	r0, r4
 8017d78:	4798      	blx	r3
 8017d7a:	4633      	mov	r3, r6
 8017d7c:	4629      	mov	r1, r5
 8017d7e:	9000      	str	r0, [sp, #0]
 8017d80:	9a03      	ldr	r2, [sp, #12]
 8017d82:	a805      	add	r0, sp, #20
 8017d84:	ad1e      	add	r5, sp, #120	@ 0x78
 8017d86:	f001 f8bf 	bl	8018f08 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017d8a:	2100      	movs	r1, #0
 8017d8c:	f845 1d68 	str.w	r1, [r5, #-104]!
 8017d90:	4622      	mov	r2, r4
 8017d92:	462b      	mov	r3, r5
 8017d94:	a805      	add	r0, sp, #20
 8017d96:	f001 fbe3 	bl	8019560 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017d9a:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8017d9e:	b1d8      	cbz	r0, 8017dd8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8017da0:	280a      	cmp	r0, #10
 8017da2:	d012      	beq.n	8017dca <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017da4:	9804      	ldr	r0, [sp, #16]
 8017da6:	b180      	cbz	r0, 8017dca <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017da8:	7b47      	ldrb	r7, [r0, #13]
 8017daa:	88e2      	ldrh	r2, [r4, #6]
 8017dac:	00fb      	lsls	r3, r7, #3
 8017dae:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8017db2:	7a03      	ldrb	r3, [r0, #8]
 8017db4:	430b      	orrs	r3, r1
 8017db6:	0679      	lsls	r1, r7, #25
 8017db8:	bf44      	itt	mi
 8017dba:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8017dbe:	b21b      	sxthmi	r3, r3
 8017dc0:	1ad3      	subs	r3, r2, r3
 8017dc2:	b21b      	sxth	r3, r3
 8017dc4:	429e      	cmp	r6, r3
 8017dc6:	bfa8      	it	ge
 8017dc8:	461e      	movge	r6, r3
 8017dca:	462b      	mov	r3, r5
 8017dcc:	4622      	mov	r2, r4
 8017dce:	2100      	movs	r1, #0
 8017dd0:	a805      	add	r0, sp, #20
 8017dd2:	f001 fbc5 	bl	8019560 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017dd6:	e7e2      	b.n	8017d9e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8017dd8:	4630      	mov	r0, r6
 8017dda:	b01e      	add	sp, #120	@ 0x78
 8017ddc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017de0:	b003      	add	sp, #12
 8017de2:	4770      	bx	lr

08017de4 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8017de4:	b513      	push	{r0, r1, r4, lr}
 8017de6:	6803      	ldr	r3, [r0, #0]
 8017de8:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017dec:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017df0:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017df4:	2400      	movs	r4, #0
 8017df6:	9400      	str	r4, [sp, #0]
 8017df8:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017dfc:	691b      	ldr	r3, [r3, #16]
 8017dfe:	4669      	mov	r1, sp
 8017e00:	4798      	blx	r3
 8017e02:	b002      	add	sp, #8
 8017e04:	bd10      	pop	{r4, pc}

08017e06 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8017e06:	b538      	push	{r3, r4, r5, lr}
 8017e08:	680b      	ldr	r3, [r1, #0]
 8017e0a:	460c      	mov	r4, r1
 8017e0c:	68db      	ldr	r3, [r3, #12]
 8017e0e:	4605      	mov	r5, r0
 8017e10:	4798      	blx	r3
 8017e12:	6823      	ldr	r3, [r4, #0]
 8017e14:	4620      	mov	r0, r4
 8017e16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017e18:	4629      	mov	r1, r5
 8017e1a:	4798      	blx	r3
 8017e1c:	4628      	mov	r0, r5
 8017e1e:	bd38      	pop	{r3, r4, r5, pc}

08017e20 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8017e20:	b410      	push	{r4}
 8017e22:	880a      	ldrh	r2, [r1, #0]
 8017e24:	8884      	ldrh	r4, [r0, #4]
 8017e26:	4422      	add	r2, r4
 8017e28:	800a      	strh	r2, [r1, #0]
 8017e2a:	88c4      	ldrh	r4, [r0, #6]
 8017e2c:	884a      	ldrh	r2, [r1, #2]
 8017e2e:	4422      	add	r2, r4
 8017e30:	804a      	strh	r2, [r1, #2]
 8017e32:	6940      	ldr	r0, [r0, #20]
 8017e34:	b120      	cbz	r0, 8017e40 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8017e36:	6803      	ldr	r3, [r0, #0]
 8017e38:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017e3c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017e3e:	4718      	bx	r3
 8017e40:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017e44:	4770      	bx	lr

08017e46 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8017e46:	b570      	push	{r4, r5, r6, lr}
 8017e48:	8882      	ldrh	r2, [r0, #4]
 8017e4a:	880b      	ldrh	r3, [r1, #0]
 8017e4c:	4413      	add	r3, r2
 8017e4e:	800b      	strh	r3, [r1, #0]
 8017e50:	88c2      	ldrh	r2, [r0, #6]
 8017e52:	884b      	ldrh	r3, [r1, #2]
 8017e54:	460c      	mov	r4, r1
 8017e56:	4413      	add	r3, r2
 8017e58:	804b      	strh	r3, [r1, #2]
 8017e5a:	4605      	mov	r5, r0
 8017e5c:	1d01      	adds	r1, r0, #4
 8017e5e:	4620      	mov	r0, r4
 8017e60:	f7f8 fdda 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8017e64:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017e68:	2b00      	cmp	r3, #0
 8017e6a:	dd0b      	ble.n	8017e84 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017e6c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017e70:	2b00      	cmp	r3, #0
 8017e72:	dd07      	ble.n	8017e84 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017e74:	6968      	ldr	r0, [r5, #20]
 8017e76:	b128      	cbz	r0, 8017e84 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017e78:	6803      	ldr	r3, [r0, #0]
 8017e7a:	4621      	mov	r1, r4
 8017e7c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017e7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017e82:	4718      	bx	r3
 8017e84:	bd70      	pop	{r4, r5, r6, pc}
	...

08017e88 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8017e88:	b570      	push	{r4, r5, r6, lr}
 8017e8a:	8882      	ldrh	r2, [r0, #4]
 8017e8c:	880b      	ldrh	r3, [r1, #0]
 8017e8e:	4413      	add	r3, r2
 8017e90:	800b      	strh	r3, [r1, #0]
 8017e92:	88c2      	ldrh	r2, [r0, #6]
 8017e94:	884b      	ldrh	r3, [r1, #2]
 8017e96:	460c      	mov	r4, r1
 8017e98:	4413      	add	r3, r2
 8017e9a:	804b      	strh	r3, [r1, #2]
 8017e9c:	4605      	mov	r5, r0
 8017e9e:	1d01      	adds	r1, r0, #4
 8017ea0:	4620      	mov	r0, r4
 8017ea2:	f7f8 fdb9 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8017ea6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017eaa:	2b00      	cmp	r3, #0
 8017eac:	dd19      	ble.n	8017ee2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017eae:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017eb2:	2b00      	cmp	r3, #0
 8017eb4:	dd15      	ble.n	8017ee2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017eb6:	6968      	ldr	r0, [r5, #20]
 8017eb8:	b128      	cbz	r0, 8017ec6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8017eba:	6803      	ldr	r3, [r0, #0]
 8017ebc:	4621      	mov	r1, r4
 8017ebe:	691b      	ldr	r3, [r3, #16]
 8017ec0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017ec4:	4718      	bx	r3
 8017ec6:	4b07      	ldr	r3, [pc, #28]	@ (8017ee4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8017ec8:	681b      	ldr	r3, [r3, #0]
 8017eca:	3304      	adds	r3, #4
 8017ecc:	429d      	cmp	r5, r3
 8017ece:	d108      	bne.n	8017ee2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017ed0:	f7fe fd64 	bl	801699c <_ZN8touchgfx11Application11getInstanceEv>
 8017ed4:	6803      	ldr	r3, [r0, #0]
 8017ed6:	6821      	ldr	r1, [r4, #0]
 8017ed8:	6862      	ldr	r2, [r4, #4]
 8017eda:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017edc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017ee0:	4718      	bx	r3
 8017ee2:	bd70      	pop	{r4, r5, r6, pc}
 8017ee4:	20013f90 	.word	0x20013f90

08017ee8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8017ee8:	b570      	push	{r4, r5, r6, lr}
 8017eea:	4604      	mov	r4, r0
 8017eec:	4616      	mov	r6, r2
 8017eee:	460d      	mov	r5, r1
 8017ef0:	b901      	cbnz	r1, 8017ef4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8017ef2:	b192      	cbz	r2, 8017f1a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017ef4:	6823      	ldr	r3, [r4, #0]
 8017ef6:	4620      	mov	r0, r4
 8017ef8:	699b      	ldr	r3, [r3, #24]
 8017efa:	4798      	blx	r3
 8017efc:	88e2      	ldrh	r2, [r4, #6]
 8017efe:	88a1      	ldrh	r1, [r4, #4]
 8017f00:	4432      	add	r2, r6
 8017f02:	4429      	add	r1, r5
 8017f04:	4620      	mov	r0, r4
 8017f06:	b212      	sxth	r2, r2
 8017f08:	b209      	sxth	r1, r1
 8017f0a:	f7ea facd 	bl	80024a8 <_ZN8touchgfx8Drawable5setXYEss>
 8017f0e:	6823      	ldr	r3, [r4, #0]
 8017f10:	4620      	mov	r0, r4
 8017f12:	699b      	ldr	r3, [r3, #24]
 8017f14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017f18:	4718      	bx	r3
 8017f1a:	bd70      	pop	{r4, r5, r6, pc}

08017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017f1c:	b510      	push	{r4, lr}
 8017f1e:	4604      	mov	r4, r0
 8017f20:	4608      	mov	r0, r1
 8017f22:	2300      	movs	r3, #0
 8017f24:	8023      	strh	r3, [r4, #0]
 8017f26:	8063      	strh	r3, [r4, #2]
 8017f28:	6803      	ldr	r3, [r0, #0]
 8017f2a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017f2e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8017f32:	80a1      	strh	r1, [r4, #4]
 8017f34:	80e2      	strh	r2, [r4, #6]
 8017f36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017f38:	4621      	mov	r1, r4
 8017f3a:	4798      	blx	r3
 8017f3c:	4620      	mov	r0, r4
 8017f3e:	bd10      	pop	{r4, pc}

08017f40 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 8017f40:	4770      	bx	lr

08017f42 <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 8017f42:	b510      	push	{r4, lr}
 8017f44:	211c      	movs	r1, #28
 8017f46:	4604      	mov	r4, r0
 8017f48:	f011 fbe4 	bl	8029714 <_ZdlPvj>
 8017f4c:	4620      	mov	r0, r4
 8017f4e:	bd10      	pop	{r4, pc}

08017f50 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 8017f50:	4a04      	ldr	r2, [pc, #16]	@ (8017f64 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 8017f52:	6002      	str	r2, [r0, #0]
 8017f54:	2200      	movs	r2, #0
 8017f56:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8017f5a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8017f5e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8017f62:	4770      	bx	lr
 8017f64:	0802e664 	.word	0x0802e664

08017f68 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 8017f68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f6c:	4604      	mov	r4, r0
 8017f6e:	b087      	sub	sp, #28
 8017f70:	8b45      	ldrh	r5, [r0, #26]
 8017f72:	f8b2 c000 	ldrh.w	ip, [r2]
 8017f76:	9105      	str	r1, [sp, #20]
 8017f78:	68e1      	ldr	r1, [r4, #12]
 8017f7a:	9203      	str	r2, [sp, #12]
 8017f7c:	1c68      	adds	r0, r5, #1
 8017f7e:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8017f82:	f01c 0501 	ands.w	r5, ip, #1
 8017f86:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017f8a:	9502      	str	r5, [sp, #8]
 8017f8c:	b280      	uxth	r0, r0
 8017f8e:	d07d      	beq.n	801808c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 8017f90:	ee07 2a90 	vmov	s15, r2
 8017f94:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8017f98:	8360      	strh	r0, [r4, #26]
 8017f9a:	edc1 6a00 	vstr	s13, [r1]
 8017f9e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8017fa2:	8b61      	ldrh	r1, [r4, #26]
 8017fa4:	ee07 2a10 	vmov	s14, r2
 8017fa8:	68e2      	ldr	r2, [r4, #12]
 8017faa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017fae:	f04f 0e00 	mov.w	lr, #0
 8017fb2:	1c48      	adds	r0, r1, #1
 8017fb4:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8017fb8:	ee06 ea10 	vmov	s12, lr
 8017fbc:	8360      	strh	r0, [r4, #26]
 8017fbe:	ed82 7a00 	vstr	s14, [r2]
 8017fc2:	8b21      	ldrh	r1, [r4, #24]
 8017fc4:	68a2      	ldr	r2, [r4, #8]
 8017fc6:	2501      	movs	r5, #1
 8017fc8:	1c48      	adds	r0, r1, #1
 8017fca:	8320      	strh	r0, [r4, #24]
 8017fcc:	5455      	strb	r5, [r2, r1]
 8017fce:	2200      	movs	r2, #0
 8017fd0:	3304      	adds	r3, #4
 8017fd2:	ee07 2a90 	vmov	s15, r2
 8017fd6:	9300      	str	r3, [sp, #0]
 8017fd8:	46aa      	mov	sl, r5
 8017fda:	4613      	mov	r3, r2
 8017fdc:	4611      	mov	r1, r2
 8017fde:	462e      	mov	r6, r5
 8017fe0:	9201      	str	r2, [sp, #4]
 8017fe2:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8017fe6:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 8017fea:	9805      	ldr	r0, [sp, #20]
 8017fec:	f8d4 b008 	ldr.w	fp, [r4, #8]
 8017ff0:	f108 0701 	add.w	r7, r8, #1
 8017ff4:	42a8      	cmp	r0, r5
 8017ff6:	b2bf      	uxth	r7, r7
 8017ff8:	eb0b 0908 	add.w	r9, fp, r8
 8017ffc:	f340 80db 	ble.w	80181b6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 8018000:	fa4c f906 	asr.w	r9, ip, r6
 8018004:	f009 0901 	and.w	r9, r9, #1
 8018008:	fa5f f389 	uxtb.w	r3, r9
 801800c:	9304      	str	r3, [sp, #16]
 801800e:	9b00      	ldr	r3, [sp, #0]
 8018010:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018014:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8018018:	f1b9 0f00 	cmp.w	r9, #0
 801801c:	d07d      	beq.n	801811a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 801801e:	ee05 1a10 	vmov	s10, r1
 8018022:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 8018026:	ee05 3a10 	vmov	s10, r3
 801802a:	8327      	strh	r7, [r4, #24]
 801802c:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8018030:	f1ba 0f00 	cmp.w	sl, #0
 8018034:	d050      	beq.n	80180d8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 8018036:	f04f 0002 	mov.w	r0, #2
 801803a:	f80b 0008 	strb.w	r0, [fp, r8]
 801803e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8018042:	68e7      	ldr	r7, [r4, #12]
 8018044:	f108 0901 	add.w	r9, r8, #1
 8018048:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801804c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8018050:	edc7 4a00 	vstr	s9, [r7]
 8018054:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8018058:	68e7      	ldr	r7, [r4, #12]
 801805a:	f108 0901 	add.w	r9, r8, #1
 801805e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8018062:	f8a4 901a 	strh.w	r9, [r4, #26]
 8018066:	ed87 5a00 	vstr	s10, [r7]
 801806a:	3601      	adds	r6, #1
 801806c:	2e10      	cmp	r6, #16
 801806e:	d106      	bne.n	801807e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 8018070:	9e01      	ldr	r6, [sp, #4]
 8018072:	9803      	ldr	r0, [sp, #12]
 8018074:	3601      	adds	r6, #1
 8018076:	9601      	str	r6, [sp, #4]
 8018078:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 801807c:	2600      	movs	r6, #0
 801807e:	9800      	ldr	r0, [sp, #0]
 8018080:	f8dd a010 	ldr.w	sl, [sp, #16]
 8018084:	3004      	adds	r0, #4
 8018086:	3501      	adds	r5, #1
 8018088:	9000      	str	r0, [sp, #0]
 801808a:	e7ac      	b.n	8017fe6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 801808c:	ee06 2a10 	vmov	s12, r2
 8018090:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8018094:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8018098:	ee16 5a10 	vmov	r5, s12
 801809c:	442a      	add	r2, r5
 801809e:	ee06 2a90 	vmov	s13, r2
 80180a2:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 80180a6:	8360      	strh	r0, [r4, #26]
 80180a8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80180ac:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80180b0:	4472      	add	r2, lr
 80180b2:	ee07 2a10 	vmov	s14, r2
 80180b6:	ee66 6aa7 	vmul.f32	s13, s13, s15
 80180ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80180be:	edc1 6a00 	vstr	s13, [r1]
 80180c2:	8b61      	ldrh	r1, [r4, #26]
 80180c4:	68e2      	ldr	r2, [r4, #12]
 80180c6:	ee27 7a27 	vmul.f32	s14, s14, s15
 80180ca:	1c48      	adds	r0, r1, #1
 80180cc:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80180d0:	8360      	strh	r0, [r4, #26]
 80180d2:	ed82 7a00 	vstr	s14, [r2]
 80180d6:	e774      	b.n	8017fc2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 80180d8:	f04f 0005 	mov.w	r0, #5
 80180dc:	f80b 0008 	strb.w	r0, [fp, r8]
 80180e0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 80180e4:	68e7      	ldr	r7, [r4, #12]
 80180e6:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 80180ea:	f108 0901 	add.w	r9, r8, #1
 80180ee:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80180f2:	f8a4 901a 	strh.w	r9, [r4, #26]
 80180f6:	ed87 4a00 	vstr	s8, [r7]
 80180fa:	ee04 2a10 	vmov	s8, r2
 80180fe:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8018102:	68e7      	ldr	r7, [r4, #12]
 8018104:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 8018108:	f108 0901 	add.w	r9, r8, #1
 801810c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8018110:	f8a4 901a 	strh.w	r9, [r4, #26]
 8018114:	ed87 4a00 	vstr	s8, [r7]
 8018118:	e791      	b.n	801803e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 801811a:	f1ba 0f00 	cmp.w	sl, #0
 801811e:	d146      	bne.n	80181ae <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 8018120:	f04f 0005 	mov.w	r0, #5
 8018124:	8327      	strh	r7, [r4, #24]
 8018126:	f80b 0008 	strb.w	r0, [fp, r8]
 801812a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801812e:	68e7      	ldr	r7, [r4, #12]
 8018130:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8018134:	f108 0901 	add.w	r9, r8, #1
 8018138:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 801813c:	ee17 0a90 	vmov	r0, s15
 8018140:	f8a4 901a 	strh.w	r9, [r4, #26]
 8018144:	ed87 5a00 	vstr	s10, [r7]
 8018148:	ee05 2a10 	vmov	s10, r2
 801814c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8018150:	68e7      	ldr	r7, [r4, #12]
 8018152:	4408      	add	r0, r1
 8018154:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8018158:	ee07 0a90 	vmov	s15, r0
 801815c:	f108 0901 	add.w	r9, r8, #1
 8018160:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8018164:	f8a4 901a 	strh.w	r9, [r4, #26]
 8018168:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801816c:	ed87 5a00 	vstr	s10, [r7]
 8018170:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8018174:	68e7      	ldr	r7, [r4, #12]
 8018176:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801817a:	f108 0901 	add.w	r9, r8, #1
 801817e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8018182:	441a      	add	r2, r3
 8018184:	f8a4 901a 	strh.w	r9, [r4, #26]
 8018188:	edc7 7a00 	vstr	s15, [r7]
 801818c:	ee07 2a90 	vmov	s15, r2
 8018190:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018194:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8018198:	68e7      	ldr	r7, [r4, #12]
 801819a:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801819e:	f108 0901 	add.w	r9, r8, #1
 80181a2:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 80181a6:	f8a4 901a 	strh.w	r9, [r4, #26]
 80181aa:	edc7 7a00 	vstr	s15, [r7]
 80181ae:	461a      	mov	r2, r3
 80181b0:	ee07 1a90 	vmov	s15, r1
 80181b4:	e759      	b.n	801806a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 80181b6:	f1ba 0f00 	cmp.w	sl, #0
 80181ba:	d045      	beq.n	8018248 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 80181bc:	ee05 1a90 	vmov	s11, r1
 80181c0:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80181c4:	eef4 5a66 	vcmp.f32	s11, s13
 80181c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80181cc:	d108      	bne.n	80181e0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 80181ce:	ee05 3a90 	vmov	s11, r3
 80181d2:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 80181d6:	eef4 5a47 	vcmp.f32	s11, s14
 80181da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80181de:	d033      	beq.n	8018248 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 80181e0:	9b02      	ldr	r3, [sp, #8]
 80181e2:	8327      	strh	r7, [r4, #24]
 80181e4:	b1b3      	cbz	r3, 8018214 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 80181e6:	2302      	movs	r3, #2
 80181e8:	f889 3000 	strb.w	r3, [r9]
 80181ec:	8b62      	ldrh	r2, [r4, #26]
 80181ee:	68e3      	ldr	r3, [r4, #12]
 80181f0:	1c51      	adds	r1, r2, #1
 80181f2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80181f6:	8361      	strh	r1, [r4, #26]
 80181f8:	edc3 6a00 	vstr	s13, [r3]
 80181fc:	8b62      	ldrh	r2, [r4, #26]
 80181fe:	68e3      	ldr	r3, [r4, #12]
 8018200:	1c51      	adds	r1, r2, #1
 8018202:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8018206:	8361      	strh	r1, [r4, #26]
 8018208:	ed83 7a00 	vstr	s14, [r3]
 801820c:	9800      	ldr	r0, [sp, #0]
 801820e:	b007      	add	sp, #28
 8018210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018214:	2305      	movs	r3, #5
 8018216:	f889 3000 	strb.w	r3, [r9]
 801821a:	8b62      	ldrh	r2, [r4, #26]
 801821c:	68e3      	ldr	r3, [r4, #12]
 801821e:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8018222:	1c51      	adds	r1, r2, #1
 8018224:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8018228:	8361      	strh	r1, [r4, #26]
 801822a:	ee07 ea90 	vmov	s15, lr
 801822e:	ed83 6a00 	vstr	s12, [r3]
 8018232:	8b62      	ldrh	r2, [r4, #26]
 8018234:	68e3      	ldr	r3, [r4, #12]
 8018236:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801823a:	1c51      	adds	r1, r2, #1
 801823c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8018240:	8361      	strh	r1, [r4, #26]
 8018242:	edc3 7a00 	vstr	s15, [r3]
 8018246:	e7d1      	b.n	80181ec <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8018248:	ee05 2a90 	vmov	s11, r2
 801824c:	9902      	ldr	r1, [sp, #8]
 801824e:	8327      	strh	r7, [r4, #24]
 8018250:	2305      	movs	r3, #5
 8018252:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8018256:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 801825a:	f889 3000 	strb.w	r3, [r9]
 801825e:	b181      	cbz	r1, 8018282 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 8018260:	8b62      	ldrh	r2, [r4, #26]
 8018262:	68e3      	ldr	r3, [r4, #12]
 8018264:	1c51      	adds	r1, r2, #1
 8018266:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801826a:	8361      	strh	r1, [r4, #26]
 801826c:	ed83 5a00 	vstr	s10, [r3]
 8018270:	8b62      	ldrh	r2, [r4, #26]
 8018272:	68e3      	ldr	r3, [r4, #12]
 8018274:	1c51      	adds	r1, r2, #1
 8018276:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801827a:	8361      	strh	r1, [r4, #26]
 801827c:	edc3 5a00 	vstr	s11, [r3]
 8018280:	e7b4      	b.n	80181ec <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8018282:	8b65      	ldrh	r5, [r4, #26]
 8018284:	68e1      	ldr	r1, [r4, #12]
 8018286:	1c6e      	adds	r6, r5, #1
 8018288:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801828c:	8366      	strh	r6, [r4, #26]
 801828e:	ed81 5a00 	vstr	s10, [r1]
 8018292:	8b65      	ldrh	r5, [r4, #26]
 8018294:	68e1      	ldr	r1, [r4, #12]
 8018296:	1c6e      	adds	r6, r5, #1
 8018298:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 801829c:	8366      	strh	r6, [r4, #26]
 801829e:	edc1 5a00 	vstr	s11, [r1]
 80182a2:	8b65      	ldrh	r5, [r4, #26]
 80182a4:	68e1      	ldr	r1, [r4, #12]
 80182a6:	1c6e      	adds	r6, r5, #1
 80182a8:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 80182ac:	ee17 0a90 	vmov	r0, s15
 80182b0:	ee16 5a10 	vmov	r5, s12
 80182b4:	4428      	add	r0, r5
 80182b6:	ee07 0a90 	vmov	s15, r0
 80182ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80182be:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 80182c2:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80182c6:	4472      	add	r2, lr
 80182c8:	8366      	strh	r6, [r4, #26]
 80182ca:	edc1 7a00 	vstr	s15, [r1]
 80182ce:	ee07 2a90 	vmov	s15, r2
 80182d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80182d6:	8b61      	ldrh	r1, [r4, #26]
 80182d8:	68e5      	ldr	r5, [r4, #12]
 80182da:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80182de:	1c4e      	adds	r6, r1, #1
 80182e0:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 80182e4:	8366      	strh	r6, [r4, #26]
 80182e6:	edc1 7a00 	vstr	s15, [r1]
 80182ea:	8b22      	ldrh	r2, [r4, #24]
 80182ec:	68a1      	ldr	r1, [r4, #8]
 80182ee:	1c55      	adds	r5, r2, #1
 80182f0:	8325      	strh	r5, [r4, #24]
 80182f2:	548b      	strb	r3, [r1, r2]
 80182f4:	e791      	b.n	801821a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

080182f8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 80182f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80182fc:	b08e      	sub	sp, #56	@ 0x38
 80182fe:	4604      	mov	r4, r0
 8018300:	4688      	mov	r8, r1
 8018302:	4615      	mov	r5, r2
 8018304:	4699      	mov	r9, r3
 8018306:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8018308:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 801830c:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 801830e:	f7e9 f929 	bl	8001564 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 8018312:	6060      	str	r0, [r4, #4]
 8018314:	f1b9 0f00 	cmp.w	r9, #0
 8018318:	f000 80e8 	beq.w	80184ec <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 801831c:	2800      	cmp	r0, #0
 801831e:	f000 80e5 	beq.w	80184ec <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8018322:	a805      	add	r0, sp, #20
 8018324:	f000 f8f9 	bl	801851a <_ZN8touchgfx9Matrix3x3C1Ev>
 8018328:	6833      	ldr	r3, [r6, #0]
 801832a:	4630      	mov	r0, r6
 801832c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 801832e:	4798      	blx	r3
 8018330:	a805      	add	r0, sp, #20
 8018332:	eef0 0a40 	vmov.f32	s1, s0
 8018336:	f000 f8f4 	bl	8018522 <_ZN8touchgfx9Matrix3x35scaleEff>
 801833a:	6860      	ldr	r0, [r4, #4]
 801833c:	f1ba 0f03 	cmp.w	sl, #3
 8018340:	d83b      	bhi.n	80183ba <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 8018342:	e8df f00a 	tbb	[pc, sl]
 8018346:	1002      	.short	0x1002
 8018348:	9f71      	.short	0x9f71
 801834a:	6803      	ldr	r3, [r0, #0]
 801834c:	462a      	mov	r2, r5
 801834e:	689b      	ldr	r3, [r3, #8]
 8018350:	4641      	mov	r1, r8
 8018352:	4798      	blx	r3
 8018354:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8018358:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 801835c:	ee07 7a90 	vmov	s15, r7
 8018360:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8018364:	e026      	b.n	80183b4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 8018366:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 801836a:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 801836e:	8869      	ldrh	r1, [r5, #2]
 8018370:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018374:	1a9b      	subs	r3, r3, r2
 8018376:	1a5b      	subs	r3, r3, r1
 8018378:	f8ad 300c 	strh.w	r3, [sp, #12]
 801837c:	882b      	ldrh	r3, [r5, #0]
 801837e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8018382:	88ab      	ldrh	r3, [r5, #4]
 8018384:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018388:	6803      	ldr	r3, [r0, #0]
 801838a:	aa03      	add	r2, sp, #12
 801838c:	689b      	ldr	r3, [r3, #8]
 801838e:	4641      	mov	r1, r8
 8018390:	4798      	blx	r3
 8018392:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 80184f4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 8018396:	a805      	add	r0, sp, #20
 8018398:	f000 f8e8 	bl	801856c <_ZN8touchgfx9Matrix3x36rotateEf>
 801839c:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 80183a0:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80183a2:	ee07 7a90 	vmov	s15, r7
 80183a6:	1a9b      	subs	r3, r3, r2
 80183a8:	ee00 3a10 	vmov	s0, r3
 80183ac:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80183b0:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 80183b4:	a805      	add	r0, sp, #20
 80183b6:	f000 f927 	bl	8018608 <_ZN8touchgfx9Matrix3x39translateEff>
 80183ba:	6860      	ldr	r0, [r4, #4]
 80183bc:	6803      	ldr	r3, [r0, #0]
 80183be:	a905      	add	r1, sp, #20
 80183c0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80183c2:	4798      	blx	r3
 80183c4:	6860      	ldr	r0, [r4, #4]
 80183c6:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80183c8:	6803      	ldr	r3, [r0, #0]
 80183ca:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 80183ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80183d0:	4798      	blx	r3
 80183d2:	6860      	ldr	r0, [r4, #4]
 80183d4:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 80183d8:	6803      	ldr	r3, [r0, #0]
 80183da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80183dc:	4798      	blx	r3
 80183de:	6860      	ldr	r0, [r4, #4]
 80183e0:	6803      	ldr	r3, [r0, #0]
 80183e2:	2101      	movs	r1, #1
 80183e4:	68db      	ldr	r3, [r3, #12]
 80183e6:	2500      	movs	r5, #0
 80183e8:	4798      	blx	r3
 80183ea:	f8b9 7000 	ldrh.w	r7, [r9]
 80183ee:	61a5      	str	r5, [r4, #24]
 80183f0:	f104 0310 	add.w	r3, r4, #16
 80183f4:	f104 0208 	add.w	r2, r4, #8
 80183f8:	f104 0114 	add.w	r1, r4, #20
 80183fc:	f104 000c 	add.w	r0, r4, #12
 8018400:	f109 0602 	add.w	r6, r9, #2
 8018404:	f7ef fb80 	bl	8007b08 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 8018408:	42af      	cmp	r7, r5
 801840a:	dd60      	ble.n	80184ce <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 801840c:	8831      	ldrh	r1, [r6, #0]
 801840e:	f101 030f 	add.w	r3, r1, #15
 8018412:	1cb2      	adds	r2, r6, #2
 8018414:	f3c3 1307 	ubfx	r3, r3, #4, #8
 8018418:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801841c:	4620      	mov	r0, r4
 801841e:	f7ff fda3 	bl	8017f68 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 8018422:	3501      	adds	r5, #1
 8018424:	4606      	mov	r6, r0
 8018426:	e7ef      	b.n	8018408 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 8018428:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801842c:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8018430:	8829      	ldrh	r1, [r5, #0]
 8018432:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018436:	1a9b      	subs	r3, r3, r2
 8018438:	1a5b      	subs	r3, r3, r1
 801843a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801843e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8018442:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8018446:	886d      	ldrh	r5, [r5, #2]
 8018448:	f8ad 1012 	strh.w	r1, [sp, #18]
 801844c:	1a5b      	subs	r3, r3, r1
 801844e:	1b5b      	subs	r3, r3, r5
 8018450:	f8ad 300e 	strh.w	r3, [sp, #14]
 8018454:	6803      	ldr	r3, [r0, #0]
 8018456:	aa03      	add	r2, sp, #12
 8018458:	689b      	ldr	r3, [r3, #8]
 801845a:	4641      	mov	r1, r8
 801845c:	4798      	blx	r3
 801845e:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 80184f8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 8018462:	a805      	add	r0, sp, #20
 8018464:	f000 f882 	bl	801856c <_ZN8touchgfx9Matrix3x36rotateEf>
 8018468:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801846c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801846e:	1a9b      	subs	r3, r3, r2
 8018470:	ee00 3a90 	vmov	s1, r3
 8018474:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8018478:	1bdb      	subs	r3, r3, r7
 801847a:	ee00 3a10 	vmov	s0, r3
 801847e:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8018482:	e795      	b.n	80183b0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 8018484:	886b      	ldrh	r3, [r5, #2]
 8018486:	f8ad 300c 	strh.w	r3, [sp, #12]
 801848a:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801848e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8018492:	8829      	ldrh	r1, [r5, #0]
 8018494:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018498:	1a9b      	subs	r3, r3, r2
 801849a:	1a5b      	subs	r3, r3, r1
 801849c:	f8ad 300e 	strh.w	r3, [sp, #14]
 80184a0:	88eb      	ldrh	r3, [r5, #6]
 80184a2:	f8ad 3010 	strh.w	r3, [sp, #16]
 80184a6:	6803      	ldr	r3, [r0, #0]
 80184a8:	aa03      	add	r2, sp, #12
 80184aa:	689b      	ldr	r3, [r3, #8]
 80184ac:	4641      	mov	r1, r8
 80184ae:	4798      	blx	r3
 80184b0:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 80184fc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 80184b4:	a805      	add	r0, sp, #20
 80184b6:	f000 f859 	bl	801856c <_ZN8touchgfx9Matrix3x36rotateEf>
 80184ba:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80184be:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 80184c2:	1bdb      	subs	r3, r3, r7
 80184c4:	ee00 3a90 	vmov	s1, r3
 80184c8:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 80184cc:	e748      	b.n	8018360 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 80184ce:	6860      	ldr	r0, [r4, #4]
 80184d0:	8b22      	ldrh	r2, [r4, #24]
 80184d2:	6803      	ldr	r3, [r0, #0]
 80184d4:	2100      	movs	r1, #0
 80184d6:	9101      	str	r1, [sp, #4]
 80184d8:	8b61      	ldrh	r1, [r4, #26]
 80184da:	9100      	str	r1, [sp, #0]
 80184dc:	6a1d      	ldr	r5, [r3, #32]
 80184de:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 80184e2:	47a8      	blx	r5
 80184e4:	6860      	ldr	r0, [r4, #4]
 80184e6:	6803      	ldr	r3, [r0, #0]
 80184e8:	69db      	ldr	r3, [r3, #28]
 80184ea:	4798      	blx	r3
 80184ec:	b00e      	add	sp, #56	@ 0x38
 80184ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80184f2:	bf00      	nop
 80184f4:	42b40000 	.word	0x42b40000
 80184f8:	43340000 	.word	0x43340000
 80184fc:	43870000 	.word	0x43870000

08018500 <_ZN8touchgfx9Matrix3x35resetEv>:
 8018500:	2300      	movs	r3, #0
 8018502:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8018506:	6002      	str	r2, [r0, #0]
 8018508:	6043      	str	r3, [r0, #4]
 801850a:	6083      	str	r3, [r0, #8]
 801850c:	60c3      	str	r3, [r0, #12]
 801850e:	6102      	str	r2, [r0, #16]
 8018510:	6143      	str	r3, [r0, #20]
 8018512:	6183      	str	r3, [r0, #24]
 8018514:	61c3      	str	r3, [r0, #28]
 8018516:	6202      	str	r2, [r0, #32]
 8018518:	4770      	bx	lr

0801851a <_ZN8touchgfx9Matrix3x3C1Ev>:
 801851a:	b508      	push	{r3, lr}
 801851c:	f7ff fff0 	bl	8018500 <_ZN8touchgfx9Matrix3x35resetEv>
 8018520:	bd08      	pop	{r3, pc}

08018522 <_ZN8touchgfx9Matrix3x35scaleEff>:
 8018522:	edd0 7a00 	vldr	s15, [r0]
 8018526:	ee67 7a80 	vmul.f32	s15, s15, s0
 801852a:	edc0 7a00 	vstr	s15, [r0]
 801852e:	edd0 7a01 	vldr	s15, [r0, #4]
 8018532:	ee67 7a80 	vmul.f32	s15, s15, s0
 8018536:	edc0 7a01 	vstr	s15, [r0, #4]
 801853a:	edd0 7a02 	vldr	s15, [r0, #8]
 801853e:	ee27 0a80 	vmul.f32	s0, s15, s0
 8018542:	edd0 7a03 	vldr	s15, [r0, #12]
 8018546:	ed80 0a02 	vstr	s0, [r0, #8]
 801854a:	ee67 7aa0 	vmul.f32	s15, s15, s1
 801854e:	edc0 7a03 	vstr	s15, [r0, #12]
 8018552:	edd0 7a04 	vldr	s15, [r0, #16]
 8018556:	ee67 7aa0 	vmul.f32	s15, s15, s1
 801855a:	edc0 7a04 	vstr	s15, [r0, #16]
 801855e:	edd0 7a05 	vldr	s15, [r0, #20]
 8018562:	ee67 0aa0 	vmul.f32	s1, s15, s1
 8018566:	edc0 0a05 	vstr	s1, [r0, #20]
 801856a:	4770      	bx	lr

0801856c <_ZN8touchgfx9Matrix3x36rotateEf>:
 801856c:	b510      	push	{r4, lr}
 801856e:	eddf 7a24 	vldr	s15, [pc, #144]	@ 8018600 <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 8018572:	ee20 0a27 	vmul.f32	s0, s0, s15
 8018576:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8018604 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 801857a:	ed2d 8b02 	vpush	{d8}
 801857e:	eec0 8a27 	vdiv.f32	s17, s0, s15
 8018582:	4604      	mov	r4, r0
 8018584:	eeb0 0a68 	vmov.f32	s0, s17
 8018588:	f011 f90c 	bl	80297a4 <cosf>
 801858c:	eeb0 8a40 	vmov.f32	s16, s0
 8018590:	eeb0 0a68 	vmov.f32	s0, s17
 8018594:	f011 f94a 	bl	802982c <sinf>
 8018598:	edd4 6a03 	vldr	s13, [r4, #12]
 801859c:	edd4 4a00 	vldr	s9, [r4]
 80185a0:	ed94 7a04 	vldr	s14, [r4, #16]
 80185a4:	ed94 5a01 	vldr	s10, [r4, #4]
 80185a8:	edd4 5a02 	vldr	s11, [r4, #8]
 80185ac:	ee60 7a66 	vnmul.f32	s15, s0, s13
 80185b0:	ee66 6a88 	vmul.f32	s13, s13, s16
 80185b4:	eee8 7a24 	vfma.f32	s15, s16, s9
 80185b8:	eee0 6a24 	vfma.f32	s13, s0, s9
 80185bc:	edc4 7a00 	vstr	s15, [r4]
 80185c0:	ee60 7a47 	vnmul.f32	s15, s0, s14
 80185c4:	ee27 7a08 	vmul.f32	s14, s14, s16
 80185c8:	eee8 7a05 	vfma.f32	s15, s16, s10
 80185cc:	eea0 7a05 	vfma.f32	s14, s0, s10
 80185d0:	edc4 7a01 	vstr	s15, [r4, #4]
 80185d4:	edd4 7a05 	vldr	s15, [r4, #20]
 80185d8:	edc4 6a03 	vstr	s13, [r4, #12]
 80185dc:	ee20 6a67 	vnmul.f32	s12, s0, s15
 80185e0:	ee67 7a88 	vmul.f32	s15, s15, s16
 80185e4:	eea8 6a25 	vfma.f32	s12, s16, s11
 80185e8:	ecbd 8b02 	vpop	{d8}
 80185ec:	eee0 7a25 	vfma.f32	s15, s0, s11
 80185f0:	ed84 6a02 	vstr	s12, [r4, #8]
 80185f4:	ed84 7a04 	vstr	s14, [r4, #16]
 80185f8:	edc4 7a05 	vstr	s15, [r4, #20]
 80185fc:	bd10      	pop	{r4, pc}
 80185fe:	bf00      	nop
 8018600:	40490fdb 	.word	0x40490fdb
 8018604:	43340000 	.word	0x43340000

08018608 <_ZN8touchgfx9Matrix3x39translateEff>:
 8018608:	ed90 6a06 	vldr	s12, [r0, #24]
 801860c:	edd0 7a00 	vldr	s15, [r0]
 8018610:	edd0 6a07 	vldr	s13, [r0, #28]
 8018614:	ed90 7a08 	vldr	s14, [r0, #32]
 8018618:	eee6 7a00 	vfma.f32	s15, s12, s0
 801861c:	edc0 7a00 	vstr	s15, [r0]
 8018620:	edd0 7a01 	vldr	s15, [r0, #4]
 8018624:	eee6 7a80 	vfma.f32	s15, s13, s0
 8018628:	edc0 7a01 	vstr	s15, [r0, #4]
 801862c:	edd0 7a02 	vldr	s15, [r0, #8]
 8018630:	eee7 7a00 	vfma.f32	s15, s14, s0
 8018634:	edc0 7a02 	vstr	s15, [r0, #8]
 8018638:	edd0 7a03 	vldr	s15, [r0, #12]
 801863c:	eee6 7a20 	vfma.f32	s15, s12, s1
 8018640:	edc0 7a03 	vstr	s15, [r0, #12]
 8018644:	edd0 7a04 	vldr	s15, [r0, #16]
 8018648:	eee6 7aa0 	vfma.f32	s15, s13, s1
 801864c:	edc0 7a04 	vstr	s15, [r0, #16]
 8018650:	edd0 7a05 	vldr	s15, [r0, #20]
 8018654:	eee7 7a20 	vfma.f32	s15, s14, s1
 8018658:	edc0 7a05 	vstr	s15, [r0, #20]
 801865c:	4770      	bx	lr

0801865e <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 801865e:	edd0 6a01 	vldr	s13, [r0, #4]
 8018662:	edd0 7a04 	vldr	s15, [r0, #16]
 8018666:	ed90 7a03 	vldr	s14, [r0, #12]
 801866a:	ee60 7aa7 	vmul.f32	s15, s1, s15
 801866e:	ee60 0aa6 	vmul.f32	s1, s1, s13
 8018672:	edd0 6a00 	vldr	s13, [r0]
 8018676:	eee7 7a00 	vfma.f32	s15, s14, s0
 801867a:	b084      	sub	sp, #16
 801867c:	eee6 0a80 	vfma.f32	s1, s13, s0
 8018680:	ed90 7a05 	vldr	s14, [r0, #20]
 8018684:	ed90 0a02 	vldr	s0, [r0, #8]
 8018688:	ee30 0a80 	vadd.f32	s0, s1, s0
 801868c:	ee77 0a87 	vadd.f32	s1, s15, s14
 8018690:	b004      	add	sp, #16
 8018692:	4770      	bx	lr

08018694 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8018694:	b530      	push	{r4, r5, lr}
 8018696:	8083      	strh	r3, [r0, #4]
 8018698:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801869c:	80c3      	strh	r3, [r0, #6]
 801869e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80186a2:	7203      	strb	r3, [r0, #8]
 80186a4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80186a8:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80186ac:	7243      	strb	r3, [r0, #9]
 80186ae:	7a83      	ldrb	r3, [r0, #10]
 80186b0:	6141      	str	r1, [r0, #20]
 80186b2:	f365 0306 	bfi	r3, r5, #0, #7
 80186b6:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80186ba:	8302      	strh	r2, [r0, #24]
 80186bc:	f365 13c7 	bfi	r3, r5, #7, #1
 80186c0:	7283      	strb	r3, [r0, #10]
 80186c2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80186c6:	72c3      	strb	r3, [r0, #11]
 80186c8:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 80186cc:	7303      	strb	r3, [r0, #12]
 80186ce:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80186d2:	81c3      	strh	r3, [r0, #14]
 80186d4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80186d8:	8203      	strh	r3, [r0, #16]
 80186da:	4b01      	ldr	r3, [pc, #4]	@ (80186e0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80186dc:	6003      	str	r3, [r0, #0]
 80186de:	bd30      	pop	{r4, r5, pc}
 80186e0:	0802e678 	.word	0x0802e678

080186e4 <_ZNK8touchgfx9ConstFont4findEt>:
 80186e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80186e6:	6944      	ldr	r4, [r0, #20]
 80186e8:	b3bc      	cbz	r4, 801875a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80186ea:	88a3      	ldrh	r3, [r4, #4]
 80186ec:	8b02      	ldrh	r2, [r0, #24]
 80186ee:	1acb      	subs	r3, r1, r3
 80186f0:	f102 32ff 	add.w	r2, r2, #4294967295
 80186f4:	d431      	bmi.n	801875a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80186f6:	4293      	cmp	r3, r2
 80186f8:	dd0c      	ble.n	8018714 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80186fa:	230e      	movs	r3, #14
 80186fc:	fb03 4302 	mla	r3, r3, r2, r4
 8018700:	889b      	ldrh	r3, [r3, #4]
 8018702:	1a5b      	subs	r3, r3, r1
 8018704:	1ad3      	subs	r3, r2, r3
 8018706:	429a      	cmp	r2, r3
 8018708:	db27      	blt.n	801875a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801870a:	2b00      	cmp	r3, #0
 801870c:	bfbc      	itt	lt
 801870e:	2302      	movlt	r3, #2
 8018710:	fb92 f3f3 	sdivlt	r3, r2, r3
 8018714:	2500      	movs	r5, #0
 8018716:	260e      	movs	r6, #14
 8018718:	4295      	cmp	r5, r2
 801871a:	dc1e      	bgt.n	801875a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801871c:	fb06 4003 	mla	r0, r6, r3, r4
 8018720:	8887      	ldrh	r7, [r0, #4]
 8018722:	42b9      	cmp	r1, r7
 8018724:	d01a      	beq.n	801875c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8018726:	d20d      	bcs.n	8018744 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8018728:	1e5a      	subs	r2, r3, #1
 801872a:	4295      	cmp	r5, r2
 801872c:	dc15      	bgt.n	801875a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801872e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8018732:	1a5b      	subs	r3, r3, r1
 8018734:	1ad3      	subs	r3, r2, r3
 8018736:	429a      	cmp	r2, r3
 8018738:	db0f      	blt.n	801875a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801873a:	429d      	cmp	r5, r3
 801873c:	ddec      	ble.n	8018718 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801873e:	1953      	adds	r3, r2, r5
 8018740:	105b      	asrs	r3, r3, #1
 8018742:	e7e9      	b.n	8018718 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018744:	1c5d      	adds	r5, r3, #1
 8018746:	42aa      	cmp	r2, r5
 8018748:	db07      	blt.n	801875a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801874a:	8a43      	ldrh	r3, [r0, #18]
 801874c:	1acb      	subs	r3, r1, r3
 801874e:	442b      	add	r3, r5
 8018750:	429d      	cmp	r5, r3
 8018752:	dc02      	bgt.n	801875a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018754:	429a      	cmp	r2, r3
 8018756:	dadf      	bge.n	8018718 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018758:	e7f1      	b.n	801873e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801875a:	2000      	movs	r0, #0
 801875c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801875e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801875e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018760:	4604      	mov	r4, r0
 8018762:	4617      	mov	r7, r2
 8018764:	461e      	mov	r6, r3
 8018766:	b911      	cbnz	r1, 801876e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8018768:	2500      	movs	r5, #0
 801876a:	4628      	mov	r0, r5
 801876c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801876e:	290a      	cmp	r1, #10
 8018770:	d0fa      	beq.n	8018768 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018772:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8018776:	4291      	cmp	r1, r2
 8018778:	d0f6      	beq.n	8018768 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801877a:	f242 020b 	movw	r2, #8203	@ 0x200b
 801877e:	4291      	cmp	r1, r2
 8018780:	d0f2      	beq.n	8018768 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018782:	f7ff ffaf 	bl	80186e4 <_ZNK8touchgfx9ConstFont4findEt>
 8018786:	4605      	mov	r5, r0
 8018788:	b950      	cbnz	r0, 80187a0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801878a:	6823      	ldr	r3, [r4, #0]
 801878c:	4620      	mov	r0, r4
 801878e:	691b      	ldr	r3, [r3, #16]
 8018790:	4798      	blx	r3
 8018792:	4601      	mov	r1, r0
 8018794:	4620      	mov	r0, r4
 8018796:	f7ff ffa5 	bl	80186e4 <_ZNK8touchgfx9ConstFont4findEt>
 801879a:	4605      	mov	r5, r0
 801879c:	2800      	cmp	r0, #0
 801879e:	d0e3      	beq.n	8018768 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80187a0:	6823      	ldr	r3, [r4, #0]
 80187a2:	4629      	mov	r1, r5
 80187a4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80187a6:	4620      	mov	r0, r4
 80187a8:	4798      	blx	r3
 80187aa:	6038      	str	r0, [r7, #0]
 80187ac:	6823      	ldr	r3, [r4, #0]
 80187ae:	4620      	mov	r0, r4
 80187b0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80187b2:	4798      	blx	r3
 80187b4:	7030      	strb	r0, [r6, #0]
 80187b6:	e7d8      	b.n	801876a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080187b8 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80187b8:	2000      	movs	r0, #0
 80187ba:	4770      	bx	lr

080187bc <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80187bc:	2001      	movs	r0, #1
 80187be:	4770      	bx	lr

080187c0 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80187c0:	2002      	movs	r0, #2
 80187c2:	4770      	bx	lr

080187c4 <_ZN8touchgfx6ScreenD1Ev>:
 80187c4:	4770      	bx	lr

080187c6 <_ZN8touchgfx12GestureEventD1Ev>:
 80187c6:	4770      	bx	lr

080187c8 <_ZN8touchgfx9DragEventD1Ev>:
 80187c8:	4770      	bx	lr

080187ca <_ZN8touchgfx10ClickEventD1Ev>:
 80187ca:	4770      	bx	lr

080187cc <_ZN8touchgfx10ClickEventD0Ev>:
 80187cc:	b510      	push	{r4, lr}
 80187ce:	210c      	movs	r1, #12
 80187d0:	4604      	mov	r4, r0
 80187d2:	f010 ff9f 	bl	8029714 <_ZdlPvj>
 80187d6:	4620      	mov	r0, r4
 80187d8:	bd10      	pop	{r4, pc}

080187da <_ZN8touchgfx9DragEventD0Ev>:
 80187da:	b510      	push	{r4, lr}
 80187dc:	2110      	movs	r1, #16
 80187de:	4604      	mov	r4, r0
 80187e0:	f010 ff98 	bl	8029714 <_ZdlPvj>
 80187e4:	4620      	mov	r0, r4
 80187e6:	bd10      	pop	{r4, pc}

080187e8 <_ZN8touchgfx12GestureEventD0Ev>:
 80187e8:	b510      	push	{r4, lr}
 80187ea:	210c      	movs	r1, #12
 80187ec:	4604      	mov	r4, r0
 80187ee:	f010 ff91 	bl	8029714 <_ZdlPvj>
 80187f2:	4620      	mov	r0, r4
 80187f4:	bd10      	pop	{r4, pc}

080187f6 <_ZN8touchgfx6ScreenD0Ev>:
 80187f6:	b510      	push	{r4, lr}
 80187f8:	213c      	movs	r1, #60	@ 0x3c
 80187fa:	4604      	mov	r4, r0
 80187fc:	f010 ff8a 	bl	8029714 <_ZdlPvj>
 8018800:	4620      	mov	r0, r4
 8018802:	bd10      	pop	{r4, pc}

08018804 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8018804:	b530      	push	{r4, r5, lr}
 8018806:	460d      	mov	r5, r1
 8018808:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801880a:	b087      	sub	sp, #28
 801880c:	4604      	mov	r4, r0
 801880e:	b301      	cbz	r1, 8018852 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8018810:	a801      	add	r0, sp, #4
 8018812:	f7ff fb83 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018816:	892a      	ldrh	r2, [r5, #8]
 8018818:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801881c:	7928      	ldrb	r0, [r5, #4]
 801881e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8018822:	f88d 0010 	strb.w	r0, [sp, #16]
 8018826:	1ad2      	subs	r2, r2, r3
 8018828:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 801882a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 801882c:	f8ad 1012 	strh.w	r1, [sp, #18]
 8018830:	441a      	add	r2, r3
 8018832:	896b      	ldrh	r3, [r5, #10]
 8018834:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8018838:	f8ad 2014 	strh.w	r2, [sp, #20]
 801883c:	1b5b      	subs	r3, r3, r5
 801883e:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8018840:	442b      	add	r3, r5
 8018842:	4d05      	ldr	r5, [pc, #20]	@ (8018858 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8018844:	9503      	str	r5, [sp, #12]
 8018846:	f8ad 3016 	strh.w	r3, [sp, #22]
 801884a:	6803      	ldr	r3, [r0, #0]
 801884c:	a903      	add	r1, sp, #12
 801884e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8018850:	4798      	blx	r3
 8018852:	b007      	add	sp, #28
 8018854:	bd30      	pop	{r4, r5, pc}
 8018856:	bf00      	nop
 8018858:	0802e708 	.word	0x0802e708

0801885c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801885c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018860:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8018862:	b08a      	sub	sp, #40	@ 0x28
 8018864:	4604      	mov	r4, r0
 8018866:	460d      	mov	r5, r1
 8018868:	b113      	cbz	r3, 8018870 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801886a:	790b      	ldrb	r3, [r1, #4]
 801886c:	2b00      	cmp	r3, #0
 801886e:	d044      	beq.n	80188fa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8018870:	f104 0804 	add.w	r8, r4, #4
 8018874:	4641      	mov	r1, r8
 8018876:	a803      	add	r0, sp, #12
 8018878:	f7ff fb50 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801887c:	792b      	ldrb	r3, [r5, #4]
 801887e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8018882:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8018886:	b983      	cbnz	r3, 80188aa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8018888:	892a      	ldrh	r2, [r5, #8]
 801888a:	88e9      	ldrh	r1, [r5, #6]
 801888c:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8018890:	1b92      	subs	r2, r2, r6
 8018892:	1bc9      	subs	r1, r1, r7
 8018894:	9301      	str	r3, [sp, #4]
 8018896:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801889a:	9300      	str	r3, [sp, #0]
 801889c:	b212      	sxth	r2, r2
 801889e:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 80188a2:	b209      	sxth	r1, r1
 80188a4:	4640      	mov	r0, r8
 80188a6:	f7f7 ffd3 	bl	8010850 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80188aa:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80188ac:	b329      	cbz	r1, 80188fa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80188ae:	a805      	add	r0, sp, #20
 80188b0:	f7ff fb34 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80188b4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80188b8:	792b      	ldrb	r3, [r5, #4]
 80188ba:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80188bc:	f88d 3020 	strb.w	r3, [sp, #32]
 80188c0:	1abf      	subs	r7, r7, r2
 80188c2:	88ea      	ldrh	r2, [r5, #6]
 80188c4:	4417      	add	r7, r2
 80188c6:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 80188c8:	4417      	add	r7, r2
 80188ca:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80188ce:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 80188d2:	1ab6      	subs	r6, r6, r2
 80188d4:	892a      	ldrh	r2, [r5, #8]
 80188d6:	4416      	add	r6, r2
 80188d8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80188da:	4416      	add	r6, r2
 80188dc:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80188e0:	4a07      	ldr	r2, [pc, #28]	@ (8018900 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80188e2:	9207      	str	r2, [sp, #28]
 80188e4:	2600      	movs	r6, #0
 80188e6:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 80188ea:	6803      	ldr	r3, [r0, #0]
 80188ec:	a907      	add	r1, sp, #28
 80188ee:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80188f0:	4798      	blx	r3
 80188f2:	792b      	ldrb	r3, [r5, #4]
 80188f4:	b10b      	cbz	r3, 80188fa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80188f6:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 80188fa:	b00a      	add	sp, #40	@ 0x28
 80188fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018900:	0802e6e0 	.word	0x0802e6e0

08018904 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8018904:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018908:	460c      	mov	r4, r1
 801890a:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801890c:	b088      	sub	sp, #32
 801890e:	4605      	mov	r5, r0
 8018910:	2900      	cmp	r1, #0
 8018912:	d06d      	beq.n	80189f0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8018914:	4668      	mov	r0, sp
 8018916:	f7ff fb01 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801891a:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 801891c:	88e3      	ldrh	r3, [r4, #6]
 801891e:	f9bd 8000 	ldrsh.w	r8, [sp]
 8018922:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8018926:	440b      	add	r3, r1
 8018928:	b21b      	sxth	r3, r3
 801892a:	4543      	cmp	r3, r8
 801892c:	db31      	blt.n	8018992 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801892e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8018932:	44c4      	add	ip, r8
 8018934:	fa0f fc8c 	sxth.w	ip, ip
 8018938:	4563      	cmp	r3, ip
 801893a:	da2a      	bge.n	8018992 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801893c:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 801893e:	8926      	ldrh	r6, [r4, #8]
 8018940:	4416      	add	r6, r2
 8018942:	b236      	sxth	r6, r6
 8018944:	42be      	cmp	r6, r7
 8018946:	db24      	blt.n	8018992 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018948:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801894c:	4438      	add	r0, r7
 801894e:	b200      	sxth	r0, r0
 8018950:	4286      	cmp	r6, r0
 8018952:	da1e      	bge.n	8018992 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018954:	8963      	ldrh	r3, [r4, #10]
 8018956:	4419      	add	r1, r3
 8018958:	b209      	sxth	r1, r1
 801895a:	4541      	cmp	r1, r8
 801895c:	db08      	blt.n	8018970 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801895e:	4561      	cmp	r1, ip
 8018960:	da06      	bge.n	8018970 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018962:	89a3      	ldrh	r3, [r4, #12]
 8018964:	441a      	add	r2, r3
 8018966:	b212      	sxth	r2, r2
 8018968:	42ba      	cmp	r2, r7
 801896a:	db01      	blt.n	8018970 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801896c:	4282      	cmp	r2, r0
 801896e:	db10      	blt.n	8018992 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018970:	4b21      	ldr	r3, [pc, #132]	@ (80189f8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8018972:	9304      	str	r3, [sp, #16]
 8018974:	2302      	movs	r3, #2
 8018976:	f88d 3014 	strb.w	r3, [sp, #20]
 801897a:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801897c:	2300      	movs	r3, #0
 801897e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018982:	f8ad 3018 	strh.w	r3, [sp, #24]
 8018986:	f8ad 301a 	strh.w	r3, [sp, #26]
 801898a:	6803      	ldr	r3, [r0, #0]
 801898c:	a904      	add	r1, sp, #16
 801898e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8018990:	4798      	blx	r3
 8018992:	1d29      	adds	r1, r5, #4
 8018994:	a802      	add	r0, sp, #8
 8018996:	f7ff fac1 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801899a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801899e:	88e0      	ldrh	r0, [r4, #6]
 80189a0:	7921      	ldrb	r1, [r4, #4]
 80189a2:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 80189a6:	8922      	ldrh	r2, [r4, #8]
 80189a8:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 80189aa:	f88d 1014 	strb.w	r1, [sp, #20]
 80189ae:	eba3 0808 	sub.w	r8, r3, r8
 80189b2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80189b6:	1bdf      	subs	r7, r3, r7
 80189b8:	b2bb      	uxth	r3, r7
 80189ba:	fa1f f888 	uxth.w	r8, r8
 80189be:	8967      	ldrh	r7, [r4, #10]
 80189c0:	89a4      	ldrh	r4, [r4, #12]
 80189c2:	4440      	add	r0, r8
 80189c4:	4460      	add	r0, ip
 80189c6:	441a      	add	r2, r3
 80189c8:	44b8      	add	r8, r7
 80189ca:	4423      	add	r3, r4
 80189cc:	f8ad 0016 	strh.w	r0, [sp, #22]
 80189d0:	4433      	add	r3, r6
 80189d2:	4432      	add	r2, r6
 80189d4:	44e0      	add	r8, ip
 80189d6:	4c09      	ldr	r4, [pc, #36]	@ (80189fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80189d8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80189da:	9404      	str	r4, [sp, #16]
 80189dc:	f8ad 2018 	strh.w	r2, [sp, #24]
 80189e0:	f8ad 801a 	strh.w	r8, [sp, #26]
 80189e4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80189e8:	6803      	ldr	r3, [r0, #0]
 80189ea:	a904      	add	r1, sp, #16
 80189ec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80189ee:	4798      	blx	r3
 80189f0:	b008      	add	sp, #32
 80189f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80189f6:	bf00      	nop
 80189f8:	0802e6e0 	.word	0x0802e6e0
 80189fc:	0802e6f4 	.word	0x0802e6f4

08018a00 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8018a00:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8018a02:	4604      	mov	r4, r0
 8018a04:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8018a08:	3201      	adds	r2, #1
 8018a0a:	d112      	bne.n	8018a32 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8018a0c:	6803      	ldr	r3, [r0, #0]
 8018a0e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8018a12:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8018a16:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018a1a:	2500      	movs	r5, #0
 8018a1c:	9500      	str	r5, [sp, #0]
 8018a1e:	466d      	mov	r5, sp
 8018a20:	4629      	mov	r1, r5
 8018a22:	f8ad 2006 	strh.w	r2, [sp, #6]
 8018a26:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018a28:	4798      	blx	r3
 8018a2a:	e895 0003 	ldmia.w	r5, {r0, r1}
 8018a2e:	e884 0003 	stmia.w	r4, {r0, r1}
 8018a32:	4620      	mov	r0, r4
 8018a34:	b003      	add	sp, #12
 8018a36:	bd30      	pop	{r4, r5, pc}

08018a38 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8018a38:	b513      	push	{r0, r1, r4, lr}
 8018a3a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8018a3e:	3301      	adds	r3, #1
 8018a40:	4604      	mov	r4, r0
 8018a42:	d109      	bne.n	8018a58 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8018a44:	4601      	mov	r1, r0
 8018a46:	4668      	mov	r0, sp
 8018a48:	f7ff fa68 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018a4c:	f8bd 3000 	ldrh.w	r3, [sp]
 8018a50:	8423      	strh	r3, [r4, #32]
 8018a52:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018a56:	8463      	strh	r3, [r4, #34]	@ 0x22
 8018a58:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8018a5c:	b002      	add	sp, #8
 8018a5e:	bd10      	pop	{r4, pc}

08018a60 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8018a60:	b513      	push	{r0, r1, r4, lr}
 8018a62:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8018a66:	3301      	adds	r3, #1
 8018a68:	4604      	mov	r4, r0
 8018a6a:	d109      	bne.n	8018a80 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8018a6c:	4601      	mov	r1, r0
 8018a6e:	4668      	mov	r0, sp
 8018a70:	f7ff fa54 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018a74:	f8bd 3000 	ldrh.w	r3, [sp]
 8018a78:	8423      	strh	r3, [r4, #32]
 8018a7a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018a7e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8018a80:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8018a84:	b002      	add	sp, #8
 8018a86:	bd10      	pop	{r4, pc}

08018a88 <_ZN8touchgfx6ScreenC1Ev>:
 8018a88:	b570      	push	{r4, r5, r6, lr}
 8018a8a:	4605      	mov	r5, r0
 8018a8c:	4b16      	ldr	r3, [pc, #88]	@ (8018ae8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8018a8e:	f845 3b04 	str.w	r3, [r5], #4
 8018a92:	2300      	movs	r3, #0
 8018a94:	8103      	strh	r3, [r0, #8]
 8018a96:	8143      	strh	r3, [r0, #10]
 8018a98:	8183      	strh	r3, [r0, #12]
 8018a9a:	81c3      	strh	r3, [r0, #14]
 8018a9c:	8203      	strh	r3, [r0, #16]
 8018a9e:	8243      	strh	r3, [r0, #18]
 8018aa0:	8283      	strh	r3, [r0, #20]
 8018aa2:	82c3      	strh	r3, [r0, #22]
 8018aa4:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8018aa8:	6203      	str	r3, [r0, #32]
 8018aaa:	8483      	strh	r3, [r0, #36]	@ 0x24
 8018aac:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8018aae:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8018ab2:	4a0e      	ldr	r2, [pc, #56]	@ (8018aec <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8018ab4:	6343      	str	r3, [r0, #52]	@ 0x34
 8018ab6:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8018aba:	4b0d      	ldr	r3, [pc, #52]	@ (8018af0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8018abc:	6042      	str	r2, [r0, #4]
 8018abe:	f9b3 6000 	ldrsh.w	r6, [r3]
 8018ac2:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8018ac4:	4a0b      	ldr	r2, [pc, #44]	@ (8018af4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8018ac6:	4604      	mov	r4, r0
 8018ac8:	2101      	movs	r1, #1
 8018aca:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8018ace:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8018ad2:	f9b2 1000 	ldrsh.w	r1, [r2]
 8018ad6:	4628      	mov	r0, r5
 8018ad8:	4798      	blx	r3
 8018ada:	6863      	ldr	r3, [r4, #4]
 8018adc:	4628      	mov	r0, r5
 8018ade:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018ae0:	4631      	mov	r1, r6
 8018ae2:	4798      	blx	r3
 8018ae4:	4620      	mov	r0, r4
 8018ae6:	bd70      	pop	{r4, r5, r6, pc}
 8018ae8:	0802e71c 	.word	0x0802e71c
 8018aec:	0802e164 	.word	0x0802e164
 8018af0:	20013f42 	.word	0x20013f42
 8018af4:	20013f40 	.word	0x20013f40

08018af8 <_ZN8touchgfx6Screen4drawEv>:
 8018af8:	b507      	push	{r0, r1, r2, lr}
 8018afa:	4b09      	ldr	r3, [pc, #36]	@ (8018b20 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8018afc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018b00:	4b08      	ldr	r3, [pc, #32]	@ (8018b24 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8018b02:	f8ad 2004 	strh.w	r2, [sp, #4]
 8018b06:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018b0a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018b0e:	6803      	ldr	r3, [r0, #0]
 8018b10:	2100      	movs	r1, #0
 8018b12:	9100      	str	r1, [sp, #0]
 8018b14:	689b      	ldr	r3, [r3, #8]
 8018b16:	4669      	mov	r1, sp
 8018b18:	4798      	blx	r3
 8018b1a:	b003      	add	sp, #12
 8018b1c:	f85d fb04 	ldr.w	pc, [sp], #4
 8018b20:	20013f40 	.word	0x20013f40
 8018b24:	20013f42 	.word	0x20013f42

08018b28 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8018b28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b2c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8018b30:	2b00      	cmp	r3, #0
 8018b32:	b089      	sub	sp, #36	@ 0x24
 8018b34:	4680      	mov	r8, r0
 8018b36:	460c      	mov	r4, r1
 8018b38:	4615      	mov	r5, r2
 8018b3a:	dd0e      	ble.n	8018b5a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018b3c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8018b40:	2b00      	cmp	r3, #0
 8018b42:	dd0a      	ble.n	8018b5a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018b44:	4628      	mov	r0, r5
 8018b46:	f7ff ff5b 	bl	8018a00 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018b4a:	4621      	mov	r1, r4
 8018b4c:	f7fd fe47 	bl	80167de <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018b50:	69eb      	ldr	r3, [r5, #28]
 8018b52:	b928      	cbnz	r0, 8018b60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8018b54:	461d      	mov	r5, r3
 8018b56:	2b00      	cmp	r3, #0
 8018b58:	d1f4      	bne.n	8018b44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8018b5a:	b009      	add	sp, #36	@ 0x24
 8018b5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b60:	ae04      	add	r6, sp, #16
 8018b62:	2b00      	cmp	r3, #0
 8018b64:	f000 80b5 	beq.w	8018cd2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018b68:	682b      	ldr	r3, [r5, #0]
 8018b6a:	4629      	mov	r1, r5
 8018b6c:	68db      	ldr	r3, [r3, #12]
 8018b6e:	a802      	add	r0, sp, #8
 8018b70:	4798      	blx	r3
 8018b72:	4628      	mov	r0, r5
 8018b74:	f7ff ff60 	bl	8018a38 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8018b78:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8018b7c:	4407      	add	r7, r0
 8018b7e:	4628      	mov	r0, r5
 8018b80:	f7ff ff6e 	bl	8018a60 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8018b84:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8018b88:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8018b8c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018b90:	4418      	add	r0, r3
 8018b92:	4621      	mov	r1, r4
 8018b94:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8018b98:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018b9c:	b23f      	sxth	r7, r7
 8018b9e:	4630      	mov	r0, r6
 8018ba0:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018ba4:	f8ad 7010 	strh.w	r7, [sp, #16]
 8018ba8:	f7f7 ff36 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8018bac:	4628      	mov	r0, r5
 8018bae:	f7ff ff27 	bl	8018a00 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018bb2:	4602      	mov	r2, r0
 8018bb4:	e896 0003 	ldmia.w	r6, {r0, r1}
 8018bb8:	ab06      	add	r3, sp, #24
 8018bba:	e883 0003 	stmia.w	r3, {r0, r1}
 8018bbe:	4611      	mov	r1, r2
 8018bc0:	4618      	mov	r0, r3
 8018bc2:	f7f7 ff29 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8018bc6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8018bca:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018bce:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8018bd2:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8018bd6:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8018bda:	4299      	cmp	r1, r3
 8018bdc:	d10b      	bne.n	8018bf6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018bde:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018be2:	4552      	cmp	r2, sl
 8018be4:	d107      	bne.n	8018bf6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018be6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8018bea:	455a      	cmp	r2, fp
 8018bec:	d103      	bne.n	8018bf6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018bee:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8018bf2:	454a      	cmp	r2, r9
 8018bf4:	d06d      	beq.n	8018cd2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018bf6:	f1bb 0f00 	cmp.w	fp, #0
 8018bfa:	dd65      	ble.n	8018cc8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8018bfc:	f1b9 0f00 	cmp.w	r9, #0
 8018c00:	dd62      	ble.n	8018cc8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8018c02:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018c06:	fa1f f08a 	uxth.w	r0, sl
 8018c0a:	4552      	cmp	r2, sl
 8018c0c:	9000      	str	r0, [sp, #0]
 8018c0e:	da12      	bge.n	8018c36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8018c10:	9301      	str	r3, [sp, #4]
 8018c12:	9b00      	ldr	r3, [sp, #0]
 8018c14:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018c18:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018c1c:	1a9a      	subs	r2, r3, r2
 8018c1e:	f8ad 1010 	strh.w	r1, [sp, #16]
 8018c22:	f8ad 0014 	strh.w	r0, [sp, #20]
 8018c26:	f8ad 2016 	strh.w	r2, [sp, #22]
 8018c2a:	69ea      	ldr	r2, [r5, #28]
 8018c2c:	4631      	mov	r1, r6
 8018c2e:	4640      	mov	r0, r8
 8018c30:	f7ff ff7a 	bl	8018b28 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018c34:	9b01      	ldr	r3, [sp, #4]
 8018c36:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018c3a:	429a      	cmp	r2, r3
 8018c3c:	b29f      	uxth	r7, r3
 8018c3e:	da0d      	bge.n	8018c5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8018c40:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018c44:	1aba      	subs	r2, r7, r2
 8018c46:	f8ad a012 	strh.w	sl, [sp, #18]
 8018c4a:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018c4e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8018c52:	69ea      	ldr	r2, [r5, #28]
 8018c54:	4631      	mov	r1, r6
 8018c56:	4640      	mov	r0, r8
 8018c58:	f7ff ff66 	bl	8018b28 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018c5c:	8822      	ldrh	r2, [r4, #0]
 8018c5e:	88a3      	ldrh	r3, [r4, #4]
 8018c60:	445f      	add	r7, fp
 8018c62:	4413      	add	r3, r2
 8018c64:	b29b      	uxth	r3, r3
 8018c66:	b2bf      	uxth	r7, r7
 8018c68:	b23a      	sxth	r2, r7
 8018c6a:	b219      	sxth	r1, r3
 8018c6c:	4291      	cmp	r1, r2
 8018c6e:	dd0d      	ble.n	8018c8c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8018c70:	1bdb      	subs	r3, r3, r7
 8018c72:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018c76:	f8ad a012 	strh.w	sl, [sp, #18]
 8018c7a:	f8ad 3014 	strh.w	r3, [sp, #20]
 8018c7e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8018c82:	69ea      	ldr	r2, [r5, #28]
 8018c84:	4631      	mov	r1, r6
 8018c86:	4640      	mov	r0, r8
 8018c88:	f7ff ff4e 	bl	8018b28 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018c8c:	88e2      	ldrh	r2, [r4, #6]
 8018c8e:	8863      	ldrh	r3, [r4, #2]
 8018c90:	4413      	add	r3, r2
 8018c92:	9a00      	ldr	r2, [sp, #0]
 8018c94:	444a      	add	r2, r9
 8018c96:	b29b      	uxth	r3, r3
 8018c98:	fa1f f982 	uxth.w	r9, r2
 8018c9c:	fa0f f289 	sxth.w	r2, r9
 8018ca0:	b219      	sxth	r1, r3
 8018ca2:	428a      	cmp	r2, r1
 8018ca4:	da15      	bge.n	8018cd2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018ca6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018caa:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018cae:	f8ad 1014 	strh.w	r1, [sp, #20]
 8018cb2:	eba3 0309 	sub.w	r3, r3, r9
 8018cb6:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018cba:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018cbe:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018cc2:	69ea      	ldr	r2, [r5, #28]
 8018cc4:	4631      	mov	r1, r6
 8018cc6:	e001      	b.n	8018ccc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8018cc8:	69ea      	ldr	r2, [r5, #28]
 8018cca:	4621      	mov	r1, r4
 8018ccc:	4640      	mov	r0, r8
 8018cce:	f7ff ff2b 	bl	8018b28 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018cd2:	4628      	mov	r0, r5
 8018cd4:	f7ff fe94 	bl	8018a00 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018cd8:	6861      	ldr	r1, [r4, #4]
 8018cda:	4602      	mov	r2, r0
 8018cdc:	6820      	ldr	r0, [r4, #0]
 8018cde:	4633      	mov	r3, r6
 8018ce0:	c303      	stmia	r3!, {r0, r1}
 8018ce2:	4611      	mov	r1, r2
 8018ce4:	4630      	mov	r0, r6
 8018ce6:	f7f7 fe97 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8018cea:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8018cee:	2b00      	cmp	r3, #0
 8018cf0:	f77f af33 	ble.w	8018b5a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018cf4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018cf8:	2b00      	cmp	r3, #0
 8018cfa:	f77f af2e 	ble.w	8018b5a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018cfe:	4628      	mov	r0, r5
 8018d00:	f7ff fe9a 	bl	8018a38 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8018d04:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8018d08:	1a18      	subs	r0, r3, r0
 8018d0a:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018d0e:	4628      	mov	r0, r5
 8018d10:	f7ff fea6 	bl	8018a60 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8018d14:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018d18:	1a18      	subs	r0, r3, r0
 8018d1a:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018d1e:	682b      	ldr	r3, [r5, #0]
 8018d20:	4631      	mov	r1, r6
 8018d22:	689b      	ldr	r3, [r3, #8]
 8018d24:	4628      	mov	r0, r5
 8018d26:	4798      	blx	r3
 8018d28:	e717      	b.n	8018b5a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08018d2a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8018d2a:	b570      	push	{r4, r5, r6, lr}
 8018d2c:	460c      	mov	r4, r1
 8018d2e:	b086      	sub	sp, #24
 8018d30:	1d06      	adds	r6, r0, #4
 8018d32:	2300      	movs	r3, #0
 8018d34:	4631      	mov	r1, r6
 8018d36:	4605      	mov	r5, r0
 8018d38:	a802      	add	r0, sp, #8
 8018d3a:	9301      	str	r3, [sp, #4]
 8018d3c:	f7ff f8ee 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018d40:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8018d44:	8822      	ldrh	r2, [r4, #0]
 8018d46:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8018d4a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018d4e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8018d52:	1ad2      	subs	r2, r2, r3
 8018d54:	8863      	ldrh	r3, [r4, #2]
 8018d56:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018d5a:	1a5b      	subs	r3, r3, r1
 8018d5c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8018d60:	f8ad 1016 	strh.w	r1, [sp, #22]
 8018d64:	aa01      	add	r2, sp, #4
 8018d66:	a904      	add	r1, sp, #16
 8018d68:	4630      	mov	r0, r6
 8018d6a:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018d6e:	f7f7 ff2b 	bl	8010bc8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8018d72:	9a01      	ldr	r2, [sp, #4]
 8018d74:	b11a      	cbz	r2, 8018d7e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8018d76:	4621      	mov	r1, r4
 8018d78:	4628      	mov	r0, r5
 8018d7a:	f7ff fed5 	bl	8018b28 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018d7e:	b006      	add	sp, #24
 8018d80:	bd70      	pop	{r4, r5, r6, pc}

08018d82 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8018d82:	b530      	push	{r4, r5, lr}
 8018d84:	4602      	mov	r2, r0
 8018d86:	4604      	mov	r4, r0
 8018d88:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8018d8c:	b085      	sub	sp, #20
 8018d8e:	460d      	mov	r5, r1
 8018d90:	6851      	ldr	r1, [r2, #4]
 8018d92:	466b      	mov	r3, sp
 8018d94:	c303      	stmia	r3!, {r0, r1}
 8018d96:	4629      	mov	r1, r5
 8018d98:	4668      	mov	r0, sp
 8018d9a:	f7f7 fe3d 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8018d9e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8018da2:	b12b      	cbz	r3, 8018db0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8018da4:	4669      	mov	r1, sp
 8018da6:	4620      	mov	r0, r4
 8018da8:	f7ff ffbf 	bl	8018d2a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8018dac:	b005      	add	sp, #20
 8018dae:	bd30      	pop	{r4, r5, pc}
 8018db0:	3404      	adds	r4, #4
 8018db2:	4621      	mov	r1, r4
 8018db4:	a802      	add	r0, sp, #8
 8018db6:	f7ff f8b1 	bl	8017f1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018dba:	f8bd 3000 	ldrh.w	r3, [sp]
 8018dbe:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8018dc2:	1a9b      	subs	r3, r3, r2
 8018dc4:	f8ad 3000 	strh.w	r3, [sp]
 8018dc8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018dcc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018dd0:	4669      	mov	r1, sp
 8018dd2:	1a9b      	subs	r3, r3, r2
 8018dd4:	4620      	mov	r0, r4
 8018dd6:	f8ad 3002 	strh.w	r3, [sp, #2]
 8018dda:	f7f7 febc 	bl	8010b56 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8018dde:	e7e5      	b.n	8018dac <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08018de0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8018de0:	680a      	ldr	r2, [r1, #0]
 8018de2:	460b      	mov	r3, r1
 8018de4:	6992      	ldr	r2, [r2, #24]
 8018de6:	1d01      	adds	r1, r0, #4
 8018de8:	4618      	mov	r0, r3
 8018dea:	4710      	bx	r2

08018dec <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8018dec:	4298      	cmp	r0, r3
 8018dee:	d200      	bcs.n	8018df2 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8018df0:	b913      	cbnz	r3, 8018df8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8018df2:	440a      	add	r2, r1
 8018df4:	b210      	sxth	r0, r2
 8018df6:	4770      	bx	lr
 8018df8:	ee07 0a90 	vmov	s15, r0
 8018dfc:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8018e00:	ee07 3a90 	vmov	s15, r3
 8018e04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018e08:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8018e0c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018e10:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018e14:	ee07 2a90 	vmov	s15, r2
 8018e18:	ee67 5a07 	vmul.f32	s11, s14, s14
 8018e1c:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8018e20:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018e24:	ee07 1a90 	vmov	s15, r1
 8018e28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018e2c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8018e30:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018e34:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018e38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018e3c:	bfcc      	ite	gt
 8018e3e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018e42:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018e46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018e4a:	ee17 3a90 	vmov	r3, s15
 8018e4e:	b218      	sxth	r0, r3
 8018e50:	4770      	bx	lr

08018e52 <_ZN8touchgfx12TextProviderC1Ev>:
 8018e52:	b538      	push	{r3, r4, r5, lr}
 8018e54:	2500      	movs	r5, #0
 8018e56:	2302      	movs	r3, #2
 8018e58:	4604      	mov	r4, r0
 8018e5a:	e9c0 5500 	strd	r5, r5, [r0]
 8018e5e:	7403      	strb	r3, [r0, #16]
 8018e60:	6145      	str	r5, [r0, #20]
 8018e62:	7605      	strb	r5, [r0, #24]
 8018e64:	83c5      	strh	r5, [r0, #30]
 8018e66:	8405      	strh	r5, [r0, #32]
 8018e68:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8018e6a:	8705      	strh	r5, [r0, #56]	@ 0x38
 8018e6c:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8018e6e:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8018e72:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8018e76:	220e      	movs	r2, #14
 8018e78:	4629      	mov	r1, r5
 8018e7a:	304c      	adds	r0, #76	@ 0x4c
 8018e7c:	f011 fd8d 	bl	802a99a <memset>
 8018e80:	2301      	movs	r3, #1
 8018e82:	4620      	mov	r0, r4
 8018e84:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8018e88:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8018e8c:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8018e90:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8018e94:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8018e98:	f7ee f9b0 	bl	80071fc <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8018e9c:	4620      	mov	r0, r4
 8018e9e:	bd38      	pop	{r3, r4, r5, pc}

08018ea0 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8018ea0:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8018ea2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018ea6:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 8018ea8:	fab0 f080 	clz	r0, r0
 8018eac:	0940      	lsrs	r0, r0, #5
 8018eae:	4770      	bx	lr

08018eb0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8018eb0:	b530      	push	{r4, r5, lr}
 8018eb2:	2500      	movs	r5, #0
 8018eb4:	2401      	movs	r4, #1
 8018eb6:	6843      	ldr	r3, [r0, #4]
 8018eb8:	b913      	cbnz	r3, 8018ec0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8018eba:	6803      	ldr	r3, [r0, #0]
 8018ebc:	b313      	cbz	r3, 8018f04 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018ebe:	6043      	str	r3, [r0, #4]
 8018ec0:	7e03      	ldrb	r3, [r0, #24]
 8018ec2:	b143      	cbz	r3, 8018ed6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8018ec4:	6943      	ldr	r3, [r0, #20]
 8018ec6:	b12b      	cbz	r3, 8018ed4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018ec8:	881a      	ldrh	r2, [r3, #0]
 8018eca:	b11a      	cbz	r2, 8018ed4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018ecc:	1c9a      	adds	r2, r3, #2
 8018ece:	6142      	str	r2, [r0, #20]
 8018ed0:	8818      	ldrh	r0, [r3, #0]
 8018ed2:	bd30      	pop	{r4, r5, pc}
 8018ed4:	7605      	strb	r5, [r0, #24]
 8018ed6:	6843      	ldr	r3, [r0, #4]
 8018ed8:	8819      	ldrh	r1, [r3, #0]
 8018eda:	b199      	cbz	r1, 8018f04 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018edc:	1c9a      	adds	r2, r3, #2
 8018ede:	2902      	cmp	r1, #2
 8018ee0:	6042      	str	r2, [r0, #4]
 8018ee2:	d1f5      	bne.n	8018ed0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8018ee4:	7c03      	ldrb	r3, [r0, #16]
 8018ee6:	2b01      	cmp	r3, #1
 8018ee8:	d8e5      	bhi.n	8018eb6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018eea:	1c5a      	adds	r2, r3, #1
 8018eec:	3302      	adds	r3, #2
 8018eee:	7402      	strb	r2, [r0, #16]
 8018ef0:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8018ef4:	6143      	str	r3, [r0, #20]
 8018ef6:	2b00      	cmp	r3, #0
 8018ef8:	d0dd      	beq.n	8018eb6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018efa:	881b      	ldrh	r3, [r3, #0]
 8018efc:	2b00      	cmp	r3, #0
 8018efe:	d0da      	beq.n	8018eb6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018f00:	7604      	strb	r4, [r0, #24]
 8018f02:	e7d8      	b.n	8018eb6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018f04:	2000      	movs	r0, #0
 8018f06:	e7e4      	b.n	8018ed2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08018f08 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8018f08:	b430      	push	{r4, r5}
 8018f0a:	6001      	str	r1, [r0, #0]
 8018f0c:	2100      	movs	r1, #0
 8018f0e:	6041      	str	r1, [r0, #4]
 8018f10:	6815      	ldr	r5, [r2, #0]
 8018f12:	6085      	str	r5, [r0, #8]
 8018f14:	6852      	ldr	r2, [r2, #4]
 8018f16:	6443      	str	r3, [r0, #68]	@ 0x44
 8018f18:	9b02      	ldr	r3, [sp, #8]
 8018f1a:	60c2      	str	r2, [r0, #12]
 8018f1c:	7401      	strb	r1, [r0, #16]
 8018f1e:	6141      	str	r1, [r0, #20]
 8018f20:	7601      	strb	r1, [r0, #24]
 8018f22:	8701      	strh	r1, [r0, #56]	@ 0x38
 8018f24:	8401      	strh	r1, [r0, #32]
 8018f26:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8018f2a:	6483      	str	r3, [r0, #72]	@ 0x48
 8018f2c:	bc30      	pop	{r4, r5}
 8018f2e:	f7ee b965 	b.w	80071fc <_ZN8touchgfx12TextProvider18initializeInternalEv>

08018f32 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8018f32:	b408      	push	{r3}
 8018f34:	b510      	push	{r4, lr}
 8018f36:	b085      	sub	sp, #20
 8018f38:	ac07      	add	r4, sp, #28
 8018f3a:	f854 3b04 	ldr.w	r3, [r4], #4
 8018f3e:	9300      	str	r3, [sp, #0]
 8018f40:	4613      	mov	r3, r2
 8018f42:	4622      	mov	r2, r4
 8018f44:	9403      	str	r4, [sp, #12]
 8018f46:	f7ff ffdf 	bl	8018f08 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018f4a:	b005      	add	sp, #20
 8018f4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018f50:	b001      	add	sp, #4
 8018f52:	4770      	bx	lr

08018f54 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8018f54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018f56:	4605      	mov	r5, r0
 8018f58:	4608      	mov	r0, r1
 8018f5a:	b1e9      	cbz	r1, 8018f98 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8018f5c:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8018f60:	460b      	mov	r3, r1
 8018f62:	f101 0708 	add.w	r7, r1, #8
 8018f66:	4622      	mov	r2, r4
 8018f68:	6818      	ldr	r0, [r3, #0]
 8018f6a:	6859      	ldr	r1, [r3, #4]
 8018f6c:	4626      	mov	r6, r4
 8018f6e:	c603      	stmia	r6!, {r0, r1}
 8018f70:	3308      	adds	r3, #8
 8018f72:	42bb      	cmp	r3, r7
 8018f74:	4634      	mov	r4, r6
 8018f76:	d1f7      	bne.n	8018f68 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8018f78:	6818      	ldr	r0, [r3, #0]
 8018f7a:	6030      	str	r0, [r6, #0]
 8018f7c:	889b      	ldrh	r3, [r3, #4]
 8018f7e:	80b3      	strh	r3, [r6, #4]
 8018f80:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8018f84:	015b      	lsls	r3, r3, #5
 8018f86:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8018f8a:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8018f8e:	430b      	orrs	r3, r1
 8018f90:	425b      	negs	r3, r3
 8018f92:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8018f96:	4610      	mov	r0, r2
 8018f98:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018f9a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8018f9a:	b538      	push	{r3, r4, r5, lr}
 8018f9c:	460c      	mov	r4, r1
 8018f9e:	6811      	ldr	r1, [r2, #0]
 8018fa0:	4610      	mov	r0, r2
 8018fa2:	68cd      	ldr	r5, [r1, #12]
 8018fa4:	4619      	mov	r1, r3
 8018fa6:	47a8      	blx	r5
 8018fa8:	2800      	cmp	r0, #0
 8018faa:	bf08      	it	eq
 8018fac:	4620      	moveq	r0, r4
 8018fae:	bd38      	pop	{r3, r4, r5, pc}

08018fb0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8018fb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018fb4:	468c      	mov	ip, r1
 8018fb6:	4605      	mov	r5, r0
 8018fb8:	4614      	mov	r4, r2
 8018fba:	b942      	cbnz	r2, 8018fce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8018fbc:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8018fc0:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8018fc4:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8018fc8:	4620      	mov	r0, r4
 8018fca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018fce:	7b50      	ldrb	r0, [r2, #13]
 8018fd0:	8893      	ldrh	r3, [r2, #4]
 8018fd2:	0106      	lsls	r6, r0, #4
 8018fd4:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8018fd8:	79e6      	ldrb	r6, [r4, #7]
 8018fda:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8018fde:	4316      	orrs	r6, r2
 8018fe0:	185a      	adds	r2, r3, r1
 8018fe2:	b291      	uxth	r1, r2
 8018fe4:	291d      	cmp	r1, #29
 8018fe6:	b2b7      	uxth	r7, r6
 8018fe8:	d87e      	bhi.n	80190e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8018fea:	2201      	movs	r2, #1
 8018fec:	408a      	lsls	r2, r1
 8018fee:	498a      	ldr	r1, [pc, #552]	@ (8019218 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8018ff0:	420a      	tst	r2, r1
 8018ff2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8018ff6:	d12d      	bne.n	8019054 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8018ff8:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8018ffc:	d074      	beq.n	80190e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8018ffe:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8019002:	4623      	mov	r3, r4
 8019004:	f104 0e08 	add.w	lr, r4, #8
 8019008:	4614      	mov	r4, r2
 801900a:	6818      	ldr	r0, [r3, #0]
 801900c:	6859      	ldr	r1, [r3, #4]
 801900e:	4694      	mov	ip, r2
 8019010:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8019014:	3308      	adds	r3, #8
 8019016:	4573      	cmp	r3, lr
 8019018:	4662      	mov	r2, ip
 801901a:	d1f6      	bne.n	801900a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801901c:	6818      	ldr	r0, [r3, #0]
 801901e:	f8cc 0000 	str.w	r0, [ip]
 8019022:	889b      	ldrh	r3, [r3, #4]
 8019024:	f8ac 3004 	strh.w	r3, [ip, #4]
 8019028:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 801902c:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8019030:	b2b3      	uxth	r3, r6
 8019032:	1aca      	subs	r2, r1, r3
 8019034:	b292      	uxth	r2, r2
 8019036:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 801903a:	10d2      	asrs	r2, r2, #3
 801903c:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8019040:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8019044:	4302      	orrs	r2, r0
 8019046:	1bcf      	subs	r7, r1, r7
 8019048:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 801904c:	1afb      	subs	r3, r7, r3
 801904e:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8019052:	e7b9      	b.n	8018fc8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8019054:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8019058:	4623      	mov	r3, r4
 801905a:	f104 0808 	add.w	r8, r4, #8
 801905e:	4614      	mov	r4, r2
 8019060:	6818      	ldr	r0, [r3, #0]
 8019062:	6859      	ldr	r1, [r3, #4]
 8019064:	4696      	mov	lr, r2
 8019066:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801906a:	3308      	adds	r3, #8
 801906c:	4543      	cmp	r3, r8
 801906e:	4672      	mov	r2, lr
 8019070:	d1f6      	bne.n	8019060 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8019072:	6818      	ldr	r0, [r3, #0]
 8019074:	f8ce 0000 	str.w	r0, [lr]
 8019078:	889b      	ldrh	r3, [r3, #4]
 801907a:	f8ae 3004 	strh.w	r3, [lr, #4]
 801907e:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8019080:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8019084:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8019086:	f640 6333 	movw	r3, #3635	@ 0xe33
 801908a:	4299      	cmp	r1, r3
 801908c:	d111      	bne.n	80190b2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 801908e:	f8dc 3000 	ldr.w	r3, [ip]
 8019092:	4660      	mov	r0, ip
 8019094:	68db      	ldr	r3, [r3, #12]
 8019096:	4798      	blx	r3
 8019098:	7b41      	ldrb	r1, [r0, #13]
 801909a:	00cb      	lsls	r3, r1, #3
 801909c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80190a0:	7a03      	ldrb	r3, [r0, #8]
 80190a2:	4313      	orrs	r3, r2
 80190a4:	064a      	lsls	r2, r1, #25
 80190a6:	bf44      	itt	mi
 80190a8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80190ac:	b21b      	sxthmi	r3, r3
 80190ae:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80190b2:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 80190b6:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 80190ba:	443b      	add	r3, r7
 80190bc:	4433      	add	r3, r6
 80190be:	b29b      	uxth	r3, r3
 80190c0:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80190c4:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 80190c8:	10db      	asrs	r3, r3, #3
 80190ca:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80190ce:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80190d2:	4313      	orrs	r3, r2
 80190d4:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 80190d8:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 80190dc:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 80190e0:	1a9b      	subs	r3, r3, r2
 80190e2:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 80190e6:	e76f      	b.n	8018fc8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80190e8:	f023 0204 	bic.w	r2, r3, #4
 80190ec:	f640 611b 	movw	r1, #3611	@ 0xe1b
 80190f0:	428a      	cmp	r2, r1
 80190f2:	d003      	beq.n	80190fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 80190f4:	f640 621d 	movw	r2, #3613	@ 0xe1d
 80190f8:	4293      	cmp	r3, r2
 80190fa:	d137      	bne.n	801916c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 80190fc:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8019100:	4622      	mov	r2, r4
 8019102:	f104 0808 	add.w	r8, r4, #8
 8019106:	4634      	mov	r4, r6
 8019108:	6810      	ldr	r0, [r2, #0]
 801910a:	6851      	ldr	r1, [r2, #4]
 801910c:	46b6      	mov	lr, r6
 801910e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8019112:	3208      	adds	r2, #8
 8019114:	4542      	cmp	r2, r8
 8019116:	4676      	mov	r6, lr
 8019118:	d1f6      	bne.n	8019108 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 801911a:	6810      	ldr	r0, [r2, #0]
 801911c:	f8ce 0000 	str.w	r0, [lr]
 8019120:	8892      	ldrh	r2, [r2, #4]
 8019122:	f8ae 2004 	strh.w	r2, [lr, #4]
 8019126:	3b01      	subs	r3, #1
 8019128:	b29b      	uxth	r3, r3
 801912a:	4662      	mov	r2, ip
 801912c:	4621      	mov	r1, r4
 801912e:	4628      	mov	r0, r5
 8019130:	f7ff ff33 	bl	8018f9a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8019134:	7b41      	ldrb	r1, [r0, #13]
 8019136:	00cb      	lsls	r3, r1, #3
 8019138:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801913c:	7a03      	ldrb	r3, [r0, #8]
 801913e:	0648      	lsls	r0, r1, #25
 8019140:	ea43 0302 	orr.w	r3, r3, r2
 8019144:	bf44      	itt	mi
 8019146:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801914a:	b21b      	sxthmi	r3, r3
 801914c:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8019150:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8019154:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8019158:	005b      	lsls	r3, r3, #1
 801915a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801915e:	4313      	orrs	r3, r2
 8019160:	115a      	asrs	r2, r3, #5
 8019162:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8019166:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 801916a:	e046      	b.n	80191fa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 801916c:	00c2      	lsls	r2, r0, #3
 801916e:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8019172:	7a22      	ldrb	r2, [r4, #8]
 8019174:	430a      	orrs	r2, r1
 8019176:	0641      	lsls	r1, r0, #25
 8019178:	bf44      	itt	mi
 801917a:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 801917e:	b212      	sxthmi	r2, r2
 8019180:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8019184:	f640 6109 	movw	r1, #3593	@ 0xe09
 8019188:	f023 0210 	bic.w	r2, r3, #16
 801918c:	428a      	cmp	r2, r1
 801918e:	d003      	beq.n	8019198 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8019190:	f640 6213 	movw	r2, #3603	@ 0xe13
 8019194:	4293      	cmp	r3, r2
 8019196:	d13d      	bne.n	8019214 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8019198:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801919c:	f104 0808 	add.w	r8, r4, #8
 80191a0:	4696      	mov	lr, r2
 80191a2:	6820      	ldr	r0, [r4, #0]
 80191a4:	6861      	ldr	r1, [r4, #4]
 80191a6:	4616      	mov	r6, r2
 80191a8:	c603      	stmia	r6!, {r0, r1}
 80191aa:	3408      	adds	r4, #8
 80191ac:	4544      	cmp	r4, r8
 80191ae:	4632      	mov	r2, r6
 80191b0:	d1f7      	bne.n	80191a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 80191b2:	6820      	ldr	r0, [r4, #0]
 80191b4:	6030      	str	r0, [r6, #0]
 80191b6:	88a1      	ldrh	r1, [r4, #4]
 80191b8:	80b1      	strh	r1, [r6, #4]
 80191ba:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 80191be:	0076      	lsls	r6, r6, #1
 80191c0:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 80191c4:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 80191c8:	4316      	orrs	r6, r2
 80191ca:	f640 6213 	movw	r2, #3603	@ 0xe13
 80191ce:	4293      	cmp	r3, r2
 80191d0:	bf1a      	itte	ne
 80191d2:	f103 33ff 	addne.w	r3, r3, #4294967295
 80191d6:	b29b      	uxthne	r3, r3
 80191d8:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 80191dc:	4662      	mov	r2, ip
 80191de:	4671      	mov	r1, lr
 80191e0:	4628      	mov	r0, r5
 80191e2:	4674      	mov	r4, lr
 80191e4:	f7ff fed9 	bl	8018f9a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80191e8:	7b43      	ldrb	r3, [r0, #13]
 80191ea:	7a82      	ldrb	r2, [r0, #10]
 80191ec:	005b      	lsls	r3, r3, #1
 80191ee:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80191f2:	4313      	orrs	r3, r2
 80191f4:	1af6      	subs	r6, r6, r3
 80191f6:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 80191fa:	7b61      	ldrb	r1, [r4, #13]
 80191fc:	00cb      	lsls	r3, r1, #3
 80191fe:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8019202:	7a23      	ldrb	r3, [r4, #8]
 8019204:	4313      	orrs	r3, r2
 8019206:	064a      	lsls	r2, r1, #25
 8019208:	bf44      	itt	mi
 801920a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801920e:	b21b      	sxthmi	r3, r3
 8019210:	1bdb      	subs	r3, r3, r7
 8019212:	e71c      	b.n	801904e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8019214:	2300      	movs	r3, #0
 8019216:	e7a6      	b.n	8019166 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8019218:	3fc00079 	.word	0x3fc00079

0801921c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801921c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019220:	4604      	mov	r4, r0
 8019222:	b942      	cbnz	r2, 8019236 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8019224:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8019228:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 801922c:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8019230:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8019234:	e047      	b.n	80192c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8019236:	7b51      	ldrb	r1, [r2, #13]
 8019238:	8893      	ldrh	r3, [r2, #4]
 801923a:	010d      	lsls	r5, r1, #4
 801923c:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8019240:	79d5      	ldrb	r5, [r2, #7]
 8019242:	4305      	orrs	r5, r0
 8019244:	2d04      	cmp	r5, #4
 8019246:	bfcc      	ite	gt
 8019248:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801924c:	f04f 0e01 	movle.w	lr, #1
 8019250:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8019254:	f200 80ab 	bhi.w	80193ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8019258:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 801925c:	4283      	cmp	r3, r0
 801925e:	d216      	bcs.n	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019260:	f240 605b 	movw	r0, #1627	@ 0x65b
 8019264:	4283      	cmp	r3, r0
 8019266:	d859      	bhi.n	801931c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8019268:	f240 6057 	movw	r0, #1623	@ 0x657
 801926c:	4283      	cmp	r3, r0
 801926e:	d20e      	bcs.n	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019270:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8019274:	d24a      	bcs.n	801930c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8019276:	f240 604e 	movw	r0, #1614	@ 0x64e
 801927a:	4283      	cmp	r3, r0
 801927c:	d207      	bcs.n	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801927e:	f240 601a 	movw	r0, #1562	@ 0x61a
 8019282:	4283      	cmp	r3, r0
 8019284:	d02a      	beq.n	80192dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019286:	d821      	bhi.n	80192cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8019288:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 801928c:	d35b      	bcc.n	8019346 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801928e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8019292:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8019296:	f040 80d0 	bne.w	801943a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801929a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 801929e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80192a2:	f040 80ca 	bne.w	801943a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80192a6:	00cb      	lsls	r3, r1, #3
 80192a8:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80192ac:	7a13      	ldrb	r3, [r2, #8]
 80192ae:	0649      	lsls	r1, r1, #25
 80192b0:	ea43 0300 	orr.w	r3, r3, r0
 80192b4:	bf44      	itt	mi
 80192b6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80192ba:	b21b      	sxthmi	r3, r3
 80192bc:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80192c0:	1b5d      	subs	r5, r3, r5
 80192c2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80192c6:	4610      	mov	r0, r2
 80192c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80192cc:	f240 604b 	movw	r0, #1611	@ 0x64b
 80192d0:	4283      	cmp	r3, r0
 80192d2:	d338      	bcc.n	8019346 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80192d4:	f240 604c 	movw	r0, #1612	@ 0x64c
 80192d8:	4283      	cmp	r3, r0
 80192da:	d9d8      	bls.n	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80192dc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 80192e0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 80192e4:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80192e8:	f040 80f2 	bne.w	80194d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80192ec:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80192f0:	f040 80ee 	bne.w	80194d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80192f4:	00cb      	lsls	r3, r1, #3
 80192f6:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80192fa:	7a13      	ldrb	r3, [r2, #8]
 80192fc:	064e      	lsls	r6, r1, #25
 80192fe:	ea43 0300 	orr.w	r3, r3, r0
 8019302:	bf44      	itt	mi
 8019304:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8019308:	b21b      	sxthmi	r3, r3
 801930a:	e7d9      	b.n	80192c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801930c:	f240 6054 	movw	r0, #1620	@ 0x654
 8019310:	4283      	cmp	r3, r0
 8019312:	d8e3      	bhi.n	80192dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019314:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8019318:	d9e0      	bls.n	80192dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801931a:	e7b8      	b.n	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801931c:	f240 6074 	movw	r0, #1652	@ 0x674
 8019320:	4283      	cmp	r3, r0
 8019322:	d0b4      	beq.n	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019324:	d82d      	bhi.n	8019382 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8019326:	f240 605e 	movw	r0, #1630	@ 0x65e
 801932a:	4283      	cmp	r3, r0
 801932c:	d804      	bhi.n	8019338 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801932e:	f240 605d 	movw	r0, #1629	@ 0x65d
 8019332:	4283      	cmp	r3, r0
 8019334:	d3d2      	bcc.n	80192dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019336:	e7aa      	b.n	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019338:	f240 605f 	movw	r0, #1631	@ 0x65f
 801933c:	4283      	cmp	r3, r0
 801933e:	d0cd      	beq.n	80192dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019340:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8019344:	d0a3      	beq.n	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019346:	00cb      	lsls	r3, r1, #3
 8019348:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801934c:	7a13      	ldrb	r3, [r2, #8]
 801934e:	0649      	lsls	r1, r1, #25
 8019350:	ea43 0300 	orr.w	r3, r3, r0
 8019354:	bf44      	itt	mi
 8019356:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801935a:	b21b      	sxthmi	r3, r3
 801935c:	1b5d      	subs	r5, r3, r5
 801935e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8019362:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8019366:	7b53      	ldrb	r3, [r2, #13]
 8019368:	015b      	lsls	r3, r3, #5
 801936a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801936e:	7993      	ldrb	r3, [r2, #6]
 8019370:	430b      	orrs	r3, r1
 8019372:	005b      	lsls	r3, r3, #1
 8019374:	2105      	movs	r1, #5
 8019376:	fb93 f3f1 	sdiv	r3, r3, r1
 801937a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801937e:	440b      	add	r3, r1
 8019380:	e756      	b.n	8019230 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8019382:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8019386:	4283      	cmp	r3, r0
 8019388:	d809      	bhi.n	801939e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801938a:	f240 60df 	movw	r0, #1759	@ 0x6df
 801938e:	4283      	cmp	r3, r0
 8019390:	f4bf af7d 	bcs.w	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019394:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8019398:	2b05      	cmp	r3, #5
 801939a:	d8d4      	bhi.n	8019346 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801939c:	e777      	b.n	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801939e:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 80193a2:	4283      	cmp	r3, r0
 80193a4:	d09a      	beq.n	80192dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80193a6:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 80193aa:	4283      	cmp	r3, r0
 80193ac:	e7ca      	b.n	8019344 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80193ae:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 80193b2:	d22b      	bcs.n	801940c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80193b4:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 80193b8:	4283      	cmp	r3, r0
 80193ba:	d28f      	bcs.n	80192dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80193bc:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 80193c0:	4283      	cmp	r3, r0
 80193c2:	d816      	bhi.n	80193f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80193c4:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 80193c8:	4283      	cmp	r3, r0
 80193ca:	f4bf af60 	bcs.w	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80193ce:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 80193d2:	4283      	cmp	r3, r0
 80193d4:	d80a      	bhi.n	80193ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80193d6:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 80193da:	4283      	cmp	r3, r0
 80193dc:	f4bf af57 	bcs.w	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80193e0:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 80193e4:	4283      	cmp	r3, r0
 80193e6:	f43f af79 	beq.w	80192dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80193ea:	e7ac      	b.n	8019346 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80193ec:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 80193f0:	e7f8      	b.n	80193e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80193f2:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 80193f6:	4283      	cmp	r3, r0
 80193f8:	d802      	bhi.n	8019400 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80193fa:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 80193fe:	e798      	b.n	8019332 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8019400:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8019404:	4283      	cmp	r3, r0
 8019406:	f47f af42 	bne.w	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801940a:	e767      	b.n	80192dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801940c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8019410:	4283      	cmp	r3, r0
 8019412:	f43f af63 	beq.w	80192dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019416:	d802      	bhi.n	801941e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8019418:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 801941c:	e7f2      	b.n	8019404 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801941e:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8019422:	4283      	cmp	r3, r0
 8019424:	d805      	bhi.n	8019432 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8019426:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 801942a:	4283      	cmp	r3, r0
 801942c:	f4ff af2f 	bcc.w	801928e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019430:	e754      	b.n	80192dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019432:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8019436:	4283      	cmp	r3, r0
 8019438:	e7af      	b.n	801939a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801943a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801943e:	4617      	mov	r7, r2
 8019440:	f102 0808 	add.w	r8, r2, #8
 8019444:	4666      	mov	r6, ip
 8019446:	6838      	ldr	r0, [r7, #0]
 8019448:	6879      	ldr	r1, [r7, #4]
 801944a:	46e6      	mov	lr, ip
 801944c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8019450:	3708      	adds	r7, #8
 8019452:	4547      	cmp	r7, r8
 8019454:	46f4      	mov	ip, lr
 8019456:	d1f6      	bne.n	8019446 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8019458:	6838      	ldr	r0, [r7, #0]
 801945a:	f8ce 0000 	str.w	r0, [lr]
 801945e:	88b9      	ldrh	r1, [r7, #4]
 8019460:	f8ae 1004 	strh.w	r1, [lr, #4]
 8019464:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8019468:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801946c:	d009      	beq.n	8019482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801946e:	7b51      	ldrb	r1, [r2, #13]
 8019470:	7992      	ldrb	r2, [r2, #6]
 8019472:	0149      	lsls	r1, r1, #5
 8019474:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8019478:	4311      	orrs	r1, r2
 801947a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801947e:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8019482:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8019486:	b2ad      	uxth	r5, r5
 8019488:	d00d      	beq.n	80194a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801948a:	442b      	add	r3, r5
 801948c:	b29b      	uxth	r3, r3
 801948e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8019492:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8019496:	10db      	asrs	r3, r3, #3
 8019498:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801949c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80194a0:	4313      	orrs	r3, r2
 80194a2:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80194a6:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80194aa:	00cb      	lsls	r3, r1, #3
 80194ac:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80194b0:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80194b4:	064f      	lsls	r7, r1, #25
 80194b6:	ea43 0302 	orr.w	r3, r3, r2
 80194ba:	bf44      	itt	mi
 80194bc:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80194c0:	b21b      	sxthmi	r3, r3
 80194c2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80194c6:	1b5b      	subs	r3, r3, r5
 80194c8:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 80194cc:	4632      	mov	r2, r6
 80194ce:	e6fa      	b.n	80192c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80194d0:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80194d4:	4617      	mov	r7, r2
 80194d6:	f102 0908 	add.w	r9, r2, #8
 80194da:	4666      	mov	r6, ip
 80194dc:	6838      	ldr	r0, [r7, #0]
 80194de:	6879      	ldr	r1, [r7, #4]
 80194e0:	46e0      	mov	r8, ip
 80194e2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80194e6:	3708      	adds	r7, #8
 80194e8:	454f      	cmp	r7, r9
 80194ea:	46c4      	mov	ip, r8
 80194ec:	d1f6      	bne.n	80194dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80194ee:	6838      	ldr	r0, [r7, #0]
 80194f0:	f8c8 0000 	str.w	r0, [r8]
 80194f4:	88b9      	ldrh	r1, [r7, #4]
 80194f6:	f8a8 1004 	strh.w	r1, [r8, #4]
 80194fa:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80194fe:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8019502:	d009      	beq.n	8019518 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8019504:	7b51      	ldrb	r1, [r2, #13]
 8019506:	7992      	ldrb	r2, [r2, #6]
 8019508:	0149      	lsls	r1, r1, #5
 801950a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801950e:	4311      	orrs	r1, r2
 8019510:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8019514:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8019518:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801951c:	d00e      	beq.n	801953c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801951e:	eba3 030e 	sub.w	r3, r3, lr
 8019522:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8019526:	b29b      	uxth	r3, r3
 8019528:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801952c:	10db      	asrs	r3, r3, #3
 801952e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8019532:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8019536:	4313      	orrs	r3, r2
 8019538:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801953c:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8019540:	00cb      	lsls	r3, r1, #3
 8019542:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8019546:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801954a:	0648      	lsls	r0, r1, #25
 801954c:	ea43 0302 	orr.w	r3, r3, r2
 8019550:	bf44      	itt	mi
 8019552:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8019556:	b21b      	sxthmi	r3, r3
 8019558:	1b5d      	subs	r5, r3, r5
 801955a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801955e:	e7b5      	b.n	80194cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08019560 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8019560:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019564:	461e      	mov	r6, r3
 8019566:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8019568:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801956c:	4604      	mov	r4, r0
 801956e:	4617      	mov	r7, r2
 8019570:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8019574:	f7ed fe00 	bl	8007178 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8019578:	4605      	mov	r5, r0
 801957a:	b918      	cbnz	r0, 8019584 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801957c:	6030      	str	r0, [r6, #0]
 801957e:	4628      	mov	r0, r5
 8019580:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019584:	683b      	ldr	r3, [r7, #0]
 8019586:	4601      	mov	r1, r0
 8019588:	68db      	ldr	r3, [r3, #12]
 801958a:	4638      	mov	r0, r7
 801958c:	4798      	blx	r3
 801958e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8019592:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8019596:	4602      	mov	r2, r0
 8019598:	6030      	str	r0, [r6, #0]
 801959a:	d213      	bcs.n	80195c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801959c:	4643      	mov	r3, r8
 801959e:	4639      	mov	r1, r7
 80195a0:	4620      	mov	r0, r4
 80195a2:	f7ff fe3b 	bl	801921c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80195a6:	6030      	str	r0, [r6, #0]
 80195a8:	6833      	ldr	r3, [r6, #0]
 80195aa:	b143      	cbz	r3, 80195be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80195ac:	7b5a      	ldrb	r2, [r3, #13]
 80195ae:	7a9b      	ldrb	r3, [r3, #10]
 80195b0:	0052      	lsls	r2, r2, #1
 80195b2:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80195b6:	4313      	orrs	r3, r2
 80195b8:	bf0c      	ite	eq
 80195ba:	2301      	moveq	r3, #1
 80195bc:	2300      	movne	r3, #0
 80195be:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80195c2:	e7dc      	b.n	801957e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80195c4:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80195c8:	b29b      	uxth	r3, r3
 80195ca:	2b7f      	cmp	r3, #127	@ 0x7f
 80195cc:	d804      	bhi.n	80195d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80195ce:	4639      	mov	r1, r7
 80195d0:	4620      	mov	r0, r4
 80195d2:	f7ff fced 	bl	8018fb0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80195d6:	e7e6      	b.n	80195a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80195d8:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80195dc:	2b00      	cmp	r3, #0
 80195de:	d0e3      	beq.n	80195a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80195e0:	f640 1302 	movw	r3, #2306	@ 0x902
 80195e4:	429d      	cmp	r5, r3
 80195e6:	d1df      	bne.n	80195a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80195e8:	4601      	mov	r1, r0
 80195ea:	4620      	mov	r0, r4
 80195ec:	f7ff fcb2 	bl	8018f54 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80195f0:	e7d9      	b.n	80195a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080195f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80195f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80195f6:	461e      	mov	r6, r3
 80195f8:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80195fa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80195fe:	4604      	mov	r4, r0
 8019600:	4617      	mov	r7, r2
 8019602:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8019606:	f7ed fdb7 	bl	8007178 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801960a:	4605      	mov	r5, r0
 801960c:	b918      	cbnz	r0, 8019616 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801960e:	6030      	str	r0, [r6, #0]
 8019610:	4628      	mov	r0, r5
 8019612:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019616:	683b      	ldr	r3, [r7, #0]
 8019618:	4601      	mov	r1, r0
 801961a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801961e:	4638      	mov	r0, r7
 8019620:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8019624:	47c8      	blx	r9
 8019626:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801962a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801962e:	4602      	mov	r2, r0
 8019630:	6030      	str	r0, [r6, #0]
 8019632:	d213      	bcs.n	801965c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8019634:	4643      	mov	r3, r8
 8019636:	4639      	mov	r1, r7
 8019638:	4620      	mov	r0, r4
 801963a:	f7ff fdef 	bl	801921c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801963e:	6030      	str	r0, [r6, #0]
 8019640:	6833      	ldr	r3, [r6, #0]
 8019642:	b143      	cbz	r3, 8019656 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8019644:	7b5a      	ldrb	r2, [r3, #13]
 8019646:	7a9b      	ldrb	r3, [r3, #10]
 8019648:	0052      	lsls	r2, r2, #1
 801964a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801964e:	4313      	orrs	r3, r2
 8019650:	bf0c      	ite	eq
 8019652:	2301      	moveq	r3, #1
 8019654:	2300      	movne	r3, #0
 8019656:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801965a:	e7d9      	b.n	8019610 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801965c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8019660:	b29b      	uxth	r3, r3
 8019662:	2b7f      	cmp	r3, #127	@ 0x7f
 8019664:	d804      	bhi.n	8019670 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8019666:	4639      	mov	r1, r7
 8019668:	4620      	mov	r0, r4
 801966a:	f7ff fca1 	bl	8018fb0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801966e:	e7e6      	b.n	801963e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8019670:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8019674:	2b00      	cmp	r3, #0
 8019676:	d0e3      	beq.n	8019640 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8019678:	f640 1302 	movw	r3, #2306	@ 0x902
 801967c:	429d      	cmp	r5, r3
 801967e:	d1df      	bne.n	8019640 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8019680:	4601      	mov	r1, r0
 8019682:	4620      	mov	r0, r4
 8019684:	f7ff fc66 	bl	8018f54 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8019688:	e7d9      	b.n	801963e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801968a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801968a:	b510      	push	{r4, lr}
 801968c:	4604      	mov	r4, r0
 801968e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8019692:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8019694:	b1f1      	cbz	r1, 80196d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8019696:	2b0a      	cmp	r3, #10
 8019698:	d02f      	beq.n	80196fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801969a:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 801969c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80196a0:	3901      	subs	r1, #1
 80196a2:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 80196a4:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 80196a8:	1c51      	adds	r1, r2, #1
 80196aa:	b289      	uxth	r1, r1
 80196ac:	2901      	cmp	r1, #1
 80196ae:	bf84      	itt	hi
 80196b0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80196b4:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 80196b6:	f103 0201 	add.w	r2, r3, #1
 80196ba:	8722      	strh	r2, [r4, #56]	@ 0x38
 80196bc:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80196be:	bf98      	it	ls
 80196c0:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 80196c2:	4413      	add	r3, r2
 80196c4:	b29b      	uxth	r3, r3
 80196c6:	2b09      	cmp	r3, #9
 80196c8:	bf88      	it	hi
 80196ca:	3b0a      	subhi	r3, #10
 80196cc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80196d0:	8458      	strh	r0, [r3, #34]	@ 0x22
 80196d2:	e7dc      	b.n	801968e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80196d4:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80196d6:	2b0a      	cmp	r3, #10
 80196d8:	d00f      	beq.n	80196fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80196da:	4620      	mov	r0, r4
 80196dc:	f7ff fbe8 	bl	8018eb0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80196e0:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80196e2:	1c5a      	adds	r2, r3, #1
 80196e4:	8722      	strh	r2, [r4, #56]	@ 0x38
 80196e6:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80196e8:	4413      	add	r3, r2
 80196ea:	b29b      	uxth	r3, r3
 80196ec:	2b09      	cmp	r3, #9
 80196ee:	bf88      	it	hi
 80196f0:	3b0a      	subhi	r3, #10
 80196f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80196f6:	8458      	strh	r0, [r3, #34]	@ 0x22
 80196f8:	e7ec      	b.n	80196d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80196fa:	bd10      	pop	{r4, pc}

080196fc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80196fc:	b538      	push	{r3, r4, r5, lr}
 80196fe:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8019700:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8019704:	4604      	mov	r4, r0
 8019706:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8019708:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801970a:	3a01      	subs	r2, #1
 801970c:	8702      	strh	r2, [r0, #56]	@ 0x38
 801970e:	1c5a      	adds	r2, r3, #1
 8019710:	b292      	uxth	r2, r2
 8019712:	2a09      	cmp	r2, #9
 8019714:	bf86      	itte	hi
 8019716:	3b09      	subhi	r3, #9
 8019718:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801971a:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 801971c:	f7ff ffb5 	bl	801968a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8019720:	8c23      	ldrh	r3, [r4, #32]
 8019722:	2b01      	cmp	r3, #1
 8019724:	bf9c      	itt	ls
 8019726:	3301      	addls	r3, #1
 8019728:	8423      	strhls	r3, [r4, #32]
 801972a:	8be3      	ldrh	r3, [r4, #30]
 801972c:	b90b      	cbnz	r3, 8019732 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801972e:	2302      	movs	r3, #2
 8019730:	83e3      	strh	r3, [r4, #30]
 8019732:	8be3      	ldrh	r3, [r4, #30]
 8019734:	3b01      	subs	r3, #1
 8019736:	b29b      	uxth	r3, r3
 8019738:	83e3      	strh	r3, [r4, #30]
 801973a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801973e:	4628      	mov	r0, r5
 8019740:	8365      	strh	r5, [r4, #26]
 8019742:	bd38      	pop	{r3, r4, r5, pc}

08019744 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8019744:	428a      	cmp	r2, r1
 8019746:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801974a:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 801974c:	d931      	bls.n	80197b2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801974e:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8019750:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8019754:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8019758:	19ee      	adds	r6, r5, r7
 801975a:	1a54      	subs	r4, r2, r1
 801975c:	3e01      	subs	r6, #1
 801975e:	fa1f fe84 	uxth.w	lr, r4
 8019762:	b2b4      	uxth	r4, r6
 8019764:	eba4 090e 	sub.w	r9, r4, lr
 8019768:	fa1f f989 	uxth.w	r9, r9
 801976c:	2c09      	cmp	r4, #9
 801976e:	4626      	mov	r6, r4
 8019770:	bf88      	it	hi
 8019772:	f1a4 060a 	subhi.w	r6, r4, #10
 8019776:	f1bc 0f00 	cmp.w	ip, #0
 801977a:	bf08      	it	eq
 801977c:	f04f 0c02 	moveq.w	ip, #2
 8019780:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019784:	f10c 3cff 	add.w	ip, ip, #4294967295
 8019788:	fa1f fc8c 	uxth.w	ip, ip
 801978c:	3c01      	subs	r4, #1
 801978e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8019792:	b2a4      	uxth	r4, r4
 8019794:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8019798:	454c      	cmp	r4, r9
 801979a:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 801979e:	d1e5      	bne.n	801976c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80197a0:	eba5 050e 	sub.w	r5, r5, lr
 80197a4:	eb0e 0408 	add.w	r4, lr, r8
 80197a8:	8705      	strh	r5, [r0, #56]	@ 0x38
 80197aa:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 80197ae:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 80197b2:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 80197b4:	1a64      	subs	r4, r4, r1
 80197b6:	4439      	add	r1, r7
 80197b8:	b289      	uxth	r1, r1
 80197ba:	2909      	cmp	r1, #9
 80197bc:	bf88      	it	hi
 80197be:	390a      	subhi	r1, #10
 80197c0:	8704      	strh	r4, [r0, #56]	@ 0x38
 80197c2:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80197c4:	250a      	movs	r5, #10
 80197c6:	b18a      	cbz	r2, 80197ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80197c8:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 80197ca:	3a01      	subs	r2, #1
 80197cc:	b292      	uxth	r2, r2
 80197ce:	3101      	adds	r1, #1
 80197d0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80197d4:	8701      	strh	r1, [r0, #56]	@ 0x38
 80197d6:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80197d8:	b901      	cbnz	r1, 80197dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80197da:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80197dc:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80197de:	3901      	subs	r1, #1
 80197e0:	b289      	uxth	r1, r1
 80197e2:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80197e4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80197e8:	844c      	strh	r4, [r1, #34]	@ 0x22
 80197ea:	e7ec      	b.n	80197c6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80197ec:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80197f0:	f7ff bf4b 	b.w	801968a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080197f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80197f4:	b570      	push	{r4, r5, r6, lr}
 80197f6:	2500      	movs	r5, #0
 80197f8:	4295      	cmp	r5, r2
 80197fa:	d011      	beq.n	8019820 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80197fc:	8bc4      	ldrh	r4, [r0, #30]
 80197fe:	f831 6b02 	ldrh.w	r6, [r1], #2
 8019802:	4414      	add	r4, r2
 8019804:	3c01      	subs	r4, #1
 8019806:	1b64      	subs	r4, r4, r5
 8019808:	b2a4      	uxth	r4, r4
 801980a:	2c01      	cmp	r4, #1
 801980c:	bf88      	it	hi
 801980e:	3c02      	subhi	r4, #2
 8019810:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019814:	8b64      	ldrh	r4, [r4, #26]
 8019816:	42b4      	cmp	r4, r6
 8019818:	d117      	bne.n	801984a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801981a:	3501      	adds	r5, #1
 801981c:	b2ad      	uxth	r5, r5
 801981e:	e7eb      	b.n	80197f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8019820:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019824:	2400      	movs	r4, #0
 8019826:	4413      	add	r3, r2
 8019828:	b2a2      	uxth	r2, r4
 801982a:	429a      	cmp	r2, r3
 801982c:	da0f      	bge.n	801984e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801982e:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8019830:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8019834:	4432      	add	r2, r6
 8019836:	b292      	uxth	r2, r2
 8019838:	2a09      	cmp	r2, #9
 801983a:	bf88      	it	hi
 801983c:	3a0a      	subhi	r2, #10
 801983e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019842:	3401      	adds	r4, #1
 8019844:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8019846:	42aa      	cmp	r2, r5
 8019848:	d0ee      	beq.n	8019828 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801984a:	2000      	movs	r0, #0
 801984c:	bd70      	pop	{r4, r5, r6, pc}
 801984e:	2001      	movs	r0, #1
 8019850:	e7fc      	b.n	801984c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08019852 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8019852:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019856:	4605      	mov	r5, r0
 8019858:	4616      	mov	r6, r2
 801985a:	1c8c      	adds	r4, r1, #2
 801985c:	8809      	ldrh	r1, [r1, #0]
 801985e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8019862:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8019866:	42b3      	cmp	r3, r6
 8019868:	d124      	bne.n	80198b4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801986a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801986e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8019872:	f001 070f 	and.w	r7, r1, #15
 8019876:	f8cd 8000 	str.w	r8, [sp]
 801987a:	464b      	mov	r3, r9
 801987c:	4652      	mov	r2, sl
 801987e:	4621      	mov	r1, r4
 8019880:	4628      	mov	r0, r5
 8019882:	f7ff ffb7 	bl	80197f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8019886:	4683      	mov	fp, r0
 8019888:	b168      	cbz	r0, 80198a6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801988a:	eb0a 0109 	add.w	r1, sl, r9
 801988e:	4441      	add	r1, r8
 8019890:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8019894:	463a      	mov	r2, r7
 8019896:	4649      	mov	r1, r9
 8019898:	4628      	mov	r0, r5
 801989a:	f7ff ff53 	bl	8019744 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801989e:	4658      	mov	r0, fp
 80198a0:	b003      	add	sp, #12
 80198a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80198a6:	eb07 010a 	add.w	r1, r7, sl
 80198aa:	4449      	add	r1, r9
 80198ac:	4441      	add	r1, r8
 80198ae:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80198b2:	e7d2      	b.n	801985a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80198b4:	f04f 0b00 	mov.w	fp, #0
 80198b8:	e7f1      	b.n	801989e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080198ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80198ba:	b570      	push	{r4, r5, r6, lr}
 80198bc:	8810      	ldrh	r0, [r2, #0]
 80198be:	4298      	cmp	r0, r3
 80198c0:	d817      	bhi.n	80198f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80198c2:	1e48      	subs	r0, r1, #1
 80198c4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80198c8:	4298      	cmp	r0, r3
 80198ca:	d312      	bcc.n	80198f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80198cc:	2400      	movs	r4, #0
 80198ce:	428c      	cmp	r4, r1
 80198d0:	d20f      	bcs.n	80198f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80198d2:	1860      	adds	r0, r4, r1
 80198d4:	1040      	asrs	r0, r0, #1
 80198d6:	0085      	lsls	r5, r0, #2
 80198d8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80198dc:	42b3      	cmp	r3, r6
 80198de:	d902      	bls.n	80198e6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80198e0:	3001      	adds	r0, #1
 80198e2:	b284      	uxth	r4, r0
 80198e4:	e7f3      	b.n	80198ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80198e6:	d201      	bcs.n	80198ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80198e8:	b281      	uxth	r1, r0
 80198ea:	e7f0      	b.n	80198ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80198ec:	442a      	add	r2, r5
 80198ee:	8850      	ldrh	r0, [r2, #2]
 80198f0:	bd70      	pop	{r4, r5, r6, pc}
 80198f2:	2000      	movs	r0, #0
 80198f4:	e7fc      	b.n	80198f0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080198f6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80198f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80198fa:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 80198fc:	886f      	ldrh	r7, [r5, #2]
 80198fe:	4604      	mov	r4, r0
 8019900:	087f      	lsrs	r7, r7, #1
 8019902:	260b      	movs	r6, #11
 8019904:	3e01      	subs	r6, #1
 8019906:	d013      	beq.n	8019930 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8019908:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801990a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801990e:	462a      	mov	r2, r5
 8019910:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8019914:	4639      	mov	r1, r7
 8019916:	4643      	mov	r3, r8
 8019918:	4620      	mov	r0, r4
 801991a:	f7ff ffce 	bl	80198ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801991e:	b138      	cbz	r0, 8019930 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8019920:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8019924:	4642      	mov	r2, r8
 8019926:	4620      	mov	r0, r4
 8019928:	f7ff ff93 	bl	8019852 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801992c:	2800      	cmp	r0, #0
 801992e:	d1e9      	bne.n	8019904 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8019930:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019934 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8019934:	b570      	push	{r4, r5, r6, lr}
 8019936:	694a      	ldr	r2, [r1, #20]
 8019938:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 801993a:	684b      	ldr	r3, [r1, #4]
 801993c:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 801993e:	1b54      	subs	r4, r2, r5
 8019940:	f000 8106 	beq.w	8019b50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8019944:	1b9b      	subs	r3, r3, r6
 8019946:	d003      	beq.n	8019950 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019948:	4363      	muls	r3, r4
 801994a:	2210      	movs	r2, #16
 801994c:	fb93 f3f2 	sdiv	r3, r3, r2
 8019950:	680c      	ldr	r4, [r1, #0]
 8019952:	698a      	ldr	r2, [r1, #24]
 8019954:	1b65      	subs	r5, r4, r5
 8019956:	f000 80fd 	beq.w	8019b54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801995a:	1b92      	subs	r2, r2, r6
 801995c:	d003      	beq.n	8019966 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801995e:	436a      	muls	r2, r5
 8019960:	2410      	movs	r4, #16
 8019962:	fb92 f2f4 	sdiv	r2, r2, r4
 8019966:	1a9b      	subs	r3, r3, r2
 8019968:	ee07 3a90 	vmov	s15, r3
 801996c:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8019b90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8019970:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019974:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019978:	ee67 7a84 	vmul.f32	s15, s15, s8
 801997c:	460a      	mov	r2, r1
 801997e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8019982:	4603      	mov	r3, r0
 8019984:	f100 040c 	add.w	r4, r0, #12
 8019988:	eeb1 6a43 	vneg.f32	s12, s6
 801998c:	edd2 7a02 	vldr	s15, [r2, #8]
 8019990:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8019994:	3214      	adds	r2, #20
 8019996:	ece3 6a01 	vstmia	r3!, {s13}
 801999a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801999e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80199a2:	429c      	cmp	r4, r3
 80199a4:	edc3 7a02 	vstr	s15, [r3, #8]
 80199a8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80199ac:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80199b0:	edc3 7a05 	vstr	s15, [r3, #20]
 80199b4:	d1ea      	bne.n	801998c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80199b6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80199b8:	698b      	ldr	r3, [r1, #24]
 80199ba:	edd0 4a02 	vldr	s9, [r0, #8]
 80199be:	edd0 3a00 	vldr	s7, [r0]
 80199c2:	edd0 6a01 	vldr	s13, [r0, #4]
 80199c6:	ed90 5a05 	vldr	s10, [r0, #20]
 80199ca:	ed90 2a03 	vldr	s4, [r0, #12]
 80199ce:	edd0 5a04 	vldr	s11, [r0, #16]
 80199d2:	ed90 1a07 	vldr	s2, [r0, #28]
 80199d6:	edd0 2a06 	vldr	s5, [r0, #24]
 80199da:	1a9b      	subs	r3, r3, r2
 80199dc:	ee07 3a90 	vmov	s15, r3
 80199e0:	684b      	ldr	r3, [r1, #4]
 80199e2:	1a9b      	subs	r3, r3, r2
 80199e4:	ee07 3a10 	vmov	s14, r3
 80199e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80199ec:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80199f0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80199f4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80199f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80199fc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8019a00:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019a04:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8019a08:	eee6 7a87 	vfma.f32	s15, s13, s14
 8019a0c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8019a10:	ee67 7a83 	vmul.f32	s15, s15, s6
 8019a14:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8019a18:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8019a1a:	694a      	ldr	r2, [r1, #20]
 8019a1c:	1b13      	subs	r3, r2, r4
 8019a1e:	ee07 3a10 	vmov	s14, r3
 8019a22:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019a26:	680b      	ldr	r3, [r1, #0]
 8019a28:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019a2c:	1b1b      	subs	r3, r3, r4
 8019a2e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8019a32:	ee07 3a10 	vmov	s14, r3
 8019a36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019a3a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019a3e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8019a42:	ee64 4a86 	vmul.f32	s9, s9, s12
 8019a46:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8019a4a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8019a4c:	698b      	ldr	r3, [r1, #24]
 8019a4e:	1a9b      	subs	r3, r3, r2
 8019a50:	ee06 3a90 	vmov	s13, r3
 8019a54:	684b      	ldr	r3, [r1, #4]
 8019a56:	1a9b      	subs	r3, r3, r2
 8019a58:	ee07 3a10 	vmov	s14, r3
 8019a5c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019a60:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019a64:	ee66 6a84 	vmul.f32	s13, s13, s8
 8019a68:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019a6c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8019a70:	eee5 6a87 	vfma.f32	s13, s11, s14
 8019a74:	ee66 6a83 	vmul.f32	s13, s13, s6
 8019a78:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8019a7c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8019a7e:	694a      	ldr	r2, [r1, #20]
 8019a80:	1b13      	subs	r3, r2, r4
 8019a82:	ee07 3a10 	vmov	s14, r3
 8019a86:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019a8a:	680b      	ldr	r3, [r1, #0]
 8019a8c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019a90:	1b1b      	subs	r3, r3, r4
 8019a92:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8019a96:	ee07 3a10 	vmov	s14, r3
 8019a9a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019a9e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019aa2:	eea5 5a87 	vfma.f32	s10, s11, s14
 8019aa6:	edd0 5a08 	vldr	s11, [r0, #32]
 8019aaa:	ee25 5a06 	vmul.f32	s10, s10, s12
 8019aae:	ee31 1a65 	vsub.f32	s2, s2, s11
 8019ab2:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8019ab6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8019ab8:	698b      	ldr	r3, [r1, #24]
 8019aba:	1a9b      	subs	r3, r3, r2
 8019abc:	ee07 3a10 	vmov	s14, r3
 8019ac0:	684b      	ldr	r3, [r1, #4]
 8019ac2:	1a9b      	subs	r3, r3, r2
 8019ac4:	ee01 3a90 	vmov	s3, r3
 8019ac8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019acc:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8019ad0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019ad4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8019ad8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8019adc:	ee61 1a84 	vmul.f32	s3, s3, s8
 8019ae0:	eea1 7a21 	vfma.f32	s14, s2, s3
 8019ae4:	ee27 7a03 	vmul.f32	s14, s14, s6
 8019ae8:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8019aec:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8019aee:	694a      	ldr	r2, [r1, #20]
 8019af0:	1b13      	subs	r3, r2, r4
 8019af2:	ee03 3a10 	vmov	s6, r3
 8019af6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8019afa:	680b      	ldr	r3, [r1, #0]
 8019afc:	ee23 3a04 	vmul.f32	s6, s6, s8
 8019b00:	1b1b      	subs	r3, r3, r4
 8019b02:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8019b06:	ee03 3a10 	vmov	s6, r3
 8019b0a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8019b0e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8019b12:	eee1 5a04 	vfma.f32	s11, s2, s8
 8019b16:	ee25 6a86 	vmul.f32	s12, s11, s12
 8019b1a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8019b1e:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8019b22:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8019b26:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8019b2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b2e:	dd13      	ble.n	8019b58 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8019b30:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8019b34:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8019b38:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8019b3a:	eee3 7a87 	vfma.f32	s15, s7, s14
 8019b3e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019b42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b46:	dd15      	ble.n	8019b74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8019b48:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8019b4c:	6403      	str	r3, [r0, #64]	@ 0x40
 8019b4e:	bd70      	pop	{r4, r5, r6, pc}
 8019b50:	4623      	mov	r3, r4
 8019b52:	e6fd      	b.n	8019950 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019b54:	462a      	mov	r2, r5
 8019b56:	e706      	b.n	8019966 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8019b58:	d502      	bpl.n	8019b60 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8019b5a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8019b5e:	e7e9      	b.n	8019b34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8019b60:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8019b64:	eea3 2a85 	vfma.f32	s4, s7, s10
 8019b68:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8019b6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b70:	dade      	bge.n	8019b30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8019b72:	e7f2      	b.n	8019b5a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8019b74:	d502      	bpl.n	8019b7c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8019b76:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8019b7a:	e7e7      	b.n	8019b4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8019b7c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8019b80:	eee3 4a86 	vfma.f32	s9, s7, s12
 8019b84:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8019b88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019b8c:	dadc      	bge.n	8019b48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8019b8e:	e7f2      	b.n	8019b76 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8019b90:	3d800000 	.word	0x3d800000

08019b94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8019b94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019b98:	2714      	movs	r7, #20
 8019b9a:	435f      	muls	r7, r3
 8019b9c:	eb02 0c07 	add.w	ip, r2, r7
 8019ba0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8019ba4:	f115 0e0f 	adds.w	lr, r5, #15
 8019ba8:	f100 80a2 	bmi.w	8019cf0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8019bac:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8019bb0:	9c08      	ldr	r4, [sp, #32]
 8019bb2:	f8c0 e014 	str.w	lr, [r0, #20]
 8019bb6:	2614      	movs	r6, #20
 8019bb8:	4366      	muls	r6, r4
 8019bba:	eb02 0806 	add.w	r8, r2, r6
 8019bbe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8019bc2:	f115 040f 	adds.w	r4, r5, #15
 8019bc6:	f100 809f 	bmi.w	8019d08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8019bca:	1124      	asrs	r4, r4, #4
 8019bcc:	eba4 040e 	sub.w	r4, r4, lr
 8019bd0:	6184      	str	r4, [r0, #24]
 8019bd2:	2c00      	cmp	r4, #0
 8019bd4:	f000 808a 	beq.w	8019cec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8019bd8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8019bdc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8019be0:	5995      	ldr	r5, [r2, r6]
 8019be2:	eba4 0809 	sub.w	r8, r4, r9
 8019be6:	59d4      	ldr	r4, [r2, r7]
 8019be8:	eba5 0a04 	sub.w	sl, r5, r4
 8019bec:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8019bf0:	fb0e fe05 	mul.w	lr, lr, r5
 8019bf4:	fb0a ee19 	mls	lr, sl, r9, lr
 8019bf8:	fb08 e404 	mla	r4, r8, r4, lr
 8019bfc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8019c00:	3c01      	subs	r4, #1
 8019c02:	19a4      	adds	r4, r4, r6
 8019c04:	f100 808c 	bmi.w	8019d20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8019c08:	fb94 fef6 	sdiv	lr, r4, r6
 8019c0c:	f8c0 e000 	str.w	lr, [r0]
 8019c10:	fb06 441e 	mls	r4, r6, lr, r4
 8019c14:	6104      	str	r4, [r0, #16]
 8019c16:	2d00      	cmp	r5, #0
 8019c18:	f2c0 8095 	blt.w	8019d46 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8019c1c:	fb95 f4f6 	sdiv	r4, r5, r6
 8019c20:	6044      	str	r4, [r0, #4]
 8019c22:	fb06 5514 	mls	r5, r6, r4, r5
 8019c26:	6085      	str	r5, [r0, #8]
 8019c28:	60c6      	str	r6, [r0, #12]
 8019c2a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8019c2e:	6945      	ldr	r5, [r0, #20]
 8019c30:	59d2      	ldr	r2, [r2, r7]
 8019c32:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8019d68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8019c36:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8019c3a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8019c3e:	ee07 4a10 	vmov	s14, r4
 8019c42:	6804      	ldr	r4, [r0, #0]
 8019c44:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8019c48:	ee07 2a90 	vmov	s15, r2
 8019c4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019c50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019c54:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8019c58:	ee27 7a26 	vmul.f32	s14, s14, s13
 8019c5c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8019c60:	edd3 6a00 	vldr	s13, [r3]
 8019c64:	eee6 6a07 	vfma.f32	s13, s12, s14
 8019c68:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8019c6c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8019c70:	edc0 6a07 	vstr	s13, [r0, #28]
 8019c74:	edd0 6a01 	vldr	s13, [r0, #4]
 8019c78:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8019c7c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8019c80:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019c84:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019c88:	ed80 6a08 	vstr	s12, [r0, #32]
 8019c8c:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8019c8e:	6242      	str	r2, [r0, #36]	@ 0x24
 8019c90:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8019c94:	ed93 6a03 	vldr	s12, [r3, #12]
 8019c98:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019c9c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8019ca0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8019ca4:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8019ca8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8019cac:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8019cb0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019cb4:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8019cb8:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8019cba:	6302      	str	r2, [r0, #48]	@ 0x30
 8019cbc:	ed93 6a06 	vldr	s12, [r3, #24]
 8019cc0:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8019cc4:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019cc8:	eeb0 7a46 	vmov.f32	s14, s12
 8019ccc:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8019cd0:	eea6 7a27 	vfma.f32	s14, s12, s15
 8019cd4:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8019cd8:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8019cdc:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8019ce0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8019ce4:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8019ce8:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8019cea:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8019cec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019cf0:	f1c5 0501 	rsb	r5, r5, #1
 8019cf4:	f015 050f 	ands.w	r5, r5, #15
 8019cf8:	bf18      	it	ne
 8019cfa:	2501      	movne	r5, #1
 8019cfc:	2410      	movs	r4, #16
 8019cfe:	fb9e fef4 	sdiv	lr, lr, r4
 8019d02:	ebae 0e05 	sub.w	lr, lr, r5
 8019d06:	e753      	b.n	8019bb0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8019d08:	f1c5 0501 	rsb	r5, r5, #1
 8019d0c:	f015 050f 	ands.w	r5, r5, #15
 8019d10:	bf18      	it	ne
 8019d12:	2501      	movne	r5, #1
 8019d14:	f04f 0910 	mov.w	r9, #16
 8019d18:	fb94 f4f9 	sdiv	r4, r4, r9
 8019d1c:	1b64      	subs	r4, r4, r5
 8019d1e:	e755      	b.n	8019bcc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8019d20:	4264      	negs	r4, r4
 8019d22:	fb94 fef6 	sdiv	lr, r4, r6
 8019d26:	f1ce 0800 	rsb	r8, lr, #0
 8019d2a:	fb06 441e 	mls	r4, r6, lr, r4
 8019d2e:	f8c0 8000 	str.w	r8, [r0]
 8019d32:	6104      	str	r4, [r0, #16]
 8019d34:	2c00      	cmp	r4, #0
 8019d36:	f43f af6e 	beq.w	8019c16 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8019d3a:	ea6f 0e0e 	mvn.w	lr, lr
 8019d3e:	f8c0 e000 	str.w	lr, [r0]
 8019d42:	1b34      	subs	r4, r6, r4
 8019d44:	e766      	b.n	8019c14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8019d46:	426d      	negs	r5, r5
 8019d48:	fb95 f4f6 	sdiv	r4, r5, r6
 8019d4c:	f1c4 0e00 	rsb	lr, r4, #0
 8019d50:	fb06 5514 	mls	r5, r6, r4, r5
 8019d54:	f8c0 e004 	str.w	lr, [r0, #4]
 8019d58:	6085      	str	r5, [r0, #8]
 8019d5a:	2d00      	cmp	r5, #0
 8019d5c:	f43f af64 	beq.w	8019c28 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8019d60:	43e4      	mvns	r4, r4
 8019d62:	6044      	str	r4, [r0, #4]
 8019d64:	1b75      	subs	r5, r6, r5
 8019d66:	e75e      	b.n	8019c26 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8019d68:	3d800000 	.word	0x3d800000

08019d6c <_ZN8touchgfx7Unicode6strlenEPKt>:
 8019d6c:	4602      	mov	r2, r0
 8019d6e:	b148      	cbz	r0, 8019d84 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8019d70:	2300      	movs	r3, #0
 8019d72:	b298      	uxth	r0, r3
 8019d74:	3301      	adds	r3, #1
 8019d76:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8019d7a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8019d7e:	2900      	cmp	r1, #0
 8019d80:	d1f7      	bne.n	8019d72 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8019d82:	4770      	bx	lr
 8019d84:	4770      	bx	lr

08019d86 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8019d86:	b530      	push	{r4, r5, lr}
 8019d88:	4604      	mov	r4, r0
 8019d8a:	b159      	cbz	r1, 8019da4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8019d8c:	b148      	cbz	r0, 8019da2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019d8e:	2300      	movs	r3, #0
 8019d90:	b298      	uxth	r0, r3
 8019d92:	4282      	cmp	r2, r0
 8019d94:	d905      	bls.n	8019da2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019d96:	5ccd      	ldrb	r5, [r1, r3]
 8019d98:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8019d9c:	3301      	adds	r3, #1
 8019d9e:	2d00      	cmp	r5, #0
 8019da0:	d1f6      	bne.n	8019d90 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8019da2:	bd30      	pop	{r4, r5, pc}
 8019da4:	4608      	mov	r0, r1
 8019da6:	e7fc      	b.n	8019da2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08019da8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8019da8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019daa:	b08b      	sub	sp, #44	@ 0x2c
 8019dac:	468c      	mov	ip, r1
 8019dae:	2100      	movs	r1, #0
 8019db0:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8019db4:	4604      	mov	r4, r0
 8019db6:	261f      	movs	r6, #31
 8019db8:	af01      	add	r7, sp, #4
 8019dba:	fb94 fef3 	sdiv	lr, r4, r3
 8019dbe:	fb03 441e 	mls	r4, r3, lr, r4
 8019dc2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8019dc6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8019dca:	b2ec      	uxtb	r4, r5
 8019dcc:	2d09      	cmp	r5, #9
 8019dce:	bfd4      	ite	le
 8019dd0:	3430      	addle	r4, #48	@ 0x30
 8019dd2:	3457      	addgt	r4, #87	@ 0x57
 8019dd4:	b2e4      	uxtb	r4, r4
 8019dd6:	55bc      	strb	r4, [r7, r6]
 8019dd8:	4674      	mov	r4, lr
 8019dda:	1e71      	subs	r1, r6, #1
 8019ddc:	b974      	cbnz	r4, 8019dfc <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8019dde:	2800      	cmp	r0, #0
 8019de0:	da05      	bge.n	8019dee <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8019de2:	ab0a      	add	r3, sp, #40	@ 0x28
 8019de4:	4419      	add	r1, r3
 8019de6:	232d      	movs	r3, #45	@ 0x2d
 8019de8:	f801 3c24 	strb.w	r3, [r1, #-36]
 8019dec:	1eb1      	subs	r1, r6, #2
 8019dee:	3101      	adds	r1, #1
 8019df0:	4439      	add	r1, r7
 8019df2:	4660      	mov	r0, ip
 8019df4:	f7ff ffc7 	bl	8019d86 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019df8:	b00b      	add	sp, #44	@ 0x2c
 8019dfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019dfc:	460e      	mov	r6, r1
 8019dfe:	e7dc      	b.n	8019dba <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08019e00 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8019e00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019e02:	b08b      	sub	sp, #44	@ 0x2c
 8019e04:	468c      	mov	ip, r1
 8019e06:	2100      	movs	r1, #0
 8019e08:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8019e0c:	ae01      	add	r6, sp, #4
 8019e0e:	211f      	movs	r1, #31
 8019e10:	fbb0 f7f3 	udiv	r7, r0, r3
 8019e14:	fb03 0517 	mls	r5, r3, r7, r0
 8019e18:	b2ec      	uxtb	r4, r5
 8019e1a:	2d09      	cmp	r5, #9
 8019e1c:	bfd4      	ite	le
 8019e1e:	3430      	addle	r4, #48	@ 0x30
 8019e20:	3457      	addgt	r4, #87	@ 0x57
 8019e22:	b2e4      	uxtb	r4, r4
 8019e24:	558c      	strb	r4, [r1, r6]
 8019e26:	4638      	mov	r0, r7
 8019e28:	1e4c      	subs	r4, r1, #1
 8019e2a:	b92f      	cbnz	r7, 8019e38 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8019e2c:	4431      	add	r1, r6
 8019e2e:	4660      	mov	r0, ip
 8019e30:	f7ff ffa9 	bl	8019d86 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019e34:	b00b      	add	sp, #44	@ 0x2c
 8019e36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019e38:	4621      	mov	r1, r4
 8019e3a:	e7e9      	b.n	8019e10 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08019e3c <_ZN8touchgfx7Unicode4atoiEPKt>:
 8019e3c:	b510      	push	{r4, lr}
 8019e3e:	b158      	cbz	r0, 8019e58 <_ZN8touchgfx7Unicode4atoiEPKt+0x1c>
 8019e40:	1e82      	subs	r2, r0, #2
 8019e42:	210a      	movs	r1, #10
 8019e44:	2000      	movs	r0, #0
 8019e46:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8019e4a:	3b30      	subs	r3, #48	@ 0x30
 8019e4c:	b29c      	uxth	r4, r3
 8019e4e:	2c09      	cmp	r4, #9
 8019e50:	d802      	bhi.n	8019e58 <_ZN8touchgfx7Unicode4atoiEPKt+0x1c>
 8019e52:	fb01 3000 	mla	r0, r1, r0, r3
 8019e56:	e7f6      	b.n	8019e46 <_ZN8touchgfx7Unicode4atoiEPKt+0xa>
 8019e58:	bd10      	pop	{r4, pc}

08019e5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8019e5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e5e:	4691      	mov	r9, r2
 8019e60:	b085      	sub	sp, #20
 8019e62:	6802      	ldr	r2, [r0, #0]
 8019e64:	9201      	str	r2, [sp, #4]
 8019e66:	4688      	mov	r8, r1
 8019e68:	4683      	mov	fp, r0
 8019e6a:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 8019e6e:	9103      	str	r1, [sp, #12]
 8019e70:	4610      	mov	r0, r2
 8019e72:	461c      	mov	r4, r3
 8019e74:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8019e78:	9302      	str	r3, [sp, #8]
 8019e7a:	f7ff ff77 	bl	8019d6c <_ZN8touchgfx7Unicode6strlenEPKt>
 8019e7e:	f1b8 0f00 	cmp.w	r8, #0
 8019e82:	bf0c      	ite	eq
 8019e84:	4684      	moveq	ip, r0
 8019e86:	f100 0c01 	addne.w	ip, r0, #1
 8019e8a:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 8019e8e:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8019e92:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8019e94:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019e96:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8019e9a:	9903      	ldr	r1, [sp, #12]
 8019e9c:	fa1f fc8c 	uxth.w	ip, ip
 8019ea0:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8019ea4:	d041      	beq.n	8019f2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019ea6:	d834      	bhi.n	8019f12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8019ea8:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8019eac:	d059      	beq.n	8019f62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8019eae:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8019eb2:	d03a      	beq.n	8019f2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019eb4:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8019eb8:	d034      	beq.n	8019f24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019eba:	2400      	movs	r4, #0
 8019ebc:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8019ec0:	3a01      	subs	r2, #1
 8019ec2:	b169      	cbz	r1, 8019ee0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019ec4:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8019ec6:	458c      	cmp	ip, r1
 8019ec8:	da09      	bge.n	8019ede <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019eca:	eba1 010c 	sub.w	r1, r1, ip
 8019ece:	b289      	uxth	r1, r1
 8019ed0:	b933      	cbnz	r3, 8019ee0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019ed2:	2e00      	cmp	r6, #0
 8019ed4:	d051      	beq.n	8019f7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019ed6:	2800      	cmp	r0, #0
 8019ed8:	d04f      	beq.n	8019f7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019eda:	440c      	add	r4, r1
 8019edc:	b2a4      	uxth	r4, r4
 8019ede:	2100      	movs	r1, #0
 8019ee0:	682b      	ldr	r3, [r5, #0]
 8019ee2:	4293      	cmp	r3, r2
 8019ee4:	da07      	bge.n	8019ef6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019ee6:	f1b8 0f00 	cmp.w	r8, #0
 8019eea:	d004      	beq.n	8019ef6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019eec:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8019ef0:	682b      	ldr	r3, [r5, #0]
 8019ef2:	3301      	adds	r3, #1
 8019ef4:	602b      	str	r3, [r5, #0]
 8019ef6:	2730      	movs	r7, #48	@ 0x30
 8019ef8:	2c00      	cmp	r4, #0
 8019efa:	d04e      	beq.n	8019f9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019efc:	682e      	ldr	r6, [r5, #0]
 8019efe:	3c01      	subs	r4, #1
 8019f00:	42b2      	cmp	r2, r6
 8019f02:	b2a4      	uxth	r4, r4
 8019f04:	dd49      	ble.n	8019f9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019f06:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019f0a:	682b      	ldr	r3, [r5, #0]
 8019f0c:	3301      	adds	r3, #1
 8019f0e:	602b      	str	r3, [r5, #0]
 8019f10:	e7f2      	b.n	8019ef8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8019f12:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8019f16:	d01d      	beq.n	8019f54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8019f18:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8019f1c:	d002      	beq.n	8019f24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019f1e:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8019f22:	e7c9      	b.n	8019eb8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8019f24:	4684      	mov	ip, r0
 8019f26:	f04f 0800 	mov.w	r8, #0
 8019f2a:	2c00      	cmp	r4, #0
 8019f2c:	d0c6      	beq.n	8019ebc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019f2e:	b947      	cbnz	r7, 8019f42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019f30:	2801      	cmp	r0, #1
 8019f32:	d106      	bne.n	8019f42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019f34:	8814      	ldrh	r4, [r2, #0]
 8019f36:	2c30      	cmp	r4, #48	@ 0x30
 8019f38:	bf02      	ittt	eq
 8019f3a:	3202      	addeq	r2, #2
 8019f3c:	f8cb 2000 	streq.w	r2, [fp]
 8019f40:	4638      	moveq	r0, r7
 8019f42:	45bc      	cmp	ip, r7
 8019f44:	da14      	bge.n	8019f70 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8019f46:	b2bf      	uxth	r7, r7
 8019f48:	eba7 040c 	sub.w	r4, r7, ip
 8019f4c:	b2a4      	uxth	r4, r4
 8019f4e:	46bc      	mov	ip, r7
 8019f50:	2600      	movs	r6, #0
 8019f52:	e7b3      	b.n	8019ebc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019f54:	4684      	mov	ip, r0
 8019f56:	b16c      	cbz	r4, 8019f74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8019f58:	42b8      	cmp	r0, r7
 8019f5a:	dd00      	ble.n	8019f5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8019f5c:	b2b8      	uxth	r0, r7
 8019f5e:	2400      	movs	r4, #0
 8019f60:	e003      	b.n	8019f6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8019f62:	f04f 0c01 	mov.w	ip, #1
 8019f66:	2400      	movs	r4, #0
 8019f68:	4660      	mov	r0, ip
 8019f6a:	4626      	mov	r6, r4
 8019f6c:	46a0      	mov	r8, r4
 8019f6e:	e7a5      	b.n	8019ebc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019f70:	2400      	movs	r4, #0
 8019f72:	e7ed      	b.n	8019f50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8019f74:	4626      	mov	r6, r4
 8019f76:	46a0      	mov	r8, r4
 8019f78:	e7a0      	b.n	8019ebc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019f7a:	2900      	cmp	r1, #0
 8019f7c:	d0b0      	beq.n	8019ee0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019f7e:	2720      	movs	r7, #32
 8019f80:	682e      	ldr	r6, [r5, #0]
 8019f82:	2900      	cmp	r1, #0
 8019f84:	d0ac      	beq.n	8019ee0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019f86:	3901      	subs	r1, #1
 8019f88:	4296      	cmp	r6, r2
 8019f8a:	b289      	uxth	r1, r1
 8019f8c:	daa7      	bge.n	8019ede <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019f8e:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019f92:	682b      	ldr	r3, [r5, #0]
 8019f94:	3301      	adds	r3, #1
 8019f96:	602b      	str	r3, [r5, #0]
 8019f98:	e7f2      	b.n	8019f80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8019f9a:	b188      	cbz	r0, 8019fc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019f9c:	682b      	ldr	r3, [r5, #0]
 8019f9e:	3801      	subs	r0, #1
 8019fa0:	429a      	cmp	r2, r3
 8019fa2:	b280      	uxth	r0, r0
 8019fa4:	dd0c      	ble.n	8019fc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019fa6:	f8db 3000 	ldr.w	r3, [fp]
 8019faa:	1c9c      	adds	r4, r3, #2
 8019fac:	f8cb 4000 	str.w	r4, [fp]
 8019fb0:	881c      	ldrh	r4, [r3, #0]
 8019fb2:	682b      	ldr	r3, [r5, #0]
 8019fb4:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8019fb8:	682b      	ldr	r3, [r5, #0]
 8019fba:	3301      	adds	r3, #1
 8019fbc:	602b      	str	r3, [r5, #0]
 8019fbe:	e7ec      	b.n	8019f9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019fc0:	2620      	movs	r6, #32
 8019fc2:	b151      	cbz	r1, 8019fda <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019fc4:	6828      	ldr	r0, [r5, #0]
 8019fc6:	3901      	subs	r1, #1
 8019fc8:	4282      	cmp	r2, r0
 8019fca:	b289      	uxth	r1, r1
 8019fcc:	dd05      	ble.n	8019fda <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019fce:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8019fd2:	682b      	ldr	r3, [r5, #0]
 8019fd4:	3301      	adds	r3, #1
 8019fd6:	602b      	str	r3, [r5, #0]
 8019fd8:	e7f3      	b.n	8019fc2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8019fda:	b005      	add	sp, #20
 8019fdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019fe0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8019fe0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019fe4:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8019fe8:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8019fec:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8019ff0:	2400      	movs	r4, #0
 8019ff2:	8014      	strh	r4, [r2, #0]
 8019ff4:	701c      	strb	r4, [r3, #0]
 8019ff6:	f888 4000 	strb.w	r4, [r8]
 8019ffa:	f88c 4000 	strb.w	r4, [ip]
 8019ffe:	f88e 4000 	strb.w	r4, [lr]
 801a002:	703c      	strb	r4, [r7, #0]
 801a004:	6804      	ldr	r4, [r0, #0]
 801a006:	b1a4      	cbz	r4, 801a032 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801a008:	8824      	ldrh	r4, [r4, #0]
 801a00a:	f04f 0901 	mov.w	r9, #1
 801a00e:	b314      	cbz	r4, 801a056 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801a010:	2c2b      	cmp	r4, #43	@ 0x2b
 801a012:	d001      	beq.n	801a018 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801a014:	2c20      	cmp	r4, #32
 801a016:	d110      	bne.n	801a03a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801a018:	8014      	strh	r4, [r2, #0]
 801a01a:	6804      	ldr	r4, [r0, #0]
 801a01c:	b10c      	cbz	r4, 801a022 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801a01e:	3402      	adds	r4, #2
 801a020:	6004      	str	r4, [r0, #0]
 801a022:	680c      	ldr	r4, [r1, #0]
 801a024:	b10c      	cbz	r4, 801a02a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801a026:	3401      	adds	r4, #1
 801a028:	600c      	str	r4, [r1, #0]
 801a02a:	6804      	ldr	r4, [r0, #0]
 801a02c:	b17c      	cbz	r4, 801a04e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801a02e:	8824      	ldrh	r4, [r4, #0]
 801a030:	e7ed      	b.n	801a00e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801a032:	680c      	ldr	r4, [r1, #0]
 801a034:	b17c      	cbz	r4, 801a056 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801a036:	7824      	ldrb	r4, [r4, #0]
 801a038:	e7e7      	b.n	801a00a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801a03a:	2c2d      	cmp	r4, #45	@ 0x2d
 801a03c:	d102      	bne.n	801a044 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801a03e:	f883 9000 	strb.w	r9, [r3]
 801a042:	e7ea      	b.n	801a01a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801a044:	2c23      	cmp	r4, #35	@ 0x23
 801a046:	d107      	bne.n	801a058 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801a048:	f888 9000 	strb.w	r9, [r8]
 801a04c:	e7e5      	b.n	801a01a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801a04e:	680c      	ldr	r4, [r1, #0]
 801a050:	b10c      	cbz	r4, 801a056 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801a052:	7824      	ldrb	r4, [r4, #0]
 801a054:	e7db      	b.n	801a00e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801a056:	2400      	movs	r4, #0
 801a058:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 801a05c:	2b09      	cmp	r3, #9
 801a05e:	d901      	bls.n	801a064 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801a060:	2c2a      	cmp	r4, #42	@ 0x2a
 801a062:	d122      	bne.n	801a0aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801a064:	2301      	movs	r3, #1
 801a066:	2c30      	cmp	r4, #48	@ 0x30
 801a068:	f88e 3000 	strb.w	r3, [lr]
 801a06c:	d10d      	bne.n	801a08a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801a06e:	f88c 3000 	strb.w	r3, [ip]
 801a072:	6803      	ldr	r3, [r0, #0]
 801a074:	b10b      	cbz	r3, 801a07a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801a076:	3302      	adds	r3, #2
 801a078:	6003      	str	r3, [r0, #0]
 801a07a:	680b      	ldr	r3, [r1, #0]
 801a07c:	b10b      	cbz	r3, 801a082 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801a07e:	3301      	adds	r3, #1
 801a080:	600b      	str	r3, [r1, #0]
 801a082:	6803      	ldr	r3, [r0, #0]
 801a084:	2b00      	cmp	r3, #0
 801a086:	d02f      	beq.n	801a0e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801a088:	881c      	ldrh	r4, [r3, #0]
 801a08a:	2c2a      	cmp	r4, #42	@ 0x2a
 801a08c:	d135      	bne.n	801a0fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801a08e:	f04f 33ff 	mov.w	r3, #4294967295
 801a092:	6033      	str	r3, [r6, #0]
 801a094:	6803      	ldr	r3, [r0, #0]
 801a096:	b10b      	cbz	r3, 801a09c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801a098:	3302      	adds	r3, #2
 801a09a:	6003      	str	r3, [r0, #0]
 801a09c:	680b      	ldr	r3, [r1, #0]
 801a09e:	b10b      	cbz	r3, 801a0a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801a0a0:	3301      	adds	r3, #1
 801a0a2:	600b      	str	r3, [r1, #0]
 801a0a4:	6803      	ldr	r3, [r0, #0]
 801a0a6:	b31b      	cbz	r3, 801a0f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801a0a8:	881c      	ldrh	r4, [r3, #0]
 801a0aa:	2c2e      	cmp	r4, #46	@ 0x2e
 801a0ac:	d11a      	bne.n	801a0e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801a0ae:	2301      	movs	r3, #1
 801a0b0:	703b      	strb	r3, [r7, #0]
 801a0b2:	6803      	ldr	r3, [r0, #0]
 801a0b4:	b10b      	cbz	r3, 801a0ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801a0b6:	3302      	adds	r3, #2
 801a0b8:	6003      	str	r3, [r0, #0]
 801a0ba:	680b      	ldr	r3, [r1, #0]
 801a0bc:	b10b      	cbz	r3, 801a0c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801a0be:	3301      	adds	r3, #1
 801a0c0:	600b      	str	r3, [r1, #0]
 801a0c2:	6803      	ldr	r3, [r0, #0]
 801a0c4:	2b00      	cmp	r3, #0
 801a0c6:	d036      	beq.n	801a136 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801a0c8:	881b      	ldrh	r3, [r3, #0]
 801a0ca:	2b2a      	cmp	r3, #42	@ 0x2a
 801a0cc:	d137      	bne.n	801a13e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801a0ce:	f04f 33ff 	mov.w	r3, #4294967295
 801a0d2:	602b      	str	r3, [r5, #0]
 801a0d4:	6803      	ldr	r3, [r0, #0]
 801a0d6:	b10b      	cbz	r3, 801a0dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801a0d8:	3302      	adds	r3, #2
 801a0da:	6003      	str	r3, [r0, #0]
 801a0dc:	680b      	ldr	r3, [r1, #0]
 801a0de:	b10b      	cbz	r3, 801a0e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801a0e0:	3301      	adds	r3, #1
 801a0e2:	600b      	str	r3, [r1, #0]
 801a0e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a0e8:	680c      	ldr	r4, [r1, #0]
 801a0ea:	b134      	cbz	r4, 801a0fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801a0ec:	7824      	ldrb	r4, [r4, #0]
 801a0ee:	e7cc      	b.n	801a08a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801a0f0:	680b      	ldr	r3, [r1, #0]
 801a0f2:	2b00      	cmp	r3, #0
 801a0f4:	d0f6      	beq.n	801a0e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801a0f6:	781c      	ldrb	r4, [r3, #0]
 801a0f8:	e7d7      	b.n	801a0aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801a0fa:	2300      	movs	r3, #0
 801a0fc:	6033      	str	r3, [r6, #0]
 801a0fe:	220a      	movs	r2, #10
 801a100:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 801a104:	fa1f f38c 	uxth.w	r3, ip
 801a108:	2b09      	cmp	r3, #9
 801a10a:	d8ce      	bhi.n	801a0aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801a10c:	6833      	ldr	r3, [r6, #0]
 801a10e:	fb02 c303 	mla	r3, r2, r3, ip
 801a112:	6033      	str	r3, [r6, #0]
 801a114:	6803      	ldr	r3, [r0, #0]
 801a116:	b10b      	cbz	r3, 801a11c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801a118:	3302      	adds	r3, #2
 801a11a:	6003      	str	r3, [r0, #0]
 801a11c:	680b      	ldr	r3, [r1, #0]
 801a11e:	b10b      	cbz	r3, 801a124 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801a120:	3301      	adds	r3, #1
 801a122:	600b      	str	r3, [r1, #0]
 801a124:	6803      	ldr	r3, [r0, #0]
 801a126:	b10b      	cbz	r3, 801a12c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801a128:	881c      	ldrh	r4, [r3, #0]
 801a12a:	e7e9      	b.n	801a100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801a12c:	680c      	ldr	r4, [r1, #0]
 801a12e:	2c00      	cmp	r4, #0
 801a130:	d0e6      	beq.n	801a100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801a132:	7824      	ldrb	r4, [r4, #0]
 801a134:	e7e4      	b.n	801a100 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801a136:	680b      	ldr	r3, [r1, #0]
 801a138:	b10b      	cbz	r3, 801a13e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801a13a:	781b      	ldrb	r3, [r3, #0]
 801a13c:	e7c5      	b.n	801a0ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801a13e:	2200      	movs	r2, #0
 801a140:	602a      	str	r2, [r5, #0]
 801a142:	240a      	movs	r4, #10
 801a144:	3b30      	subs	r3, #48	@ 0x30
 801a146:	b29e      	uxth	r6, r3
 801a148:	2e09      	cmp	r6, #9
 801a14a:	682a      	ldr	r2, [r5, #0]
 801a14c:	d813      	bhi.n	801a176 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801a14e:	fb04 3302 	mla	r3, r4, r2, r3
 801a152:	602b      	str	r3, [r5, #0]
 801a154:	6803      	ldr	r3, [r0, #0]
 801a156:	b10b      	cbz	r3, 801a15c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801a158:	3302      	adds	r3, #2
 801a15a:	6003      	str	r3, [r0, #0]
 801a15c:	680b      	ldr	r3, [r1, #0]
 801a15e:	b10b      	cbz	r3, 801a164 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801a160:	3301      	adds	r3, #1
 801a162:	600b      	str	r3, [r1, #0]
 801a164:	6803      	ldr	r3, [r0, #0]
 801a166:	b10b      	cbz	r3, 801a16c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801a168:	881b      	ldrh	r3, [r3, #0]
 801a16a:	e7eb      	b.n	801a144 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801a16c:	680b      	ldr	r3, [r1, #0]
 801a16e:	2b00      	cmp	r3, #0
 801a170:	d0e8      	beq.n	801a144 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801a172:	781b      	ldrb	r3, [r3, #0]
 801a174:	e7e6      	b.n	801a144 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801a176:	2a06      	cmp	r2, #6
 801a178:	bfa8      	it	ge
 801a17a:	2206      	movge	r2, #6
 801a17c:	602a      	str	r2, [r5, #0]
 801a17e:	e7b1      	b.n	801a0e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801a180 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801a180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a184:	b0a3      	sub	sp, #140	@ 0x8c
 801a186:	2600      	movs	r6, #0
 801a188:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 801a18c:	4607      	mov	r7, r0
 801a18e:	4688      	mov	r8, r1
 801a190:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801a194:	4631      	mov	r1, r6
 801a196:	2242      	movs	r2, #66	@ 0x42
 801a198:	4648      	mov	r0, r9
 801a19a:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 801a19c:	960d      	str	r6, [sp, #52]	@ 0x34
 801a19e:	f010 fbfc 	bl	802a99a <memset>
 801a1a2:	b15f      	cbz	r7, 801a1bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801a1a4:	f108 3aff 	add.w	sl, r8, #4294967295
 801a1a8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a1aa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a1ac:	b152      	cbz	r2, 801a1c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801a1ae:	8812      	ldrh	r2, [r2, #0]
 801a1b0:	b10a      	cbz	r2, 801a1b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801a1b2:	459a      	cmp	sl, r3
 801a1b4:	dc2e      	bgt.n	801a214 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801a1b6:	2200      	movs	r2, #0
 801a1b8:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801a1bc:	4638      	mov	r0, r7
 801a1be:	b023      	add	sp, #140	@ 0x8c
 801a1c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1c4:	9a08      	ldr	r2, [sp, #32]
 801a1c6:	2a00      	cmp	r2, #0
 801a1c8:	d0f5      	beq.n	801a1b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801a1ca:	7812      	ldrb	r2, [r2, #0]
 801a1cc:	e7f0      	b.n	801a1b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801a1ce:	2d00      	cmp	r5, #0
 801a1d0:	d0ea      	beq.n	801a1a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a1d2:	782a      	ldrb	r2, [r5, #0]
 801a1d4:	b142      	cbz	r2, 801a1e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801a1d6:	2a25      	cmp	r2, #37	@ 0x25
 801a1d8:	d001      	beq.n	801a1de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801a1da:	459a      	cmp	sl, r3
 801a1dc:	dc08      	bgt.n	801a1f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801a1de:	f1bb 0f00 	cmp.w	fp, #0
 801a1e2:	d121      	bne.n	801a228 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801a1e4:	2d00      	cmp	r5, #0
 801a1e6:	d0df      	beq.n	801a1a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a1e8:	782a      	ldrb	r2, [r5, #0]
 801a1ea:	f04f 0b00 	mov.w	fp, #0
 801a1ee:	e01d      	b.n	801a22c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801a1f0:	f1bb 0f00 	cmp.w	fp, #0
 801a1f4:	d078      	beq.n	801a2e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801a1f6:	f8bb 2000 	ldrh.w	r2, [fp]
 801a1fa:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801a1fe:	f1bb 0f00 	cmp.w	fp, #0
 801a202:	d002      	beq.n	801a20a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801a204:	f10b 0202 	add.w	r2, fp, #2
 801a208:	9209      	str	r2, [sp, #36]	@ 0x24
 801a20a:	b10d      	cbz	r5, 801a210 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801a20c:	3501      	adds	r5, #1
 801a20e:	9508      	str	r5, [sp, #32]
 801a210:	3301      	adds	r3, #1
 801a212:	930d      	str	r3, [sp, #52]	@ 0x34
 801a214:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801a218:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a21a:	f1bb 0f00 	cmp.w	fp, #0
 801a21e:	d0d6      	beq.n	801a1ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801a220:	f8bb 2000 	ldrh.w	r2, [fp]
 801a224:	2a00      	cmp	r2, #0
 801a226:	d1d6      	bne.n	801a1d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801a228:	f8bb 2000 	ldrh.w	r2, [fp]
 801a22c:	2a00      	cmp	r2, #0
 801a22e:	d0bb      	beq.n	801a1a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a230:	459a      	cmp	sl, r3
 801a232:	ddb9      	ble.n	801a1a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a234:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 801a238:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 801a23c:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 801a240:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 801a244:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 801a248:	960e      	str	r6, [sp, #56]	@ 0x38
 801a24a:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 801a24e:	960f      	str	r6, [sp, #60]	@ 0x3c
 801a250:	f1bb 0f00 	cmp.w	fp, #0
 801a254:	d002      	beq.n	801a25c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801a256:	f10b 0302 	add.w	r3, fp, #2
 801a25a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a25c:	b10d      	cbz	r5, 801a262 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801a25e:	1c6b      	adds	r3, r5, #1
 801a260:	9308      	str	r3, [sp, #32]
 801a262:	ab0f      	add	r3, sp, #60	@ 0x3c
 801a264:	9305      	str	r3, [sp, #20]
 801a266:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 801a26a:	9304      	str	r3, [sp, #16]
 801a26c:	ab0e      	add	r3, sp, #56	@ 0x38
 801a26e:	9303      	str	r3, [sp, #12]
 801a270:	ab0c      	add	r3, sp, #48	@ 0x30
 801a272:	9302      	str	r3, [sp, #8]
 801a274:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 801a278:	9301      	str	r3, [sp, #4]
 801a27a:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 801a27e:	9300      	str	r3, [sp, #0]
 801a280:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 801a284:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 801a288:	a908      	add	r1, sp, #32
 801a28a:	a809      	add	r0, sp, #36	@ 0x24
 801a28c:	f7ff fea8 	bl	8019fe0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801a290:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a292:	2b00      	cmp	r3, #0
 801a294:	bfbe      	ittt	lt
 801a296:	6823      	ldrlt	r3, [r4, #0]
 801a298:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801a29c:	930e      	strlt	r3, [sp, #56]	@ 0x38
 801a29e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a2a0:	bfb8      	it	lt
 801a2a2:	3404      	addlt	r4, #4
 801a2a4:	2b00      	cmp	r3, #0
 801a2a6:	bfb8      	it	lt
 801a2a8:	6823      	ldrlt	r3, [r4, #0]
 801a2aa:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a2ae:	bfbe      	ittt	lt
 801a2b0:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801a2b4:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 801a2b6:	3404      	addlt	r4, #4
 801a2b8:	b1d9      	cbz	r1, 801a2f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801a2ba:	880b      	ldrh	r3, [r1, #0]
 801a2bc:	2b69      	cmp	r3, #105	@ 0x69
 801a2be:	d01f      	beq.n	801a300 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a2c0:	d82f      	bhi.n	801a322 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801a2c2:	2b58      	cmp	r3, #88	@ 0x58
 801a2c4:	d01c      	beq.n	801a300 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a2c6:	d818      	bhi.n	801a2fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801a2c8:	2b25      	cmp	r3, #37	@ 0x25
 801a2ca:	d034      	beq.n	801a336 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801a2cc:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801a2d0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a2d2:	f1bb 0f00 	cmp.w	fp, #0
 801a2d6:	f000 80b8 	beq.w	801a44a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801a2da:	f8bb 5000 	ldrh.w	r5, [fp]
 801a2de:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801a2e2:	3301      	adds	r3, #1
 801a2e4:	930d      	str	r3, [sp, #52]	@ 0x34
 801a2e6:	e029      	b.n	801a33c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801a2e8:	b10d      	cbz	r5, 801a2ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801a2ea:	782a      	ldrb	r2, [r5, #0]
 801a2ec:	e785      	b.n	801a1fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801a2ee:	462a      	mov	r2, r5
 801a2f0:	e783      	b.n	801a1fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801a2f2:	2a00      	cmp	r2, #0
 801a2f4:	d0ea      	beq.n	801a2cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801a2f6:	7813      	ldrb	r3, [r2, #0]
 801a2f8:	e7e0      	b.n	801a2bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801a2fa:	3b63      	subs	r3, #99	@ 0x63
 801a2fc:	2b01      	cmp	r3, #1
 801a2fe:	d8e5      	bhi.n	801a2cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801a300:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 801a304:	b329      	cbz	r1, 801a352 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801a306:	880b      	ldrh	r3, [r1, #0]
 801a308:	2b69      	cmp	r3, #105	@ 0x69
 801a30a:	d063      	beq.n	801a3d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801a30c:	d825      	bhi.n	801a35a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801a30e:	2b63      	cmp	r3, #99	@ 0x63
 801a310:	d038      	beq.n	801a384 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801a312:	2b64      	cmp	r3, #100	@ 0x64
 801a314:	d05e      	beq.n	801a3d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801a316:	2b58      	cmp	r3, #88	@ 0x58
 801a318:	d07b      	beq.n	801a412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801a31a:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 801a31e:	4625      	mov	r5, r4
 801a320:	e036      	b.n	801a390 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a322:	2b73      	cmp	r3, #115	@ 0x73
 801a324:	d0ec      	beq.n	801a300 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a326:	d802      	bhi.n	801a32e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801a328:	2b6f      	cmp	r3, #111	@ 0x6f
 801a32a:	d1cf      	bne.n	801a2cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801a32c:	e7e8      	b.n	801a300 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a32e:	2b75      	cmp	r3, #117	@ 0x75
 801a330:	d0e6      	beq.n	801a300 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a332:	2b78      	cmp	r3, #120	@ 0x78
 801a334:	e7f9      	b.n	801a32a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801a336:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801a338:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801a33c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a33e:	b10b      	cbz	r3, 801a344 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801a340:	3302      	adds	r3, #2
 801a342:	9309      	str	r3, [sp, #36]	@ 0x24
 801a344:	9b08      	ldr	r3, [sp, #32]
 801a346:	2b00      	cmp	r3, #0
 801a348:	f43f af2e 	beq.w	801a1a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a34c:	3301      	adds	r3, #1
 801a34e:	9308      	str	r3, [sp, #32]
 801a350:	e72a      	b.n	801a1a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a352:	2a00      	cmp	r2, #0
 801a354:	d0e1      	beq.n	801a31a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801a356:	7813      	ldrb	r3, [r2, #0]
 801a358:	e7d6      	b.n	801a308 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801a35a:	2b73      	cmp	r3, #115	@ 0x73
 801a35c:	d036      	beq.n	801a3cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801a35e:	d807      	bhi.n	801a370 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801a360:	2b6f      	cmp	r3, #111	@ 0x6f
 801a362:	d1da      	bne.n	801a31a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801a364:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801a366:	1d25      	adds	r5, r4, #4
 801a368:	eba8 0202 	sub.w	r2, r8, r2
 801a36c:	2308      	movs	r3, #8
 801a36e:	e04a      	b.n	801a406 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801a370:	2b75      	cmp	r3, #117	@ 0x75
 801a372:	d043      	beq.n	801a3fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801a374:	2b78      	cmp	r3, #120	@ 0x78
 801a376:	d1d0      	bne.n	801a31a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801a378:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801a37a:	1d25      	adds	r5, r4, #4
 801a37c:	eba8 0202 	sub.w	r2, r8, r2
 801a380:	2310      	movs	r3, #16
 801a382:	e040      	b.n	801a406 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801a384:	6823      	ldr	r3, [r4, #0]
 801a386:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 801a38a:	1d25      	adds	r5, r4, #4
 801a38c:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 801a390:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a392:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 801a396:	2b00      	cmp	r3, #0
 801a398:	d052      	beq.n	801a440 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801a39a:	881a      	ldrh	r2, [r3, #0]
 801a39c:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 801a3a0:	a80d      	add	r0, sp, #52	@ 0x34
 801a3a2:	9005      	str	r0, [sp, #20]
 801a3a4:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 801a3a8:	9004      	str	r0, [sp, #16]
 801a3aa:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801a3ac:	9003      	str	r0, [sp, #12]
 801a3ae:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 801a3b2:	9002      	str	r0, [sp, #8]
 801a3b4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801a3b6:	9001      	str	r0, [sp, #4]
 801a3b8:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 801a3bc:	9000      	str	r0, [sp, #0]
 801a3be:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801a3c2:	a810      	add	r0, sp, #64	@ 0x40
 801a3c4:	f7ff fd49 	bl	8019e5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801a3c8:	462c      	mov	r4, r5
 801a3ca:	e7b7      	b.n	801a33c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801a3cc:	6823      	ldr	r3, [r4, #0]
 801a3ce:	1d25      	adds	r5, r4, #4
 801a3d0:	9310      	str	r3, [sp, #64]	@ 0x40
 801a3d2:	e7dd      	b.n	801a390 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a3d4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801a3d6:	6820      	ldr	r0, [r4, #0]
 801a3d8:	eba8 0202 	sub.w	r2, r8, r2
 801a3dc:	230a      	movs	r3, #10
 801a3de:	b292      	uxth	r2, r2
 801a3e0:	4649      	mov	r1, r9
 801a3e2:	f7ff fce1 	bl	8019da8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801a3e6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801a3ea:	2b2d      	cmp	r3, #45	@ 0x2d
 801a3ec:	f104 0504 	add.w	r5, r4, #4
 801a3f0:	d1ce      	bne.n	801a390 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a3f2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a3f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a3f8:	3302      	adds	r3, #2
 801a3fa:	e7e9      	b.n	801a3d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801a3fc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801a3fe:	1d25      	adds	r5, r4, #4
 801a400:	eba8 0202 	sub.w	r2, r8, r2
 801a404:	230a      	movs	r3, #10
 801a406:	b292      	uxth	r2, r2
 801a408:	4649      	mov	r1, r9
 801a40a:	6820      	ldr	r0, [r4, #0]
 801a40c:	f7ff fcf8 	bl	8019e00 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801a410:	e7be      	b.n	801a390 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a412:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801a414:	6820      	ldr	r0, [r4, #0]
 801a416:	eba8 0202 	sub.w	r2, r8, r2
 801a41a:	b292      	uxth	r2, r2
 801a41c:	2310      	movs	r3, #16
 801a41e:	4649      	mov	r1, r9
 801a420:	f7ff fcee 	bl	8019e00 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801a424:	1d25      	adds	r5, r4, #4
 801a426:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 801a42a:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801a42e:	2b00      	cmp	r3, #0
 801a430:	d0ae      	beq.n	801a390 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a432:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 801a436:	2919      	cmp	r1, #25
 801a438:	d8f7      	bhi.n	801a42a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801a43a:	3b20      	subs	r3, #32
 801a43c:	8013      	strh	r3, [r2, #0]
 801a43e:	e7f4      	b.n	801a42a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801a440:	9a08      	ldr	r2, [sp, #32]
 801a442:	2a00      	cmp	r2, #0
 801a444:	d0aa      	beq.n	801a39c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801a446:	7812      	ldrb	r2, [r2, #0]
 801a448:	e7a8      	b.n	801a39c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801a44a:	2d00      	cmp	r5, #0
 801a44c:	f43f af47 	beq.w	801a2de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801a450:	782d      	ldrb	r5, [r5, #0]
 801a452:	e744      	b.n	801a2de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801a454 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801a454:	b507      	push	{r0, r1, r2, lr}
 801a456:	9300      	str	r3, [sp, #0]
 801a458:	4613      	mov	r3, r2
 801a45a:	2200      	movs	r2, #0
 801a45c:	f7ff fe90 	bl	801a180 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801a460:	b003      	add	sp, #12
 801a462:	f85d fb04 	ldr.w	pc, [sp], #4

0801a466 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801a466:	b40c      	push	{r2, r3}
 801a468:	b507      	push	{r0, r1, r2, lr}
 801a46a:	ab04      	add	r3, sp, #16
 801a46c:	f853 2b04 	ldr.w	r2, [r3], #4
 801a470:	9301      	str	r3, [sp, #4]
 801a472:	f7ff ffef 	bl	801a454 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801a476:	b003      	add	sp, #12
 801a478:	f85d eb04 	ldr.w	lr, [sp], #4
 801a47c:	b002      	add	sp, #8
 801a47e:	4770      	bx	lr

0801a480 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801a480:	4b01      	ldr	r3, [pc, #4]	@ (801a488 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801a482:	6018      	str	r0, [r3, #0]
 801a484:	4770      	bx	lr
 801a486:	bf00      	nop
 801a488:	20013fb4 	.word	0x20013fb4

0801a48c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801a48c:	4b06      	ldr	r3, [pc, #24]	@ (801a4a8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801a48e:	881a      	ldrh	r2, [r3, #0]
 801a490:	4282      	cmp	r2, r0
 801a492:	d807      	bhi.n	801a4a4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801a494:	4b05      	ldr	r3, [pc, #20]	@ (801a4ac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801a496:	881b      	ldrh	r3, [r3, #0]
 801a498:	4413      	add	r3, r2
 801a49a:	4298      	cmp	r0, r3
 801a49c:	bfac      	ite	ge
 801a49e:	2000      	movge	r0, #0
 801a4a0:	2001      	movlt	r0, #1
 801a4a2:	4770      	bx	lr
 801a4a4:	2000      	movs	r0, #0
 801a4a6:	4770      	bx	lr
 801a4a8:	20013fd4 	.word	0x20013fd4
 801a4ac:	20013fd8 	.word	0x20013fd8

0801a4b0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801a4b0:	b508      	push	{r3, lr}
 801a4b2:	4601      	mov	r1, r0
 801a4b4:	f7ff ffea 	bl	801a48c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801a4b8:	b118      	cbz	r0, 801a4c2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801a4ba:	4b02      	ldr	r3, [pc, #8]	@ (801a4c4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801a4bc:	681b      	ldr	r3, [r3, #0]
 801a4be:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801a4c2:	bd08      	pop	{r3, pc}
 801a4c4:	20013fb8 	.word	0x20013fb8

0801a4c8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801a4c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a4ca:	4c24      	ldr	r4, [pc, #144]	@ (801a55c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801a4cc:	6823      	ldr	r3, [r4, #0]
 801a4ce:	2b00      	cmp	r3, #0
 801a4d0:	d042      	beq.n	801a558 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a4d2:	4a23      	ldr	r2, [pc, #140]	@ (801a560 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801a4d4:	4d23      	ldr	r5, [pc, #140]	@ (801a564 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801a4d6:	8811      	ldrh	r1, [r2, #0]
 801a4d8:	f8b5 c000 	ldrh.w	ip, [r5]
 801a4dc:	4822      	ldr	r0, [pc, #136]	@ (801a568 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801a4de:	4461      	add	r1, ip
 801a4e0:	1c4a      	adds	r2, r1, #1
 801a4e2:	f022 0201 	bic.w	r2, r2, #1
 801a4e6:	008f      	lsls	r7, r1, #2
 801a4e8:	0412      	lsls	r2, r2, #16
 801a4ea:	19de      	adds	r6, r3, r7
 801a4ec:	0c12      	lsrs	r2, r2, #16
 801a4ee:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801a4f2:	6006      	str	r6, [r0, #0]
 801a4f4:	4e1d      	ldr	r6, [pc, #116]	@ (801a56c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801a4f6:	19da      	adds	r2, r3, r7
 801a4f8:	6032      	str	r2, [r6, #0]
 801a4fa:	220e      	movs	r2, #14
 801a4fc:	fb02 f20c 	mul.w	r2, r2, ip
 801a500:	3203      	adds	r2, #3
 801a502:	f022 0203 	bic.w	r2, r2, #3
 801a506:	443a      	add	r2, r7
 801a508:	4f19      	ldr	r7, [pc, #100]	@ (801a570 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801a50a:	4413      	add	r3, r2
 801a50c:	603b      	str	r3, [r7, #0]
 801a50e:	4f19      	ldr	r7, [pc, #100]	@ (801a574 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801a510:	2300      	movs	r3, #0
 801a512:	803b      	strh	r3, [r7, #0]
 801a514:	4f18      	ldr	r7, [pc, #96]	@ (801a578 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801a516:	683f      	ldr	r7, [r7, #0]
 801a518:	1aba      	subs	r2, r7, r2
 801a51a:	4f18      	ldr	r7, [pc, #96]	@ (801a57c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801a51c:	603a      	str	r2, [r7, #0]
 801a51e:	4a18      	ldr	r2, [pc, #96]	@ (801a580 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801a520:	469c      	mov	ip, r3
 801a522:	8013      	strh	r3, [r2, #0]
 801a524:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 801a528:	428b      	cmp	r3, r1
 801a52a:	d10d      	bne.n	801a548 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801a52c:	882d      	ldrh	r5, [r5, #0]
 801a52e:	6830      	ldr	r0, [r6, #0]
 801a530:	2300      	movs	r3, #0
 801a532:	240e      	movs	r4, #14
 801a534:	429d      	cmp	r5, r3
 801a536:	d90f      	bls.n	801a558 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a538:	fb04 0203 	mla	r2, r4, r3, r0
 801a53c:	3301      	adds	r3, #1
 801a53e:	7b11      	ldrb	r1, [r2, #12]
 801a540:	f36f 1145 	bfc	r1, #5, #1
 801a544:	7311      	strb	r1, [r2, #12]
 801a546:	e7f5      	b.n	801a534 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801a548:	6822      	ldr	r2, [r4, #0]
 801a54a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801a54e:	6802      	ldr	r2, [r0, #0]
 801a550:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801a554:	3301      	adds	r3, #1
 801a556:	e7e7      	b.n	801a528 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801a558:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a55a:	bf00      	nop
 801a55c:	20013fb8 	.word	0x20013fb8
 801a560:	20013fd4 	.word	0x20013fd4
 801a564:	20013fd8 	.word	0x20013fd8
 801a568:	20013fcc 	.word	0x20013fcc
 801a56c:	20013fbc 	.word	0x20013fbc
 801a570:	20013fc4 	.word	0x20013fc4
 801a574:	20013fd6 	.word	0x20013fd6
 801a578:	20013fc0 	.word	0x20013fc0
 801a57c:	20013fd0 	.word	0x20013fd0
 801a580:	20013fc8 	.word	0x20013fc8

0801a584 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801a584:	4b06      	ldr	r3, [pc, #24]	@ (801a5a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801a586:	681b      	ldr	r3, [r3, #0]
 801a588:	b943      	cbnz	r3, 801a59c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a58a:	b139      	cbz	r1, 801a59c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a58c:	4b05      	ldr	r3, [pc, #20]	@ (801a5a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801a58e:	801a      	strh	r2, [r3, #0]
 801a590:	4b05      	ldr	r3, [pc, #20]	@ (801a5a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801a592:	6019      	str	r1, [r3, #0]
 801a594:	4b05      	ldr	r3, [pc, #20]	@ (801a5ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801a596:	6018      	str	r0, [r3, #0]
 801a598:	f7ff bf96 	b.w	801a4c8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801a59c:	4770      	bx	lr
 801a59e:	bf00      	nop
 801a5a0:	20013fc4 	.word	0x20013fc4
 801a5a4:	20013fd8 	.word	0x20013fd8
 801a5a8:	20013fc0 	.word	0x20013fc0
 801a5ac:	20013fb8 	.word	0x20013fb8

0801a5b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801a5b0:	b470      	push	{r4, r5, r6}
 801a5b2:	4c07      	ldr	r4, [pc, #28]	@ (801a5d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801a5b4:	6826      	ldr	r6, [r4, #0]
 801a5b6:	4605      	mov	r5, r0
 801a5b8:	4610      	mov	r0, r2
 801a5ba:	9a03      	ldr	r2, [sp, #12]
 801a5bc:	b936      	cbnz	r6, 801a5cc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801a5be:	6025      	str	r5, [r4, #0]
 801a5c0:	4c04      	ldr	r4, [pc, #16]	@ (801a5d4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801a5c2:	8021      	strh	r1, [r4, #0]
 801a5c4:	bc70      	pop	{r4, r5, r6}
 801a5c6:	4619      	mov	r1, r3
 801a5c8:	f7ff bfdc 	b.w	801a584 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801a5cc:	bc70      	pop	{r4, r5, r6}
 801a5ce:	4770      	bx	lr
 801a5d0:	20013fdc 	.word	0x20013fdc
 801a5d4:	20013fd4 	.word	0x20013fd4

0801a5d8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801a5d8:	4a12      	ldr	r2, [pc, #72]	@ (801a624 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801a5da:	8803      	ldrh	r3, [r0, #0]
 801a5dc:	8812      	ldrh	r2, [r2, #0]
 801a5de:	4293      	cmp	r3, r2
 801a5e0:	d207      	bcs.n	801a5f2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801a5e2:	4a11      	ldr	r2, [pc, #68]	@ (801a628 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801a5e4:	6812      	ldr	r2, [r2, #0]
 801a5e6:	2114      	movs	r1, #20
 801a5e8:	fb01 2303 	mla	r3, r1, r3, r2
 801a5ec:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801a5f0:	4770      	bx	lr
 801a5f2:	490e      	ldr	r1, [pc, #56]	@ (801a62c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801a5f4:	8809      	ldrh	r1, [r1, #0]
 801a5f6:	4411      	add	r1, r2
 801a5f8:	428b      	cmp	r3, r1
 801a5fa:	da04      	bge.n	801a606 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801a5fc:	1a9b      	subs	r3, r3, r2
 801a5fe:	4a0c      	ldr	r2, [pc, #48]	@ (801a630 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801a600:	210e      	movs	r1, #14
 801a602:	6812      	ldr	r2, [r2, #0]
 801a604:	e7f0      	b.n	801a5e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801a606:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801a60a:	4293      	cmp	r3, r2
 801a60c:	d108      	bne.n	801a620 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801a60e:	4b09      	ldr	r3, [pc, #36]	@ (801a634 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801a610:	781b      	ldrb	r3, [r3, #0]
 801a612:	b91b      	cbnz	r3, 801a61c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801a614:	4b08      	ldr	r3, [pc, #32]	@ (801a638 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801a616:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a61a:	4770      	bx	lr
 801a61c:	4b07      	ldr	r3, [pc, #28]	@ (801a63c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801a61e:	e7fa      	b.n	801a616 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801a620:	2000      	movs	r0, #0
 801a622:	4770      	bx	lr
 801a624:	20013fd4 	.word	0x20013fd4
 801a628:	20013fdc 	.word	0x20013fdc
 801a62c:	20013fd8 	.word	0x20013fd8
 801a630:	20013fbc 	.word	0x20013fbc
 801a634:	20013f44 	.word	0x20013f44
 801a638:	20013f46 	.word	0x20013f46
 801a63c:	20013f48 	.word	0x20013f48

0801a640 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801a640:	4a12      	ldr	r2, [pc, #72]	@ (801a68c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801a642:	8803      	ldrh	r3, [r0, #0]
 801a644:	8812      	ldrh	r2, [r2, #0]
 801a646:	4293      	cmp	r3, r2
 801a648:	d207      	bcs.n	801a65a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801a64a:	4a11      	ldr	r2, [pc, #68]	@ (801a690 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801a64c:	6812      	ldr	r2, [r2, #0]
 801a64e:	2114      	movs	r1, #20
 801a650:	fb01 2303 	mla	r3, r1, r3, r2
 801a654:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801a658:	4770      	bx	lr
 801a65a:	490e      	ldr	r1, [pc, #56]	@ (801a694 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801a65c:	8809      	ldrh	r1, [r1, #0]
 801a65e:	4411      	add	r1, r2
 801a660:	428b      	cmp	r3, r1
 801a662:	da04      	bge.n	801a66e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801a664:	1a9b      	subs	r3, r3, r2
 801a666:	4a0c      	ldr	r2, [pc, #48]	@ (801a698 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801a668:	210e      	movs	r1, #14
 801a66a:	6812      	ldr	r2, [r2, #0]
 801a66c:	e7f0      	b.n	801a650 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801a66e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801a672:	4293      	cmp	r3, r2
 801a674:	d108      	bne.n	801a688 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801a676:	4b09      	ldr	r3, [pc, #36]	@ (801a69c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801a678:	781b      	ldrb	r3, [r3, #0]
 801a67a:	b91b      	cbnz	r3, 801a684 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801a67c:	4b08      	ldr	r3, [pc, #32]	@ (801a6a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801a67e:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a682:	4770      	bx	lr
 801a684:	4b07      	ldr	r3, [pc, #28]	@ (801a6a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801a686:	e7fa      	b.n	801a67e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801a688:	2000      	movs	r0, #0
 801a68a:	4770      	bx	lr
 801a68c:	20013fd4 	.word	0x20013fd4
 801a690:	20013fdc 	.word	0x20013fdc
 801a694:	20013fd8 	.word	0x20013fd8
 801a698:	20013fbc 	.word	0x20013fbc
 801a69c:	20013f44 	.word	0x20013f44
 801a6a0:	20013f48 	.word	0x20013f48
 801a6a4:	20013f46 	.word	0x20013f46

0801a6a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801a6a8:	b530      	push	{r4, r5, lr}
 801a6aa:	4a22      	ldr	r2, [pc, #136]	@ (801a734 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801a6ac:	880b      	ldrh	r3, [r1, #0]
 801a6ae:	8812      	ldrh	r2, [r2, #0]
 801a6b0:	4293      	cmp	r3, r2
 801a6b2:	d213      	bcs.n	801a6dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801a6b4:	4a20      	ldr	r2, [pc, #128]	@ (801a738 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801a6b6:	6812      	ldr	r2, [r2, #0]
 801a6b8:	2114      	movs	r1, #20
 801a6ba:	fb01 2303 	mla	r3, r1, r3, r2
 801a6be:	8a1a      	ldrh	r2, [r3, #16]
 801a6c0:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801a6c4:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801a6c8:	8a5b      	ldrh	r3, [r3, #18]
 801a6ca:	8004      	strh	r4, [r0, #0]
 801a6cc:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a6d0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801a6d4:	8041      	strh	r1, [r0, #2]
 801a6d6:	8082      	strh	r2, [r0, #4]
 801a6d8:	80c3      	strh	r3, [r0, #6]
 801a6da:	e024      	b.n	801a726 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 801a6dc:	4917      	ldr	r1, [pc, #92]	@ (801a73c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801a6de:	8809      	ldrh	r1, [r1, #0]
 801a6e0:	4411      	add	r1, r2
 801a6e2:	428b      	cmp	r3, r1
 801a6e4:	da10      	bge.n	801a708 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801a6e6:	1a9b      	subs	r3, r3, r2
 801a6e8:	220e      	movs	r2, #14
 801a6ea:	4353      	muls	r3, r2
 801a6ec:	4a14      	ldr	r2, [pc, #80]	@ (801a740 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801a6ee:	6811      	ldr	r1, [r2, #0]
 801a6f0:	18ca      	adds	r2, r1, r3
 801a6f2:	5ecd      	ldrsh	r5, [r1, r3]
 801a6f4:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 801a6f8:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 801a6fc:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 801a700:	8005      	strh	r5, [r0, #0]
 801a702:	8044      	strh	r4, [r0, #2]
 801a704:	8081      	strh	r1, [r0, #4]
 801a706:	e7e7      	b.n	801a6d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801a708:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801a70c:	4293      	cmp	r3, r2
 801a70e:	d10b      	bne.n	801a728 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 801a710:	4b0c      	ldr	r3, [pc, #48]	@ (801a744 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801a712:	f9b3 1000 	ldrsh.w	r1, [r3]
 801a716:	4b0c      	ldr	r3, [pc, #48]	@ (801a748 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801a718:	8081      	strh	r1, [r0, #4]
 801a71a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a71e:	80c2      	strh	r2, [r0, #6]
 801a720:	2300      	movs	r3, #0
 801a722:	8003      	strh	r3, [r0, #0]
 801a724:	8043      	strh	r3, [r0, #2]
 801a726:	bd30      	pop	{r4, r5, pc}
 801a728:	2300      	movs	r3, #0
 801a72a:	8003      	strh	r3, [r0, #0]
 801a72c:	8043      	strh	r3, [r0, #2]
 801a72e:	8083      	strh	r3, [r0, #4]
 801a730:	e7d2      	b.n	801a6d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801a732:	bf00      	nop
 801a734:	20013fd4 	.word	0x20013fd4
 801a738:	20013fdc 	.word	0x20013fdc
 801a73c:	20013fd8 	.word	0x20013fd8
 801a740:	20013fbc 	.word	0x20013fbc
 801a744:	20013f40 	.word	0x20013f40
 801a748:	20013f42 	.word	0x20013f42

0801a74c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801a74c:	4a17      	ldr	r2, [pc, #92]	@ (801a7ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801a74e:	8803      	ldrh	r3, [r0, #0]
 801a750:	8812      	ldrh	r2, [r2, #0]
 801a752:	4293      	cmp	r3, r2
 801a754:	d213      	bcs.n	801a77e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801a756:	4a16      	ldr	r2, [pc, #88]	@ (801a7b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801a758:	6812      	ldr	r2, [r2, #0]
 801a75a:	2114      	movs	r1, #20
 801a75c:	fb01 2303 	mla	r3, r1, r3, r2
 801a760:	8a1a      	ldrh	r2, [r3, #16]
 801a762:	8919      	ldrh	r1, [r3, #8]
 801a764:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a768:	428a      	cmp	r2, r1
 801a76a:	db1d      	blt.n	801a7a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a76c:	8a58      	ldrh	r0, [r3, #18]
 801a76e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801a772:	895b      	ldrh	r3, [r3, #10]
 801a774:	4298      	cmp	r0, r3
 801a776:	bfac      	ite	ge
 801a778:	2000      	movge	r0, #0
 801a77a:	2001      	movlt	r0, #1
 801a77c:	4770      	bx	lr
 801a77e:	490d      	ldr	r1, [pc, #52]	@ (801a7b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801a780:	8809      	ldrh	r1, [r1, #0]
 801a782:	4411      	add	r1, r2
 801a784:	428b      	cmp	r3, r1
 801a786:	da0d      	bge.n	801a7a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801a788:	1a9b      	subs	r3, r3, r2
 801a78a:	4a0b      	ldr	r2, [pc, #44]	@ (801a7b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801a78c:	6812      	ldr	r2, [r2, #0]
 801a78e:	210e      	movs	r1, #14
 801a790:	fb01 2303 	mla	r3, r1, r3, r2
 801a794:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801a798:	891a      	ldrh	r2, [r3, #8]
 801a79a:	4291      	cmp	r1, r2
 801a79c:	db04      	blt.n	801a7a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a79e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801a7a2:	e7e6      	b.n	801a772 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801a7a4:	2000      	movs	r0, #0
 801a7a6:	4770      	bx	lr
 801a7a8:	2001      	movs	r0, #1
 801a7aa:	4770      	bx	lr
 801a7ac:	20013fd4 	.word	0x20013fd4
 801a7b0:	20013fdc 	.word	0x20013fdc
 801a7b4:	20013fd8 	.word	0x20013fd8
 801a7b8:	20013fbc 	.word	0x20013fbc

0801a7bc <_ZNK8touchgfx6Bitmap7getDataEv>:
 801a7bc:	4a12      	ldr	r2, [pc, #72]	@ (801a808 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801a7be:	8803      	ldrh	r3, [r0, #0]
 801a7c0:	8811      	ldrh	r1, [r2, #0]
 801a7c2:	428b      	cmp	r3, r1
 801a7c4:	d20b      	bcs.n	801a7de <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801a7c6:	4a11      	ldr	r2, [pc, #68]	@ (801a80c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a7c8:	6812      	ldr	r2, [r2, #0]
 801a7ca:	b112      	cbz	r2, 801a7d2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801a7cc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a7d0:	b9c0      	cbnz	r0, 801a804 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801a7d2:	4a0f      	ldr	r2, [pc, #60]	@ (801a810 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801a7d4:	6811      	ldr	r1, [r2, #0]
 801a7d6:	2214      	movs	r2, #20
 801a7d8:	4353      	muls	r3, r2
 801a7da:	58c8      	ldr	r0, [r1, r3]
 801a7dc:	4770      	bx	lr
 801a7de:	4a0d      	ldr	r2, [pc, #52]	@ (801a814 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801a7e0:	8812      	ldrh	r2, [r2, #0]
 801a7e2:	440a      	add	r2, r1
 801a7e4:	4293      	cmp	r3, r2
 801a7e6:	da04      	bge.n	801a7f2 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801a7e8:	4a08      	ldr	r2, [pc, #32]	@ (801a80c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a7ea:	6812      	ldr	r2, [r2, #0]
 801a7ec:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a7f0:	4770      	bx	lr
 801a7f2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801a7f6:	4293      	cmp	r3, r2
 801a7f8:	d103      	bne.n	801a802 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801a7fa:	4b07      	ldr	r3, [pc, #28]	@ (801a818 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801a7fc:	681b      	ldr	r3, [r3, #0]
 801a7fe:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 801a800:	4770      	bx	lr
 801a802:	2000      	movs	r0, #0
 801a804:	4770      	bx	lr
 801a806:	bf00      	nop
 801a808:	20013fd4 	.word	0x20013fd4
 801a80c:	20013fb8 	.word	0x20013fb8
 801a810:	20013fdc 	.word	0x20013fdc
 801a814:	20013fd8 	.word	0x20013fd8
 801a818:	20013f4c 	.word	0x20013f4c

0801a81c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801a81c:	4b24      	ldr	r3, [pc, #144]	@ (801a8b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801a81e:	8802      	ldrh	r2, [r0, #0]
 801a820:	8818      	ldrh	r0, [r3, #0]
 801a822:	4282      	cmp	r2, r0
 801a824:	d221      	bcs.n	801a86a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801a826:	4b23      	ldr	r3, [pc, #140]	@ (801a8b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801a828:	6819      	ldr	r1, [r3, #0]
 801a82a:	2314      	movs	r3, #20
 801a82c:	fb03 1302 	mla	r3, r3, r2, r1
 801a830:	6858      	ldr	r0, [r3, #4]
 801a832:	2800      	cmp	r0, #0
 801a834:	d03a      	beq.n	801a8ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a836:	4920      	ldr	r1, [pc, #128]	@ (801a8b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a838:	6809      	ldr	r1, [r1, #0]
 801a83a:	2900      	cmp	r1, #0
 801a83c:	d036      	beq.n	801a8ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a83e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801a842:	2900      	cmp	r1, #0
 801a844:	d032      	beq.n	801a8ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a846:	891a      	ldrh	r2, [r3, #8]
 801a848:	8958      	ldrh	r0, [r3, #10]
 801a84a:	4350      	muls	r0, r2
 801a84c:	7c5a      	ldrb	r2, [r3, #17]
 801a84e:	7cdb      	ldrb	r3, [r3, #19]
 801a850:	0952      	lsrs	r2, r2, #5
 801a852:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801a856:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801a85a:	2b0b      	cmp	r3, #11
 801a85c:	bf18      	it	ne
 801a85e:	0040      	lslne	r0, r0, #1
 801a860:	3003      	adds	r0, #3
 801a862:	f020 0003 	bic.w	r0, r0, #3
 801a866:	4408      	add	r0, r1
 801a868:	4770      	bx	lr
 801a86a:	4b14      	ldr	r3, [pc, #80]	@ (801a8bc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801a86c:	881b      	ldrh	r3, [r3, #0]
 801a86e:	4403      	add	r3, r0
 801a870:	429a      	cmp	r2, r3
 801a872:	da1a      	bge.n	801a8aa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a874:	4b12      	ldr	r3, [pc, #72]	@ (801a8c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801a876:	681b      	ldr	r3, [r3, #0]
 801a878:	1a10      	subs	r0, r2, r0
 801a87a:	210e      	movs	r1, #14
 801a87c:	fb01 3000 	mla	r0, r1, r0, r3
 801a880:	7b03      	ldrb	r3, [r0, #12]
 801a882:	f003 031f 	and.w	r3, r3, #31
 801a886:	2b0b      	cmp	r3, #11
 801a888:	d10b      	bne.n	801a8a2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801a88a:	8903      	ldrh	r3, [r0, #8]
 801a88c:	8940      	ldrh	r0, [r0, #10]
 801a88e:	4358      	muls	r0, r3
 801a890:	4b09      	ldr	r3, [pc, #36]	@ (801a8b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a892:	6819      	ldr	r1, [r3, #0]
 801a894:	3003      	adds	r0, #3
 801a896:	f020 0303 	bic.w	r3, r0, #3
 801a89a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801a89e:	4418      	add	r0, r3
 801a8a0:	4770      	bx	lr
 801a8a2:	2b0d      	cmp	r3, #13
 801a8a4:	d101      	bne.n	801a8aa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a8a6:	300d      	adds	r0, #13
 801a8a8:	4770      	bx	lr
 801a8aa:	2000      	movs	r0, #0
 801a8ac:	4770      	bx	lr
 801a8ae:	bf00      	nop
 801a8b0:	20013fd4 	.word	0x20013fd4
 801a8b4:	20013fdc 	.word	0x20013fdc
 801a8b8:	20013fb8 	.word	0x20013fb8
 801a8bc:	20013fd8 	.word	0x20013fd8
 801a8c0:	20013fbc 	.word	0x20013fbc

0801a8c4 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801a8c4:	b510      	push	{r4, lr}
 801a8c6:	4b1f      	ldr	r3, [pc, #124]	@ (801a944 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 801a8c8:	8802      	ldrh	r2, [r0, #0]
 801a8ca:	881b      	ldrh	r3, [r3, #0]
 801a8cc:	429a      	cmp	r2, r3
 801a8ce:	d21a      	bcs.n	801a906 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 801a8d0:	4b1d      	ldr	r3, [pc, #116]	@ (801a948 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 801a8d2:	681b      	ldr	r3, [r3, #0]
 801a8d4:	2114      	movs	r1, #20
 801a8d6:	fb01 3102 	mla	r1, r1, r2, r3
 801a8da:	7c4b      	ldrb	r3, [r1, #17]
 801a8dc:	0958      	lsrs	r0, r3, #5
 801a8de:	7ccb      	ldrb	r3, [r1, #19]
 801a8e0:	491a      	ldr	r1, [pc, #104]	@ (801a94c <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 801a8e2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801a8e6:	6809      	ldr	r1, [r1, #0]
 801a8e8:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 801a8ec:	b2d8      	uxtb	r0, r3
 801a8ee:	b149      	cbz	r1, 801a904 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801a8f0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 801a8f4:	b132      	cbz	r2, 801a904 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801a8f6:	2b0e      	cmp	r3, #14
 801a8f8:	d021      	beq.n	801a93e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801a8fa:	280f      	cmp	r0, #15
 801a8fc:	d01d      	beq.n	801a93a <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 801a8fe:	2810      	cmp	r0, #16
 801a900:	bf08      	it	eq
 801a902:	2002      	moveq	r0, #2
 801a904:	bd10      	pop	{r4, pc}
 801a906:	4912      	ldr	r1, [pc, #72]	@ (801a950 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 801a908:	8809      	ldrh	r1, [r1, #0]
 801a90a:	4419      	add	r1, r3
 801a90c:	428a      	cmp	r2, r1
 801a90e:	da09      	bge.n	801a924 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 801a910:	1ad3      	subs	r3, r2, r3
 801a912:	4a10      	ldr	r2, [pc, #64]	@ (801a954 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 801a914:	6812      	ldr	r2, [r2, #0]
 801a916:	210e      	movs	r1, #14
 801a918:	fb01 2303 	mla	r3, r1, r3, r2
 801a91c:	7b18      	ldrb	r0, [r3, #12]
 801a91e:	f000 001f 	and.w	r0, r0, #31
 801a922:	e7ef      	b.n	801a904 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801a924:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 801a928:	429a      	cmp	r2, r3
 801a92a:	d108      	bne.n	801a93e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801a92c:	f7e8 fb54 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 801a930:	6803      	ldr	r3, [r0, #0]
 801a932:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a936:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a938:	4718      	bx	r3
 801a93a:	2001      	movs	r0, #1
 801a93c:	e7e2      	b.n	801a904 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801a93e:	2000      	movs	r0, #0
 801a940:	e7e0      	b.n	801a904 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801a942:	bf00      	nop
 801a944:	20013fd4 	.word	0x20013fd4
 801a948:	20013fdc 	.word	0x20013fdc
 801a94c:	20013fb8 	.word	0x20013fb8
 801a950:	20013fd8 	.word	0x20013fd8
 801a954:	20013fbc 	.word	0x20013fbc

0801a958 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801a958:	2010      	movs	r0, #16
 801a95a:	4770      	bx	lr

0801a95c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801a95c:	2000      	movs	r0, #0
 801a95e:	4770      	bx	lr

0801a960 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801a960:	4b02      	ldr	r3, [pc, #8]	@ (801a96c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801a962:	8818      	ldrh	r0, [r3, #0]
 801a964:	0040      	lsls	r0, r0, #1
 801a966:	b280      	uxth	r0, r0
 801a968:	4770      	bx	lr
 801a96a:	bf00      	nop
 801a96c:	20013f46 	.word	0x20013f46

0801a970 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801a970:	2bff      	cmp	r3, #255	@ 0xff
 801a972:	d05e      	beq.n	801aa32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 801a974:	2a0b      	cmp	r2, #11
 801a976:	d058      	beq.n	801aa2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801a978:	d80e      	bhi.n	801a998 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801a97a:	2a03      	cmp	r2, #3
 801a97c:	d04d      	beq.n	801aa1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 801a97e:	d804      	bhi.n	801a98a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801a980:	2a01      	cmp	r2, #1
 801a982:	d04c      	beq.n	801aa1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 801a984:	d94d      	bls.n	801aa22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 801a986:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 801a988:	e031      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a98a:	2a09      	cmp	r2, #9
 801a98c:	d04d      	beq.n	801aa2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801a98e:	d84a      	bhi.n	801aa26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801a990:	2a08      	cmp	r2, #8
 801a992:	d048      	beq.n	801aa26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801a994:	2300      	movs	r3, #0
 801a996:	e02a      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a998:	2a2f      	cmp	r2, #47	@ 0x2f
 801a99a:	d02c      	beq.n	801a9f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 801a99c:	d811      	bhi.n	801a9c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 801a99e:	2a2d      	cmp	r2, #45	@ 0x2d
 801a9a0:	d018      	beq.n	801a9d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 801a9a2:	d831      	bhi.n	801aa08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 801a9a4:	2a2c      	cmp	r2, #44	@ 0x2c
 801a9a6:	d1f5      	bne.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9a8:	684a      	ldr	r2, [r1, #4]
 801a9aa:	7813      	ldrb	r3, [r2, #0]
 801a9ac:	7852      	ldrb	r2, [r2, #1]
 801a9ae:	2a00      	cmp	r2, #0
 801a9b0:	d1f0      	bne.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9b2:	2b01      	cmp	r3, #1
 801a9b4:	d01d      	beq.n	801a9f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801a9b6:	2b00      	cmp	r3, #0
 801a9b8:	d02d      	beq.n	801aa16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801a9ba:	2b02      	cmp	r3, #2
 801a9bc:	d1ea      	bne.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9be:	68c3      	ldr	r3, [r0, #12]
 801a9c0:	e015      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a9c2:	2a31      	cmp	r2, #49	@ 0x31
 801a9c4:	d004      	beq.n	801a9d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 801a9c6:	d332      	bcc.n	801aa2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801a9c8:	2a32      	cmp	r2, #50	@ 0x32
 801a9ca:	d030      	beq.n	801aa2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801a9cc:	2a33      	cmp	r2, #51	@ 0x33
 801a9ce:	d1e1      	bne.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9d0:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 801a9d2:	e00c      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a9d4:	684a      	ldr	r2, [r1, #4]
 801a9d6:	7813      	ldrb	r3, [r2, #0]
 801a9d8:	7852      	ldrb	r2, [r2, #1]
 801a9da:	2a00      	cmp	r2, #0
 801a9dc:	d1da      	bne.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9de:	2b01      	cmp	r3, #1
 801a9e0:	d004      	beq.n	801a9ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 801a9e2:	d30f      	bcc.n	801aa04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 801a9e4:	2b02      	cmp	r3, #2
 801a9e6:	d1d5      	bne.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9e8:	6943      	ldr	r3, [r0, #20]
 801a9ea:	e000      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a9ec:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801a9ee:	4618      	mov	r0, r3
 801a9f0:	4770      	bx	lr
 801a9f2:	69c3      	ldr	r3, [r0, #28]
 801a9f4:	e7fb      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a9f6:	684b      	ldr	r3, [r1, #4]
 801a9f8:	781a      	ldrb	r2, [r3, #0]
 801a9fa:	785b      	ldrb	r3, [r3, #1]
 801a9fc:	2b00      	cmp	r3, #0
 801a9fe:	d1c9      	bne.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aa00:	2a00      	cmp	r2, #0
 801aa02:	d1f4      	bne.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa04:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801aa06:	e7f2      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa08:	684b      	ldr	r3, [r1, #4]
 801aa0a:	781a      	ldrb	r2, [r3, #0]
 801aa0c:	785b      	ldrb	r3, [r3, #1]
 801aa0e:	2b00      	cmp	r3, #0
 801aa10:	d1c0      	bne.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aa12:	2a00      	cmp	r2, #0
 801aa14:	d1eb      	bne.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa16:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801aa18:	e7e9      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa1a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 801aa1c:	e7e7      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa1e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 801aa20:	e7e5      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa22:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801aa24:	e7e3      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa26:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 801aa28:	e7e1      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa2a:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 801aa2c:	e7df      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa2e:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 801aa30:	e7dd      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa32:	2a0b      	cmp	r2, #11
 801aa34:	d059      	beq.n	801aaea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801aa36:	d80e      	bhi.n	801aa56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 801aa38:	2a03      	cmp	r2, #3
 801aa3a:	d050      	beq.n	801aade <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 801aa3c:	d804      	bhi.n	801aa48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 801aa3e:	2a01      	cmp	r2, #1
 801aa40:	d04f      	beq.n	801aae2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 801aa42:	d950      	bls.n	801aae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 801aa44:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 801aa46:	e7d2      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa48:	2a09      	cmp	r2, #9
 801aa4a:	d04e      	beq.n	801aaea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801aa4c:	d801      	bhi.n	801aa52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 801aa4e:	2a08      	cmp	r2, #8
 801aa50:	d1a0      	bne.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aa52:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 801aa54:	e7cb      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa56:	2a2f      	cmp	r2, #47	@ 0x2f
 801aa58:	d02d      	beq.n	801aab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 801aa5a:	d811      	bhi.n	801aa80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801aa5c:	2a2d      	cmp	r2, #45	@ 0x2d
 801aa5e:	d018      	beq.n	801aa92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 801aa60:	d833      	bhi.n	801aaca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 801aa62:	2a2c      	cmp	r2, #44	@ 0x2c
 801aa64:	d196      	bne.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aa66:	684a      	ldr	r2, [r1, #4]
 801aa68:	7813      	ldrb	r3, [r2, #0]
 801aa6a:	7852      	ldrb	r2, [r2, #1]
 801aa6c:	2a00      	cmp	r2, #0
 801aa6e:	d191      	bne.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aa70:	2b01      	cmp	r3, #1
 801aa72:	d01e      	beq.n	801aab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801aa74:	2b00      	cmp	r3, #0
 801aa76:	d030      	beq.n	801aada <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 801aa78:	2b02      	cmp	r3, #2
 801aa7a:	d18b      	bne.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aa7c:	6903      	ldr	r3, [r0, #16]
 801aa7e:	e7b6      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa80:	2a31      	cmp	r2, #49	@ 0x31
 801aa82:	d004      	beq.n	801aa8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 801aa84:	d333      	bcc.n	801aaee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801aa86:	2a32      	cmp	r2, #50	@ 0x32
 801aa88:	d031      	beq.n	801aaee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801aa8a:	2a33      	cmp	r2, #51	@ 0x33
 801aa8c:	d182      	bne.n	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aa8e:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 801aa90:	e7ad      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aa92:	684a      	ldr	r2, [r1, #4]
 801aa94:	7813      	ldrb	r3, [r2, #0]
 801aa96:	7852      	ldrb	r2, [r2, #1]
 801aa98:	2a00      	cmp	r2, #0
 801aa9a:	f47f af7b 	bne.w	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aa9e:	2b01      	cmp	r3, #1
 801aaa0:	d005      	beq.n	801aaae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801aaa2:	d310      	bcc.n	801aac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 801aaa4:	2b02      	cmp	r3, #2
 801aaa6:	f47f af75 	bne.w	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aaaa:	6983      	ldr	r3, [r0, #24]
 801aaac:	e79f      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aaae:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801aab0:	e79d      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aab2:	6a03      	ldr	r3, [r0, #32]
 801aab4:	e79b      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aab6:	684b      	ldr	r3, [r1, #4]
 801aab8:	781a      	ldrb	r2, [r3, #0]
 801aaba:	785b      	ldrb	r3, [r3, #1]
 801aabc:	2b00      	cmp	r3, #0
 801aabe:	f47f af69 	bne.w	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aac2:	2a00      	cmp	r2, #0
 801aac4:	d193      	bne.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aac6:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 801aac8:	e791      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aaca:	684b      	ldr	r3, [r1, #4]
 801aacc:	781a      	ldrb	r2, [r3, #0]
 801aace:	785b      	ldrb	r3, [r3, #1]
 801aad0:	2b00      	cmp	r3, #0
 801aad2:	f47f af5f 	bne.w	801a994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aad6:	2a00      	cmp	r2, #0
 801aad8:	d189      	bne.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aada:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801aadc:	e787      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aade:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 801aae0:	e785      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aae2:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 801aae4:	e783      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aae6:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 801aae8:	e781      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aaea:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 801aaec:	e77f      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aaee:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 801aaf0:	e77d      	b.n	801a9ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

0801aaf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aaf2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aaf6:	b087      	sub	sp, #28
 801aaf8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801aafa:	9205      	str	r2, [sp, #20]
 801aafc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801ab00:	9202      	str	r2, [sp, #8]
 801ab02:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801ab06:	9101      	str	r1, [sp, #4]
 801ab08:	6841      	ldr	r1, [r0, #4]
 801ab0a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801ab0e:	fb01 2404 	mla	r4, r1, r4, r2
 801ab12:	6802      	ldr	r2, [r0, #0]
 801ab14:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ab18:	f8de 2000 	ldr.w	r2, [lr]
 801ab1c:	9203      	str	r2, [sp, #12]
 801ab1e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801ab22:	3204      	adds	r2, #4
 801ab24:	9204      	str	r2, [sp, #16]
 801ab26:	9a02      	ldr	r2, [sp, #8]
 801ab28:	43d6      	mvns	r6, r2
 801ab2a:	b2f6      	uxtb	r6, r6
 801ab2c:	9a01      	ldr	r2, [sp, #4]
 801ab2e:	2a00      	cmp	r2, #0
 801ab30:	dc03      	bgt.n	801ab3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ab32:	9a05      	ldr	r2, [sp, #20]
 801ab34:	2a00      	cmp	r2, #0
 801ab36:	f340 8129 	ble.w	801ad8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ab3a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ab3c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ab40:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ab44:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801ab48:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ab4a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801ab4e:	2b00      	cmp	r3, #0
 801ab50:	dd0e      	ble.n	801ab70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ab52:	1408      	asrs	r0, r1, #16
 801ab54:	d405      	bmi.n	801ab62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ab56:	4560      	cmp	r0, ip
 801ab58:	da03      	bge.n	801ab62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ab5a:	1410      	asrs	r0, r2, #16
 801ab5c:	d401      	bmi.n	801ab62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ab5e:	42b8      	cmp	r0, r7
 801ab60:	db07      	blt.n	801ab72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ab62:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801ab64:	4401      	add	r1, r0
 801ab66:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ab68:	3b01      	subs	r3, #1
 801ab6a:	4402      	add	r2, r0
 801ab6c:	3402      	adds	r4, #2
 801ab6e:	e7ee      	b.n	801ab4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ab70:	d071      	beq.n	801ac56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ab72:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ab74:	1e58      	subs	r0, r3, #1
 801ab76:	fb05 1500 	mla	r5, r5, r0, r1
 801ab7a:	142d      	asrs	r5, r5, #16
 801ab7c:	d45f      	bmi.n	801ac3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ab7e:	4565      	cmp	r5, ip
 801ab80:	da5d      	bge.n	801ac3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ab82:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801ab84:	fb05 2000 	mla	r0, r5, r0, r2
 801ab88:	1400      	asrs	r0, r0, #16
 801ab8a:	d458      	bmi.n	801ac3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ab8c:	42b8      	cmp	r0, r7
 801ab8e:	da56      	bge.n	801ac3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ab90:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801ab94:	4699      	mov	r9, r3
 801ab96:	46a2      	mov	sl, r4
 801ab98:	f1b9 0f00 	cmp.w	r9, #0
 801ab9c:	dd57      	ble.n	801ac4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801ab9e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801aba2:	9803      	ldr	r0, [sp, #12]
 801aba4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801aba8:	140d      	asrs	r5, r1, #16
 801abaa:	fb07 000c 	mla	r0, r7, ip, r0
 801abae:	f109 39ff 	add.w	r9, r9, #4294967295
 801abb2:	5d40      	ldrb	r0, [r0, r5]
 801abb4:	9d04      	ldr	r5, [sp, #16]
 801abb6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801abba:	f8ba 5000 	ldrh.w	r5, [sl]
 801abbe:	122f      	asrs	r7, r5, #8
 801abc0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801abc4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801abc8:	fb17 f706 	smulbb	r7, r7, r6
 801abcc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801abd0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801abd4:	00ed      	lsls	r5, r5, #3
 801abd6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801abda:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801abde:	10c7      	asrs	r7, r0, #3
 801abe0:	b2ed      	uxtb	r5, r5
 801abe2:	00c0      	lsls	r0, r0, #3
 801abe4:	fb18 f806 	smulbb	r8, r8, r6
 801abe8:	fb15 f506 	smulbb	r5, r5, r6
 801abec:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801abf0:	b2c0      	uxtb	r0, r0
 801abf2:	fa1f fc8c 	uxth.w	ip, ip
 801abf6:	fb07 870b 	mla	r7, r7, fp, r8
 801abfa:	fb00 500b 	mla	r0, r0, fp, r5
 801abfe:	b280      	uxth	r0, r0
 801ac00:	b2bf      	uxth	r7, r7
 801ac02:	f10c 0501 	add.w	r5, ip, #1
 801ac06:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ac0a:	f107 0801 	add.w	r8, r7, #1
 801ac0e:	1c45      	adds	r5, r0, #1
 801ac10:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ac14:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801ac18:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801ac1a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801ac1e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ac22:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ac26:	ea45 0c0c 	orr.w	ip, r5, ip
 801ac2a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801ac2e:	4401      	add	r1, r0
 801ac30:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ac32:	ea4c 0c08 	orr.w	ip, ip, r8
 801ac36:	f82a cb02 	strh.w	ip, [sl], #2
 801ac3a:	4402      	add	r2, r0
 801ac3c:	e7ac      	b.n	801ab98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ac3e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801ac42:	f04f 0800 	mov.w	r8, #0
 801ac46:	eb03 0008 	add.w	r0, r3, r8
 801ac4a:	2800      	cmp	r0, #0
 801ac4c:	dc41      	bgt.n	801acd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ac4e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ac52:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ac56:	9b01      	ldr	r3, [sp, #4]
 801ac58:	2b00      	cmp	r3, #0
 801ac5a:	f340 8097 	ble.w	801ad8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ac5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ac62:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ac66:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ac6a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ac6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ac70:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ac74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ac78:	eef0 6a62 	vmov.f32	s13, s5
 801ac7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ac80:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ac84:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ac88:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801ac8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ac90:	eef0 6a43 	vmov.f32	s13, s6
 801ac94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ac98:	ee12 2a90 	vmov	r2, s5
 801ac9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aca0:	fb92 f3f3 	sdiv	r3, r2, r3
 801aca4:	ee13 2a10 	vmov	r2, s6
 801aca8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801acaa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801acac:	fb92 f3f3 	sdiv	r3, r2, r3
 801acb0:	9314      	str	r3, [sp, #80]	@ 0x50
 801acb2:	9b01      	ldr	r3, [sp, #4]
 801acb4:	9a05      	ldr	r2, [sp, #20]
 801acb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801acba:	3b01      	subs	r3, #1
 801acbc:	9301      	str	r3, [sp, #4]
 801acbe:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801acc2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801acc4:	eeb0 3a67 	vmov.f32	s6, s15
 801acc8:	bf08      	it	eq
 801acca:	4613      	moveq	r3, r2
 801accc:	eef0 2a47 	vmov.f32	s5, s14
 801acd0:	e72c      	b.n	801ab2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801acd2:	140f      	asrs	r7, r1, #16
 801acd4:	d453      	bmi.n	801ad7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801acd6:	f8de 5008 	ldr.w	r5, [lr, #8]
 801acda:	42bd      	cmp	r5, r7
 801acdc:	dd4f      	ble.n	801ad7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801acde:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ace2:	d44c      	bmi.n	801ad7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ace4:	f8de 000c 	ldr.w	r0, [lr, #12]
 801ace8:	4560      	cmp	r0, ip
 801acea:	dd48      	ble.n	801ad7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801acec:	9803      	ldr	r0, [sp, #12]
 801acee:	b22d      	sxth	r5, r5
 801acf0:	fb0c 0505 	mla	r5, ip, r5, r0
 801acf4:	5de8      	ldrb	r0, [r5, r7]
 801acf6:	9d04      	ldr	r5, [sp, #16]
 801acf8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801acfc:	f06f 0501 	mvn.w	r5, #1
 801ad00:	fb05 fb08 	mul.w	fp, r5, r8
 801ad04:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ad08:	f834 500b 	ldrh.w	r5, [r4, fp]
 801ad0c:	122f      	asrs	r7, r5, #8
 801ad0e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ad12:	fb17 f706 	smulbb	r7, r7, r6
 801ad16:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ad1a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ad1e:	00ed      	lsls	r5, r5, #3
 801ad20:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801ad24:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801ad28:	10c7      	asrs	r7, r0, #3
 801ad2a:	b2ed      	uxtb	r5, r5
 801ad2c:	00c0      	lsls	r0, r0, #3
 801ad2e:	fb19 f906 	smulbb	r9, r9, r6
 801ad32:	fb15 f506 	smulbb	r5, r5, r6
 801ad36:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ad3a:	b2c0      	uxtb	r0, r0
 801ad3c:	fa1f fc8c 	uxth.w	ip, ip
 801ad40:	fb07 970a 	mla	r7, r7, sl, r9
 801ad44:	fb00 500a 	mla	r0, r0, sl, r5
 801ad48:	b2bf      	uxth	r7, r7
 801ad4a:	b280      	uxth	r0, r0
 801ad4c:	f10c 0501 	add.w	r5, ip, #1
 801ad50:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ad54:	f107 0901 	add.w	r9, r7, #1
 801ad58:	1c45      	adds	r5, r0, #1
 801ad5a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ad5e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801ad62:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801ad66:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ad6a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ad6e:	ea45 0c0c 	orr.w	ip, r5, ip
 801ad72:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801ad76:	ea4c 0c09 	orr.w	ip, ip, r9
 801ad7a:	f824 c00b 	strh.w	ip, [r4, fp]
 801ad7e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801ad80:	4401      	add	r1, r0
 801ad82:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801ad84:	f108 38ff 	add.w	r8, r8, #4294967295
 801ad88:	4402      	add	r2, r0
 801ad8a:	e75c      	b.n	801ac46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801ad8c:	b007      	add	sp, #28
 801ad8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ad92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad96:	b085      	sub	sp, #20
 801ad98:	4693      	mov	fp, r2
 801ad9a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801ad9c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ad9e:	6870      	ldr	r0, [r6, #4]
 801ada0:	9100      	str	r1, [sp, #0]
 801ada2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801ada6:	fb00 2404 	mla	r4, r0, r4, r2
 801adaa:	6832      	ldr	r2, [r6, #0]
 801adac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801adb0:	682a      	ldr	r2, [r5, #0]
 801adb2:	9201      	str	r2, [sp, #4]
 801adb4:	686a      	ldr	r2, [r5, #4]
 801adb6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801adba:	3204      	adds	r2, #4
 801adbc:	9202      	str	r2, [sp, #8]
 801adbe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801adc2:	9a00      	ldr	r2, [sp, #0]
 801adc4:	2a00      	cmp	r2, #0
 801adc6:	dc03      	bgt.n	801add0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801adc8:	f1bb 0f00 	cmp.w	fp, #0
 801adcc:	f340 80a0 	ble.w	801af10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801add0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801add2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801add6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801adda:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801adde:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801ade0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801ade4:	2b00      	cmp	r3, #0
 801ade6:	dd0c      	ble.n	801ae02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ade8:	1406      	asrs	r6, r0, #16
 801adea:	d405      	bmi.n	801adf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801adec:	454e      	cmp	r6, r9
 801adee:	da03      	bge.n	801adf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801adf0:	1416      	asrs	r6, r2, #16
 801adf2:	d401      	bmi.n	801adf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801adf4:	4546      	cmp	r6, r8
 801adf6:	db05      	blt.n	801ae04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801adf8:	4470      	add	r0, lr
 801adfa:	4462      	add	r2, ip
 801adfc:	3b01      	subs	r3, #1
 801adfe:	3402      	adds	r4, #2
 801ae00:	e7f0      	b.n	801ade4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ae02:	d00f      	beq.n	801ae24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ae04:	1e5e      	subs	r6, r3, #1
 801ae06:	fb0e 0706 	mla	r7, lr, r6, r0
 801ae0a:	143f      	asrs	r7, r7, #16
 801ae0c:	d541      	bpl.n	801ae92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801ae0e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801ae12:	4698      	mov	r8, r3
 801ae14:	9603      	str	r6, [sp, #12]
 801ae16:	f1b8 0f00 	cmp.w	r8, #0
 801ae1a:	dc59      	bgt.n	801aed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ae1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ae20:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ae24:	9b00      	ldr	r3, [sp, #0]
 801ae26:	2b00      	cmp	r3, #0
 801ae28:	dd72      	ble.n	801af10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ae2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ae2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ae32:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ae36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ae38:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ae3c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ae40:	eeb0 6a62 	vmov.f32	s12, s5
 801ae44:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ae48:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ae4c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ae50:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801ae54:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ae58:	eeb0 6a43 	vmov.f32	s12, s6
 801ae5c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae60:	ee12 2a90 	vmov	r2, s5
 801ae64:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae68:	fb92 fef3 	sdiv	lr, r2, r3
 801ae6c:	ee13 2a10 	vmov	r2, s6
 801ae70:	fb92 fcf3 	sdiv	ip, r2, r3
 801ae74:	9b00      	ldr	r3, [sp, #0]
 801ae76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ae7a:	3b01      	subs	r3, #1
 801ae7c:	9300      	str	r3, [sp, #0]
 801ae7e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801ae82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ae84:	eeb0 3a67 	vmov.f32	s6, s15
 801ae88:	bf08      	it	eq
 801ae8a:	465b      	moveq	r3, fp
 801ae8c:	eef0 2a47 	vmov.f32	s5, s14
 801ae90:	e797      	b.n	801adc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ae92:	454f      	cmp	r7, r9
 801ae94:	dabb      	bge.n	801ae0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ae96:	fb0c 2606 	mla	r6, ip, r6, r2
 801ae9a:	1436      	asrs	r6, r6, #16
 801ae9c:	d4b7      	bmi.n	801ae0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ae9e:	4546      	cmp	r6, r8
 801aea0:	dab5      	bge.n	801ae0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801aea2:	461e      	mov	r6, r3
 801aea4:	46a0      	mov	r8, r4
 801aea6:	2e00      	cmp	r6, #0
 801aea8:	ddb8      	ble.n	801ae1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801aeaa:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801aeae:	9901      	ldr	r1, [sp, #4]
 801aeb0:	1417      	asrs	r7, r2, #16
 801aeb2:	ea4f 4920 	mov.w	r9, r0, asr #16
 801aeb6:	fb0a 1707 	mla	r7, sl, r7, r1
 801aeba:	9902      	ldr	r1, [sp, #8]
 801aebc:	f817 7009 	ldrb.w	r7, [r7, r9]
 801aec0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801aec4:	f828 7b02 	strh.w	r7, [r8], #2
 801aec8:	4470      	add	r0, lr
 801aeca:	4462      	add	r2, ip
 801aecc:	3e01      	subs	r6, #1
 801aece:	e7ea      	b.n	801aea6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801aed0:	ea5f 4920 	movs.w	r9, r0, asr #16
 801aed4:	d417      	bmi.n	801af06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801aed6:	68ae      	ldr	r6, [r5, #8]
 801aed8:	454e      	cmp	r6, r9
 801aeda:	dd14      	ble.n	801af06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801aedc:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801aee0:	d411      	bmi.n	801af06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801aee2:	68ef      	ldr	r7, [r5, #12]
 801aee4:	4557      	cmp	r7, sl
 801aee6:	dd0e      	ble.n	801af06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801aee8:	9f01      	ldr	r7, [sp, #4]
 801aeea:	b236      	sxth	r6, r6
 801aeec:	fb0a 7606 	mla	r6, sl, r6, r7
 801aef0:	9f02      	ldr	r7, [sp, #8]
 801aef2:	f816 6009 	ldrb.w	r6, [r6, r9]
 801aef6:	f06f 0101 	mvn.w	r1, #1
 801aefa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801aefe:	fb01 f608 	mul.w	r6, r1, r8
 801af02:	9903      	ldr	r1, [sp, #12]
 801af04:	538f      	strh	r7, [r1, r6]
 801af06:	4470      	add	r0, lr
 801af08:	4462      	add	r2, ip
 801af0a:	f108 38ff 	add.w	r8, r8, #4294967295
 801af0e:	e782      	b.n	801ae16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801af10:	b005      	add	sp, #20
 801af12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801af16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801af16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af1a:	b087      	sub	sp, #28
 801af1c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801af1e:	9205      	str	r2, [sp, #20]
 801af20:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801af24:	9203      	str	r2, [sp, #12]
 801af26:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801af2a:	9102      	str	r1, [sp, #8]
 801af2c:	6861      	ldr	r1, [r4, #4]
 801af2e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801af32:	fb01 2000 	mla	r0, r1, r0, r2
 801af36:	6822      	ldr	r2, [r4, #0]
 801af38:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801af3c:	9200      	str	r2, [sp, #0]
 801af3e:	f8dc 2000 	ldr.w	r2, [ip]
 801af42:	9204      	str	r2, [sp, #16]
 801af44:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801af48:	3204      	adds	r2, #4
 801af4a:	9201      	str	r2, [sp, #4]
 801af4c:	9a03      	ldr	r2, [sp, #12]
 801af4e:	43d5      	mvns	r5, r2
 801af50:	b2ed      	uxtb	r5, r5
 801af52:	9a02      	ldr	r2, [sp, #8]
 801af54:	2a00      	cmp	r2, #0
 801af56:	dc03      	bgt.n	801af60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801af58:	9a05      	ldr	r2, [sp, #20]
 801af5a:	2a00      	cmp	r2, #0
 801af5c:	f340 812c 	ble.w	801b1b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801af60:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801af62:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801af66:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801af6a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801af6e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801af70:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801af74:	2b00      	cmp	r3, #0
 801af76:	dd10      	ble.n	801af9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801af78:	140c      	asrs	r4, r1, #16
 801af7a:	d405      	bmi.n	801af88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801af7c:	4574      	cmp	r4, lr
 801af7e:	da03      	bge.n	801af88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801af80:	1414      	asrs	r4, r2, #16
 801af82:	d401      	bmi.n	801af88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801af84:	42bc      	cmp	r4, r7
 801af86:	db09      	blt.n	801af9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801af88:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801af8a:	9800      	ldr	r0, [sp, #0]
 801af8c:	4421      	add	r1, r4
 801af8e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801af90:	3002      	adds	r0, #2
 801af92:	4422      	add	r2, r4
 801af94:	3b01      	subs	r3, #1
 801af96:	9000      	str	r0, [sp, #0]
 801af98:	e7ec      	b.n	801af74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801af9a:	d071      	beq.n	801b080 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801af9c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801af9e:	1e5c      	subs	r4, r3, #1
 801afa0:	fb06 1604 	mla	r6, r6, r4, r1
 801afa4:	1436      	asrs	r6, r6, #16
 801afa6:	d45d      	bmi.n	801b064 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801afa8:	4576      	cmp	r6, lr
 801afaa:	da5b      	bge.n	801b064 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801afac:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801afae:	fb06 2404 	mla	r4, r6, r4, r2
 801afb2:	1424      	asrs	r4, r4, #16
 801afb4:	d456      	bmi.n	801b064 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801afb6:	42bc      	cmp	r4, r7
 801afb8:	da54      	bge.n	801b064 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801afba:	f8dd 9000 	ldr.w	r9, [sp]
 801afbe:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801afc2:	4698      	mov	r8, r3
 801afc4:	f1b8 0f00 	cmp.w	r8, #0
 801afc8:	dd54      	ble.n	801b074 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801afca:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801afce:	9804      	ldr	r0, [sp, #16]
 801afd0:	1414      	asrs	r4, r2, #16
 801afd2:	fb07 0404 	mla	r4, r7, r4, r0
 801afd6:	140e      	asrs	r6, r1, #16
 801afd8:	9801      	ldr	r0, [sp, #4]
 801afda:	f814 e006 	ldrb.w	lr, [r4, r6]
 801afde:	f8b9 4000 	ldrh.w	r4, [r9]
 801afe2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801afe6:	eb00 0b0e 	add.w	fp, r0, lr
 801afea:	1227      	asrs	r7, r4, #8
 801afec:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801aff0:	f89b b001 	ldrb.w	fp, [fp, #1]
 801aff4:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801aff8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801affa:	fb16 f60a 	smulbb	r6, r6, sl
 801affe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b002:	fb07 6705 	mla	r7, r7, r5, r6
 801b006:	10e6      	asrs	r6, r4, #3
 801b008:	00e4      	lsls	r4, r4, #3
 801b00a:	b2e4      	uxtb	r4, r4
 801b00c:	fb1b fb0a 	smulbb	fp, fp, sl
 801b010:	fb14 f405 	smulbb	r4, r4, r5
 801b014:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b018:	b2bf      	uxth	r7, r7
 801b01a:	fb06 b605 	mla	r6, r6, r5, fp
 801b01e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801b022:	b2b6      	uxth	r6, r6
 801b024:	fa1f fe8e 	uxth.w	lr, lr
 801b028:	1c7c      	adds	r4, r7, #1
 801b02a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801b02e:	f106 0b01 	add.w	fp, r6, #1
 801b032:	f10e 0401 	add.w	r4, lr, #1
 801b036:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801b03a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801b03e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801b042:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801b046:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801b04a:	4327      	orrs	r7, r4
 801b04c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801b050:	4401      	add	r1, r0
 801b052:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801b054:	ea47 070b 	orr.w	r7, r7, fp
 801b058:	f829 7b02 	strh.w	r7, [r9], #2
 801b05c:	4402      	add	r2, r0
 801b05e:	f108 38ff 	add.w	r8, r8, #4294967295
 801b062:	e7af      	b.n	801afc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b064:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801b068:	f04f 0e00 	mov.w	lr, #0
 801b06c:	eb03 040e 	add.w	r4, r3, lr
 801b070:	2c00      	cmp	r4, #0
 801b072:	dc43      	bgt.n	801b0fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801b074:	9a00      	ldr	r2, [sp, #0]
 801b076:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b07a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b07e:	9300      	str	r3, [sp, #0]
 801b080:	9b02      	ldr	r3, [sp, #8]
 801b082:	2b00      	cmp	r3, #0
 801b084:	f340 8098 	ble.w	801b1b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b088:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b08c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b090:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b094:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b096:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b09a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b09e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b0a2:	eef0 6a62 	vmov.f32	s13, s5
 801b0a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b0aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b0ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b0b2:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801b0b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b0ba:	eef0 6a43 	vmov.f32	s13, s6
 801b0be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b0c2:	ee12 2a90 	vmov	r2, s5
 801b0c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b0ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0ce:	ee13 2a10 	vmov	r2, s6
 801b0d2:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b0d4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b0d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0da:	9314      	str	r3, [sp, #80]	@ 0x50
 801b0dc:	9b02      	ldr	r3, [sp, #8]
 801b0de:	9a05      	ldr	r2, [sp, #20]
 801b0e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b0e4:	3b01      	subs	r3, #1
 801b0e6:	9302      	str	r3, [sp, #8]
 801b0e8:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801b0ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b0ee:	eeb0 3a67 	vmov.f32	s6, s15
 801b0f2:	bf08      	it	eq
 801b0f4:	4613      	moveq	r3, r2
 801b0f6:	eef0 2a47 	vmov.f32	s5, s14
 801b0fa:	e72a      	b.n	801af52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b0fc:	140f      	asrs	r7, r1, #16
 801b0fe:	d454      	bmi.n	801b1aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b100:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801b104:	42be      	cmp	r6, r7
 801b106:	dd50      	ble.n	801b1aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b108:	ea5f 4822 	movs.w	r8, r2, asr #16
 801b10c:	d44d      	bmi.n	801b1aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b10e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801b112:	4544      	cmp	r4, r8
 801b114:	dd49      	ble.n	801b1aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b116:	9c04      	ldr	r4, [sp, #16]
 801b118:	b236      	sxth	r6, r6
 801b11a:	fb08 4606 	mla	r6, r8, r6, r4
 801b11e:	f06f 0001 	mvn.w	r0, #1
 801b122:	f816 8007 	ldrb.w	r8, [r6, r7]
 801b126:	9c01      	ldr	r4, [sp, #4]
 801b128:	fb00 fa0e 	mul.w	sl, r0, lr
 801b12c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b130:	9800      	ldr	r0, [sp, #0]
 801b132:	eb04 0b08 	add.w	fp, r4, r8
 801b136:	f830 400a 	ldrh.w	r4, [r0, sl]
 801b13a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801b13e:	9801      	ldr	r0, [sp, #4]
 801b140:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b144:	f810 8008 	ldrb.w	r8, [r0, r8]
 801b148:	9800      	ldr	r0, [sp, #0]
 801b14a:	1227      	asrs	r7, r4, #8
 801b14c:	fb16 f609 	smulbb	r6, r6, r9
 801b150:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b154:	fb07 6705 	mla	r7, r7, r5, r6
 801b158:	10e6      	asrs	r6, r4, #3
 801b15a:	00e4      	lsls	r4, r4, #3
 801b15c:	b2e4      	uxtb	r4, r4
 801b15e:	fb1b fb09 	smulbb	fp, fp, r9
 801b162:	fb14 f405 	smulbb	r4, r4, r5
 801b166:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b16a:	b2bf      	uxth	r7, r7
 801b16c:	fb06 b605 	mla	r6, r6, r5, fp
 801b170:	fb08 4809 	mla	r8, r8, r9, r4
 801b174:	b2b6      	uxth	r6, r6
 801b176:	fa1f f888 	uxth.w	r8, r8
 801b17a:	1c7c      	adds	r4, r7, #1
 801b17c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801b180:	f106 0b01 	add.w	fp, r6, #1
 801b184:	f108 0401 	add.w	r4, r8, #1
 801b188:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801b18c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801b190:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801b194:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801b198:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801b19c:	4327      	orrs	r7, r4
 801b19e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801b1a2:	ea47 070b 	orr.w	r7, r7, fp
 801b1a6:	f820 700a 	strh.w	r7, [r0, sl]
 801b1aa:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801b1ac:	4401      	add	r1, r0
 801b1ae:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801b1b0:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b1b4:	4402      	add	r2, r0
 801b1b6:	e759      	b.n	801b06c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b1b8:	b007      	add	sp, #28
 801b1ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801b1c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b1c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1c4:	b085      	sub	sp, #20
 801b1c6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b1ca:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801b1cc:	9203      	str	r2, [sp, #12]
 801b1ce:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801b1d2:	6870      	ldr	r0, [r6, #4]
 801b1d4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801b1d6:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801b1da:	686f      	ldr	r7, [r5, #4]
 801b1dc:	9101      	str	r1, [sp, #4]
 801b1de:	fb00 2404 	mla	r4, r0, r4, r2
 801b1e2:	6832      	ldr	r2, [r6, #0]
 801b1e4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b1e8:	682a      	ldr	r2, [r5, #0]
 801b1ea:	9202      	str	r2, [sp, #8]
 801b1ec:	3704      	adds	r7, #4
 801b1ee:	9a01      	ldr	r2, [sp, #4]
 801b1f0:	2a00      	cmp	r2, #0
 801b1f2:	dc03      	bgt.n	801b1fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b1f4:	9a03      	ldr	r2, [sp, #12]
 801b1f6:	2a00      	cmp	r2, #0
 801b1f8:	f340 80cc 	ble.w	801b394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b1fc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b1fe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b202:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b206:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801b20a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b20c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b210:	2b00      	cmp	r3, #0
 801b212:	dd0d      	ble.n	801b230 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b214:	1406      	asrs	r6, r0, #16
 801b216:	d405      	bmi.n	801b224 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b218:	454e      	cmp	r6, r9
 801b21a:	da03      	bge.n	801b224 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b21c:	1416      	asrs	r6, r2, #16
 801b21e:	d401      	bmi.n	801b224 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b220:	4546      	cmp	r6, r8
 801b222:	db06      	blt.n	801b232 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b224:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 801b226:	4460      	add	r0, ip
 801b228:	4432      	add	r2, r6
 801b22a:	3b01      	subs	r3, #1
 801b22c:	3402      	adds	r4, #2
 801b22e:	e7ef      	b.n	801b210 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801b230:	d00f      	beq.n	801b252 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b232:	1e5e      	subs	r6, r3, #1
 801b234:	fb0c 0e06 	mla	lr, ip, r6, r0
 801b238:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801b23c:	d543      	bpl.n	801b2c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b23e:	4698      	mov	r8, r3
 801b240:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801b244:	f1b8 0f00 	cmp.w	r8, #0
 801b248:	dc71      	bgt.n	801b32e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b24a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b24e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b252:	9b01      	ldr	r3, [sp, #4]
 801b254:	2b00      	cmp	r3, #0
 801b256:	f340 809d 	ble.w	801b394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b25a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b25e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b262:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b266:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b268:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b26c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b270:	eeb0 6a62 	vmov.f32	s12, s5
 801b274:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b278:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b27c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b280:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801b284:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b288:	eeb0 6a43 	vmov.f32	s12, s6
 801b28c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b290:	ee12 2a90 	vmov	r2, s5
 801b294:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b298:	fb92 fcf3 	sdiv	ip, r2, r3
 801b29c:	ee13 2a10 	vmov	r2, s6
 801b2a0:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2a4:	9312      	str	r3, [sp, #72]	@ 0x48
 801b2a6:	9b01      	ldr	r3, [sp, #4]
 801b2a8:	9a03      	ldr	r2, [sp, #12]
 801b2aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b2ae:	3b01      	subs	r3, #1
 801b2b0:	9301      	str	r3, [sp, #4]
 801b2b2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801b2b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b2b8:	eeb0 3a67 	vmov.f32	s6, s15
 801b2bc:	bf08      	it	eq
 801b2be:	4613      	moveq	r3, r2
 801b2c0:	eef0 2a47 	vmov.f32	s5, s14
 801b2c4:	e793      	b.n	801b1ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801b2c6:	45ce      	cmp	lr, r9
 801b2c8:	dab9      	bge.n	801b23e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b2ca:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801b2cc:	fb01 2606 	mla	r6, r1, r6, r2
 801b2d0:	1436      	asrs	r6, r6, #16
 801b2d2:	d4b4      	bmi.n	801b23e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b2d4:	4546      	cmp	r6, r8
 801b2d6:	dab2      	bge.n	801b23e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b2d8:	4698      	mov	r8, r3
 801b2da:	46a2      	mov	sl, r4
 801b2dc:	f1b8 0f00 	cmp.w	r8, #0
 801b2e0:	ddb3      	ble.n	801b24a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b2e2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b2e6:	9902      	ldr	r1, [sp, #8]
 801b2e8:	1416      	asrs	r6, r2, #16
 801b2ea:	fb09 1606 	mla	r6, r9, r6, r1
 801b2ee:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801b2f2:	492a      	ldr	r1, [pc, #168]	@ (801b39c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801b2f4:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801b2f8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b2fc:	eb07 0b0e 	add.w	fp, r7, lr
 801b300:	4460      	add	r0, ip
 801b302:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801b306:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801b30a:	00f6      	lsls	r6, r6, #3
 801b30c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801b310:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801b314:	ea49 0606 	orr.w	r6, r9, r6
 801b318:	f817 900e 	ldrb.w	r9, [r7, lr]
 801b31c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801b31e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801b322:	f82a 6b02 	strh.w	r6, [sl], #2
 801b326:	440a      	add	r2, r1
 801b328:	f108 38ff 	add.w	r8, r8, #4294967295
 801b32c:	e7d6      	b.n	801b2dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b32e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b332:	d429      	bmi.n	801b388 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b334:	68ae      	ldr	r6, [r5, #8]
 801b336:	454e      	cmp	r6, r9
 801b338:	dd26      	ble.n	801b388 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b33a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801b33e:	d423      	bmi.n	801b388 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b340:	68e9      	ldr	r1, [r5, #12]
 801b342:	4559      	cmp	r1, fp
 801b344:	dd20      	ble.n	801b388 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b346:	9902      	ldr	r1, [sp, #8]
 801b348:	fa0f fe86 	sxth.w	lr, r6
 801b34c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801b350:	f06f 0101 	mvn.w	r1, #1
 801b354:	f81e e009 	ldrb.w	lr, [lr, r9]
 801b358:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b35c:	eb07 060e 	add.w	r6, r7, lr
 801b360:	fb01 f908 	mul.w	r9, r1, r8
 801b364:	f896 b002 	ldrb.w	fp, [r6, #2]
 801b368:	7876      	ldrb	r6, [r6, #1]
 801b36a:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 801b36e:	00f6      	lsls	r6, r6, #3
 801b370:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801b374:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801b378:	ea4b 0606 	orr.w	r6, fp, r6
 801b37c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801b380:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801b384:	f82a 6009 	strh.w	r6, [sl, r9]
 801b388:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801b38a:	4460      	add	r0, ip
 801b38c:	440a      	add	r2, r1
 801b38e:	f108 38ff 	add.w	r8, r8, #4294967295
 801b392:	e757      	b.n	801b244 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b394:	b005      	add	sp, #20
 801b396:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b39a:	bf00      	nop
 801b39c:	fffff800 	.word	0xfffff800

0801b3a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b3a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3a4:	b087      	sub	sp, #28
 801b3a6:	468b      	mov	fp, r1
 801b3a8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b3aa:	9204      	str	r2, [sp, #16]
 801b3ac:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801b3b0:	9205      	str	r2, [sp, #20]
 801b3b2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801b3b6:	6841      	ldr	r1, [r0, #4]
 801b3b8:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801b3bc:	fb01 2404 	mla	r4, r1, r4, r2
 801b3c0:	6802      	ldr	r2, [r0, #0]
 801b3c2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b3c6:	f8dc 2000 	ldr.w	r2, [ip]
 801b3ca:	9201      	str	r2, [sp, #4]
 801b3cc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801b3d0:	3204      	adds	r2, #4
 801b3d2:	9202      	str	r2, [sp, #8]
 801b3d4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b3d8:	f1bb 0f00 	cmp.w	fp, #0
 801b3dc:	dc03      	bgt.n	801b3e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801b3de:	9a04      	ldr	r2, [sp, #16]
 801b3e0:	2a00      	cmp	r2, #0
 801b3e2:	f340 8138 	ble.w	801b656 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b3e6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801b3e8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801b3ec:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801b3f0:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801b3f4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b3f6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801b3fa:	2b00      	cmp	r3, #0
 801b3fc:	dd0e      	ble.n	801b41c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b3fe:	1402      	asrs	r2, r0, #16
 801b400:	d405      	bmi.n	801b40e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b402:	42ba      	cmp	r2, r7
 801b404:	da03      	bge.n	801b40e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b406:	140a      	asrs	r2, r1, #16
 801b408:	d401      	bmi.n	801b40e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b40a:	42b2      	cmp	r2, r6
 801b40c:	db07      	blt.n	801b41e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b40e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801b410:	4410      	add	r0, r2
 801b412:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b414:	3b01      	subs	r3, #1
 801b416:	4411      	add	r1, r2
 801b418:	3402      	adds	r4, #2
 801b41a:	e7ee      	b.n	801b3fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801b41c:	d019      	beq.n	801b452 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b41e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b420:	1e5a      	subs	r2, r3, #1
 801b422:	fb05 0502 	mla	r5, r5, r2, r0
 801b426:	142d      	asrs	r5, r5, #16
 801b428:	d409      	bmi.n	801b43e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b42a:	42bd      	cmp	r5, r7
 801b42c:	da07      	bge.n	801b43e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b42e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801b430:	fb05 1202 	mla	r2, r5, r2, r1
 801b434:	1412      	asrs	r2, r2, #16
 801b436:	d402      	bmi.n	801b43e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b438:	42b2      	cmp	r2, r6
 801b43a:	f2c0 80ac 	blt.w	801b596 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801b43e:	f04f 0e00 	mov.w	lr, #0
 801b442:	eb03 020e 	add.w	r2, r3, lr
 801b446:	2a00      	cmp	r2, #0
 801b448:	dc3e      	bgt.n	801b4c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b44a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b44e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b452:	f1bb 0f00 	cmp.w	fp, #0
 801b456:	f340 80fe 	ble.w	801b656 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b45a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b45e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b462:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b466:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b468:	f1bb 0b01 	subs.w	fp, fp, #1
 801b46c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b470:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b474:	eeb0 6a62 	vmov.f32	s12, s5
 801b478:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b47c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b480:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b484:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801b488:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b48c:	eeb0 6a43 	vmov.f32	s12, s6
 801b490:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b494:	ee12 2a90 	vmov	r2, s5
 801b498:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b49c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b4a0:	ee13 2a10 	vmov	r2, s6
 801b4a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b4a8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b4aa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b4ac:	fb92 f3f3 	sdiv	r3, r2, r3
 801b4b0:	9a04      	ldr	r2, [sp, #16]
 801b4b2:	9314      	str	r3, [sp, #80]	@ 0x50
 801b4b4:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801b4b8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b4ba:	eeb0 3a67 	vmov.f32	s6, s15
 801b4be:	bf08      	it	eq
 801b4c0:	4613      	moveq	r3, r2
 801b4c2:	eef0 2a47 	vmov.f32	s5, s14
 801b4c6:	e787      	b.n	801b3d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b4c8:	1406      	asrs	r6, r0, #16
 801b4ca:	d45d      	bmi.n	801b588 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b4cc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801b4d0:	42b5      	cmp	r5, r6
 801b4d2:	dd59      	ble.n	801b588 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b4d4:	140f      	asrs	r7, r1, #16
 801b4d6:	d457      	bmi.n	801b588 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b4d8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801b4dc:	42ba      	cmp	r2, r7
 801b4de:	dd53      	ble.n	801b588 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b4e0:	9a01      	ldr	r2, [sp, #4]
 801b4e2:	b22d      	sxth	r5, r5
 801b4e4:	fb07 2505 	mla	r5, r7, r5, r2
 801b4e8:	5daa      	ldrb	r2, [r5, r6]
 801b4ea:	9d02      	ldr	r5, [sp, #8]
 801b4ec:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801b4f0:	0e2e      	lsrs	r6, r5, #24
 801b4f2:	d049      	beq.n	801b588 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b4f4:	f06f 0201 	mvn.w	r2, #1
 801b4f8:	fb02 f20e 	mul.w	r2, r2, lr
 801b4fc:	9203      	str	r2, [sp, #12]
 801b4fe:	f834 8002 	ldrh.w	r8, [r4, r2]
 801b502:	9a05      	ldr	r2, [sp, #20]
 801b504:	4356      	muls	r6, r2
 801b506:	1c72      	adds	r2, r6, #1
 801b508:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b50c:	1212      	asrs	r2, r2, #8
 801b50e:	fa1f f982 	uxth.w	r9, r2
 801b512:	ea4f 2728 	mov.w	r7, r8, asr #8
 801b516:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b51a:	43d2      	mvns	r2, r2
 801b51c:	b2d2      	uxtb	r2, r2
 801b51e:	fb16 f609 	smulbb	r6, r6, r9
 801b522:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b526:	fb07 6702 	mla	r7, r7, r2, r6
 801b52a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b52e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801b532:	b2ed      	uxtb	r5, r5
 801b534:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b538:	fa5f f888 	uxtb.w	r8, r8
 801b53c:	fb15 f509 	smulbb	r5, r5, r9
 801b540:	fb08 5502 	mla	r5, r8, r2, r5
 801b544:	b2bf      	uxth	r7, r7
 801b546:	fb1a fa09 	smulbb	sl, sl, r9
 801b54a:	b2ad      	uxth	r5, r5
 801b54c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b550:	fb06 a602 	mla	r6, r6, r2, sl
 801b554:	1c7a      	adds	r2, r7, #1
 801b556:	f105 0a01 	add.w	sl, r5, #1
 801b55a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b55e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b562:	b2b6      	uxth	r6, r6
 801b564:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b568:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801b56c:	ea4a 0707 	orr.w	r7, sl, r7
 801b570:	f106 0a01 	add.w	sl, r6, #1
 801b574:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b578:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b57c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b580:	9a03      	ldr	r2, [sp, #12]
 801b582:	ea47 070a 	orr.w	r7, r7, sl
 801b586:	52a7      	strh	r7, [r4, r2]
 801b588:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801b58a:	4410      	add	r0, r2
 801b58c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b58e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b592:	4411      	add	r1, r2
 801b594:	e755      	b.n	801b442 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b596:	f04f 0800 	mov.w	r8, #0
 801b59a:	eba3 0208 	sub.w	r2, r3, r8
 801b59e:	2a00      	cmp	r2, #0
 801b5a0:	f77f af53 	ble.w	801b44a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b5a4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801b5a8:	9f01      	ldr	r7, [sp, #4]
 801b5aa:	140a      	asrs	r2, r1, #16
 801b5ac:	1405      	asrs	r5, r0, #16
 801b5ae:	fb06 7202 	mla	r2, r6, r2, r7
 801b5b2:	5d52      	ldrb	r2, [r2, r5]
 801b5b4:	9d02      	ldr	r5, [sp, #8]
 801b5b6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801b5ba:	0e2e      	lsrs	r6, r5, #24
 801b5bc:	d044      	beq.n	801b648 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b5be:	9a05      	ldr	r2, [sp, #20]
 801b5c0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b5c4:	4356      	muls	r6, r2
 801b5c6:	1c72      	adds	r2, r6, #1
 801b5c8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b5cc:	1212      	asrs	r2, r2, #8
 801b5ce:	fa1f f982 	uxth.w	r9, r2
 801b5d2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b5d6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b5da:	43d2      	mvns	r2, r2
 801b5dc:	b2d2      	uxtb	r2, r2
 801b5de:	fb16 f609 	smulbb	r6, r6, r9
 801b5e2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b5e6:	fb07 6702 	mla	r7, r7, r2, r6
 801b5ea:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b5ee:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b5f2:	b2ed      	uxtb	r5, r5
 801b5f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b5f8:	fa5f fe8e 	uxtb.w	lr, lr
 801b5fc:	fb15 f509 	smulbb	r5, r5, r9
 801b600:	fb0e 5502 	mla	r5, lr, r2, r5
 801b604:	b2bf      	uxth	r7, r7
 801b606:	fb1a fa09 	smulbb	sl, sl, r9
 801b60a:	b2ad      	uxth	r5, r5
 801b60c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b610:	fb06 a602 	mla	r6, r6, r2, sl
 801b614:	1c7a      	adds	r2, r7, #1
 801b616:	f105 0a01 	add.w	sl, r5, #1
 801b61a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b61e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b622:	b2b6      	uxth	r6, r6
 801b624:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b628:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801b62c:	ea4a 0707 	orr.w	r7, sl, r7
 801b630:	f106 0a01 	add.w	sl, r6, #1
 801b634:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b638:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b63c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b640:	ea47 070a 	orr.w	r7, r7, sl
 801b644:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b648:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801b64a:	4410      	add	r0, r2
 801b64c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b64e:	f108 0801 	add.w	r8, r8, #1
 801b652:	4411      	add	r1, r2
 801b654:	e7a1      	b.n	801b59a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b656:	b007      	add	sp, #28
 801b658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b65c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b65c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b660:	b085      	sub	sp, #20
 801b662:	468b      	mov	fp, r1
 801b664:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801b666:	9203      	str	r2, [sp, #12]
 801b668:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801b66c:	6841      	ldr	r1, [r0, #4]
 801b66e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801b672:	fb01 2404 	mla	r4, r1, r4, r2
 801b676:	6802      	ldr	r2, [r0, #0]
 801b678:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b67c:	f8de 2000 	ldr.w	r2, [lr]
 801b680:	9200      	str	r2, [sp, #0]
 801b682:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b686:	3204      	adds	r2, #4
 801b688:	9201      	str	r2, [sp, #4]
 801b68a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b68e:	f1bb 0f00 	cmp.w	fp, #0
 801b692:	dc03      	bgt.n	801b69c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b694:	9a03      	ldr	r2, [sp, #12]
 801b696:	2a00      	cmp	r2, #0
 801b698:	f340 8153 	ble.w	801b942 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b69c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b69e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b6a2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b6a6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801b6aa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801b6ac:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b6b0:	2b00      	cmp	r3, #0
 801b6b2:	dd0e      	ble.n	801b6d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b6b4:	1408      	asrs	r0, r1, #16
 801b6b6:	d405      	bmi.n	801b6c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b6b8:	42b8      	cmp	r0, r7
 801b6ba:	da03      	bge.n	801b6c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b6bc:	1410      	asrs	r0, r2, #16
 801b6be:	d401      	bmi.n	801b6c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b6c0:	42b0      	cmp	r0, r6
 801b6c2:	db07      	blt.n	801b6d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b6c4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b6c6:	4401      	add	r1, r0
 801b6c8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801b6ca:	3b01      	subs	r3, #1
 801b6cc:	4402      	add	r2, r0
 801b6ce:	3402      	adds	r4, #2
 801b6d0:	e7ee      	b.n	801b6b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b6d2:	d017      	beq.n	801b704 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b6d4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801b6d6:	1e58      	subs	r0, r3, #1
 801b6d8:	fb05 1500 	mla	r5, r5, r0, r1
 801b6dc:	142d      	asrs	r5, r5, #16
 801b6de:	d409      	bmi.n	801b6f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b6e0:	42bd      	cmp	r5, r7
 801b6e2:	da07      	bge.n	801b6f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b6e4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801b6e6:	fb05 2000 	mla	r0, r5, r0, r2
 801b6ea:	1400      	asrs	r0, r0, #16
 801b6ec:	d402      	bmi.n	801b6f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b6ee:	42b0      	cmp	r0, r6
 801b6f0:	f2c0 80bc 	blt.w	801b86c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801b6f4:	2600      	movs	r6, #0
 801b6f6:	1998      	adds	r0, r3, r6
 801b6f8:	2800      	cmp	r0, #0
 801b6fa:	dc3e      	bgt.n	801b77a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801b6fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b700:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b704:	f1bb 0f00 	cmp.w	fp, #0
 801b708:	f340 811b 	ble.w	801b942 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b70c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b710:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b714:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b718:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b71a:	f1bb 0b01 	subs.w	fp, fp, #1
 801b71e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b722:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b726:	eeb0 6a62 	vmov.f32	s12, s5
 801b72a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b72e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b732:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b736:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801b73a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b73e:	eeb0 6a43 	vmov.f32	s12, s6
 801b742:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b746:	ee12 2a90 	vmov	r2, s5
 801b74a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b74e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b752:	ee13 2a10 	vmov	r2, s6
 801b756:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b75a:	9311      	str	r3, [sp, #68]	@ 0x44
 801b75c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b75e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b762:	9a03      	ldr	r2, [sp, #12]
 801b764:	9312      	str	r3, [sp, #72]	@ 0x48
 801b766:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801b76a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b76c:	eeb0 3a67 	vmov.f32	s6, s15
 801b770:	bf08      	it	eq
 801b772:	4613      	moveq	r3, r2
 801b774:	eef0 2a47 	vmov.f32	s5, s14
 801b778:	e789      	b.n	801b68e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b77a:	140f      	asrs	r7, r1, #16
 801b77c:	d426      	bmi.n	801b7cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b77e:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b782:	42bd      	cmp	r5, r7
 801b784:	dd22      	ble.n	801b7cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b786:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b78a:	d41f      	bmi.n	801b7cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b78c:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b790:	4560      	cmp	r0, ip
 801b792:	dd1b      	ble.n	801b7cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b794:	9800      	ldr	r0, [sp, #0]
 801b796:	b22d      	sxth	r5, r5
 801b798:	fb0c 0505 	mla	r5, ip, r5, r0
 801b79c:	5de8      	ldrb	r0, [r5, r7]
 801b79e:	9d01      	ldr	r5, [sp, #4]
 801b7a0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801b7a4:	0e07      	lsrs	r7, r0, #24
 801b7a6:	2fff      	cmp	r7, #255	@ 0xff
 801b7a8:	d116      	bne.n	801b7d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b7aa:	f06f 0501 	mvn.w	r5, #1
 801b7ae:	fb05 f706 	mul.w	r7, r5, r6
 801b7b2:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801b7b6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b7ba:	0945      	lsrs	r5, r0, #5
 801b7bc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b7c0:	ea4c 0505 	orr.w	r5, ip, r5
 801b7c4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b7c8:	4305      	orrs	r5, r0
 801b7ca:	53e5      	strh	r5, [r4, r7]
 801b7cc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b7ce:	4401      	add	r1, r0
 801b7d0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801b7d2:	3e01      	subs	r6, #1
 801b7d4:	4402      	add	r2, r0
 801b7d6:	e78e      	b.n	801b6f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b7d8:	b2fd      	uxtb	r5, r7
 801b7da:	2f00      	cmp	r7, #0
 801b7dc:	d0f6      	beq.n	801b7cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b7de:	f06f 0701 	mvn.w	r7, #1
 801b7e2:	4377      	muls	r7, r6
 801b7e4:	fa1f f985 	uxth.w	r9, r5
 801b7e8:	f834 8007 	ldrh.w	r8, [r4, r7]
 801b7ec:	9702      	str	r7, [sp, #8]
 801b7ee:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b7f2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b7f6:	43ed      	mvns	r5, r5
 801b7f8:	b2ed      	uxtb	r5, r5
 801b7fa:	fb17 f709 	smulbb	r7, r7, r9
 801b7fe:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b802:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b806:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b80a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801b80e:	b2c0      	uxtb	r0, r0
 801b810:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b814:	fa5f f888 	uxtb.w	r8, r8
 801b818:	fb10 f009 	smulbb	r0, r0, r9
 801b81c:	fb08 0005 	mla	r0, r8, r5, r0
 801b820:	b280      	uxth	r0, r0
 801b822:	fa1f fc8c 	uxth.w	ip, ip
 801b826:	fb1a fa09 	smulbb	sl, sl, r9
 801b82a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b82e:	fb07 a705 	mla	r7, r7, r5, sl
 801b832:	f100 0a01 	add.w	sl, r0, #1
 801b836:	f10c 0501 	add.w	r5, ip, #1
 801b83a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b83e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b842:	b2bf      	uxth	r7, r7
 801b844:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b848:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b84c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b850:	f107 0a01 	add.w	sl, r7, #1
 801b854:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b858:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b85c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b860:	9802      	ldr	r0, [sp, #8]
 801b862:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b866:	f824 c000 	strh.w	ip, [r4, r0]
 801b86a:	e7af      	b.n	801b7cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b86c:	f04f 0800 	mov.w	r8, #0
 801b870:	eba3 0008 	sub.w	r0, r3, r8
 801b874:	2800      	cmp	r0, #0
 801b876:	f77f af41 	ble.w	801b6fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b87a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b87e:	9f00      	ldr	r7, [sp, #0]
 801b880:	1410      	asrs	r0, r2, #16
 801b882:	140d      	asrs	r5, r1, #16
 801b884:	fb06 7000 	mla	r0, r6, r0, r7
 801b888:	5d40      	ldrb	r0, [r0, r5]
 801b88a:	9d01      	ldr	r5, [sp, #4]
 801b88c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b890:	0e2e      	lsrs	r6, r5, #24
 801b892:	2eff      	cmp	r6, #255	@ 0xff
 801b894:	d112      	bne.n	801b8bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801b896:	482c      	ldr	r0, [pc, #176]	@ (801b948 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801b898:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b89c:	0968      	lsrs	r0, r5, #5
 801b89e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b8a2:	4330      	orrs	r0, r6
 801b8a4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b8a8:	4328      	orrs	r0, r5
 801b8aa:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801b8ae:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b8b0:	4401      	add	r1, r0
 801b8b2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801b8b4:	f108 0801 	add.w	r8, r8, #1
 801b8b8:	4402      	add	r2, r0
 801b8ba:	e7d9      	b.n	801b870 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b8bc:	b2f0      	uxtb	r0, r6
 801b8be:	2e00      	cmp	r6, #0
 801b8c0:	d0f5      	beq.n	801b8ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b8c2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801b8c6:	fa1f f980 	uxth.w	r9, r0
 801b8ca:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b8ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b8d2:	43c0      	mvns	r0, r0
 801b8d4:	b2c0      	uxtb	r0, r0
 801b8d6:	fb16 f609 	smulbb	r6, r6, r9
 801b8da:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b8de:	fb07 6700 	mla	r7, r7, r0, r6
 801b8e2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b8e6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b8ea:	b2ed      	uxtb	r5, r5
 801b8ec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b8f0:	fa5f fc8c 	uxtb.w	ip, ip
 801b8f4:	fb15 f509 	smulbb	r5, r5, r9
 801b8f8:	fb0c 5500 	mla	r5, ip, r0, r5
 801b8fc:	b2bf      	uxth	r7, r7
 801b8fe:	fb1a fa09 	smulbb	sl, sl, r9
 801b902:	b2ad      	uxth	r5, r5
 801b904:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b908:	fb06 a600 	mla	r6, r6, r0, sl
 801b90c:	1c78      	adds	r0, r7, #1
 801b90e:	f105 0a01 	add.w	sl, r5, #1
 801b912:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b916:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b91a:	b2b6      	uxth	r6, r6
 801b91c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b920:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801b924:	ea4a 0707 	orr.w	r7, sl, r7
 801b928:	f106 0a01 	add.w	sl, r6, #1
 801b92c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b930:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b934:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b938:	ea47 070a 	orr.w	r7, r7, sl
 801b93c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b940:	e7b5      	b.n	801b8ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b942:	b005      	add	sp, #20
 801b944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b948:	fffff800 	.word	0xfffff800

0801b94c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b94c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b950:	b087      	sub	sp, #28
 801b952:	468b      	mov	fp, r1
 801b954:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b956:	9204      	str	r2, [sp, #16]
 801b958:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801b95c:	9205      	str	r2, [sp, #20]
 801b95e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801b962:	6861      	ldr	r1, [r4, #4]
 801b964:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801b968:	fb01 2000 	mla	r0, r1, r0, r2
 801b96c:	6822      	ldr	r2, [r4, #0]
 801b96e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b972:	f8de 2000 	ldr.w	r2, [lr]
 801b976:	9201      	str	r2, [sp, #4]
 801b978:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b97c:	9202      	str	r2, [sp, #8]
 801b97e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b982:	f1bb 0f00 	cmp.w	fp, #0
 801b986:	dc03      	bgt.n	801b990 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801b988:	9a04      	ldr	r2, [sp, #16]
 801b98a:	2a00      	cmp	r2, #0
 801b98c:	f340 8142 	ble.w	801bc14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b990:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801b992:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b996:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b99a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801b99e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b9a0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801b9a4:	2b00      	cmp	r3, #0
 801b9a6:	dd0e      	ble.n	801b9c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b9a8:	140c      	asrs	r4, r1, #16
 801b9aa:	d405      	bmi.n	801b9b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b9ac:	42bc      	cmp	r4, r7
 801b9ae:	da03      	bge.n	801b9b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b9b0:	1414      	asrs	r4, r2, #16
 801b9b2:	d401      	bmi.n	801b9b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b9b4:	42b4      	cmp	r4, r6
 801b9b6:	db07      	blt.n	801b9c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b9b8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b9ba:	4421      	add	r1, r4
 801b9bc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b9be:	3b01      	subs	r3, #1
 801b9c0:	4422      	add	r2, r4
 801b9c2:	3002      	adds	r0, #2
 801b9c4:	e7ee      	b.n	801b9a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b9c6:	d019      	beq.n	801b9fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b9c8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b9ca:	1e5c      	subs	r4, r3, #1
 801b9cc:	fb05 1504 	mla	r5, r5, r4, r1
 801b9d0:	142d      	asrs	r5, r5, #16
 801b9d2:	d409      	bmi.n	801b9e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b9d4:	42bd      	cmp	r5, r7
 801b9d6:	da07      	bge.n	801b9e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b9d8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801b9da:	fb05 2404 	mla	r4, r5, r4, r2
 801b9de:	1424      	asrs	r4, r4, #16
 801b9e0:	d402      	bmi.n	801b9e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b9e2:	42b4      	cmp	r4, r6
 801b9e4:	f2c0 80b1 	blt.w	801bb4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801b9e8:	f04f 0800 	mov.w	r8, #0
 801b9ec:	eb03 0408 	add.w	r4, r3, r8
 801b9f0:	2c00      	cmp	r4, #0
 801b9f2:	dc3e      	bgt.n	801ba72 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b9f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b9f8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b9fc:	f1bb 0f00 	cmp.w	fp, #0
 801ba00:	f340 8108 	ble.w	801bc14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801ba04:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba08:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba0c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ba10:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ba12:	f1bb 0b01 	subs.w	fp, fp, #1
 801ba16:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba1e:	eeb0 6a62 	vmov.f32	s12, s5
 801ba22:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ba2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba2e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801ba32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba36:	eeb0 6a43 	vmov.f32	s12, s6
 801ba3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba3e:	ee12 2a90 	vmov	r2, s5
 801ba42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba46:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba4a:	ee13 2a10 	vmov	r2, s6
 801ba4e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ba52:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ba54:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ba56:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba5a:	9a04      	ldr	r2, [sp, #16]
 801ba5c:	9314      	str	r3, [sp, #80]	@ 0x50
 801ba5e:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801ba62:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ba64:	eeb0 3a67 	vmov.f32	s6, s15
 801ba68:	bf08      	it	eq
 801ba6a:	4613      	moveq	r3, r2
 801ba6c:	eef0 2a47 	vmov.f32	s5, s14
 801ba70:	e787      	b.n	801b982 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801ba72:	140e      	asrs	r6, r1, #16
 801ba74:	d462      	bmi.n	801bb3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ba76:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ba7a:	42b5      	cmp	r5, r6
 801ba7c:	dd5e      	ble.n	801bb3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ba7e:	1417      	asrs	r7, r2, #16
 801ba80:	d45c      	bmi.n	801bb3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ba82:	f8de 400c 	ldr.w	r4, [lr, #12]
 801ba86:	42bc      	cmp	r4, r7
 801ba88:	dd58      	ble.n	801bb3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ba8a:	b22d      	sxth	r5, r5
 801ba8c:	fb07 6505 	mla	r5, r7, r5, r6
 801ba90:	9c02      	ldr	r4, [sp, #8]
 801ba92:	5d66      	ldrb	r6, [r4, r5]
 801ba94:	2e00      	cmp	r6, #0
 801ba96:	d051      	beq.n	801bb3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ba98:	9c01      	ldr	r4, [sp, #4]
 801ba9a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801ba9e:	f06f 0401 	mvn.w	r4, #1
 801baa2:	fb04 f408 	mul.w	r4, r4, r8
 801baa6:	9403      	str	r4, [sp, #12]
 801baa8:	5b05      	ldrh	r5, [r0, r4]
 801baaa:	9c05      	ldr	r4, [sp, #20]
 801baac:	4366      	muls	r6, r4
 801baae:	1c74      	adds	r4, r6, #1
 801bab0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801bab4:	1224      	asrs	r4, r4, #8
 801bab6:	b2a7      	uxth	r7, r4
 801bab8:	122e      	asrs	r6, r5, #8
 801baba:	43e4      	mvns	r4, r4
 801babc:	b2e4      	uxtb	r4, r4
 801babe:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801bac2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801bac6:	fb16 f604 	smulbb	r6, r6, r4
 801baca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bace:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801bad2:	00ed      	lsls	r5, r5, #3
 801bad4:	fb0c 6c07 	mla	ip, ip, r7, r6
 801bad8:	b2ed      	uxtb	r5, r5
 801bada:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801bade:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801bae2:	fb15 f504 	smulbb	r5, r5, r4
 801bae6:	fa5f f989 	uxtb.w	r9, r9
 801baea:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801baee:	fb09 5507 	mla	r5, r9, r7, r5
 801baf2:	fb1a fa04 	smulbb	sl, sl, r4
 801baf6:	fa1f fc8c 	uxth.w	ip, ip
 801bafa:	b2ad      	uxth	r5, r5
 801bafc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801bb00:	fb06 a607 	mla	r6, r6, r7, sl
 801bb04:	f10c 0401 	add.w	r4, ip, #1
 801bb08:	f105 0a01 	add.w	sl, r5, #1
 801bb0c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801bb10:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bb14:	b2b6      	uxth	r6, r6
 801bb16:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bb1a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801bb1e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bb22:	f106 0a01 	add.w	sl, r6, #1
 801bb26:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bb2a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bb2e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801bb32:	9c03      	ldr	r4, [sp, #12]
 801bb34:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bb38:	f820 c004 	strh.w	ip, [r0, r4]
 801bb3c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bb3e:	4421      	add	r1, r4
 801bb40:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bb42:	f108 38ff 	add.w	r8, r8, #4294967295
 801bb46:	4422      	add	r2, r4
 801bb48:	e750      	b.n	801b9ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bb4a:	f04f 0900 	mov.w	r9, #0
 801bb4e:	eba3 0409 	sub.w	r4, r3, r9
 801bb52:	2c00      	cmp	r4, #0
 801bb54:	f77f af4e 	ble.w	801b9f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bb58:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801bb5c:	140d      	asrs	r5, r1, #16
 801bb5e:	1414      	asrs	r4, r2, #16
 801bb60:	fb06 5404 	mla	r4, r6, r4, r5
 801bb64:	9d02      	ldr	r5, [sp, #8]
 801bb66:	5d2e      	ldrb	r6, [r5, r4]
 801bb68:	2e00      	cmp	r6, #0
 801bb6a:	d04c      	beq.n	801bc06 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801bb6c:	9d01      	ldr	r5, [sp, #4]
 801bb6e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801bb72:	9c05      	ldr	r4, [sp, #20]
 801bb74:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801bb78:	4366      	muls	r6, r4
 801bb7a:	1c74      	adds	r4, r6, #1
 801bb7c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801bb80:	1224      	asrs	r4, r4, #8
 801bb82:	b2a7      	uxth	r7, r4
 801bb84:	122e      	asrs	r6, r5, #8
 801bb86:	43e4      	mvns	r4, r4
 801bb88:	b2e4      	uxtb	r4, r4
 801bb8a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801bb8e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801bb92:	fb16 f604 	smulbb	r6, r6, r4
 801bb96:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bb9a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801bb9e:	00ed      	lsls	r5, r5, #3
 801bba0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801bba4:	b2ed      	uxtb	r5, r5
 801bba6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801bbaa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bbae:	fb15 f504 	smulbb	r5, r5, r4
 801bbb2:	fa5f f888 	uxtb.w	r8, r8
 801bbb6:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801bbba:	fb08 5507 	mla	r5, r8, r7, r5
 801bbbe:	fb1a fa04 	smulbb	sl, sl, r4
 801bbc2:	fa1f fc8c 	uxth.w	ip, ip
 801bbc6:	b2ad      	uxth	r5, r5
 801bbc8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801bbcc:	fb06 a607 	mla	r6, r6, r7, sl
 801bbd0:	f10c 0401 	add.w	r4, ip, #1
 801bbd4:	f105 0a01 	add.w	sl, r5, #1
 801bbd8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801bbdc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bbe0:	b2b6      	uxth	r6, r6
 801bbe2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bbe6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801bbea:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bbee:	f106 0a01 	add.w	sl, r6, #1
 801bbf2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bbf6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bbfa:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801bbfe:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bc02:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801bc06:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bc08:	4421      	add	r1, r4
 801bc0a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bc0c:	f109 0901 	add.w	r9, r9, #1
 801bc10:	4422      	add	r2, r4
 801bc12:	e79c      	b.n	801bb4e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801bc14:	b007      	add	sp, #28
 801bc16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bc1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bc1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc1e:	b085      	sub	sp, #20
 801bc20:	468b      	mov	fp, r1
 801bc22:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bc24:	9203      	str	r2, [sp, #12]
 801bc26:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801bc2a:	6861      	ldr	r1, [r4, #4]
 801bc2c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801bc30:	fb01 2000 	mla	r0, r1, r0, r2
 801bc34:	6822      	ldr	r2, [r4, #0]
 801bc36:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801bc3a:	f8d8 2000 	ldr.w	r2, [r8]
 801bc3e:	9200      	str	r2, [sp, #0]
 801bc40:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801bc44:	9201      	str	r2, [sp, #4]
 801bc46:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801bc4a:	f1bb 0f00 	cmp.w	fp, #0
 801bc4e:	dc03      	bgt.n	801bc58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bc50:	9a03      	ldr	r2, [sp, #12]
 801bc52:	2a00      	cmp	r2, #0
 801bc54:	f340 8146 	ble.w	801bee4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801bc58:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801bc5a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801bc5e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801bc62:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801bc66:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801bc68:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801bc6c:	2b00      	cmp	r3, #0
 801bc6e:	dd0e      	ble.n	801bc8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801bc70:	140c      	asrs	r4, r1, #16
 801bc72:	d405      	bmi.n	801bc80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bc74:	42bc      	cmp	r4, r7
 801bc76:	da03      	bge.n	801bc80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bc78:	1414      	asrs	r4, r2, #16
 801bc7a:	d401      	bmi.n	801bc80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bc7c:	42b4      	cmp	r4, r6
 801bc7e:	db07      	blt.n	801bc90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bc80:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bc82:	4421      	add	r1, r4
 801bc84:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bc86:	3b01      	subs	r3, #1
 801bc88:	4422      	add	r2, r4
 801bc8a:	3002      	adds	r0, #2
 801bc8c:	e7ee      	b.n	801bc6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801bc8e:	d017      	beq.n	801bcc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801bc90:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bc92:	1e5c      	subs	r4, r3, #1
 801bc94:	fb05 1504 	mla	r5, r5, r4, r1
 801bc98:	142d      	asrs	r5, r5, #16
 801bc9a:	d409      	bmi.n	801bcb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bc9c:	42bd      	cmp	r5, r7
 801bc9e:	da07      	bge.n	801bcb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bca0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801bca2:	fb05 2404 	mla	r4, r5, r4, r2
 801bca6:	1424      	asrs	r4, r4, #16
 801bca8:	d402      	bmi.n	801bcb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bcaa:	42b4      	cmp	r4, r6
 801bcac:	f2c0 80b3 	blt.w	801be16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801bcb0:	2600      	movs	r6, #0
 801bcb2:	199c      	adds	r4, r3, r6
 801bcb4:	2c00      	cmp	r4, #0
 801bcb6:	dc3e      	bgt.n	801bd36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801bcb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bcbc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bcc0:	f1bb 0f00 	cmp.w	fp, #0
 801bcc4:	f340 810e 	ble.w	801bee4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801bcc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bccc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bcd0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bcd4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bcd6:	f1bb 0b01 	subs.w	fp, fp, #1
 801bcda:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bcde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bce2:	eeb0 6a62 	vmov.f32	s12, s5
 801bce6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bcea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bcee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bcf2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801bcf6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bcfa:	eeb0 6a43 	vmov.f32	s12, s6
 801bcfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bd02:	ee12 2a90 	vmov	r2, s5
 801bd06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bd0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd0e:	ee13 2a10 	vmov	r2, s6
 801bd12:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bd16:	9311      	str	r3, [sp, #68]	@ 0x44
 801bd18:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bd1a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd1e:	9a03      	ldr	r2, [sp, #12]
 801bd20:	9312      	str	r3, [sp, #72]	@ 0x48
 801bd22:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801bd26:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bd28:	eeb0 3a67 	vmov.f32	s6, s15
 801bd2c:	bf08      	it	eq
 801bd2e:	4613      	moveq	r3, r2
 801bd30:	eef0 2a47 	vmov.f32	s5, s14
 801bd34:	e789      	b.n	801bc4a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bd36:	140f      	asrs	r7, r1, #16
 801bd38:	d418      	bmi.n	801bd6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bd3a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801bd3e:	42bd      	cmp	r5, r7
 801bd40:	dd14      	ble.n	801bd6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bd42:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bd46:	d411      	bmi.n	801bd6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bd48:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801bd4c:	4564      	cmp	r4, ip
 801bd4e:	dd0d      	ble.n	801bd6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bd50:	b22d      	sxth	r5, r5
 801bd52:	fb0c 7505 	mla	r5, ip, r5, r7
 801bd56:	9c01      	ldr	r4, [sp, #4]
 801bd58:	5d64      	ldrb	r4, [r4, r5]
 801bd5a:	2cff      	cmp	r4, #255	@ 0xff
 801bd5c:	d10c      	bne.n	801bd78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801bd5e:	9c00      	ldr	r4, [sp, #0]
 801bd60:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801bd64:	f06f 0401 	mvn.w	r4, #1
 801bd68:	4374      	muls	r4, r6
 801bd6a:	5305      	strh	r5, [r0, r4]
 801bd6c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bd6e:	4421      	add	r1, r4
 801bd70:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bd72:	3e01      	subs	r6, #1
 801bd74:	4422      	add	r2, r4
 801bd76:	e79c      	b.n	801bcb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bd78:	2c00      	cmp	r4, #0
 801bd7a:	d0f7      	beq.n	801bd6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bd7c:	9f00      	ldr	r7, [sp, #0]
 801bd7e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801bd82:	f06f 0501 	mvn.w	r5, #1
 801bd86:	4375      	muls	r5, r6
 801bd88:	9502      	str	r5, [sp, #8]
 801bd8a:	5b45      	ldrh	r5, [r0, r5]
 801bd8c:	fa1f fc84 	uxth.w	ip, r4
 801bd90:	122f      	asrs	r7, r5, #8
 801bd92:	43e4      	mvns	r4, r4
 801bd94:	b2e4      	uxtb	r4, r4
 801bd96:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801bd9a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801bd9e:	fb17 f704 	smulbb	r7, r7, r4
 801bda2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bda6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801bdaa:	00ed      	lsls	r5, r5, #3
 801bdac:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801bdb0:	b2ed      	uxtb	r5, r5
 801bdb2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801bdb6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801bdba:	fb15 f504 	smulbb	r5, r5, r4
 801bdbe:	fa5f f989 	uxtb.w	r9, r9
 801bdc2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801bdc6:	fb09 550c 	mla	r5, r9, ip, r5
 801bdca:	fb1a fa04 	smulbb	sl, sl, r4
 801bdce:	fa1f fe8e 	uxth.w	lr, lr
 801bdd2:	b2ad      	uxth	r5, r5
 801bdd4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801bdd8:	fb07 a70c 	mla	r7, r7, ip, sl
 801bddc:	f10e 0401 	add.w	r4, lr, #1
 801bde0:	f105 0a01 	add.w	sl, r5, #1
 801bde4:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801bde8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bdec:	b2bf      	uxth	r7, r7
 801bdee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bdf2:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801bdf6:	ea4a 0e0e 	orr.w	lr, sl, lr
 801bdfa:	f107 0a01 	add.w	sl, r7, #1
 801bdfe:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801be02:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801be06:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801be0a:	9c02      	ldr	r4, [sp, #8]
 801be0c:	ea4e 0e0a 	orr.w	lr, lr, sl
 801be10:	f820 e004 	strh.w	lr, [r0, r4]
 801be14:	e7aa      	b.n	801bd6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801be16:	f04f 0900 	mov.w	r9, #0
 801be1a:	eba3 0409 	sub.w	r4, r3, r9
 801be1e:	2c00      	cmp	r4, #0
 801be20:	f77f af4a 	ble.w	801bcb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801be24:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801be28:	1414      	asrs	r4, r2, #16
 801be2a:	140d      	asrs	r5, r1, #16
 801be2c:	fb06 5504 	mla	r5, r6, r4, r5
 801be30:	9c01      	ldr	r4, [sp, #4]
 801be32:	5d64      	ldrb	r4, [r4, r5]
 801be34:	2cff      	cmp	r4, #255	@ 0xff
 801be36:	d10b      	bne.n	801be50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801be38:	9c00      	ldr	r4, [sp, #0]
 801be3a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801be3e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801be42:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801be44:	4421      	add	r1, r4
 801be46:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801be48:	f109 0901 	add.w	r9, r9, #1
 801be4c:	4422      	add	r2, r4
 801be4e:	e7e4      	b.n	801be1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801be50:	2c00      	cmp	r4, #0
 801be52:	d0f6      	beq.n	801be42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801be54:	9e00      	ldr	r6, [sp, #0]
 801be56:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801be5a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801be5e:	b2a7      	uxth	r7, r4
 801be60:	122e      	asrs	r6, r5, #8
 801be62:	43e4      	mvns	r4, r4
 801be64:	b2e4      	uxtb	r4, r4
 801be66:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801be6a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801be6e:	fb16 f604 	smulbb	r6, r6, r4
 801be72:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801be76:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801be7a:	00ed      	lsls	r5, r5, #3
 801be7c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801be80:	b2ed      	uxtb	r5, r5
 801be82:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801be86:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801be8a:	fb15 f504 	smulbb	r5, r5, r4
 801be8e:	fa5f fe8e 	uxtb.w	lr, lr
 801be92:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801be96:	fb0e 5507 	mla	r5, lr, r7, r5
 801be9a:	fb1a fa04 	smulbb	sl, sl, r4
 801be9e:	fa1f fc8c 	uxth.w	ip, ip
 801bea2:	b2ad      	uxth	r5, r5
 801bea4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801bea8:	fb06 a607 	mla	r6, r6, r7, sl
 801beac:	f10c 0401 	add.w	r4, ip, #1
 801beb0:	f105 0a01 	add.w	sl, r5, #1
 801beb4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801beb8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bebc:	b2b6      	uxth	r6, r6
 801bebe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bec2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801bec6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801beca:	f106 0a01 	add.w	sl, r6, #1
 801bece:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bed2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bed6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801beda:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bede:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801bee2:	e7ae      	b.n	801be42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801bee4:	b005      	add	sp, #20
 801bee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801beea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801beea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801beee:	b085      	sub	sp, #20
 801bef0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bef2:	9203      	str	r2, [sp, #12]
 801bef4:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 801bef8:	9201      	str	r2, [sp, #4]
 801befa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801befe:	9100      	str	r1, [sp, #0]
 801bf00:	6841      	ldr	r1, [r0, #4]
 801bf02:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801bf06:	fb01 2404 	mla	r4, r1, r4, r2
 801bf0a:	6802      	ldr	r2, [r0, #0]
 801bf0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bf10:	f8de 2000 	ldr.w	r2, [lr]
 801bf14:	9202      	str	r2, [sp, #8]
 801bf16:	9a01      	ldr	r2, [sp, #4]
 801bf18:	43d6      	mvns	r6, r2
 801bf1a:	b2f6      	uxtb	r6, r6
 801bf1c:	9a00      	ldr	r2, [sp, #0]
 801bf1e:	2a00      	cmp	r2, #0
 801bf20:	dc03      	bgt.n	801bf2a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801bf22:	9a03      	ldr	r2, [sp, #12]
 801bf24:	2a00      	cmp	r2, #0
 801bf26:	f340 8124 	ble.w	801c172 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801bf2a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801bf2c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801bf30:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801bf34:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801bf38:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801bf3a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801bf3e:	2b00      	cmp	r3, #0
 801bf40:	dd0e      	ble.n	801bf60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bf42:	1408      	asrs	r0, r1, #16
 801bf44:	d405      	bmi.n	801bf52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801bf46:	4560      	cmp	r0, ip
 801bf48:	da03      	bge.n	801bf52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801bf4a:	1410      	asrs	r0, r2, #16
 801bf4c:	d401      	bmi.n	801bf52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801bf4e:	42b8      	cmp	r0, r7
 801bf50:	db07      	blt.n	801bf62 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bf52:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801bf54:	4401      	add	r1, r0
 801bf56:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801bf58:	3b01      	subs	r3, #1
 801bf5a:	4402      	add	r2, r0
 801bf5c:	3402      	adds	r4, #2
 801bf5e:	e7ee      	b.n	801bf3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801bf60:	d06e      	beq.n	801c040 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801bf62:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bf64:	1e58      	subs	r0, r3, #1
 801bf66:	fb05 1500 	mla	r5, r5, r0, r1
 801bf6a:	142d      	asrs	r5, r5, #16
 801bf6c:	d45c      	bmi.n	801c028 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801bf6e:	4565      	cmp	r5, ip
 801bf70:	da5a      	bge.n	801c028 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801bf72:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801bf74:	fb05 2000 	mla	r0, r5, r0, r2
 801bf78:	1400      	asrs	r0, r0, #16
 801bf7a:	d455      	bmi.n	801c028 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801bf7c:	42b8      	cmp	r0, r7
 801bf7e:	da53      	bge.n	801c028 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801bf80:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801bf84:	4699      	mov	r9, r3
 801bf86:	46a2      	mov	sl, r4
 801bf88:	f1b9 0f00 	cmp.w	r9, #0
 801bf8c:	dd54      	ble.n	801c038 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801bf8e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801bf92:	140d      	asrs	r5, r1, #16
 801bf94:	1410      	asrs	r0, r2, #16
 801bf96:	fb07 5000 	mla	r0, r7, r0, r5
 801bf9a:	9d02      	ldr	r5, [sp, #8]
 801bf9c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801bfa0:	f8ba 5000 	ldrh.w	r5, [sl]
 801bfa4:	122f      	asrs	r7, r5, #8
 801bfa6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801bfaa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801bfae:	fb17 f706 	smulbb	r7, r7, r6
 801bfb2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801bfb6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801bfba:	00ed      	lsls	r5, r5, #3
 801bfbc:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801bfc0:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801bfc4:	10c7      	asrs	r7, r0, #3
 801bfc6:	b2ed      	uxtb	r5, r5
 801bfc8:	00c0      	lsls	r0, r0, #3
 801bfca:	fb18 f806 	smulbb	r8, r8, r6
 801bfce:	fb15 f506 	smulbb	r5, r5, r6
 801bfd2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801bfd6:	b2c0      	uxtb	r0, r0
 801bfd8:	fa1f fc8c 	uxth.w	ip, ip
 801bfdc:	fb07 870b 	mla	r7, r7, fp, r8
 801bfe0:	fb00 500b 	mla	r0, r0, fp, r5
 801bfe4:	b280      	uxth	r0, r0
 801bfe6:	b2bf      	uxth	r7, r7
 801bfe8:	f10c 0501 	add.w	r5, ip, #1
 801bfec:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801bff0:	f107 0801 	add.w	r8, r7, #1
 801bff4:	1c45      	adds	r5, r0, #1
 801bff6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bffa:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801bffe:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801c000:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801c004:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c008:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c00c:	ea45 0c0c 	orr.w	ip, r5, ip
 801c010:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801c014:	4401      	add	r1, r0
 801c016:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801c018:	ea4c 0c08 	orr.w	ip, ip, r8
 801c01c:	f82a cb02 	strh.w	ip, [sl], #2
 801c020:	4402      	add	r2, r0
 801c022:	f109 39ff 	add.w	r9, r9, #4294967295
 801c026:	e7af      	b.n	801bf88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c028:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801c02c:	f04f 0800 	mov.w	r8, #0
 801c030:	eb03 0008 	add.w	r0, r3, r8
 801c034:	2800      	cmp	r0, #0
 801c036:	dc41      	bgt.n	801c0bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c038:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c03c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c040:	9b00      	ldr	r3, [sp, #0]
 801c042:	2b00      	cmp	r3, #0
 801c044:	f340 8095 	ble.w	801c172 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801c048:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c04c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c050:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c054:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c056:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c05a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c05e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c062:	eef0 6a62 	vmov.f32	s13, s5
 801c066:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c06a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c06e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c072:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 801c076:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c07a:	eef0 6a43 	vmov.f32	s13, s6
 801c07e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c082:	ee12 2a90 	vmov	r2, s5
 801c086:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c08a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c08e:	ee13 2a10 	vmov	r2, s6
 801c092:	9311      	str	r3, [sp, #68]	@ 0x44
 801c094:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c096:	fb92 f3f3 	sdiv	r3, r2, r3
 801c09a:	9312      	str	r3, [sp, #72]	@ 0x48
 801c09c:	9b00      	ldr	r3, [sp, #0]
 801c09e:	9a03      	ldr	r2, [sp, #12]
 801c0a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c0a4:	3b01      	subs	r3, #1
 801c0a6:	9300      	str	r3, [sp, #0]
 801c0a8:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 801c0ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c0ae:	eeb0 3a67 	vmov.f32	s6, s15
 801c0b2:	bf08      	it	eq
 801c0b4:	4613      	moveq	r3, r2
 801c0b6:	eef0 2a47 	vmov.f32	s5, s14
 801c0ba:	e72f      	b.n	801bf1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801c0bc:	140f      	asrs	r7, r1, #16
 801c0be:	d451      	bmi.n	801c164 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c0c0:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c0c4:	42bd      	cmp	r5, r7
 801c0c6:	dd4d      	ble.n	801c164 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c0c8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c0cc:	d44a      	bmi.n	801c164 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c0ce:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c0d2:	4560      	cmp	r0, ip
 801c0d4:	dd46      	ble.n	801c164 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c0d6:	b22d      	sxth	r5, r5
 801c0d8:	fb0c 7505 	mla	r5, ip, r5, r7
 801c0dc:	9802      	ldr	r0, [sp, #8]
 801c0de:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801c0e2:	f06f 0501 	mvn.w	r5, #1
 801c0e6:	fb05 fb08 	mul.w	fp, r5, r8
 801c0ea:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c0ee:	f834 500b 	ldrh.w	r5, [r4, fp]
 801c0f2:	122f      	asrs	r7, r5, #8
 801c0f4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801c0f8:	fb17 f706 	smulbb	r7, r7, r6
 801c0fc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801c100:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c104:	00ed      	lsls	r5, r5, #3
 801c106:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801c10a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801c10e:	10c7      	asrs	r7, r0, #3
 801c110:	b2ed      	uxtb	r5, r5
 801c112:	00c0      	lsls	r0, r0, #3
 801c114:	fb19 f906 	smulbb	r9, r9, r6
 801c118:	fb15 f506 	smulbb	r5, r5, r6
 801c11c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c120:	b2c0      	uxtb	r0, r0
 801c122:	fa1f fc8c 	uxth.w	ip, ip
 801c126:	fb07 970a 	mla	r7, r7, sl, r9
 801c12a:	fb00 500a 	mla	r0, r0, sl, r5
 801c12e:	b2bf      	uxth	r7, r7
 801c130:	b280      	uxth	r0, r0
 801c132:	f10c 0501 	add.w	r5, ip, #1
 801c136:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c13a:	f107 0901 	add.w	r9, r7, #1
 801c13e:	1c45      	adds	r5, r0, #1
 801c140:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c144:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801c148:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801c14c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c150:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c154:	ea45 0c0c 	orr.w	ip, r5, ip
 801c158:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c15c:	ea4c 0c09 	orr.w	ip, ip, r9
 801c160:	f824 c00b 	strh.w	ip, [r4, fp]
 801c164:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801c166:	4401      	add	r1, r0
 801c168:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801c16a:	f108 38ff 	add.w	r8, r8, #4294967295
 801c16e:	4402      	add	r2, r0
 801c170:	e75e      	b.n	801c030 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801c172:	b005      	add	sp, #20
 801c174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c178 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c17c:	b085      	sub	sp, #20
 801c17e:	4693      	mov	fp, r2
 801c180:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801c182:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801c184:	6870      	ldr	r0, [r6, #4]
 801c186:	9101      	str	r1, [sp, #4]
 801c188:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801c18c:	fb00 2404 	mla	r4, r0, r4, r2
 801c190:	6832      	ldr	r2, [r6, #0]
 801c192:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801c196:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c19a:	682a      	ldr	r2, [r5, #0]
 801c19c:	9202      	str	r2, [sp, #8]
 801c19e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801c1a2:	9a01      	ldr	r2, [sp, #4]
 801c1a4:	2a00      	cmp	r2, #0
 801c1a6:	dc03      	bgt.n	801c1b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c1a8:	f1bb 0f00 	cmp.w	fp, #0
 801c1ac:	f340 809a 	ble.w	801c2e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c1b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c1b2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c1b6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801c1ba:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801c1be:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c1c0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801c1c4:	2b00      	cmp	r3, #0
 801c1c6:	dd0c      	ble.n	801c1e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801c1c8:	1406      	asrs	r6, r0, #16
 801c1ca:	d405      	bmi.n	801c1d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c1cc:	454e      	cmp	r6, r9
 801c1ce:	da03      	bge.n	801c1d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c1d0:	1416      	asrs	r6, r2, #16
 801c1d2:	d401      	bmi.n	801c1d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c1d4:	4546      	cmp	r6, r8
 801c1d6:	db05      	blt.n	801c1e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c1d8:	4470      	add	r0, lr
 801c1da:	4462      	add	r2, ip
 801c1dc:	3b01      	subs	r3, #1
 801c1de:	3402      	adds	r4, #2
 801c1e0:	e7f0      	b.n	801c1c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c1e2:	d00f      	beq.n	801c204 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c1e4:	1e5e      	subs	r6, r3, #1
 801c1e6:	fb0e 0706 	mla	r7, lr, r6, r0
 801c1ea:	143f      	asrs	r7, r7, #16
 801c1ec:	d541      	bpl.n	801c272 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801c1ee:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801c1f2:	4698      	mov	r8, r3
 801c1f4:	9603      	str	r6, [sp, #12]
 801c1f6:	f1b8 0f00 	cmp.w	r8, #0
 801c1fa:	dc56      	bgt.n	801c2aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801c1fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c200:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c204:	9b01      	ldr	r3, [sp, #4]
 801c206:	2b00      	cmp	r3, #0
 801c208:	dd6c      	ble.n	801c2e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c20a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c20e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c212:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c216:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c218:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c21c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c220:	eeb0 6a62 	vmov.f32	s12, s5
 801c224:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c228:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c22c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c230:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801c234:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c238:	eeb0 6a43 	vmov.f32	s12, s6
 801c23c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c240:	ee12 2a90 	vmov	r2, s5
 801c244:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c248:	fb92 fef3 	sdiv	lr, r2, r3
 801c24c:	ee13 2a10 	vmov	r2, s6
 801c250:	fb92 fcf3 	sdiv	ip, r2, r3
 801c254:	9b01      	ldr	r3, [sp, #4]
 801c256:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c25a:	3b01      	subs	r3, #1
 801c25c:	9301      	str	r3, [sp, #4]
 801c25e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801c262:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c264:	eeb0 3a67 	vmov.f32	s6, s15
 801c268:	bf08      	it	eq
 801c26a:	465b      	moveq	r3, fp
 801c26c:	eef0 2a47 	vmov.f32	s5, s14
 801c270:	e797      	b.n	801c1a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c272:	454f      	cmp	r7, r9
 801c274:	dabb      	bge.n	801c1ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c276:	fb0c 2606 	mla	r6, ip, r6, r2
 801c27a:	1436      	asrs	r6, r6, #16
 801c27c:	d4b7      	bmi.n	801c1ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c27e:	4546      	cmp	r6, r8
 801c280:	dab5      	bge.n	801c1ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c282:	461e      	mov	r6, r3
 801c284:	46a0      	mov	r8, r4
 801c286:	2e00      	cmp	r6, #0
 801c288:	ddb8      	ble.n	801c1fc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c28a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801c28e:	9902      	ldr	r1, [sp, #8]
 801c290:	1417      	asrs	r7, r2, #16
 801c292:	ea4f 4920 	mov.w	r9, r0, asr #16
 801c296:	fb0a 9707 	mla	r7, sl, r7, r9
 801c29a:	4470      	add	r0, lr
 801c29c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801c2a0:	f828 7b02 	strh.w	r7, [r8], #2
 801c2a4:	4462      	add	r2, ip
 801c2a6:	3e01      	subs	r6, #1
 801c2a8:	e7ed      	b.n	801c286 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801c2aa:	ea5f 4920 	movs.w	r9, r0, asr #16
 801c2ae:	d414      	bmi.n	801c2da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c2b0:	68ae      	ldr	r6, [r5, #8]
 801c2b2:	454e      	cmp	r6, r9
 801c2b4:	dd11      	ble.n	801c2da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c2b6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801c2ba:	d40e      	bmi.n	801c2da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c2bc:	68ef      	ldr	r7, [r5, #12]
 801c2be:	4557      	cmp	r7, sl
 801c2c0:	dd0b      	ble.n	801c2da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c2c2:	b236      	sxth	r6, r6
 801c2c4:	fb0a 9606 	mla	r6, sl, r6, r9
 801c2c8:	9f02      	ldr	r7, [sp, #8]
 801c2ca:	f06f 0101 	mvn.w	r1, #1
 801c2ce:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801c2d2:	fb01 f608 	mul.w	r6, r1, r8
 801c2d6:	9903      	ldr	r1, [sp, #12]
 801c2d8:	538f      	strh	r7, [r1, r6]
 801c2da:	4470      	add	r0, lr
 801c2dc:	4462      	add	r2, ip
 801c2de:	f108 38ff 	add.w	r8, r8, #4294967295
 801c2e2:	e788      	b.n	801c1f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c2e4:	b005      	add	sp, #20
 801c2e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c2ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c2ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2ee:	b087      	sub	sp, #28
 801c2f0:	468b      	mov	fp, r1
 801c2f2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801c2f4:	9203      	str	r2, [sp, #12]
 801c2f6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801c2fa:	9204      	str	r2, [sp, #16]
 801c2fc:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 801c300:	6841      	ldr	r1, [r0, #4]
 801c302:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801c306:	fb01 2505 	mla	r5, r1, r5, r2
 801c30a:	6802      	ldr	r2, [r0, #0]
 801c30c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c310:	f8d9 2000 	ldr.w	r2, [r9]
 801c314:	9201      	str	r2, [sp, #4]
 801c316:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801c31a:	f1bb 0f00 	cmp.w	fp, #0
 801c31e:	dc03      	bgt.n	801c328 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c320:	9a03      	ldr	r2, [sp, #12]
 801c322:	2a00      	cmp	r2, #0
 801c324:	f340 8159 	ble.w	801c5da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c328:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c32a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c32e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c332:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801c336:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c338:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801c33c:	2b00      	cmp	r3, #0
 801c33e:	dd0e      	ble.n	801c35e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c340:	1402      	asrs	r2, r0, #16
 801c342:	d405      	bmi.n	801c350 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c344:	42ba      	cmp	r2, r7
 801c346:	da03      	bge.n	801c350 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c348:	140a      	asrs	r2, r1, #16
 801c34a:	d401      	bmi.n	801c350 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c34c:	42b2      	cmp	r2, r6
 801c34e:	db07      	blt.n	801c360 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c350:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c352:	4410      	add	r0, r2
 801c354:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c356:	3b01      	subs	r3, #1
 801c358:	4411      	add	r1, r2
 801c35a:	3502      	adds	r5, #2
 801c35c:	e7ee      	b.n	801c33c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c35e:	d017      	beq.n	801c390 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c360:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c362:	1e5a      	subs	r2, r3, #1
 801c364:	fb04 0402 	mla	r4, r4, r2, r0
 801c368:	1424      	asrs	r4, r4, #16
 801c36a:	d409      	bmi.n	801c380 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c36c:	42bc      	cmp	r4, r7
 801c36e:	da07      	bge.n	801c380 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c370:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c372:	fb04 1202 	mla	r2, r4, r2, r1
 801c376:	1412      	asrs	r2, r2, #16
 801c378:	d402      	bmi.n	801c380 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c37a:	42b2      	cmp	r2, r6
 801c37c:	f2c0 80bf 	blt.w	801c4fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c380:	2700      	movs	r7, #0
 801c382:	19da      	adds	r2, r3, r7
 801c384:	2a00      	cmp	r2, #0
 801c386:	dc3e      	bgt.n	801c406 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c388:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c38c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c390:	f1bb 0f00 	cmp.w	fp, #0
 801c394:	f340 8121 	ble.w	801c5da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c398:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c39c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c3a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c3a4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c3a6:	f1bb 0b01 	subs.w	fp, fp, #1
 801c3aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c3ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c3b2:	eeb0 6a62 	vmov.f32	s12, s5
 801c3b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c3ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c3be:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c3c2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801c3c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c3ca:	eeb0 6a43 	vmov.f32	s12, s6
 801c3ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c3d2:	ee12 2a90 	vmov	r2, s5
 801c3d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c3da:	fb92 f3f3 	sdiv	r3, r2, r3
 801c3de:	ee13 2a10 	vmov	r2, s6
 801c3e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c3e6:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c3e8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c3ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801c3ee:	9a03      	ldr	r2, [sp, #12]
 801c3f0:	9314      	str	r3, [sp, #80]	@ 0x50
 801c3f2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801c3f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c3f8:	eeb0 3a67 	vmov.f32	s6, s15
 801c3fc:	bf08      	it	eq
 801c3fe:	4613      	moveq	r3, r2
 801c400:	eef0 2a47 	vmov.f32	s5, s14
 801c404:	e789      	b.n	801c31a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c406:	1406      	asrs	r6, r0, #16
 801c408:	d42d      	bmi.n	801c466 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c40a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801c40e:	42b4      	cmp	r4, r6
 801c410:	dd29      	ble.n	801c466 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c412:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801c416:	d426      	bmi.n	801c466 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c418:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c41c:	4562      	cmp	r2, ip
 801c41e:	dd22      	ble.n	801c466 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c420:	b224      	sxth	r4, r4
 801c422:	9a01      	ldr	r2, [sp, #4]
 801c424:	fb0c 6404 	mla	r4, ip, r4, r6
 801c428:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801c42c:	0e22      	lsrs	r2, r4, #24
 801c42e:	d01a      	beq.n	801c466 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c430:	9e04      	ldr	r6, [sp, #16]
 801c432:	4372      	muls	r2, r6
 801c434:	1c56      	adds	r6, r2, #1
 801c436:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801c43a:	1212      	asrs	r2, r2, #8
 801c43c:	0a26      	lsrs	r6, r4, #8
 801c43e:	2aff      	cmp	r2, #255	@ 0xff
 801c440:	9605      	str	r6, [sp, #20]
 801c442:	d116      	bne.n	801c472 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801c444:	f06f 0201 	mvn.w	r2, #1
 801c448:	fb02 fc07 	mul.w	ip, r2, r7
 801c44c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801c450:	0962      	lsrs	r2, r4, #5
 801c452:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c456:	f026 0607 	bic.w	r6, r6, #7
 801c45a:	4316      	orrs	r6, r2
 801c45c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c460:	4326      	orrs	r6, r4
 801c462:	f825 600c 	strh.w	r6, [r5, ip]
 801c466:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c468:	4410      	add	r0, r2
 801c46a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c46c:	3f01      	subs	r7, #1
 801c46e:	4411      	add	r1, r2
 801c470:	e787      	b.n	801c382 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c472:	f06f 0601 	mvn.w	r6, #1
 801c476:	437e      	muls	r6, r7
 801c478:	fa1f fa82 	uxth.w	sl, r2
 801c47c:	f835 8006 	ldrh.w	r8, [r5, r6]
 801c480:	9602      	str	r6, [sp, #8]
 801c482:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c486:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801c48a:	43d2      	mvns	r2, r2
 801c48c:	b2d2      	uxtb	r2, r2
 801c48e:	fb1c fc0a 	smulbb	ip, ip, sl
 801c492:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801c496:	fb0e ce02 	mla	lr, lr, r2, ip
 801c49a:	b2e4      	uxtb	r4, r4
 801c49c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c4a0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c4a4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c4a8:	fa5f f888 	uxtb.w	r8, r8
 801c4ac:	fb14 f40a 	smulbb	r4, r4, sl
 801c4b0:	fb08 4402 	mla	r4, r8, r2, r4
 801c4b4:	fa1f fe8e 	uxth.w	lr, lr
 801c4b8:	fb16 f60a 	smulbb	r6, r6, sl
 801c4bc:	b2a4      	uxth	r4, r4
 801c4be:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801c4c2:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c4c6:	f10e 0201 	add.w	r2, lr, #1
 801c4ca:	1c66      	adds	r6, r4, #1
 801c4cc:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c4d0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801c4d4:	fa1f fc8c 	uxth.w	ip, ip
 801c4d8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c4dc:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801c4e0:	ea46 0e0e 	orr.w	lr, r6, lr
 801c4e4:	f10c 0601 	add.w	r6, ip, #1
 801c4e8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c4ec:	0976      	lsrs	r6, r6, #5
 801c4ee:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801c4f2:	9a02      	ldr	r2, [sp, #8]
 801c4f4:	ea4e 0e06 	orr.w	lr, lr, r6
 801c4f8:	f825 e002 	strh.w	lr, [r5, r2]
 801c4fc:	e7b3      	b.n	801c466 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c4fe:	f04f 0800 	mov.w	r8, #0
 801c502:	eba3 0208 	sub.w	r2, r3, r8
 801c506:	2a00      	cmp	r2, #0
 801c508:	f77f af3e 	ble.w	801c388 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c50c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801c510:	1404      	asrs	r4, r0, #16
 801c512:	140a      	asrs	r2, r1, #16
 801c514:	fb06 4202 	mla	r2, r6, r2, r4
 801c518:	9c01      	ldr	r4, [sp, #4]
 801c51a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801c51e:	0e22      	lsrs	r2, r4, #24
 801c520:	d016      	beq.n	801c550 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c522:	9e04      	ldr	r6, [sp, #16]
 801c524:	4372      	muls	r2, r6
 801c526:	1c56      	adds	r6, r2, #1
 801c528:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801c52c:	1212      	asrs	r2, r2, #8
 801c52e:	2aff      	cmp	r2, #255	@ 0xff
 801c530:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801c534:	d113      	bne.n	801c55e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801c536:	0962      	lsrs	r2, r4, #5
 801c538:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801c53c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c540:	f026 0607 	bic.w	r6, r6, #7
 801c544:	4316      	orrs	r6, r2
 801c546:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c54a:	4326      	orrs	r6, r4
 801c54c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801c550:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c552:	4410      	add	r0, r2
 801c554:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c556:	f108 0801 	add.w	r8, r8, #1
 801c55a:	4411      	add	r1, r2
 801c55c:	e7d1      	b.n	801c502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801c55e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801c562:	fa1f fa82 	uxth.w	sl, r2
 801c566:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c56a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801c56e:	43d2      	mvns	r2, r2
 801c570:	b2d2      	uxtb	r2, r2
 801c572:	fb17 f70a 	smulbb	r7, r7, sl
 801c576:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c57a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801c57e:	b2e4      	uxtb	r4, r4
 801c580:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c584:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c588:	fa5f fe8e 	uxtb.w	lr, lr
 801c58c:	fb14 f40a 	smulbb	r4, r4, sl
 801c590:	fb0e 4402 	mla	r4, lr, r2, r4
 801c594:	b2f6      	uxtb	r6, r6
 801c596:	fa1f fc8c 	uxth.w	ip, ip
 801c59a:	fb16 f60a 	smulbb	r6, r6, sl
 801c59e:	b2a4      	uxth	r4, r4
 801c5a0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c5a4:	fb07 6702 	mla	r7, r7, r2, r6
 801c5a8:	f10c 0201 	add.w	r2, ip, #1
 801c5ac:	1c66      	adds	r6, r4, #1
 801c5ae:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c5b2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801c5b6:	b2bf      	uxth	r7, r7
 801c5b8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c5bc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801c5c0:	ea46 0c0c 	orr.w	ip, r6, ip
 801c5c4:	1c7e      	adds	r6, r7, #1
 801c5c6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c5ca:	0976      	lsrs	r6, r6, #5
 801c5cc:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801c5d0:	ea4c 0c06 	orr.w	ip, ip, r6
 801c5d4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801c5d8:	e7ba      	b.n	801c550 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c5da:	b007      	add	sp, #28
 801c5dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c5e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c5e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c5e4:	b085      	sub	sp, #20
 801c5e6:	468b      	mov	fp, r1
 801c5e8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801c5ea:	9203      	str	r2, [sp, #12]
 801c5ec:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801c5f0:	6841      	ldr	r1, [r0, #4]
 801c5f2:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801c5f6:	fb01 2404 	mla	r4, r1, r4, r2
 801c5fa:	6802      	ldr	r2, [r0, #0]
 801c5fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c600:	f8d8 2000 	ldr.w	r2, [r8]
 801c604:	9201      	str	r2, [sp, #4]
 801c606:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801c60a:	f1bb 0f00 	cmp.w	fp, #0
 801c60e:	dc03      	bgt.n	801c618 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c610:	9a03      	ldr	r2, [sp, #12]
 801c612:	2a00      	cmp	r2, #0
 801c614:	f340 814f 	ble.w	801c8b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c618:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c61a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801c61e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801c622:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801c626:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c628:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801c62c:	2b00      	cmp	r3, #0
 801c62e:	dd0e      	ble.n	801c64e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c630:	1408      	asrs	r0, r1, #16
 801c632:	d405      	bmi.n	801c640 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c634:	42b8      	cmp	r0, r7
 801c636:	da03      	bge.n	801c640 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c638:	1410      	asrs	r0, r2, #16
 801c63a:	d401      	bmi.n	801c640 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c63c:	42b0      	cmp	r0, r6
 801c63e:	db07      	blt.n	801c650 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c640:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801c642:	4401      	add	r1, r0
 801c644:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801c646:	3b01      	subs	r3, #1
 801c648:	4402      	add	r2, r0
 801c64a:	3402      	adds	r4, #2
 801c64c:	e7ee      	b.n	801c62c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c64e:	d017      	beq.n	801c680 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c650:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801c652:	1e58      	subs	r0, r3, #1
 801c654:	fb05 1500 	mla	r5, r5, r0, r1
 801c658:	142d      	asrs	r5, r5, #16
 801c65a:	d409      	bmi.n	801c670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c65c:	42bd      	cmp	r5, r7
 801c65e:	da07      	bge.n	801c670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c660:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801c662:	fb05 2000 	mla	r0, r5, r0, r2
 801c666:	1400      	asrs	r0, r0, #16
 801c668:	d402      	bmi.n	801c670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c66a:	42b0      	cmp	r0, r6
 801c66c:	f2c0 80ba 	blt.w	801c7e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c670:	2600      	movs	r6, #0
 801c672:	1998      	adds	r0, r3, r6
 801c674:	2800      	cmp	r0, #0
 801c676:	dc3e      	bgt.n	801c6f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c678:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c67c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c680:	f1bb 0f00 	cmp.w	fp, #0
 801c684:	f340 8117 	ble.w	801c8b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c688:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c68c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c690:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c694:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c696:	f1bb 0b01 	subs.w	fp, fp, #1
 801c69a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c69e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c6a2:	eeb0 6a62 	vmov.f32	s12, s5
 801c6a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c6aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c6ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c6b2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801c6b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c6ba:	eeb0 6a43 	vmov.f32	s12, s6
 801c6be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c6c2:	ee12 2a90 	vmov	r2, s5
 801c6c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c6ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801c6ce:	ee13 2a10 	vmov	r2, s6
 801c6d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c6d6:	9311      	str	r3, [sp, #68]	@ 0x44
 801c6d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c6da:	fb92 f3f3 	sdiv	r3, r2, r3
 801c6de:	9a03      	ldr	r2, [sp, #12]
 801c6e0:	9312      	str	r3, [sp, #72]	@ 0x48
 801c6e2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801c6e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c6e8:	eeb0 3a67 	vmov.f32	s6, s15
 801c6ec:	bf08      	it	eq
 801c6ee:	4613      	moveq	r3, r2
 801c6f0:	eef0 2a47 	vmov.f32	s5, s14
 801c6f4:	e789      	b.n	801c60a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c6f6:	140f      	asrs	r7, r1, #16
 801c6f8:	d424      	bmi.n	801c744 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c6fa:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801c6fe:	42bd      	cmp	r5, r7
 801c700:	dd20      	ble.n	801c744 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c702:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c706:	d41d      	bmi.n	801c744 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c708:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801c70c:	4560      	cmp	r0, ip
 801c70e:	dd19      	ble.n	801c744 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c710:	b22d      	sxth	r5, r5
 801c712:	fb0c 7505 	mla	r5, ip, r5, r7
 801c716:	9801      	ldr	r0, [sp, #4]
 801c718:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801c71c:	0e07      	lsrs	r7, r0, #24
 801c71e:	2fff      	cmp	r7, #255	@ 0xff
 801c720:	d116      	bne.n	801c750 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c722:	f06f 0501 	mvn.w	r5, #1
 801c726:	fb05 f706 	mul.w	r7, r5, r6
 801c72a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801c72e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801c732:	0945      	lsrs	r5, r0, #5
 801c734:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c738:	ea4c 0505 	orr.w	r5, ip, r5
 801c73c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c740:	4305      	orrs	r5, r0
 801c742:	53e5      	strh	r5, [r4, r7]
 801c744:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801c746:	4401      	add	r1, r0
 801c748:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801c74a:	3e01      	subs	r6, #1
 801c74c:	4402      	add	r2, r0
 801c74e:	e790      	b.n	801c672 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c750:	b2fd      	uxtb	r5, r7
 801c752:	2f00      	cmp	r7, #0
 801c754:	d0f6      	beq.n	801c744 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c756:	f06f 0701 	mvn.w	r7, #1
 801c75a:	4377      	muls	r7, r6
 801c75c:	fa1f f985 	uxth.w	r9, r5
 801c760:	f834 e007 	ldrh.w	lr, [r4, r7]
 801c764:	9702      	str	r7, [sp, #8]
 801c766:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c76a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801c76e:	43ed      	mvns	r5, r5
 801c770:	b2ed      	uxtb	r5, r5
 801c772:	fb17 f709 	smulbb	r7, r7, r9
 801c776:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c77a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801c77e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801c782:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c786:	b2c0      	uxtb	r0, r0
 801c788:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c78c:	fa5f fe8e 	uxtb.w	lr, lr
 801c790:	fb10 f009 	smulbb	r0, r0, r9
 801c794:	fb0e 0005 	mla	r0, lr, r5, r0
 801c798:	b280      	uxth	r0, r0
 801c79a:	fa1f fc8c 	uxth.w	ip, ip
 801c79e:	fb1a fa09 	smulbb	sl, sl, r9
 801c7a2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c7a6:	fb07 a705 	mla	r7, r7, r5, sl
 801c7aa:	f100 0a01 	add.w	sl, r0, #1
 801c7ae:	f10c 0501 	add.w	r5, ip, #1
 801c7b2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801c7b6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c7ba:	b2bf      	uxth	r7, r7
 801c7bc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c7c0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801c7c4:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c7c8:	f107 0a01 	add.w	sl, r7, #1
 801c7cc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c7d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c7d4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c7d8:	9802      	ldr	r0, [sp, #8]
 801c7da:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c7de:	f824 c000 	strh.w	ip, [r4, r0]
 801c7e2:	e7af      	b.n	801c744 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c7e4:	f04f 0e00 	mov.w	lr, #0
 801c7e8:	eba3 000e 	sub.w	r0, r3, lr
 801c7ec:	2800      	cmp	r0, #0
 801c7ee:	f77f af43 	ble.w	801c678 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c7f2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801c7f6:	140d      	asrs	r5, r1, #16
 801c7f8:	1410      	asrs	r0, r2, #16
 801c7fa:	fb06 5000 	mla	r0, r6, r0, r5
 801c7fe:	9d01      	ldr	r5, [sp, #4]
 801c800:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801c804:	0e2e      	lsrs	r6, r5, #24
 801c806:	2eff      	cmp	r6, #255	@ 0xff
 801c808:	d112      	bne.n	801c830 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801c80a:	482c      	ldr	r0, [pc, #176]	@ (801c8bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801c80c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801c810:	0968      	lsrs	r0, r5, #5
 801c812:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c816:	4330      	orrs	r0, r6
 801c818:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c81c:	4328      	orrs	r0, r5
 801c81e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801c822:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801c824:	4401      	add	r1, r0
 801c826:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801c828:	f10e 0e01 	add.w	lr, lr, #1
 801c82c:	4402      	add	r2, r0
 801c82e:	e7db      	b.n	801c7e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801c830:	b2f0      	uxtb	r0, r6
 801c832:	2e00      	cmp	r6, #0
 801c834:	d0f5      	beq.n	801c822 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c836:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c83a:	fa1f f980 	uxth.w	r9, r0
 801c83e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c842:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c846:	43c0      	mvns	r0, r0
 801c848:	b2c0      	uxtb	r0, r0
 801c84a:	fb16 f609 	smulbb	r6, r6, r9
 801c84e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801c852:	fb07 6700 	mla	r7, r7, r0, r6
 801c856:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c85a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c85e:	b2ed      	uxtb	r5, r5
 801c860:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c864:	fa5f fc8c 	uxtb.w	ip, ip
 801c868:	fb15 f509 	smulbb	r5, r5, r9
 801c86c:	fb0c 5500 	mla	r5, ip, r0, r5
 801c870:	b2bf      	uxth	r7, r7
 801c872:	fb1a fa09 	smulbb	sl, sl, r9
 801c876:	b2ad      	uxth	r5, r5
 801c878:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801c87c:	fb06 a600 	mla	r6, r6, r0, sl
 801c880:	1c78      	adds	r0, r7, #1
 801c882:	f105 0a01 	add.w	sl, r5, #1
 801c886:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801c88a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c88e:	b2b6      	uxth	r6, r6
 801c890:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c894:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801c898:	ea4a 0707 	orr.w	r7, sl, r7
 801c89c:	f106 0a01 	add.w	sl, r6, #1
 801c8a0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c8a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c8a8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c8ac:	ea47 070a 	orr.w	r7, r7, sl
 801c8b0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801c8b4:	e7b5      	b.n	801c822 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c8b6:	b005      	add	sp, #20
 801c8b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c8bc:	fffff800 	.word	0xfffff800

0801c8c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c8c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c8c4:	b087      	sub	sp, #28
 801c8c6:	468b      	mov	fp, r1
 801c8c8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801c8ca:	9203      	str	r2, [sp, #12]
 801c8cc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801c8d0:	9204      	str	r2, [sp, #16]
 801c8d2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801c8d6:	6841      	ldr	r1, [r0, #4]
 801c8d8:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801c8dc:	fb01 2404 	mla	r4, r1, r4, r2
 801c8e0:	6802      	ldr	r2, [r0, #0]
 801c8e2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c8e6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c8ea:	3201      	adds	r2, #1
 801c8ec:	f022 0201 	bic.w	r2, r2, #1
 801c8f0:	9200      	str	r2, [sp, #0]
 801c8f2:	f8d9 2000 	ldr.w	r2, [r9]
 801c8f6:	9201      	str	r2, [sp, #4]
 801c8f8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801c8fc:	f1bb 0f00 	cmp.w	fp, #0
 801c900:	dc03      	bgt.n	801c90a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c902:	9a03      	ldr	r2, [sp, #12]
 801c904:	2a00      	cmp	r2, #0
 801c906:	f340 8169 	ble.w	801cbdc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c90a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c90c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c910:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c914:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801c918:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c91a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801c91e:	2b00      	cmp	r3, #0
 801c920:	dd0e      	ble.n	801c940 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c922:	1402      	asrs	r2, r0, #16
 801c924:	d405      	bmi.n	801c932 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c926:	42ba      	cmp	r2, r7
 801c928:	da03      	bge.n	801c932 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c92a:	140a      	asrs	r2, r1, #16
 801c92c:	d401      	bmi.n	801c932 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c92e:	42b2      	cmp	r2, r6
 801c930:	db07      	blt.n	801c942 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801c932:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c934:	4410      	add	r0, r2
 801c936:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c938:	3b01      	subs	r3, #1
 801c93a:	4411      	add	r1, r2
 801c93c:	3402      	adds	r4, #2
 801c93e:	e7ee      	b.n	801c91e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801c940:	d017      	beq.n	801c972 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801c942:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801c944:	1e5a      	subs	r2, r3, #1
 801c946:	fb05 0502 	mla	r5, r5, r2, r0
 801c94a:	142d      	asrs	r5, r5, #16
 801c94c:	d409      	bmi.n	801c962 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c94e:	42bd      	cmp	r5, r7
 801c950:	da07      	bge.n	801c962 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c952:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801c954:	fb05 1202 	mla	r2, r5, r2, r1
 801c958:	1412      	asrs	r2, r2, #16
 801c95a:	d402      	bmi.n	801c962 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c95c:	42b2      	cmp	r2, r6
 801c95e:	f2c0 80c7 	blt.w	801caf0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801c962:	2700      	movs	r7, #0
 801c964:	19da      	adds	r2, r3, r7
 801c966:	2a00      	cmp	r2, #0
 801c968:	dc3e      	bgt.n	801c9e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c96a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c96e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c972:	f1bb 0f00 	cmp.w	fp, #0
 801c976:	f340 8131 	ble.w	801cbdc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c97a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c97e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c982:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c986:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c988:	f1bb 0b01 	subs.w	fp, fp, #1
 801c98c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c990:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c994:	eeb0 6a62 	vmov.f32	s12, s5
 801c998:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c99c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c9a0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c9a4:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801c9a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c9ac:	eeb0 6a43 	vmov.f32	s12, s6
 801c9b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c9b4:	ee12 2a90 	vmov	r2, s5
 801c9b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c9bc:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9c0:	ee13 2a10 	vmov	r2, s6
 801c9c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c9c8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c9ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c9cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9d0:	9a03      	ldr	r2, [sp, #12]
 801c9d2:	9314      	str	r3, [sp, #80]	@ 0x50
 801c9d4:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801c9d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c9da:	eeb0 3a67 	vmov.f32	s6, s15
 801c9de:	bf08      	it	eq
 801c9e0:	4613      	moveq	r3, r2
 801c9e2:	eef0 2a47 	vmov.f32	s5, s14
 801c9e6:	e789      	b.n	801c8fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c9e8:	1405      	asrs	r5, r0, #16
 801c9ea:	d435      	bmi.n	801ca58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c9ec:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c9f0:	42aa      	cmp	r2, r5
 801c9f2:	dd31      	ble.n	801ca58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c9f4:	140e      	asrs	r6, r1, #16
 801c9f6:	d42f      	bmi.n	801ca58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c9f8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c9fc:	42b2      	cmp	r2, r6
 801c9fe:	dd2b      	ble.n	801ca58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ca00:	9a00      	ldr	r2, [sp, #0]
 801ca02:	fb06 5502 	mla	r5, r6, r2, r5
 801ca06:	086a      	lsrs	r2, r5, #1
 801ca08:	9e01      	ldr	r6, [sp, #4]
 801ca0a:	5cb2      	ldrb	r2, [r6, r2]
 801ca0c:	07ee      	lsls	r6, r5, #31
 801ca0e:	bf54      	ite	pl
 801ca10:	f002 020f 	andpl.w	r2, r2, #15
 801ca14:	1112      	asrmi	r2, r2, #4
 801ca16:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ca1a:	b2d2      	uxtb	r2, r2
 801ca1c:	b1e2      	cbz	r2, 801ca58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ca1e:	9d04      	ldr	r5, [sp, #16]
 801ca20:	436a      	muls	r2, r5
 801ca22:	1c55      	adds	r5, r2, #1
 801ca24:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ca28:	4d6e      	ldr	r5, [pc, #440]	@ (801cbe4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ca2a:	682d      	ldr	r5, [r5, #0]
 801ca2c:	1212      	asrs	r2, r2, #8
 801ca2e:	0a2e      	lsrs	r6, r5, #8
 801ca30:	2aff      	cmp	r2, #255	@ 0xff
 801ca32:	9605      	str	r6, [sp, #20]
 801ca34:	d116      	bne.n	801ca64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ca36:	f06f 0201 	mvn.w	r2, #1
 801ca3a:	fb02 fc07 	mul.w	ip, r2, r7
 801ca3e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801ca42:	096a      	lsrs	r2, r5, #5
 801ca44:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ca48:	f026 0607 	bic.w	r6, r6, #7
 801ca4c:	4316      	orrs	r6, r2
 801ca4e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ca52:	432e      	orrs	r6, r5
 801ca54:	f824 600c 	strh.w	r6, [r4, ip]
 801ca58:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801ca5a:	4410      	add	r0, r2
 801ca5c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ca5e:	3f01      	subs	r7, #1
 801ca60:	4411      	add	r1, r2
 801ca62:	e77f      	b.n	801c964 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801ca64:	f06f 0601 	mvn.w	r6, #1
 801ca68:	437e      	muls	r6, r7
 801ca6a:	fa1f fa82 	uxth.w	sl, r2
 801ca6e:	f834 8006 	ldrh.w	r8, [r4, r6]
 801ca72:	9602      	str	r6, [sp, #8]
 801ca74:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801ca78:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801ca7c:	43d2      	mvns	r2, r2
 801ca7e:	b2d2      	uxtb	r2, r2
 801ca80:	fb1c fc0a 	smulbb	ip, ip, sl
 801ca84:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801ca88:	fb0e ce02 	mla	lr, lr, r2, ip
 801ca8c:	b2ed      	uxtb	r5, r5
 801ca8e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801ca92:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ca96:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801ca9a:	fa5f f888 	uxtb.w	r8, r8
 801ca9e:	fb15 f50a 	smulbb	r5, r5, sl
 801caa2:	fb08 5502 	mla	r5, r8, r2, r5
 801caa6:	fa1f fe8e 	uxth.w	lr, lr
 801caaa:	fb16 f60a 	smulbb	r6, r6, sl
 801caae:	b2ad      	uxth	r5, r5
 801cab0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801cab4:	fb0c 6c02 	mla	ip, ip, r2, r6
 801cab8:	f10e 0201 	add.w	r2, lr, #1
 801cabc:	1c6e      	adds	r6, r5, #1
 801cabe:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801cac2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801cac6:	fa1f fc8c 	uxth.w	ip, ip
 801caca:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801cace:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801cad2:	ea46 0e0e 	orr.w	lr, r6, lr
 801cad6:	f10c 0601 	add.w	r6, ip, #1
 801cada:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801cade:	0976      	lsrs	r6, r6, #5
 801cae0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801cae4:	9a02      	ldr	r2, [sp, #8]
 801cae6:	ea4e 0e06 	orr.w	lr, lr, r6
 801caea:	f824 e002 	strh.w	lr, [r4, r2]
 801caee:	e7b3      	b.n	801ca58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801caf0:	f04f 0800 	mov.w	r8, #0
 801caf4:	eba3 0208 	sub.w	r2, r3, r8
 801caf8:	2a00      	cmp	r2, #0
 801cafa:	f77f af36 	ble.w	801c96a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801cafe:	9e00      	ldr	r6, [sp, #0]
 801cb00:	1402      	asrs	r2, r0, #16
 801cb02:	140d      	asrs	r5, r1, #16
 801cb04:	fb06 2505 	mla	r5, r6, r5, r2
 801cb08:	086a      	lsrs	r2, r5, #1
 801cb0a:	9e01      	ldr	r6, [sp, #4]
 801cb0c:	5cb2      	ldrb	r2, [r6, r2]
 801cb0e:	07ed      	lsls	r5, r5, #31
 801cb10:	bf54      	ite	pl
 801cb12:	f002 020f 	andpl.w	r2, r2, #15
 801cb16:	1112      	asrmi	r2, r2, #4
 801cb18:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cb1c:	b2d2      	uxtb	r2, r2
 801cb1e:	b1c2      	cbz	r2, 801cb52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801cb20:	9d04      	ldr	r5, [sp, #16]
 801cb22:	436a      	muls	r2, r5
 801cb24:	1c55      	adds	r5, r2, #1
 801cb26:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801cb2a:	4d2e      	ldr	r5, [pc, #184]	@ (801cbe4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801cb2c:	1212      	asrs	r2, r2, #8
 801cb2e:	682e      	ldr	r6, [r5, #0]
 801cb30:	2aff      	cmp	r2, #255	@ 0xff
 801cb32:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801cb36:	d113      	bne.n	801cb60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801cb38:	0972      	lsrs	r2, r6, #5
 801cb3a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801cb3e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cb42:	f025 0507 	bic.w	r5, r5, #7
 801cb46:	4315      	orrs	r5, r2
 801cb48:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801cb4c:	4335      	orrs	r5, r6
 801cb4e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801cb52:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801cb54:	4410      	add	r0, r2
 801cb56:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cb58:	f108 0801 	add.w	r8, r8, #1
 801cb5c:	4411      	add	r1, r2
 801cb5e:	e7c9      	b.n	801caf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801cb60:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801cb64:	fa1f fa82 	uxth.w	sl, r2
 801cb68:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801cb6c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801cb70:	43d2      	mvns	r2, r2
 801cb72:	b2d2      	uxtb	r2, r2
 801cb74:	fb17 f70a 	smulbb	r7, r7, sl
 801cb78:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801cb7c:	fb0c 7c02 	mla	ip, ip, r2, r7
 801cb80:	b2f6      	uxtb	r6, r6
 801cb82:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801cb86:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cb8a:	fa5f fe8e 	uxtb.w	lr, lr
 801cb8e:	fb16 f60a 	smulbb	r6, r6, sl
 801cb92:	fb0e 6602 	mla	r6, lr, r2, r6
 801cb96:	b2ed      	uxtb	r5, r5
 801cb98:	fa1f fc8c 	uxth.w	ip, ip
 801cb9c:	fb15 f50a 	smulbb	r5, r5, sl
 801cba0:	b2b6      	uxth	r6, r6
 801cba2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801cba6:	fb07 5702 	mla	r7, r7, r2, r5
 801cbaa:	f10c 0201 	add.w	r2, ip, #1
 801cbae:	1c75      	adds	r5, r6, #1
 801cbb0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801cbb4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801cbb8:	b2bf      	uxth	r7, r7
 801cbba:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801cbbe:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801cbc2:	ea45 0c0c 	orr.w	ip, r5, ip
 801cbc6:	1c7d      	adds	r5, r7, #1
 801cbc8:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801cbcc:	096d      	lsrs	r5, r5, #5
 801cbce:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cbd2:	ea4c 0c05 	orr.w	ip, ip, r5
 801cbd6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801cbda:	e7ba      	b.n	801cb52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801cbdc:	b007      	add	sp, #28
 801cbde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cbe2:	bf00      	nop
 801cbe4:	20013f5c 	.word	0x20013f5c

0801cbe8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cbe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbec:	b087      	sub	sp, #28
 801cbee:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 801cefc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801cbf2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801cbf4:	9205      	str	r2, [sp, #20]
 801cbf6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801cbfa:	9101      	str	r1, [sp, #4]
 801cbfc:	6841      	ldr	r1, [r0, #4]
 801cbfe:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 801cc02:	fb01 2404 	mla	r4, r1, r4, r2
 801cc06:	6802      	ldr	r2, [r0, #0]
 801cc08:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cc0c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801cc10:	3201      	adds	r2, #1
 801cc12:	f022 0201 	bic.w	r2, r2, #1
 801cc16:	9202      	str	r2, [sp, #8]
 801cc18:	f8db 2000 	ldr.w	r2, [fp]
 801cc1c:	9203      	str	r2, [sp, #12]
 801cc1e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801cc22:	9a01      	ldr	r2, [sp, #4]
 801cc24:	2a00      	cmp	r2, #0
 801cc26:	dc03      	bgt.n	801cc30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801cc28:	9a05      	ldr	r2, [sp, #20]
 801cc2a:	2a00      	cmp	r2, #0
 801cc2c:	f340 8162 	ble.w	801cef4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801cc30:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801cc32:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801cc36:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801cc3a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801cc3e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801cc40:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801cc44:	2b00      	cmp	r3, #0
 801cc46:	dd0e      	ble.n	801cc66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cc48:	1402      	asrs	r2, r0, #16
 801cc4a:	d405      	bmi.n	801cc58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cc4c:	42ba      	cmp	r2, r7
 801cc4e:	da03      	bge.n	801cc58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cc50:	140a      	asrs	r2, r1, #16
 801cc52:	d401      	bmi.n	801cc58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cc54:	42b2      	cmp	r2, r6
 801cc56:	db07      	blt.n	801cc68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801cc58:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801cc5a:	4410      	add	r0, r2
 801cc5c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cc5e:	3b01      	subs	r3, #1
 801cc60:	4411      	add	r1, r2
 801cc62:	3402      	adds	r4, #2
 801cc64:	e7ee      	b.n	801cc44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801cc66:	d017      	beq.n	801cc98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801cc68:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801cc6a:	1e5a      	subs	r2, r3, #1
 801cc6c:	fb05 0502 	mla	r5, r5, r2, r0
 801cc70:	142d      	asrs	r5, r5, #16
 801cc72:	d409      	bmi.n	801cc88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cc74:	42bd      	cmp	r5, r7
 801cc76:	da07      	bge.n	801cc88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cc78:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801cc7a:	fb05 1202 	mla	r2, r5, r2, r1
 801cc7e:	1412      	asrs	r2, r2, #16
 801cc80:	d402      	bmi.n	801cc88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cc82:	42b2      	cmp	r2, r6
 801cc84:	f2c0 80c3 	blt.w	801ce0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801cc88:	2500      	movs	r5, #0
 801cc8a:	195a      	adds	r2, r3, r5
 801cc8c:	2a00      	cmp	r2, #0
 801cc8e:	dc3f      	bgt.n	801cd10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801cc90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cc94:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cc98:	9b01      	ldr	r3, [sp, #4]
 801cc9a:	2b00      	cmp	r3, #0
 801cc9c:	f340 812a 	ble.w	801cef4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801cca0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cca4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cca8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ccac:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ccae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ccb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ccb6:	eeb0 6a62 	vmov.f32	s12, s5
 801ccba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ccbe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ccc2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ccc6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801ccca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ccce:	eeb0 6a43 	vmov.f32	s12, s6
 801ccd2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ccd6:	ee12 2a90 	vmov	r2, s5
 801ccda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ccde:	fb92 f3f3 	sdiv	r3, r2, r3
 801cce2:	ee13 2a10 	vmov	r2, s6
 801cce6:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cce8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ccea:	fb92 f3f3 	sdiv	r3, r2, r3
 801ccee:	9314      	str	r3, [sp, #80]	@ 0x50
 801ccf0:	9b01      	ldr	r3, [sp, #4]
 801ccf2:	9a05      	ldr	r2, [sp, #20]
 801ccf4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ccf8:	3b01      	subs	r3, #1
 801ccfa:	9301      	str	r3, [sp, #4]
 801ccfc:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801cd00:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801cd02:	eeb0 3a67 	vmov.f32	s6, s15
 801cd06:	bf08      	it	eq
 801cd08:	4613      	moveq	r3, r2
 801cd0a:	eef0 2a47 	vmov.f32	s5, s14
 801cd0e:	e788      	b.n	801cc22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cd10:	1406      	asrs	r6, r0, #16
 801cd12:	d42c      	bmi.n	801cd6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd14:	f8db 2008 	ldr.w	r2, [fp, #8]
 801cd18:	42b2      	cmp	r2, r6
 801cd1a:	dd28      	ble.n	801cd6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd1c:	140f      	asrs	r7, r1, #16
 801cd1e:	d426      	bmi.n	801cd6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd20:	f8db 200c 	ldr.w	r2, [fp, #12]
 801cd24:	42ba      	cmp	r2, r7
 801cd26:	dd22      	ble.n	801cd6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd28:	9a02      	ldr	r2, [sp, #8]
 801cd2a:	fb07 6602 	mla	r6, r7, r2, r6
 801cd2e:	0872      	lsrs	r2, r6, #1
 801cd30:	9f03      	ldr	r7, [sp, #12]
 801cd32:	5cba      	ldrb	r2, [r7, r2]
 801cd34:	07f6      	lsls	r6, r6, #31
 801cd36:	bf54      	ite	pl
 801cd38:	f002 020f 	andpl.w	r2, r2, #15
 801cd3c:	1112      	asrmi	r2, r2, #4
 801cd3e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cd42:	b2d2      	uxtb	r2, r2
 801cd44:	2aff      	cmp	r2, #255	@ 0xff
 801cd46:	d118      	bne.n	801cd7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801cd48:	f8d8 2000 	ldr.w	r2, [r8]
 801cd4c:	f06f 0601 	mvn.w	r6, #1
 801cd50:	fb06 f705 	mul.w	r7, r6, r5
 801cd54:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 801cd58:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801cd5c:	0956      	lsrs	r6, r2, #5
 801cd5e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801cd62:	ea4c 0606 	orr.w	r6, ip, r6
 801cd66:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cd6a:	4316      	orrs	r6, r2
 801cd6c:	53e6      	strh	r6, [r4, r7]
 801cd6e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801cd70:	4410      	add	r0, r2
 801cd72:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cd74:	3d01      	subs	r5, #1
 801cd76:	4411      	add	r1, r2
 801cd78:	e787      	b.n	801cc8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801cd7a:	2a00      	cmp	r2, #0
 801cd7c:	d0f7      	beq.n	801cd6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd7e:	f06f 0601 	mvn.w	r6, #1
 801cd82:	436e      	muls	r6, r5
 801cd84:	f8d8 c000 	ldr.w	ip, [r8]
 801cd88:	f834 e006 	ldrh.w	lr, [r4, r6]
 801cd8c:	9604      	str	r6, [sp, #16]
 801cd8e:	fa1f f982 	uxth.w	r9, r2
 801cd92:	ea4f 272e 	mov.w	r7, lr, asr #8
 801cd96:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801cd9a:	43d2      	mvns	r2, r2
 801cd9c:	b2d2      	uxtb	r2, r2
 801cd9e:	fb16 f609 	smulbb	r6, r6, r9
 801cda2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801cda6:	fb07 6702 	mla	r7, r7, r2, r6
 801cdaa:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801cdae:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801cdb2:	fa5f fc8c 	uxtb.w	ip, ip
 801cdb6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cdba:	fa5f fe8e 	uxtb.w	lr, lr
 801cdbe:	fb1c fc09 	smulbb	ip, ip, r9
 801cdc2:	fb0e cc02 	mla	ip, lr, r2, ip
 801cdc6:	b2bf      	uxth	r7, r7
 801cdc8:	fb1a fa09 	smulbb	sl, sl, r9
 801cdcc:	fa1f fc8c 	uxth.w	ip, ip
 801cdd0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801cdd4:	fb06 a602 	mla	r6, r6, r2, sl
 801cdd8:	1c7a      	adds	r2, r7, #1
 801cdda:	f10c 0a01 	add.w	sl, ip, #1
 801cdde:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801cde2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801cde6:	b2b6      	uxth	r6, r6
 801cde8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cdec:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801cdf0:	ea4a 0707 	orr.w	r7, sl, r7
 801cdf4:	f106 0a01 	add.w	sl, r6, #1
 801cdf8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801cdfc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ce00:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801ce04:	9a04      	ldr	r2, [sp, #16]
 801ce06:	ea47 070a 	orr.w	r7, r7, sl
 801ce0a:	52a7      	strh	r7, [r4, r2]
 801ce0c:	e7af      	b.n	801cd6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ce0e:	f04f 0e00 	mov.w	lr, #0
 801ce12:	eba3 020e 	sub.w	r2, r3, lr
 801ce16:	2a00      	cmp	r2, #0
 801ce18:	f77f af3a 	ble.w	801cc90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ce1c:	9e02      	ldr	r6, [sp, #8]
 801ce1e:	1402      	asrs	r2, r0, #16
 801ce20:	140d      	asrs	r5, r1, #16
 801ce22:	fb06 2505 	mla	r5, r6, r5, r2
 801ce26:	086a      	lsrs	r2, r5, #1
 801ce28:	9e03      	ldr	r6, [sp, #12]
 801ce2a:	5cb2      	ldrb	r2, [r6, r2]
 801ce2c:	07ed      	lsls	r5, r5, #31
 801ce2e:	bf54      	ite	pl
 801ce30:	f002 020f 	andpl.w	r2, r2, #15
 801ce34:	1112      	asrmi	r2, r2, #4
 801ce36:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ce3a:	b2d2      	uxtb	r2, r2
 801ce3c:	2aff      	cmp	r2, #255	@ 0xff
 801ce3e:	d115      	bne.n	801ce6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ce40:	f8d8 5000 	ldr.w	r5, [r8]
 801ce44:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 801ce48:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ce4c:	096a      	lsrs	r2, r5, #5
 801ce4e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ce52:	4332      	orrs	r2, r6
 801ce54:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ce58:	432a      	orrs	r2, r5
 801ce5a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ce5e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801ce60:	4410      	add	r0, r2
 801ce62:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ce64:	f10e 0e01 	add.w	lr, lr, #1
 801ce68:	4411      	add	r1, r2
 801ce6a:	e7d2      	b.n	801ce12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ce6c:	2a00      	cmp	r2, #0
 801ce6e:	d0f6      	beq.n	801ce5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ce70:	f8d8 7000 	ldr.w	r7, [r8]
 801ce74:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ce78:	fa1f f982 	uxth.w	r9, r2
 801ce7c:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ce80:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801ce84:	43d2      	mvns	r2, r2
 801ce86:	b2d2      	uxtb	r2, r2
 801ce88:	fb15 f509 	smulbb	r5, r5, r9
 801ce8c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801ce90:	fb06 5602 	mla	r6, r6, r2, r5
 801ce94:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801ce98:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ce9c:	b2ff      	uxtb	r7, r7
 801ce9e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cea2:	fa5f fc8c 	uxtb.w	ip, ip
 801cea6:	fb17 f709 	smulbb	r7, r7, r9
 801ceaa:	fb0c 7702 	mla	r7, ip, r2, r7
 801ceae:	b2b6      	uxth	r6, r6
 801ceb0:	fb1a fa09 	smulbb	sl, sl, r9
 801ceb4:	b2bf      	uxth	r7, r7
 801ceb6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801ceba:	fb05 a502 	mla	r5, r5, r2, sl
 801cebe:	1c72      	adds	r2, r6, #1
 801cec0:	f107 0a01 	add.w	sl, r7, #1
 801cec4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801cec8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801cecc:	b2ad      	uxth	r5, r5
 801cece:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ced2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801ced6:	ea4a 0606 	orr.w	r6, sl, r6
 801ceda:	f105 0a01 	add.w	sl, r5, #1
 801cede:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cee2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cee6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801ceea:	ea46 060a 	orr.w	r6, r6, sl
 801ceee:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801cef2:	e7b4      	b.n	801ce5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cef4:	b007      	add	sp, #28
 801cef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cefa:	bf00      	nop
 801cefc:	20013f5c 	.word	0x20013f5c

0801cf00 <_ZN8touchgfx8LCD16bppD1Ev>:
 801cf00:	4770      	bx	lr

0801cf02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 801cf02:	4770      	bx	lr

0801cf04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801cf04:	4770      	bx	lr

0801cf06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801cf06:	4770      	bx	lr

0801cf08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801cf08:	4770      	bx	lr

0801cf0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801cf0a:	4770      	bx	lr

0801cf0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801cf0c:	4770      	bx	lr

0801cf0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801cf0e:	4770      	bx	lr

0801cf10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801cf10:	4770      	bx	lr

0801cf12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801cf12:	4770      	bx	lr

0801cf14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801cf14:	4770      	bx	lr

0801cf16 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801cf16:	4770      	bx	lr

0801cf18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801cf18:	4770      	bx	lr

0801cf1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801cf1a:	4770      	bx	lr

0801cf1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801cf1c:	4770      	bx	lr

0801cf1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801cf1e:	4770      	bx	lr

0801cf20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801cf20:	4770      	bx	lr

0801cf22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801cf22:	4770      	bx	lr

0801cf24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801cf24:	4770      	bx	lr

0801cf26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801cf26:	4770      	bx	lr

0801cf28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801cf28:	4770      	bx	lr

0801cf2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801cf2a:	4770      	bx	lr

0801cf2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801cf2c:	4770      	bx	lr

0801cf2e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801cf2e:	4770      	bx	lr

0801cf30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801cf30:	4770      	bx	lr

0801cf32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801cf32:	4770      	bx	lr

0801cf34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801cf34:	4770      	bx	lr

0801cf36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801cf36:	4770      	bx	lr

0801cf38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801cf38:	4770      	bx	lr

0801cf3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801cf3a:	4770      	bx	lr

0801cf3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801cf3c:	4770      	bx	lr

0801cf3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801cf3e:	4770      	bx	lr

0801cf40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801cf40:	4770      	bx	lr

0801cf42 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801cf42:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cf46:	b088      	sub	sp, #32
 801cf48:	ac08      	add	r4, sp, #32
 801cf4a:	4606      	mov	r6, r0
 801cf4c:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801cf50:	4620      	mov	r0, r4
 801cf52:	4688      	mov	r8, r1
 801cf54:	4691      	mov	r9, r2
 801cf56:	f7fd fc31 	bl	801a7bc <_ZNK8touchgfx6Bitmap7getDataEv>
 801cf5a:	6833      	ldr	r3, [r6, #0]
 801cf5c:	4605      	mov	r5, r0
 801cf5e:	4620      	mov	r0, r4
 801cf60:	699f      	ldr	r7, [r3, #24]
 801cf62:	f7fd fb39 	bl	801a5d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801cf66:	4682      	mov	sl, r0
 801cf68:	4620      	mov	r0, r4
 801cf6a:	f7fd fb69 	bl	801a640 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801cf6e:	9500      	str	r5, [sp, #0]
 801cf70:	e9cd a001 	strd	sl, r0, [sp, #4]
 801cf74:	464b      	mov	r3, r9
 801cf76:	a806      	add	r0, sp, #24
 801cf78:	4642      	mov	r2, r8
 801cf7a:	4631      	mov	r1, r6
 801cf7c:	47b8      	blx	r7
 801cf7e:	4628      	mov	r0, r5
 801cf80:	b008      	add	sp, #32
 801cf82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801cf88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801cf88:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801cf8c:	2300      	movs	r3, #0
 801cf8e:	9300      	str	r3, [sp, #0]
 801cf90:	4b3d      	ldr	r3, [pc, #244]	@ (801d088 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801cf92:	781b      	ldrb	r3, [r3, #0]
 801cf94:	2b00      	cmp	r3, #0
 801cf96:	d137      	bne.n	801d008 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801cf98:	4a3c      	ldr	r2, [pc, #240]	@ (801d08c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801cf9a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801cf9e:	f8ad 2004 	strh.w	r2, [sp, #4]
 801cfa2:	2b00      	cmp	r3, #0
 801cfa4:	d132      	bne.n	801d00c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801cfa6:	4b3a      	ldr	r3, [pc, #232]	@ (801d090 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801cfa8:	f9b3 3000 	ldrsh.w	r3, [r3]
 801cfac:	6808      	ldr	r0, [r1, #0]
 801cfae:	6849      	ldr	r1, [r1, #4]
 801cfb0:	f8ad 3006 	strh.w	r3, [sp, #6]
 801cfb4:	ac02      	add	r4, sp, #8
 801cfb6:	ab02      	add	r3, sp, #8
 801cfb8:	c303      	stmia	r3!, {r0, r1}
 801cfba:	4669      	mov	r1, sp
 801cfbc:	4620      	mov	r0, r4
 801cfbe:	f7f9 fb7d 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cfc2:	4668      	mov	r0, sp
 801cfc4:	f7f9 fb52 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cfc8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801cfcc:	f8bd 2000 	ldrh.w	r2, [sp]
 801cfd0:	4d30      	ldr	r5, [pc, #192]	@ (801d094 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801cfd2:	4413      	add	r3, r2
 801cfd4:	f8ad 3008 	strh.w	r3, [sp, #8]
 801cfd8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cfdc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801cfe0:	6828      	ldr	r0, [r5, #0]
 801cfe2:	4413      	add	r3, r2
 801cfe4:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cfe8:	6803      	ldr	r3, [r0, #0]
 801cfea:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801cfec:	4798      	blx	r3
 801cfee:	f010 0f01 	tst.w	r0, #1
 801cff2:	462f      	mov	r7, r5
 801cff4:	d00c      	beq.n	801d010 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801cff6:	6828      	ldr	r0, [r5, #0]
 801cff8:	6803      	ldr	r3, [r0, #0]
 801cffa:	e894 0006 	ldmia.w	r4, {r1, r2}
 801cffe:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 801d000:	4798      	blx	r3
 801d002:	b004      	add	sp, #16
 801d004:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d008:	4a21      	ldr	r2, [pc, #132]	@ (801d090 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801d00a:	e7c6      	b.n	801cf9a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801d00c:	4b1f      	ldr	r3, [pc, #124]	@ (801d08c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801d00e:	e7cb      	b.n	801cfa8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801d010:	6838      	ldr	r0, [r7, #0]
 801d012:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801d016:	6803      	ldr	r3, [r0, #0]
 801d018:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801d01c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801d01e:	4798      	blx	r3
 801d020:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801d024:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d028:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801d02c:	fb16 3602 	smlabb	r6, r6, r2, r3
 801d030:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d034:	6838      	ldr	r0, [r7, #0]
 801d036:	6803      	ldr	r3, [r0, #0]
 801d038:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d03a:	4798      	blx	r3
 801d03c:	4a13      	ldr	r2, [pc, #76]	@ (801d08c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801d03e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801d042:	8813      	ldrh	r3, [r2, #0]
 801d044:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801d048:	fb03 1404 	mla	r4, r3, r4, r1
 801d04c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d050:	435d      	muls	r5, r3
 801d052:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d056:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801d05a:	4691      	mov	r9, r2
 801d05c:	6838      	ldr	r0, [r7, #0]
 801d05e:	42ac      	cmp	r4, r5
 801d060:	6803      	ldr	r3, [r0, #0]
 801d062:	d20e      	bcs.n	801d082 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801d064:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 801d068:	4632      	mov	r2, r6
 801d06a:	4643      	mov	r3, r8
 801d06c:	4621      	mov	r1, r4
 801d06e:	47d0      	blx	sl
 801d070:	f8b9 3000 	ldrh.w	r3, [r9]
 801d074:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d078:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801d07c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d080:	e7ec      	b.n	801d05c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801d082:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801d084:	4798      	blx	r3
 801d086:	e7bc      	b.n	801d002 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801d088:	20013f44 	.word	0x20013f44
 801d08c:	20013f46 	.word	0x20013f46
 801d090:	20013f48 	.word	0x20013f48
 801d094:	20013f4c 	.word	0x20013f4c

0801d098 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801d098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d09c:	b08b      	sub	sp, #44	@ 0x2c
 801d09e:	460f      	mov	r7, r1
 801d0a0:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 801d0a4:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 801d0a8:	4616      	mov	r6, r2
 801d0aa:	f1bb 0f00 	cmp.w	fp, #0
 801d0ae:	d04a      	beq.n	801d146 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801d0b0:	6810      	ldr	r0, [r2, #0]
 801d0b2:	6851      	ldr	r1, [r2, #4]
 801d0b4:	ad06      	add	r5, sp, #24
 801d0b6:	c503      	stmia	r5!, {r0, r1}
 801d0b8:	6818      	ldr	r0, [r3, #0]
 801d0ba:	6859      	ldr	r1, [r3, #4]
 801d0bc:	ad08      	add	r5, sp, #32
 801d0be:	c503      	stmia	r5!, {r0, r1}
 801d0c0:	a806      	add	r0, sp, #24
 801d0c2:	f7f9 fad3 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d0c6:	4631      	mov	r1, r6
 801d0c8:	a808      	add	r0, sp, #32
 801d0ca:	f7f9 faf7 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d0ce:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801d0d2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801d0d6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801d0da:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801d0de:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 801d0e2:	fb16 2103 	smlabb	r1, r6, r3, r2
 801d0e6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801d0ea:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801d0ee:	4f5f      	ldr	r7, [pc, #380]	@ (801d26c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801d0f0:	440a      	add	r2, r1
 801d0f2:	f8ad 2020 	strh.w	r2, [sp, #32]
 801d0f6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801d0fa:	6838      	ldr	r0, [r7, #0]
 801d0fc:	4413      	add	r3, r2
 801d0fe:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801d102:	6803      	ldr	r3, [r0, #0]
 801d104:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801d106:	4798      	blx	r3
 801d108:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801d10c:	46b9      	mov	r9, r7
 801d10e:	d11d      	bne.n	801d14c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801d110:	b9fc      	cbnz	r4, 801d152 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d112:	f010 0f01 	tst.w	r0, #1
 801d116:	d01c      	beq.n	801d152 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d118:	f8d9 0000 	ldr.w	r0, [r9]
 801d11c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801d120:	6801      	ldr	r1, [r0, #0]
 801d122:	f8cd b00c 	str.w	fp, [sp, #12]
 801d126:	2700      	movs	r7, #0
 801d128:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801d12c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801d130:	9402      	str	r4, [sp, #8]
 801d132:	b2ad      	uxth	r5, r5
 801d134:	fa1f f488 	uxth.w	r4, r8
 801d138:	9501      	str	r5, [sp, #4]
 801d13a:	9400      	str	r4, [sp, #0]
 801d13c:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 801d13e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801d142:	4631      	mov	r1, r6
 801d144:	47a0      	blx	r4
 801d146:	b00b      	add	sp, #44	@ 0x2c
 801d148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d14c:	f010 0f04 	tst.w	r0, #4
 801d150:	e7e1      	b.n	801d116 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801d152:	f8d9 0000 	ldr.w	r0, [r9]
 801d156:	6803      	ldr	r3, [r0, #0]
 801d158:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d15a:	4798      	blx	r3
 801d15c:	4b44      	ldr	r3, [pc, #272]	@ (801d270 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801d15e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 801d162:	881a      	ldrh	r2, [r3, #0]
 801d164:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801d168:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801d16c:	fb02 1404 	mla	r4, r2, r4, r1
 801d170:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d174:	469a      	mov	sl, r3
 801d176:	fb05 f502 	mul.w	r5, r5, r2
 801d17a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801d17e:	d059      	beq.n	801d234 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801d180:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 801d184:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d188:	fa1f f28b 	uxth.w	r2, fp
 801d18c:	fa1f f989 	uxth.w	r9, r9
 801d190:	469e      	mov	lr, r3
 801d192:	42ac      	cmp	r4, r5
 801d194:	d264      	bcs.n	801d260 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d196:	eb04 0a07 	add.w	sl, r4, r7
 801d19a:	4554      	cmp	r4, sl
 801d19c:	d23d      	bcs.n	801d21a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801d19e:	8821      	ldrh	r1, [r4, #0]
 801d1a0:	f836 3b02 	ldrh.w	r3, [r6], #2
 801d1a4:	1208      	asrs	r0, r1, #8
 801d1a6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d1aa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d1ae:	fb10 f009 	smulbb	r0, r0, r9
 801d1b2:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801d1b6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d1ba:	00c9      	lsls	r1, r1, #3
 801d1bc:	fb0c 0c02 	mla	ip, ip, r2, r0
 801d1c0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801d1c4:	10d8      	asrs	r0, r3, #3
 801d1c6:	b2c9      	uxtb	r1, r1
 801d1c8:	00db      	lsls	r3, r3, #3
 801d1ca:	fa1f fc8c 	uxth.w	ip, ip
 801d1ce:	fb1b fb09 	smulbb	fp, fp, r9
 801d1d2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d1d6:	b2db      	uxtb	r3, r3
 801d1d8:	fb11 f109 	smulbb	r1, r1, r9
 801d1dc:	fb00 b002 	mla	r0, r0, r2, fp
 801d1e0:	fb03 1302 	mla	r3, r3, r2, r1
 801d1e4:	f10c 0b01 	add.w	fp, ip, #1
 801d1e8:	b29b      	uxth	r3, r3
 801d1ea:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801d1ee:	b280      	uxth	r0, r0
 801d1f0:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 801d1f4:	f103 0c01 	add.w	ip, r3, #1
 801d1f8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d1fc:	1c43      	adds	r3, r0, #1
 801d1fe:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d202:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d206:	0940      	lsrs	r0, r0, #5
 801d208:	ea4c 0c0b 	orr.w	ip, ip, fp
 801d20c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d210:	ea4c 0c00 	orr.w	ip, ip, r0
 801d214:	f824 cb02 	strh.w	ip, [r4], #2
 801d218:	e7bf      	b.n	801d19a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801d21a:	f8be 3000 	ldrh.w	r3, [lr]
 801d21e:	eba3 0308 	sub.w	r3, r3, r8
 801d222:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d226:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d22a:	eba3 0308 	sub.w	r3, r3, r8
 801d22e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d232:	e7ae      	b.n	801d192 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801d234:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d238:	f8d9 0000 	ldr.w	r0, [r9]
 801d23c:	42ac      	cmp	r4, r5
 801d23e:	6803      	ldr	r3, [r0, #0]
 801d240:	d20e      	bcs.n	801d260 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d242:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 801d246:	4632      	mov	r2, r6
 801d248:	463b      	mov	r3, r7
 801d24a:	4621      	mov	r1, r4
 801d24c:	47c0      	blx	r8
 801d24e:	f8ba 3000 	ldrh.w	r3, [sl]
 801d252:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d256:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d25a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d25e:	e7eb      	b.n	801d238 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801d260:	4b02      	ldr	r3, [pc, #8]	@ (801d26c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801d262:	6818      	ldr	r0, [r3, #0]
 801d264:	6803      	ldr	r3, [r0, #0]
 801d266:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801d268:	4798      	blx	r3
 801d26a:	e76c      	b.n	801d146 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801d26c:	20013f4c 	.word	0x20013f4c
 801d270:	20013f46 	.word	0x20013f46

0801d274 <_ZN8touchgfx8LCD16bppD0Ev>:
 801d274:	b510      	push	{r4, lr}
 801d276:	218c      	movs	r1, #140	@ 0x8c
 801d278:	4604      	mov	r4, r0
 801d27a:	f00c fa4b 	bl	8029714 <_ZdlPvj>
 801d27e:	4620      	mov	r0, r4
 801d280:	bd10      	pop	{r4, pc}

0801d282 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801d282:	b510      	push	{r4, lr}
 801d284:	2104      	movs	r1, #4
 801d286:	4604      	mov	r4, r0
 801d288:	f00c fa44 	bl	8029714 <_ZdlPvj>
 801d28c:	4620      	mov	r0, r4
 801d28e:	bd10      	pop	{r4, pc}

0801d290 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801d290:	b510      	push	{r4, lr}
 801d292:	2104      	movs	r1, #4
 801d294:	4604      	mov	r4, r0
 801d296:	f00c fa3d 	bl	8029714 <_ZdlPvj>
 801d29a:	4620      	mov	r0, r4
 801d29c:	bd10      	pop	{r4, pc}

0801d29e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801d29e:	b510      	push	{r4, lr}
 801d2a0:	f640 0144 	movw	r1, #2116	@ 0x844
 801d2a4:	4604      	mov	r4, r0
 801d2a6:	f00c fa35 	bl	8029714 <_ZdlPvj>
 801d2aa:	4620      	mov	r0, r4
 801d2ac:	bd10      	pop	{r4, pc}

0801d2ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801d2ae:	b510      	push	{r4, lr}
 801d2b0:	f44f 7182 	mov.w	r1, #260	@ 0x104
 801d2b4:	4604      	mov	r4, r0
 801d2b6:	f00c fa2d 	bl	8029714 <_ZdlPvj>
 801d2ba:	4620      	mov	r0, r4
 801d2bc:	bd10      	pop	{r4, pc}

0801d2be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d2be:	b510      	push	{r4, lr}
 801d2c0:	2104      	movs	r1, #4
 801d2c2:	4604      	mov	r4, r0
 801d2c4:	f00c fa26 	bl	8029714 <_ZdlPvj>
 801d2c8:	4620      	mov	r0, r4
 801d2ca:	bd10      	pop	{r4, pc}

0801d2cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d2cc:	b510      	push	{r4, lr}
 801d2ce:	2104      	movs	r1, #4
 801d2d0:	4604      	mov	r4, r0
 801d2d2:	f00c fa1f 	bl	8029714 <_ZdlPvj>
 801d2d6:	4620      	mov	r0, r4
 801d2d8:	bd10      	pop	{r4, pc}

0801d2da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d2da:	b510      	push	{r4, lr}
 801d2dc:	2104      	movs	r1, #4
 801d2de:	4604      	mov	r4, r0
 801d2e0:	f00c fa18 	bl	8029714 <_ZdlPvj>
 801d2e4:	4620      	mov	r0, r4
 801d2e6:	bd10      	pop	{r4, pc}

0801d2e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801d2e8:	b510      	push	{r4, lr}
 801d2ea:	2104      	movs	r1, #4
 801d2ec:	4604      	mov	r4, r0
 801d2ee:	f00c fa11 	bl	8029714 <_ZdlPvj>
 801d2f2:	4620      	mov	r0, r4
 801d2f4:	bd10      	pop	{r4, pc}

0801d2f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d2f6:	b510      	push	{r4, lr}
 801d2f8:	2104      	movs	r1, #4
 801d2fa:	4604      	mov	r4, r0
 801d2fc:	f00c fa0a 	bl	8029714 <_ZdlPvj>
 801d300:	4620      	mov	r0, r4
 801d302:	bd10      	pop	{r4, pc}

0801d304 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801d304:	b510      	push	{r4, lr}
 801d306:	2104      	movs	r1, #4
 801d308:	4604      	mov	r4, r0
 801d30a:	f00c fa03 	bl	8029714 <_ZdlPvj>
 801d30e:	4620      	mov	r0, r4
 801d310:	bd10      	pop	{r4, pc}

0801d312 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d312:	b510      	push	{r4, lr}
 801d314:	2104      	movs	r1, #4
 801d316:	4604      	mov	r4, r0
 801d318:	f00c f9fc 	bl	8029714 <_ZdlPvj>
 801d31c:	4620      	mov	r0, r4
 801d31e:	bd10      	pop	{r4, pc}

0801d320 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801d320:	b510      	push	{r4, lr}
 801d322:	2104      	movs	r1, #4
 801d324:	4604      	mov	r4, r0
 801d326:	f00c f9f5 	bl	8029714 <_ZdlPvj>
 801d32a:	4620      	mov	r0, r4
 801d32c:	bd10      	pop	{r4, pc}

0801d32e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d32e:	b510      	push	{r4, lr}
 801d330:	2104      	movs	r1, #4
 801d332:	4604      	mov	r4, r0
 801d334:	f00c f9ee 	bl	8029714 <_ZdlPvj>
 801d338:	4620      	mov	r0, r4
 801d33a:	bd10      	pop	{r4, pc}

0801d33c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d33c:	b510      	push	{r4, lr}
 801d33e:	2104      	movs	r1, #4
 801d340:	4604      	mov	r4, r0
 801d342:	f00c f9e7 	bl	8029714 <_ZdlPvj>
 801d346:	4620      	mov	r0, r4
 801d348:	bd10      	pop	{r4, pc}

0801d34a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d34a:	b510      	push	{r4, lr}
 801d34c:	2104      	movs	r1, #4
 801d34e:	4604      	mov	r4, r0
 801d350:	f00c f9e0 	bl	8029714 <_ZdlPvj>
 801d354:	4620      	mov	r0, r4
 801d356:	bd10      	pop	{r4, pc}

0801d358 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d358:	b510      	push	{r4, lr}
 801d35a:	2104      	movs	r1, #4
 801d35c:	4604      	mov	r4, r0
 801d35e:	f00c f9d9 	bl	8029714 <_ZdlPvj>
 801d362:	4620      	mov	r0, r4
 801d364:	bd10      	pop	{r4, pc}

0801d366 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d366:	b510      	push	{r4, lr}
 801d368:	2104      	movs	r1, #4
 801d36a:	4604      	mov	r4, r0
 801d36c:	f00c f9d2 	bl	8029714 <_ZdlPvj>
 801d370:	4620      	mov	r0, r4
 801d372:	bd10      	pop	{r4, pc}

0801d374 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d374:	b510      	push	{r4, lr}
 801d376:	2104      	movs	r1, #4
 801d378:	4604      	mov	r4, r0
 801d37a:	f00c f9cb 	bl	8029714 <_ZdlPvj>
 801d37e:	4620      	mov	r0, r4
 801d380:	bd10      	pop	{r4, pc}

0801d382 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d382:	b510      	push	{r4, lr}
 801d384:	2104      	movs	r1, #4
 801d386:	4604      	mov	r4, r0
 801d388:	f00c f9c4 	bl	8029714 <_ZdlPvj>
 801d38c:	4620      	mov	r0, r4
 801d38e:	bd10      	pop	{r4, pc}

0801d390 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d390:	b510      	push	{r4, lr}
 801d392:	2104      	movs	r1, #4
 801d394:	4604      	mov	r4, r0
 801d396:	f00c f9bd 	bl	8029714 <_ZdlPvj>
 801d39a:	4620      	mov	r0, r4
 801d39c:	bd10      	pop	{r4, pc}

0801d39e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d39e:	b510      	push	{r4, lr}
 801d3a0:	2104      	movs	r1, #4
 801d3a2:	4604      	mov	r4, r0
 801d3a4:	f00c f9b6 	bl	8029714 <_ZdlPvj>
 801d3a8:	4620      	mov	r0, r4
 801d3aa:	bd10      	pop	{r4, pc}

0801d3ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801d3ac:	b510      	push	{r4, lr}
 801d3ae:	2104      	movs	r1, #4
 801d3b0:	4604      	mov	r4, r0
 801d3b2:	f00c f9af 	bl	8029714 <_ZdlPvj>
 801d3b6:	4620      	mov	r0, r4
 801d3b8:	bd10      	pop	{r4, pc}

0801d3ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d3ba:	b510      	push	{r4, lr}
 801d3bc:	2104      	movs	r1, #4
 801d3be:	4604      	mov	r4, r0
 801d3c0:	f00c f9a8 	bl	8029714 <_ZdlPvj>
 801d3c4:	4620      	mov	r0, r4
 801d3c6:	bd10      	pop	{r4, pc}

0801d3c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d3c8:	b510      	push	{r4, lr}
 801d3ca:	2104      	movs	r1, #4
 801d3cc:	4604      	mov	r4, r0
 801d3ce:	f00c f9a1 	bl	8029714 <_ZdlPvj>
 801d3d2:	4620      	mov	r0, r4
 801d3d4:	bd10      	pop	{r4, pc}

0801d3d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d3d6:	b510      	push	{r4, lr}
 801d3d8:	2104      	movs	r1, #4
 801d3da:	4604      	mov	r4, r0
 801d3dc:	f00c f99a 	bl	8029714 <_ZdlPvj>
 801d3e0:	4620      	mov	r0, r4
 801d3e2:	bd10      	pop	{r4, pc}

0801d3e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d3e4:	b510      	push	{r4, lr}
 801d3e6:	2104      	movs	r1, #4
 801d3e8:	4604      	mov	r4, r0
 801d3ea:	f00c f993 	bl	8029714 <_ZdlPvj>
 801d3ee:	4620      	mov	r0, r4
 801d3f0:	bd10      	pop	{r4, pc}

0801d3f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d3f2:	b510      	push	{r4, lr}
 801d3f4:	2104      	movs	r1, #4
 801d3f6:	4604      	mov	r4, r0
 801d3f8:	f00c f98c 	bl	8029714 <_ZdlPvj>
 801d3fc:	4620      	mov	r0, r4
 801d3fe:	bd10      	pop	{r4, pc}

0801d400 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d400:	b510      	push	{r4, lr}
 801d402:	2104      	movs	r1, #4
 801d404:	4604      	mov	r4, r0
 801d406:	f00c f985 	bl	8029714 <_ZdlPvj>
 801d40a:	4620      	mov	r0, r4
 801d40c:	bd10      	pop	{r4, pc}

0801d40e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801d40e:	b510      	push	{r4, lr}
 801d410:	2104      	movs	r1, #4
 801d412:	4604      	mov	r4, r0
 801d414:	f00c f97e 	bl	8029714 <_ZdlPvj>
 801d418:	4620      	mov	r0, r4
 801d41a:	bd10      	pop	{r4, pc}

0801d41c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801d41c:	b510      	push	{r4, lr}
 801d41e:	2104      	movs	r1, #4
 801d420:	4604      	mov	r4, r0
 801d422:	f00c f977 	bl	8029714 <_ZdlPvj>
 801d426:	4620      	mov	r0, r4
 801d428:	bd10      	pop	{r4, pc}

0801d42a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801d42a:	b510      	push	{r4, lr}
 801d42c:	2104      	movs	r1, #4
 801d42e:	4604      	mov	r4, r0
 801d430:	f00c f970 	bl	8029714 <_ZdlPvj>
 801d434:	4620      	mov	r0, r4
 801d436:	bd10      	pop	{r4, pc}

0801d438 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801d438:	b510      	push	{r4, lr}
 801d43a:	2104      	movs	r1, #4
 801d43c:	4604      	mov	r4, r0
 801d43e:	f00c f969 	bl	8029714 <_ZdlPvj>
 801d442:	4620      	mov	r0, r4
 801d444:	bd10      	pop	{r4, pc}
	...

0801d448 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 801d448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d44c:	b08f      	sub	sp, #60	@ 0x3c
 801d44e:	4616      	mov	r6, r2
 801d450:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 801d454:	9205      	str	r2, [sp, #20]
 801d456:	4682      	mov	sl, r0
 801d458:	460d      	mov	r5, r1
 801d45a:	2a00      	cmp	r2, #0
 801d45c:	f000 82b7 	beq.w	801d9ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 801d460:	6830      	ldr	r0, [r6, #0]
 801d462:	6871      	ldr	r1, [r6, #4]
 801d464:	ac0a      	add	r4, sp, #40	@ 0x28
 801d466:	c403      	stmia	r4!, {r0, r1}
 801d468:	6818      	ldr	r0, [r3, #0]
 801d46a:	6859      	ldr	r1, [r3, #4]
 801d46c:	ac0c      	add	r4, sp, #48	@ 0x30
 801d46e:	c403      	stmia	r4!, {r0, r1}
 801d470:	a80a      	add	r0, sp, #40	@ 0x28
 801d472:	f7f9 f8fb 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d476:	4631      	mov	r1, r6
 801d478:	a80c      	add	r0, sp, #48	@ 0x30
 801d47a:	f7f9 f91f 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d47e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801d482:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801d486:	bfd7      	itett	le
 801d488:	b293      	uxthle	r3, r2
 801d48a:	2301      	movgt	r3, #1
 801d48c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801d490:	fb91 f3f3 	sdivle	r3, r1, r3
 801d494:	9300      	str	r3, [sp, #0]
 801d496:	f105 0308 	add.w	r3, r5, #8
 801d49a:	9900      	ldr	r1, [sp, #0]
 801d49c:	9306      	str	r3, [sp, #24]
 801d49e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801d4a2:	440b      	add	r3, r1
 801d4a4:	3b01      	subs	r3, #1
 801d4a6:	fb93 f3f1 	sdiv	r3, r3, r1
 801d4aa:	9906      	ldr	r1, [sp, #24]
 801d4ac:	3b01      	subs	r3, #1
 801d4ae:	b29b      	uxth	r3, r3
 801d4b0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801d4b4:	9307      	str	r3, [sp, #28]
 801d4b6:	9900      	ldr	r1, [sp, #0]
 801d4b8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801d4bc:	fb93 f0f1 	sdiv	r0, r3, r1
 801d4c0:	b284      	uxth	r4, r0
 801d4c2:	9402      	str	r4, [sp, #8]
 801d4c4:	9d02      	ldr	r5, [sp, #8]
 801d4c6:	9c00      	ldr	r4, [sp, #0]
 801d4c8:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801d4cc:	fb05 3414 	mls	r4, r5, r4, r3
 801d4d0:	fb14 f402 	smulbb	r4, r4, r2
 801d4d4:	440c      	add	r4, r1
 801d4d6:	b2a4      	uxth	r4, r4
 801d4d8:	2d00      	cmp	r5, #0
 801d4da:	d06c      	beq.n	801d5b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801d4dc:	1e6a      	subs	r2, r5, #1
 801d4de:	9806      	ldr	r0, [sp, #24]
 801d4e0:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 801d4e4:	9a07      	ldr	r2, [sp, #28]
 801d4e6:	ba36      	rev	r6, r6
 801d4e8:	4416      	add	r6, r2
 801d4ea:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801d4ee:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801d4f2:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 801d828 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801d4f6:	4411      	add	r1, r2
 801d4f8:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801d4fc:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801d500:	4413      	add	r3, r2
 801d502:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801d506:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801d50a:	9301      	str	r3, [sp, #4]
 801d50c:	4bc4      	ldr	r3, [pc, #784]	@ (801d820 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801d50e:	6818      	ldr	r0, [r3, #0]
 801d510:	6803      	ldr	r3, [r0, #0]
 801d512:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d514:	4798      	blx	r3
 801d516:	4bc3      	ldr	r3, [pc, #780]	@ (801d824 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 801d518:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801d51c:	881b      	ldrh	r3, [r3, #0]
 801d51e:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 801d522:	fb03 2808 	mla	r8, r3, r8, r2
 801d526:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801d52a:	436b      	muls	r3, r5
 801d52c:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 801d530:	9309      	str	r3, [sp, #36]	@ 0x24
 801d532:	2500      	movs	r5, #0
 801d534:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801d538:	fb94 f3f3 	sdiv	r3, r4, r3
 801d53c:	9304      	str	r3, [sp, #16]
 801d53e:	f10a 0304 	add.w	r3, sl, #4
 801d542:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801d546:	4629      	mov	r1, r5
 801d548:	4618      	mov	r0, r3
 801d54a:	9308      	str	r3, [sp, #32]
 801d54c:	f00d fa25 	bl	802a99a <memset>
 801d550:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d552:	4543      	cmp	r3, r8
 801d554:	f240 8236 	bls.w	801d9c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 801d558:	2203      	movs	r2, #3
 801d55a:	2107      	movs	r1, #7
 801d55c:	200b      	movs	r0, #11
 801d55e:	2c00      	cmp	r4, #0
 801d560:	f000 8131 	beq.w	801d7c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 801d564:	7833      	ldrb	r3, [r6, #0]
 801d566:	b2db      	uxtb	r3, r3
 801d568:	2bfe      	cmp	r3, #254	@ 0xfe
 801d56a:	d126      	bne.n	801d5ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 801d56c:	f896 e001 	ldrb.w	lr, [r6, #1]
 801d570:	f896 c002 	ldrb.w	ip, [r6, #2]
 801d574:	f896 b003 	ldrb.w	fp, [r6, #3]
 801d578:	fa5f fe8e 	uxtb.w	lr, lr
 801d57c:	fa5f fc8c 	uxtb.w	ip, ip
 801d580:	f36e 0507 	bfi	r5, lr, #0, #8
 801d584:	f36c 250f 	bfi	r5, ip, #8, #8
 801d588:	fa5f fb8b 	uxtb.w	fp, fp
 801d58c:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801d590:	f36b 4517 	bfi	r5, fp, #16, #8
 801d594:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 801d598:	0e2b      	lsrs	r3, r5, #24
 801d59a:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801d59e:	fb10 c303 	smlabb	r3, r0, r3, ip
 801d5a2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801d5a6:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801d5aa:	3c01      	subs	r4, #1
 801d5ac:	1d37      	adds	r7, r6, #4
 801d5ae:	b2a4      	uxth	r4, r4
 801d5b0:	605d      	str	r5, [r3, #4]
 801d5b2:	463e      	mov	r6, r7
 801d5b4:	e7d3      	b.n	801d55e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801d5b6:	9e07      	ldr	r6, [sp, #28]
 801d5b8:	e797      	b.n	801d4ea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801d5ba:	2bff      	cmp	r3, #255	@ 0xff
 801d5bc:	d127      	bne.n	801d60e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801d5be:	f896 c001 	ldrb.w	ip, [r6, #1]
 801d5c2:	78b3      	ldrb	r3, [r6, #2]
 801d5c4:	f896 e003 	ldrb.w	lr, [r6, #3]
 801d5c8:	f896 b004 	ldrb.w	fp, [r6, #4]
 801d5cc:	fa5f fc8c 	uxtb.w	ip, ip
 801d5d0:	b2db      	uxtb	r3, r3
 801d5d2:	f36c 0507 	bfi	r5, ip, #0, #8
 801d5d6:	f363 250f 	bfi	r5, r3, #8, #8
 801d5da:	fa5f fe8e 	uxtb.w	lr, lr
 801d5de:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801d5e2:	fb12 330e 	smlabb	r3, r2, lr, r3
 801d5e6:	fa5f fb8b 	uxtb.w	fp, fp
 801d5ea:	f36e 4517 	bfi	r5, lr, #16, #8
 801d5ee:	fb11 330c 	smlabb	r3, r1, ip, r3
 801d5f2:	f36b 651f 	bfi	r5, fp, #24, #8
 801d5f6:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801d5fa:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801d5fe:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 801d602:	3c01      	subs	r4, #1
 801d604:	1d77      	adds	r7, r6, #5
 801d606:	b2a4      	uxth	r4, r4
 801d608:	f8cb 5004 	str.w	r5, [fp, #4]
 801d60c:	e7d1      	b.n	801d5b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801d60e:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801d612:	f106 0701 	add.w	r7, r6, #1
 801d616:	d107      	bne.n	801d628 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 801d618:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801d61c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801d620:	685d      	ldr	r5, [r3, #4]
 801d622:	3c01      	subs	r4, #1
 801d624:	b2a4      	uxth	r4, r4
 801d626:	e7c4      	b.n	801d5b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801d628:	f1bc 0f01 	cmp.w	ip, #1
 801d62c:	d12c      	bne.n	801d688 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 801d62e:	f003 0e03 	and.w	lr, r3, #3
 801d632:	f1ae 0e02 	sub.w	lr, lr, #2
 801d636:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801d63a:	fa5f fe8e 	uxtb.w	lr, lr
 801d63e:	f003 0c0c 	and.w	ip, r3, #12
 801d642:	f36e 0507 	bfi	r5, lr, #0, #8
 801d646:	f1ac 0c08 	sub.w	ip, ip, #8
 801d64a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801d64e:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 801d652:	f36c 250f 	bfi	r5, ip, #8, #8
 801d656:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801d65a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d65e:	3b02      	subs	r3, #2
 801d660:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801d664:	b2db      	uxtb	r3, r3
 801d666:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801d66a:	f363 4517 	bfi	r5, r3, #16, #8
 801d66e:	fb12 cc03 	smlabb	ip, r2, r3, ip
 801d672:	0e2e      	lsrs	r6, r5, #24
 801d674:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801d678:	fb10 c606 	smlabb	r6, r0, r6, ip
 801d67c:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 801d680:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 801d684:	6075      	str	r5, [r6, #4]
 801d686:	e7cc      	b.n	801d622 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 801d688:	f1bc 0f02 	cmp.w	ip, #2
 801d68c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801d690:	d12a      	bne.n	801d6e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 801d692:	1cb7      	adds	r7, r6, #2
 801d694:	7876      	ldrb	r6, [r6, #1]
 801d696:	b2f6      	uxtb	r6, r6
 801d698:	f006 0c0f 	and.w	ip, r6, #15
 801d69c:	3b20      	subs	r3, #32
 801d69e:	f1ac 0c08 	sub.w	ip, ip, #8
 801d6a2:	449c      	add	ip, r3
 801d6a4:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801d6a8:	fa5f fc8c 	uxtb.w	ip, ip
 801d6ac:	f36c 0507 	bfi	r5, ip, #0, #8
 801d6b0:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 801d6b4:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801d6b8:	fa5f fe8e 	uxtb.w	lr, lr
 801d6bc:	1136      	asrs	r6, r6, #4
 801d6be:	f36e 250f 	bfi	r5, lr, #8, #8
 801d6c2:	3e08      	subs	r6, #8
 801d6c4:	4433      	add	r3, r6
 801d6c6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d6ca:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801d6ce:	b2db      	uxtb	r3, r3
 801d6d0:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 801d6d4:	f363 4517 	bfi	r5, r3, #16, #8
 801d6d8:	fb12 ee03 	smlabb	lr, r2, r3, lr
 801d6dc:	0e2e      	lsrs	r6, r5, #24
 801d6de:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 801d6e2:	fb10 e606 	smlabb	r6, r0, r6, lr
 801d6e6:	e7c9      	b.n	801d67c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801d6e8:	1c5e      	adds	r6, r3, #1
 801d6ea:	42a6      	cmp	r6, r4
 801d6ec:	dd4e      	ble.n	801d78c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801d6ee:	1b36      	subs	r6, r6, r4
 801d6f0:	2e00      	cmp	r6, #0
 801d6f2:	dc4e      	bgt.n	801d792 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 801d6f4:	f8dd b004 	ldr.w	fp, [sp, #4]
 801d6f8:	2400      	movs	r4, #0
 801d6fa:	f1bb 0f00 	cmp.w	fp, #0
 801d6fe:	f340 8122 	ble.w	801d946 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 801d702:	1c7b      	adds	r3, r7, #1
 801d704:	9303      	str	r3, [sp, #12]
 801d706:	783b      	ldrb	r3, [r7, #0]
 801d708:	b2db      	uxtb	r3, r3
 801d70a:	2bfe      	cmp	r3, #254	@ 0xfe
 801d70c:	d160      	bne.n	801d7d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801d70e:	7879      	ldrb	r1, [r7, #1]
 801d710:	78ba      	ldrb	r2, [r7, #2]
 801d712:	78f8      	ldrb	r0, [r7, #3]
 801d714:	b2c9      	uxtb	r1, r1
 801d716:	f361 0507 	bfi	r5, r1, #0, #8
 801d71a:	b2d2      	uxtb	r2, r2
 801d71c:	1d3b      	adds	r3, r7, #4
 801d71e:	f362 250f 	bfi	r5, r2, #8, #8
 801d722:	b2c0      	uxtb	r0, r0
 801d724:	9303      	str	r3, [sp, #12]
 801d726:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801d72a:	2303      	movs	r3, #3
 801d72c:	fb13 2200 	smlabb	r2, r3, r0, r2
 801d730:	f360 4517 	bfi	r5, r0, #16, #8
 801d734:	2307      	movs	r3, #7
 801d736:	fb13 2101 	smlabb	r1, r3, r1, r2
 801d73a:	0e2e      	lsrs	r6, r5, #24
 801d73c:	230b      	movs	r3, #11
 801d73e:	fb13 1306 	smlabb	r3, r3, r6, r1
 801d742:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801d746:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801d74a:	605d      	str	r5, [r3, #4]
 801d74c:	2601      	movs	r6, #1
 801d74e:	4637      	mov	r7, r6
 801d750:	0e2b      	lsrs	r3, r5, #24
 801d752:	ebab 0b07 	sub.w	fp, fp, r7
 801d756:	eba6 0607 	sub.w	r6, r6, r7
 801d75a:	f040 80d3 	bne.w	801d904 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 801d75e:	b18c      	cbz	r4, 801d784 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 801d760:	4648      	mov	r0, r9
 801d762:	00a1      	lsls	r1, r4, #2
 801d764:	f7e3 fbec 	bl	8000f40 <_ZN8touchgfx5paint9flushLineEPmi>
 801d768:	9b05      	ldr	r3, [sp, #20]
 801d76a:	4622      	mov	r2, r4
 801d76c:	4649      	mov	r1, r9
 801d76e:	4640      	mov	r0, r8
 801d770:	f7e3 fc34 	bl	8000fdc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801d774:	4b2c      	ldr	r3, [pc, #176]	@ (801d828 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 801d776:	4a2d      	ldr	r2, [pc, #180]	@ (801d82c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 801d778:	4599      	cmp	r9, r3
 801d77a:	bf08      	it	eq
 801d77c:	4613      	moveq	r3, r2
 801d77e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801d782:	4699      	mov	r9, r3
 801d784:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 801d788:	2400      	movs	r4, #0
 801d78a:	e0da      	b.n	801d942 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 801d78c:	1ba6      	subs	r6, r4, r6
 801d78e:	b2b4      	uxth	r4, r6
 801d790:	e70f      	b.n	801d5b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801d792:	9b01      	ldr	r3, [sp, #4]
 801d794:	9a01      	ldr	r2, [sp, #4]
 801d796:	42b3      	cmp	r3, r6
 801d798:	bfa8      	it	ge
 801d79a:	4633      	movge	r3, r6
 801d79c:	0e2c      	lsrs	r4, r5, #24
 801d79e:	eba2 0b03 	sub.w	fp, r2, r3
 801d7a2:	eba6 0603 	sub.w	r6, r6, r3
 801d7a6:	d00b      	beq.n	801d7c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801d7a8:	f1a9 0104 	sub.w	r1, r9, #4
 801d7ac:	461a      	mov	r2, r3
 801d7ae:	2a00      	cmp	r2, #0
 801d7b0:	dc02      	bgt.n	801d7b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 801d7b2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d7b6:	e7a0      	b.n	801d6fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801d7b8:	f841 5f04 	str.w	r5, [r1, #4]!
 801d7bc:	3a01      	subs	r2, #1
 801d7be:	e7f6      	b.n	801d7ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 801d7c0:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801d7c4:	e799      	b.n	801d6fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801d7c6:	4637      	mov	r7, r6
 801d7c8:	f8dd b004 	ldr.w	fp, [sp, #4]
 801d7cc:	4626      	mov	r6, r4
 801d7ce:	e794      	b.n	801d6fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801d7d0:	2bff      	cmp	r3, #255	@ 0xff
 801d7d2:	d11d      	bne.n	801d810 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 801d7d4:	7878      	ldrb	r0, [r7, #1]
 801d7d6:	78ba      	ldrb	r2, [r7, #2]
 801d7d8:	78fe      	ldrb	r6, [r7, #3]
 801d7da:	1d7b      	adds	r3, r7, #5
 801d7dc:	b2c0      	uxtb	r0, r0
 801d7de:	9303      	str	r3, [sp, #12]
 801d7e0:	793b      	ldrb	r3, [r7, #4]
 801d7e2:	f360 0507 	bfi	r5, r0, #0, #8
 801d7e6:	b2d2      	uxtb	r2, r2
 801d7e8:	b2d9      	uxtb	r1, r3
 801d7ea:	f362 250f 	bfi	r5, r2, #8, #8
 801d7ee:	b2f6      	uxtb	r6, r6
 801d7f0:	2303      	movs	r3, #3
 801d7f2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801d7f6:	fb13 2206 	smlabb	r2, r3, r6, r2
 801d7fa:	2307      	movs	r3, #7
 801d7fc:	fb13 2000 	smlabb	r0, r3, r0, r2
 801d800:	f366 4517 	bfi	r5, r6, #16, #8
 801d804:	230b      	movs	r3, #11
 801d806:	f361 651f 	bfi	r5, r1, #24, #8
 801d80a:	fb13 0301 	smlabb	r3, r3, r1, r0
 801d80e:	e798      	b.n	801d742 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 801d810:	119e      	asrs	r6, r3, #6
 801d812:	d10d      	bne.n	801d830 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 801d814:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801d818:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801d81c:	685d      	ldr	r5, [r3, #4]
 801d81e:	e795      	b.n	801d74c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801d820:	20013f4c 	.word	0x20013f4c
 801d824:	20013f46 	.word	0x20013f46
 801d828:	20000180 	.word	0x20000180
 801d82c:	20000280 	.word	0x20000280
 801d830:	2e01      	cmp	r6, #1
 801d832:	ea4f 6115 	mov.w	r1, r5, lsr #24
 801d836:	d12b      	bne.n	801d890 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 801d838:	f003 0003 	and.w	r0, r3, #3
 801d83c:	3802      	subs	r0, #2
 801d83e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 801d842:	b2c0      	uxtb	r0, r0
 801d844:	f003 020c 	and.w	r2, r3, #12
 801d848:	f360 0507 	bfi	r5, r0, #0, #8
 801d84c:	3a08      	subs	r2, #8
 801d84e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801d852:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801d856:	f362 250f 	bfi	r5, r2, #8, #8
 801d85a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801d85e:	1e9f      	subs	r7, r3, #2
 801d860:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801d864:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801d868:	b2db      	uxtb	r3, r3
 801d86a:	2703      	movs	r7, #3
 801d86c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801d870:	fb17 2203 	smlabb	r2, r7, r3, r2
 801d874:	2707      	movs	r7, #7
 801d876:	f363 4517 	bfi	r5, r3, #16, #8
 801d87a:	fb17 2000 	smlabb	r0, r7, r0, r2
 801d87e:	230b      	movs	r3, #11
 801d880:	fb13 0101 	smlabb	r1, r3, r1, r0
 801d884:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801d888:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801d88c:	604d      	str	r5, [r1, #4]
 801d88e:	e75e      	b.n	801d74e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 801d890:	2e02      	cmp	r6, #2
 801d892:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801d896:	d12f      	bne.n	801d8f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801d898:	7878      	ldrb	r0, [r7, #1]
 801d89a:	1cba      	adds	r2, r7, #2
 801d89c:	b2c0      	uxtb	r0, r0
 801d89e:	9203      	str	r2, [sp, #12]
 801d8a0:	f000 020f 	and.w	r2, r0, #15
 801d8a4:	3b20      	subs	r3, #32
 801d8a6:	3a08      	subs	r2, #8
 801d8a8:	441a      	add	r2, r3
 801d8aa:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801d8ae:	b2d2      	uxtb	r2, r2
 801d8b0:	f362 0507 	bfi	r5, r2, #0, #8
 801d8b4:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801d8b8:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801d8bc:	b2f6      	uxtb	r6, r6
 801d8be:	1100      	asrs	r0, r0, #4
 801d8c0:	f366 250f 	bfi	r5, r6, #8, #8
 801d8c4:	3808      	subs	r0, #8
 801d8c6:	4403      	add	r3, r0
 801d8c8:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801d8cc:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801d8d0:	b2db      	uxtb	r3, r3
 801d8d2:	2003      	movs	r0, #3
 801d8d4:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801d8d8:	fb10 6603 	smlabb	r6, r0, r3, r6
 801d8dc:	2007      	movs	r0, #7
 801d8de:	f363 4517 	bfi	r5, r3, #16, #8
 801d8e2:	fb10 6202 	smlabb	r2, r0, r2, r6
 801d8e6:	230b      	movs	r3, #11
 801d8e8:	fb13 2101 	smlabb	r1, r3, r1, r2
 801d8ec:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801d8f0:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801d8f4:	604d      	str	r5, [r1, #4]
 801d8f6:	e729      	b.n	801d74c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801d8f8:	1c5e      	adds	r6, r3, #1
 801d8fa:	45b3      	cmp	fp, r6
 801d8fc:	465f      	mov	r7, fp
 801d8fe:	bfa8      	it	ge
 801d900:	4637      	movge	r7, r6
 801d902:	e725      	b.n	801d750 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 801d904:	193b      	adds	r3, r7, r4
 801d906:	2b40      	cmp	r3, #64	@ 0x40
 801d908:	dd13      	ble.n	801d932 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801d90a:	4648      	mov	r0, r9
 801d90c:	00a1      	lsls	r1, r4, #2
 801d90e:	f7e3 fb17 	bl	8000f40 <_ZN8touchgfx5paint9flushLineEPmi>
 801d912:	4649      	mov	r1, r9
 801d914:	9b05      	ldr	r3, [sp, #20]
 801d916:	4622      	mov	r2, r4
 801d918:	4640      	mov	r0, r8
 801d91a:	f7e3 fb5f 	bl	8000fdc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801d91e:	4b2d      	ldr	r3, [pc, #180]	@ (801d9d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 801d920:	4599      	cmp	r9, r3
 801d922:	bf0c      	ite	eq
 801d924:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 801d9e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 801d928:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 801d9d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 801d92c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801d930:	2400      	movs	r4, #0
 801d932:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 801d936:	463b      	mov	r3, r7
 801d938:	3b01      	subs	r3, #1
 801d93a:	f842 5b04 	str.w	r5, [r2], #4
 801d93e:	d1fb      	bne.n	801d938 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 801d940:	443c      	add	r4, r7
 801d942:	9f03      	ldr	r7, [sp, #12]
 801d944:	e6d9      	b.n	801d6fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801d946:	b15c      	cbz	r4, 801d960 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 801d948:	00a1      	lsls	r1, r4, #2
 801d94a:	4648      	mov	r0, r9
 801d94c:	f7e3 faf8 	bl	8000f40 <_ZN8touchgfx5paint9flushLineEPmi>
 801d950:	4640      	mov	r0, r8
 801d952:	9b05      	ldr	r3, [sp, #20]
 801d954:	4622      	mov	r2, r4
 801d956:	4649      	mov	r1, r9
 801d958:	f7e3 fb40 	bl	8000fdc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801d95c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801d960:	4b1d      	ldr	r3, [pc, #116]	@ (801d9d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 801d962:	9a01      	ldr	r2, [sp, #4]
 801d964:	881b      	ldrh	r3, [r3, #0]
 801d966:	1a9b      	subs	r3, r3, r2
 801d968:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801d96c:	9b04      	ldr	r3, [sp, #16]
 801d96e:	3301      	adds	r3, #1
 801d970:	9304      	str	r3, [sp, #16]
 801d972:	9a04      	ldr	r2, [sp, #16]
 801d974:	9b00      	ldr	r3, [sp, #0]
 801d976:	4293      	cmp	r3, r2
 801d978:	d11d      	bne.n	801d9b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801d97a:	9b02      	ldr	r3, [sp, #8]
 801d97c:	9a02      	ldr	r2, [sp, #8]
 801d97e:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 801d982:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801d986:	9808      	ldr	r0, [sp, #32]
 801d988:	f103 0b01 	add.w	fp, r3, #1
 801d98c:	9b06      	ldr	r3, [sp, #24]
 801d98e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801d992:	9b07      	ldr	r3, [sp, #28]
 801d994:	2500      	movs	r5, #0
 801d996:	ba3f      	rev	r7, r7
 801d998:	1ba4      	subs	r4, r4, r6
 801d99a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801d99e:	4629      	mov	r1, r5
 801d9a0:	441f      	add	r7, r3
 801d9a2:	b2a4      	uxth	r4, r4
 801d9a4:	f00c fff9 	bl	802a99a <memset>
 801d9a8:	f8cd b008 	str.w	fp, [sp, #8]
 801d9ac:	9504      	str	r5, [sp, #16]
 801d9ae:	f7e3 fabd 	bl	8000f2c <_ZN8touchgfx5paint8tearDownEv>
 801d9b2:	463e      	mov	r6, r7
 801d9b4:	e5cc      	b.n	801d550 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801d9b6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801d9ba:	9b01      	ldr	r3, [sp, #4]
 801d9bc:	1ae4      	subs	r4, r4, r3
 801d9be:	1ba4      	subs	r4, r4, r6
 801d9c0:	b2a4      	uxth	r4, r4
 801d9c2:	e7f4      	b.n	801d9ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 801d9c4:	4b05      	ldr	r3, [pc, #20]	@ (801d9dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801d9c6:	6818      	ldr	r0, [r3, #0]
 801d9c8:	6803      	ldr	r3, [r0, #0]
 801d9ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801d9cc:	4798      	blx	r3
 801d9ce:	b00f      	add	sp, #60	@ 0x3c
 801d9d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d9d4:	20000180 	.word	0x20000180
 801d9d8:	20013f46 	.word	0x20013f46
 801d9dc:	20013f4c 	.word	0x20013f4c
 801d9e0:	20000280 	.word	0x20000280

0801d9e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d9e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9e8:	b08f      	sub	sp, #60	@ 0x3c
 801d9ea:	461c      	mov	r4, r3
 801d9ec:	9205      	str	r2, [sp, #20]
 801d9ee:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801d9f2:	9100      	str	r1, [sp, #0]
 801d9f4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d9f6:	9201      	str	r2, [sp, #4]
 801d9f8:	2a00      	cmp	r2, #0
 801d9fa:	f000 8115 	beq.w	801dc28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801d9fe:	6820      	ldr	r0, [r4, #0]
 801da00:	6861      	ldr	r1, [r4, #4]
 801da02:	aa0a      	add	r2, sp, #40	@ 0x28
 801da04:	c203      	stmia	r2!, {r0, r1}
 801da06:	6818      	ldr	r0, [r3, #0]
 801da08:	6859      	ldr	r1, [r3, #4]
 801da0a:	aa0c      	add	r2, sp, #48	@ 0x30
 801da0c:	c203      	stmia	r2!, {r0, r1}
 801da0e:	a80a      	add	r0, sp, #40	@ 0x28
 801da10:	f7f8 fe2c 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801da14:	4621      	mov	r1, r4
 801da16:	a80c      	add	r0, sp, #48	@ 0x30
 801da18:	f7f8 fe50 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801da1c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801da20:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801da24:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801da28:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801da2c:	bfde      	ittt	le
 801da2e:	b2b3      	uxthle	r3, r6
 801da30:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801da34:	fb92 f3f3 	sdivle	r3, r2, r3
 801da38:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801da3c:	bfc8      	it	gt
 801da3e:	2301      	movgt	r3, #1
 801da40:	fb92 f1f3 	sdiv	r1, r2, r3
 801da44:	fa1f fc81 	uxth.w	ip, r1
 801da48:	fb0c 2413 	mls	r4, ip, r3, r2
 801da4c:	fb14 f406 	smulbb	r4, r4, r6
 801da50:	441d      	add	r5, r3
 801da52:	4404      	add	r4, r0
 801da54:	4661      	mov	r1, ip
 801da56:	3d01      	subs	r5, #1
 801da58:	b2a4      	uxth	r4, r4
 801da5a:	fb95 f5f3 	sdiv	r5, r5, r3
 801da5e:	b131      	cbz	r1, 801da6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801da60:	9b05      	ldr	r3, [sp, #20]
 801da62:	9900      	ldr	r1, [sp, #0]
 801da64:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801da68:	ba1b      	rev	r3, r3
 801da6a:	4419      	add	r1, r3
 801da6c:	9100      	str	r1, [sp, #0]
 801da6e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801da72:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 801da76:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801da7a:	4418      	add	r0, r3
 801da7c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801da80:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801da84:	441a      	add	r2, r3
 801da86:	4b6a      	ldr	r3, [pc, #424]	@ (801dc30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801da88:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801da8c:	6818      	ldr	r0, [r3, #0]
 801da8e:	6803      	ldr	r3, [r0, #0]
 801da90:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801da92:	4798      	blx	r3
 801da94:	4967      	ldr	r1, [pc, #412]	@ (801dc34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801da96:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801da9a:	880b      	ldrh	r3, [r1, #0]
 801da9c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801daa0:	9109      	str	r1, [sp, #36]	@ 0x24
 801daa2:	fb03 c202 	mla	r2, r3, r2, ip
 801daa6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801daaa:	4373      	muls	r3, r6
 801daac:	b2ad      	uxth	r5, r5
 801daae:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dab2:	00ad      	lsls	r5, r5, #2
 801dab4:	9306      	str	r3, [sp, #24]
 801dab6:	1d2b      	adds	r3, r5, #4
 801dab8:	9307      	str	r3, [sp, #28]
 801daba:	9b01      	ldr	r3, [sp, #4]
 801dabc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801dac0:	9103      	str	r1, [sp, #12]
 801dac2:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801dac6:	2c00      	cmp	r4, #0
 801dac8:	bf0c      	ite	eq
 801daca:	46c6      	moveq	lr, r8
 801dacc:	f04f 0e00 	movne.w	lr, #0
 801dad0:	2300      	movs	r3, #0
 801dad2:	b292      	uxth	r2, r2
 801dad4:	fa1f fe8e 	uxth.w	lr, lr
 801dad8:	9302      	str	r3, [sp, #8]
 801dada:	9204      	str	r2, [sp, #16]
 801dadc:	9a06      	ldr	r2, [sp, #24]
 801dade:	4282      	cmp	r2, r0
 801dae0:	f240 809d 	bls.w	801dc1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801dae4:	b963      	cbnz	r3, 801db00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801dae6:	9b00      	ldr	r3, [sp, #0]
 801dae8:	781a      	ldrb	r2, [r3, #0]
 801daea:	0993      	lsrs	r3, r2, #6
 801daec:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801daf0:	9202      	str	r2, [sp, #8]
 801daf2:	1e5a      	subs	r2, r3, #1
 801daf4:	2a02      	cmp	r2, #2
 801daf6:	d815      	bhi.n	801db24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801daf8:	9a00      	ldr	r2, [sp, #0]
 801dafa:	3201      	adds	r2, #1
 801dafc:	9200      	str	r2, [sp, #0]
 801dafe:	b29b      	uxth	r3, r3
 801db00:	b1b4      	cbz	r4, 801db30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801db02:	429c      	cmp	r4, r3
 801db04:	bf95      	itete	ls
 801db06:	1b1c      	subls	r4, r3, r4
 801db08:	1ae4      	subhi	r4, r4, r3
 801db0a:	fa1f fa84 	uxthls.w	sl, r4
 801db0e:	b2a4      	uxthhi	r4, r4
 801db10:	bf87      	ittee	hi
 801db12:	4671      	movhi	r1, lr
 801db14:	f04f 0a00 	movhi.w	sl, #0
 801db18:	fa1f f188 	uxthls.w	r1, r8
 801db1c:	2400      	movls	r4, #0
 801db1e:	4653      	mov	r3, sl
 801db20:	468e      	mov	lr, r1
 801db22:	e7db      	b.n	801dadc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801db24:	9a00      	ldr	r2, [sp, #0]
 801db26:	9b00      	ldr	r3, [sp, #0]
 801db28:	3202      	adds	r2, #2
 801db2a:	785b      	ldrb	r3, [r3, #1]
 801db2c:	9200      	str	r2, [sp, #0]
 801db2e:	e7e7      	b.n	801db00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801db30:	2202      	movs	r2, #2
 801db32:	4615      	mov	r5, r2
 801db34:	9907      	ldr	r1, [sp, #28]
 801db36:	9a02      	ldr	r2, [sp, #8]
 801db38:	fb15 1202 	smlabb	r2, r5, r2, r1
 801db3c:	9905      	ldr	r1, [sp, #20]
 801db3e:	4573      	cmp	r3, lr
 801db40:	f831 c002 	ldrh.w	ip, [r1, r2]
 801db44:	9a01      	ldr	r2, [sp, #4]
 801db46:	bf2b      	itete	cs
 801db48:	eba3 0a0e 	subcs.w	sl, r3, lr
 801db4c:	ebae 0103 	subcc.w	r1, lr, r3
 801db50:	46f1      	movcs	r9, lr
 801db52:	4699      	movcc	r9, r3
 801db54:	bf27      	ittee	cs
 801db56:	fa1f fa8a 	uxthcs.w	sl, sl
 801db5a:	4621      	movcs	r1, r4
 801db5c:	b289      	uxthcc	r1, r1
 801db5e:	46a2      	movcc	sl, r4
 801db60:	2aff      	cmp	r2, #255	@ 0xff
 801db62:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801db66:	d105      	bne.n	801db74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801db68:	4481      	add	r9, r0
 801db6a:	4581      	cmp	r9, r0
 801db6c:	d045      	beq.n	801dbfa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801db6e:	f820 cb02 	strh.w	ip, [r0], #2
 801db72:	e7fa      	b.n	801db6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801db74:	9d03      	ldr	r5, [sp, #12]
 801db76:	ea4f 222c 	mov.w	r2, ip, asr #8
 801db7a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801db7e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801db82:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801db86:	436a      	muls	r2, r5
 801db88:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801db8c:	fa5f fc8c 	uxtb.w	ip, ip
 801db90:	9208      	str	r2, [sp, #32]
 801db92:	fb0b fb05 	mul.w	fp, fp, r5
 801db96:	fb0c fc05 	mul.w	ip, ip, r5
 801db9a:	4481      	add	r9, r0
 801db9c:	4581      	cmp	r9, r0
 801db9e:	d02c      	beq.n	801dbfa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801dba0:	8802      	ldrh	r2, [r0, #0]
 801dba2:	9d04      	ldr	r5, [sp, #16]
 801dba4:	9f04      	ldr	r7, [sp, #16]
 801dba6:	1216      	asrs	r6, r2, #8
 801dba8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801dbac:	fb16 f605 	smulbb	r6, r6, r5
 801dbb0:	9d08      	ldr	r5, [sp, #32]
 801dbb2:	442e      	add	r6, r5
 801dbb4:	10d5      	asrs	r5, r2, #3
 801dbb6:	00d2      	lsls	r2, r2, #3
 801dbb8:	b2d2      	uxtb	r2, r2
 801dbba:	fb12 f207 	smulbb	r2, r2, r7
 801dbbe:	b2b6      	uxth	r6, r6
 801dbc0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801dbc4:	4462      	add	r2, ip
 801dbc6:	fb15 f507 	smulbb	r5, r5, r7
 801dbca:	b292      	uxth	r2, r2
 801dbcc:	1c77      	adds	r7, r6, #1
 801dbce:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801dbd2:	1c57      	adds	r7, r2, #1
 801dbd4:	445d      	add	r5, fp
 801dbd6:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801dbda:	b2ad      	uxth	r5, r5
 801dbdc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dbe0:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801dbe4:	4316      	orrs	r6, r2
 801dbe6:	1c6a      	adds	r2, r5, #1
 801dbe8:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801dbec:	096d      	lsrs	r5, r5, #5
 801dbee:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801dbf2:	432e      	orrs	r6, r5
 801dbf4:	f820 6b02 	strh.w	r6, [r0], #2
 801dbf8:	e7d0      	b.n	801db9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801dbfa:	4573      	cmp	r3, lr
 801dbfc:	d38f      	bcc.n	801db1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801dbfe:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801dc02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dc04:	fa1f f188 	uxth.w	r1, r8
 801dc08:	1a64      	subs	r4, r4, r1
 801dc0a:	881b      	ldrh	r3, [r3, #0]
 801dc0c:	b2a4      	uxth	r4, r4
 801dc0e:	2c00      	cmp	r4, #0
 801dc10:	eba3 0308 	sub.w	r3, r3, r8
 801dc14:	bf18      	it	ne
 801dc16:	2100      	movne	r1, #0
 801dc18:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dc1c:	e77f      	b.n	801db1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801dc1e:	4b04      	ldr	r3, [pc, #16]	@ (801dc30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801dc20:	6818      	ldr	r0, [r3, #0]
 801dc22:	6803      	ldr	r3, [r0, #0]
 801dc24:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801dc26:	4798      	blx	r3
 801dc28:	b00f      	add	sp, #60	@ 0x3c
 801dc2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc2e:	bf00      	nop
 801dc30:	20013f4c 	.word	0x20013f4c
 801dc34:	20013f46 	.word	0x20013f46

0801dc38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801dc38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc3c:	b09f      	sub	sp, #124	@ 0x7c
 801dc3e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801dc42:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801dc46:	9209      	str	r2, [sp, #36]	@ 0x24
 801dc48:	461d      	mov	r5, r3
 801dc4a:	4604      	mov	r4, r0
 801dc4c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801dc4e:	2a00      	cmp	r2, #0
 801dc50:	f000 81eb 	beq.w	801e02a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801dc54:	6828      	ldr	r0, [r5, #0]
 801dc56:	6869      	ldr	r1, [r5, #4]
 801dc58:	aa1a      	add	r2, sp, #104	@ 0x68
 801dc5a:	c203      	stmia	r2!, {r0, r1}
 801dc5c:	6818      	ldr	r0, [r3, #0]
 801dc5e:	6859      	ldr	r1, [r3, #4]
 801dc60:	aa1c      	add	r2, sp, #112	@ 0x70
 801dc62:	c203      	stmia	r2!, {r0, r1}
 801dc64:	a81a      	add	r0, sp, #104	@ 0x68
 801dc66:	f7f8 fd01 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dc6a:	4629      	mov	r1, r5
 801dc6c:	a81c      	add	r0, sp, #112	@ 0x70
 801dc6e:	f7f8 fd25 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dc72:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801dc76:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801dc7a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801dc7e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801dc82:	bfd7      	itett	le
 801dc84:	b29a      	uxthle	r2, r3
 801dc86:	2201      	movgt	r2, #1
 801dc88:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801dc8c:	fb91 f2f2 	sdivle	r2, r1, r2
 801dc90:	9202      	str	r2, [sp, #8]
 801dc92:	9802      	ldr	r0, [sp, #8]
 801dc94:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801dc98:	fb92 f0f0 	sdiv	r0, r2, r0
 801dc9c:	b280      	uxth	r0, r0
 801dc9e:	9010      	str	r0, [sp, #64]	@ 0x40
 801dca0:	9902      	ldr	r1, [sp, #8]
 801dca2:	9802      	ldr	r0, [sp, #8]
 801dca4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801dca6:	4488      	add	r8, r1
 801dca8:	fb05 2510 	mls	r5, r5, r0, r2
 801dcac:	fb15 f503 	smulbb	r5, r5, r3
 801dcb0:	f108 38ff 	add.w	r8, r8, #4294967295
 801dcb4:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801dcb8:	fb98 f8f1 	sdiv	r8, r8, r1
 801dcbc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801dcc0:	440d      	add	r5, r1
 801dcc2:	4419      	add	r1, r3
 801dcc4:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801dcc8:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801dccc:	441a      	add	r2, r3
 801dcce:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801dcd2:	9304      	str	r3, [sp, #16]
 801dcd4:	4b95      	ldr	r3, [pc, #596]	@ (801df2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801dcd6:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801dcda:	6818      	ldr	r0, [r3, #0]
 801dcdc:	6803      	ldr	r3, [r0, #0]
 801dcde:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801dce0:	4798      	blx	r3
 801dce2:	4b93      	ldr	r3, [pc, #588]	@ (801df30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801dce4:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801dce8:	881a      	ldrh	r2, [r3, #0]
 801dcea:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801dcee:	9318      	str	r3, [sp, #96]	@ 0x60
 801dcf0:	fb02 7101 	mla	r1, r2, r1, r7
 801dcf4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801dcf8:	4356      	muls	r6, r2
 801dcfa:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801dcfe:	f108 0801 	add.w	r8, r8, #1
 801dd02:	920a      	str	r2, [sp, #40]	@ 0x28
 801dd04:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801dd06:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801dd0a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801dd0c:	fa1f f888 	uxth.w	r8, r8
 801dd10:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801dd14:	f108 0204 	add.w	r2, r8, #4
 801dd18:	9211      	str	r2, [sp, #68]	@ 0x44
 801dd1a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801dd1c:	4b85      	ldr	r3, [pc, #532]	@ (801df34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801dd1e:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801dd22:	b2ad      	uxth	r5, r5
 801dd24:	9215      	str	r2, [sp, #84]	@ 0x54
 801dd26:	2d00      	cmp	r5, #0
 801dd28:	9a04      	ldr	r2, [sp, #16]
 801dd2a:	f04f 0100 	mov.w	r1, #0
 801dd2e:	bf18      	it	ne
 801dd30:	2200      	movne	r2, #0
 801dd32:	1b1b      	subs	r3, r3, r4
 801dd34:	b292      	uxth	r2, r2
 801dd36:	910d      	str	r1, [sp, #52]	@ 0x34
 801dd38:	9319      	str	r3, [sp, #100]	@ 0x64
 801dd3a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801dd3c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801dd3e:	fa11 f383 	uxtah	r3, r1, r3
 801dd42:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801dd44:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801dd48:	3304      	adds	r3, #4
 801dd4a:	9306      	str	r3, [sp, #24]
 801dd4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dd4e:	4283      	cmp	r3, r0
 801dd50:	f240 8166 	bls.w	801e020 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801dd54:	9902      	ldr	r1, [sp, #8]
 801dd56:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801dd5a:	fbb5 f3f3 	udiv	r3, r5, r3
 801dd5e:	1acb      	subs	r3, r1, r3
 801dd60:	b29b      	uxth	r3, r3
 801dd62:	9316      	str	r3, [sp, #88]	@ 0x58
 801dd64:	9b06      	ldr	r3, [sp, #24]
 801dd66:	9e06      	ldr	r6, [sp, #24]
 801dd68:	7859      	ldrb	r1, [r3, #1]
 801dd6a:	789b      	ldrb	r3, [r3, #2]
 801dd6c:	7836      	ldrb	r6, [r6, #0]
 801dd6e:	9612      	str	r6, [sp, #72]	@ 0x48
 801dd70:	021b      	lsls	r3, r3, #8
 801dd72:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801dd76:	9906      	ldr	r1, [sp, #24]
 801dd78:	78c9      	ldrb	r1, [r1, #3]
 801dd7a:	430b      	orrs	r3, r1
 801dd7c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801dd7e:	3601      	adds	r6, #1
 801dd80:	4419      	add	r1, r3
 801dd82:	9605      	str	r6, [sp, #20]
 801dd84:	1c4e      	adds	r6, r1, #1
 801dd86:	9603      	str	r6, [sp, #12]
 801dd88:	7849      	ldrb	r1, [r1, #1]
 801dd8a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801dd8c:	0209      	lsls	r1, r1, #8
 801dd8e:	5cf3      	ldrb	r3, [r6, r3]
 801dd90:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 801dd94:	4319      	orrs	r1, r3
 801dd96:	b28b      	uxth	r3, r1
 801dd98:	930c      	str	r3, [sp, #48]	@ 0x30
 801dd9a:	2300      	movs	r3, #0
 801dd9c:	f04f 0a01 	mov.w	sl, #1
 801dda0:	9307      	str	r3, [sp, #28]
 801dda2:	469c      	mov	ip, r3
 801dda4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801dda8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801ddac:	46d3      	mov	fp, sl
 801ddae:	4657      	mov	r7, sl
 801ddb0:	930e      	str	r3, [sp, #56]	@ 0x38
 801ddb2:	2d00      	cmp	r5, #0
 801ddb4:	d07e      	beq.n	801deb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801ddb6:	42af      	cmp	r7, r5
 801ddb8:	d26e      	bcs.n	801de98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801ddba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ddbc:	9201      	str	r2, [sp, #4]
 801ddbe:	1bed      	subs	r5, r5, r7
 801ddc0:	4283      	cmp	r3, r0
 801ddc2:	b2ad      	uxth	r5, r5
 801ddc4:	d802      	bhi.n	801ddcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801ddc6:	e073      	b.n	801deb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801ddc8:	2b00      	cmp	r3, #0
 801ddca:	d15f      	bne.n	801de8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801ddcc:	9b03      	ldr	r3, [sp, #12]
 801ddce:	785b      	ldrb	r3, [r3, #1]
 801ddd0:	f1cb 0207 	rsb	r2, fp, #7
 801ddd4:	4093      	lsls	r3, r2
 801ddd6:	005b      	lsls	r3, r3, #1
 801ddd8:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801dddc:	9b03      	ldr	r3, [sp, #12]
 801ddde:	781b      	ldrb	r3, [r3, #0]
 801dde0:	fa43 f30b 	asr.w	r3, r3, fp
 801dde4:	b2db      	uxtb	r3, r3
 801dde6:	4313      	orrs	r3, r2
 801dde8:	f10b 0201 	add.w	r2, fp, #1
 801ddec:	fa5f fb82 	uxtb.w	fp, r2
 801ddf0:	9a03      	ldr	r2, [sp, #12]
 801ddf2:	f1bb 0f08 	cmp.w	fp, #8
 801ddf6:	bf15      	itete	ne
 801ddf8:	3201      	addne	r2, #1
 801ddfa:	3202      	addeq	r2, #2
 801ddfc:	9203      	strne	r2, [sp, #12]
 801ddfe:	9203      	streq	r2, [sp, #12]
 801de00:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801de02:	b29f      	uxth	r7, r3
 801de04:	bf08      	it	eq
 801de06:	f04f 0b00 	moveq.w	fp, #0
 801de0a:	42ba      	cmp	r2, r7
 801de0c:	d309      	bcc.n	801de22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801de0e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801de12:	2301      	movs	r3, #1
 801de14:	9a05      	ldr	r2, [sp, #20]
 801de16:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801de1a:	d30e      	bcc.n	801de3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801de1c:	469a      	mov	sl, r3
 801de1e:	2600      	movs	r6, #0
 801de20:	e035      	b.n	801de8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801de22:	9b05      	ldr	r3, [sp, #20]
 801de24:	429f      	cmp	r7, r3
 801de26:	d318      	bcc.n	801de5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801de28:	eb04 030a 	add.w	r3, r4, sl
 801de2c:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 801de30:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801de34:	f10a 0301 	add.w	r3, sl, #1
 801de38:	b29b      	uxth	r3, r3
 801de3a:	9a05      	ldr	r2, [sp, #20]
 801de3c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801de40:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801de42:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801de46:	7116      	strb	r6, [r2, #4]
 801de48:	f10a 0601 	add.w	r6, sl, #1
 801de4c:	80d1      	strh	r1, [r2, #6]
 801de4e:	7156      	strb	r6, [r2, #5]
 801de50:	9a05      	ldr	r2, [sp, #20]
 801de52:	3201      	adds	r2, #1
 801de54:	b292      	uxth	r2, r2
 801de56:	9205      	str	r2, [sp, #20]
 801de58:	e7e0      	b.n	801de1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801de5a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801de5e:	463a      	mov	r2, r7
 801de60:	795b      	ldrb	r3, [r3, #5]
 801de62:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801de66:	4426      	add	r6, r4
 801de68:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801de6a:	eb01 0c06 	add.w	ip, r1, r6
 801de6e:	f1bc 0f00 	cmp.w	ip, #0
 801de72:	dd07      	ble.n	801de84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801de74:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801de78:	f892 c004 	ldrb.w	ip, [r2, #4]
 801de7c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801de80:	88d2      	ldrh	r2, [r2, #6]
 801de82:	e7f1      	b.n	801de68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801de84:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801de88:	b29b      	uxth	r3, r3
 801de8a:	e7c3      	b.n	801de14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801de8c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801de8e:	970c      	str	r7, [sp, #48]	@ 0x30
 801de90:	9a01      	ldr	r2, [sp, #4]
 801de92:	46b4      	mov	ip, r6
 801de94:	461f      	mov	r7, r3
 801de96:	e78c      	b.n	801ddb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801de98:	1b7b      	subs	r3, r7, r5
 801de9a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801de9e:	9201      	str	r2, [sp, #4]
 801dea0:	eb0c 0605 	add.w	r6, ip, r5
 801dea4:	b29b      	uxth	r3, r3
 801dea6:	b2b6      	uxth	r6, r6
 801dea8:	2500      	movs	r5, #0
 801deaa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801deac:	4282      	cmp	r2, r0
 801deae:	d88b      	bhi.n	801ddc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801deb0:	9a01      	ldr	r2, [sp, #4]
 801deb2:	e74b      	b.n	801dd4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801deb4:	4297      	cmp	r7, r2
 801deb6:	d332      	bcc.n	801df1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801deb8:	1abb      	subs	r3, r7, r2
 801deba:	b29b      	uxth	r3, r3
 801debc:	9208      	str	r2, [sp, #32]
 801debe:	9501      	str	r5, [sp, #4]
 801dec0:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801dec2:	29ff      	cmp	r1, #255	@ 0xff
 801dec4:	9908      	ldr	r1, [sp, #32]
 801dec6:	eb0c 0601 	add.w	r6, ip, r1
 801deca:	d135      	bne.n	801df38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801decc:	f1a0 0e02 	sub.w	lr, r0, #2
 801ded0:	b2b6      	uxth	r6, r6
 801ded2:	45b4      	cmp	ip, r6
 801ded4:	f040 808c 	bne.w	801dff0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801ded8:	9908      	ldr	r1, [sp, #32]
 801deda:	4297      	cmp	r7, r2
 801dedc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801dee0:	d3e2      	bcc.n	801dea8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801dee2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801dee4:	9904      	ldr	r1, [sp, #16]
 801dee6:	8812      	ldrh	r2, [r2, #0]
 801dee8:	1a52      	subs	r2, r2, r1
 801deea:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801deee:	9a07      	ldr	r2, [sp, #28]
 801def0:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801def2:	3201      	adds	r2, #1
 801def4:	428a      	cmp	r2, r1
 801def6:	9207      	str	r2, [sp, #28]
 801def8:	f040 8087 	bne.w	801e00a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801defc:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801df00:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801df04:	9b04      	ldr	r3, [sp, #16]
 801df06:	1bed      	subs	r5, r5, r7
 801df08:	b2ad      	uxth	r5, r5
 801df0a:	2d00      	cmp	r5, #0
 801df0c:	bf08      	it	eq
 801df0e:	461a      	moveq	r2, r3
 801df10:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801df12:	bf18      	it	ne
 801df14:	2200      	movne	r2, #0
 801df16:	3301      	adds	r3, #1
 801df18:	930d      	str	r3, [sp, #52]	@ 0x34
 801df1a:	b292      	uxth	r2, r2
 801df1c:	e70d      	b.n	801dd3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801df1e:	1bd1      	subs	r1, r2, r7
 801df20:	b28b      	uxth	r3, r1
 801df22:	9301      	str	r3, [sp, #4]
 801df24:	9708      	str	r7, [sp, #32]
 801df26:	462b      	mov	r3, r5
 801df28:	e7ca      	b.n	801dec0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801df2a:	bf00      	nop
 801df2c:	20013f4c 	.word	0x20013f4c
 801df30:	20013f46 	.word	0x20013f46
 801df34:	fffff7fb 	.word	0xfffff7fb
 801df38:	b2b6      	uxth	r6, r6
 801df3a:	900b      	str	r0, [sp, #44]	@ 0x2c
 801df3c:	45b4      	cmp	ip, r6
 801df3e:	d0cb      	beq.n	801ded8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801df40:	f10c 0101 	add.w	r1, ip, #1
 801df44:	44a4      	add	ip, r4
 801df46:	9117      	str	r1, [sp, #92]	@ 0x5c
 801df48:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801df4c:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801df4e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801df52:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801df54:	f8b1 c000 	ldrh.w	ip, [r1]
 801df58:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801df5a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801df5e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801df62:	fb1e fe01 	smulbb	lr, lr, r1
 801df66:	ea4f 2825 	mov.w	r8, r5, asr #8
 801df6a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801df6c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801df70:	fb08 e801 	mla	r8, r8, r1, lr
 801df74:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801df78:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801df7a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801df7e:	fb19 f901 	smulbb	r9, r9, r1
 801df82:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801df86:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801df88:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801df8c:	fb0e 9e01 	mla	lr, lr, r1, r9
 801df90:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801df94:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801df96:	fa5f fc8c 	uxtb.w	ip, ip
 801df9a:	fb1c fc01 	smulbb	ip, ip, r1
 801df9e:	00ed      	lsls	r5, r5, #3
 801dfa0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801dfa2:	b2ed      	uxtb	r5, r5
 801dfa4:	fb05 c501 	mla	r5, r5, r1, ip
 801dfa8:	fa1f f888 	uxth.w	r8, r8
 801dfac:	fa1f fe8e 	uxth.w	lr, lr
 801dfb0:	b2ad      	uxth	r5, r5
 801dfb2:	f108 0c01 	add.w	ip, r8, #1
 801dfb6:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801dfba:	f10e 0901 	add.w	r9, lr, #1
 801dfbe:	f105 0c01 	add.w	ip, r5, #1
 801dfc2:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801dfc6:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801dfca:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801dfce:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801dfd2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dfd6:	ea4c 0808 	orr.w	r8, ip, r8
 801dfda:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801dfdc:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801dfe0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801dfe4:	ea48 0809 	orr.w	r8, r8, r9
 801dfe8:	f821 8b02 	strh.w	r8, [r1], #2
 801dfec:	910b      	str	r1, [sp, #44]	@ 0x2c
 801dfee:	e7a5      	b.n	801df3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801dff0:	f10c 0801 	add.w	r8, ip, #1
 801dff4:	44a4      	add	ip, r4
 801dff6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801dff8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801dffc:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801e000:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801e004:	fa1f fc88 	uxth.w	ip, r8
 801e008:	e763      	b.n	801ded2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801e00a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e00e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801e012:	1aad      	subs	r5, r5, r2
 801e014:	b2ad      	uxth	r5, r5
 801e016:	2d00      	cmp	r5, #0
 801e018:	bf18      	it	ne
 801e01a:	2200      	movne	r2, #0
 801e01c:	9201      	str	r2, [sp, #4]
 801e01e:	e744      	b.n	801deaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801e020:	4b03      	ldr	r3, [pc, #12]	@ (801e030 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801e022:	6818      	ldr	r0, [r3, #0]
 801e024:	6803      	ldr	r3, [r0, #0]
 801e026:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801e028:	4798      	blx	r3
 801e02a:	b01f      	add	sp, #124	@ 0x7c
 801e02c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e030:	20013f4c 	.word	0x20013f4c

0801e034 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 801e034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e038:	b093      	sub	sp, #76	@ 0x4c
 801e03a:	4616      	mov	r6, r2
 801e03c:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 801e040:	9003      	str	r0, [sp, #12]
 801e042:	460d      	mov	r5, r1
 801e044:	9201      	str	r2, [sp, #4]
 801e046:	2a00      	cmp	r2, #0
 801e048:	f000 8304 	beq.w	801e654 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 801e04c:	6830      	ldr	r0, [r6, #0]
 801e04e:	6871      	ldr	r1, [r6, #4]
 801e050:	ac0e      	add	r4, sp, #56	@ 0x38
 801e052:	c403      	stmia	r4!, {r0, r1}
 801e054:	6818      	ldr	r0, [r3, #0]
 801e056:	6859      	ldr	r1, [r3, #4]
 801e058:	ac10      	add	r4, sp, #64	@ 0x40
 801e05a:	c403      	stmia	r4!, {r0, r1}
 801e05c:	a80e      	add	r0, sp, #56	@ 0x38
 801e05e:	f7f8 fb05 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e062:	4631      	mov	r1, r6
 801e064:	a810      	add	r0, sp, #64	@ 0x40
 801e066:	f7f8 fb29 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e06a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801e06e:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801e072:	bfd7      	itett	le
 801e074:	b293      	uxthle	r3, r2
 801e076:	2301      	movgt	r3, #1
 801e078:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801e07c:	fb91 f3f3 	sdivle	r3, r1, r3
 801e080:	9304      	str	r3, [sp, #16]
 801e082:	f105 0308 	add.w	r3, r5, #8
 801e086:	9904      	ldr	r1, [sp, #16]
 801e088:	9308      	str	r3, [sp, #32]
 801e08a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801e08e:	440b      	add	r3, r1
 801e090:	3b01      	subs	r3, #1
 801e092:	fb93 f3f1 	sdiv	r3, r3, r1
 801e096:	9908      	ldr	r1, [sp, #32]
 801e098:	3b01      	subs	r3, #1
 801e09a:	b29b      	uxth	r3, r3
 801e09c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801e0a0:	9309      	str	r3, [sp, #36]	@ 0x24
 801e0a2:	9904      	ldr	r1, [sp, #16]
 801e0a4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801e0a8:	fb93 f0f1 	sdiv	r0, r3, r1
 801e0ac:	b284      	uxth	r4, r0
 801e0ae:	9405      	str	r4, [sp, #20]
 801e0b0:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 801e0b4:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801e0b8:	fb05 3914 	mls	r9, r5, r4, r3
 801e0bc:	fb19 f902 	smulbb	r9, r9, r2
 801e0c0:	4489      	add	r9, r1
 801e0c2:	fa1f f989 	uxth.w	r9, r9
 801e0c6:	2d00      	cmp	r5, #0
 801e0c8:	d05d      	beq.n	801e186 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801e0ca:	1e6a      	subs	r2, r5, #1
 801e0cc:	9808      	ldr	r0, [sp, #32]
 801e0ce:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801e0d2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e0d4:	fa9a fa8a 	rev.w	sl, sl
 801e0d8:	4492      	add	sl, r2
 801e0da:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801e0de:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801e0e2:	4411      	add	r1, r2
 801e0e4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801e0e8:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801e0ec:	4413      	add	r3, r2
 801e0ee:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801e0f2:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801e0f6:	9302      	str	r3, [sp, #8]
 801e0f8:	4bcb      	ldr	r3, [pc, #812]	@ (801e428 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801e0fa:	6818      	ldr	r0, [r3, #0]
 801e0fc:	6803      	ldr	r3, [r0, #0]
 801e0fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e100:	4798      	blx	r3
 801e102:	4bca      	ldr	r3, [pc, #808]	@ (801e42c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 801e104:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801e108:	881b      	ldrh	r3, [r3, #0]
 801e10a:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801e10e:	fb03 2404 	mla	r4, r3, r4, r2
 801e112:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e116:	436b      	muls	r3, r5
 801e118:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e11c:	930d      	str	r3, [sp, #52]	@ 0x34
 801e11e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801e122:	fb99 f3f3 	sdiv	r3, r9, r3
 801e126:	9306      	str	r3, [sp, #24]
 801e128:	9b01      	ldr	r3, [sp, #4]
 801e12a:	43db      	mvns	r3, r3
 801e12c:	b2db      	uxtb	r3, r3
 801e12e:	930a      	str	r3, [sp, #40]	@ 0x28
 801e130:	9b03      	ldr	r3, [sp, #12]
 801e132:	3304      	adds	r3, #4
 801e134:	4618      	mov	r0, r3
 801e136:	2280      	movs	r2, #128	@ 0x80
 801e138:	2100      	movs	r1, #0
 801e13a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e13c:	f00c fc2d 	bl	802a99a <memset>
 801e140:	4bbb      	ldr	r3, [pc, #748]	@ (801e430 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801e142:	9300      	str	r3, [sp, #0]
 801e144:	2300      	movs	r3, #0
 801e146:	f04f 0600 	mov.w	r6, #0
 801e14a:	9307      	str	r3, [sp, #28]
 801e14c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e14e:	42a3      	cmp	r3, r4
 801e150:	f240 827b 	bls.w	801e64a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 801e154:	f04f 0e07 	mov.w	lr, #7
 801e158:	f1b9 0f00 	cmp.w	r9, #0
 801e15c:	f000 8159 	beq.w	801e412 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 801e160:	f89a 5000 	ldrb.w	r5, [sl]
 801e164:	b2ed      	uxtb	r5, r5
 801e166:	11aa      	asrs	r2, r5, #6
 801e168:	f10a 0701 	add.w	r7, sl, #1
 801e16c:	d10e      	bne.n	801e18c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 801e16e:	9b03      	ldr	r3, [sp, #12]
 801e170:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801e174:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801e178:	88ae      	ldrh	r6, [r5, #4]
 801e17a:	f109 39ff 	add.w	r9, r9, #4294967295
 801e17e:	fa1f f989 	uxth.w	r9, r9
 801e182:	46ba      	mov	sl, r7
 801e184:	e7e8      	b.n	801e158 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 801e186:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801e18a:	e7a6      	b.n	801e0da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801e18c:	2a01      	cmp	r2, #1
 801e18e:	d129      	bne.n	801e1e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 801e190:	f3c6 0304 	ubfx	r3, r6, #0, #5
 801e194:	f005 0203 	and.w	r2, r5, #3
 801e198:	3b02      	subs	r3, #2
 801e19a:	4413      	add	r3, r2
 801e19c:	f003 031f 	and.w	r3, r3, #31
 801e1a0:	f3c5 0281 	ubfx	r2, r5, #2, #2
 801e1a4:	f363 0604 	bfi	r6, r3, #0, #5
 801e1a8:	3a02      	subs	r2, #2
 801e1aa:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801e1ae:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801e1b2:	f3c5 1501 	ubfx	r5, r5, #4, #2
 801e1b6:	f362 164a 	bfi	r6, r2, #5, #6
 801e1ba:	3d02      	subs	r5, #2
 801e1bc:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 801e1c0:	f005 051f 	and.w	r5, r5, #31
 801e1c4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801e1c8:	2103      	movs	r1, #3
 801e1ca:	fb11 2205 	smlabb	r2, r1, r5, r2
 801e1ce:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801e1d2:	9a03      	ldr	r2, [sp, #12]
 801e1d4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e1d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e1dc:	f365 26cf 	bfi	r6, r5, #11, #5
 801e1e0:	809e      	strh	r6, [r3, #4]
 801e1e2:	e7ca      	b.n	801e17a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 801e1e4:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801e1e8:	2a02      	cmp	r2, #2
 801e1ea:	b2ab      	uxth	r3, r5
 801e1ec:	d136      	bne.n	801e25c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801e1ee:	2101      	movs	r1, #1
 801e1f0:	fb12 1205 	smlabb	r2, r2, r5, r1
 801e1f4:	4492      	add	sl, r2
 801e1f6:	463a      	mov	r2, r7
 801e1f8:	4552      	cmp	r2, sl
 801e1fa:	d01c      	beq.n	801e236 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801e1fc:	4694      	mov	ip, r2
 801e1fe:	f04f 0b03 	mov.w	fp, #3
 801e202:	f81c 1b02 	ldrb.w	r1, [ip], #2
 801e206:	7852      	ldrb	r2, [r2, #1]
 801e208:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801e20c:	f3c1 1045 	ubfx	r0, r1, #5, #6
 801e210:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 801e214:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801e218:	f001 021f 	and.w	r2, r1, #31
 801e21c:	fb1b 0008 	smlabb	r0, fp, r8, r0
 801e220:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801e224:	9a03      	ldr	r2, [sp, #12]
 801e226:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801e22a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801e22e:	460e      	mov	r6, r1
 801e230:	8081      	strh	r1, [r0, #4]
 801e232:	4662      	mov	r2, ip
 801e234:	e7e0      	b.n	801e1f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801e236:	4599      	cmp	r9, r3
 801e238:	d20b      	bcs.n	801e252 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801e23a:	eba5 0509 	sub.w	r5, r5, r9
 801e23e:	2d00      	cmp	r5, #0
 801e240:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 801e244:	f300 8209 	bgt.w	801e65a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 801e248:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801e24c:	2301      	movs	r3, #1
 801e24e:	9307      	str	r3, [sp, #28]
 801e250:	e00c      	b.n	801e26c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801e252:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801e256:	eba9 0903 	sub.w	r9, r9, r3
 801e25a:	e790      	b.n	801e17e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 801e25c:	4599      	cmp	r9, r3
 801e25e:	d2fa      	bcs.n	801e256 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 801e260:	eba5 0509 	sub.w	r5, r5, r9
 801e264:	2d00      	cmp	r5, #0
 801e266:	dc1d      	bgt.n	801e2a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 801e268:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801e26c:	f04f 0b00 	mov.w	fp, #0
 801e270:	f1b8 0f00 	cmp.w	r8, #0
 801e274:	f340 81a1 	ble.w	801e5ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 801e278:	783b      	ldrb	r3, [r7, #0]
 801e27a:	b2db      	uxtb	r3, r3
 801e27c:	119a      	asrs	r2, r3, #6
 801e27e:	f107 0a01 	add.w	sl, r7, #1
 801e282:	f040 80d7 	bne.w	801e434 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 801e286:	9a03      	ldr	r2, [sp, #12]
 801e288:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e28c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e290:	889e      	ldrh	r6, [r3, #4]
 801e292:	9b01      	ldr	r3, [sp, #4]
 801e294:	2bff      	cmp	r3, #255	@ 0xff
 801e296:	f040 81e9 	bne.w	801e66c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 801e29a:	8026      	strh	r6, [r4, #0]
 801e29c:	f108 38ff 	add.w	r8, r8, #4294967295
 801e2a0:	3402      	adds	r4, #2
 801e2a2:	e0be      	b.n	801e422 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801e2a4:	9b02      	ldr	r3, [sp, #8]
 801e2a6:	9a02      	ldr	r2, [sp, #8]
 801e2a8:	42ab      	cmp	r3, r5
 801e2aa:	bfa8      	it	ge
 801e2ac:	462b      	movge	r3, r5
 801e2ae:	eba2 0803 	sub.w	r8, r2, r3
 801e2b2:	9a07      	ldr	r2, [sp, #28]
 801e2b4:	1aed      	subs	r5, r5, r3
 801e2b6:	2a00      	cmp	r2, #0
 801e2b8:	d05a      	beq.n	801e370 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801e2ba:	9a01      	ldr	r2, [sp, #4]
 801e2bc:	2aff      	cmp	r2, #255	@ 0xff
 801e2be:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e2c2:	d049      	beq.n	801e358 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801e2c4:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801e2c8:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801e2cc:	42a3      	cmp	r3, r4
 801e2ce:	f240 80a5 	bls.w	801e41c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801e2d2:	46bc      	mov	ip, r7
 801e2d4:	8820      	ldrh	r0, [r4, #0]
 801e2d6:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801e2da:	7879      	ldrb	r1, [r7, #1]
 801e2dc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 801e2e0:	b212      	sxth	r2, r2
 801e2e2:	b291      	uxth	r1, r2
 801e2e4:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801e2e8:	120f      	asrs	r7, r1, #8
 801e2ea:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801e2ee:	fb1a fa09 	smulbb	sl, sl, r9
 801e2f2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801e2f6:	fb07 a70e 	mla	r7, r7, lr, sl
 801e2fa:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801e2fe:	00c0      	lsls	r0, r0, #3
 801e300:	10c9      	asrs	r1, r1, #3
 801e302:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801e306:	00d2      	lsls	r2, r2, #3
 801e308:	b2c0      	uxtb	r0, r0
 801e30a:	fb1a fa09 	smulbb	sl, sl, r9
 801e30e:	fb10 f009 	smulbb	r0, r0, r9
 801e312:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e316:	b2d2      	uxtb	r2, r2
 801e318:	b2bf      	uxth	r7, r7
 801e31a:	fb01 a10e 	mla	r1, r1, lr, sl
 801e31e:	fb02 020e 	mla	r2, r2, lr, r0
 801e322:	b289      	uxth	r1, r1
 801e324:	b292      	uxth	r2, r2
 801e326:	1c78      	adds	r0, r7, #1
 801e328:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801e32c:	f101 0a01 	add.w	sl, r1, #1
 801e330:	1c50      	adds	r0, r2, #1
 801e332:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e336:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801e33a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801e33e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801e342:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e346:	4307      	orrs	r7, r0
 801e348:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801e34c:	ea47 070a 	orr.w	r7, r7, sl
 801e350:	f824 7b02 	strh.w	r7, [r4], #2
 801e354:	4667      	mov	r7, ip
 801e356:	e7b9      	b.n	801e2cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 801e358:	42a3      	cmp	r3, r4
 801e35a:	d95f      	bls.n	801e41c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801e35c:	463a      	mov	r2, r7
 801e35e:	f812 1b02 	ldrb.w	r1, [r2], #2
 801e362:	7878      	ldrb	r0, [r7, #1]
 801e364:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 801e368:	f824 1b02 	strh.w	r1, [r4], #2
 801e36c:	4617      	mov	r7, r2
 801e36e:	e7f3      	b.n	801e358 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801e370:	9901      	ldr	r1, [sp, #4]
 801e372:	29ff      	cmp	r1, #255	@ 0xff
 801e374:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e378:	b2b2      	uxth	r2, r6
 801e37a:	d044      	beq.n	801e406 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801e37c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e380:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 801e384:	ea4f 2922 	mov.w	r9, r2, asr #8
 801e388:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801e38c:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 801e390:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801e394:	4608      	mov	r0, r1
 801e396:	fb09 f901 	mul.w	r9, r9, r1
 801e39a:	fb0e fe01 	mul.w	lr, lr, r1
 801e39e:	00d1      	lsls	r1, r2, #3
 801e3a0:	b2c9      	uxtb	r1, r1
 801e3a2:	4341      	muls	r1, r0
 801e3a4:	429c      	cmp	r4, r3
 801e3a6:	f4bf af61 	bcs.w	801e26c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801e3aa:	8822      	ldrh	r2, [r4, #0]
 801e3ac:	1210      	asrs	r0, r2, #8
 801e3ae:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801e3b2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e3b6:	00d2      	lsls	r2, r2, #3
 801e3b8:	fb00 900a 	mla	r0, r0, sl, r9
 801e3bc:	b2d2      	uxtb	r2, r2
 801e3be:	b280      	uxth	r0, r0
 801e3c0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801e3c4:	fb02 120a 	mla	r2, r2, sl, r1
 801e3c8:	b292      	uxth	r2, r2
 801e3ca:	f100 0b01 	add.w	fp, r0, #1
 801e3ce:	fb0c ec0a 	mla	ip, ip, sl, lr
 801e3d2:	fa1f fc8c 	uxth.w	ip, ip
 801e3d6:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801e3da:	1c50      	adds	r0, r2, #1
 801e3dc:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e3e0:	f10c 0201 	add.w	r2, ip, #1
 801e3e4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e3e8:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801e3ec:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801e3f0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e3f4:	ea40 0b0b 	orr.w	fp, r0, fp
 801e3f8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801e3fc:	ea4b 0b0c 	orr.w	fp, fp, ip
 801e400:	f824 bb02 	strh.w	fp, [r4], #2
 801e404:	e7ce      	b.n	801e3a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801e406:	429c      	cmp	r4, r3
 801e408:	f4bf af30 	bcs.w	801e26c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801e40c:	f824 2b02 	strh.w	r2, [r4], #2
 801e410:	e7f9      	b.n	801e406 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801e412:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801e416:	4657      	mov	r7, sl
 801e418:	464d      	mov	r5, r9
 801e41a:	e727      	b.n	801e26c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801e41c:	2300      	movs	r3, #0
 801e41e:	e716      	b.n	801e24e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 801e420:	44bb      	add	fp, r7
 801e422:	4657      	mov	r7, sl
 801e424:	e724      	b.n	801e270 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801e426:	bf00      	nop
 801e428:	20013f4c 	.word	0x20013f4c
 801e42c:	20013f46 	.word	0x20013f46
 801e430:	20000180 	.word	0x20000180
 801e434:	2a01      	cmp	r2, #1
 801e436:	d12a      	bne.n	801e48e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 801e438:	f3c6 0104 	ubfx	r1, r6, #0, #5
 801e43c:	f003 0203 	and.w	r2, r3, #3
 801e440:	3902      	subs	r1, #2
 801e442:	4411      	add	r1, r2
 801e444:	f001 011f 	and.w	r1, r1, #31
 801e448:	f3c3 0081 	ubfx	r0, r3, #2, #2
 801e44c:	f361 0604 	bfi	r6, r1, #0, #5
 801e450:	3802      	subs	r0, #2
 801e452:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 801e456:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801e45a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801e45e:	f360 164a 	bfi	r6, r0, #5, #6
 801e462:	3b02      	subs	r3, #2
 801e464:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 801e468:	f002 031f 	and.w	r3, r2, #31
 801e46c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801e470:	2203      	movs	r2, #3
 801e472:	f363 26cf 	bfi	r6, r3, #11, #5
 801e476:	fb12 0303 	smlabb	r3, r2, r3, r0
 801e47a:	2207      	movs	r2, #7
 801e47c:	fb12 3301 	smlabb	r3, r2, r1, r3
 801e480:	9a03      	ldr	r2, [sp, #12]
 801e482:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801e486:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e48a:	809e      	strh	r6, [r3, #4]
 801e48c:	e701      	b.n	801e292 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801e48e:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 801e492:	45a8      	cmp	r8, r5
 801e494:	4647      	mov	r7, r8
 801e496:	bfa8      	it	ge
 801e498:	462f      	movge	r7, r5
 801e49a:	2a02      	cmp	r2, #2
 801e49c:	d154      	bne.n	801e548 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801e49e:	9b01      	ldr	r3, [sp, #4]
 801e4a0:	2bff      	cmp	r3, #255	@ 0xff
 801e4a2:	d01a      	beq.n	801e4da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801e4a4:	eb0b 0307 	add.w	r3, fp, r7
 801e4a8:	2b40      	cmp	r3, #64	@ 0x40
 801e4aa:	dd16      	ble.n	801e4da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801e4ac:	ea4f 094b 	mov.w	r9, fp, lsl #1
 801e4b0:	4649      	mov	r1, r9
 801e4b2:	9800      	ldr	r0, [sp, #0]
 801e4b4:	f7e2 fd44 	bl	8000f40 <_ZN8touchgfx5paint9flushLineEPmi>
 801e4b8:	465a      	mov	r2, fp
 801e4ba:	9b01      	ldr	r3, [sp, #4]
 801e4bc:	9900      	ldr	r1, [sp, #0]
 801e4be:	4620      	mov	r0, r4
 801e4c0:	f7e2 fd68 	bl	8000f94 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801e4c4:	9b00      	ldr	r3, [sp, #0]
 801e4c6:	461a      	mov	r2, r3
 801e4c8:	4b6c      	ldr	r3, [pc, #432]	@ (801e67c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801e4ca:	429a      	cmp	r2, r3
 801e4cc:	bf0c      	ite	eq
 801e4ce:	4b6c      	ldreq	r3, [pc, #432]	@ (801e680 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801e4d0:	4b6a      	ldrne	r3, [pc, #424]	@ (801e67c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801e4d2:	9300      	str	r3, [sp, #0]
 801e4d4:	444c      	add	r4, r9
 801e4d6:	f04f 0b00 	mov.w	fp, #0
 801e4da:	4652      	mov	r2, sl
 801e4dc:	2100      	movs	r1, #0
 801e4de:	42a9      	cmp	r1, r5
 801e4e0:	da2c      	bge.n	801e53c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 801e4e2:	4694      	mov	ip, r2
 801e4e4:	f04f 0903 	mov.w	r9, #3
 801e4e8:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801e4ec:	7852      	ldrb	r2, [r2, #1]
 801e4ee:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801e4f2:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801e4f6:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801e4fa:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801e4fe:	f003 021f 	and.w	r2, r3, #31
 801e502:	fb19 000e 	smlabb	r0, r9, lr, r0
 801e506:	f04f 0e07 	mov.w	lr, #7
 801e50a:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801e50e:	9a03      	ldr	r2, [sp, #12]
 801e510:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801e514:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801e518:	42b9      	cmp	r1, r7
 801e51a:	461e      	mov	r6, r3
 801e51c:	8083      	strh	r3, [r0, #4]
 801e51e:	da0a      	bge.n	801e536 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 801e520:	9a01      	ldr	r2, [sp, #4]
 801e522:	2aff      	cmp	r2, #255	@ 0xff
 801e524:	bf15      	itete	ne
 801e526:	9a00      	ldrne	r2, [sp, #0]
 801e528:	8023      	strheq	r3, [r4, #0]
 801e52a:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 801e52e:	3402      	addeq	r4, #2
 801e530:	bf18      	it	ne
 801e532:	f10b 0b01 	addne.w	fp, fp, #1
 801e536:	3101      	adds	r1, #1
 801e538:	4662      	mov	r2, ip
 801e53a:	e7d0      	b.n	801e4de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 801e53c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801e540:	eba8 0807 	sub.w	r8, r8, r7
 801e544:	1bed      	subs	r5, r5, r7
 801e546:	e76c      	b.n	801e422 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801e548:	9b01      	ldr	r3, [sp, #4]
 801e54a:	2bff      	cmp	r3, #255	@ 0xff
 801e54c:	eba8 0807 	sub.w	r8, r8, r7
 801e550:	eba5 0507 	sub.w	r5, r5, r7
 801e554:	fa1f f986 	uxth.w	r9, r6
 801e558:	d027      	beq.n	801e5aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 801e55a:	eb0b 0307 	add.w	r3, fp, r7
 801e55e:	2b40      	cmp	r3, #64	@ 0x40
 801e560:	dd18      	ble.n	801e594 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 801e562:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801e566:	4619      	mov	r1, r3
 801e568:	9800      	ldr	r0, [sp, #0]
 801e56a:	930c      	str	r3, [sp, #48]	@ 0x30
 801e56c:	f7e2 fce8 	bl	8000f40 <_ZN8touchgfx5paint9flushLineEPmi>
 801e570:	465a      	mov	r2, fp
 801e572:	9b01      	ldr	r3, [sp, #4]
 801e574:	9900      	ldr	r1, [sp, #0]
 801e576:	4620      	mov	r0, r4
 801e578:	f7e2 fd0c 	bl	8000f94 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801e57c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e57e:	441c      	add	r4, r3
 801e580:	9b00      	ldr	r3, [sp, #0]
 801e582:	461a      	mov	r2, r3
 801e584:	4b3d      	ldr	r3, [pc, #244]	@ (801e67c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801e586:	429a      	cmp	r2, r3
 801e588:	bf0c      	ite	eq
 801e58a:	4b3d      	ldreq	r3, [pc, #244]	@ (801e680 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801e58c:	4b3b      	ldrne	r3, [pc, #236]	@ (801e67c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801e58e:	9300      	str	r3, [sp, #0]
 801e590:	f04f 0b00 	mov.w	fp, #0
 801e594:	9b00      	ldr	r3, [sp, #0]
 801e596:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801e59a:	463b      	mov	r3, r7
 801e59c:	2b00      	cmp	r3, #0
 801e59e:	f43f af3f 	beq.w	801e420 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 801e5a2:	f822 9b02 	strh.w	r9, [r2], #2
 801e5a6:	3b01      	subs	r3, #1
 801e5a8:	e7f8      	b.n	801e59c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801e5aa:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801e5ae:	42a7      	cmp	r7, r4
 801e5b0:	f67f af37 	bls.w	801e422 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801e5b4:	f824 9b02 	strh.w	r9, [r4], #2
 801e5b8:	e7f9      	b.n	801e5ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801e5ba:	f1bb 0f00 	cmp.w	fp, #0
 801e5be:	d00c      	beq.n	801e5da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 801e5c0:	ea4f 084b 	mov.w	r8, fp, lsl #1
 801e5c4:	4641      	mov	r1, r8
 801e5c6:	9800      	ldr	r0, [sp, #0]
 801e5c8:	f7e2 fcba 	bl	8000f40 <_ZN8touchgfx5paint9flushLineEPmi>
 801e5cc:	4620      	mov	r0, r4
 801e5ce:	9b01      	ldr	r3, [sp, #4]
 801e5d0:	9900      	ldr	r1, [sp, #0]
 801e5d2:	465a      	mov	r2, fp
 801e5d4:	f7e2 fcde 	bl	8000f94 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801e5d8:	4444      	add	r4, r8
 801e5da:	4b2a      	ldr	r3, [pc, #168]	@ (801e684 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801e5dc:	9a02      	ldr	r2, [sp, #8]
 801e5de:	881b      	ldrh	r3, [r3, #0]
 801e5e0:	1a9b      	subs	r3, r3, r2
 801e5e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e5e6:	9b06      	ldr	r3, [sp, #24]
 801e5e8:	3301      	adds	r3, #1
 801e5ea:	9306      	str	r3, [sp, #24]
 801e5ec:	9a06      	ldr	r2, [sp, #24]
 801e5ee:	9b04      	ldr	r3, [sp, #16]
 801e5f0:	4293      	cmp	r3, r2
 801e5f2:	d120      	bne.n	801e636 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 801e5f4:	9b05      	ldr	r3, [sp, #20]
 801e5f6:	9a05      	ldr	r2, [sp, #20]
 801e5f8:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801e5fc:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 801e600:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801e602:	f103 0801 	add.w	r8, r3, #1
 801e606:	9b08      	ldr	r3, [sp, #32]
 801e608:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801e60c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e60e:	ba3f      	rev	r7, r7
 801e610:	2280      	movs	r2, #128	@ 0x80
 801e612:	2100      	movs	r1, #0
 801e614:	441f      	add	r7, r3
 801e616:	eba9 0905 	sub.w	r9, r9, r5
 801e61a:	f00c f9be 	bl	802a99a <memset>
 801e61e:	2300      	movs	r3, #0
 801e620:	fa1f f989 	uxth.w	r9, r9
 801e624:	f04f 0600 	mov.w	r6, #0
 801e628:	f8cd 8014 	str.w	r8, [sp, #20]
 801e62c:	9306      	str	r3, [sp, #24]
 801e62e:	f7e2 fc7d 	bl	8000f2c <_ZN8touchgfx5paint8tearDownEv>
 801e632:	46ba      	mov	sl, r7
 801e634:	e58a      	b.n	801e14c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801e636:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801e63a:	9b02      	ldr	r3, [sp, #8]
 801e63c:	eba9 0903 	sub.w	r9, r9, r3
 801e640:	eba9 0505 	sub.w	r5, r9, r5
 801e644:	fa1f f985 	uxth.w	r9, r5
 801e648:	e7f1      	b.n	801e62e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 801e64a:	4b0f      	ldr	r3, [pc, #60]	@ (801e688 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 801e64c:	6818      	ldr	r0, [r3, #0]
 801e64e:	6803      	ldr	r3, [r0, #0]
 801e650:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801e652:	4798      	blx	r3
 801e654:	b013      	add	sp, #76	@ 0x4c
 801e656:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e65a:	9b02      	ldr	r3, [sp, #8]
 801e65c:	9a02      	ldr	r2, [sp, #8]
 801e65e:	42ab      	cmp	r3, r5
 801e660:	bfa8      	it	ge
 801e662:	462b      	movge	r3, r5
 801e664:	eba2 0803 	sub.w	r8, r2, r3
 801e668:	1aed      	subs	r5, r5, r3
 801e66a:	e626      	b.n	801e2ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 801e66c:	f108 38ff 	add.w	r8, r8, #4294967295
 801e670:	fa1f f986 	uxth.w	r9, r6
 801e674:	2500      	movs	r5, #0
 801e676:	2701      	movs	r7, #1
 801e678:	e76f      	b.n	801e55a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 801e67a:	bf00      	nop
 801e67c:	20000180 	.word	0x20000180
 801e680:	20000280 	.word	0x20000280
 801e684:	20013f46 	.word	0x20013f46
 801e688:	20013f4c 	.word	0x20013f4c

0801e68c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801e68c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e690:	b08f      	sub	sp, #60	@ 0x3c
 801e692:	461c      	mov	r4, r3
 801e694:	9203      	str	r2, [sp, #12]
 801e696:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801e69a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e69c:	9202      	str	r2, [sp, #8]
 801e69e:	460f      	mov	r7, r1
 801e6a0:	2a00      	cmp	r2, #0
 801e6a2:	f000 8128 	beq.w	801e8f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801e6a6:	6820      	ldr	r0, [r4, #0]
 801e6a8:	6861      	ldr	r1, [r4, #4]
 801e6aa:	aa0a      	add	r2, sp, #40	@ 0x28
 801e6ac:	c203      	stmia	r2!, {r0, r1}
 801e6ae:	6818      	ldr	r0, [r3, #0]
 801e6b0:	6859      	ldr	r1, [r3, #4]
 801e6b2:	aa0c      	add	r2, sp, #48	@ 0x30
 801e6b4:	c203      	stmia	r2!, {r0, r1}
 801e6b6:	a80a      	add	r0, sp, #40	@ 0x28
 801e6b8:	f7f7 ffd8 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e6bc:	4621      	mov	r1, r4
 801e6be:	a80c      	add	r0, sp, #48	@ 0x30
 801e6c0:	f7f7 fffc 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e6c4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801e6c8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801e6cc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801e6d0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801e6d4:	bfde      	ittt	le
 801e6d6:	b2b3      	uxthle	r3, r6
 801e6d8:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801e6dc:	fb92 f3f3 	sdivle	r3, r2, r3
 801e6e0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801e6e4:	bfc8      	it	gt
 801e6e6:	2301      	movgt	r3, #1
 801e6e8:	fb92 f1f3 	sdiv	r1, r2, r3
 801e6ec:	fa1f fc81 	uxth.w	ip, r1
 801e6f0:	fb0c 2413 	mls	r4, ip, r3, r2
 801e6f4:	fb14 f406 	smulbb	r4, r4, r6
 801e6f8:	441d      	add	r5, r3
 801e6fa:	4404      	add	r4, r0
 801e6fc:	4661      	mov	r1, ip
 801e6fe:	3d01      	subs	r5, #1
 801e700:	b2a4      	uxth	r4, r4
 801e702:	fb95 f5f3 	sdiv	r5, r5, r3
 801e706:	b121      	cbz	r1, 801e712 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801e708:	9b03      	ldr	r3, [sp, #12]
 801e70a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801e70e:	ba1b      	rev	r3, r3
 801e710:	441f      	add	r7, r3
 801e712:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801e716:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801e71a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801e71e:	4418      	add	r0, r3
 801e720:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801e724:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801e728:	441a      	add	r2, r3
 801e72a:	4b74      	ldr	r3, [pc, #464]	@ (801e8fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801e72c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801e730:	6818      	ldr	r0, [r3, #0]
 801e732:	6803      	ldr	r3, [r0, #0]
 801e734:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e736:	4798      	blx	r3
 801e738:	4a71      	ldr	r2, [pc, #452]	@ (801e900 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801e73a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801e73e:	8813      	ldrh	r3, [r2, #0]
 801e740:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801e744:	9209      	str	r2, [sp, #36]	@ 0x24
 801e746:	fb03 c101 	mla	r1, r3, r1, ip
 801e74a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e74e:	4373      	muls	r3, r6
 801e750:	b2ad      	uxth	r5, r5
 801e752:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e756:	00ad      	lsls	r5, r5, #2
 801e758:	2c00      	cmp	r4, #0
 801e75a:	9304      	str	r3, [sp, #16]
 801e75c:	f105 0304 	add.w	r3, r5, #4
 801e760:	9305      	str	r3, [sp, #20]
 801e762:	bf0c      	ite	eq
 801e764:	46c8      	moveq	r8, r9
 801e766:	f04f 0800 	movne.w	r8, #0
 801e76a:	2300      	movs	r3, #0
 801e76c:	fa1f f888 	uxth.w	r8, r8
 801e770:	9301      	str	r3, [sp, #4]
 801e772:	9a04      	ldr	r2, [sp, #16]
 801e774:	4282      	cmp	r2, r0
 801e776:	f240 80b9 	bls.w	801e8ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801e77a:	b95b      	cbnz	r3, 801e794 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801e77c:	783a      	ldrb	r2, [r7, #0]
 801e77e:	0993      	lsrs	r3, r2, #6
 801e780:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801e784:	9201      	str	r2, [sp, #4]
 801e786:	1e5a      	subs	r2, r3, #1
 801e788:	2a02      	cmp	r2, #2
 801e78a:	bf8d      	iteet	hi
 801e78c:	787b      	ldrbhi	r3, [r7, #1]
 801e78e:	3701      	addls	r7, #1
 801e790:	b29b      	uxthls	r3, r3
 801e792:	3702      	addhi	r7, #2
 801e794:	b184      	cbz	r4, 801e7b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801e796:	429c      	cmp	r4, r3
 801e798:	bf95      	itete	ls
 801e79a:	1b1c      	subls	r4, r3, r4
 801e79c:	1ae4      	subhi	r4, r4, r3
 801e79e:	fa1f fa84 	uxthls.w	sl, r4
 801e7a2:	b2a4      	uxthhi	r4, r4
 801e7a4:	bf87      	ittee	hi
 801e7a6:	46c4      	movhi	ip, r8
 801e7a8:	f04f 0a00 	movhi.w	sl, #0
 801e7ac:	fa1f fc89 	uxthls.w	ip, r9
 801e7b0:	2400      	movls	r4, #0
 801e7b2:	4653      	mov	r3, sl
 801e7b4:	46e0      	mov	r8, ip
 801e7b6:	e7dc      	b.n	801e772 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801e7b8:	2204      	movs	r2, #4
 801e7ba:	4615      	mov	r5, r2
 801e7bc:	9905      	ldr	r1, [sp, #20]
 801e7be:	9a01      	ldr	r2, [sp, #4]
 801e7c0:	fb15 1202 	smlabb	r2, r5, r2, r1
 801e7c4:	9903      	ldr	r1, [sp, #12]
 801e7c6:	588a      	ldr	r2, [r1, r2]
 801e7c8:	4543      	cmp	r3, r8
 801e7ca:	bf27      	ittee	cs
 801e7cc:	eba3 0a08 	subcs.w	sl, r3, r8
 801e7d0:	46c6      	movcs	lr, r8
 801e7d2:	eba8 0c03 	subcc.w	ip, r8, r3
 801e7d6:	469e      	movcc	lr, r3
 801e7d8:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801e7dc:	bf27      	ittee	cs
 801e7de:	fa1f fa8a 	uxthcs.w	sl, sl
 801e7e2:	46a4      	movcs	ip, r4
 801e7e4:	fa1f fc8c 	uxthcc.w	ip, ip
 801e7e8:	46a2      	movcc	sl, r4
 801e7ea:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801e7ee:	2900      	cmp	r1, #0
 801e7f0:	d066      	beq.n	801e8c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801e7f2:	29ff      	cmp	r1, #255	@ 0xff
 801e7f4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801e7f8:	d114      	bne.n	801e824 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801e7fa:	9d02      	ldr	r5, [sp, #8]
 801e7fc:	2dff      	cmp	r5, #255	@ 0xff
 801e7fe:	d111      	bne.n	801e824 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801e800:	0951      	lsrs	r1, r2, #5
 801e802:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801e806:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e80a:	f026 0607 	bic.w	r6, r6, #7
 801e80e:	430e      	orrs	r6, r1
 801e810:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e814:	4316      	orrs	r6, r2
 801e816:	b2b6      	uxth	r6, r6
 801e818:	4486      	add	lr, r0
 801e81a:	4586      	cmp	lr, r0
 801e81c:	d051      	beq.n	801e8c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801e81e:	f820 6b02 	strh.w	r6, [r0], #2
 801e822:	e7fa      	b.n	801e81a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801e824:	9d02      	ldr	r5, [sp, #8]
 801e826:	4369      	muls	r1, r5
 801e828:	1c4d      	adds	r5, r1, #1
 801e82a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801e82e:	122d      	asrs	r5, r5, #8
 801e830:	ea6f 0b05 	mvn.w	fp, r5
 801e834:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801e838:	b2ad      	uxth	r5, r5
 801e83a:	b2f6      	uxtb	r6, r6
 801e83c:	b2d2      	uxtb	r2, r2
 801e83e:	fb11 f105 	smulbb	r1, r1, r5
 801e842:	fb16 f605 	smulbb	r6, r6, r5
 801e846:	fb12 f205 	smulbb	r2, r2, r5
 801e84a:	b289      	uxth	r1, r1
 801e84c:	b2b6      	uxth	r6, r6
 801e84e:	b292      	uxth	r2, r2
 801e850:	9106      	str	r1, [sp, #24]
 801e852:	9607      	str	r6, [sp, #28]
 801e854:	9208      	str	r2, [sp, #32]
 801e856:	4486      	add	lr, r0
 801e858:	fa5f fb8b 	uxtb.w	fp, fp
 801e85c:	4586      	cmp	lr, r0
 801e85e:	d030      	beq.n	801e8c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801e860:	8802      	ldrh	r2, [r0, #0]
 801e862:	9906      	ldr	r1, [sp, #24]
 801e864:	1216      	asrs	r6, r2, #8
 801e866:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801e86a:	10d5      	asrs	r5, r2, #3
 801e86c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e870:	fb06 160b 	mla	r6, r6, fp, r1
 801e874:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801e878:	9907      	ldr	r1, [sp, #28]
 801e87a:	00d2      	lsls	r2, r2, #3
 801e87c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e880:	fb05 150b 	mla	r5, r5, fp, r1
 801e884:	b2d2      	uxtb	r2, r2
 801e886:	9908      	ldr	r1, [sp, #32]
 801e888:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e88c:	b2b6      	uxth	r6, r6
 801e88e:	fb02 120b 	mla	r2, r2, fp, r1
 801e892:	b292      	uxth	r2, r2
 801e894:	1c71      	adds	r1, r6, #1
 801e896:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801e89a:	1c51      	adds	r1, r2, #1
 801e89c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e8a0:	b2ad      	uxth	r5, r5
 801e8a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e8a6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801e8aa:	4316      	orrs	r6, r2
 801e8ac:	1c6a      	adds	r2, r5, #1
 801e8ae:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801e8b2:	096d      	lsrs	r5, r5, #5
 801e8b4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e8b8:	432e      	orrs	r6, r5
 801e8ba:	f820 6b02 	strh.w	r6, [r0], #2
 801e8be:	e7cd      	b.n	801e85c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801e8c0:	4470      	add	r0, lr
 801e8c2:	4543      	cmp	r3, r8
 801e8c4:	f4ff af75 	bcc.w	801e7b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801e8c8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801e8cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e8ce:	fa1f fc89 	uxth.w	ip, r9
 801e8d2:	eba4 040c 	sub.w	r4, r4, ip
 801e8d6:	881b      	ldrh	r3, [r3, #0]
 801e8d8:	b2a4      	uxth	r4, r4
 801e8da:	2c00      	cmp	r4, #0
 801e8dc:	eba3 0309 	sub.w	r3, r3, r9
 801e8e0:	bf18      	it	ne
 801e8e2:	f04f 0c00 	movne.w	ip, #0
 801e8e6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e8ea:	e762      	b.n	801e7b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801e8ec:	4b03      	ldr	r3, [pc, #12]	@ (801e8fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801e8ee:	6818      	ldr	r0, [r3, #0]
 801e8f0:	6803      	ldr	r3, [r0, #0]
 801e8f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801e8f4:	4798      	blx	r3
 801e8f6:	b00f      	add	sp, #60	@ 0x3c
 801e8f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8fc:	20013f4c 	.word	0x20013f4c
 801e900:	20013f46 	.word	0x20013f46

0801e904 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801e904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e908:	b093      	sub	sp, #76	@ 0x4c
 801e90a:	461c      	mov	r4, r3
 801e90c:	9205      	str	r2, [sp, #20]
 801e90e:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801e912:	9101      	str	r1, [sp, #4]
 801e914:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e916:	9202      	str	r2, [sp, #8]
 801e918:	2a00      	cmp	r2, #0
 801e91a:	f000 812c 	beq.w	801eb76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801e91e:	6820      	ldr	r0, [r4, #0]
 801e920:	6861      	ldr	r1, [r4, #4]
 801e922:	aa0e      	add	r2, sp, #56	@ 0x38
 801e924:	c203      	stmia	r2!, {r0, r1}
 801e926:	6818      	ldr	r0, [r3, #0]
 801e928:	6859      	ldr	r1, [r3, #4]
 801e92a:	aa10      	add	r2, sp, #64	@ 0x40
 801e92c:	c203      	stmia	r2!, {r0, r1}
 801e92e:	a80e      	add	r0, sp, #56	@ 0x38
 801e930:	f7f7 fe9c 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e934:	4621      	mov	r1, r4
 801e936:	a810      	add	r0, sp, #64	@ 0x40
 801e938:	f7f7 fec0 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e93c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801e940:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801e944:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801e948:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801e94c:	bfde      	ittt	le
 801e94e:	b2b3      	uxthle	r3, r6
 801e950:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801e954:	fb92 f3f3 	sdivle	r3, r2, r3
 801e958:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801e95c:	bfc8      	it	gt
 801e95e:	2301      	movgt	r3, #1
 801e960:	fb92 f1f3 	sdiv	r1, r2, r3
 801e964:	fa1f fc81 	uxth.w	ip, r1
 801e968:	fb0c 2413 	mls	r4, ip, r3, r2
 801e96c:	fb14 f406 	smulbb	r4, r4, r6
 801e970:	441d      	add	r5, r3
 801e972:	4404      	add	r4, r0
 801e974:	4661      	mov	r1, ip
 801e976:	3d01      	subs	r5, #1
 801e978:	b2a4      	uxth	r4, r4
 801e97a:	fb95 f5f3 	sdiv	r5, r5, r3
 801e97e:	b131      	cbz	r1, 801e98e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801e980:	9b05      	ldr	r3, [sp, #20]
 801e982:	9901      	ldr	r1, [sp, #4]
 801e984:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801e988:	ba1b      	rev	r3, r3
 801e98a:	4419      	add	r1, r3
 801e98c:	9101      	str	r1, [sp, #4]
 801e98e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801e992:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801e996:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801e99a:	4418      	add	r0, r3
 801e99c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801e9a0:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801e9a4:	441a      	add	r2, r3
 801e9a6:	4b75      	ldr	r3, [pc, #468]	@ (801eb7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801e9a8:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801e9ac:	6818      	ldr	r0, [r3, #0]
 801e9ae:	6803      	ldr	r3, [r0, #0]
 801e9b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e9b2:	4798      	blx	r3
 801e9b4:	4972      	ldr	r1, [pc, #456]	@ (801eb80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801e9b6:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801e9ba:	880b      	ldrh	r3, [r1, #0]
 801e9bc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801e9c0:	910d      	str	r1, [sp, #52]	@ 0x34
 801e9c2:	fb03 c202 	mla	r2, r3, r2, ip
 801e9c6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e9ca:	4373      	muls	r3, r6
 801e9cc:	b2ad      	uxth	r5, r5
 801e9ce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e9d2:	00ad      	lsls	r5, r5, #2
 801e9d4:	9308      	str	r3, [sp, #32]
 801e9d6:	1d2b      	adds	r3, r5, #4
 801e9d8:	9309      	str	r3, [sp, #36]	@ 0x24
 801e9da:	9b02      	ldr	r3, [sp, #8]
 801e9dc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e9e0:	9106      	str	r1, [sp, #24]
 801e9e2:	43da      	mvns	r2, r3
 801e9e4:	2c00      	cmp	r4, #0
 801e9e6:	bf0c      	ite	eq
 801e9e8:	46dc      	moveq	ip, fp
 801e9ea:	f04f 0c00 	movne.w	ip, #0
 801e9ee:	2300      	movs	r3, #0
 801e9f0:	b2d2      	uxtb	r2, r2
 801e9f2:	fa1f fc8c 	uxth.w	ip, ip
 801e9f6:	9303      	str	r3, [sp, #12]
 801e9f8:	9207      	str	r2, [sp, #28]
 801e9fa:	9a08      	ldr	r2, [sp, #32]
 801e9fc:	4282      	cmp	r2, r0
 801e9fe:	f240 80b5 	bls.w	801eb6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801ea02:	b963      	cbnz	r3, 801ea1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801ea04:	9b01      	ldr	r3, [sp, #4]
 801ea06:	781a      	ldrb	r2, [r3, #0]
 801ea08:	0993      	lsrs	r3, r2, #6
 801ea0a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801ea0e:	9203      	str	r2, [sp, #12]
 801ea10:	1e5a      	subs	r2, r3, #1
 801ea12:	2a02      	cmp	r2, #2
 801ea14:	d815      	bhi.n	801ea42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801ea16:	9a01      	ldr	r2, [sp, #4]
 801ea18:	3201      	adds	r2, #1
 801ea1a:	9201      	str	r2, [sp, #4]
 801ea1c:	b29b      	uxth	r3, r3
 801ea1e:	b1b4      	cbz	r4, 801ea4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801ea20:	429c      	cmp	r4, r3
 801ea22:	bf95      	itete	ls
 801ea24:	1b1c      	subls	r4, r3, r4
 801ea26:	1ae4      	subhi	r4, r4, r3
 801ea28:	fa1f f884 	uxthls.w	r8, r4
 801ea2c:	b2a4      	uxthhi	r4, r4
 801ea2e:	bf87      	ittee	hi
 801ea30:	4666      	movhi	r6, ip
 801ea32:	f04f 0800 	movhi.w	r8, #0
 801ea36:	fa1f f68b 	uxthls.w	r6, fp
 801ea3a:	2400      	movls	r4, #0
 801ea3c:	4643      	mov	r3, r8
 801ea3e:	46b4      	mov	ip, r6
 801ea40:	e7db      	b.n	801e9fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801ea42:	9a01      	ldr	r2, [sp, #4]
 801ea44:	9b01      	ldr	r3, [sp, #4]
 801ea46:	3202      	adds	r2, #2
 801ea48:	785b      	ldrb	r3, [r3, #1]
 801ea4a:	9201      	str	r2, [sp, #4]
 801ea4c:	e7e7      	b.n	801ea1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801ea4e:	2203      	movs	r2, #3
 801ea50:	4615      	mov	r5, r2
 801ea52:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801ea54:	9a03      	ldr	r2, [sp, #12]
 801ea56:	fb15 1202 	smlabb	r2, r5, r2, r1
 801ea5a:	9905      	ldr	r1, [sp, #20]
 801ea5c:	4563      	cmp	r3, ip
 801ea5e:	eb01 0502 	add.w	r5, r1, r2
 801ea62:	9902      	ldr	r1, [sp, #8]
 801ea64:	bf29      	itett	cs
 801ea66:	eba3 080c 	subcs.w	r8, r3, ip
 801ea6a:	ebac 0603 	subcc.w	r6, ip, r3
 801ea6e:	fa1f f888 	uxthcs.w	r8, r8
 801ea72:	46e1      	movcs	r9, ip
 801ea74:	bf2f      	iteee	cs
 801ea76:	4626      	movcs	r6, r4
 801ea78:	b2b6      	uxthcc	r6, r6
 801ea7a:	4699      	movcc	r9, r3
 801ea7c:	46a0      	movcc	r8, r4
 801ea7e:	29ff      	cmp	r1, #255	@ 0xff
 801ea80:	d04a      	beq.n	801eb18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801ea82:	9f06      	ldr	r7, [sp, #24]
 801ea84:	78a9      	ldrb	r1, [r5, #2]
 801ea86:	9004      	str	r0, [sp, #16]
 801ea88:	4379      	muls	r1, r7
 801ea8a:	910a      	str	r1, [sp, #40]	@ 0x28
 801ea8c:	7869      	ldrb	r1, [r5, #1]
 801ea8e:	4379      	muls	r1, r7
 801ea90:	910b      	str	r1, [sp, #44]	@ 0x2c
 801ea92:	9905      	ldr	r1, [sp, #20]
 801ea94:	5c8a      	ldrb	r2, [r1, r2]
 801ea96:	437a      	muls	r2, r7
 801ea98:	920c      	str	r2, [sp, #48]	@ 0x30
 801ea9a:	46ca      	mov	sl, r9
 801ea9c:	f1ba 0f00 	cmp.w	sl, #0
 801eaa0:	d03d      	beq.n	801eb1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801eaa2:	9a04      	ldr	r2, [sp, #16]
 801eaa4:	9f07      	ldr	r7, [sp, #28]
 801eaa6:	8812      	ldrh	r2, [r2, #0]
 801eaa8:	1215      	asrs	r5, r2, #8
 801eaaa:	46be      	mov	lr, r7
 801eaac:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801eab0:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801eab2:	10d1      	asrs	r1, r2, #3
 801eab4:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801eab8:	fb05 750e 	mla	r5, r5, lr, r7
 801eabc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801eac0:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801eac2:	00d2      	lsls	r2, r2, #3
 801eac4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801eac8:	fb01 710e 	mla	r1, r1, lr, r7
 801eacc:	b2d2      	uxtb	r2, r2
 801eace:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801ead0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ead4:	b2ad      	uxth	r5, r5
 801ead6:	fb02 720e 	mla	r2, r2, lr, r7
 801eada:	b292      	uxth	r2, r2
 801eadc:	f105 0e01 	add.w	lr, r5, #1
 801eae0:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801eae4:	f102 0e01 	add.w	lr, r2, #1
 801eae8:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801eaec:	b289      	uxth	r1, r1
 801eaee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801eaf2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801eaf6:	4315      	orrs	r5, r2
 801eaf8:	1c4a      	adds	r2, r1, #1
 801eafa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801eafe:	0949      	lsrs	r1, r1, #5
 801eb00:	9a04      	ldr	r2, [sp, #16]
 801eb02:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801eb06:	430d      	orrs	r5, r1
 801eb08:	f822 5b02 	strh.w	r5, [r2], #2
 801eb0c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801eb10:	9204      	str	r2, [sp, #16]
 801eb12:	fa1f fa8a 	uxth.w	sl, sl
 801eb16:	e7c1      	b.n	801ea9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801eb18:	4649      	mov	r1, r9
 801eb1a:	4686      	mov	lr, r0
 801eb1c:	b999      	cbnz	r1, 801eb46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801eb1e:	4563      	cmp	r3, ip
 801eb20:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801eb24:	d38a      	bcc.n	801ea3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801eb26:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801eb2a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801eb2c:	fa1f f68b 	uxth.w	r6, fp
 801eb30:	1ba4      	subs	r4, r4, r6
 801eb32:	881b      	ldrh	r3, [r3, #0]
 801eb34:	b2a4      	uxth	r4, r4
 801eb36:	2c00      	cmp	r4, #0
 801eb38:	eba3 030b 	sub.w	r3, r3, fp
 801eb3c:	bf18      	it	ne
 801eb3e:	2600      	movne	r6, #0
 801eb40:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801eb44:	e77a      	b.n	801ea3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801eb46:	78aa      	ldrb	r2, [r5, #2]
 801eb48:	4f0e      	ldr	r7, [pc, #56]	@ (801eb84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801eb4a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801eb4e:	786a      	ldrb	r2, [r5, #1]
 801eb50:	00d2      	lsls	r2, r2, #3
 801eb52:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801eb56:	ea4a 0202 	orr.w	r2, sl, r2
 801eb5a:	f895 a000 	ldrb.w	sl, [r5]
 801eb5e:	3901      	subs	r1, #1
 801eb60:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801eb64:	f82e 2b02 	strh.w	r2, [lr], #2
 801eb68:	b289      	uxth	r1, r1
 801eb6a:	e7d7      	b.n	801eb1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801eb6c:	4b03      	ldr	r3, [pc, #12]	@ (801eb7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801eb6e:	6818      	ldr	r0, [r3, #0]
 801eb70:	6803      	ldr	r3, [r0, #0]
 801eb72:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801eb74:	4798      	blx	r3
 801eb76:	b013      	add	sp, #76	@ 0x4c
 801eb78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb7c:	20013f4c 	.word	0x20013f4c
 801eb80:	20013f46 	.word	0x20013f46
 801eb84:	fffff800 	.word	0xfffff800

0801eb88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801eb88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb8c:	b09d      	sub	sp, #116	@ 0x74
 801eb8e:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 801eb92:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801eb96:	920e      	str	r2, [sp, #56]	@ 0x38
 801eb98:	461c      	mov	r4, r3
 801eb9a:	4683      	mov	fp, r0
 801eb9c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eb9e:	2a00      	cmp	r2, #0
 801eba0:	f000 81e0 	beq.w	801ef64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801eba4:	6820      	ldr	r0, [r4, #0]
 801eba6:	6861      	ldr	r1, [r4, #4]
 801eba8:	aa18      	add	r2, sp, #96	@ 0x60
 801ebaa:	c203      	stmia	r2!, {r0, r1}
 801ebac:	6818      	ldr	r0, [r3, #0]
 801ebae:	6859      	ldr	r1, [r3, #4]
 801ebb0:	aa1a      	add	r2, sp, #104	@ 0x68
 801ebb2:	c203      	stmia	r2!, {r0, r1}
 801ebb4:	a818      	add	r0, sp, #96	@ 0x60
 801ebb6:	f7f7 fd59 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ebba:	4621      	mov	r1, r4
 801ebbc:	a81a      	add	r0, sp, #104	@ 0x68
 801ebbe:	f7f7 fd7d 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ebc2:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801ebc6:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801ebca:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801ebce:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801ebd2:	bfd7      	itett	le
 801ebd4:	b29a      	uxthle	r2, r3
 801ebd6:	2201      	movgt	r2, #1
 801ebd8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801ebdc:	fb91 f2f2 	sdivle	r2, r1, r2
 801ebe0:	9202      	str	r2, [sp, #8]
 801ebe2:	9802      	ldr	r0, [sp, #8]
 801ebe4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801ebe8:	fb92 f0f0 	sdiv	r0, r2, r0
 801ebec:	b280      	uxth	r0, r0
 801ebee:	900f      	str	r0, [sp, #60]	@ 0x3c
 801ebf0:	9902      	ldr	r1, [sp, #8]
 801ebf2:	9802      	ldr	r0, [sp, #8]
 801ebf4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ebf6:	440c      	add	r4, r1
 801ebf8:	fb05 2510 	mls	r5, r5, r0, r2
 801ebfc:	fb15 f503 	smulbb	r5, r5, r3
 801ec00:	3c01      	subs	r4, #1
 801ec02:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801ec06:	fb94 f4f1 	sdiv	r4, r4, r1
 801ec0a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801ec0e:	440d      	add	r5, r1
 801ec10:	4419      	add	r1, r3
 801ec12:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801ec16:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801ec1a:	441a      	add	r2, r3
 801ec1c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801ec20:	9306      	str	r3, [sp, #24]
 801ec22:	4bb3      	ldr	r3, [pc, #716]	@ (801eef0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801ec24:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 801ec28:	6818      	ldr	r0, [r3, #0]
 801ec2a:	6803      	ldr	r3, [r0, #0]
 801ec2c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ec2e:	4798      	blx	r3
 801ec30:	4bb0      	ldr	r3, [pc, #704]	@ (801eef4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801ec32:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801ec36:	881a      	ldrh	r2, [r3, #0]
 801ec38:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801ec3c:	9316      	str	r3, [sp, #88]	@ 0x58
 801ec3e:	fb02 7101 	mla	r1, r2, r1, r7
 801ec42:	3401      	adds	r4, #1
 801ec44:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801ec48:	b2a4      	uxth	r4, r4
 801ec4a:	4356      	muls	r6, r2
 801ec4c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801ec50:	00a4      	lsls	r4, r4, #2
 801ec52:	920a      	str	r2, [sp, #40]	@ 0x28
 801ec54:	1d22      	adds	r2, r4, #4
 801ec56:	b2ad      	uxth	r5, r5
 801ec58:	9213      	str	r2, [sp, #76]	@ 0x4c
 801ec5a:	4ba7      	ldr	r3, [pc, #668]	@ (801eef8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801ec5c:	9a06      	ldr	r2, [sp, #24]
 801ec5e:	2d00      	cmp	r5, #0
 801ec60:	bf0c      	ite	eq
 801ec62:	4611      	moveq	r1, r2
 801ec64:	2100      	movne	r1, #0
 801ec66:	2200      	movs	r2, #0
 801ec68:	eba3 030b 	sub.w	r3, r3, fp
 801ec6c:	b289      	uxth	r1, r1
 801ec6e:	920d      	str	r2, [sp, #52]	@ 0x34
 801ec70:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ec72:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ec74:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ec76:	fa12 f383 	uxtah	r3, r2, r3
 801ec7a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ec7c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801ec80:	3304      	adds	r3, #4
 801ec82:	9308      	str	r3, [sp, #32]
 801ec84:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ec86:	4543      	cmp	r3, r8
 801ec88:	f240 8167 	bls.w	801ef5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801ec8c:	9a02      	ldr	r2, [sp, #8]
 801ec8e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801ec92:	fbb5 f3f3 	udiv	r3, r5, r3
 801ec96:	1ad3      	subs	r3, r2, r3
 801ec98:	b29b      	uxth	r3, r3
 801ec9a:	9314      	str	r3, [sp, #80]	@ 0x50
 801ec9c:	9b08      	ldr	r3, [sp, #32]
 801ec9e:	9808      	ldr	r0, [sp, #32]
 801eca0:	785a      	ldrb	r2, [r3, #1]
 801eca2:	789b      	ldrb	r3, [r3, #2]
 801eca4:	7800      	ldrb	r0, [r0, #0]
 801eca6:	9010      	str	r0, [sp, #64]	@ 0x40
 801eca8:	021b      	lsls	r3, r3, #8
 801ecaa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ecae:	9a08      	ldr	r2, [sp, #32]
 801ecb0:	78d2      	ldrb	r2, [r2, #3]
 801ecb2:	4313      	orrs	r3, r2
 801ecb4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ecb6:	3001      	adds	r0, #1
 801ecb8:	441a      	add	r2, r3
 801ecba:	9007      	str	r0, [sp, #28]
 801ecbc:	1c50      	adds	r0, r2, #1
 801ecbe:	9005      	str	r0, [sp, #20]
 801ecc0:	7852      	ldrb	r2, [r2, #1]
 801ecc2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801ecc4:	0212      	lsls	r2, r2, #8
 801ecc6:	5cc3      	ldrb	r3, [r0, r3]
 801ecc8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801eccc:	431a      	orrs	r2, r3
 801ecce:	b293      	uxth	r3, r2
 801ecd0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ecd2:	2300      	movs	r3, #0
 801ecd4:	9309      	str	r3, [sp, #36]	@ 0x24
 801ecd6:	2301      	movs	r3, #1
 801ecd8:	9301      	str	r3, [sp, #4]
 801ecda:	9304      	str	r3, [sp, #16]
 801ecdc:	2300      	movs	r3, #0
 801ecde:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801ece2:	9303      	str	r3, [sp, #12]
 801ece4:	f04f 0e01 	mov.w	lr, #1
 801ece8:	2d00      	cmp	r5, #0
 801ecea:	d07c      	beq.n	801ede6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801ecec:	45ae      	cmp	lr, r5
 801ecee:	d26b      	bcs.n	801edc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801ecf0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ecf2:	eba5 050e 	sub.w	r5, r5, lr
 801ecf6:	4543      	cmp	r3, r8
 801ecf8:	b2ad      	uxth	r5, r5
 801ecfa:	460c      	mov	r4, r1
 801ecfc:	d802      	bhi.n	801ed04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801ecfe:	e070      	b.n	801ede2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801ed00:	2b00      	cmp	r3, #0
 801ed02:	d15c      	bne.n	801edbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ed04:	9b05      	ldr	r3, [sp, #20]
 801ed06:	9a04      	ldr	r2, [sp, #16]
 801ed08:	785b      	ldrb	r3, [r3, #1]
 801ed0a:	9904      	ldr	r1, [sp, #16]
 801ed0c:	f1c2 0207 	rsb	r2, r2, #7
 801ed10:	4093      	lsls	r3, r2
 801ed12:	005b      	lsls	r3, r3, #1
 801ed14:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801ed18:	9b05      	ldr	r3, [sp, #20]
 801ed1a:	781b      	ldrb	r3, [r3, #0]
 801ed1c:	410b      	asrs	r3, r1
 801ed1e:	3101      	adds	r1, #1
 801ed20:	b2c9      	uxtb	r1, r1
 801ed22:	2908      	cmp	r1, #8
 801ed24:	9104      	str	r1, [sp, #16]
 801ed26:	9905      	ldr	r1, [sp, #20]
 801ed28:	bf0a      	itet	eq
 801ed2a:	3102      	addeq	r1, #2
 801ed2c:	3101      	addne	r1, #1
 801ed2e:	9105      	streq	r1, [sp, #20]
 801ed30:	b2db      	uxtb	r3, r3
 801ed32:	bf0a      	itet	eq
 801ed34:	2100      	moveq	r1, #0
 801ed36:	9105      	strne	r1, [sp, #20]
 801ed38:	9104      	streq	r1, [sp, #16]
 801ed3a:	4313      	orrs	r3, r2
 801ed3c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801ed3e:	b29a      	uxth	r2, r3
 801ed40:	4291      	cmp	r1, r2
 801ed42:	d30a      	bcc.n	801ed5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801ed44:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801ed48:	2301      	movs	r3, #1
 801ed4a:	9907      	ldr	r1, [sp, #28]
 801ed4c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801ed50:	d30f      	bcc.n	801ed72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801ed52:	2100      	movs	r1, #0
 801ed54:	9301      	str	r3, [sp, #4]
 801ed56:	9103      	str	r1, [sp, #12]
 801ed58:	e032      	b.n	801edc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801ed5a:	9b07      	ldr	r3, [sp, #28]
 801ed5c:	429a      	cmp	r2, r3
 801ed5e:	d318      	bcc.n	801ed92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801ed60:	9b01      	ldr	r3, [sp, #4]
 801ed62:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801ed66:	445b      	add	r3, fp
 801ed68:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801ed6c:	9b01      	ldr	r3, [sp, #4]
 801ed6e:	3301      	adds	r3, #1
 801ed70:	b29b      	uxth	r3, r3
 801ed72:	9907      	ldr	r1, [sp, #28]
 801ed74:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 801ed78:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801ed7c:	7108      	strb	r0, [r1, #4]
 801ed7e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801ed80:	80c8      	strh	r0, [r1, #6]
 801ed82:	9801      	ldr	r0, [sp, #4]
 801ed84:	3001      	adds	r0, #1
 801ed86:	7148      	strb	r0, [r1, #5]
 801ed88:	9907      	ldr	r1, [sp, #28]
 801ed8a:	3101      	adds	r1, #1
 801ed8c:	b289      	uxth	r1, r1
 801ed8e:	9107      	str	r1, [sp, #28]
 801ed90:	e7df      	b.n	801ed52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801ed92:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801ed96:	4611      	mov	r1, r2
 801ed98:	795b      	ldrb	r3, [r3, #5]
 801ed9a:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801ed9e:	4458      	add	r0, fp
 801eda0:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801eda2:	4406      	add	r6, r0
 801eda4:	2e00      	cmp	r6, #0
 801eda6:	dd06      	ble.n	801edb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801eda8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801edac:	790e      	ldrb	r6, [r1, #4]
 801edae:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801edb2:	88c9      	ldrh	r1, [r1, #6]
 801edb4:	e7f4      	b.n	801eda0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801edb6:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801edba:	b29b      	uxth	r3, r3
 801edbc:	e7c5      	b.n	801ed4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801edbe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801edc0:	920b      	str	r2, [sp, #44]	@ 0x2c
 801edc2:	4621      	mov	r1, r4
 801edc4:	469e      	mov	lr, r3
 801edc6:	e78f      	b.n	801ece8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801edc8:	9a03      	ldr	r2, [sp, #12]
 801edca:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801edce:	442a      	add	r2, r5
 801edd0:	ebae 0305 	sub.w	r3, lr, r5
 801edd4:	b292      	uxth	r2, r2
 801edd6:	b29b      	uxth	r3, r3
 801edd8:	9203      	str	r2, [sp, #12]
 801edda:	2500      	movs	r5, #0
 801eddc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801edde:	4542      	cmp	r2, r8
 801ede0:	d88e      	bhi.n	801ed00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801ede2:	4621      	mov	r1, r4
 801ede4:	e74e      	b.n	801ec84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801ede6:	458e      	cmp	lr, r1
 801ede8:	bf29      	itett	cs
 801edea:	ebae 0301 	subcs.w	r3, lr, r1
 801edee:	eba1 040e 	subcc.w	r4, r1, lr
 801edf2:	b29b      	uxthcs	r3, r3
 801edf4:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801edf6:	bf2f      	iteee	cs
 801edf8:	462c      	movcs	r4, r5
 801edfa:	b2a4      	uxthcc	r4, r4
 801edfc:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801ee00:	462b      	movcc	r3, r5
 801ee02:	f04f 0900 	mov.w	r9, #0
 801ee06:	9a03      	ldr	r2, [sp, #12]
 801ee08:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801ee0a:	444a      	add	r2, r9
 801ee0c:	4548      	cmp	r0, r9
 801ee0e:	b292      	uxth	r2, r2
 801ee10:	d074      	beq.n	801eefc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801ee12:	445a      	add	r2, fp
 801ee14:	2004      	movs	r0, #4
 801ee16:	4605      	mov	r5, r0
 801ee18:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801ee1c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801ee1e:	fb15 0202 	smlabb	r2, r5, r2, r0
 801ee22:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801ee24:	5880      	ldr	r0, [r0, r2]
 801ee26:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801ee2a:	d014      	beq.n	801ee56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801ee2c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801ee30:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801ee34:	d112      	bne.n	801ee5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801ee36:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801ee38:	2aff      	cmp	r2, #255	@ 0xff
 801ee3a:	d10f      	bne.n	801ee5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801ee3c:	0942      	lsrs	r2, r0, #5
 801ee3e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801ee42:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ee46:	f025 0507 	bic.w	r5, r5, #7
 801ee4a:	4315      	orrs	r5, r2
 801ee4c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801ee50:	4305      	orrs	r5, r0
 801ee52:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801ee56:	f109 0901 	add.w	r9, r9, #1
 801ee5a:	e7d4      	b.n	801ee06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801ee5c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801ee60:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801ee64:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801ee68:	9215      	str	r2, [sp, #84]	@ 0x54
 801ee6a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801ee6c:	fb02 fa0a 	mul.w	sl, r2, sl
 801ee70:	f10a 0201 	add.w	r2, sl, #1
 801ee74:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801ee78:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ee7c:	1212      	asrs	r2, r2, #8
 801ee7e:	fa1f fa82 	uxth.w	sl, r2
 801ee82:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801ee86:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ee8a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ee8e:	43d2      	mvns	r2, r2
 801ee90:	b2d2      	uxtb	r2, r2
 801ee92:	fb16 f60a 	smulbb	r6, r6, sl
 801ee96:	fa5f fc8c 	uxtb.w	ip, ip
 801ee9a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ee9e:	b2c0      	uxtb	r0, r0
 801eea0:	fb07 6702 	mla	r7, r7, r2, r6
 801eea4:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801eea8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801eeaa:	fb10 f00a 	smulbb	r0, r0, sl
 801eeae:	fb0c 0002 	mla	r0, ip, r2, r0
 801eeb2:	b2ed      	uxtb	r5, r5
 801eeb4:	b2bf      	uxth	r7, r7
 801eeb6:	fb15 f50a 	smulbb	r5, r5, sl
 801eeba:	b280      	uxth	r0, r0
 801eebc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801eec0:	fb06 5602 	mla	r6, r6, r2, r5
 801eec4:	1c7a      	adds	r2, r7, #1
 801eec6:	1c45      	adds	r5, r0, #1
 801eec8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801eecc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801eed0:	b2b6      	uxth	r6, r6
 801eed2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801eed6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801eeda:	432f      	orrs	r7, r5
 801eedc:	1c75      	adds	r5, r6, #1
 801eede:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801eee2:	096d      	lsrs	r5, r5, #5
 801eee4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801eee8:	432f      	orrs	r7, r5
 801eeea:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801eeee:	e7b2      	b.n	801ee56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801eef0:	20013f4c 	.word	0x20013f4c
 801eef4:	20013f46 	.word	0x20013f46
 801eef8:	fffff7fb 	.word	0xfffff7fb
 801eefc:	9203      	str	r2, [sp, #12]
 801eefe:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ef00:	458e      	cmp	lr, r1
 801ef02:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801ef06:	f4ff af68 	bcc.w	801edda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801ef0a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801ef0c:	9906      	ldr	r1, [sp, #24]
 801ef0e:	8812      	ldrh	r2, [r2, #0]
 801ef10:	1a52      	subs	r2, r2, r1
 801ef12:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801ef16:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ef18:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801ef1a:	3201      	adds	r2, #1
 801ef1c:	428a      	cmp	r2, r1
 801ef1e:	9209      	str	r2, [sp, #36]	@ 0x24
 801ef20:	d111      	bne.n	801ef46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801ef22:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801ef26:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801ef2a:	9b06      	ldr	r3, [sp, #24]
 801ef2c:	eba5 0509 	sub.w	r5, r5, r9
 801ef30:	b2ad      	uxth	r5, r5
 801ef32:	2d00      	cmp	r5, #0
 801ef34:	bf08      	it	eq
 801ef36:	4619      	moveq	r1, r3
 801ef38:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ef3a:	bf18      	it	ne
 801ef3c:	2100      	movne	r1, #0
 801ef3e:	3301      	adds	r3, #1
 801ef40:	930d      	str	r3, [sp, #52]	@ 0x34
 801ef42:	b289      	uxth	r1, r1
 801ef44:	e695      	b.n	801ec72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801ef46:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801ef4a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801ef4e:	1b2d      	subs	r5, r5, r4
 801ef50:	b2ad      	uxth	r5, r5
 801ef52:	2d00      	cmp	r5, #0
 801ef54:	bf18      	it	ne
 801ef56:	2400      	movne	r4, #0
 801ef58:	e740      	b.n	801eddc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801ef5a:	4b04      	ldr	r3, [pc, #16]	@ (801ef6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801ef5c:	6818      	ldr	r0, [r3, #0]
 801ef5e:	6803      	ldr	r3, [r0, #0]
 801ef60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801ef62:	4798      	blx	r3
 801ef64:	b01d      	add	sp, #116	@ 0x74
 801ef66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ef6a:	bf00      	nop
 801ef6c:	20013f4c 	.word	0x20013f4c

0801ef70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ef70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef74:	b09f      	sub	sp, #124	@ 0x7c
 801ef76:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801ef7a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801ef7e:	920a      	str	r2, [sp, #40]	@ 0x28
 801ef80:	461d      	mov	r5, r3
 801ef82:	4604      	mov	r4, r0
 801ef84:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ef86:	2a00      	cmp	r2, #0
 801ef88:	f000 81fa 	beq.w	801f380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801ef8c:	6828      	ldr	r0, [r5, #0]
 801ef8e:	6869      	ldr	r1, [r5, #4]
 801ef90:	aa1a      	add	r2, sp, #104	@ 0x68
 801ef92:	c203      	stmia	r2!, {r0, r1}
 801ef94:	6818      	ldr	r0, [r3, #0]
 801ef96:	6859      	ldr	r1, [r3, #4]
 801ef98:	aa1c      	add	r2, sp, #112	@ 0x70
 801ef9a:	c203      	stmia	r2!, {r0, r1}
 801ef9c:	a81a      	add	r0, sp, #104	@ 0x68
 801ef9e:	f7f7 fb65 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801efa2:	4629      	mov	r1, r5
 801efa4:	a81c      	add	r0, sp, #112	@ 0x70
 801efa6:	f7f7 fb89 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801efaa:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801efae:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801efb2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801efb6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801efba:	bfd7      	itett	le
 801efbc:	b29a      	uxthle	r2, r3
 801efbe:	2201      	movgt	r2, #1
 801efc0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801efc4:	fb91 f2f2 	sdivle	r2, r1, r2
 801efc8:	9201      	str	r2, [sp, #4]
 801efca:	9801      	ldr	r0, [sp, #4]
 801efcc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801efd0:	fb92 f0f0 	sdiv	r0, r2, r0
 801efd4:	b280      	uxth	r0, r0
 801efd6:	9010      	str	r0, [sp, #64]	@ 0x40
 801efd8:	9901      	ldr	r1, [sp, #4]
 801efda:	9801      	ldr	r0, [sp, #4]
 801efdc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801efde:	440e      	add	r6, r1
 801efe0:	fb05 2510 	mls	r5, r5, r0, r2
 801efe4:	fb15 f503 	smulbb	r5, r5, r3
 801efe8:	3e01      	subs	r6, #1
 801efea:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801efee:	fb96 f6f1 	sdiv	r6, r6, r1
 801eff2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801eff6:	440d      	add	r5, r1
 801eff8:	4419      	add	r1, r3
 801effa:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801effe:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801f002:	441a      	add	r2, r3
 801f004:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801f008:	9304      	str	r3, [sp, #16]
 801f00a:	4b96      	ldr	r3, [pc, #600]	@ (801f264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f00c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801f010:	6818      	ldr	r0, [r3, #0]
 801f012:	6803      	ldr	r3, [r0, #0]
 801f014:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f016:	4798      	blx	r3
 801f018:	4b93      	ldr	r3, [pc, #588]	@ (801f268 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801f01a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801f01e:	881a      	ldrh	r2, [r3, #0]
 801f020:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801f024:	9318      	str	r3, [sp, #96]	@ 0x60
 801f026:	fb02 c101 	mla	r1, r2, r1, ip
 801f02a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801f02e:	4357      	muls	r7, r2
 801f030:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801f034:	3601      	adds	r6, #1
 801f036:	920b      	str	r2, [sp, #44]	@ 0x2c
 801f038:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f03a:	4b8c      	ldr	r3, [pc, #560]	@ (801f26c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801f03c:	b2b6      	uxth	r6, r6
 801f03e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801f042:	1d32      	adds	r2, r6, #4
 801f044:	9206      	str	r2, [sp, #24]
 801f046:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801f048:	43d2      	mvns	r2, r2
 801f04a:	b2d2      	uxtb	r2, r2
 801f04c:	b2ad      	uxth	r5, r5
 801f04e:	9215      	str	r2, [sp, #84]	@ 0x54
 801f050:	9a04      	ldr	r2, [sp, #16]
 801f052:	2d00      	cmp	r5, #0
 801f054:	bf0c      	ite	eq
 801f056:	4611      	moveq	r1, r2
 801f058:	2100      	movne	r1, #0
 801f05a:	2200      	movs	r2, #0
 801f05c:	1b1b      	subs	r3, r3, r4
 801f05e:	b289      	uxth	r1, r1
 801f060:	920d      	str	r2, [sp, #52]	@ 0x34
 801f062:	9319      	str	r3, [sp, #100]	@ 0x64
 801f064:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f066:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f068:	fa12 f383 	uxtah	r3, r2, r3
 801f06c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f06e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801f072:	3304      	adds	r3, #4
 801f074:	9307      	str	r3, [sp, #28]
 801f076:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f078:	455b      	cmp	r3, fp
 801f07a:	f240 817c 	bls.w	801f376 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801f07e:	9a01      	ldr	r2, [sp, #4]
 801f080:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801f084:	fbb5 f3f3 	udiv	r3, r5, r3
 801f088:	1ad3      	subs	r3, r2, r3
 801f08a:	b29b      	uxth	r3, r3
 801f08c:	9316      	str	r3, [sp, #88]	@ 0x58
 801f08e:	9b07      	ldr	r3, [sp, #28]
 801f090:	9807      	ldr	r0, [sp, #28]
 801f092:	785a      	ldrb	r2, [r3, #1]
 801f094:	789b      	ldrb	r3, [r3, #2]
 801f096:	7800      	ldrb	r0, [r0, #0]
 801f098:	9011      	str	r0, [sp, #68]	@ 0x44
 801f09a:	021b      	lsls	r3, r3, #8
 801f09c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801f0a0:	9a07      	ldr	r2, [sp, #28]
 801f0a2:	78d2      	ldrb	r2, [r2, #3]
 801f0a4:	4313      	orrs	r3, r2
 801f0a6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801f0a8:	3001      	adds	r0, #1
 801f0aa:	441a      	add	r2, r3
 801f0ac:	9005      	str	r0, [sp, #20]
 801f0ae:	1c50      	adds	r0, r2, #1
 801f0b0:	9003      	str	r0, [sp, #12]
 801f0b2:	7852      	ldrb	r2, [r2, #1]
 801f0b4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f0b6:	0212      	lsls	r2, r2, #8
 801f0b8:	5cc3      	ldrb	r3, [r0, r3]
 801f0ba:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801f0be:	431a      	orrs	r2, r3
 801f0c0:	b293      	uxth	r3, r2
 801f0c2:	930c      	str	r3, [sp, #48]	@ 0x30
 801f0c4:	2300      	movs	r3, #0
 801f0c6:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801f0ca:	9308      	str	r3, [sp, #32]
 801f0cc:	461a      	mov	r2, r3
 801f0ce:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801f0d2:	930e      	str	r3, [sp, #56]	@ 0x38
 801f0d4:	f04f 0801 	mov.w	r8, #1
 801f0d8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801f0dc:	f8cd 8008 	str.w	r8, [sp, #8]
 801f0e0:	46c4      	mov	ip, r8
 801f0e2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f0e4:	2d00      	cmp	r5, #0
 801f0e6:	d07c      	beq.n	801f1e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801f0e8:	45ac      	cmp	ip, r5
 801f0ea:	d26c      	bcs.n	801f1c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801f0ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f0ee:	eba5 050c 	sub.w	r5, r5, ip
 801f0f2:	455b      	cmp	r3, fp
 801f0f4:	b2ad      	uxth	r5, r5
 801f0f6:	4608      	mov	r0, r1
 801f0f8:	d802      	bhi.n	801f100 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801f0fa:	e070      	b.n	801f1de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801f0fc:	2b00      	cmp	r3, #0
 801f0fe:	d15c      	bne.n	801f1ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801f100:	9b03      	ldr	r3, [sp, #12]
 801f102:	9a02      	ldr	r2, [sp, #8]
 801f104:	785b      	ldrb	r3, [r3, #1]
 801f106:	9902      	ldr	r1, [sp, #8]
 801f108:	f1c2 0207 	rsb	r2, r2, #7
 801f10c:	4093      	lsls	r3, r2
 801f10e:	005b      	lsls	r3, r3, #1
 801f110:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801f114:	9b03      	ldr	r3, [sp, #12]
 801f116:	781b      	ldrb	r3, [r3, #0]
 801f118:	410b      	asrs	r3, r1
 801f11a:	3101      	adds	r1, #1
 801f11c:	b2c9      	uxtb	r1, r1
 801f11e:	2908      	cmp	r1, #8
 801f120:	9102      	str	r1, [sp, #8]
 801f122:	9903      	ldr	r1, [sp, #12]
 801f124:	bf0a      	itet	eq
 801f126:	3102      	addeq	r1, #2
 801f128:	3101      	addne	r1, #1
 801f12a:	9103      	streq	r1, [sp, #12]
 801f12c:	b2db      	uxtb	r3, r3
 801f12e:	bf0a      	itet	eq
 801f130:	2100      	moveq	r1, #0
 801f132:	9103      	strne	r1, [sp, #12]
 801f134:	9102      	streq	r1, [sp, #8]
 801f136:	4313      	orrs	r3, r2
 801f138:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801f13a:	b29a      	uxth	r2, r3
 801f13c:	4291      	cmp	r1, r2
 801f13e:	d30a      	bcc.n	801f156 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801f140:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801f144:	2301      	movs	r3, #1
 801f146:	9905      	ldr	r1, [sp, #20]
 801f148:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801f14c:	d30f      	bcc.n	801f16e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801f14e:	2100      	movs	r1, #0
 801f150:	4698      	mov	r8, r3
 801f152:	9100      	str	r1, [sp, #0]
 801f154:	e032      	b.n	801f1bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801f156:	9b05      	ldr	r3, [sp, #20]
 801f158:	429a      	cmp	r2, r3
 801f15a:	d318      	bcc.n	801f18e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801f15c:	eb04 0308 	add.w	r3, r4, r8
 801f160:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801f164:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801f168:	f108 0301 	add.w	r3, r8, #1
 801f16c:	b29b      	uxth	r3, r3
 801f16e:	9905      	ldr	r1, [sp, #20]
 801f170:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801f174:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801f178:	710e      	strb	r6, [r1, #4]
 801f17a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801f17c:	80ce      	strh	r6, [r1, #6]
 801f17e:	f108 0601 	add.w	r6, r8, #1
 801f182:	714e      	strb	r6, [r1, #5]
 801f184:	9905      	ldr	r1, [sp, #20]
 801f186:	3101      	adds	r1, #1
 801f188:	b289      	uxth	r1, r1
 801f18a:	9105      	str	r1, [sp, #20]
 801f18c:	e7df      	b.n	801f14e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801f18e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801f192:	4611      	mov	r1, r2
 801f194:	795b      	ldrb	r3, [r3, #5]
 801f196:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801f19a:	4426      	add	r6, r4
 801f19c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801f19e:	4437      	add	r7, r6
 801f1a0:	2f00      	cmp	r7, #0
 801f1a2:	dd06      	ble.n	801f1b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801f1a4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801f1a8:	790f      	ldrb	r7, [r1, #4]
 801f1aa:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801f1ae:	88c9      	ldrh	r1, [r1, #6]
 801f1b0:	e7f4      	b.n	801f19c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801f1b2:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801f1b6:	b29b      	uxth	r3, r3
 801f1b8:	e7c5      	b.n	801f146 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801f1ba:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801f1bc:	920c      	str	r2, [sp, #48]	@ 0x30
 801f1be:	4601      	mov	r1, r0
 801f1c0:	9a00      	ldr	r2, [sp, #0]
 801f1c2:	469c      	mov	ip, r3
 801f1c4:	e78e      	b.n	801f0e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801f1c6:	1957      	adds	r7, r2, r5
 801f1c8:	ebac 0305 	sub.w	r3, ip, r5
 801f1cc:	b2ba      	uxth	r2, r7
 801f1ce:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801f1d2:	9200      	str	r2, [sp, #0]
 801f1d4:	b29b      	uxth	r3, r3
 801f1d6:	2500      	movs	r5, #0
 801f1d8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f1da:	455a      	cmp	r2, fp
 801f1dc:	d88e      	bhi.n	801f0fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801f1de:	4601      	mov	r1, r0
 801f1e0:	e749      	b.n	801f076 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801f1e2:	458c      	cmp	ip, r1
 801f1e4:	bf2c      	ite	cs
 801f1e6:	4628      	movcs	r0, r5
 801f1e8:	462b      	movcc	r3, r5
 801f1ea:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801f1ec:	bf27      	ittee	cs
 801f1ee:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801f1f0:	ebac 0301 	subcs.w	r3, ip, r1
 801f1f4:	eba1 000c 	subcc.w	r0, r1, ip
 801f1f8:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801f1fc:	bf2c      	ite	cs
 801f1fe:	b29b      	uxthcs	r3, r3
 801f200:	b280      	uxthcc	r0, r0
 801f202:	2dff      	cmp	r5, #255	@ 0xff
 801f204:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f206:	eb02 0705 	add.w	r7, r2, r5
 801f20a:	b2bd      	uxth	r5, r7
 801f20c:	9500      	str	r5, [sp, #0]
 801f20e:	d12f      	bne.n	801f270 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801f210:	465e      	mov	r6, fp
 801f212:	9d00      	ldr	r5, [sp, #0]
 801f214:	42aa      	cmp	r2, r5
 801f216:	f040 8084 	bne.w	801f322 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801f21a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f21c:	458c      	cmp	ip, r1
 801f21e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801f222:	d3d8      	bcc.n	801f1d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801f224:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801f226:	9904      	ldr	r1, [sp, #16]
 801f228:	8812      	ldrh	r2, [r2, #0]
 801f22a:	1a52      	subs	r2, r2, r1
 801f22c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801f230:	9a08      	ldr	r2, [sp, #32]
 801f232:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801f234:	3201      	adds	r2, #1
 801f236:	428a      	cmp	r2, r1
 801f238:	9208      	str	r2, [sp, #32]
 801f23a:	f040 8092 	bne.w	801f362 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f23e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801f242:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801f246:	9b04      	ldr	r3, [sp, #16]
 801f248:	eba5 050c 	sub.w	r5, r5, ip
 801f24c:	b2ad      	uxth	r5, r5
 801f24e:	2d00      	cmp	r5, #0
 801f250:	bf08      	it	eq
 801f252:	4619      	moveq	r1, r3
 801f254:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f256:	bf18      	it	ne
 801f258:	2100      	movne	r1, #0
 801f25a:	3301      	adds	r3, #1
 801f25c:	930d      	str	r3, [sp, #52]	@ 0x34
 801f25e:	b289      	uxth	r1, r1
 801f260:	e700      	b.n	801f064 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801f262:	bf00      	nop
 801f264:	20013f4c 	.word	0x20013f4c
 801f268:	20013f46 	.word	0x20013f46
 801f26c:	fffff7fb 	.word	0xfffff7fb
 801f270:	46d9      	mov	r9, fp
 801f272:	9d00      	ldr	r5, [sp, #0]
 801f274:	42aa      	cmp	r2, r5
 801f276:	d0d0      	beq.n	801f21a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801f278:	1c55      	adds	r5, r2, #1
 801f27a:	4422      	add	r2, r4
 801f27c:	9517      	str	r5, [sp, #92]	@ 0x5c
 801f27e:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801f282:	9a06      	ldr	r2, [sp, #24]
 801f284:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801f288:	4472      	add	r2, lr
 801f28a:	9212      	str	r2, [sp, #72]	@ 0x48
 801f28c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801f28e:	f8b9 2000 	ldrh.w	r2, [r9]
 801f292:	f897 a002 	ldrb.w	sl, [r7, #2]
 801f296:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801f298:	1216      	asrs	r6, r2, #8
 801f29a:	fb1a fa07 	smulbb	sl, sl, r7
 801f29e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801f2a2:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801f2a4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f2a8:	fb06 a607 	mla	r6, r6, r7, sl
 801f2ac:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801f2ae:	f897 a001 	ldrb.w	sl, [r7, #1]
 801f2b2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801f2b4:	10d5      	asrs	r5, r2, #3
 801f2b6:	fb1a fa07 	smulbb	sl, sl, r7
 801f2ba:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801f2be:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801f2c0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f2c4:	fb05 a507 	mla	r5, r5, r7, sl
 801f2c8:	9f06      	ldr	r7, [sp, #24]
 801f2ca:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f2ce:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801f2d0:	00d2      	lsls	r2, r2, #3
 801f2d2:	fb1e fe07 	smulbb	lr, lr, r7
 801f2d6:	b2d2      	uxtb	r2, r2
 801f2d8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801f2da:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f2de:	b2b6      	uxth	r6, r6
 801f2e0:	fb02 e207 	mla	r2, r2, r7, lr
 801f2e4:	b292      	uxth	r2, r2
 801f2e6:	b2ad      	uxth	r5, r5
 801f2e8:	f106 0a01 	add.w	sl, r6, #1
 801f2ec:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801f2f0:	f102 0e01 	add.w	lr, r2, #1
 801f2f4:	f105 0a01 	add.w	sl, r5, #1
 801f2f8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801f2fc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f300:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801f304:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f308:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f30c:	ea4e 0606 	orr.w	r6, lr, r6
 801f310:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f314:	ea46 060a 	orr.w	r6, r6, sl
 801f318:	f829 6b02 	strh.w	r6, [r9], #2
 801f31c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801f320:	e7a7      	b.n	801f272 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801f322:	f102 0e01 	add.w	lr, r2, #1
 801f326:	4422      	add	r2, r4
 801f328:	9f06      	ldr	r7, [sp, #24]
 801f32a:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801f32e:	9a06      	ldr	r2, [sp, #24]
 801f330:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f334:	eb02 0a05 	add.w	sl, r2, r5
 801f338:	4a13      	ldr	r2, [pc, #76]	@ (801f388 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801f33a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801f33e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801f342:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f346:	00d2      	lsls	r2, r2, #3
 801f348:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f34c:	ea49 0202 	orr.w	r2, r9, r2
 801f350:	f817 9005 	ldrb.w	r9, [r7, r5]
 801f354:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801f358:	f826 2b02 	strh.w	r2, [r6], #2
 801f35c:	fa1f f28e 	uxth.w	r2, lr
 801f360:	e757      	b.n	801f212 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801f362:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801f366:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801f36a:	1a2d      	subs	r5, r5, r0
 801f36c:	b2ad      	uxth	r5, r5
 801f36e:	2d00      	cmp	r5, #0
 801f370:	bf18      	it	ne
 801f372:	2000      	movne	r0, #0
 801f374:	e730      	b.n	801f1d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801f376:	4b05      	ldr	r3, [pc, #20]	@ (801f38c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801f378:	6818      	ldr	r0, [r3, #0]
 801f37a:	6803      	ldr	r3, [r0, #0]
 801f37c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801f37e:	4798      	blx	r3
 801f380:	b01f      	add	sp, #124	@ 0x7c
 801f382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f386:	bf00      	nop
 801f388:	fffff800 	.word	0xfffff800
 801f38c:	20013f4c 	.word	0x20013f4c

0801f390 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801f390:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f394:	b091      	sub	sp, #68	@ 0x44
 801f396:	469b      	mov	fp, r3
 801f398:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801f39c:	4616      	mov	r6, r2
 801f39e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801f3a2:	f9b3 2000 	ldrsh.w	r2, [r3]
 801f3a6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801f3aa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801f3ae:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801f3b2:	4604      	mov	r4, r0
 801f3b4:	460d      	mov	r5, r1
 801f3b6:	4640      	mov	r0, r8
 801f3b8:	4659      	mov	r1, fp
 801f3ba:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801f3be:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801f3c2:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801f3c6:	f7f1 fb27 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 801f3ca:	4631      	mov	r1, r6
 801f3cc:	4640      	mov	r0, r8
 801f3ce:	f7f1 fb23 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 801f3d2:	4b74      	ldr	r3, [pc, #464]	@ (801f5a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801f3d4:	8818      	ldrh	r0, [r3, #0]
 801f3d6:	4b74      	ldr	r3, [pc, #464]	@ (801f5a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801f3d8:	8819      	ldrh	r1, [r3, #0]
 801f3da:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801f3de:	2b00      	cmp	r3, #0
 801f3e0:	b202      	sxth	r2, r0
 801f3e2:	b20e      	sxth	r6, r1
 801f3e4:	da07      	bge.n	801f3f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801f3e6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801f3ea:	4463      	add	r3, ip
 801f3ec:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801f3f0:	2300      	movs	r3, #0
 801f3f2:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801f3f6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801f3fa:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801f3fe:	1ad2      	subs	r2, r2, r3
 801f400:	4594      	cmp	ip, r2
 801f402:	bfc4      	itt	gt
 801f404:	1ac2      	subgt	r2, r0, r3
 801f406:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801f40a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801f40e:	2a00      	cmp	r2, #0
 801f410:	da07      	bge.n	801f422 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801f412:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801f416:	4462      	add	r2, ip
 801f418:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801f41c:	2200      	movs	r2, #0
 801f41e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801f422:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801f426:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801f42a:	eba6 060a 	sub.w	r6, r6, sl
 801f42e:	42b2      	cmp	r2, r6
 801f430:	bfc4      	itt	gt
 801f432:	eba1 020a 	subgt.w	r2, r1, sl
 801f436:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801f43a:	4a5c      	ldr	r2, [pc, #368]	@ (801f5ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801f43c:	7812      	ldrb	r2, [r2, #0]
 801f43e:	b9a2      	cbnz	r2, 801f46a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801f440:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801f444:	4286      	cmp	r6, r0
 801f446:	4640      	mov	r0, r8
 801f448:	9303      	str	r3, [sp, #12]
 801f44a:	bf14      	ite	ne
 801f44c:	2600      	movne	r6, #0
 801f44e:	2601      	moveq	r6, #1
 801f450:	f7f1 fb25 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 801f454:	9b03      	ldr	r3, [sp, #12]
 801f456:	b160      	cbz	r0, 801f472 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801f458:	2300      	movs	r3, #0
 801f45a:	8023      	strh	r3, [r4, #0]
 801f45c:	8063      	strh	r3, [r4, #2]
 801f45e:	80a3      	strh	r3, [r4, #4]
 801f460:	4620      	mov	r0, r4
 801f462:	80e3      	strh	r3, [r4, #6]
 801f464:	b011      	add	sp, #68	@ 0x44
 801f466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f46a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801f46e:	428e      	cmp	r6, r1
 801f470:	e7e9      	b.n	801f446 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801f472:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801f476:	9205      	str	r2, [sp, #20]
 801f478:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801f47c:	9206      	str	r2, [sp, #24]
 801f47e:	f8bb 2000 	ldrh.w	r2, [fp]
 801f482:	900e      	str	r0, [sp, #56]	@ 0x38
 801f484:	1a9b      	subs	r3, r3, r2
 801f486:	b21b      	sxth	r3, r3
 801f488:	9303      	str	r3, [sp, #12]
 801f48a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801f48e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801f492:	ebaa 0a03 	sub.w	sl, sl, r3
 801f496:	fa0f f38a 	sxth.w	r3, sl
 801f49a:	9304      	str	r3, [sp, #16]
 801f49c:	9b03      	ldr	r3, [sp, #12]
 801f49e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801f4a2:	9b04      	ldr	r3, [sp, #16]
 801f4a4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801f4a8:	9b05      	ldr	r3, [sp, #20]
 801f4aa:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801f4ae:	a90e      	add	r1, sp, #56	@ 0x38
 801f4b0:	9b06      	ldr	r3, [sp, #24]
 801f4b2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801f4b6:	a80c      	add	r0, sp, #48	@ 0x30
 801f4b8:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801f4bc:	f7f7 f8fe 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f4c0:	4640      	mov	r0, r8
 801f4c2:	f7f7 f8d3 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f4c6:	a80e      	add	r0, sp, #56	@ 0x38
 801f4c8:	f7f7 f8d0 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f4cc:	4b38      	ldr	r3, [pc, #224]	@ (801f5b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801f4ce:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801f4d2:	881b      	ldrh	r3, [r3, #0]
 801f4d4:	9307      	str	r3, [sp, #28]
 801f4d6:	682b      	ldr	r3, [r5, #0]
 801f4d8:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 801f5b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801f4dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801f4de:	4628      	mov	r0, r5
 801f4e0:	4798      	blx	r3
 801f4e2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801f4e6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801f4ea:	4681      	mov	r9, r0
 801f4ec:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801f4f0:	f8db 0000 	ldr.w	r0, [fp]
 801f4f4:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801f4f6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801f4fa:	6803      	ldr	r3, [r0, #0]
 801f4fc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801f4fe:	4798      	blx	r3
 801f500:	4607      	mov	r7, r0
 801f502:	f8db 0000 	ldr.w	r0, [fp]
 801f506:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801f50a:	6803      	ldr	r3, [r0, #0]
 801f50c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801f510:	9109      	str	r1, [sp, #36]	@ 0x24
 801f512:	9208      	str	r2, [sp, #32]
 801f514:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801f516:	4798      	blx	r3
 801f518:	f010 0f01 	tst.w	r0, #1
 801f51c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801f520:	d012      	beq.n	801f548 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801f522:	f8db 0000 	ldr.w	r0, [fp]
 801f526:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801f52a:	6803      	ldr	r3, [r0, #0]
 801f52c:	9200      	str	r2, [sp, #0]
 801f52e:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 801f530:	e898 0006 	ldmia.w	r8, {r1, r2}
 801f534:	462b      	mov	r3, r5
 801f536:	47b0      	blx	r6
 801f538:	9b03      	ldr	r3, [sp, #12]
 801f53a:	8023      	strh	r3, [r4, #0]
 801f53c:	9b04      	ldr	r3, [sp, #16]
 801f53e:	8063      	strh	r3, [r4, #2]
 801f540:	9b05      	ldr	r3, [sp, #20]
 801f542:	80a3      	strh	r3, [r4, #4]
 801f544:	9b06      	ldr	r3, [sp, #24]
 801f546:	e78b      	b.n	801f460 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801f548:	fb09 f202 	mul.w	r2, r9, r2
 801f54c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801f550:	440f      	add	r7, r1
 801f552:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801f556:	b166      	cbz	r6, 801f572 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801f558:	9a07      	ldr	r2, [sp, #28]
 801f55a:	4592      	cmp	sl, r2
 801f55c:	d109      	bne.n	801f572 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801f55e:	f8db 0000 	ldr.w	r0, [fp]
 801f562:	6802      	ldr	r2, [r0, #0]
 801f564:	fb09 f303 	mul.w	r3, r9, r3
 801f568:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 801f56a:	4629      	mov	r1, r5
 801f56c:	463a      	mov	r2, r7
 801f56e:	47b0      	blx	r6
 801f570:	e7e2      	b.n	801f538 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801f572:	fb0a f303 	mul.w	r3, sl, r3
 801f576:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 801f5b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801f57a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801f57e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801f582:	4545      	cmp	r5, r8
 801f584:	d2d8      	bcs.n	801f538 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801f586:	f8db 0000 	ldr.w	r0, [fp]
 801f58a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801f58e:	6802      	ldr	r2, [r0, #0]
 801f590:	4629      	mov	r1, r5
 801f592:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 801f596:	005b      	lsls	r3, r3, #1
 801f598:	463a      	mov	r2, r7
 801f59a:	47d0      	blx	sl
 801f59c:	444f      	add	r7, r9
 801f59e:	4435      	add	r5, r6
 801f5a0:	e7ef      	b.n	801f582 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801f5a2:	bf00      	nop
 801f5a4:	20013f40 	.word	0x20013f40
 801f5a8:	20013f42 	.word	0x20013f42
 801f5ac:	20013f44 	.word	0x20013f44
 801f5b0:	20013f46 	.word	0x20013f46
 801f5b4:	20013f4c 	.word	0x20013f4c

0801f5b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801f5b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f5ba:	4606      	mov	r6, r0
 801f5bc:	b087      	sub	sp, #28
 801f5be:	460c      	mov	r4, r1
 801f5c0:	4617      	mov	r7, r2
 801f5c2:	461d      	mov	r5, r3
 801f5c4:	b333      	cbz	r3, 801f614 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801f5c6:	4608      	mov	r0, r1
 801f5c8:	f7f1 fa69 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 801f5cc:	bb10      	cbnz	r0, 801f614 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801f5ce:	6820      	ldr	r0, [r4, #0]
 801f5d0:	6861      	ldr	r1, [r4, #4]
 801f5d2:	4c1c      	ldr	r4, [pc, #112]	@ (801f644 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801f5d4:	ab04      	add	r3, sp, #16
 801f5d6:	c303      	stmia	r3!, {r0, r1}
 801f5d8:	a804      	add	r0, sp, #16
 801f5da:	f7f7 f847 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f5de:	6820      	ldr	r0, [r4, #0]
 801f5e0:	6803      	ldr	r3, [r0, #0]
 801f5e2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801f5e4:	4798      	blx	r3
 801f5e6:	2dff      	cmp	r5, #255	@ 0xff
 801f5e8:	d016      	beq.n	801f618 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801f5ea:	f010 0f08 	tst.w	r0, #8
 801f5ee:	6820      	ldr	r0, [r4, #0]
 801f5f0:	d015      	beq.n	801f61e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801f5f2:	2400      	movs	r4, #0
 801f5f4:	6801      	ldr	r1, [r0, #0]
 801f5f6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801f5fa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f5fe:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801f602:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801f606:	9401      	str	r4, [sp, #4]
 801f608:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801f60c:	9400      	str	r4, [sp, #0]
 801f60e:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 801f610:	4639      	mov	r1, r7
 801f612:	47a0      	blx	r4
 801f614:	b007      	add	sp, #28
 801f616:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f618:	f010 0f02 	tst.w	r0, #2
 801f61c:	e7e7      	b.n	801f5ee <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801f61e:	6803      	ldr	r3, [r0, #0]
 801f620:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f622:	4798      	blx	r3
 801f624:	4b08      	ldr	r3, [pc, #32]	@ (801f648 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801f626:	881a      	ldrh	r2, [r3, #0]
 801f628:	6833      	ldr	r3, [r6, #0]
 801f62a:	e9cd 7500 	strd	r7, r5, [sp]
 801f62e:	4601      	mov	r1, r0
 801f630:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801f632:	4630      	mov	r0, r6
 801f634:	ab04      	add	r3, sp, #16
 801f636:	47a8      	blx	r5
 801f638:	6820      	ldr	r0, [r4, #0]
 801f63a:	6803      	ldr	r3, [r0, #0]
 801f63c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801f63e:	4798      	blx	r3
 801f640:	e7e8      	b.n	801f614 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801f642:	bf00      	nop
 801f644:	20013f4c 	.word	0x20013f4c
 801f648:	20013f46 	.word	0x20013f46

0801f64c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801f64c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f650:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801f654:	9e08      	ldr	r6, [sp, #32]
 801f656:	4688      	mov	r8, r1
 801f658:	4614      	mov	r4, r2
 801f65a:	461d      	mov	r5, r3
 801f65c:	2f00      	cmp	r7, #0
 801f65e:	f000 80a9 	beq.w	801f7b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801f662:	4618      	mov	r0, r3
 801f664:	f7f1 fa1b 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 801f668:	2800      	cmp	r0, #0
 801f66a:	f040 80a3 	bne.w	801f7b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801f66e:	f9b5 1000 	ldrsh.w	r1, [r5]
 801f672:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801f676:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801f67a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801f67e:	fb04 1303 	mla	r3, r4, r3, r1
 801f682:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801f686:	4365      	muls	r5, r4
 801f688:	2fff      	cmp	r7, #255	@ 0xff
 801f68a:	eba4 0200 	sub.w	r2, r4, r0
 801f68e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801f692:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801f696:	d04a      	beq.n	801f72e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801f698:	b2bc      	uxth	r4, r7
 801f69a:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801f69e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801f6a2:	fa5f f788 	uxtb.w	r7, r8
 801f6a6:	b2f3      	uxtb	r3, r6
 801f6a8:	0040      	lsls	r0, r0, #1
 801f6aa:	fb0e fe04 	mul.w	lr, lr, r4
 801f6ae:	4367      	muls	r7, r4
 801f6b0:	4363      	muls	r3, r4
 801f6b2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801f6b6:	fa1f fc8c 	uxth.w	ip, ip
 801f6ba:	42a9      	cmp	r1, r5
 801f6bc:	d27a      	bcs.n	801f7b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801f6be:	eb01 0900 	add.w	r9, r1, r0
 801f6c2:	4549      	cmp	r1, r9
 801f6c4:	d231      	bcs.n	801f72a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801f6c6:	880a      	ldrh	r2, [r1, #0]
 801f6c8:	1214      	asrs	r4, r2, #8
 801f6ca:	10d6      	asrs	r6, r2, #3
 801f6cc:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f6d0:	00d2      	lsls	r2, r2, #3
 801f6d2:	b2d2      	uxtb	r2, r2
 801f6d4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f6d8:	fb14 f40c 	smulbb	r4, r4, ip
 801f6dc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f6e0:	4474      	add	r4, lr
 801f6e2:	fb12 f20c 	smulbb	r2, r2, ip
 801f6e6:	b2a4      	uxth	r4, r4
 801f6e8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f6ec:	441a      	add	r2, r3
 801f6ee:	b292      	uxth	r2, r2
 801f6f0:	f104 0a01 	add.w	sl, r4, #1
 801f6f4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801f6f8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f6fc:	fb16 f60c 	smulbb	r6, r6, ip
 801f700:	f102 0a01 	add.w	sl, r2, #1
 801f704:	443e      	add	r6, r7
 801f706:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801f70a:	b2b6      	uxth	r6, r6
 801f70c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801f710:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f714:	4322      	orrs	r2, r4
 801f716:	1c74      	adds	r4, r6, #1
 801f718:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801f71c:	0976      	lsrs	r6, r6, #5
 801f71e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801f722:	4332      	orrs	r2, r6
 801f724:	f821 2b02 	strh.w	r2, [r1], #2
 801f728:	e7cb      	b.n	801f6c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801f72a:	4441      	add	r1, r8
 801f72c:	e7c5      	b.n	801f6ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801f72e:	4f22      	ldr	r7, [pc, #136]	@ (801f7b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801f730:	0973      	lsrs	r3, r6, #5
 801f732:	ea08 0707 	and.w	r7, r8, r7
 801f736:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f73a:	433b      	orrs	r3, r7
 801f73c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801f740:	4333      	orrs	r3, r6
 801f742:	07e7      	lsls	r7, r4, #31
 801f744:	b29b      	uxth	r3, r3
 801f746:	d50b      	bpl.n	801f760 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801f748:	0040      	lsls	r0, r0, #1
 801f74a:	0052      	lsls	r2, r2, #1
 801f74c:	42a9      	cmp	r1, r5
 801f74e:	d231      	bcs.n	801f7b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801f750:	180c      	adds	r4, r1, r0
 801f752:	42a1      	cmp	r1, r4
 801f754:	d202      	bcs.n	801f75c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801f756:	f821 3b02 	strh.w	r3, [r1], #2
 801f75a:	e7fa      	b.n	801f752 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801f75c:	4411      	add	r1, r2
 801f75e:	e7f5      	b.n	801f74c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801f760:	078e      	lsls	r6, r1, #30
 801f762:	d008      	beq.n	801f776 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801f764:	0066      	lsls	r6, r4, #1
 801f766:	460a      	mov	r2, r1
 801f768:	42aa      	cmp	r2, r5
 801f76a:	d202      	bcs.n	801f772 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801f76c:	8013      	strh	r3, [r2, #0]
 801f76e:	4432      	add	r2, r6
 801f770:	e7fa      	b.n	801f768 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801f772:	3102      	adds	r1, #2
 801f774:	3801      	subs	r0, #1
 801f776:	07c2      	lsls	r2, r0, #31
 801f778:	d50b      	bpl.n	801f792 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801f77a:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801f77e:	3a01      	subs	r2, #1
 801f780:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801f784:	0066      	lsls	r6, r4, #1
 801f786:	42aa      	cmp	r2, r5
 801f788:	d202      	bcs.n	801f790 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801f78a:	8013      	strh	r3, [r2, #0]
 801f78c:	4432      	add	r2, r6
 801f78e:	e7fa      	b.n	801f786 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801f790:	3801      	subs	r0, #1
 801f792:	b178      	cbz	r0, 801f7b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801f794:	1040      	asrs	r0, r0, #1
 801f796:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801f79a:	0080      	lsls	r0, r0, #2
 801f79c:	0064      	lsls	r4, r4, #1
 801f79e:	42a9      	cmp	r1, r5
 801f7a0:	d208      	bcs.n	801f7b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801f7a2:	180e      	adds	r6, r1, r0
 801f7a4:	460a      	mov	r2, r1
 801f7a6:	42b2      	cmp	r2, r6
 801f7a8:	d202      	bcs.n	801f7b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801f7aa:	f842 3b04 	str.w	r3, [r2], #4
 801f7ae:	e7fa      	b.n	801f7a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801f7b0:	4421      	add	r1, r4
 801f7b2:	e7f4      	b.n	801f79e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801f7b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f7b8:	00fff800 	.word	0x00fff800

0801f7bc <_ZN8touchgfx8LCD16bppC1Ev>:
 801f7bc:	2200      	movs	r2, #0
 801f7be:	4912      	ldr	r1, [pc, #72]	@ (801f808 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801f7c0:	6001      	str	r1, [r0, #0]
 801f7c2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801f7c6:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801f7ca:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801f7ce:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801f7d2:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801f7d6:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801f7da:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801f7de:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801f7e2:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801f7e6:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801f7ea:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801f7ee:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801f7f2:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801f7f6:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801f7fa:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801f7fe:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801f802:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801f806:	4770      	bx	lr
 801f808:	0802e9ec 	.word	0x0802e9ec

0801f80c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801f80c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f810:	460d      	mov	r5, r1
 801f812:	b08d      	sub	sp, #52	@ 0x34
 801f814:	4604      	mov	r4, r0
 801f816:	6808      	ldr	r0, [r1, #0]
 801f818:	6849      	ldr	r1, [r1, #4]
 801f81a:	4699      	mov	r9, r3
 801f81c:	ab08      	add	r3, sp, #32
 801f81e:	c303      	stmia	r3!, {r0, r1}
 801f820:	6810      	ldr	r0, [r2, #0]
 801f822:	6851      	ldr	r1, [r2, #4]
 801f824:	ab0a      	add	r3, sp, #40	@ 0x28
 801f826:	c303      	stmia	r3!, {r0, r1}
 801f828:	a808      	add	r0, sp, #32
 801f82a:	f7f6 ff1f 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f82e:	4629      	mov	r1, r5
 801f830:	a80a      	add	r0, sp, #40	@ 0x28
 801f832:	f7f6 ff43 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f836:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801f83a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801f83e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801f842:	4d63      	ldr	r5, [pc, #396]	@ (801f9d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801f844:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801f848:	6828      	ldr	r0, [r5, #0]
 801f84a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801f84e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f852:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801f856:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801f85a:	440a      	add	r2, r1
 801f85c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801f860:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801f864:	4413      	add	r3, r2
 801f866:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801f86a:	6803      	ldr	r3, [r0, #0]
 801f86c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801f86e:	4798      	blx	r3
 801f870:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801f874:	d119      	bne.n	801f8aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801f876:	f010 0f20 	tst.w	r0, #32
 801f87a:	6828      	ldr	r0, [r5, #0]
 801f87c:	d018      	beq.n	801f8b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801f87e:	2500      	movs	r5, #0
 801f880:	6801      	ldr	r1, [r0, #0]
 801f882:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801f886:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801f88a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801f88e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801f892:	9502      	str	r5, [sp, #8]
 801f894:	b2b6      	uxth	r6, r6
 801f896:	fa1f f588 	uxth.w	r5, r8
 801f89a:	9601      	str	r6, [sp, #4]
 801f89c:	9500      	str	r5, [sp, #0]
 801f89e:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 801f8a0:	4621      	mov	r1, r4
 801f8a2:	47a8      	blx	r5
 801f8a4:	b00d      	add	sp, #52	@ 0x34
 801f8a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f8aa:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801f8ae:	e7e4      	b.n	801f87a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801f8b0:	6803      	ldr	r3, [r0, #0]
 801f8b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f8b4:	4798      	blx	r3
 801f8b6:	4947      	ldr	r1, [pc, #284]	@ (801f9d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801f8b8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801f8bc:	880b      	ldrh	r3, [r1, #0]
 801f8be:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801f8c2:	fb03 5202 	mla	r2, r3, r2, r5
 801f8c6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f8ca:	4373      	muls	r3, r6
 801f8cc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f8d0:	9307      	str	r3, [sp, #28]
 801f8d2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801f8d6:	9306      	str	r3, [sp, #24]
 801f8d8:	468a      	mov	sl, r1
 801f8da:	9b07      	ldr	r3, [sp, #28]
 801f8dc:	4298      	cmp	r0, r3
 801f8de:	d270      	bcs.n	801f9c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801f8e0:	9b06      	ldr	r3, [sp, #24]
 801f8e2:	4621      	mov	r1, r4
 801f8e4:	eb00 0b03 	add.w	fp, r0, r3
 801f8e8:	4558      	cmp	r0, fp
 801f8ea:	d25d      	bcs.n	801f9a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801f8ec:	f851 4b04 	ldr.w	r4, [r1], #4
 801f8f0:	0e23      	lsrs	r3, r4, #24
 801f8f2:	d014      	beq.n	801f91e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801f8f4:	2bff      	cmp	r3, #255	@ 0xff
 801f8f6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801f8fa:	d112      	bne.n	801f922 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801f8fc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801f900:	d10f      	bne.n	801f922 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801f902:	0963      	lsrs	r3, r4, #5
 801f904:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801f908:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f90c:	f02c 0c07 	bic.w	ip, ip, #7
 801f910:	ea43 0c0c 	orr.w	ip, r3, ip
 801f914:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801f918:	ea4c 0404 	orr.w	r4, ip, r4
 801f91c:	8004      	strh	r4, [r0, #0]
 801f91e:	3002      	adds	r0, #2
 801f920:	e7e2      	b.n	801f8e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801f922:	fb09 f303 	mul.w	r3, r9, r3
 801f926:	8807      	ldrh	r7, [r0, #0]
 801f928:	1c5a      	adds	r2, r3, #1
 801f92a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801f92e:	1212      	asrs	r2, r2, #8
 801f930:	123e      	asrs	r6, r7, #8
 801f932:	b293      	uxth	r3, r2
 801f934:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801f938:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801f93c:	43d2      	mvns	r2, r2
 801f93e:	b2d2      	uxtb	r2, r2
 801f940:	10fd      	asrs	r5, r7, #3
 801f942:	fb1e fe03 	smulbb	lr, lr, r3
 801f946:	00ff      	lsls	r7, r7, #3
 801f948:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f94c:	fb06 e602 	mla	r6, r6, r2, lr
 801f950:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801f954:	b2ff      	uxtb	r7, r7
 801f956:	fa5f fc8c 	uxtb.w	ip, ip
 801f95a:	b2e4      	uxtb	r4, r4
 801f95c:	b2b6      	uxth	r6, r6
 801f95e:	fb1c fc03 	smulbb	ip, ip, r3
 801f962:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f966:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801f96a:	fb14 f403 	smulbb	r4, r4, r3
 801f96e:	fb05 c502 	mla	r5, r5, r2, ip
 801f972:	f106 0e01 	add.w	lr, r6, #1
 801f976:	fb07 4702 	mla	r7, r7, r2, r4
 801f97a:	b2ad      	uxth	r5, r5
 801f97c:	b2bf      	uxth	r7, r7
 801f97e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801f982:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801f986:	f105 0c01 	add.w	ip, r5, #1
 801f98a:	1c7e      	adds	r6, r7, #1
 801f98c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801f990:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f994:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801f998:	096d      	lsrs	r5, r5, #5
 801f99a:	ea46 060e 	orr.w	r6, r6, lr
 801f99e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f9a2:	432e      	orrs	r6, r5
 801f9a4:	8006      	strh	r6, [r0, #0]
 801f9a6:	e7ba      	b.n	801f91e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801f9a8:	f8ba 3000 	ldrh.w	r3, [sl]
 801f9ac:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801f9b0:	eba3 0308 	sub.w	r3, r3, r8
 801f9b4:	eba4 0408 	sub.w	r4, r4, r8
 801f9b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f9bc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801f9c0:	e78b      	b.n	801f8da <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801f9c2:	4b03      	ldr	r3, [pc, #12]	@ (801f9d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801f9c4:	6818      	ldr	r0, [r3, #0]
 801f9c6:	6803      	ldr	r3, [r0, #0]
 801f9c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801f9ca:	4798      	blx	r3
 801f9cc:	e76a      	b.n	801f8a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801f9ce:	bf00      	nop
 801f9d0:	20013f4c 	.word	0x20013f4c
 801f9d4:	20013f46 	.word	0x20013f46

0801f9d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801f9d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801f9dc:	460c      	mov	r4, r1
 801f9de:	b085      	sub	sp, #20
 801f9e0:	6810      	ldr	r0, [r2, #0]
 801f9e2:	6851      	ldr	r1, [r2, #4]
 801f9e4:	466d      	mov	r5, sp
 801f9e6:	c503      	stmia	r5!, {r0, r1}
 801f9e8:	6818      	ldr	r0, [r3, #0]
 801f9ea:	6859      	ldr	r1, [r3, #4]
 801f9ec:	4616      	mov	r6, r2
 801f9ee:	c503      	stmia	r5!, {r0, r1}
 801f9f0:	4668      	mov	r0, sp
 801f9f2:	f7f6 fe3b 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f9f6:	4631      	mov	r1, r6
 801f9f8:	a802      	add	r0, sp, #8
 801f9fa:	f7f6 fe5f 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f9fe:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801fa02:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801fa06:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801fa0a:	4d28      	ldr	r5, [pc, #160]	@ (801faac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801fa0c:	4e28      	ldr	r6, [pc, #160]	@ (801fab0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801fa0e:	6828      	ldr	r0, [r5, #0]
 801fa10:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801fa14:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801fa18:	fb11 2103 	smlabb	r1, r1, r3, r2
 801fa1c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801fa20:	f8bd 1000 	ldrh.w	r1, [sp]
 801fa24:	440a      	add	r2, r1
 801fa26:	f8ad 2008 	strh.w	r2, [sp, #8]
 801fa2a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801fa2e:	4413      	add	r3, r2
 801fa30:	f8ad 300a 	strh.w	r3, [sp, #10]
 801fa34:	6803      	ldr	r3, [r0, #0]
 801fa36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801fa38:	4798      	blx	r3
 801fa3a:	8833      	ldrh	r3, [r6, #0]
 801fa3c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801fa40:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801fa44:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 801fab4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801fa48:	fb03 1202 	mla	r2, r3, r2, r1
 801fa4c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fa50:	fb08 f303 	mul.w	r3, r8, r3
 801fa54:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fa58:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801fa5c:	4298      	cmp	r0, r3
 801fa5e:	d21d      	bcs.n	801fa9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801fa60:	eb00 080c 	add.w	r8, r0, ip
 801fa64:	4540      	cmp	r0, r8
 801fa66:	d20f      	bcs.n	801fa88 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801fa68:	f854 1b04 	ldr.w	r1, [r4], #4
 801fa6c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801fa70:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801fa74:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801fa78:	ea42 0209 	orr.w	r2, r2, r9
 801fa7c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801fa80:	430a      	orrs	r2, r1
 801fa82:	f820 2b02 	strh.w	r2, [r0], #2
 801fa86:	e7ed      	b.n	801fa64 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801fa88:	8832      	ldrh	r2, [r6, #0]
 801fa8a:	1bd2      	subs	r2, r2, r7
 801fa8c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fa90:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801fa94:	1bd2      	subs	r2, r2, r7
 801fa96:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801fa9a:	e7df      	b.n	801fa5c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801fa9c:	6828      	ldr	r0, [r5, #0]
 801fa9e:	6803      	ldr	r3, [r0, #0]
 801faa0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801faa2:	4798      	blx	r3
 801faa4:	b005      	add	sp, #20
 801faa6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801faaa:	bf00      	nop
 801faac:	20013f4c 	.word	0x20013f4c
 801fab0:	20013f46 	.word	0x20013f46
 801fab4:	fffff800 	.word	0xfffff800

0801fab8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801fab8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fabc:	460e      	mov	r6, r1
 801fabe:	b08e      	sub	sp, #56	@ 0x38
 801fac0:	4604      	mov	r4, r0
 801fac2:	6808      	ldr	r0, [r1, #0]
 801fac4:	6849      	ldr	r1, [r1, #4]
 801fac6:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801fca0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801faca:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 801fca4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801face:	461d      	mov	r5, r3
 801fad0:	ab0a      	add	r3, sp, #40	@ 0x28
 801fad2:	c303      	stmia	r3!, {r0, r1}
 801fad4:	6810      	ldr	r0, [r2, #0]
 801fad6:	6851      	ldr	r1, [r2, #4]
 801fad8:	ab0c      	add	r3, sp, #48	@ 0x30
 801fada:	c303      	stmia	r3!, {r0, r1}
 801fadc:	a80a      	add	r0, sp, #40	@ 0x28
 801fade:	f7f6 fdc5 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fae2:	4631      	mov	r1, r6
 801fae4:	a80c      	add	r0, sp, #48	@ 0x30
 801fae6:	f7f6 fde9 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801faea:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801faee:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801faf2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801faf6:	f8d8 0000 	ldr.w	r0, [r8]
 801fafa:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801fafe:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801fb02:	fb11 2103 	smlabb	r1, r1, r3, r2
 801fb06:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801fb0a:	440c      	add	r4, r1
 801fb0c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801fb10:	440a      	add	r2, r1
 801fb12:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801fb16:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801fb1a:	4413      	add	r3, r2
 801fb1c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801fb20:	6803      	ldr	r3, [r0, #0]
 801fb22:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801fb24:	4798      	blx	r3
 801fb26:	2dff      	cmp	r5, #255	@ 0xff
 801fb28:	d124      	bne.n	801fb74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801fb2a:	f010 0f01 	tst.w	r0, #1
 801fb2e:	f8d8 0000 	ldr.w	r0, [r8]
 801fb32:	d022      	beq.n	801fb7a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801fb34:	2100      	movs	r1, #0
 801fb36:	f8d0 c000 	ldr.w	ip, [r0]
 801fb3a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801fb3e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801fb42:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801fb46:	f04f 0e01 	mov.w	lr, #1
 801fb4a:	f8cd e018 	str.w	lr, [sp, #24]
 801fb4e:	f8b9 e000 	ldrh.w	lr, [r9]
 801fb52:	9503      	str	r5, [sp, #12]
 801fb54:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801fb58:	b2b6      	uxth	r6, r6
 801fb5a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801fb5e:	9102      	str	r1, [sp, #8]
 801fb60:	b2bf      	uxth	r7, r7
 801fb62:	9601      	str	r6, [sp, #4]
 801fb64:	9700      	str	r7, [sp, #0]
 801fb66:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 801fb6a:	4621      	mov	r1, r4
 801fb6c:	47a8      	blx	r5
 801fb6e:	b00e      	add	sp, #56	@ 0x38
 801fb70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fb74:	f010 0f04 	tst.w	r0, #4
 801fb78:	e7d9      	b.n	801fb2e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801fb7a:	6803      	ldr	r3, [r0, #0]
 801fb7c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801fb7e:	4798      	blx	r3
 801fb80:	f8b9 3000 	ldrh.w	r3, [r9]
 801fb84:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801fb88:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801fb8c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801fb90:	fb03 1202 	mla	r2, r3, r2, r1
 801fb94:	ebac 0c07 	sub.w	ip, ip, r7
 801fb98:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fb9c:	435e      	muls	r6, r3
 801fb9e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801fba2:	2dff      	cmp	r5, #255	@ 0xff
 801fba4:	eba3 0707 	sub.w	r7, r3, r7
 801fba8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801fbac:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801fbb0:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801fbb4:	d049      	beq.n	801fc4a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801fbb6:	43eb      	mvns	r3, r5
 801fbb8:	fa1f f985 	uxth.w	r9, r5
 801fbbc:	b2db      	uxtb	r3, r3
 801fbbe:	42b0      	cmp	r0, r6
 801fbc0:	d266      	bcs.n	801fc90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801fbc2:	eb00 0a0e 	add.w	sl, r0, lr
 801fbc6:	4550      	cmp	r0, sl
 801fbc8:	4621      	mov	r1, r4
 801fbca:	f104 0403 	add.w	r4, r4, #3
 801fbce:	d25b      	bcs.n	801fc88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801fbd0:	8802      	ldrh	r2, [r0, #0]
 801fbd2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801fbd6:	ea4f 2822 	mov.w	r8, r2, asr #8
 801fbda:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801fbde:	fb11 f109 	smulbb	r1, r1, r9
 801fbe2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801fbe6:	10d5      	asrs	r5, r2, #3
 801fbe8:	fb08 1803 	mla	r8, r8, r3, r1
 801fbec:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801fbf0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801fbf4:	fb11 f109 	smulbb	r1, r1, r9
 801fbf8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801fbfc:	fb05 1503 	mla	r5, r5, r3, r1
 801fc00:	00d2      	lsls	r2, r2, #3
 801fc02:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801fc06:	b2d2      	uxtb	r2, r2
 801fc08:	fb11 f109 	smulbb	r1, r1, r9
 801fc0c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fc10:	fa1f f888 	uxth.w	r8, r8
 801fc14:	fb02 1203 	mla	r2, r2, r3, r1
 801fc18:	b292      	uxth	r2, r2
 801fc1a:	f108 0101 	add.w	r1, r8, #1
 801fc1e:	b2ad      	uxth	r5, r5
 801fc20:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801fc24:	1c51      	adds	r1, r2, #1
 801fc26:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fc2a:	1c69      	adds	r1, r5, #1
 801fc2c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801fc30:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801fc34:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fc38:	096d      	lsrs	r5, r5, #5
 801fc3a:	ea42 0208 	orr.w	r2, r2, r8
 801fc3e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801fc42:	432a      	orrs	r2, r5
 801fc44:	f820 2b02 	strh.w	r2, [r0], #2
 801fc48:	e7bd      	b.n	801fbc6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801fc4a:	4a14      	ldr	r2, [pc, #80]	@ (801fc9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801fc4c:	42b0      	cmp	r0, r6
 801fc4e:	d21f      	bcs.n	801fc90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801fc50:	eb00 050e 	add.w	r5, r0, lr
 801fc54:	42a8      	cmp	r0, r5
 801fc56:	4621      	mov	r1, r4
 801fc58:	f104 0403 	add.w	r4, r4, #3
 801fc5c:	d210      	bcs.n	801fc80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801fc5e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801fc62:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801fc66:	00db      	lsls	r3, r3, #3
 801fc68:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801fc6c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fc70:	430b      	orrs	r3, r1
 801fc72:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801fc76:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801fc7a:	f820 3b02 	strh.w	r3, [r0], #2
 801fc7e:	e7e9      	b.n	801fc54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801fc80:	4438      	add	r0, r7
 801fc82:	eb01 040c 	add.w	r4, r1, ip
 801fc86:	e7e1      	b.n	801fc4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801fc88:	4438      	add	r0, r7
 801fc8a:	eb01 040c 	add.w	r4, r1, ip
 801fc8e:	e796      	b.n	801fbbe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801fc90:	4b03      	ldr	r3, [pc, #12]	@ (801fca0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801fc92:	6818      	ldr	r0, [r3, #0]
 801fc94:	6803      	ldr	r3, [r0, #0]
 801fc96:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801fc98:	4798      	blx	r3
 801fc9a:	e768      	b.n	801fb6e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801fc9c:	fffff800 	.word	0xfffff800
 801fca0:	20013f4c 	.word	0x20013f4c
 801fca4:	20013f46 	.word	0x20013f46

0801fca8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801fca8:	b4f0      	push	{r4, r5, r6, r7}
 801fcaa:	4616      	mov	r6, r2
 801fcac:	2e01      	cmp	r6, #1
 801fcae:	461c      	mov	r4, r3
 801fcb0:	460d      	mov	r5, r1
 801fcb2:	9a04      	ldr	r2, [sp, #16]
 801fcb4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801fcb8:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801fcbc:	d012      	beq.n	801fce4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801fcbe:	d303      	bcc.n	801fcc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801fcc0:	2e02      	cmp	r6, #2
 801fcc2:	d00a      	beq.n	801fcda <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801fcc4:	bcf0      	pop	{r4, r5, r6, r7}
 801fcc6:	4770      	bx	lr
 801fcc8:	6805      	ldr	r5, [r0, #0]
 801fcca:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801fcce:	68ed      	ldr	r5, [r5, #12]
 801fcd0:	4613      	mov	r3, r2
 801fcd2:	46ac      	mov	ip, r5
 801fcd4:	4622      	mov	r2, r4
 801fcd6:	bcf0      	pop	{r4, r5, r6, r7}
 801fcd8:	4760      	bx	ip
 801fcda:	4621      	mov	r1, r4
 801fcdc:	4628      	mov	r0, r5
 801fcde:	bcf0      	pop	{r4, r5, r6, r7}
 801fce0:	f7ff bd94 	b.w	801f80c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fce4:	4621      	mov	r1, r4
 801fce6:	4628      	mov	r0, r5
 801fce8:	bcf0      	pop	{r4, r5, r6, r7}
 801fcea:	f7ff bee5 	b.w	801fab8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801fcf0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801fcf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fcf4:	4681      	mov	r9, r0
 801fcf6:	b093      	sub	sp, #76	@ 0x4c
 801fcf8:	6810      	ldr	r0, [r2, #0]
 801fcfa:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801fcfe:	4f6d      	ldr	r7, [pc, #436]	@ (801feb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801fd00:	4688      	mov	r8, r1
 801fd02:	6851      	ldr	r1, [r2, #4]
 801fd04:	ac0e      	add	r4, sp, #56	@ 0x38
 801fd06:	c403      	stmia	r4!, {r0, r1}
 801fd08:	6818      	ldr	r0, [r3, #0]
 801fd0a:	6859      	ldr	r1, [r3, #4]
 801fd0c:	ac10      	add	r4, sp, #64	@ 0x40
 801fd0e:	4616      	mov	r6, r2
 801fd10:	c403      	stmia	r4!, {r0, r1}
 801fd12:	a80e      	add	r0, sp, #56	@ 0x38
 801fd14:	f7f6 fcaa 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fd18:	4631      	mov	r1, r6
 801fd1a:	a810      	add	r0, sp, #64	@ 0x40
 801fd1c:	f7f6 fcce 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fd20:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801fd24:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801fd28:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801fd2c:	4e62      	ldr	r6, [pc, #392]	@ (801feb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801fd2e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801fd32:	6830      	ldr	r0, [r6, #0]
 801fd34:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801fd38:	fb11 2103 	smlabb	r1, r1, r3, r2
 801fd3c:	4489      	add	r9, r1
 801fd3e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801fd42:	440a      	add	r2, r1
 801fd44:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801fd48:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801fd4c:	4413      	add	r3, r2
 801fd4e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801fd52:	6803      	ldr	r3, [r0, #0]
 801fd54:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801fd56:	4798      	blx	r3
 801fd58:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801fd5c:	6830      	ldr	r0, [r6, #0]
 801fd5e:	d01d      	beq.n	801fd9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801fd60:	2200      	movs	r2, #0
 801fd62:	6801      	ldr	r1, [r0, #0]
 801fd64:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801fd68:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801fd6c:	220b      	movs	r2, #11
 801fd6e:	9207      	str	r2, [sp, #28]
 801fd70:	883a      	ldrh	r2, [r7, #0]
 801fd72:	9206      	str	r2, [sp, #24]
 801fd74:	2201      	movs	r2, #1
 801fd76:	e9cd a204 	strd	sl, r2, [sp, #16]
 801fd7a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801fd7e:	9203      	str	r2, [sp, #12]
 801fd80:	b2a4      	uxth	r4, r4
 801fd82:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801fd86:	9200      	str	r2, [sp, #0]
 801fd88:	b2ad      	uxth	r5, r5
 801fd8a:	9502      	str	r5, [sp, #8]
 801fd8c:	9401      	str	r4, [sp, #4]
 801fd8e:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 801fd90:	4642      	mov	r2, r8
 801fd92:	4649      	mov	r1, r9
 801fd94:	47a0      	blx	r4
 801fd96:	b013      	add	sp, #76	@ 0x4c
 801fd98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fd9c:	6803      	ldr	r3, [r0, #0]
 801fd9e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801fda0:	4798      	blx	r3
 801fda2:	883b      	ldrh	r3, [r7, #0]
 801fda4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801fda8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801fdac:	fb03 1202 	mla	r2, r3, r2, r1
 801fdb0:	435d      	muls	r5, r3
 801fdb2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fdb6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801fdba:	920c      	str	r2, [sp, #48]	@ 0x30
 801fdbc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801fdc0:	1b12      	subs	r2, r2, r4
 801fdc2:	920d      	str	r2, [sp, #52]	@ 0x34
 801fdc4:	0062      	lsls	r2, r4, #1
 801fdc6:	1b1c      	subs	r4, r3, r4
 801fdc8:	0063      	lsls	r3, r4, #1
 801fdca:	920a      	str	r2, [sp, #40]	@ 0x28
 801fdcc:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fdce:	f04f 0e04 	mov.w	lr, #4
 801fdd2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fdd4:	4298      	cmp	r0, r3
 801fdd6:	d266      	bcs.n	801fea6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801fdd8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fdda:	eb00 0b03 	add.w	fp, r0, r3
 801fdde:	4558      	cmp	r0, fp
 801fde0:	d25c      	bcs.n	801fe9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801fde2:	f819 3b01 	ldrb.w	r3, [r9], #1
 801fde6:	fb1e e303 	smlabb	r3, lr, r3, lr
 801fdea:	f858 2003 	ldr.w	r2, [r8, r3]
 801fdee:	0e11      	lsrs	r1, r2, #24
 801fdf0:	d012      	beq.n	801fe18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801fdf2:	29ff      	cmp	r1, #255	@ 0xff
 801fdf4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801fdf8:	d110      	bne.n	801fe1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801fdfa:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801fdfe:	d10d      	bne.n	801fe1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801fe00:	0953      	lsrs	r3, r2, #5
 801fe02:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801fe06:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fe0a:	f027 0707 	bic.w	r7, r7, #7
 801fe0e:	431f      	orrs	r7, r3
 801fe10:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fe14:	433a      	orrs	r2, r7
 801fe16:	8002      	strh	r2, [r0, #0]
 801fe18:	3002      	adds	r0, #2
 801fe1a:	e7e0      	b.n	801fdde <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801fe1c:	fb0a f101 	mul.w	r1, sl, r1
 801fe20:	8806      	ldrh	r6, [r0, #0]
 801fe22:	1c4b      	adds	r3, r1, #1
 801fe24:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801fe28:	1235      	asrs	r5, r6, #8
 801fe2a:	10f4      	asrs	r4, r6, #3
 801fe2c:	121b      	asrs	r3, r3, #8
 801fe2e:	00f6      	lsls	r6, r6, #3
 801fe30:	b299      	uxth	r1, r3
 801fe32:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801fe36:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801fe3a:	b2f6      	uxtb	r6, r6
 801fe3c:	43db      	mvns	r3, r3
 801fe3e:	b2d2      	uxtb	r2, r2
 801fe40:	b2db      	uxtb	r3, r3
 801fe42:	fb1c fc01 	smulbb	ip, ip, r1
 801fe46:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801fe4a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801fe4e:	fb12 f201 	smulbb	r2, r2, r1
 801fe52:	fb05 c503 	mla	r5, r5, r3, ip
 801fe56:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801fe5a:	b2ff      	uxtb	r7, r7
 801fe5c:	fb06 2203 	mla	r2, r6, r3, r2
 801fe60:	b2ad      	uxth	r5, r5
 801fe62:	fb17 f701 	smulbb	r7, r7, r1
 801fe66:	b292      	uxth	r2, r2
 801fe68:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801fe6c:	fb04 7403 	mla	r4, r4, r3, r7
 801fe70:	f105 0c01 	add.w	ip, r5, #1
 801fe74:	1c57      	adds	r7, r2, #1
 801fe76:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fe7a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801fe7e:	b2a4      	uxth	r4, r4
 801fe80:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fe84:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801fe88:	433d      	orrs	r5, r7
 801fe8a:	1c67      	adds	r7, r4, #1
 801fe8c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801fe90:	0964      	lsrs	r4, r4, #5
 801fe92:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801fe96:	4325      	orrs	r5, r4
 801fe98:	8005      	strh	r5, [r0, #0]
 801fe9a:	e7bd      	b.n	801fe18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801fe9c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fe9e:	4418      	add	r0, r3
 801fea0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fea2:	4499      	add	r9, r3
 801fea4:	e795      	b.n	801fdd2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801fea6:	4b04      	ldr	r3, [pc, #16]	@ (801feb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801fea8:	6818      	ldr	r0, [r3, #0]
 801feaa:	6803      	ldr	r3, [r0, #0]
 801feac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801feae:	4798      	blx	r3
 801feb0:	e771      	b.n	801fd96 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801feb2:	bf00      	nop
 801feb4:	20013f46 	.word	0x20013f46
 801feb8:	20013f4c 	.word	0x20013f4c

0801febc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801febc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fec0:	b087      	sub	sp, #28
 801fec2:	4680      	mov	r8, r0
 801fec4:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801fec8:	460d      	mov	r5, r1
 801feca:	4614      	mov	r4, r2
 801fecc:	2e00      	cmp	r6, #0
 801fece:	f000 80b9 	beq.w	8020044 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801fed2:	6810      	ldr	r0, [r2, #0]
 801fed4:	6851      	ldr	r1, [r2, #4]
 801fed6:	af02      	add	r7, sp, #8
 801fed8:	c703      	stmia	r7!, {r0, r1}
 801feda:	6818      	ldr	r0, [r3, #0]
 801fedc:	6859      	ldr	r1, [r3, #4]
 801fede:	af04      	add	r7, sp, #16
 801fee0:	c703      	stmia	r7!, {r0, r1}
 801fee2:	a802      	add	r0, sp, #8
 801fee4:	f7f6 fbc2 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fee8:	4621      	mov	r1, r4
 801feea:	a804      	add	r0, sp, #16
 801feec:	f7f6 fbe6 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fef0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801fef4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801fef8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801fefc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801ff00:	fb14 2103 	smlabb	r1, r4, r3, r2
 801ff04:	eb08 0401 	add.w	r4, r8, r1
 801ff08:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ff0c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ff10:	440a      	add	r2, r1
 801ff12:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ff16:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ff1a:	4413      	add	r3, r2
 801ff1c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ff20:	4b4a      	ldr	r3, [pc, #296]	@ (802004c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ff22:	6818      	ldr	r0, [r3, #0]
 801ff24:	6803      	ldr	r3, [r0, #0]
 801ff26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ff28:	4798      	blx	r3
 801ff2a:	4b49      	ldr	r3, [pc, #292]	@ (8020050 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801ff2c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801ff30:	881a      	ldrh	r2, [r3, #0]
 801ff32:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801ff36:	2eff      	cmp	r6, #255	@ 0xff
 801ff38:	fb02 c101 	mla	r1, r2, r1, ip
 801ff3c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ff40:	fb02 f207 	mul.w	r2, r2, r7
 801ff44:	f105 0104 	add.w	r1, r5, #4
 801ff48:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801ff4c:	461d      	mov	r5, r3
 801ff4e:	d05a      	beq.n	8020006 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801ff50:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801ff54:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ff58:	b2b6      	uxth	r6, r6
 801ff5a:	fa1f fe8e 	uxth.w	lr, lr
 801ff5e:	9301      	str	r3, [sp, #4]
 801ff60:	4282      	cmp	r2, r0
 801ff62:	d96a      	bls.n	802003a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ff64:	eb00 0b0a 	add.w	fp, r0, sl
 801ff68:	4583      	cmp	fp, r0
 801ff6a:	d940      	bls.n	801ffee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801ff6c:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ff70:	8805      	ldrh	r5, [r0, #0]
 801ff72:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ff76:	122f      	asrs	r7, r5, #8
 801ff78:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ff7c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ff80:	fb17 f70e 	smulbb	r7, r7, lr
 801ff84:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ff88:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ff8c:	00ed      	lsls	r5, r5, #3
 801ff8e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801ff92:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801ff96:	10df      	asrs	r7, r3, #3
 801ff98:	b2ed      	uxtb	r5, r5
 801ff9a:	00db      	lsls	r3, r3, #3
 801ff9c:	fa1f fc8c 	uxth.w	ip, ip
 801ffa0:	fb19 f90e 	smulbb	r9, r9, lr
 801ffa4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ffa8:	b2db      	uxtb	r3, r3
 801ffaa:	fb15 f50e 	smulbb	r5, r5, lr
 801ffae:	fb07 9706 	mla	r7, r7, r6, r9
 801ffb2:	fb03 5306 	mla	r3, r3, r6, r5
 801ffb6:	f10c 0901 	add.w	r9, ip, #1
 801ffba:	b29b      	uxth	r3, r3
 801ffbc:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801ffc0:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801ffc4:	f103 0c01 	add.w	ip, r3, #1
 801ffc8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ffcc:	b2bf      	uxth	r7, r7
 801ffce:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ffd2:	ea4c 0c09 	orr.w	ip, ip, r9
 801ffd6:	f107 0901 	add.w	r9, r7, #1
 801ffda:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801ffde:	097f      	lsrs	r7, r7, #5
 801ffe0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ffe4:	ea4c 0c07 	orr.w	ip, ip, r7
 801ffe8:	f820 cb02 	strh.w	ip, [r0], #2
 801ffec:	e7bc      	b.n	801ff68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801ffee:	9b01      	ldr	r3, [sp, #4]
 801fff0:	881b      	ldrh	r3, [r3, #0]
 801fff2:	eba3 0308 	sub.w	r3, r3, r8
 801fff6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fffa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801fffe:	eba3 0308 	sub.w	r3, r3, r8
 8020002:	441c      	add	r4, r3
 8020004:	e7ac      	b.n	801ff60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8020006:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802000a:	4282      	cmp	r2, r0
 802000c:	d915      	bls.n	802003a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 802000e:	eb00 060a 	add.w	r6, r0, sl
 8020012:	4286      	cmp	r6, r0
 8020014:	d906      	bls.n	8020024 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8020016:	f814 3b01 	ldrb.w	r3, [r4], #1
 802001a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 802001e:	f820 3b02 	strh.w	r3, [r0], #2
 8020022:	e7f6      	b.n	8020012 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8020024:	882b      	ldrh	r3, [r5, #0]
 8020026:	eba3 0308 	sub.w	r3, r3, r8
 802002a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802002e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8020032:	eba3 0308 	sub.w	r3, r3, r8
 8020036:	441c      	add	r4, r3
 8020038:	e7e7      	b.n	802000a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 802003a:	4b04      	ldr	r3, [pc, #16]	@ (802004c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 802003c:	6818      	ldr	r0, [r3, #0]
 802003e:	6803      	ldr	r3, [r0, #0]
 8020040:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020042:	4798      	blx	r3
 8020044:	b007      	add	sp, #28
 8020046:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802004a:	bf00      	nop
 802004c:	20013f4c 	.word	0x20013f4c
 8020050:	20013f46 	.word	0x20013f46

08020054 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8020054:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020058:	b091      	sub	sp, #68	@ 0x44
 802005a:	4680      	mov	r8, r0
 802005c:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8020060:	460f      	mov	r7, r1
 8020062:	4614      	mov	r4, r2
 8020064:	2d00      	cmp	r5, #0
 8020066:	d051      	beq.n	802010c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8020068:	6810      	ldr	r0, [r2, #0]
 802006a:	6851      	ldr	r1, [r2, #4]
 802006c:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8020270 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8020070:	ae0c      	add	r6, sp, #48	@ 0x30
 8020072:	c603      	stmia	r6!, {r0, r1}
 8020074:	6818      	ldr	r0, [r3, #0]
 8020076:	6859      	ldr	r1, [r3, #4]
 8020078:	ae0e      	add	r6, sp, #56	@ 0x38
 802007a:	c603      	stmia	r6!, {r0, r1}
 802007c:	a80c      	add	r0, sp, #48	@ 0x30
 802007e:	f7f6 faf5 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020082:	4621      	mov	r1, r4
 8020084:	a80e      	add	r0, sp, #56	@ 0x38
 8020086:	f7f6 fb19 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802008a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 802008e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8020092:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8020096:	f8d9 0000 	ldr.w	r0, [r9]
 802009a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 802009e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 80200a2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80200a6:	eb08 0401 	add.w	r4, r8, r1
 80200aa:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80200ae:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8020274 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80200b2:	440a      	add	r2, r1
 80200b4:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 80200b8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 80200bc:	4413      	add	r3, r2
 80200be:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 80200c2:	6803      	ldr	r3, [r0, #0]
 80200c4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80200c6:	4798      	blx	r3
 80200c8:	f010 0f80 	tst.w	r0, #128	@ 0x80
 80200cc:	f8d9 0000 	ldr.w	r0, [r9]
 80200d0:	d01f      	beq.n	8020112 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80200d2:	2200      	movs	r2, #0
 80200d4:	6801      	ldr	r1, [r0, #0]
 80200d6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80200da:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80200de:	220b      	movs	r2, #11
 80200e0:	9207      	str	r2, [sp, #28]
 80200e2:	f8b8 2000 	ldrh.w	r2, [r8]
 80200e6:	9206      	str	r2, [sp, #24]
 80200e8:	2201      	movs	r2, #1
 80200ea:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80200ee:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 80200f2:	9203      	str	r2, [sp, #12]
 80200f4:	fa1f f28a 	uxth.w	r2, sl
 80200f8:	9202      	str	r2, [sp, #8]
 80200fa:	b2b6      	uxth	r6, r6
 80200fc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8020100:	9200      	str	r2, [sp, #0]
 8020102:	9601      	str	r6, [sp, #4]
 8020104:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 8020106:	463a      	mov	r2, r7
 8020108:	4621      	mov	r1, r4
 802010a:	47a8      	blx	r5
 802010c:	b011      	add	sp, #68	@ 0x44
 802010e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020112:	6803      	ldr	r3, [r0, #0]
 8020114:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020116:	4798      	blx	r3
 8020118:	f8b8 2000 	ldrh.w	r2, [r8]
 802011c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8020120:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8020124:	2dff      	cmp	r5, #255	@ 0xff
 8020126:	fb02 1303 	mla	r3, r2, r3, r1
 802012a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802012e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8020132:	fb0a fa02 	mul.w	sl, sl, r2
 8020136:	d062      	beq.n	80201fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8020138:	ea6f 0c05 	mvn.w	ip, r5
 802013c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8020140:	930a      	str	r3, [sp, #40]	@ 0x28
 8020142:	b2ad      	uxth	r5, r5
 8020144:	fa5f fc8c 	uxtb.w	ip, ip
 8020148:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 802014c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802014e:	4298      	cmp	r0, r3
 8020150:	f080 8085 	bcs.w	802025e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8020154:	eb00 0b09 	add.w	fp, r0, r9
 8020158:	4558      	cmp	r0, fp
 802015a:	d246      	bcs.n	80201ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 802015c:	f814 eb01 	ldrb.w	lr, [r4], #1
 8020160:	2303      	movs	r3, #3
 8020162:	2204      	movs	r2, #4
 8020164:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8020168:	eb07 0a0e 	add.w	sl, r7, lr
 802016c:	8803      	ldrh	r3, [r0, #0]
 802016e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8020172:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020176:	1219      	asrs	r1, r3, #8
 8020178:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802017c:	fb18 f805 	smulbb	r8, r8, r5
 8020180:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8020184:	10da      	asrs	r2, r3, #3
 8020186:	fb01 810c 	mla	r1, r1, ip, r8
 802018a:	00db      	lsls	r3, r3, #3
 802018c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020190:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020194:	b2db      	uxtb	r3, r3
 8020196:	fb18 f805 	smulbb	r8, r8, r5
 802019a:	fb1e fe05 	smulbb	lr, lr, r5
 802019e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80201a2:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80201a6:	b289      	uxth	r1, r1
 80201a8:	fb02 820c 	mla	r2, r2, ip, r8
 80201ac:	fb03 e30c 	mla	r3, r3, ip, lr
 80201b0:	b292      	uxth	r2, r2
 80201b2:	b29b      	uxth	r3, r3
 80201b4:	f101 0801 	add.w	r8, r1, #1
 80201b8:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80201bc:	f103 0e01 	add.w	lr, r3, #1
 80201c0:	f102 0801 	add.w	r8, r2, #1
 80201c4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80201c8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80201cc:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80201d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80201d4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80201d8:	ea4e 0101 	orr.w	r1, lr, r1
 80201dc:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80201e0:	ea41 0108 	orr.w	r1, r1, r8
 80201e4:	f820 1b02 	strh.w	r1, [r0], #2
 80201e8:	e7b6      	b.n	8020158 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80201ea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80201ec:	881b      	ldrh	r3, [r3, #0]
 80201ee:	1b9b      	subs	r3, r3, r6
 80201f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80201f4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80201f8:	1b9b      	subs	r3, r3, r6
 80201fa:	441c      	add	r4, r3
 80201fc:	e7a6      	b.n	802014c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80201fe:	491b      	ldr	r1, [pc, #108]	@ (802026c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8020200:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8020204:	2203      	movs	r2, #3
 8020206:	2504      	movs	r5, #4
 8020208:	4550      	cmp	r0, sl
 802020a:	d228      	bcs.n	802025e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 802020c:	eb00 0c09 	add.w	ip, r0, r9
 8020210:	4560      	cmp	r0, ip
 8020212:	4623      	mov	r3, r4
 8020214:	d219      	bcs.n	802024a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8020216:	f893 e000 	ldrb.w	lr, [r3]
 802021a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 802021e:	eb07 0b0e 	add.w	fp, r7, lr
 8020222:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020226:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802022a:	f89b b001 	ldrb.w	fp, [fp, #1]
 802022e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8020232:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8020236:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 802023a:	ea43 030b 	orr.w	r3, r3, fp
 802023e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8020242:	3401      	adds	r4, #1
 8020244:	f820 3b02 	strh.w	r3, [r0], #2
 8020248:	e7e2      	b.n	8020210 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 802024a:	f8b8 3000 	ldrh.w	r3, [r8]
 802024e:	1b9b      	subs	r3, r3, r6
 8020250:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020254:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8020258:	1b9b      	subs	r3, r3, r6
 802025a:	441c      	add	r4, r3
 802025c:	e7d4      	b.n	8020208 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 802025e:	4b04      	ldr	r3, [pc, #16]	@ (8020270 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8020260:	6818      	ldr	r0, [r3, #0]
 8020262:	6803      	ldr	r3, [r0, #0]
 8020264:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020266:	4798      	blx	r3
 8020268:	e750      	b.n	802010c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 802026a:	bf00      	nop
 802026c:	fffff800 	.word	0xfffff800
 8020270:	20013f4c 	.word	0x20013f4c
 8020274:	20013f46 	.word	0x20013f46

08020278 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8020278:	b4f0      	push	{r4, r5, r6, r7}
 802027a:	460c      	mov	r4, r1
 802027c:	4611      	mov	r1, r2
 802027e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8020282:	780f      	ldrb	r7, [r1, #0]
 8020284:	784e      	ldrb	r6, [r1, #1]
 8020286:	2f01      	cmp	r7, #1
 8020288:	461a      	mov	r2, r3
 802028a:	9b04      	ldr	r3, [sp, #16]
 802028c:	d038      	beq.n	8020300 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 802028e:	d31f      	bcc.n	80202d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8020290:	2f02      	cmp	r7, #2
 8020292:	d14d      	bne.n	8020330 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8020294:	2e03      	cmp	r6, #3
 8020296:	d84b      	bhi.n	8020330 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8020298:	e8df f006 	tbb	[pc, r6]
 802029c:	17140702 	.word	0x17140702
 80202a0:	9504      	str	r5, [sp, #16]
 80202a2:	4620      	mov	r0, r4
 80202a4:	bcf0      	pop	{r4, r5, r6, r7}
 80202a6:	f7ff be09 	b.w	801febc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80202aa:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80202ac:	2800      	cmp	r0, #0
 80202ae:	d03f      	beq.n	8020330 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80202b0:	6806      	ldr	r6, [r0, #0]
 80202b2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80202b6:	68b5      	ldr	r5, [r6, #8]
 80202b8:	4613      	mov	r3, r2
 80202ba:	46ac      	mov	ip, r5
 80202bc:	460a      	mov	r2, r1
 80202be:	4621      	mov	r1, r4
 80202c0:	bcf0      	pop	{r4, r5, r6, r7}
 80202c2:	4760      	bx	ip
 80202c4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80202c8:	e7f0      	b.n	80202ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80202ca:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80202ce:	e7ed      	b.n	80202ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80202d0:	2e03      	cmp	r6, #3
 80202d2:	d82d      	bhi.n	8020330 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80202d4:	e8df f006 	tbb	[pc, r6]
 80202d8:	110e0702 	.word	0x110e0702
 80202dc:	9504      	str	r5, [sp, #16]
 80202de:	4620      	mov	r0, r4
 80202e0:	bcf0      	pop	{r4, r5, r6, r7}
 80202e2:	f7ff bd05 	b.w	801fcf0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80202e6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80202e8:	b310      	cbz	r0, 8020330 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80202ea:	6806      	ldr	r6, [r0, #0]
 80202ec:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80202f0:	68f5      	ldr	r5, [r6, #12]
 80202f2:	e7e1      	b.n	80202b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80202f4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80202f8:	e7f6      	b.n	80202e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80202fa:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80202fe:	e7f3      	b.n	80202e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8020300:	2e03      	cmp	r6, #3
 8020302:	d815      	bhi.n	8020330 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8020304:	e8df f006 	tbb	[pc, r6]
 8020308:	110e0702 	.word	0x110e0702
 802030c:	9504      	str	r5, [sp, #16]
 802030e:	4620      	mov	r0, r4
 8020310:	bcf0      	pop	{r4, r5, r6, r7}
 8020312:	f7ff be9f 	b.w	8020054 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8020316:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8020318:	b150      	cbz	r0, 8020330 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 802031a:	6806      	ldr	r6, [r0, #0]
 802031c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8020320:	6935      	ldr	r5, [r6, #16]
 8020322:	e7c9      	b.n	80202b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8020324:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8020328:	e7f6      	b.n	8020318 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 802032a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 802032e:	e7f3      	b.n	8020318 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8020330:	bcf0      	pop	{r4, r5, r6, r7}
 8020332:	4770      	bx	lr

08020334 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8020334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020338:	4604      	mov	r4, r0
 802033a:	b087      	sub	sp, #28
 802033c:	6810      	ldr	r0, [r2, #0]
 802033e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 8020342:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 802057c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8020346:	460e      	mov	r6, r1
 8020348:	6851      	ldr	r1, [r2, #4]
 802034a:	ad02      	add	r5, sp, #8
 802034c:	c503      	stmia	r5!, {r0, r1}
 802034e:	6818      	ldr	r0, [r3, #0]
 8020350:	6859      	ldr	r1, [r3, #4]
 8020352:	ad04      	add	r5, sp, #16
 8020354:	4617      	mov	r7, r2
 8020356:	c503      	stmia	r5!, {r0, r1}
 8020358:	a802      	add	r0, sp, #8
 802035a:	f7f6 f987 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802035e:	4639      	mov	r1, r7
 8020360:	a804      	add	r0, sp, #16
 8020362:	f7f6 f9ab 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020366:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802036a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802036e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8020372:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8020376:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 802037a:	fb11 2103 	smlabb	r1, r1, r3, r2
 802037e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8020382:	440e      	add	r6, r1
 8020384:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8020388:	440a      	add	r2, r1
 802038a:	f8ad 2010 	strh.w	r2, [sp, #16]
 802038e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8020392:	4413      	add	r3, r2
 8020394:	f8ad 3012 	strh.w	r3, [sp, #18]
 8020398:	4b77      	ldr	r3, [pc, #476]	@ (8020578 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802039a:	6818      	ldr	r0, [r3, #0]
 802039c:	6803      	ldr	r3, [r0, #0]
 802039e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80203a0:	4798      	blx	r3
 80203a2:	f8b9 b000 	ldrh.w	fp, [r9]
 80203a6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80203aa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80203ae:	fb0b 2303 	mla	r3, fp, r3, r2
 80203b2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80203b6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80203ba:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80203be:	fb05 f50b 	mul.w	r5, r5, fp
 80203c2:	9300      	str	r3, [sp, #0]
 80203c4:	d069      	beq.n	802049a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80203c6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80203ca:	4558      	cmp	r0, fp
 80203cc:	f080 80cc 	bcs.w	8020568 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80203d0:	9b00      	ldr	r3, [sp, #0]
 80203d2:	18c3      	adds	r3, r0, r3
 80203d4:	9301      	str	r3, [sp, #4]
 80203d6:	4631      	mov	r1, r6
 80203d8:	9b01      	ldr	r3, [sp, #4]
 80203da:	4298      	cmp	r0, r3
 80203dc:	d24f      	bcs.n	802047e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80203de:	f811 2b01 	ldrb.w	r2, [r1], #1
 80203e2:	2a00      	cmp	r2, #0
 80203e4:	d048      	beq.n	8020478 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80203e6:	fb0a f202 	mul.w	r2, sl, r2
 80203ea:	1c53      	adds	r3, r2, #1
 80203ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80203f0:	121b      	asrs	r3, r3, #8
 80203f2:	d041      	beq.n	8020478 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80203f4:	8802      	ldrh	r2, [r0, #0]
 80203f6:	f8b4 c000 	ldrh.w	ip, [r4]
 80203fa:	b29e      	uxth	r6, r3
 80203fc:	1215      	asrs	r5, r2, #8
 80203fe:	43db      	mvns	r3, r3
 8020400:	b2db      	uxtb	r3, r3
 8020402:	ea4f 272c 	mov.w	r7, ip, asr #8
 8020406:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802040a:	fb15 f503 	smulbb	r5, r5, r3
 802040e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8020412:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8020416:	00d2      	lsls	r2, r2, #3
 8020418:	fb07 5706 	mla	r7, r7, r6, r5
 802041c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8020420:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8020424:	b2d2      	uxtb	r2, r2
 8020426:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802042a:	b2bf      	uxth	r7, r7
 802042c:	fb1e fe03 	smulbb	lr, lr, r3
 8020430:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8020434:	fa5f fc8c 	uxtb.w	ip, ip
 8020438:	fb12 f203 	smulbb	r2, r2, r3
 802043c:	fb05 e506 	mla	r5, r5, r6, lr
 8020440:	fb0c 2c06 	mla	ip, ip, r6, r2
 8020444:	f107 0e01 	add.w	lr, r7, #1
 8020448:	fa1f fc8c 	uxth.w	ip, ip
 802044c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8020450:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8020454:	f10c 0701 	add.w	r7, ip, #1
 8020458:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802045c:	b2ad      	uxth	r5, r5
 802045e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020462:	ea47 070e 	orr.w	r7, r7, lr
 8020466:	f105 0e01 	add.w	lr, r5, #1
 802046a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 802046e:	096d      	lsrs	r5, r5, #5
 8020470:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020474:	432f      	orrs	r7, r5
 8020476:	8007      	strh	r7, [r0, #0]
 8020478:	3002      	adds	r0, #2
 802047a:	3402      	adds	r4, #2
 802047c:	e7ac      	b.n	80203d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 802047e:	f8b9 3000 	ldrh.w	r3, [r9]
 8020482:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8020486:	eba3 0308 	sub.w	r3, r3, r8
 802048a:	eba6 0608 	sub.w	r6, r6, r8
 802048e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8020492:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020496:	440e      	add	r6, r1
 8020498:	e797      	b.n	80203ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 802049a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 802049e:	42a8      	cmp	r0, r5
 80204a0:	d262      	bcs.n	8020568 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80204a2:	9b00      	ldr	r3, [sp, #0]
 80204a4:	4631      	mov	r1, r6
 80204a6:	eb00 0b03 	add.w	fp, r0, r3
 80204aa:	4558      	cmp	r0, fp
 80204ac:	d24e      	bcs.n	802054c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80204ae:	f811 3b01 	ldrb.w	r3, [r1], #1
 80204b2:	b12b      	cbz	r3, 80204c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80204b4:	2bff      	cmp	r3, #255	@ 0xff
 80204b6:	f8b4 e000 	ldrh.w	lr, [r4]
 80204ba:	d104      	bne.n	80204c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80204bc:	f8a0 e000 	strh.w	lr, [r0]
 80204c0:	3002      	adds	r0, #2
 80204c2:	3402      	adds	r4, #2
 80204c4:	e7f1      	b.n	80204aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80204c6:	8802      	ldrh	r2, [r0, #0]
 80204c8:	b29f      	uxth	r7, r3
 80204ca:	1216      	asrs	r6, r2, #8
 80204cc:	43db      	mvns	r3, r3
 80204ce:	b2db      	uxtb	r3, r3
 80204d0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80204d4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80204d8:	fb16 f603 	smulbb	r6, r6, r3
 80204dc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80204e0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80204e4:	00d2      	lsls	r2, r2, #3
 80204e6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80204ea:	b2d2      	uxtb	r2, r2
 80204ec:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80204f0:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80204f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80204f8:	fb1a fa03 	smulbb	sl, sl, r3
 80204fc:	fa1f fc8c 	uxth.w	ip, ip
 8020500:	fb12 f303 	smulbb	r3, r2, r3
 8020504:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020508:	fa5f fe8e 	uxtb.w	lr, lr
 802050c:	fb06 a607 	mla	r6, r6, r7, sl
 8020510:	f10c 0201 	add.w	r2, ip, #1
 8020514:	fb0e 3307 	mla	r3, lr, r7, r3
 8020518:	b2b6      	uxth	r6, r6
 802051a:	b29b      	uxth	r3, r3
 802051c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8020520:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8020524:	f106 0a01 	add.w	sl, r6, #1
 8020528:	f103 0c01 	add.w	ip, r3, #1
 802052c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020530:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8020534:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020538:	0976      	lsrs	r6, r6, #5
 802053a:	ea4c 0c02 	orr.w	ip, ip, r2
 802053e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8020542:	ea4c 0c06 	orr.w	ip, ip, r6
 8020546:	f8a0 c000 	strh.w	ip, [r0]
 802054a:	e7b9      	b.n	80204c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 802054c:	f8b9 3000 	ldrh.w	r3, [r9]
 8020550:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8020554:	eba3 0308 	sub.w	r3, r3, r8
 8020558:	eba6 0608 	sub.w	r6, r6, r8
 802055c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8020560:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020564:	440e      	add	r6, r1
 8020566:	e79a      	b.n	802049e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8020568:	4b03      	ldr	r3, [pc, #12]	@ (8020578 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802056a:	6818      	ldr	r0, [r3, #0]
 802056c:	6803      	ldr	r3, [r0, #0]
 802056e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020570:	4798      	blx	r3
 8020572:	b007      	add	sp, #28
 8020574:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020578:	20013f4c 	.word	0x20013f4c
 802057c:	20013f46 	.word	0x20013f46

08020580 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8020580:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020584:	b089      	sub	sp, #36	@ 0x24
 8020586:	4607      	mov	r7, r0
 8020588:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 802058c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802058e:	4688      	mov	r8, r1
 8020590:	4692      	mov	sl, r2
 8020592:	4699      	mov	r9, r3
 8020594:	2e00      	cmp	r6, #0
 8020596:	d048      	beq.n	802062a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020598:	4608      	mov	r0, r1
 802059a:	f7fa f81d 	bl	801a5d8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802059e:	4605      	mov	r5, r0
 80205a0:	4640      	mov	r0, r8
 80205a2:	f7fa f84d 	bl	801a640 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80205a6:	f8ad 000e 	strh.w	r0, [sp, #14]
 80205aa:	4640      	mov	r0, r8
 80205ac:	f8ad a008 	strh.w	sl, [sp, #8]
 80205b0:	f8ad 500c 	strh.w	r5, [sp, #12]
 80205b4:	f8ad 900a 	strh.w	r9, [sp, #10]
 80205b8:	f7fa f900 	bl	801a7bc <_ZNK8touchgfx6Bitmap7getDataEv>
 80205bc:	4605      	mov	r5, r0
 80205be:	4640      	mov	r0, r8
 80205c0:	f7fa f92c 	bl	801a81c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80205c4:	4682      	mov	sl, r0
 80205c6:	4640      	mov	r0, r8
 80205c8:	f7fa f97c 	bl	801a8c4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80205cc:	2810      	cmp	r0, #16
 80205ce:	d82c      	bhi.n	802062a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80205d0:	e8df f010 	tbh	[pc, r0, lsl #1]
 80205d4:	00ba00ca 	.word	0x00ba00ca
 80205d8:	002b0011 	.word	0x002b0011
 80205dc:	002b002b 	.word	0x002b002b
 80205e0:	002b002b 	.word	0x002b002b
 80205e4:	002b002b 	.word	0x002b002b
 80205e8:	00c1002b 	.word	0x00c1002b
 80205ec:	002b002b 	.word	0x002b002b
 80205f0:	002b0180 	.word	0x002b0180
 80205f4:	0173      	.short	0x0173
 80205f6:	4bbc      	ldr	r3, [pc, #752]	@ (80208e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 80205f8:	6818      	ldr	r0, [r3, #0]
 80205fa:	6803      	ldr	r3, [r0, #0]
 80205fc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80205fe:	4798      	blx	r3
 8020600:	2eff      	cmp	r6, #255	@ 0xff
 8020602:	d101      	bne.n	8020608 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8020604:	0683      	lsls	r3, r0, #26
 8020606:	d506      	bpl.n	8020616 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8020608:	4633      	mov	r3, r6
 802060a:	4622      	mov	r2, r4
 802060c:	a902      	add	r1, sp, #8
 802060e:	4628      	mov	r0, r5
 8020610:	f7ff f8fc 	bl	801f80c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020614:	e009      	b.n	802062a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020616:	4640      	mov	r0, r8
 8020618:	f7fa f898 	bl	801a74c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 802061c:	b940      	cbnz	r0, 8020630 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 802061e:	4623      	mov	r3, r4
 8020620:	aa02      	add	r2, sp, #8
 8020622:	4629      	mov	r1, r5
 8020624:	4638      	mov	r0, r7
 8020626:	f7ff f9d7 	bl	801f9d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 802062a:	b009      	add	sp, #36	@ 0x24
 802062c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020630:	f10d 0918 	add.w	r9, sp, #24
 8020634:	4641      	mov	r1, r8
 8020636:	4648      	mov	r0, r9
 8020638:	f7fa f836 	bl	801a6a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 802063c:	e899 0003 	ldmia.w	r9, {r0, r1}
 8020640:	f10d 0810 	add.w	r8, sp, #16
 8020644:	e888 0003 	stmia.w	r8, {r0, r1}
 8020648:	4640      	mov	r0, r8
 802064a:	4621      	mov	r1, r4
 802064c:	f7f0 f9e4 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 8020650:	4640      	mov	r0, r8
 8020652:	f7f0 fa24 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 8020656:	2800      	cmp	r0, #0
 8020658:	d1d6      	bne.n	8020608 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 802065a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802065e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8020662:	4293      	cmp	r3, r2
 8020664:	dd12      	ble.n	802068c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 8020666:	1a9b      	subs	r3, r3, r2
 8020668:	f9b4 0000 	ldrsh.w	r0, [r4]
 802066c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020670:	f8ad 0018 	strh.w	r0, [sp, #24]
 8020674:	f8ad 201a 	strh.w	r2, [sp, #26]
 8020678:	f8ad 101c 	strh.w	r1, [sp, #28]
 802067c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020680:	464a      	mov	r2, r9
 8020682:	4633      	mov	r3, r6
 8020684:	a902      	add	r1, sp, #8
 8020686:	4628      	mov	r0, r5
 8020688:	f7ff f8c0 	bl	801f80c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 802068c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8020690:	f9b4 2000 	ldrsh.w	r2, [r4]
 8020694:	4293      	cmp	r3, r2
 8020696:	dd12      	ble.n	80206be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 8020698:	1a9b      	subs	r3, r3, r2
 802069a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 802069e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80206a2:	f8ad 2018 	strh.w	r2, [sp, #24]
 80206a6:	f8ad 001a 	strh.w	r0, [sp, #26]
 80206aa:	f8ad 301c 	strh.w	r3, [sp, #28]
 80206ae:	f8ad 101e 	strh.w	r1, [sp, #30]
 80206b2:	23ff      	movs	r3, #255	@ 0xff
 80206b4:	464a      	mov	r2, r9
 80206b6:	a902      	add	r1, sp, #8
 80206b8:	4628      	mov	r0, r5
 80206ba:	f7ff f8a7 	bl	801f80c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80206be:	4643      	mov	r3, r8
 80206c0:	aa02      	add	r2, sp, #8
 80206c2:	4629      	mov	r1, r5
 80206c4:	4638      	mov	r0, r7
 80206c6:	f7ff f987 	bl	801f9d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80206ca:	88a2      	ldrh	r2, [r4, #4]
 80206cc:	8823      	ldrh	r3, [r4, #0]
 80206ce:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80206d2:	4413      	add	r3, r2
 80206d4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80206d8:	440a      	add	r2, r1
 80206da:	b29b      	uxth	r3, r3
 80206dc:	b292      	uxth	r2, r2
 80206de:	b211      	sxth	r1, r2
 80206e0:	b218      	sxth	r0, r3
 80206e2:	4288      	cmp	r0, r1
 80206e4:	dd12      	ble.n	802070c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 80206e6:	1a9b      	subs	r3, r3, r2
 80206e8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80206ec:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80206f0:	f8ad 1018 	strh.w	r1, [sp, #24]
 80206f4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80206f8:	f8ad 001e 	strh.w	r0, [sp, #30]
 80206fc:	23ff      	movs	r3, #255	@ 0xff
 80206fe:	464a      	mov	r2, r9
 8020700:	a902      	add	r1, sp, #8
 8020702:	4628      	mov	r0, r5
 8020704:	f8ad 601a 	strh.w	r6, [sp, #26]
 8020708:	f7ff f880 	bl	801f80c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 802070c:	88e2      	ldrh	r2, [r4, #6]
 802070e:	8863      	ldrh	r3, [r4, #2]
 8020710:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8020714:	4413      	add	r3, r2
 8020716:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 802071a:	440a      	add	r2, r1
 802071c:	b29b      	uxth	r3, r3
 802071e:	b292      	uxth	r2, r2
 8020720:	b211      	sxth	r1, r2
 8020722:	b218      	sxth	r0, r3
 8020724:	4288      	cmp	r0, r1
 8020726:	dd80      	ble.n	802062a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020728:	1a9b      	subs	r3, r3, r2
 802072a:	f9b4 6000 	ldrsh.w	r6, [r4]
 802072e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020732:	f8ad 301e 	strh.w	r3, [sp, #30]
 8020736:	f8ad 6018 	strh.w	r6, [sp, #24]
 802073a:	f8ad 101a 	strh.w	r1, [sp, #26]
 802073e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8020742:	23ff      	movs	r3, #255	@ 0xff
 8020744:	464a      	mov	r2, r9
 8020746:	e761      	b.n	802060c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8020748:	4633      	mov	r3, r6
 802074a:	4622      	mov	r2, r4
 802074c:	a902      	add	r1, sp, #8
 802074e:	4628      	mov	r0, r5
 8020750:	f7ff f9b2 	bl	801fab8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8020754:	e769      	b.n	802062a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020756:	e9cd 4600 	strd	r4, r6, [sp]
 802075a:	ab02      	add	r3, sp, #8
 802075c:	4652      	mov	r2, sl
 802075e:	4629      	mov	r1, r5
 8020760:	4638      	mov	r0, r7
 8020762:	f7ff fd89 	bl	8020278 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8020766:	e760      	b.n	802062a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020768:	4640      	mov	r0, r8
 802076a:	f7f9 ffef 	bl	801a74c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 802076e:	b948      	cbnz	r0, 8020784 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8020770:	683b      	ldr	r3, [r7, #0]
 8020772:	e9cd 6000 	strd	r6, r0, [sp]
 8020776:	aa02      	add	r2, sp, #8
 8020778:	68de      	ldr	r6, [r3, #12]
 802077a:	4629      	mov	r1, r5
 802077c:	4623      	mov	r3, r4
 802077e:	4638      	mov	r0, r7
 8020780:	47b0      	blx	r6
 8020782:	e752      	b.n	802062a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8020784:	f10d 0918 	add.w	r9, sp, #24
 8020788:	4641      	mov	r1, r8
 802078a:	4648      	mov	r0, r9
 802078c:	f7f9 ff8c 	bl	801a6a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8020790:	e899 0003 	ldmia.w	r9, {r0, r1}
 8020794:	f10d 0810 	add.w	r8, sp, #16
 8020798:	e888 0003 	stmia.w	r8, {r0, r1}
 802079c:	4640      	mov	r0, r8
 802079e:	4621      	mov	r1, r4
 80207a0:	f7f0 f93a 	bl	8010a18 <_ZN8touchgfx4RectaNERKS0_>
 80207a4:	4640      	mov	r0, r8
 80207a6:	f7f0 f97a 	bl	8010a9e <_ZNK8touchgfx4Rect7isEmptyEv>
 80207aa:	b138      	cbz	r0, 80207bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 80207ac:	9600      	str	r6, [sp, #0]
 80207ae:	4623      	mov	r3, r4
 80207b0:	aa02      	add	r2, sp, #8
 80207b2:	4651      	mov	r1, sl
 80207b4:	4628      	mov	r0, r5
 80207b6:	f7ff fdbd 	bl	8020334 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80207ba:	e736      	b.n	802062a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80207bc:	683b      	ldr	r3, [r7, #0]
 80207be:	e9cd 6000 	strd	r6, r0, [sp]
 80207c2:	aa02      	add	r2, sp, #8
 80207c4:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80207c8:	4629      	mov	r1, r5
 80207ca:	4643      	mov	r3, r8
 80207cc:	4638      	mov	r0, r7
 80207ce:	47d8      	blx	fp
 80207d0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80207d4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80207d8:	4293      	cmp	r3, r2
 80207da:	dd13      	ble.n	8020804 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 80207dc:	f9b4 0000 	ldrsh.w	r0, [r4]
 80207e0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80207e4:	f8ad 0018 	strh.w	r0, [sp, #24]
 80207e8:	1a9b      	subs	r3, r3, r2
 80207ea:	f8ad 201a 	strh.w	r2, [sp, #26]
 80207ee:	f8ad 101c 	strh.w	r1, [sp, #28]
 80207f2:	f8ad 301e 	strh.w	r3, [sp, #30]
 80207f6:	9600      	str	r6, [sp, #0]
 80207f8:	464b      	mov	r3, r9
 80207fa:	aa02      	add	r2, sp, #8
 80207fc:	4651      	mov	r1, sl
 80207fe:	4628      	mov	r0, r5
 8020800:	f7ff fd98 	bl	8020334 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020804:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8020808:	f9b4 2000 	ldrsh.w	r2, [r4]
 802080c:	4293      	cmp	r3, r2
 802080e:	dd13      	ble.n	8020838 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8020810:	1a9b      	subs	r3, r3, r2
 8020812:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8020816:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 802081a:	f8ad 2018 	strh.w	r2, [sp, #24]
 802081e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8020822:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020826:	f8ad 101e 	strh.w	r1, [sp, #30]
 802082a:	9600      	str	r6, [sp, #0]
 802082c:	464b      	mov	r3, r9
 802082e:	aa02      	add	r2, sp, #8
 8020830:	4651      	mov	r1, sl
 8020832:	4628      	mov	r0, r5
 8020834:	f7ff fd7e 	bl	8020334 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8020838:	88a2      	ldrh	r2, [r4, #4]
 802083a:	8823      	ldrh	r3, [r4, #0]
 802083c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8020840:	4413      	add	r3, r2
 8020842:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020846:	440a      	add	r2, r1
 8020848:	b29b      	uxth	r3, r3
 802084a:	b292      	uxth	r2, r2
 802084c:	b211      	sxth	r1, r2
 802084e:	b218      	sxth	r0, r3
 8020850:	4288      	cmp	r0, r1
 8020852:	dd13      	ble.n	802087c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8020854:	1a9b      	subs	r3, r3, r2
 8020856:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 802085a:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 802085e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8020862:	f8ad 301c 	strh.w	r3, [sp, #28]
 8020866:	f8ad 001e 	strh.w	r0, [sp, #30]
 802086a:	9600      	str	r6, [sp, #0]
 802086c:	464b      	mov	r3, r9
 802086e:	aa02      	add	r2, sp, #8
 8020870:	4651      	mov	r1, sl
 8020872:	4628      	mov	r0, r5
 8020874:	f8ad 701a 	strh.w	r7, [sp, #26]
 8020878:	f7ff fd5c 	bl	8020334 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 802087c:	88e2      	ldrh	r2, [r4, #6]
 802087e:	8863      	ldrh	r3, [r4, #2]
 8020880:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8020884:	4413      	add	r3, r2
 8020886:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 802088a:	440a      	add	r2, r1
 802088c:	b29b      	uxth	r3, r3
 802088e:	b292      	uxth	r2, r2
 8020890:	b211      	sxth	r1, r2
 8020892:	b218      	sxth	r0, r3
 8020894:	4288      	cmp	r0, r1
 8020896:	f77f aec8 	ble.w	802062a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 802089a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802089e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80208a2:	f8ad 7018 	strh.w	r7, [sp, #24]
 80208a6:	1a9b      	subs	r3, r3, r2
 80208a8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80208ac:	f8ad 101a 	strh.w	r1, [sp, #26]
 80208b0:	f8ad 001c 	strh.w	r0, [sp, #28]
 80208b4:	9600      	str	r6, [sp, #0]
 80208b6:	464b      	mov	r3, r9
 80208b8:	e77a      	b.n	80207b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 80208ba:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 80208be:	2800      	cmp	r0, #0
 80208c0:	f43f aeb3 	beq.w	802062a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80208c4:	6803      	ldr	r3, [r0, #0]
 80208c6:	9600      	str	r6, [sp, #0]
 80208c8:	68de      	ldr	r6, [r3, #12]
 80208ca:	4623      	mov	r3, r4
 80208cc:	aa02      	add	r2, sp, #8
 80208ce:	4629      	mov	r1, r5
 80208d0:	47b0      	blx	r6
 80208d2:	e6aa      	b.n	802062a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80208d4:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 80208d8:	2800      	cmp	r0, #0
 80208da:	f43f aea6 	beq.w	802062a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80208de:	6803      	ldr	r3, [r0, #0]
 80208e0:	9600      	str	r6, [sp, #0]
 80208e2:	689e      	ldr	r6, [r3, #8]
 80208e4:	e7f1      	b.n	80208ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 80208e6:	bf00      	nop
 80208e8:	20013f4c 	.word	0x20013f4c

080208ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80208ec:	b180      	cbz	r0, 8020910 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80208ee:	2903      	cmp	r1, #3
 80208f0:	d81c      	bhi.n	802092c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80208f2:	e8df f001 	tbb	[pc, r1]
 80208f6:	1d02      	.short	0x1d02
 80208f8:	1f08      	.short	0x1f08
 80208fa:	4b10      	ldr	r3, [pc, #64]	@ (802093c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80208fc:	8818      	ldrh	r0, [r3, #0]
 80208fe:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020902:	4240      	negs	r0, r0
 8020904:	4770      	bx	lr
 8020906:	4b0d      	ldr	r3, [pc, #52]	@ (802093c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8020908:	8818      	ldrh	r0, [r3, #0]
 802090a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802090e:	4770      	bx	lr
 8020910:	2903      	cmp	r1, #3
 8020912:	d80b      	bhi.n	802092c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8020914:	a301      	add	r3, pc, #4	@ (adr r3, 802091c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8020916:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 802091a:	bf00      	nop
 802091c:	08020931 	.word	0x08020931
 8020920:	08020907 	.word	0x08020907
 8020924:	08020935 	.word	0x08020935
 8020928:	080208fb 	.word	0x080208fb
 802092c:	2000      	movs	r0, #0
 802092e:	4770      	bx	lr
 8020930:	2001      	movs	r0, #1
 8020932:	4770      	bx	lr
 8020934:	f04f 30ff 	mov.w	r0, #4294967295
 8020938:	4770      	bx	lr
 802093a:	bf00      	nop
 802093c:	20013f46 	.word	0x20013f46

08020940 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8020940:	b180      	cbz	r0, 8020964 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8020942:	2903      	cmp	r1, #3
 8020944:	d81c      	bhi.n	8020980 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8020946:	e8df f001 	tbb	[pc, r1]
 802094a:	021d      	.short	0x021d
 802094c:	071f      	.short	0x071f
 802094e:	4b10      	ldr	r3, [pc, #64]	@ (8020990 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8020950:	8818      	ldrh	r0, [r3, #0]
 8020952:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020956:	4770      	bx	lr
 8020958:	4b0d      	ldr	r3, [pc, #52]	@ (8020990 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 802095a:	8818      	ldrh	r0, [r3, #0]
 802095c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8020960:	4240      	negs	r0, r0
 8020962:	4770      	bx	lr
 8020964:	2903      	cmp	r1, #3
 8020966:	d80b      	bhi.n	8020980 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8020968:	a301      	add	r3, pc, #4	@ (adr r3, 8020970 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 802096a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 802096e:	bf00      	nop
 8020970:	0802094f 	.word	0x0802094f
 8020974:	08020989 	.word	0x08020989
 8020978:	08020959 	.word	0x08020959
 802097c:	08020985 	.word	0x08020985
 8020980:	2000      	movs	r0, #0
 8020982:	4770      	bx	lr
 8020984:	2001      	movs	r0, #1
 8020986:	4770      	bx	lr
 8020988:	f04f 30ff 	mov.w	r0, #4294967295
 802098c:	4770      	bx	lr
 802098e:	bf00      	nop
 8020990:	20013f46 	.word	0x20013f46

08020994 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8020994:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020998:	b099      	sub	sp, #100	@ 0x64
 802099a:	910d      	str	r1, [sp, #52]	@ 0x34
 802099c:	a914      	add	r1, sp, #80	@ 0x50
 802099e:	e881 000c 	stmia.w	r1, {r2, r3}
 80209a2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 80209a6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80209a8:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 80209ac:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80209b0:	9310      	str	r3, [sp, #64]	@ 0x40
 80209b2:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 80209b6:	9308      	str	r3, [sp, #32]
 80209b8:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 80209bc:	9309      	str	r3, [sp, #36]	@ 0x24
 80209be:	7b4b      	ldrb	r3, [r1, #13]
 80209c0:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 80209c4:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 80209c8:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 80209cc:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 80209ce:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 80209d2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 80209d6:	ea4f 1843 	mov.w	r8, r3, lsl #5
 80209da:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 80209de:	f891 8006 	ldrb.w	r8, [r1, #6]
 80209e2:	ea58 0800 	orrs.w	r8, r8, r0
 80209e6:	f000 81ce 	beq.w	8020d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 80209ea:	011b      	lsls	r3, r3, #4
 80209ec:	79c8      	ldrb	r0, [r1, #7]
 80209ee:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80209f2:	4303      	orrs	r3, r0
 80209f4:	930c      	str	r3, [sp, #48]	@ 0x30
 80209f6:	f000 81c6 	beq.w	8020d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 80209fa:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80209fe:	b29b      	uxth	r3, r3
 8020a00:	2d00      	cmp	r5, #0
 8020a02:	f000 812c 	beq.w	8020c5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 8020a06:	1aed      	subs	r5, r5, r3
 8020a08:	b2ad      	uxth	r5, r5
 8020a0a:	0429      	lsls	r1, r5, #16
 8020a0c:	d502      	bpl.n	8020a14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8020a0e:	1b64      	subs	r4, r4, r5
 8020a10:	b224      	sxth	r4, r4
 8020a12:	2500      	movs	r5, #0
 8020a14:	f9b2 0000 	ldrsh.w	r0, [r2]
 8020a18:	8891      	ldrh	r1, [r2, #4]
 8020a1a:	4284      	cmp	r4, r0
 8020a1c:	b283      	uxth	r3, r0
 8020a1e:	bfb8      	it	lt
 8020a20:	18ed      	addlt	r5, r5, r3
 8020a22:	440b      	add	r3, r1
 8020a24:	b21b      	sxth	r3, r3
 8020a26:	930a      	str	r3, [sp, #40]	@ 0x28
 8020a28:	88d3      	ldrh	r3, [r2, #6]
 8020a2a:	8852      	ldrh	r2, [r2, #2]
 8020a2c:	4413      	add	r3, r2
 8020a2e:	b21b      	sxth	r3, r3
 8020a30:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020a32:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020a34:	930e      	str	r3, [sp, #56]	@ 0x38
 8020a36:	bfb8      	it	lt
 8020a38:	1b2c      	sublt	r4, r5, r4
 8020a3a:	4bb5      	ldr	r3, [pc, #724]	@ (8020d10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8020a3c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8020a3e:	f893 b000 	ldrb.w	fp, [r3]
 8020a42:	bfbc      	itt	lt
 8020a44:	b2a5      	uxthlt	r5, r4
 8020a46:	4604      	movlt	r4, r0
 8020a48:	4653      	mov	r3, sl
 8020a4a:	4621      	mov	r1, r4
 8020a4c:	a814      	add	r0, sp, #80	@ 0x50
 8020a4e:	f7f5 fc82 	bl	8016356 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8020a52:	4621      	mov	r1, r4
 8020a54:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8020a58:	4653      	mov	r3, sl
 8020a5a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8020a5c:	a814      	add	r0, sp, #80	@ 0x50
 8020a5e:	f7f5 fc97 	bl	8016390 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8020a62:	a918      	add	r1, sp, #96	@ 0x60
 8020a64:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8020a68:	a817      	add	r0, sp, #92	@ 0x5c
 8020a6a:	f7f5 fdbd 	bl	80165e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8020a6e:	f1ba 0f00 	cmp.w	sl, #0
 8020a72:	f040 80f7 	bne.w	8020c64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 8020a76:	f1bb 0f01 	cmp.w	fp, #1
 8020a7a:	f040 80fb 	bne.w	8020c74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 8020a7e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020a80:	2b00      	cmp	r3, #0
 8020a82:	f040 81a8 	bne.w	8020dd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 8020a86:	fa1f f288 	uxth.w	r2, r8
 8020a8a:	b905      	cbnz	r5, 8020a8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 8020a8c:	b15e      	cbz	r6, 8020aa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8020a8e:	9808      	ldr	r0, [sp, #32]
 8020a90:	fb06 5302 	mla	r3, r6, r2, r5
 8020a94:	4343      	muls	r3, r0
 8020a96:	4631      	mov	r1, r6
 8020a98:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 8020a9c:	f003 0607 	and.w	r6, r3, #7
 8020aa0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020aa2:	1a5b      	subs	r3, r3, r1
 8020aa4:	930e      	str	r3, [sp, #56]	@ 0x38
 8020aa6:	f10b 31ff 	add.w	r1, fp, #4294967295
 8020aaa:	424b      	negs	r3, r1
 8020aac:	414b      	adcs	r3, r1
 8020aae:	4618      	mov	r0, r3
 8020ab0:	4651      	mov	r1, sl
 8020ab2:	930c      	str	r3, [sp, #48]	@ 0x30
 8020ab4:	f7ff ff1a 	bl	80208ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8020ab8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020aba:	4683      	mov	fp, r0
 8020abc:	4618      	mov	r0, r3
 8020abe:	f7ff ff3f 	bl	8020940 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8020ac2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8020ac4:	4603      	mov	r3, r0
 8020ac6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8020ac8:	eba1 0a00 	sub.w	sl, r1, r0
 8020acc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8020ace:	458a      	cmp	sl, r1
 8020ad0:	bfa8      	it	ge
 8020ad2:	468a      	movge	sl, r1
 8020ad4:	f1ba 0f00 	cmp.w	sl, #0
 8020ad8:	f340 8155 	ble.w	8020d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8020adc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8020ade:	1b64      	subs	r4, r4, r5
 8020ae0:	1b0c      	subs	r4, r1, r4
 8020ae2:	4544      	cmp	r4, r8
 8020ae4:	bfd4      	ite	le
 8020ae6:	ebc5 0504 	rsble	r5, r5, r4
 8020aea:	ebc5 0508 	rsbgt	r5, r5, r8
 8020aee:	2d00      	cmp	r5, #0
 8020af0:	f340 8149 	ble.w	8020d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8020af4:	9908      	ldr	r1, [sp, #32]
 8020af6:	1b52      	subs	r2, r2, r5
 8020af8:	434a      	muls	r2, r1
 8020afa:	920e      	str	r2, [sp, #56]	@ 0x38
 8020afc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8020afe:	2a00      	cmp	r2, #0
 8020b00:	f040 8175 	bne.w	8020dee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 8020b04:	4a83      	ldr	r2, [pc, #524]	@ (8020d14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8020b06:	930a      	str	r3, [sp, #40]	@ 0x28
 8020b08:	6810      	ldr	r0, [r2, #0]
 8020b0a:	6802      	ldr	r2, [r0, #0]
 8020b0c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8020b0e:	4790      	blx	r2
 8020b10:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020b12:	9908      	ldr	r1, [sp, #32]
 8020b14:	2201      	movs	r2, #1
 8020b16:	408a      	lsls	r2, r1
 8020b18:	3a01      	subs	r2, #1
 8020b1a:	497f      	ldr	r1, [pc, #508]	@ (8020d18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 8020b1c:	b2d2      	uxtb	r2, r2
 8020b1e:	880c      	ldrh	r4, [r1, #0]
 8020b20:	920c      	str	r2, [sp, #48]	@ 0x30
 8020b22:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 8020b26:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 8020b2a:	fb04 1202 	mla	r2, r4, r2, r1
 8020b2e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8020b32:	ea4f 2419 	mov.w	r4, r9, lsr #8
 8020b36:	920a      	str	r2, [sp, #40]	@ 0x28
 8020b38:	f3c9 4207 	ubfx	r2, r9, #16, #8
 8020b3c:	9212      	str	r2, [sp, #72]	@ 0x48
 8020b3e:	b2e2      	uxtb	r2, r4
 8020b40:	9211      	str	r2, [sp, #68]	@ 0x44
 8020b42:	fa5f f289 	uxtb.w	r2, r9
 8020b46:	9210      	str	r2, [sp, #64]	@ 0x40
 8020b48:	4a74      	ldr	r2, [pc, #464]	@ (8020d1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8020b4a:	ea4f 1159 	mov.w	r1, r9, lsr #5
 8020b4e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020b52:	4022      	ands	r2, r4
 8020b54:	430a      	orrs	r2, r1
 8020b56:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 8020b5a:	ea42 0209 	orr.w	r2, r2, r9
 8020b5e:	ea4f 014b 	mov.w	r1, fp, lsl #1
 8020b62:	b292      	uxth	r2, r2
 8020b64:	fb05 3b1b 	mls	fp, r5, fp, r3
 8020b68:	920f      	str	r2, [sp, #60]	@ 0x3c
 8020b6a:	460b      	mov	r3, r1
 8020b6c:	783a      	ldrb	r2, [r7, #0]
 8020b6e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020b70:	436b      	muls	r3, r5
 8020b72:	4132      	asrs	r2, r6
 8020b74:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 8020b78:	b2d2      	uxtb	r2, r2
 8020b7a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020b7c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8020b80:	f0c0 8149 	bcc.w	8020e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 8020b84:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8020b88:	46a9      	mov	r9, r5
 8020b8a:	f119 39ff 	adds.w	r9, r9, #4294967295
 8020b8e:	f0c0 8132 	bcc.w	8020df6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 8020b92:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020b94:	4013      	ands	r3, r2
 8020b96:	d054      	beq.n	8020c42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 8020b98:	20ff      	movs	r0, #255	@ 0xff
 8020b9a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8020b9c:	fb90 f1f1 	sdiv	r1, r0, r1
 8020ba0:	434b      	muls	r3, r1
 8020ba2:	2bfe      	cmp	r3, #254	@ 0xfe
 8020ba4:	dd03      	ble.n	8020bae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 8020ba6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8020ba8:	4281      	cmp	r1, r0
 8020baa:	f000 8122 	beq.w	8020df2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 8020bae:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8020bb0:	f8b8 4000 	ldrh.w	r4, [r8]
 8020bb4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8020bb6:	fb11 f303 	smulbb	r3, r1, r3
 8020bba:	b29b      	uxth	r3, r3
 8020bbc:	1c59      	adds	r1, r3, #1
 8020bbe:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8020bc2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020bc6:	fa1f fe83 	uxth.w	lr, r3
 8020bca:	1221      	asrs	r1, r4, #8
 8020bcc:	fb10 fb0e 	smulbb	fp, r0, lr
 8020bd0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020bd4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020bd6:	43db      	mvns	r3, r3
 8020bd8:	b2db      	uxtb	r3, r3
 8020bda:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8020bde:	fb01 b103 	mla	r1, r1, r3, fp
 8020be2:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 8020be6:	fb10 fb0e 	smulbb	fp, r0, lr
 8020bea:	00e4      	lsls	r4, r4, #3
 8020bec:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8020bee:	b2e4      	uxtb	r4, r4
 8020bf0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020bf4:	fb10 fe0e 	smulbb	lr, r0, lr
 8020bf8:	fb04 e403 	mla	r4, r4, r3, lr
 8020bfc:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8020c00:	b289      	uxth	r1, r1
 8020c02:	b2a4      	uxth	r4, r4
 8020c04:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 8020c08:	fb0c bc03 	mla	ip, ip, r3, fp
 8020c0c:	1c4b      	adds	r3, r1, #1
 8020c0e:	f104 0b01 	add.w	fp, r4, #1
 8020c12:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020c16:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 8020c1a:	fa1f fc8c 	uxth.w	ip, ip
 8020c1e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8020c22:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8020c26:	ea4b 0101 	orr.w	r1, fp, r1
 8020c2a:	f10c 0b01 	add.w	fp, ip, #1
 8020c2e:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8020c32:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8020c36:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8020c3a:	ea41 010b 	orr.w	r1, r1, fp
 8020c3e:	f8a8 1000 	strh.w	r1, [r8]
 8020c42:	9b08      	ldr	r3, [sp, #32]
 8020c44:	441e      	add	r6, r3
 8020c46:	b2b6      	uxth	r6, r6
 8020c48:	2e07      	cmp	r6, #7
 8020c4a:	bf98      	it	ls
 8020c4c:	411a      	asrls	r2, r3
 8020c4e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020c50:	bf89      	itett	hi
 8020c52:	787a      	ldrbhi	r2, [r7, #1]
 8020c54:	b2d2      	uxtbls	r2, r2
 8020c56:	3701      	addhi	r7, #1
 8020c58:	2600      	movhi	r6, #0
 8020c5a:	4498      	add	r8, r3
 8020c5c:	e795      	b.n	8020b8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 8020c5e:	441c      	add	r4, r3
 8020c60:	b224      	sxth	r4, r4
 8020c62:	e6d7      	b.n	8020a14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8020c64:	f1ba 0f01 	cmp.w	sl, #1
 8020c68:	f47f af09 	bne.w	8020a7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8020c6c:	f1bb 0f01 	cmp.w	fp, #1
 8020c70:	f47f af05 	bne.w	8020a7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8020c74:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020c76:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8020c78:	1a99      	subs	r1, r3, r2
 8020c7a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020c7c:	1b9b      	subs	r3, r3, r6
 8020c7e:	4299      	cmp	r1, r3
 8020c80:	bfa8      	it	ge
 8020c82:	4619      	movge	r1, r3
 8020c84:	2900      	cmp	r1, #0
 8020c86:	9112      	str	r1, [sp, #72]	@ 0x48
 8020c88:	dd7d      	ble.n	8020d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8020c8a:	4a22      	ldr	r2, [pc, #136]	@ (8020d14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8020c8c:	9211      	str	r2, [sp, #68]	@ 0x44
 8020c8e:	6810      	ldr	r0, [r2, #0]
 8020c90:	6803      	ldr	r3, [r0, #0]
 8020c92:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8020c94:	4798      	blx	r3
 8020c96:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8020c9a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8020c9c:	d006      	beq.n	8020cac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8020c9e:	9b08      	ldr	r3, [sp, #32]
 8020ca0:	2b04      	cmp	r3, #4
 8020ca2:	d133      	bne.n	8020d0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 8020ca4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020ca6:	3300      	adds	r3, #0
 8020ca8:	bf18      	it	ne
 8020caa:	2301      	movne	r3, #1
 8020cac:	0582      	lsls	r2, r0, #22
 8020cae:	fa1f fc88 	uxth.w	ip, r8
 8020cb2:	f140 80b9 	bpl.w	8020e28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8020cb6:	9808      	ldr	r0, [sp, #32]
 8020cb8:	2808      	cmp	r0, #8
 8020cba:	f040 80b5 	bne.w	8020e28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8020cbe:	2b00      	cmp	r3, #0
 8020cc0:	d064      	beq.n	8020d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 8020cc2:	f10c 0c01 	add.w	ip, ip, #1
 8020cc6:	f02c 0301 	bic.w	r3, ip, #1
 8020cca:	b29b      	uxth	r3, r3
 8020ccc:	bb45      	cbnz	r5, 8020d20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8020cce:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020cd0:	eb08 0004 	add.w	r0, r8, r4
 8020cd4:	4290      	cmp	r0, r2
 8020cd6:	dc23      	bgt.n	8020d20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8020cd8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020cda:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8020cde:	6810      	ldr	r0, [r2, #0]
 8020ce0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8020ce4:	6804      	ldr	r4, [r0, #0]
 8020ce6:	9506      	str	r5, [sp, #24]
 8020ce8:	f44f 7580 	mov.w	r5, #256	@ 0x100
 8020cec:	9505      	str	r5, [sp, #20]
 8020cee:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8020cf0:	9302      	str	r3, [sp, #8]
 8020cf2:	b289      	uxth	r1, r1
 8020cf4:	e9cd 3100 	strd	r3, r1, [sp]
 8020cf8:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8020cfc:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8020d00:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 8020d02:	4673      	mov	r3, lr
 8020d04:	fb06 710c 	mla	r1, r6, ip, r7
 8020d08:	47a0      	blx	r4
 8020d0a:	e03c      	b.n	8020d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8020d0c:	2300      	movs	r3, #0
 8020d0e:	e7cd      	b.n	8020cac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8020d10:	20013f44 	.word	0x20013f44
 8020d14:	20013f4c 	.word	0x20013f4c
 8020d18:	20013f46 	.word	0x20013f46
 8020d1c:	00fff800 	.word	0x00fff800
 8020d20:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020d22:	eba4 0e05 	sub.w	lr, r4, r5
 8020d26:	eba2 0e0e 	sub.w	lr, r2, lr
 8020d2a:	45c6      	cmp	lr, r8
 8020d2c:	bfd4      	ite	le
 8020d2e:	ebc5 0e0e 	rsble	lr, r5, lr
 8020d32:	ebc5 0e08 	rsbgt	lr, r5, r8
 8020d36:	f1be 0f00 	cmp.w	lr, #0
 8020d3a:	d024      	beq.n	8020d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8020d3c:	07e8      	lsls	r0, r5, #31
 8020d3e:	f53f ae9e 	bmi.w	8020a7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8020d42:	f01e 0001 	ands.w	r0, lr, #1
 8020d46:	f47f ae9a 	bne.w	8020a7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8020d4a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020d4c:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 8020d50:	6814      	ldr	r4, [r2, #0]
 8020d52:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8020d56:	086d      	lsrs	r5, r5, #1
 8020d58:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8020d5c:	fb06 560c 	mla	r6, r6, ip, r5
 8020d60:	6825      	ldr	r5, [r4, #0]
 8020d62:	9006      	str	r0, [sp, #24]
 8020d64:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8020d68:	9005      	str	r0, [sp, #20]
 8020d6a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8020d6c:	9302      	str	r3, [sp, #8]
 8020d6e:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8020d72:	b289      	uxth	r1, r1
 8020d74:	fa1f f38e 	uxth.w	r3, lr
 8020d78:	9101      	str	r1, [sp, #4]
 8020d7a:	9300      	str	r3, [sp, #0]
 8020d7c:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 8020d7e:	4643      	mov	r3, r8
 8020d80:	19b9      	adds	r1, r7, r6
 8020d82:	4620      	mov	r0, r4
 8020d84:	47a8      	blx	r5
 8020d86:	b019      	add	sp, #100	@ 0x64
 8020d88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d8c:	4a28      	ldr	r2, [pc, #160]	@ (8020e30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 8020d8e:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8020d92:	6810      	ldr	r0, [r2, #0]
 8020d94:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8020d98:	f8d0 a000 	ldr.w	sl, [r0]
 8020d9c:	9306      	str	r3, [sp, #24]
 8020d9e:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8020da2:	9305      	str	r3, [sp, #20]
 8020da4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020da6:	f8cd c008 	str.w	ip, [sp, #8]
 8020daa:	e9cd 9303 	strd	r9, r3, [sp, #12]
 8020dae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020db0:	1b64      	subs	r4, r4, r5
 8020db2:	1b1c      	subs	r4, r3, r4
 8020db4:	fb06 5608 	mla	r6, r6, r8, r5
 8020db8:	4544      	cmp	r4, r8
 8020dba:	bfd4      	ite	le
 8020dbc:	ebc5 0504 	rsble	r5, r5, r4
 8020dc0:	ebc5 0508 	rsbgt	r5, r5, r8
 8020dc4:	b289      	uxth	r1, r1
 8020dc6:	b2ad      	uxth	r5, r5
 8020dc8:	9101      	str	r1, [sp, #4]
 8020dca:	9500      	str	r5, [sp, #0]
 8020dcc:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 8020dd0:	4673      	mov	r3, lr
 8020dd2:	19b9      	adds	r1, r7, r6
 8020dd4:	e798      	b.n	8020d08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8020dd6:	2208      	movs	r2, #8
 8020dd8:	9b08      	ldr	r3, [sp, #32]
 8020dda:	fb92 f3f3 	sdiv	r3, r2, r3
 8020dde:	1e5a      	subs	r2, r3, #1
 8020de0:	4442      	add	r2, r8
 8020de2:	fb92 f2f3 	sdiv	r2, r2, r3
 8020de6:	fb12 f203 	smulbb	r2, r2, r3
 8020dea:	b292      	uxth	r2, r2
 8020dec:	e64d      	b.n	8020a8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 8020dee:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8020df0:	e68f      	b.n	8020b12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 8020df2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8020df4:	e723      	b.n	8020c3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8020df6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020df8:	b143      	cbz	r3, 8020e0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 8020dfa:	441e      	add	r6, r3
 8020dfc:	b2b6      	uxth	r6, r6
 8020dfe:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 8020e02:	f006 0607 	and.w	r6, r6, #7
 8020e06:	783a      	ldrb	r2, [r7, #0]
 8020e08:	4132      	asrs	r2, r6
 8020e0a:	b2d2      	uxtb	r2, r2
 8020e0c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8020e0e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8020e10:	4419      	add	r1, r3
 8020e12:	910a      	str	r1, [sp, #40]	@ 0x28
 8020e14:	e6b2      	b.n	8020b7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 8020e16:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020e18:	2b00      	cmp	r3, #0
 8020e1a:	d1b4      	bne.n	8020d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8020e1c:	4b04      	ldr	r3, [pc, #16]	@ (8020e30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 8020e1e:	6818      	ldr	r0, [r3, #0]
 8020e20:	6803      	ldr	r3, [r0, #0]
 8020e22:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020e24:	4798      	blx	r3
 8020e26:	e7ae      	b.n	8020d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8020e28:	2b00      	cmp	r3, #0
 8020e2a:	f47f af4a 	bne.w	8020cc2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 8020e2e:	e626      	b.n	8020a7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8020e30:	20013f4c 	.word	0x20013f4c

08020e34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8020e34:	b538      	push	{r3, r4, r5, lr}
 8020e36:	4c15      	ldr	r4, [pc, #84]	@ (8020e8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8020e38:	7823      	ldrb	r3, [r4, #0]
 8020e3a:	f3bf 8f5b 	dmb	ish
 8020e3e:	07da      	lsls	r2, r3, #31
 8020e40:	4605      	mov	r5, r0
 8020e42:	d40b      	bmi.n	8020e5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020e44:	4620      	mov	r0, r4
 8020e46:	f008 fc67 	bl	8029718 <__cxa_guard_acquire>
 8020e4a:	b138      	cbz	r0, 8020e5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020e4c:	4620      	mov	r0, r4
 8020e4e:	f008 fc6f 	bl	8029730 <__cxa_guard_release>
 8020e52:	4a0f      	ldr	r2, [pc, #60]	@ (8020e90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020e54:	490f      	ldr	r1, [pc, #60]	@ (8020e94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8020e56:	4810      	ldr	r0, [pc, #64]	@ (8020e98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8020e58:	f008 fc57 	bl	802970a <__aeabi_atexit>
 8020e5c:	4c0f      	ldr	r4, [pc, #60]	@ (8020e9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8020e5e:	7823      	ldrb	r3, [r4, #0]
 8020e60:	f3bf 8f5b 	dmb	ish
 8020e64:	07db      	lsls	r3, r3, #31
 8020e66:	d40b      	bmi.n	8020e80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020e68:	4620      	mov	r0, r4
 8020e6a:	f008 fc55 	bl	8029718 <__cxa_guard_acquire>
 8020e6e:	b138      	cbz	r0, 8020e80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020e70:	4620      	mov	r0, r4
 8020e72:	f008 fc5d 	bl	8029730 <__cxa_guard_release>
 8020e76:	4a06      	ldr	r2, [pc, #24]	@ (8020e90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020e78:	4909      	ldr	r1, [pc, #36]	@ (8020ea0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8020e7a:	480a      	ldr	r0, [pc, #40]	@ (8020ea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8020e7c:	f008 fc45 	bl	802970a <__aeabi_atexit>
 8020e80:	4b05      	ldr	r3, [pc, #20]	@ (8020e98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8020e82:	616b      	str	r3, [r5, #20]
 8020e84:	4b07      	ldr	r3, [pc, #28]	@ (8020ea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8020e86:	61ab      	str	r3, [r5, #24]
 8020e88:	bd38      	pop	{r3, r4, r5, pc}
 8020e8a:	bf00      	nop
 8020e8c:	20014030 	.word	0x20014030
 8020e90:	20000000 	.word	0x20000000
 8020e94:	0801cf3d 	.word	0x0801cf3d
 8020e98:	200000ec 	.word	0x200000ec
 8020e9c:	20014034 	.word	0x20014034
 8020ea0:	0801cf3b 	.word	0x0801cf3b
 8020ea4:	200000f0 	.word	0x200000f0

08020ea8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8020ea8:	b538      	push	{r3, r4, r5, lr}
 8020eaa:	4c15      	ldr	r4, [pc, #84]	@ (8020f00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8020eac:	7823      	ldrb	r3, [r4, #0]
 8020eae:	f3bf 8f5b 	dmb	ish
 8020eb2:	07da      	lsls	r2, r3, #31
 8020eb4:	4605      	mov	r5, r0
 8020eb6:	d40b      	bmi.n	8020ed0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8020eb8:	4620      	mov	r0, r4
 8020eba:	f008 fc2d 	bl	8029718 <__cxa_guard_acquire>
 8020ebe:	b138      	cbz	r0, 8020ed0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8020ec0:	4620      	mov	r0, r4
 8020ec2:	f008 fc35 	bl	8029730 <__cxa_guard_release>
 8020ec6:	4a0f      	ldr	r2, [pc, #60]	@ (8020f04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8020ec8:	490f      	ldr	r1, [pc, #60]	@ (8020f08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8020eca:	4810      	ldr	r0, [pc, #64]	@ (8020f0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8020ecc:	f008 fc1d 	bl	802970a <__aeabi_atexit>
 8020ed0:	4c0f      	ldr	r4, [pc, #60]	@ (8020f10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8020ed2:	7823      	ldrb	r3, [r4, #0]
 8020ed4:	f3bf 8f5b 	dmb	ish
 8020ed8:	07db      	lsls	r3, r3, #31
 8020eda:	d40b      	bmi.n	8020ef4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8020edc:	4620      	mov	r0, r4
 8020ede:	f008 fc1b 	bl	8029718 <__cxa_guard_acquire>
 8020ee2:	b138      	cbz	r0, 8020ef4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8020ee4:	4620      	mov	r0, r4
 8020ee6:	f008 fc23 	bl	8029730 <__cxa_guard_release>
 8020eea:	4a06      	ldr	r2, [pc, #24]	@ (8020f04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8020eec:	4909      	ldr	r1, [pc, #36]	@ (8020f14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8020eee:	480a      	ldr	r0, [pc, #40]	@ (8020f18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8020ef0:	f008 fc0b 	bl	802970a <__aeabi_atexit>
 8020ef4:	4b05      	ldr	r3, [pc, #20]	@ (8020f0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8020ef6:	60eb      	str	r3, [r5, #12]
 8020ef8:	4b07      	ldr	r3, [pc, #28]	@ (8020f18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8020efa:	612b      	str	r3, [r5, #16]
 8020efc:	bd38      	pop	{r3, r4, r5, pc}
 8020efe:	bf00      	nop
 8020f00:	20014008 	.word	0x20014008
 8020f04:	20000000 	.word	0x20000000
 8020f08:	0801cf41 	.word	0x0801cf41
 8020f0c:	200000c4 	.word	0x200000c4
 8020f10:	2001400c 	.word	0x2001400c
 8020f14:	0801cf3f 	.word	0x0801cf3f
 8020f18:	200000c8 	.word	0x200000c8

08020f1c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8020f1c:	b510      	push	{r4, lr}
 8020f1e:	4604      	mov	r4, r0
 8020f20:	f7ff ff88 	bl	8020e34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8020f24:	4620      	mov	r0, r4
 8020f26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020f2a:	f7ff bfbd 	b.w	8020ea8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08020f30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8020f30:	b538      	push	{r3, r4, r5, lr}
 8020f32:	4c15      	ldr	r4, [pc, #84]	@ (8020f88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8020f34:	7823      	ldrb	r3, [r4, #0]
 8020f36:	f3bf 8f5b 	dmb	ish
 8020f3a:	07da      	lsls	r2, r3, #31
 8020f3c:	4605      	mov	r5, r0
 8020f3e:	d40b      	bmi.n	8020f58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8020f40:	4620      	mov	r0, r4
 8020f42:	f008 fbe9 	bl	8029718 <__cxa_guard_acquire>
 8020f46:	b138      	cbz	r0, 8020f58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8020f48:	4620      	mov	r0, r4
 8020f4a:	f008 fbf1 	bl	8029730 <__cxa_guard_release>
 8020f4e:	4a0f      	ldr	r2, [pc, #60]	@ (8020f8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8020f50:	490f      	ldr	r1, [pc, #60]	@ (8020f90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8020f52:	4810      	ldr	r0, [pc, #64]	@ (8020f94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8020f54:	f008 fbd9 	bl	802970a <__aeabi_atexit>
 8020f58:	4c0f      	ldr	r4, [pc, #60]	@ (8020f98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8020f5a:	7823      	ldrb	r3, [r4, #0]
 8020f5c:	f3bf 8f5b 	dmb	ish
 8020f60:	07db      	lsls	r3, r3, #31
 8020f62:	d40b      	bmi.n	8020f7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8020f64:	4620      	mov	r0, r4
 8020f66:	f008 fbd7 	bl	8029718 <__cxa_guard_acquire>
 8020f6a:	b138      	cbz	r0, 8020f7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8020f6c:	4620      	mov	r0, r4
 8020f6e:	f008 fbdf 	bl	8029730 <__cxa_guard_release>
 8020f72:	4a06      	ldr	r2, [pc, #24]	@ (8020f8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8020f74:	4909      	ldr	r1, [pc, #36]	@ (8020f9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8020f76:	480a      	ldr	r0, [pc, #40]	@ (8020fa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8020f78:	f008 fbc7 	bl	802970a <__aeabi_atexit>
 8020f7c:	4b05      	ldr	r3, [pc, #20]	@ (8020f94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8020f7e:	626b      	str	r3, [r5, #36]	@ 0x24
 8020f80:	4b07      	ldr	r3, [pc, #28]	@ (8020fa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8020f82:	62ab      	str	r3, [r5, #40]	@ 0x28
 8020f84:	bd38      	pop	{r3, r4, r5, pc}
 8020f86:	bf00      	nop
 8020f88:	20014038 	.word	0x20014038
 8020f8c:	20000000 	.word	0x20000000
 8020f90:	0801cf35 	.word	0x0801cf35
 8020f94:	200000f4 	.word	0x200000f4
 8020f98:	2001403c 	.word	0x2001403c
 8020f9c:	0801cf33 	.word	0x0801cf33
 8020fa0:	200000f8 	.word	0x200000f8

08020fa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8020fa4:	b538      	push	{r3, r4, r5, lr}
 8020fa6:	4c15      	ldr	r4, [pc, #84]	@ (8020ffc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8020fa8:	7823      	ldrb	r3, [r4, #0]
 8020faa:	f3bf 8f5b 	dmb	ish
 8020fae:	07da      	lsls	r2, r3, #31
 8020fb0:	4605      	mov	r5, r0
 8020fb2:	d40b      	bmi.n	8020fcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8020fb4:	4620      	mov	r0, r4
 8020fb6:	f008 fbaf 	bl	8029718 <__cxa_guard_acquire>
 8020fba:	b138      	cbz	r0, 8020fcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8020fbc:	4620      	mov	r0, r4
 8020fbe:	f008 fbb7 	bl	8029730 <__cxa_guard_release>
 8020fc2:	4a0f      	ldr	r2, [pc, #60]	@ (8021000 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8020fc4:	490f      	ldr	r1, [pc, #60]	@ (8021004 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8020fc6:	4810      	ldr	r0, [pc, #64]	@ (8021008 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8020fc8:	f008 fb9f 	bl	802970a <__aeabi_atexit>
 8020fcc:	4c0f      	ldr	r4, [pc, #60]	@ (802100c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8020fce:	7823      	ldrb	r3, [r4, #0]
 8020fd0:	f3bf 8f5b 	dmb	ish
 8020fd4:	07db      	lsls	r3, r3, #31
 8020fd6:	d40b      	bmi.n	8020ff0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8020fd8:	4620      	mov	r0, r4
 8020fda:	f008 fb9d 	bl	8029718 <__cxa_guard_acquire>
 8020fde:	b138      	cbz	r0, 8020ff0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8020fe0:	4620      	mov	r0, r4
 8020fe2:	f008 fba5 	bl	8029730 <__cxa_guard_release>
 8020fe6:	4a06      	ldr	r2, [pc, #24]	@ (8021000 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8020fe8:	4909      	ldr	r1, [pc, #36]	@ (8021010 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8020fea:	480a      	ldr	r0, [pc, #40]	@ (8021014 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8020fec:	f008 fb8d 	bl	802970a <__aeabi_atexit>
 8020ff0:	4b05      	ldr	r3, [pc, #20]	@ (8021008 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8020ff2:	61eb      	str	r3, [r5, #28]
 8020ff4:	4b07      	ldr	r3, [pc, #28]	@ (8021014 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8020ff6:	622b      	str	r3, [r5, #32]
 8020ff8:	bd38      	pop	{r3, r4, r5, pc}
 8020ffa:	bf00      	nop
 8020ffc:	20014010 	.word	0x20014010
 8021000:	20000000 	.word	0x20000000
 8021004:	0801cf39 	.word	0x0801cf39
 8021008:	200000cc 	.word	0x200000cc
 802100c:	20014014 	.word	0x20014014
 8021010:	0801cf37 	.word	0x0801cf37
 8021014:	200000d0 	.word	0x200000d0

08021018 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8021018:	b510      	push	{r4, lr}
 802101a:	4604      	mov	r4, r0
 802101c:	f7ff ff88 	bl	8020f30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8021020:	4620      	mov	r0, r4
 8021022:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021026:	f7ff bfbd 	b.w	8020fa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0802102c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 802102c:	b538      	push	{r3, r4, r5, lr}
 802102e:	4c15      	ldr	r4, [pc, #84]	@ (8021084 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8021030:	7823      	ldrb	r3, [r4, #0]
 8021032:	f3bf 8f5b 	dmb	ish
 8021036:	07da      	lsls	r2, r3, #31
 8021038:	4605      	mov	r5, r0
 802103a:	d40b      	bmi.n	8021054 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 802103c:	4620      	mov	r0, r4
 802103e:	f008 fb6b 	bl	8029718 <__cxa_guard_acquire>
 8021042:	b138      	cbz	r0, 8021054 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8021044:	4620      	mov	r0, r4
 8021046:	f008 fb73 	bl	8029730 <__cxa_guard_release>
 802104a:	4a0f      	ldr	r2, [pc, #60]	@ (8021088 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 802104c:	490f      	ldr	r1, [pc, #60]	@ (802108c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 802104e:	4810      	ldr	r0, [pc, #64]	@ (8021090 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8021050:	f008 fb5b 	bl	802970a <__aeabi_atexit>
 8021054:	4c0f      	ldr	r4, [pc, #60]	@ (8021094 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8021056:	7823      	ldrb	r3, [r4, #0]
 8021058:	f3bf 8f5b 	dmb	ish
 802105c:	07db      	lsls	r3, r3, #31
 802105e:	d40b      	bmi.n	8021078 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021060:	4620      	mov	r0, r4
 8021062:	f008 fb59 	bl	8029718 <__cxa_guard_acquire>
 8021066:	b138      	cbz	r0, 8021078 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021068:	4620      	mov	r0, r4
 802106a:	f008 fb61 	bl	8029730 <__cxa_guard_release>
 802106e:	4a06      	ldr	r2, [pc, #24]	@ (8021088 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021070:	4909      	ldr	r1, [pc, #36]	@ (8021098 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8021072:	480a      	ldr	r0, [pc, #40]	@ (802109c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021074:	f008 fb49 	bl	802970a <__aeabi_atexit>
 8021078:	4b05      	ldr	r3, [pc, #20]	@ (8021090 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 802107a:	636b      	str	r3, [r5, #52]	@ 0x34
 802107c:	4b07      	ldr	r3, [pc, #28]	@ (802109c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 802107e:	63ab      	str	r3, [r5, #56]	@ 0x38
 8021080:	bd38      	pop	{r3, r4, r5, pc}
 8021082:	bf00      	nop
 8021084:	20014048 	.word	0x20014048
 8021088:	20000000 	.word	0x20000000
 802108c:	0801cf2d 	.word	0x0801cf2d
 8021090:	20000104 	.word	0x20000104
 8021094:	2001404c 	.word	0x2001404c
 8021098:	0801cf2b 	.word	0x0801cf2b
 802109c:	20000108 	.word	0x20000108

080210a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80210a0:	b538      	push	{r3, r4, r5, lr}
 80210a2:	4c15      	ldr	r4, [pc, #84]	@ (80210f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80210a4:	7823      	ldrb	r3, [r4, #0]
 80210a6:	f3bf 8f5b 	dmb	ish
 80210aa:	07da      	lsls	r2, r3, #31
 80210ac:	4605      	mov	r5, r0
 80210ae:	d40b      	bmi.n	80210c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80210b0:	4620      	mov	r0, r4
 80210b2:	f008 fb31 	bl	8029718 <__cxa_guard_acquire>
 80210b6:	b138      	cbz	r0, 80210c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80210b8:	4620      	mov	r0, r4
 80210ba:	f008 fb39 	bl	8029730 <__cxa_guard_release>
 80210be:	4a0f      	ldr	r2, [pc, #60]	@ (80210fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80210c0:	490f      	ldr	r1, [pc, #60]	@ (8021100 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80210c2:	4810      	ldr	r0, [pc, #64]	@ (8021104 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80210c4:	f008 fb21 	bl	802970a <__aeabi_atexit>
 80210c8:	4c0f      	ldr	r4, [pc, #60]	@ (8021108 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80210ca:	7823      	ldrb	r3, [r4, #0]
 80210cc:	f3bf 8f5b 	dmb	ish
 80210d0:	07db      	lsls	r3, r3, #31
 80210d2:	d40b      	bmi.n	80210ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80210d4:	4620      	mov	r0, r4
 80210d6:	f008 fb1f 	bl	8029718 <__cxa_guard_acquire>
 80210da:	b138      	cbz	r0, 80210ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80210dc:	4620      	mov	r0, r4
 80210de:	f008 fb27 	bl	8029730 <__cxa_guard_release>
 80210e2:	4a06      	ldr	r2, [pc, #24]	@ (80210fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80210e4:	4909      	ldr	r1, [pc, #36]	@ (802110c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80210e6:	480a      	ldr	r0, [pc, #40]	@ (8021110 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80210e8:	f008 fb0f 	bl	802970a <__aeabi_atexit>
 80210ec:	4b05      	ldr	r3, [pc, #20]	@ (8021104 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80210ee:	62eb      	str	r3, [r5, #44]	@ 0x2c
 80210f0:	4b07      	ldr	r3, [pc, #28]	@ (8021110 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80210f2:	632b      	str	r3, [r5, #48]	@ 0x30
 80210f4:	bd38      	pop	{r3, r4, r5, pc}
 80210f6:	bf00      	nop
 80210f8:	20014018 	.word	0x20014018
 80210fc:	20000000 	.word	0x20000000
 8021100:	0801cf31 	.word	0x0801cf31
 8021104:	200000d4 	.word	0x200000d4
 8021108:	2001401c 	.word	0x2001401c
 802110c:	0801cf2f 	.word	0x0801cf2f
 8021110:	200000d8 	.word	0x200000d8

08021114 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8021114:	b510      	push	{r4, lr}
 8021116:	4604      	mov	r4, r0
 8021118:	f7ff ff88 	bl	802102c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 802111c:	4620      	mov	r0, r4
 802111e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021122:	f7ff bfbd 	b.w	80210a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08021128 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8021128:	b538      	push	{r3, r4, r5, lr}
 802112a:	4c15      	ldr	r4, [pc, #84]	@ (8021180 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 802112c:	7823      	ldrb	r3, [r4, #0]
 802112e:	f3bf 8f5b 	dmb	ish
 8021132:	07da      	lsls	r2, r3, #31
 8021134:	4605      	mov	r5, r0
 8021136:	d40b      	bmi.n	8021150 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8021138:	4620      	mov	r0, r4
 802113a:	f008 faed 	bl	8029718 <__cxa_guard_acquire>
 802113e:	b138      	cbz	r0, 8021150 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8021140:	4620      	mov	r0, r4
 8021142:	f008 faf5 	bl	8029730 <__cxa_guard_release>
 8021146:	4a0f      	ldr	r2, [pc, #60]	@ (8021184 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8021148:	490f      	ldr	r1, [pc, #60]	@ (8021188 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 802114a:	4810      	ldr	r0, [pc, #64]	@ (802118c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802114c:	f008 fadd 	bl	802970a <__aeabi_atexit>
 8021150:	4c0f      	ldr	r4, [pc, #60]	@ (8021190 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8021152:	7823      	ldrb	r3, [r4, #0]
 8021154:	f3bf 8f5b 	dmb	ish
 8021158:	07db      	lsls	r3, r3, #31
 802115a:	d40b      	bmi.n	8021174 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802115c:	4620      	mov	r0, r4
 802115e:	f008 fadb 	bl	8029718 <__cxa_guard_acquire>
 8021162:	b138      	cbz	r0, 8021174 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8021164:	4620      	mov	r0, r4
 8021166:	f008 fae3 	bl	8029730 <__cxa_guard_release>
 802116a:	4a06      	ldr	r2, [pc, #24]	@ (8021184 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802116c:	4909      	ldr	r1, [pc, #36]	@ (8021194 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802116e:	480a      	ldr	r0, [pc, #40]	@ (8021198 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8021170:	f008 facb 	bl	802970a <__aeabi_atexit>
 8021174:	4b05      	ldr	r3, [pc, #20]	@ (802118c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8021176:	656b      	str	r3, [r5, #84]	@ 0x54
 8021178:	4b07      	ldr	r3, [pc, #28]	@ (8021198 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802117a:	65ab      	str	r3, [r5, #88]	@ 0x58
 802117c:	bd38      	pop	{r3, r4, r5, pc}
 802117e:	bf00      	nop
 8021180:	20014050 	.word	0x20014050
 8021184:	20000000 	.word	0x20000000
 8021188:	0801cf1d 	.word	0x0801cf1d
 802118c:	2000010c 	.word	0x2000010c
 8021190:	20014054 	.word	0x20014054
 8021194:	0801cf1b 	.word	0x0801cf1b
 8021198:	20000110 	.word	0x20000110

0802119c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 802119c:	b538      	push	{r3, r4, r5, lr}
 802119e:	4c15      	ldr	r4, [pc, #84]	@ (80211f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80211a0:	7823      	ldrb	r3, [r4, #0]
 80211a2:	f3bf 8f5b 	dmb	ish
 80211a6:	07da      	lsls	r2, r3, #31
 80211a8:	4605      	mov	r5, r0
 80211aa:	d40b      	bmi.n	80211c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80211ac:	4620      	mov	r0, r4
 80211ae:	f008 fab3 	bl	8029718 <__cxa_guard_acquire>
 80211b2:	b138      	cbz	r0, 80211c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80211b4:	4620      	mov	r0, r4
 80211b6:	f008 fabb 	bl	8029730 <__cxa_guard_release>
 80211ba:	4a0f      	ldr	r2, [pc, #60]	@ (80211f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80211bc:	490f      	ldr	r1, [pc, #60]	@ (80211fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80211be:	4810      	ldr	r0, [pc, #64]	@ (8021200 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80211c0:	f008 faa3 	bl	802970a <__aeabi_atexit>
 80211c4:	4c0f      	ldr	r4, [pc, #60]	@ (8021204 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80211c6:	7823      	ldrb	r3, [r4, #0]
 80211c8:	f3bf 8f5b 	dmb	ish
 80211cc:	07db      	lsls	r3, r3, #31
 80211ce:	d40b      	bmi.n	80211e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80211d0:	4620      	mov	r0, r4
 80211d2:	f008 faa1 	bl	8029718 <__cxa_guard_acquire>
 80211d6:	b138      	cbz	r0, 80211e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80211d8:	4620      	mov	r0, r4
 80211da:	f008 faa9 	bl	8029730 <__cxa_guard_release>
 80211de:	4a06      	ldr	r2, [pc, #24]	@ (80211f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80211e0:	4909      	ldr	r1, [pc, #36]	@ (8021208 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80211e2:	480a      	ldr	r0, [pc, #40]	@ (802120c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80211e4:	f008 fa91 	bl	802970a <__aeabi_atexit>
 80211e8:	4b05      	ldr	r3, [pc, #20]	@ (8021200 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80211ea:	64eb      	str	r3, [r5, #76]	@ 0x4c
 80211ec:	4b07      	ldr	r3, [pc, #28]	@ (802120c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80211ee:	652b      	str	r3, [r5, #80]	@ 0x50
 80211f0:	bd38      	pop	{r3, r4, r5, pc}
 80211f2:	bf00      	nop
 80211f4:	20014058 	.word	0x20014058
 80211f8:	20000000 	.word	0x20000000
 80211fc:	0801cf21 	.word	0x0801cf21
 8021200:	20000114 	.word	0x20000114
 8021204:	2001405c 	.word	0x2001405c
 8021208:	0801cf1f 	.word	0x0801cf1f
 802120c:	20000118 	.word	0x20000118

08021210 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8021210:	b538      	push	{r3, r4, r5, lr}
 8021212:	4c15      	ldr	r4, [pc, #84]	@ (8021268 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8021214:	7823      	ldrb	r3, [r4, #0]
 8021216:	f3bf 8f5b 	dmb	ish
 802121a:	07da      	lsls	r2, r3, #31
 802121c:	4605      	mov	r5, r0
 802121e:	d40b      	bmi.n	8021238 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8021220:	4620      	mov	r0, r4
 8021222:	f008 fa79 	bl	8029718 <__cxa_guard_acquire>
 8021226:	b138      	cbz	r0, 8021238 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8021228:	4620      	mov	r0, r4
 802122a:	f008 fa81 	bl	8029730 <__cxa_guard_release>
 802122e:	4a0f      	ldr	r2, [pc, #60]	@ (802126c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8021230:	490f      	ldr	r1, [pc, #60]	@ (8021270 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8021232:	4810      	ldr	r0, [pc, #64]	@ (8021274 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8021234:	f008 fa69 	bl	802970a <__aeabi_atexit>
 8021238:	4c0f      	ldr	r4, [pc, #60]	@ (8021278 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802123a:	7823      	ldrb	r3, [r4, #0]
 802123c:	f3bf 8f5b 	dmb	ish
 8021240:	07db      	lsls	r3, r3, #31
 8021242:	d40b      	bmi.n	802125c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8021244:	4620      	mov	r0, r4
 8021246:	f008 fa67 	bl	8029718 <__cxa_guard_acquire>
 802124a:	b138      	cbz	r0, 802125c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802124c:	4620      	mov	r0, r4
 802124e:	f008 fa6f 	bl	8029730 <__cxa_guard_release>
 8021252:	4a06      	ldr	r2, [pc, #24]	@ (802126c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8021254:	4909      	ldr	r1, [pc, #36]	@ (802127c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8021256:	480a      	ldr	r0, [pc, #40]	@ (8021280 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8021258:	f008 fa57 	bl	802970a <__aeabi_atexit>
 802125c:	4b05      	ldr	r3, [pc, #20]	@ (8021274 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802125e:	646b      	str	r3, [r5, #68]	@ 0x44
 8021260:	4b07      	ldr	r3, [pc, #28]	@ (8021280 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8021262:	64ab      	str	r3, [r5, #72]	@ 0x48
 8021264:	bd38      	pop	{r3, r4, r5, pc}
 8021266:	bf00      	nop
 8021268:	20014020 	.word	0x20014020
 802126c:	20000000 	.word	0x20000000
 8021270:	0801cf25 	.word	0x0801cf25
 8021274:	200000dc 	.word	0x200000dc
 8021278:	20014024 	.word	0x20014024
 802127c:	0801cf23 	.word	0x0801cf23
 8021280:	200000e0 	.word	0x200000e0

08021284 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8021284:	b538      	push	{r3, r4, r5, lr}
 8021286:	4c15      	ldr	r4, [pc, #84]	@ (80212dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8021288:	7823      	ldrb	r3, [r4, #0]
 802128a:	f3bf 8f5b 	dmb	ish
 802128e:	07da      	lsls	r2, r3, #31
 8021290:	4605      	mov	r5, r0
 8021292:	d40b      	bmi.n	80212ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8021294:	4620      	mov	r0, r4
 8021296:	f008 fa3f 	bl	8029718 <__cxa_guard_acquire>
 802129a:	b138      	cbz	r0, 80212ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 802129c:	4620      	mov	r0, r4
 802129e:	f008 fa47 	bl	8029730 <__cxa_guard_release>
 80212a2:	4a0f      	ldr	r2, [pc, #60]	@ (80212e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80212a4:	490f      	ldr	r1, [pc, #60]	@ (80212e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80212a6:	4810      	ldr	r0, [pc, #64]	@ (80212e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80212a8:	f008 fa2f 	bl	802970a <__aeabi_atexit>
 80212ac:	4c0f      	ldr	r4, [pc, #60]	@ (80212ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80212ae:	7823      	ldrb	r3, [r4, #0]
 80212b0:	f3bf 8f5b 	dmb	ish
 80212b4:	07db      	lsls	r3, r3, #31
 80212b6:	d40b      	bmi.n	80212d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80212b8:	4620      	mov	r0, r4
 80212ba:	f008 fa2d 	bl	8029718 <__cxa_guard_acquire>
 80212be:	b138      	cbz	r0, 80212d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80212c0:	4620      	mov	r0, r4
 80212c2:	f008 fa35 	bl	8029730 <__cxa_guard_release>
 80212c6:	4a06      	ldr	r2, [pc, #24]	@ (80212e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80212c8:	4909      	ldr	r1, [pc, #36]	@ (80212f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80212ca:	480a      	ldr	r0, [pc, #40]	@ (80212f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80212cc:	f008 fa1d 	bl	802970a <__aeabi_atexit>
 80212d0:	4b05      	ldr	r3, [pc, #20]	@ (80212e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80212d2:	63eb      	str	r3, [r5, #60]	@ 0x3c
 80212d4:	4b07      	ldr	r3, [pc, #28]	@ (80212f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80212d6:	642b      	str	r3, [r5, #64]	@ 0x40
 80212d8:	bd38      	pop	{r3, r4, r5, pc}
 80212da:	bf00      	nop
 80212dc:	20014040 	.word	0x20014040
 80212e0:	20000000 	.word	0x20000000
 80212e4:	0801cf29 	.word	0x0801cf29
 80212e8:	200000fc 	.word	0x200000fc
 80212ec:	20014044 	.word	0x20014044
 80212f0:	0801cf27 	.word	0x0801cf27
 80212f4:	20000100 	.word	0x20000100

080212f8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80212f8:	b510      	push	{r4, lr}
 80212fa:	4604      	mov	r4, r0
 80212fc:	f7ff ff14 	bl	8021128 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8021300:	4620      	mov	r0, r4
 8021302:	f7ff ff85 	bl	8021210 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8021306:	4620      	mov	r0, r4
 8021308:	f7ff ff48 	bl	802119c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 802130c:	4620      	mov	r0, r4
 802130e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021312:	f7ff bfb7 	b.w	8021284 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08021318 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8021318:	b538      	push	{r3, r4, r5, lr}
 802131a:	4c15      	ldr	r4, [pc, #84]	@ (8021370 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 802131c:	7823      	ldrb	r3, [r4, #0]
 802131e:	f3bf 8f5b 	dmb	ish
 8021322:	07da      	lsls	r2, r3, #31
 8021324:	4605      	mov	r5, r0
 8021326:	d40b      	bmi.n	8021340 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8021328:	4620      	mov	r0, r4
 802132a:	f008 f9f5 	bl	8029718 <__cxa_guard_acquire>
 802132e:	b138      	cbz	r0, 8021340 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8021330:	4620      	mov	r0, r4
 8021332:	f008 f9fd 	bl	8029730 <__cxa_guard_release>
 8021336:	4a0f      	ldr	r2, [pc, #60]	@ (8021374 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8021338:	490f      	ldr	r1, [pc, #60]	@ (8021378 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802133a:	4810      	ldr	r0, [pc, #64]	@ (802137c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802133c:	f008 f9e5 	bl	802970a <__aeabi_atexit>
 8021340:	4c0f      	ldr	r4, [pc, #60]	@ (8021380 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8021342:	7823      	ldrb	r3, [r4, #0]
 8021344:	f3bf 8f5b 	dmb	ish
 8021348:	07db      	lsls	r3, r3, #31
 802134a:	d40b      	bmi.n	8021364 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802134c:	4620      	mov	r0, r4
 802134e:	f008 f9e3 	bl	8029718 <__cxa_guard_acquire>
 8021352:	b138      	cbz	r0, 8021364 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8021354:	4620      	mov	r0, r4
 8021356:	f008 f9eb 	bl	8029730 <__cxa_guard_release>
 802135a:	4a06      	ldr	r2, [pc, #24]	@ (8021374 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802135c:	4909      	ldr	r1, [pc, #36]	@ (8021384 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802135e:	480a      	ldr	r0, [pc, #40]	@ (8021388 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8021360:	f008 f9d3 	bl	802970a <__aeabi_atexit>
 8021364:	4b05      	ldr	r3, [pc, #20]	@ (802137c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8021366:	666b      	str	r3, [r5, #100]	@ 0x64
 8021368:	4b07      	ldr	r3, [pc, #28]	@ (8021388 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802136a:	66ab      	str	r3, [r5, #104]	@ 0x68
 802136c:	bd38      	pop	{r3, r4, r5, pc}
 802136e:	bf00      	nop
 8021370:	20014028 	.word	0x20014028
 8021374:	20000000 	.word	0x20000000
 8021378:	0801cf15 	.word	0x0801cf15
 802137c:	200000e4 	.word	0x200000e4
 8021380:	2001402c 	.word	0x2001402c
 8021384:	0801cf13 	.word	0x0801cf13
 8021388:	200000e8 	.word	0x200000e8

0802138c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 802138c:	b538      	push	{r3, r4, r5, lr}
 802138e:	4c15      	ldr	r4, [pc, #84]	@ (80213e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8021390:	7823      	ldrb	r3, [r4, #0]
 8021392:	f3bf 8f5b 	dmb	ish
 8021396:	07da      	lsls	r2, r3, #31
 8021398:	4605      	mov	r5, r0
 802139a:	d40b      	bmi.n	80213b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 802139c:	4620      	mov	r0, r4
 802139e:	f008 f9bb 	bl	8029718 <__cxa_guard_acquire>
 80213a2:	b138      	cbz	r0, 80213b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80213a4:	4620      	mov	r0, r4
 80213a6:	f008 f9c3 	bl	8029730 <__cxa_guard_release>
 80213aa:	4a0f      	ldr	r2, [pc, #60]	@ (80213e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80213ac:	490f      	ldr	r1, [pc, #60]	@ (80213ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80213ae:	4810      	ldr	r0, [pc, #64]	@ (80213f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80213b0:	f008 f9ab 	bl	802970a <__aeabi_atexit>
 80213b4:	4c0f      	ldr	r4, [pc, #60]	@ (80213f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80213b6:	7823      	ldrb	r3, [r4, #0]
 80213b8:	f3bf 8f5b 	dmb	ish
 80213bc:	07db      	lsls	r3, r3, #31
 80213be:	d40b      	bmi.n	80213d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80213c0:	4620      	mov	r0, r4
 80213c2:	f008 f9a9 	bl	8029718 <__cxa_guard_acquire>
 80213c6:	b138      	cbz	r0, 80213d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80213c8:	4620      	mov	r0, r4
 80213ca:	f008 f9b1 	bl	8029730 <__cxa_guard_release>
 80213ce:	4a06      	ldr	r2, [pc, #24]	@ (80213e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80213d0:	4909      	ldr	r1, [pc, #36]	@ (80213f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80213d2:	480a      	ldr	r0, [pc, #40]	@ (80213fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80213d4:	f008 f999 	bl	802970a <__aeabi_atexit>
 80213d8:	4b05      	ldr	r3, [pc, #20]	@ (80213f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80213da:	65eb      	str	r3, [r5, #92]	@ 0x5c
 80213dc:	4b07      	ldr	r3, [pc, #28]	@ (80213fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80213de:	662b      	str	r3, [r5, #96]	@ 0x60
 80213e0:	bd38      	pop	{r3, r4, r5, pc}
 80213e2:	bf00      	nop
 80213e4:	20014000 	.word	0x20014000
 80213e8:	20000000 	.word	0x20000000
 80213ec:	0801cf19 	.word	0x0801cf19
 80213f0:	200000bc 	.word	0x200000bc
 80213f4:	20014004 	.word	0x20014004
 80213f8:	0801cf17 	.word	0x0801cf17
 80213fc:	200000c0 	.word	0x200000c0

08021400 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8021400:	b510      	push	{r4, lr}
 8021402:	4604      	mov	r4, r0
 8021404:	f7ff ff88 	bl	8021318 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8021408:	4620      	mov	r0, r4
 802140a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802140e:	f7ff bfbd 	b.w	802138c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08021414 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8021414:	b538      	push	{r3, r4, r5, lr}
 8021416:	4c15      	ldr	r4, [pc, #84]	@ (802146c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8021418:	7823      	ldrb	r3, [r4, #0]
 802141a:	f3bf 8f5b 	dmb	ish
 802141e:	07da      	lsls	r2, r3, #31
 8021420:	4605      	mov	r5, r0
 8021422:	d40b      	bmi.n	802143c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8021424:	4620      	mov	r0, r4
 8021426:	f008 f977 	bl	8029718 <__cxa_guard_acquire>
 802142a:	b138      	cbz	r0, 802143c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802142c:	4620      	mov	r0, r4
 802142e:	f008 f97f 	bl	8029730 <__cxa_guard_release>
 8021432:	4a0f      	ldr	r2, [pc, #60]	@ (8021470 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8021434:	490f      	ldr	r1, [pc, #60]	@ (8021474 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8021436:	4810      	ldr	r0, [pc, #64]	@ (8021478 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8021438:	f008 f967 	bl	802970a <__aeabi_atexit>
 802143c:	4c0f      	ldr	r4, [pc, #60]	@ (802147c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802143e:	7823      	ldrb	r3, [r4, #0]
 8021440:	f3bf 8f5b 	dmb	ish
 8021444:	07db      	lsls	r3, r3, #31
 8021446:	d40b      	bmi.n	8021460 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8021448:	4620      	mov	r0, r4
 802144a:	f008 f965 	bl	8029718 <__cxa_guard_acquire>
 802144e:	b138      	cbz	r0, 8021460 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8021450:	4620      	mov	r0, r4
 8021452:	f008 f96d 	bl	8029730 <__cxa_guard_release>
 8021456:	4a06      	ldr	r2, [pc, #24]	@ (8021470 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8021458:	4909      	ldr	r1, [pc, #36]	@ (8021480 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802145a:	480a      	ldr	r0, [pc, #40]	@ (8021484 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802145c:	f008 f955 	bl	802970a <__aeabi_atexit>
 8021460:	4b05      	ldr	r3, [pc, #20]	@ (8021478 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8021462:	676b      	str	r3, [r5, #116]	@ 0x74
 8021464:	4b07      	ldr	r3, [pc, #28]	@ (8021484 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8021466:	67ab      	str	r3, [r5, #120]	@ 0x78
 8021468:	bd38      	pop	{r3, r4, r5, pc}
 802146a:	bf00      	nop
 802146c:	20013ff8 	.word	0x20013ff8
 8021470:	20000000 	.word	0x20000000
 8021474:	0801cf0d 	.word	0x0801cf0d
 8021478:	200000b4 	.word	0x200000b4
 802147c:	20013ffc 	.word	0x20013ffc
 8021480:	0801cf0b 	.word	0x0801cf0b
 8021484:	200000b8 	.word	0x200000b8

08021488 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8021488:	b538      	push	{r3, r4, r5, lr}
 802148a:	4c15      	ldr	r4, [pc, #84]	@ (80214e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 802148c:	7823      	ldrb	r3, [r4, #0]
 802148e:	f3bf 8f5b 	dmb	ish
 8021492:	07da      	lsls	r2, r3, #31
 8021494:	4605      	mov	r5, r0
 8021496:	d40b      	bmi.n	80214b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8021498:	4620      	mov	r0, r4
 802149a:	f008 f93d 	bl	8029718 <__cxa_guard_acquire>
 802149e:	b138      	cbz	r0, 80214b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80214a0:	4620      	mov	r0, r4
 80214a2:	f008 f945 	bl	8029730 <__cxa_guard_release>
 80214a6:	4a0f      	ldr	r2, [pc, #60]	@ (80214e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80214a8:	490f      	ldr	r1, [pc, #60]	@ (80214e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80214aa:	4810      	ldr	r0, [pc, #64]	@ (80214ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80214ac:	f008 f92d 	bl	802970a <__aeabi_atexit>
 80214b0:	4c0f      	ldr	r4, [pc, #60]	@ (80214f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80214b2:	7823      	ldrb	r3, [r4, #0]
 80214b4:	f3bf 8f5b 	dmb	ish
 80214b8:	07db      	lsls	r3, r3, #31
 80214ba:	d40b      	bmi.n	80214d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80214bc:	4620      	mov	r0, r4
 80214be:	f008 f92b 	bl	8029718 <__cxa_guard_acquire>
 80214c2:	b138      	cbz	r0, 80214d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80214c4:	4620      	mov	r0, r4
 80214c6:	f008 f933 	bl	8029730 <__cxa_guard_release>
 80214ca:	4a06      	ldr	r2, [pc, #24]	@ (80214e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80214cc:	4909      	ldr	r1, [pc, #36]	@ (80214f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80214ce:	480a      	ldr	r0, [pc, #40]	@ (80214f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80214d0:	f008 f91b 	bl	802970a <__aeabi_atexit>
 80214d4:	4b05      	ldr	r3, [pc, #20]	@ (80214ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80214d6:	66eb      	str	r3, [r5, #108]	@ 0x6c
 80214d8:	4b07      	ldr	r3, [pc, #28]	@ (80214f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80214da:	672b      	str	r3, [r5, #112]	@ 0x70
 80214dc:	bd38      	pop	{r3, r4, r5, pc}
 80214de:	bf00      	nop
 80214e0:	20013ff0 	.word	0x20013ff0
 80214e4:	20000000 	.word	0x20000000
 80214e8:	0801cf11 	.word	0x0801cf11
 80214ec:	200000ac 	.word	0x200000ac
 80214f0:	20013ff4 	.word	0x20013ff4
 80214f4:	0801cf0f 	.word	0x0801cf0f
 80214f8:	200000b0 	.word	0x200000b0

080214fc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80214fc:	b510      	push	{r4, lr}
 80214fe:	4604      	mov	r4, r0
 8021500:	f7ff ff88 	bl	8021414 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8021504:	4620      	mov	r0, r4
 8021506:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802150a:	f7ff bfbd 	b.w	8021488 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802150e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802150e:	b510      	push	{r4, lr}
 8021510:	4604      	mov	r4, r0
 8021512:	f7ff fff3 	bl	80214fc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8021516:	4620      	mov	r0, r4
 8021518:	f7ff ff72 	bl	8021400 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802151c:	4620      	mov	r0, r4
 802151e:	f7ff fdf9 	bl	8021114 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8021522:	4620      	mov	r0, r4
 8021524:	f7ff fcfa 	bl	8020f1c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8021528:	4620      	mov	r0, r4
 802152a:	f7ff fd75 	bl	8021018 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802152e:	4620      	mov	r0, r4
 8021530:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021534:	f7ff bee0 	b.w	80212f8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08021538 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8021538:	b538      	push	{r3, r4, r5, lr}
 802153a:	4c0b      	ldr	r4, [pc, #44]	@ (8021568 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802153c:	7823      	ldrb	r3, [r4, #0]
 802153e:	f3bf 8f5b 	dmb	ish
 8021542:	07db      	lsls	r3, r3, #31
 8021544:	4605      	mov	r5, r0
 8021546:	d40b      	bmi.n	8021560 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8021548:	4620      	mov	r0, r4
 802154a:	f008 f8e5 	bl	8029718 <__cxa_guard_acquire>
 802154e:	b138      	cbz	r0, 8021560 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8021550:	4620      	mov	r0, r4
 8021552:	f008 f8ed 	bl	8029730 <__cxa_guard_release>
 8021556:	4a05      	ldr	r2, [pc, #20]	@ (802156c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8021558:	4905      	ldr	r1, [pc, #20]	@ (8021570 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802155a:	4806      	ldr	r0, [pc, #24]	@ (8021574 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802155c:	f008 f8d5 	bl	802970a <__aeabi_atexit>
 8021560:	4b04      	ldr	r3, [pc, #16]	@ (8021574 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8021562:	67eb      	str	r3, [r5, #124]	@ 0x7c
 8021564:	bd38      	pop	{r3, r4, r5, pc}
 8021566:	bf00      	nop
 8021568:	20013fe4 	.word	0x20013fe4
 802156c:	20000000 	.word	0x20000000
 8021570:	0801cf09 	.word	0x0801cf09
 8021574:	200000a4 	.word	0x200000a4

08021578 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8021578:	b538      	push	{r3, r4, r5, lr}
 802157a:	4c0b      	ldr	r4, [pc, #44]	@ (80215a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 802157c:	7823      	ldrb	r3, [r4, #0]
 802157e:	f3bf 8f5b 	dmb	ish
 8021582:	07db      	lsls	r3, r3, #31
 8021584:	4605      	mov	r5, r0
 8021586:	d40b      	bmi.n	80215a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8021588:	4620      	mov	r0, r4
 802158a:	f008 f8c5 	bl	8029718 <__cxa_guard_acquire>
 802158e:	b138      	cbz	r0, 80215a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8021590:	4620      	mov	r0, r4
 8021592:	f008 f8cd 	bl	8029730 <__cxa_guard_release>
 8021596:	4a05      	ldr	r2, [pc, #20]	@ (80215ac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8021598:	4905      	ldr	r1, [pc, #20]	@ (80215b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 802159a:	4806      	ldr	r0, [pc, #24]	@ (80215b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 802159c:	f008 f8b5 	bl	802970a <__aeabi_atexit>
 80215a0:	4b04      	ldr	r3, [pc, #16]	@ (80215b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80215a2:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 80215a6:	bd38      	pop	{r3, r4, r5, pc}
 80215a8:	20013fe8 	.word	0x20013fe8
 80215ac:	20000000 	.word	0x20000000
 80215b0:	0801cf07 	.word	0x0801cf07
 80215b4:	200000a8 	.word	0x200000a8

080215b8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80215b8:	b570      	push	{r4, r5, r6, lr}
 80215ba:	4d0d      	ldr	r5, [pc, #52]	@ (80215f0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80215bc:	4c0d      	ldr	r4, [pc, #52]	@ (80215f4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80215be:	782b      	ldrb	r3, [r5, #0]
 80215c0:	f3bf 8f5b 	dmb	ish
 80215c4:	f013 0f01 	tst.w	r3, #1
 80215c8:	4606      	mov	r6, r0
 80215ca:	d10d      	bne.n	80215e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80215cc:	4628      	mov	r0, r5
 80215ce:	f008 f8a3 	bl	8029718 <__cxa_guard_acquire>
 80215d2:	b148      	cbz	r0, 80215e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80215d4:	4b08      	ldr	r3, [pc, #32]	@ (80215f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80215d6:	6023      	str	r3, [r4, #0]
 80215d8:	4628      	mov	r0, r5
 80215da:	f008 f8a9 	bl	8029730 <__cxa_guard_release>
 80215de:	4a07      	ldr	r2, [pc, #28]	@ (80215fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80215e0:	4907      	ldr	r1, [pc, #28]	@ (8021600 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80215e2:	4620      	mov	r0, r4
 80215e4:	f008 f891 	bl	802970a <__aeabi_atexit>
 80215e8:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 80215ec:	bd70      	pop	{r4, r5, r6, pc}
 80215ee:	bf00      	nop
 80215f0:	20013fec 	.word	0x20013fec
 80215f4:	20014164 	.word	0x20014164
 80215f8:	0802e788 	.word	0x0802e788
 80215fc:	20000000 	.word	0x20000000
 8021600:	0801cf05 	.word	0x0801cf05

08021604 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8021604:	b510      	push	{r4, lr}
 8021606:	4604      	mov	r4, r0
 8021608:	f7ff ff96 	bl	8021538 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802160c:	4620      	mov	r0, r4
 802160e:	f7ff ffb3 	bl	8021578 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8021612:	4620      	mov	r0, r4
 8021614:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021618:	f7ff bfce 	b.w	80215b8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802161c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 802161c:	b570      	push	{r4, r5, r6, lr}
 802161e:	4d0d      	ldr	r5, [pc, #52]	@ (8021654 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 8021620:	4c0d      	ldr	r4, [pc, #52]	@ (8021658 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 8021622:	782b      	ldrb	r3, [r5, #0]
 8021624:	f3bf 8f5b 	dmb	ish
 8021628:	f013 0f01 	tst.w	r3, #1
 802162c:	4606      	mov	r6, r0
 802162e:	d10d      	bne.n	802164c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8021630:	4628      	mov	r0, r5
 8021632:	f008 f871 	bl	8029718 <__cxa_guard_acquire>
 8021636:	b148      	cbz	r0, 802164c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8021638:	4b08      	ldr	r3, [pc, #32]	@ (802165c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 802163a:	6023      	str	r3, [r4, #0]
 802163c:	4628      	mov	r0, r5
 802163e:	f008 f877 	bl	8029730 <__cxa_guard_release>
 8021642:	4a07      	ldr	r2, [pc, #28]	@ (8021660 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 8021644:	4907      	ldr	r1, [pc, #28]	@ (8021664 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 8021646:	4620      	mov	r0, r4
 8021648:	f008 f85f 	bl	802970a <__aeabi_atexit>
 802164c:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 8021650:	bd70      	pop	{r4, r5, r6, pc}
 8021652:	bf00      	nop
 8021654:	20013fe0 	.word	0x20013fe0
 8021658:	20014060 	.word	0x20014060
 802165c:	0802e7a4 	.word	0x0802e7a4
 8021660:	20000000 	.word	0x20000000
 8021664:	0801cf03 	.word	0x0801cf03

08021668 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8021668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802166c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8021670:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8021674:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8021678:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 802167c:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8021680:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8021684:	8808      	ldrh	r0, [r1, #0]
 8021686:	fb05 4c0e 	mla	ip, r5, lr, r4
 802168a:	2d00      	cmp	r5, #0
 802168c:	eb02 0a0c 	add.w	sl, r2, ip
 8021690:	f2c0 80b0 	blt.w	80217f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8021694:	45ab      	cmp	fp, r5
 8021696:	f340 80ad 	ble.w	80217f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802169a:	2c00      	cmp	r4, #0
 802169c:	f2c0 80a8 	blt.w	80217f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80216a0:	45a6      	cmp	lr, r4
 80216a2:	f340 80a5 	ble.w	80217f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80216a6:	f812 200c 	ldrb.w	r2, [r2, ip]
 80216aa:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80216ae:	1c62      	adds	r2, r4, #1
 80216b0:	f100 80a3 	bmi.w	80217fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80216b4:	4596      	cmp	lr, r2
 80216b6:	f340 80a0 	ble.w	80217fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80216ba:	f1b9 0f00 	cmp.w	r9, #0
 80216be:	f000 809c 	beq.w	80217fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80216c2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80216c6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80216ca:	3501      	adds	r5, #1
 80216cc:	f100 8099 	bmi.w	8021802 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80216d0:	45ab      	cmp	fp, r5
 80216d2:	f340 8096 	ble.w	8021802 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80216d6:	2f00      	cmp	r7, #0
 80216d8:	f000 8093 	beq.w	8021802 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80216dc:	2c00      	cmp	r4, #0
 80216de:	f2c0 808e 	blt.w	80217fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80216e2:	45a6      	cmp	lr, r4
 80216e4:	f340 808b 	ble.w	80217fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80216e8:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80216ec:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80216f0:	3401      	adds	r4, #1
 80216f2:	f100 8089 	bmi.w	8021808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80216f6:	45a6      	cmp	lr, r4
 80216f8:	f340 8086 	ble.w	8021808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80216fc:	f1b9 0f00 	cmp.w	r9, #0
 8021700:	f000 8082 	beq.w	8021808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8021704:	44d6      	add	lr, sl
 8021706:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802170a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 802170e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8021712:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8021716:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 802171a:	fb19 fe07 	smulbb	lr, r9, r7
 802171e:	ea44 0808 	orr.w	r8, r4, r8
 8021722:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8021726:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802172a:	f1c7 0210 	rsb	r2, r7, #16
 802172e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8021732:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8021736:	ea44 0c0c 	orr.w	ip, r4, ip
 802173a:	eba2 0209 	sub.w	r2, r2, r9
 802173e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8021742:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8021746:	fb04 f40c 	mul.w	r4, r4, ip
 802174a:	fb02 4808 	mla	r8, r2, r8, r4
 802174e:	041a      	lsls	r2, r3, #16
 8021750:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8021754:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8021758:	4313      	orrs	r3, r2
 802175a:	042a      	lsls	r2, r5, #16
 802175c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8021760:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8021764:	fb0e 8303 	mla	r3, lr, r3, r8
 8021768:	432a      	orrs	r2, r5
 802176a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802176e:	fb07 3202 	mla	r2, r7, r2, r3
 8021772:	0d53      	lsrs	r3, r2, #21
 8021774:	0952      	lsrs	r2, r2, #5
 8021776:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802177a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802177e:	431a      	orrs	r2, r3
 8021780:	b293      	uxth	r3, r2
 8021782:	b2b4      	uxth	r4, r6
 8021784:	1202      	asrs	r2, r0, #8
 8021786:	43f6      	mvns	r6, r6
 8021788:	b2f6      	uxtb	r6, r6
 802178a:	121d      	asrs	r5, r3, #8
 802178c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8021790:	fb12 f206 	smulbb	r2, r2, r6
 8021794:	10c7      	asrs	r7, r0, #3
 8021796:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802179a:	00c0      	lsls	r0, r0, #3
 802179c:	fb05 2504 	mla	r5, r5, r4, r2
 80217a0:	b2c0      	uxtb	r0, r0
 80217a2:	10da      	asrs	r2, r3, #3
 80217a4:	00db      	lsls	r3, r3, #3
 80217a6:	b2db      	uxtb	r3, r3
 80217a8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80217ac:	fb10 f006 	smulbb	r0, r0, r6
 80217b0:	b2ad      	uxth	r5, r5
 80217b2:	fb03 0004 	mla	r0, r3, r4, r0
 80217b6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80217ba:	fb17 f706 	smulbb	r7, r7, r6
 80217be:	b280      	uxth	r0, r0
 80217c0:	1c6b      	adds	r3, r5, #1
 80217c2:	fb02 7204 	mla	r2, r2, r4, r7
 80217c6:	b292      	uxth	r2, r2
 80217c8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80217cc:	1c43      	adds	r3, r0, #1
 80217ce:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80217d2:	1c50      	adds	r0, r2, #1
 80217d4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80217d8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80217dc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80217e0:	0952      	lsrs	r2, r2, #5
 80217e2:	432b      	orrs	r3, r5
 80217e4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80217e8:	4313      	orrs	r3, r2
 80217ea:	800b      	strh	r3, [r1, #0]
 80217ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80217f0:	4680      	mov	r8, r0
 80217f2:	e75c      	b.n	80216ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80217f4:	4684      	mov	ip, r0
 80217f6:	4680      	mov	r8, r0
 80217f8:	e767      	b.n	80216ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80217fa:	4684      	mov	ip, r0
 80217fc:	e765      	b.n	80216ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80217fe:	4605      	mov	r5, r0
 8021800:	e776      	b.n	80216f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8021802:	4603      	mov	r3, r0
 8021804:	4605      	mov	r5, r0
 8021806:	e782      	b.n	802170e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8021808:	4603      	mov	r3, r0
 802180a:	e780      	b.n	802170e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0802180c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802180c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021810:	b099      	sub	sp, #100	@ 0x64
 8021812:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8021816:	9215      	str	r2, [sp, #84]	@ 0x54
 8021818:	9309      	str	r3, [sp, #36]	@ 0x24
 802181a:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 802181c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8021820:	930d      	str	r3, [sp, #52]	@ 0x34
 8021822:	910c      	str	r1, [sp, #48]	@ 0x30
 8021824:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8021828:	9016      	str	r0, [sp, #88]	@ 0x58
 802182a:	6850      	ldr	r0, [r2, #4]
 802182c:	6812      	ldr	r2, [r2, #0]
 802182e:	fb00 1303 	mla	r3, r0, r3, r1
 8021832:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8021836:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021838:	681b      	ldr	r3, [r3, #0]
 802183a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802183c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802183e:	685e      	ldr	r6, [r3, #4]
 8021840:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021842:	43db      	mvns	r3, r3
 8021844:	b2db      	uxtb	r3, r3
 8021846:	3604      	adds	r6, #4
 8021848:	930a      	str	r3, [sp, #40]	@ 0x28
 802184a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802184c:	2b00      	cmp	r3, #0
 802184e:	dc03      	bgt.n	8021858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021850:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8021852:	2b00      	cmp	r3, #0
 8021854:	f340 8225 	ble.w	8021ca2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8021858:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802185a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802185e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021862:	1e48      	subs	r0, r1, #1
 8021864:	1e57      	subs	r7, r2, #1
 8021866:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021868:	2b00      	cmp	r3, #0
 802186a:	f340 80e3 	ble.w	8021a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 802186e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8021872:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021876:	d406      	bmi.n	8021886 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021878:	4584      	cmp	ip, r0
 802187a:	da04      	bge.n	8021886 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802187c:	2b00      	cmp	r3, #0
 802187e:	db02      	blt.n	8021886 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021880:	42bb      	cmp	r3, r7
 8021882:	f2c0 80d8 	blt.w	8021a36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8021886:	f11c 0c01 	adds.w	ip, ip, #1
 802188a:	f100 80c9 	bmi.w	8021a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802188e:	4561      	cmp	r1, ip
 8021890:	f2c0 80c6 	blt.w	8021a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8021894:	3301      	adds	r3, #1
 8021896:	f100 80c3 	bmi.w	8021a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802189a:	429a      	cmp	r2, r3
 802189c:	f2c0 80c0 	blt.w	8021a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80218a0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80218a4:	4647      	mov	r7, r8
 80218a6:	f1bb 0f00 	cmp.w	fp, #0
 80218aa:	f340 80e3 	ble.w	8021a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80218ae:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 80218b0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80218b2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80218b6:	689b      	ldr	r3, [r3, #8]
 80218b8:	ea5f 422a 	movs.w	r2, sl, asr #16
 80218bc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80218c0:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80218c4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80218c8:	f100 8121 	bmi.w	8021b0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80218cc:	f103 39ff 	add.w	r9, r3, #4294967295
 80218d0:	454a      	cmp	r2, r9
 80218d2:	f280 811c 	bge.w	8021b0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80218d6:	f1bc 0f00 	cmp.w	ip, #0
 80218da:	f2c0 8118 	blt.w	8021b0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80218de:	f10e 39ff 	add.w	r9, lr, #4294967295
 80218e2:	45cc      	cmp	ip, r9
 80218e4:	f280 8113 	bge.w	8021b0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80218e8:	b21b      	sxth	r3, r3
 80218ea:	fb0c 2203 	mla	r2, ip, r3, r2
 80218ee:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80218f0:	eb04 0902 	add.w	r9, r4, r2
 80218f4:	5ca2      	ldrb	r2, [r4, r2]
 80218f6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80218fa:	2800      	cmp	r0, #0
 80218fc:	f000 80fe 	beq.w	8021afc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021900:	f899 2001 	ldrb.w	r2, [r9, #1]
 8021904:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8021908:	9211      	str	r2, [sp, #68]	@ 0x44
 802190a:	b151      	cbz	r1, 8021922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802190c:	eb09 0203 	add.w	r2, r9, r3
 8021910:	f819 3003 	ldrb.w	r3, [r9, r3]
 8021914:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021918:	930f      	str	r3, [sp, #60]	@ 0x3c
 802191a:	7853      	ldrb	r3, [r2, #1]
 802191c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021920:	9312      	str	r3, [sp, #72]	@ 0x48
 8021922:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021924:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8021926:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802192a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802192e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8021932:	ea4c 0c03 	orr.w	ip, ip, r3
 8021936:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8021938:	041b      	lsls	r3, r3, #16
 802193a:	fb10 f201 	smulbb	r2, r0, r1
 802193e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8021942:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8021946:	10d2      	asrs	r2, r2, #3
 8021948:	4323      	orrs	r3, r4
 802194a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 802194e:	4353      	muls	r3, r2
 8021950:	fb09 330c 	mla	r3, r9, ip, r3
 8021954:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8021958:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802195c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021960:	ea4c 0e0e 	orr.w	lr, ip, lr
 8021964:	f1c1 0c10 	rsb	ip, r1, #16
 8021968:	ebac 0c00 	sub.w	ip, ip, r0
 802196c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8021970:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8021974:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8021976:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021978:	0418      	lsls	r0, r3, #16
 802197a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802197e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8021982:	4318      	orrs	r0, r3
 8021984:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8021988:	fb02 c200 	mla	r2, r2, r0, ip
 802198c:	0d53      	lsrs	r3, r2, #21
 802198e:	0952      	lsrs	r2, r2, #5
 8021990:	8838      	ldrh	r0, [r7, #0]
 8021992:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021996:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802199a:	431a      	orrs	r2, r3
 802199c:	b292      	uxth	r2, r2
 802199e:	1201      	asrs	r1, r0, #8
 80219a0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 80219a4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80219a8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80219ac:	fb11 f104 	smulbb	r1, r1, r4
 80219b0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80219b4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80219b8:	00c0      	lsls	r0, r0, #3
 80219ba:	fb0c 1c03 	mla	ip, ip, r3, r1
 80219be:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80219c2:	10d1      	asrs	r1, r2, #3
 80219c4:	b2c0      	uxtb	r0, r0
 80219c6:	00d2      	lsls	r2, r2, #3
 80219c8:	b2d2      	uxtb	r2, r2
 80219ca:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80219ce:	fb1e fe04 	smulbb	lr, lr, r4
 80219d2:	fb10 f004 	smulbb	r0, r0, r4
 80219d6:	fa1f fc8c 	uxth.w	ip, ip
 80219da:	fb01 e103 	mla	r1, r1, r3, lr
 80219de:	fb02 0303 	mla	r3, r2, r3, r0
 80219e2:	b29a      	uxth	r2, r3
 80219e4:	f10c 0301 	add.w	r3, ip, #1
 80219e8:	b289      	uxth	r1, r1
 80219ea:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80219ee:	1c53      	adds	r3, r2, #1
 80219f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80219f4:	1c4a      	adds	r2, r1, #1
 80219f6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80219fa:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80219fe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021a02:	0949      	lsrs	r1, r1, #5
 8021a04:	ea43 030c 	orr.w	r3, r3, ip
 8021a08:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021a0c:	430b      	orrs	r3, r1
 8021a0e:	803b      	strh	r3, [r7, #0]
 8021a10:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8021a12:	449a      	add	sl, r3
 8021a14:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021a16:	3702      	adds	r7, #2
 8021a18:	441d      	add	r5, r3
 8021a1a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021a1e:	e742      	b.n	80218a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021a20:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8021a22:	449a      	add	sl, r3
 8021a24:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021a26:	441d      	add	r5, r3
 8021a28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021a2a:	3b01      	subs	r3, #1
 8021a2c:	9309      	str	r3, [sp, #36]	@ 0x24
 8021a2e:	f108 0802 	add.w	r8, r8, #2
 8021a32:	e718      	b.n	8021866 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8021a34:	d023      	beq.n	8021a7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8021a36:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021a38:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8021a3a:	3b01      	subs	r3, #1
 8021a3c:	fb00 a003 	mla	r0, r0, r3, sl
 8021a40:	1400      	asrs	r0, r0, #16
 8021a42:	f53f af2d 	bmi.w	80218a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021a46:	3901      	subs	r1, #1
 8021a48:	4288      	cmp	r0, r1
 8021a4a:	f6bf af29 	bge.w	80218a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021a4e:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8021a50:	fb01 5303 	mla	r3, r1, r3, r5
 8021a54:	141b      	asrs	r3, r3, #16
 8021a56:	f53f af23 	bmi.w	80218a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021a5a:	3a01      	subs	r2, #1
 8021a5c:	4293      	cmp	r3, r2
 8021a5e:	f6bf af1f 	bge.w	80218a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021a62:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8021a66:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 8021a6a:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8021a6e:	f1be 0f00 	cmp.w	lr, #0
 8021a72:	dc6c      	bgt.n	8021b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8021a74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021a76:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021a7a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8021a7e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021a80:	2b00      	cmp	r3, #0
 8021a82:	f340 810e 	ble.w	8021ca2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8021a86:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021a8a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021a8e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021a92:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021a94:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021a98:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021a9c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021aa0:	eef0 6a62 	vmov.f32	s13, s5
 8021aa4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021aa8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021aac:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021ab0:	ee16 aa90 	vmov	sl, s13
 8021ab4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021ab8:	eef0 6a43 	vmov.f32	s13, s6
 8021abc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021ac0:	ee12 2a90 	vmov	r2, s5
 8021ac4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021ac8:	fb92 f3f3 	sdiv	r3, r2, r3
 8021acc:	ee13 2a10 	vmov	r2, s6
 8021ad0:	9325      	str	r3, [sp, #148]	@ 0x94
 8021ad2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021ad4:	fb92 f3f3 	sdiv	r3, r2, r3
 8021ad8:	9326      	str	r3, [sp, #152]	@ 0x98
 8021ada:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021adc:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8021ade:	3b01      	subs	r3, #1
 8021ae0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021ae4:	930c      	str	r3, [sp, #48]	@ 0x30
 8021ae6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021ae8:	bf08      	it	eq
 8021aea:	4613      	moveq	r3, r2
 8021aec:	ee16 5a90 	vmov	r5, s13
 8021af0:	9309      	str	r3, [sp, #36]	@ 0x24
 8021af2:	eeb0 3a67 	vmov.f32	s6, s15
 8021af6:	eef0 2a47 	vmov.f32	s5, s14
 8021afa:	e6a6      	b.n	802184a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021afc:	2900      	cmp	r1, #0
 8021afe:	f43f af10 	beq.w	8021922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021b02:	f819 3003 	ldrb.w	r3, [r9, r3]
 8021b06:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021b0a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021b0c:	e709      	b.n	8021922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021b0e:	f112 0901 	adds.w	r9, r2, #1
 8021b12:	f53f af7d 	bmi.w	8021a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021b16:	454b      	cmp	r3, r9
 8021b18:	f6ff af7a 	blt.w	8021a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021b1c:	f11c 0901 	adds.w	r9, ip, #1
 8021b20:	f53f af76 	bmi.w	8021a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021b24:	45ce      	cmp	lr, r9
 8021b26:	f6ff af73 	blt.w	8021a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021b2a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021b2c:	9202      	str	r2, [sp, #8]
 8021b2e:	b21b      	sxth	r3, r3
 8021b30:	fa0f f28e 	sxth.w	r2, lr
 8021b34:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8021b38:	e9cd c003 	strd	ip, r0, [sp, #12]
 8021b3c:	9201      	str	r2, [sp, #4]
 8021b3e:	9300      	str	r3, [sp, #0]
 8021b40:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8021b42:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8021b44:	4633      	mov	r3, r6
 8021b46:	4639      	mov	r1, r7
 8021b48:	f7ff fd8e 	bl	8021668 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8021b4c:	e760      	b.n	8021a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8021b4e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021b50:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021b52:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021b56:	ea4f 422a 	mov.w	r2, sl, asr #16
 8021b5a:	1429      	asrs	r1, r5, #16
 8021b5c:	fb03 2101 	mla	r1, r3, r1, r2
 8021b60:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8021b62:	440a      	add	r2, r1
 8021b64:	5c61      	ldrb	r1, [r4, r1]
 8021b66:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8021b6a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021b6e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8021b72:	f1bc 0f00 	cmp.w	ip, #0
 8021b76:	f000 808c 	beq.w	8021c92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8021b7a:	7857      	ldrb	r7, [r2, #1]
 8021b7c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8021b80:	9413      	str	r4, [sp, #76]	@ 0x4c
 8021b82:	b140      	cbz	r0, 8021b96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021b84:	18d7      	adds	r7, r2, r3
 8021b86:	5cd3      	ldrb	r3, [r2, r3]
 8021b88:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021b8c:	9310      	str	r3, [sp, #64]	@ 0x40
 8021b8e:	787b      	ldrb	r3, [r7, #1]
 8021b90:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021b94:	9314      	str	r3, [sp, #80]	@ 0x50
 8021b96:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021b98:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8021b9a:	fb1c f200 	smulbb	r2, ip, r0
 8021b9e:	041f      	lsls	r7, r3, #16
 8021ba0:	10d2      	asrs	r2, r2, #3
 8021ba2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8021ba6:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8021baa:	431f      	orrs	r7, r3
 8021bac:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8021bb0:	9317      	str	r3, [sp, #92]	@ 0x5c
 8021bb2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8021bb4:	041b      	lsls	r3, r3, #16
 8021bb6:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8021bba:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8021bbe:	ea43 030b 	orr.w	r3, r3, fp
 8021bc2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8021bc4:	4353      	muls	r3, r2
 8021bc6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021bca:	fb04 3707 	mla	r7, r4, r7, r3
 8021bce:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8021bd2:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8021bd6:	ea43 0b01 	orr.w	fp, r3, r1
 8021bda:	f1c0 0110 	rsb	r1, r0, #16
 8021bde:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021be0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021be2:	eba1 0c0c 	sub.w	ip, r1, ip
 8021be6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8021bea:	fb0c 770b 	mla	r7, ip, fp, r7
 8021bee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021bf2:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 8021bf6:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8021bfa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8021bfe:	ea4c 0c0b 	orr.w	ip, ip, fp
 8021c02:	fb02 770c 	mla	r7, r2, ip, r7
 8021c06:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8021c08:	0d79      	lsrs	r1, r7, #21
 8021c0a:	097f      	lsrs	r7, r7, #5
 8021c0c:	8812      	ldrh	r2, [r2, #0]
 8021c0e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021c12:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8021c16:	430f      	orrs	r7, r1
 8021c18:	b2bb      	uxth	r3, r7
 8021c1a:	1211      	asrs	r1, r2, #8
 8021c1c:	1218      	asrs	r0, r3, #8
 8021c1e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8021c22:	fb11 f104 	smulbb	r1, r1, r4
 8021c26:	10d7      	asrs	r7, r2, #3
 8021c28:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021c2c:	00d2      	lsls	r2, r2, #3
 8021c2e:	fb00 1009 	mla	r0, r0, r9, r1
 8021c32:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8021c36:	10d9      	asrs	r1, r3, #3
 8021c38:	b2d2      	uxtb	r2, r2
 8021c3a:	00db      	lsls	r3, r3, #3
 8021c3c:	fb17 f704 	smulbb	r7, r7, r4
 8021c40:	fb12 f204 	smulbb	r2, r2, r4
 8021c44:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021c48:	b2db      	uxtb	r3, r3
 8021c4a:	b280      	uxth	r0, r0
 8021c4c:	fb01 7109 	mla	r1, r1, r9, r7
 8021c50:	fb03 2309 	mla	r3, r3, r9, r2
 8021c54:	b29b      	uxth	r3, r3
 8021c56:	b289      	uxth	r1, r1
 8021c58:	1c42      	adds	r2, r0, #1
 8021c5a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021c5e:	1c4f      	adds	r7, r1, #1
 8021c60:	1c5a      	adds	r2, r3, #1
 8021c62:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021c66:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021c6a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8021c6e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021c72:	0949      	lsrs	r1, r1, #5
 8021c74:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021c76:	4310      	orrs	r0, r2
 8021c78:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021c7c:	4308      	orrs	r0, r1
 8021c7e:	f823 0b02 	strh.w	r0, [r3], #2
 8021c82:	930e      	str	r3, [sp, #56]	@ 0x38
 8021c84:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8021c86:	449a      	add	sl, r3
 8021c88:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021c8a:	f10e 3eff 	add.w	lr, lr, #4294967295
 8021c8e:	441d      	add	r5, r3
 8021c90:	e6ed      	b.n	8021a6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8021c92:	2800      	cmp	r0, #0
 8021c94:	f43f af7f 	beq.w	8021b96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021c98:	5cd3      	ldrb	r3, [r2, r3]
 8021c9a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021c9e:	9310      	str	r3, [sp, #64]	@ 0x40
 8021ca0:	e779      	b.n	8021b96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021ca2:	b019      	add	sp, #100	@ 0x64
 8021ca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021ca8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021ca8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021cac:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 8021cb0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8021cb4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 8021cb8:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8021cbc:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8021cc0:	8808      	ldrh	r0, [r1, #0]
 8021cc2:	fb08 470e 	mla	r7, r8, lr, r4
 8021cc6:	f1b8 0f00 	cmp.w	r8, #0
 8021cca:	eb02 0907 	add.w	r9, r2, r7
 8021cce:	db67      	blt.n	8021da0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8021cd0:	45c2      	cmp	sl, r8
 8021cd2:	dd65      	ble.n	8021da0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8021cd4:	2c00      	cmp	r4, #0
 8021cd6:	db61      	blt.n	8021d9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8021cd8:	45a6      	cmp	lr, r4
 8021cda:	dd5f      	ble.n	8021d9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8021cdc:	5dd2      	ldrb	r2, [r2, r7]
 8021cde:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8021ce2:	1c62      	adds	r2, r4, #1
 8021ce4:	d45f      	bmi.n	8021da6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8021ce6:	4596      	cmp	lr, r2
 8021ce8:	dd5d      	ble.n	8021da6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8021cea:	2d00      	cmp	r5, #0
 8021cec:	d05b      	beq.n	8021da6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8021cee:	f899 2001 	ldrb.w	r2, [r9, #1]
 8021cf2:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8021cf6:	f118 0801 	adds.w	r8, r8, #1
 8021cfa:	d458      	bmi.n	8021dae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021cfc:	45c2      	cmp	sl, r8
 8021cfe:	dd56      	ble.n	8021dae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021d00:	2e00      	cmp	r6, #0
 8021d02:	d054      	beq.n	8021dae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021d04:	2c00      	cmp	r4, #0
 8021d06:	db50      	blt.n	8021daa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8021d08:	45a6      	cmp	lr, r4
 8021d0a:	dd4e      	ble.n	8021daa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8021d0c:	f819 200e 	ldrb.w	r2, [r9, lr]
 8021d10:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8021d14:	3401      	adds	r4, #1
 8021d16:	d407      	bmi.n	8021d28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8021d18:	45a6      	cmp	lr, r4
 8021d1a:	dd05      	ble.n	8021d28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8021d1c:	b125      	cbz	r5, 8021d28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8021d1e:	44ce      	add	lr, r9
 8021d20:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8021d24:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8021d28:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8021d2c:	fb15 f406 	smulbb	r4, r5, r6
 8021d30:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8021d34:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8021d38:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8021d3c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8021d40:	ea43 0c0c 	orr.w	ip, r3, ip
 8021d44:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8021d48:	f1c6 0310 	rsb	r3, r6, #16
 8021d4c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8021d50:	1b5b      	subs	r3, r3, r5
 8021d52:	ea4e 0707 	orr.w	r7, lr, r7
 8021d56:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8021d5a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021d5e:	437d      	muls	r5, r7
 8021d60:	fb03 5c0c 	mla	ip, r3, ip, r5
 8021d64:	0403      	lsls	r3, r0, #16
 8021d66:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8021d6a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021d6e:	4318      	orrs	r0, r3
 8021d70:	0413      	lsls	r3, r2, #16
 8021d72:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8021d76:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021d7a:	4313      	orrs	r3, r2
 8021d7c:	fb04 c000 	mla	r0, r4, r0, ip
 8021d80:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8021d84:	fb06 0003 	mla	r0, r6, r3, r0
 8021d88:	0d43      	lsrs	r3, r0, #21
 8021d8a:	0940      	lsrs	r0, r0, #5
 8021d8c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021d90:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021d94:	4318      	orrs	r0, r3
 8021d96:	8008      	strh	r0, [r1, #0]
 8021d98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021d9c:	4684      	mov	ip, r0
 8021d9e:	e7a0      	b.n	8021ce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8021da0:	4607      	mov	r7, r0
 8021da2:	4684      	mov	ip, r0
 8021da4:	e7a7      	b.n	8021cf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8021da6:	4607      	mov	r7, r0
 8021da8:	e7a5      	b.n	8021cf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8021daa:	4602      	mov	r2, r0
 8021dac:	e7b2      	b.n	8021d14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8021dae:	4602      	mov	r2, r0
 8021db0:	e7ba      	b.n	8021d28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08021db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021db2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021db6:	b093      	sub	sp, #76	@ 0x4c
 8021db8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8021dbc:	920f      	str	r2, [sp, #60]	@ 0x3c
 8021dbe:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8021dc0:	9108      	str	r1, [sp, #32]
 8021dc2:	9306      	str	r3, [sp, #24]
 8021dc4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8021dc8:	9010      	str	r0, [sp, #64]	@ 0x40
 8021dca:	6850      	ldr	r0, [r2, #4]
 8021dcc:	6812      	ldr	r2, [r2, #0]
 8021dce:	fb00 1303 	mla	r3, r0, r3, r1
 8021dd2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8021dd6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021dd8:	681b      	ldr	r3, [r3, #0]
 8021dda:	9307      	str	r3, [sp, #28]
 8021ddc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021dde:	685f      	ldr	r7, [r3, #4]
 8021de0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8021de4:	3704      	adds	r7, #4
 8021de6:	9b08      	ldr	r3, [sp, #32]
 8021de8:	2b00      	cmp	r3, #0
 8021dea:	dc03      	bgt.n	8021df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021dec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8021dee:	2b00      	cmp	r3, #0
 8021df0:	f340 81b2 	ble.w	8022158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021df4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021df6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021dfa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021dfe:	1e48      	subs	r0, r1, #1
 8021e00:	f102 3cff 	add.w	ip, r2, #4294967295
 8021e04:	9b06      	ldr	r3, [sp, #24]
 8021e06:	2b00      	cmp	r3, #0
 8021e08:	f340 80a9 	ble.w	8021f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8021e0c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021e10:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021e14:	d406      	bmi.n	8021e24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e16:	4586      	cmp	lr, r0
 8021e18:	da04      	bge.n	8021e24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e1a:	2b00      	cmp	r3, #0
 8021e1c:	db02      	blt.n	8021e24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021e1e:	4563      	cmp	r3, ip
 8021e20:	f2c0 809e 	blt.w	8021f60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021e24:	f11e 0e01 	adds.w	lr, lr, #1
 8021e28:	f100 808f 	bmi.w	8021f4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e2c:	4571      	cmp	r1, lr
 8021e2e:	f2c0 808c 	blt.w	8021f4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e32:	3301      	adds	r3, #1
 8021e34:	f100 8089 	bmi.w	8021f4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e38:	429a      	cmp	r2, r3
 8021e3a:	f2c0 8086 	blt.w	8021f4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e3e:	f8dd b018 	ldr.w	fp, [sp, #24]
 8021e42:	46c8      	mov	r8, r9
 8021e44:	f1bb 0f00 	cmp.w	fp, #0
 8021e48:	f340 80a6 	ble.w	8021f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8021e4c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8021e4e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021e50:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021e54:	689b      	ldr	r3, [r3, #8]
 8021e56:	1422      	asrs	r2, r4, #16
 8021e58:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021e5c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021e60:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021e64:	f100 80e3 	bmi.w	802202e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021e68:	f103 3aff 	add.w	sl, r3, #4294967295
 8021e6c:	4552      	cmp	r2, sl
 8021e6e:	f280 80de 	bge.w	802202e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021e72:	f1bc 0f00 	cmp.w	ip, #0
 8021e76:	f2c0 80da 	blt.w	802202e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021e7a:	f10e 3aff 	add.w	sl, lr, #4294967295
 8021e7e:	45d4      	cmp	ip, sl
 8021e80:	f280 80d5 	bge.w	802202e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021e84:	b21b      	sxth	r3, r3
 8021e86:	fb0c 2203 	mla	r2, ip, r3, r2
 8021e8a:	9d07      	ldr	r5, [sp, #28]
 8021e8c:	eb05 0a02 	add.w	sl, r5, r2
 8021e90:	5caa      	ldrb	r2, [r5, r2]
 8021e92:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8021e96:	2800      	cmp	r0, #0
 8021e98:	f000 80c0 	beq.w	802201c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8021e9c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021ea0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8021ea4:	920b      	str	r2, [sp, #44]	@ 0x2c
 8021ea6:	b151      	cbz	r1, 8021ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8021ea8:	eb0a 0203 	add.w	r2, sl, r3
 8021eac:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8021eb0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021eb4:	9309      	str	r3, [sp, #36]	@ 0x24
 8021eb6:	7853      	ldrb	r3, [r2, #1]
 8021eb8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021ebc:	930c      	str	r3, [sp, #48]	@ 0x30
 8021ebe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021ec0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021ec2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021ec6:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8021eca:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8021ece:	ea4c 0c03 	orr.w	ip, ip, r3
 8021ed2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021ed4:	041b      	lsls	r3, r3, #16
 8021ed6:	fb10 f201 	smulbb	r2, r0, r1
 8021eda:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8021ede:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8021ee2:	10d2      	asrs	r2, r2, #3
 8021ee4:	432b      	orrs	r3, r5
 8021ee6:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8021eea:	4353      	muls	r3, r2
 8021eec:	fb0a 330c 	mla	r3, sl, ip, r3
 8021ef0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8021ef4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8021ef8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021efc:	ea4c 0e0e 	orr.w	lr, ip, lr
 8021f00:	f1c1 0c10 	rsb	ip, r1, #16
 8021f04:	ebac 0c00 	sub.w	ip, ip, r0
 8021f08:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8021f0c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8021f10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021f12:	0418      	lsls	r0, r3, #16
 8021f14:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8021f18:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8021f1c:	4318      	orrs	r0, r3
 8021f1e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8021f22:	fb02 c200 	mla	r2, r2, r0, ip
 8021f26:	0d53      	lsrs	r3, r2, #21
 8021f28:	0952      	lsrs	r2, r2, #5
 8021f2a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021f2e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021f32:	431a      	orrs	r2, r3
 8021f34:	f8a8 2000 	strh.w	r2, [r8]
 8021f38:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8021f3a:	441c      	add	r4, r3
 8021f3c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021f3e:	f108 0802 	add.w	r8, r8, #2
 8021f42:	441e      	add	r6, r3
 8021f44:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021f48:	e77c      	b.n	8021e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021f4a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8021f4c:	441c      	add	r4, r3
 8021f4e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021f50:	441e      	add	r6, r3
 8021f52:	9b06      	ldr	r3, [sp, #24]
 8021f54:	3b01      	subs	r3, #1
 8021f56:	9306      	str	r3, [sp, #24]
 8021f58:	f109 0902 	add.w	r9, r9, #2
 8021f5c:	e752      	b.n	8021e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8021f5e:	d020      	beq.n	8021fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8021f60:	9b06      	ldr	r3, [sp, #24]
 8021f62:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8021f64:	3b01      	subs	r3, #1
 8021f66:	fb00 4003 	mla	r0, r0, r3, r4
 8021f6a:	1400      	asrs	r0, r0, #16
 8021f6c:	f53f af67 	bmi.w	8021e3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021f70:	3901      	subs	r1, #1
 8021f72:	4288      	cmp	r0, r1
 8021f74:	f6bf af63 	bge.w	8021e3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021f78:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8021f7a:	fb01 6303 	mla	r3, r1, r3, r6
 8021f7e:	141b      	asrs	r3, r3, #16
 8021f80:	f53f af5d 	bmi.w	8021e3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021f84:	3a01      	subs	r2, #1
 8021f86:	4293      	cmp	r3, r2
 8021f88:	f6bf af59 	bge.w	8021e3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021f8c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8021f90:	46ca      	mov	sl, r9
 8021f92:	f1b8 0f00 	cmp.w	r8, #0
 8021f96:	dc67      	bgt.n	8022068 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8021f98:	9b06      	ldr	r3, [sp, #24]
 8021f9a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8021f9e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8021fa2:	9b08      	ldr	r3, [sp, #32]
 8021fa4:	2b00      	cmp	r3, #0
 8021fa6:	f340 80d7 	ble.w	8022158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021faa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021fae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021fb2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8021fb6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021fb8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021fbc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021fc0:	eeb0 6a62 	vmov.f32	s12, s5
 8021fc4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021fc8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8021fcc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021fd0:	ee16 4a10 	vmov	r4, s12
 8021fd4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021fd8:	eeb0 6a43 	vmov.f32	s12, s6
 8021fdc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021fe0:	ee12 2a90 	vmov	r2, s5
 8021fe4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021fe8:	fb92 f3f3 	sdiv	r3, r2, r3
 8021fec:	ee13 2a10 	vmov	r2, s6
 8021ff0:	931f      	str	r3, [sp, #124]	@ 0x7c
 8021ff2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021ff4:	fb92 f3f3 	sdiv	r3, r2, r3
 8021ff8:	9320      	str	r3, [sp, #128]	@ 0x80
 8021ffa:	9b08      	ldr	r3, [sp, #32]
 8021ffc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8021ffe:	3b01      	subs	r3, #1
 8022000:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022004:	9308      	str	r3, [sp, #32]
 8022006:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022008:	bf08      	it	eq
 802200a:	4613      	moveq	r3, r2
 802200c:	ee16 6a10 	vmov	r6, s12
 8022010:	9306      	str	r3, [sp, #24]
 8022012:	eeb0 3a67 	vmov.f32	s6, s15
 8022016:	eef0 2a47 	vmov.f32	s5, s14
 802201a:	e6e4      	b.n	8021de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802201c:	2900      	cmp	r1, #0
 802201e:	f43f af4e 	beq.w	8021ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022022:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022026:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802202a:	9309      	str	r3, [sp, #36]	@ 0x24
 802202c:	e747      	b.n	8021ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802202e:	f112 0a01 	adds.w	sl, r2, #1
 8022032:	d481      	bmi.n	8021f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022034:	4553      	cmp	r3, sl
 8022036:	f6ff af7f 	blt.w	8021f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802203a:	f11c 0a01 	adds.w	sl, ip, #1
 802203e:	f53f af7b 	bmi.w	8021f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022042:	45d6      	cmp	lr, sl
 8022044:	f6ff af78 	blt.w	8021f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022048:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 802204c:	b21b      	sxth	r3, r3
 802204e:	fa0f f28e 	sxth.w	r2, lr
 8022052:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8022056:	9201      	str	r2, [sp, #4]
 8022058:	9300      	str	r3, [sp, #0]
 802205a:	9a07      	ldr	r2, [sp, #28]
 802205c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 802205e:	463b      	mov	r3, r7
 8022060:	4641      	mov	r1, r8
 8022062:	f7ff fe21 	bl	8021ca8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022066:	e767      	b.n	8021f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022068:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802206a:	9d07      	ldr	r5, [sp, #28]
 802206c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022070:	1422      	asrs	r2, r4, #16
 8022072:	1431      	asrs	r1, r6, #16
 8022074:	fb03 2101 	mla	r1, r3, r1, r2
 8022078:	9a07      	ldr	r2, [sp, #28]
 802207a:	440a      	add	r2, r1
 802207c:	5c69      	ldrb	r1, [r5, r1]
 802207e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8022082:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022086:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 802208a:	f1be 0f00 	cmp.w	lr, #0
 802208e:	d05c      	beq.n	802214a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8022090:	f892 c001 	ldrb.w	ip, [r2, #1]
 8022094:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8022098:	950d      	str	r5, [sp, #52]	@ 0x34
 802209a:	b150      	cbz	r0, 80220b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802209c:	eb02 0c03 	add.w	ip, r2, r3
 80220a0:	5cd3      	ldrb	r3, [r2, r3]
 80220a2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80220a6:	930a      	str	r3, [sp, #40]	@ 0x28
 80220a8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80220ac:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80220b0:	930e      	str	r3, [sp, #56]	@ 0x38
 80220b2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80220b4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80220b6:	fb1e f200 	smulbb	r2, lr, r0
 80220ba:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80220be:	10d2      	asrs	r2, r2, #3
 80220c0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80220c4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80220c8:	ea4c 0c03 	orr.w	ip, ip, r3
 80220cc:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80220d0:	9311      	str	r3, [sp, #68]	@ 0x44
 80220d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80220d4:	041b      	lsls	r3, r3, #16
 80220d6:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 80220da:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80220de:	ea43 030b 	orr.w	r3, r3, fp
 80220e2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80220e4:	4353      	muls	r3, r2
 80220e6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80220ea:	fb05 3c0c 	mla	ip, r5, ip, r3
 80220ee:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80220f2:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 80220f6:	ea43 0b01 	orr.w	fp, r3, r1
 80220fa:	f1c0 0110 	rsb	r1, r0, #16
 80220fe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022100:	eba1 0e0e 	sub.w	lr, r1, lr
 8022104:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8022108:	fb0e cc0b 	mla	ip, lr, fp, ip
 802210c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8022110:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 8022114:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022118:	ea4b 0e0e 	orr.w	lr, fp, lr
 802211c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022120:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022124:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8022128:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802212c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022130:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022134:	ea43 0c0c 	orr.w	ip, r3, ip
 8022138:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802213a:	f82a cb02 	strh.w	ip, [sl], #2
 802213e:	441c      	add	r4, r3
 8022140:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022142:	f108 38ff 	add.w	r8, r8, #4294967295
 8022146:	441e      	add	r6, r3
 8022148:	e723      	b.n	8021f92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802214a:	2800      	cmp	r0, #0
 802214c:	d0b1      	beq.n	80220b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802214e:	5cd3      	ldrb	r3, [r2, r3]
 8022150:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022154:	930a      	str	r3, [sp, #40]	@ 0x28
 8022156:	e7ac      	b.n	80220b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8022158:	b013      	add	sp, #76	@ 0x4c
 802215a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802215e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 802215e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022162:	880d      	ldrh	r5, [r1, #0]
 8022164:	b087      	sub	sp, #28
 8022166:	10ef      	asrs	r7, r5, #3
 8022168:	ea4f 2a25 	mov.w	sl, r5, asr #8
 802216c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8022170:	00ed      	lsls	r5, r5, #3
 8022172:	9701      	str	r7, [sp, #4]
 8022174:	b2ed      	uxtb	r5, r5
 8022176:	9502      	str	r5, [sp, #8]
 8022178:	9d01      	ldr	r5, [sp, #4]
 802217a:	9103      	str	r1, [sp, #12]
 802217c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8022180:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 8022184:	9902      	ldr	r1, [sp, #8]
 8022186:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 802218a:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 802218e:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 8022192:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 8022196:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 802219a:	022d      	lsls	r5, r5, #8
 802219c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80221a0:	fb06 0709 	mla	r7, r6, r9, r0
 80221a4:	430d      	orrs	r5, r1
 80221a6:	2e00      	cmp	r6, #0
 80221a8:	eb02 0c07 	add.w	ip, r2, r7
 80221ac:	9505      	str	r5, [sp, #20]
 80221ae:	f2c0 80b6 	blt.w	802231e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80221b2:	45b3      	cmp	fp, r6
 80221b4:	f340 80b3 	ble.w	802231e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80221b8:	2800      	cmp	r0, #0
 80221ba:	f2c0 80ae 	blt.w	802231a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80221be:	4581      	cmp	r9, r0
 80221c0:	f340 80ab 	ble.w	802231a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80221c4:	5dd7      	ldrb	r7, [r2, r7]
 80221c6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80221ca:	441f      	add	r7, r3
 80221cc:	1c42      	adds	r2, r0, #1
 80221ce:	f100 80a9 	bmi.w	8022324 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80221d2:	4591      	cmp	r9, r2
 80221d4:	f340 80a6 	ble.w	8022324 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80221d8:	2c00      	cmp	r4, #0
 80221da:	f000 80a3 	beq.w	8022324 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80221de:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80221e2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80221e6:	441d      	add	r5, r3
 80221e8:	3601      	adds	r6, #1
 80221ea:	f100 809f 	bmi.w	802232c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80221ee:	45b3      	cmp	fp, r6
 80221f0:	f340 809c 	ble.w	802232c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80221f4:	f1be 0f00 	cmp.w	lr, #0
 80221f8:	f000 8098 	beq.w	802232c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80221fc:	2800      	cmp	r0, #0
 80221fe:	f2c0 8093 	blt.w	8022328 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8022202:	4581      	cmp	r9, r0
 8022204:	f340 8090 	ble.w	8022328 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8022208:	f81c 6009 	ldrb.w	r6, [ip, r9]
 802220c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022210:	441e      	add	r6, r3
 8022212:	3001      	adds	r0, #1
 8022214:	f100 808d 	bmi.w	8022332 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8022218:	4581      	cmp	r9, r0
 802221a:	f340 808a 	ble.w	8022332 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802221e:	2c00      	cmp	r4, #0
 8022220:	f000 8087 	beq.w	8022332 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8022224:	44e1      	add	r9, ip
 8022226:	f899 2001 	ldrb.w	r2, [r9, #1]
 802222a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802222e:	4413      	add	r3, r2
 8022230:	b2a4      	uxth	r4, r4
 8022232:	fa1f fe8e 	uxth.w	lr, lr
 8022236:	fb04 fb0e 	mul.w	fp, r4, lr
 802223a:	0124      	lsls	r4, r4, #4
 802223c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8022240:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 8022244:	eba4 040b 	sub.w	r4, r4, fp
 8022248:	fa1f f08e 	uxth.w	r0, lr
 802224c:	b2a2      	uxth	r2, r4
 802224e:	78ac      	ldrb	r4, [r5, #2]
 8022250:	f897 c002 	ldrb.w	ip, [r7, #2]
 8022254:	9901      	ldr	r1, [sp, #4]
 8022256:	eba9 0900 	sub.w	r9, r9, r0
 802225a:	fa1f f989 	uxth.w	r9, r9
 802225e:	4354      	muls	r4, r2
 8022260:	fb09 440c 	mla	r4, r9, ip, r4
 8022264:	f896 c002 	ldrb.w	ip, [r6, #2]
 8022268:	fb00 440c 	mla	r4, r0, ip, r4
 802226c:	f893 c002 	ldrb.w	ip, [r3, #2]
 8022270:	fa1f fe88 	uxth.w	lr, r8
 8022274:	ea6f 0808 	mvn.w	r8, r8
 8022278:	fa5f f888 	uxtb.w	r8, r8
 802227c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8022280:	fb1a fa08 	smulbb	sl, sl, r8
 8022284:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8022288:	fb0c ac0e 	mla	ip, ip, lr, sl
 802228c:	f895 a001 	ldrb.w	sl, [r5, #1]
 8022290:	787c      	ldrb	r4, [r7, #1]
 8022292:	782d      	ldrb	r5, [r5, #0]
 8022294:	783f      	ldrb	r7, [r7, #0]
 8022296:	fb02 fa0a 	mul.w	sl, r2, sl
 802229a:	fb09 aa04 	mla	sl, r9, r4, sl
 802229e:	7874      	ldrb	r4, [r6, #1]
 80222a0:	436a      	muls	r2, r5
 80222a2:	7835      	ldrb	r5, [r6, #0]
 80222a4:	fb00 aa04 	mla	sl, r0, r4, sl
 80222a8:	fb09 2207 	mla	r2, r9, r7, r2
 80222ac:	785c      	ldrb	r4, [r3, #1]
 80222ae:	781b      	ldrb	r3, [r3, #0]
 80222b0:	fb00 2005 	mla	r0, r0, r5, r2
 80222b4:	fb0b a404 	mla	r4, fp, r4, sl
 80222b8:	fb0b 0b03 	mla	fp, fp, r3, r0
 80222bc:	9b02      	ldr	r3, [sp, #8]
 80222be:	fb11 fa08 	smulbb	sl, r1, r8
 80222c2:	fa1f fc8c 	uxth.w	ip, ip
 80222c6:	fb13 f808 	smulbb	r8, r3, r8
 80222ca:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80222ce:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80222d2:	fb04 a40e 	mla	r4, r4, lr, sl
 80222d6:	f10c 0301 	add.w	r3, ip, #1
 80222da:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80222de:	fa1f fe8e 	uxth.w	lr, lr
 80222e2:	b2a4      	uxth	r4, r4
 80222e4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80222e8:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 80222ec:	f104 0a01 	add.w	sl, r4, #1
 80222f0:	f10e 0c01 	add.w	ip, lr, #1
 80222f4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80222f8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80222fc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8022300:	0964      	lsrs	r4, r4, #5
 8022302:	ea4c 0c03 	orr.w	ip, ip, r3
 8022306:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802230a:	9b03      	ldr	r3, [sp, #12]
 802230c:	ea4c 0c04 	orr.w	ip, ip, r4
 8022310:	f8a3 c000 	strh.w	ip, [r3]
 8022314:	b007      	add	sp, #28
 8022316:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802231a:	af05      	add	r7, sp, #20
 802231c:	e756      	b.n	80221cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 802231e:	ad05      	add	r5, sp, #20
 8022320:	462f      	mov	r7, r5
 8022322:	e761      	b.n	80221e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8022324:	ad05      	add	r5, sp, #20
 8022326:	e75f      	b.n	80221e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8022328:	ae05      	add	r6, sp, #20
 802232a:	e772      	b.n	8022212 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 802232c:	ab05      	add	r3, sp, #20
 802232e:	461e      	mov	r6, r3
 8022330:	e77e      	b.n	8022230 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8022332:	ab05      	add	r3, sp, #20
 8022334:	e77c      	b.n	8022230 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08022336 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022336:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802233a:	b095      	sub	sp, #84	@ 0x54
 802233c:	9212      	str	r2, [sp, #72]	@ 0x48
 802233e:	9309      	str	r3, [sp, #36]	@ 0x24
 8022340:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8022342:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8022346:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022348:	910e      	str	r1, [sp, #56]	@ 0x38
 802234a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 802234e:	9013      	str	r0, [sp, #76]	@ 0x4c
 8022350:	6850      	ldr	r0, [r2, #4]
 8022352:	6812      	ldr	r2, [r2, #0]
 8022354:	fb00 1303 	mla	r3, r0, r3, r1
 8022358:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802235c:	930a      	str	r3, [sp, #40]	@ 0x28
 802235e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8022360:	681b      	ldr	r3, [r3, #0]
 8022362:	930d      	str	r3, [sp, #52]	@ 0x34
 8022364:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8022366:	685c      	ldr	r4, [r3, #4]
 8022368:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802236a:	43db      	mvns	r3, r3
 802236c:	b2db      	uxtb	r3, r3
 802236e:	3404      	adds	r4, #4
 8022370:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022372:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022374:	2b00      	cmp	r3, #0
 8022376:	dc03      	bgt.n	8022380 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022378:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802237a:	2b00      	cmp	r3, #0
 802237c:	f340 8255 	ble.w	802282a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8022380:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8022382:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022386:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802238a:	1e48      	subs	r0, r1, #1
 802238c:	1e55      	subs	r5, r2, #1
 802238e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022390:	2b00      	cmp	r3, #0
 8022392:	f340 80f9 	ble.w	8022588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8022396:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8022398:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802239a:	1436      	asrs	r6, r6, #16
 802239c:	ea4f 4323 	mov.w	r3, r3, asr #16
 80223a0:	d406      	bmi.n	80223b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80223a2:	4286      	cmp	r6, r0
 80223a4:	da04      	bge.n	80223b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80223a6:	2b00      	cmp	r3, #0
 80223a8:	db02      	blt.n	80223b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80223aa:	42ab      	cmp	r3, r5
 80223ac:	f2c0 80ed 	blt.w	802258a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80223b0:	3601      	adds	r6, #1
 80223b2:	f100 80da 	bmi.w	802256a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80223b6:	42b1      	cmp	r1, r6
 80223b8:	f2c0 80d7 	blt.w	802256a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80223bc:	3301      	adds	r3, #1
 80223be:	f100 80d4 	bmi.w	802256a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80223c2:	429a      	cmp	r2, r3
 80223c4:	f2c0 80d1 	blt.w	802256a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80223c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80223ca:	9311      	str	r3, [sp, #68]	@ 0x44
 80223cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80223ce:	930c      	str	r3, [sp, #48]	@ 0x30
 80223d0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80223d2:	2b00      	cmp	r3, #0
 80223d4:	f340 80fa 	ble.w	80225cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80223d8:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80223da:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80223dc:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80223de:	68c6      	ldr	r6, [r0, #12]
 80223e0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80223e2:	141d      	asrs	r5, r3, #16
 80223e4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80223e8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80223ea:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 80223ec:	1400      	asrs	r0, r0, #16
 80223ee:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80223f2:	6892      	ldr	r2, [r2, #8]
 80223f4:	f100 813e 	bmi.w	8022674 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80223f8:	1e57      	subs	r7, r2, #1
 80223fa:	42b8      	cmp	r0, r7
 80223fc:	f280 813a 	bge.w	8022674 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8022400:	2d00      	cmp	r5, #0
 8022402:	f2c0 8137 	blt.w	8022674 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8022406:	1e77      	subs	r7, r6, #1
 8022408:	42bd      	cmp	r5, r7
 802240a:	f280 8133 	bge.w	8022674 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802240e:	b212      	sxth	r2, r2
 8022410:	fb05 0002 	mla	r0, r5, r2, r0
 8022414:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8022416:	f815 a000 	ldrb.w	sl, [r5, r0]
 802241a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 802241e:	182e      	adds	r6, r5, r0
 8022420:	eb04 050a 	add.w	r5, r4, sl
 8022424:	2b00      	cmp	r3, #0
 8022426:	f000 8117 	beq.w	8022658 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 802242a:	f896 c001 	ldrb.w	ip, [r6, #1]
 802242e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8022432:	44a4      	add	ip, r4
 8022434:	2900      	cmp	r1, #0
 8022436:	f000 8117 	beq.w	8022668 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802243a:	18b0      	adds	r0, r6, r2
 802243c:	5cb2      	ldrb	r2, [r6, r2]
 802243e:	7840      	ldrb	r0, [r0, #1]
 8022440:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022444:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022448:	4422      	add	r2, r4
 802244a:	4420      	add	r0, r4
 802244c:	b29b      	uxth	r3, r3
 802244e:	b289      	uxth	r1, r1
 8022450:	fb03 f901 	mul.w	r9, r3, r1
 8022454:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022458:	011b      	lsls	r3, r3, #4
 802245a:	b289      	uxth	r1, r1
 802245c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8022460:	f895 b002 	ldrb.w	fp, [r5, #2]
 8022464:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8022466:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802246a:	f8b6 e000 	ldrh.w	lr, [r6]
 802246e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 8022472:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 8022476:	eba3 0309 	sub.w	r3, r3, r9
 802247a:	b29b      	uxth	r3, r3
 802247c:	eba8 0801 	sub.w	r8, r8, r1
 8022480:	fa1f f888 	uxth.w	r8, r8
 8022484:	435f      	muls	r7, r3
 8022486:	fb08 770b 	mla	r7, r8, fp, r7
 802248a:	f892 b002 	ldrb.w	fp, [r2, #2]
 802248e:	9310      	str	r3, [sp, #64]	@ 0x40
 8022490:	fb01 770b 	mla	r7, r1, fp, r7
 8022494:	f890 b002 	ldrb.w	fp, [r0, #2]
 8022498:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802249a:	fb09 770b 	mla	r7, r9, fp, r7
 802249e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80224a2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 80224a6:	fb1b fb03 	smulbb	fp, fp, r3
 80224aa:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80224ae:	fb07 b706 	mla	r7, r7, r6, fp
 80224b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80224b4:	f895 b001 	ldrb.w	fp, [r5, #1]
 80224b8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80224bc:	f89c c000 	ldrb.w	ip, [ip]
 80224c0:	435d      	muls	r5, r3
 80224c2:	fb08 550b 	mla	r5, r8, fp, r5
 80224c6:	f892 b001 	ldrb.w	fp, [r2, #1]
 80224ca:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80224cc:	fb01 550b 	mla	r5, r1, fp, r5
 80224d0:	f890 b001 	ldrb.w	fp, [r0, #1]
 80224d4:	fb09 550b 	mla	r5, r9, fp, r5
 80224d8:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80224dc:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80224e0:	fb1b fb03 	smulbb	fp, fp, r3
 80224e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80224e6:	fb03 f30c 	mul.w	r3, r3, ip
 80224ea:	f892 c000 	ldrb.w	ip, [r2]
 80224ee:	fb08 330a 	mla	r3, r8, sl, r3
 80224f2:	fb01 330c 	mla	r3, r1, ip, r3
 80224f6:	f890 c000 	ldrb.w	ip, [r0]
 80224fa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80224fe:	fb09 3c0c 	mla	ip, r9, ip, r3
 8022502:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022504:	fa5f fe8e 	uxtb.w	lr, lr
 8022508:	b2bf      	uxth	r7, r7
 802250a:	fb1e fe03 	smulbb	lr, lr, r3
 802250e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8022512:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8022516:	fb05 b506 	mla	r5, r5, r6, fp
 802251a:	1c7b      	adds	r3, r7, #1
 802251c:	fb0c e606 	mla	r6, ip, r6, lr
 8022520:	b2ad      	uxth	r5, r5
 8022522:	b2b6      	uxth	r6, r6
 8022524:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022528:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 802252c:	f105 0b01 	add.w	fp, r5, #1
 8022530:	1c77      	adds	r7, r6, #1
 8022532:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8022536:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802253a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802253e:	096d      	lsrs	r5, r5, #5
 8022540:	431f      	orrs	r7, r3
 8022542:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022546:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022548:	433d      	orrs	r5, r7
 802254a:	801d      	strh	r5, [r3, #0]
 802254c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802254e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8022550:	3302      	adds	r3, #2
 8022552:	930c      	str	r3, [sp, #48]	@ 0x30
 8022554:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022556:	4413      	add	r3, r2
 8022558:	931f      	str	r3, [sp, #124]	@ 0x7c
 802255a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 802255c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802255e:	4413      	add	r3, r2
 8022560:	9320      	str	r3, [sp, #128]	@ 0x80
 8022562:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8022564:	3b01      	subs	r3, #1
 8022566:	9311      	str	r3, [sp, #68]	@ 0x44
 8022568:	e732      	b.n	80223d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802256a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802256c:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 802256e:	4433      	add	r3, r6
 8022570:	931f      	str	r3, [sp, #124]	@ 0x7c
 8022572:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8022574:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022576:	4433      	add	r3, r6
 8022578:	9320      	str	r3, [sp, #128]	@ 0x80
 802257a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802257c:	3b01      	subs	r3, #1
 802257e:	9309      	str	r3, [sp, #36]	@ 0x24
 8022580:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022582:	3302      	adds	r3, #2
 8022584:	930a      	str	r3, [sp, #40]	@ 0x28
 8022586:	e702      	b.n	802238e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022588:	d027      	beq.n	80225da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802258a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802258c:	9821      	ldr	r0, [sp, #132]	@ 0x84
 802258e:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8022590:	3b01      	subs	r3, #1
 8022592:	fb00 5003 	mla	r0, r0, r3, r5
 8022596:	1400      	asrs	r0, r0, #16
 8022598:	f53f af16 	bmi.w	80223c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802259c:	3901      	subs	r1, #1
 802259e:	4288      	cmp	r0, r1
 80225a0:	f6bf af12 	bge.w	80223c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80225a4:	9922      	ldr	r1, [sp, #136]	@ 0x88
 80225a6:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80225a8:	fb01 0303 	mla	r3, r1, r3, r0
 80225ac:	141b      	asrs	r3, r3, #16
 80225ae:	f53f af0b 	bmi.w	80223c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80225b2:	3a01      	subs	r2, #1
 80225b4:	4293      	cmp	r3, r2
 80225b6:	f6bf af07 	bge.w	80223c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80225ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80225bc:	9311      	str	r3, [sp, #68]	@ 0x44
 80225be:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 80225c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80225c4:	930c      	str	r3, [sp, #48]	@ 0x30
 80225c6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80225c8:	2b00      	cmp	r3, #0
 80225ca:	dc70      	bgt.n	80226ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80225cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80225ce:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80225d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80225d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80225d8:	930a      	str	r3, [sp, #40]	@ 0x28
 80225da:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80225dc:	2b00      	cmp	r3, #0
 80225de:	f340 8124 	ble.w	802282a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80225e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225e6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80225ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80225ee:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80225f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80225fc:	eef0 6a62 	vmov.f32	s13, s5
 8022600:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022604:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022608:	ee77 2a62 	vsub.f32	s5, s14, s5
 802260c:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 8022610:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022614:	eef0 6a43 	vmov.f32	s13, s6
 8022618:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802261c:	ee12 2a90 	vmov	r2, s5
 8022620:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022624:	fb92 f3f3 	sdiv	r3, r2, r3
 8022628:	ee13 2a10 	vmov	r2, s6
 802262c:	9321      	str	r3, [sp, #132]	@ 0x84
 802262e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022630:	fb92 f3f3 	sdiv	r3, r2, r3
 8022634:	9322      	str	r3, [sp, #136]	@ 0x88
 8022636:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022638:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802263a:	3b01      	subs	r3, #1
 802263c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022640:	930e      	str	r3, [sp, #56]	@ 0x38
 8022642:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022644:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 8022648:	bf08      	it	eq
 802264a:	4613      	moveq	r3, r2
 802264c:	9309      	str	r3, [sp, #36]	@ 0x24
 802264e:	eeb0 3a67 	vmov.f32	s6, s15
 8022652:	eef0 2a47 	vmov.f32	s5, s14
 8022656:	e68c      	b.n	8022372 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022658:	b149      	cbz	r1, 802266e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802265a:	5cb2      	ldrb	r2, [r6, r2]
 802265c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022660:	4422      	add	r2, r4
 8022662:	4628      	mov	r0, r5
 8022664:	46ac      	mov	ip, r5
 8022666:	e6f1      	b.n	802244c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022668:	4628      	mov	r0, r5
 802266a:	462a      	mov	r2, r5
 802266c:	e6ee      	b.n	802244c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802266e:	4628      	mov	r0, r5
 8022670:	462a      	mov	r2, r5
 8022672:	e7f7      	b.n	8022664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8022674:	1c47      	adds	r7, r0, #1
 8022676:	f53f af69 	bmi.w	802254c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802267a:	42ba      	cmp	r2, r7
 802267c:	f6ff af66 	blt.w	802254c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8022680:	1c6f      	adds	r7, r5, #1
 8022682:	f53f af63 	bmi.w	802254c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8022686:	42be      	cmp	r6, r7
 8022688:	f6ff af60 	blt.w	802254c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802268c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 802268e:	9002      	str	r0, [sp, #8]
 8022690:	b236      	sxth	r6, r6
 8022692:	b212      	sxth	r2, r2
 8022694:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8022698:	e9cd 5303 	strd	r5, r3, [sp, #12]
 802269c:	9200      	str	r2, [sp, #0]
 802269e:	9601      	str	r6, [sp, #4]
 80226a0:	4623      	mov	r3, r4
 80226a2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 80226a6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80226a8:	f7ff fd59 	bl	802215e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80226ac:	e74e      	b.n	802254c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80226ae:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80226b0:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80226b2:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 80226b4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80226b6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80226ba:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 80226bc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80226c0:	142d      	asrs	r5, r5, #16
 80226c2:	1400      	asrs	r0, r0, #16
 80226c4:	fb02 5000 	mla	r0, r2, r0, r5
 80226c8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80226ca:	f815 9000 	ldrb.w	r9, [r5, r0]
 80226ce:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80226d2:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80226d6:	182e      	adds	r6, r5, r0
 80226d8:	eb04 0509 	add.w	r5, r4, r9
 80226dc:	2b00      	cmp	r3, #0
 80226de:	f000 8096 	beq.w	802280e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80226e2:	7877      	ldrb	r7, [r6, #1]
 80226e4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80226e8:	4427      	add	r7, r4
 80226ea:	2900      	cmp	r1, #0
 80226ec:	f000 8097 	beq.w	802281e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80226f0:	18b0      	adds	r0, r6, r2
 80226f2:	5cb2      	ldrb	r2, [r6, r2]
 80226f4:	7840      	ldrb	r0, [r0, #1]
 80226f6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80226fa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80226fe:	4422      	add	r2, r4
 8022700:	4420      	add	r0, r4
 8022702:	b29b      	uxth	r3, r3
 8022704:	b289      	uxth	r1, r1
 8022706:	fb03 f801 	mul.w	r8, r3, r1
 802270a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802270c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8022710:	f8b6 c000 	ldrh.w	ip, [r6]
 8022714:	78be      	ldrb	r6, [r7, #2]
 8022716:	f814 9009 	ldrb.w	r9, [r4, r9]
 802271a:	011b      	lsls	r3, r3, #4
 802271c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8022720:	b289      	uxth	r1, r1
 8022722:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8022726:	eba3 0308 	sub.w	r3, r3, r8
 802272a:	b29b      	uxth	r3, r3
 802272c:	ebae 0e01 	sub.w	lr, lr, r1
 8022730:	fa1f fe8e 	uxth.w	lr, lr
 8022734:	435e      	muls	r6, r3
 8022736:	fb0e 660b 	mla	r6, lr, fp, r6
 802273a:	f892 b002 	ldrb.w	fp, [r2, #2]
 802273e:	9310      	str	r3, [sp, #64]	@ 0x40
 8022740:	fb01 660b 	mla	r6, r1, fp, r6
 8022744:	f890 b002 	ldrb.w	fp, [r0, #2]
 8022748:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802274a:	fb08 660b 	mla	r6, r8, fp, r6
 802274e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8022752:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8022756:	fb1b fb03 	smulbb	fp, fp, r3
 802275a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802275e:	fb06 b60a 	mla	r6, r6, sl, fp
 8022762:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8022764:	f895 b001 	ldrb.w	fp, [r5, #1]
 8022768:	787d      	ldrb	r5, [r7, #1]
 802276a:	783f      	ldrb	r7, [r7, #0]
 802276c:	435d      	muls	r5, r3
 802276e:	fb0e 550b 	mla	r5, lr, fp, r5
 8022772:	f892 b001 	ldrb.w	fp, [r2, #1]
 8022776:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022778:	fb01 550b 	mla	r5, r1, fp, r5
 802277c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8022780:	fb08 550b 	mla	r5, r8, fp, r5
 8022784:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8022788:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 802278c:	fb1b fb03 	smulbb	fp, fp, r3
 8022790:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8022792:	437b      	muls	r3, r7
 8022794:	7817      	ldrb	r7, [r2, #0]
 8022796:	fb0e 3309 	mla	r3, lr, r9, r3
 802279a:	fb01 3307 	mla	r3, r1, r7, r3
 802279e:	7807      	ldrb	r7, [r0, #0]
 80227a0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80227a4:	fb08 3707 	mla	r7, r8, r7, r3
 80227a8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80227aa:	fa5f fc8c 	uxtb.w	ip, ip
 80227ae:	fb1c fc03 	smulbb	ip, ip, r3
 80227b2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80227b6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80227ba:	fb05 b50a 	mla	r5, r5, sl, fp
 80227be:	fb07 c70a 	mla	r7, r7, sl, ip
 80227c2:	b2b6      	uxth	r6, r6
 80227c4:	b2ad      	uxth	r5, r5
 80227c6:	b2bf      	uxth	r7, r7
 80227c8:	1c73      	adds	r3, r6, #1
 80227ca:	1c7a      	adds	r2, r7, #1
 80227cc:	f105 0b01 	add.w	fp, r5, #1
 80227d0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80227d4:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80227d8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80227dc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80227e0:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80227e4:	096d      	lsrs	r5, r5, #5
 80227e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80227e8:	4316      	orrs	r6, r2
 80227ea:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80227ee:	432e      	orrs	r6, r5
 80227f0:	f823 6b02 	strh.w	r6, [r3], #2
 80227f4:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80227f6:	930c      	str	r3, [sp, #48]	@ 0x30
 80227f8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80227fa:	4413      	add	r3, r2
 80227fc:	931f      	str	r3, [sp, #124]	@ 0x7c
 80227fe:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8022800:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022802:	4413      	add	r3, r2
 8022804:	9320      	str	r3, [sp, #128]	@ 0x80
 8022806:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8022808:	3b01      	subs	r3, #1
 802280a:	9311      	str	r3, [sp, #68]	@ 0x44
 802280c:	e6db      	b.n	80225c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 802280e:	b149      	cbz	r1, 8022824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8022810:	5cb2      	ldrb	r2, [r6, r2]
 8022812:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022816:	4422      	add	r2, r4
 8022818:	4628      	mov	r0, r5
 802281a:	462f      	mov	r7, r5
 802281c:	e771      	b.n	8022702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802281e:	4628      	mov	r0, r5
 8022820:	462a      	mov	r2, r5
 8022822:	e76e      	b.n	8022702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8022824:	4628      	mov	r0, r5
 8022826:	462a      	mov	r2, r5
 8022828:	e7f7      	b.n	802281a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802282a:	b015      	add	sp, #84	@ 0x54
 802282c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8022830:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022834:	880f      	ldrh	r7, [r1, #0]
 8022836:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 802283a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802283e:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 8022842:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8022846:	023c      	lsls	r4, r7, #8
 8022848:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 802284c:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 8022850:	017c      	lsls	r4, r7, #5
 8022852:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 8022856:	00ff      	lsls	r7, r7, #3
 8022858:	ea4b 0404 	orr.w	r4, fp, r4
 802285c:	b2ff      	uxtb	r7, r7
 802285e:	fb05 ca0e 	mla	sl, r5, lr, ip
 8022862:	4327      	orrs	r7, r4
 8022864:	2d00      	cmp	r5, #0
 8022866:	eb02 080a 	add.w	r8, r2, sl
 802286a:	9701      	str	r7, [sp, #4]
 802286c:	db7e      	blt.n	802296c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 802286e:	45a9      	cmp	r9, r5
 8022870:	dd7c      	ble.n	802296c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8022872:	f1bc 0f00 	cmp.w	ip, #0
 8022876:	db77      	blt.n	8022968 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8022878:	45e6      	cmp	lr, ip
 802287a:	dd75      	ble.n	8022968 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802287c:	f812 700a 	ldrb.w	r7, [r2, sl]
 8022880:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8022884:	441f      	add	r7, r3
 8022886:	f11c 0201 	adds.w	r2, ip, #1
 802288a:	d472      	bmi.n	8022972 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 802288c:	4596      	cmp	lr, r2
 802288e:	dd70      	ble.n	8022972 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8022890:	2800      	cmp	r0, #0
 8022892:	d06e      	beq.n	8022972 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8022894:	f898 4001 	ldrb.w	r4, [r8, #1]
 8022898:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 802289c:	441c      	add	r4, r3
 802289e:	3501      	adds	r5, #1
 80228a0:	d46b      	bmi.n	802297a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80228a2:	45a9      	cmp	r9, r5
 80228a4:	dd69      	ble.n	802297a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80228a6:	2e00      	cmp	r6, #0
 80228a8:	d067      	beq.n	802297a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80228aa:	f1bc 0f00 	cmp.w	ip, #0
 80228ae:	db62      	blt.n	8022976 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80228b0:	45e6      	cmp	lr, ip
 80228b2:	dd60      	ble.n	8022976 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80228b4:	f818 500e 	ldrb.w	r5, [r8, lr]
 80228b8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80228bc:	441d      	add	r5, r3
 80228be:	f11c 0201 	adds.w	r2, ip, #1
 80228c2:	d45d      	bmi.n	8022980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80228c4:	4596      	cmp	lr, r2
 80228c6:	dd5b      	ble.n	8022980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80228c8:	2800      	cmp	r0, #0
 80228ca:	d059      	beq.n	8022980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80228cc:	44c6      	add	lr, r8
 80228ce:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80228d2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80228d6:	4413      	add	r3, r2
 80228d8:	b280      	uxth	r0, r0
 80228da:	b2b2      	uxth	r2, r6
 80228dc:	fb00 f602 	mul.w	r6, r0, r2
 80228e0:	0100      	lsls	r0, r0, #4
 80228e2:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80228e6:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 80228ea:	1b80      	subs	r0, r0, r6
 80228ec:	fa1f fc82 	uxth.w	ip, r2
 80228f0:	b282      	uxth	r2, r0
 80228f2:	78a0      	ldrb	r0, [r4, #2]
 80228f4:	f897 e002 	ldrb.w	lr, [r7, #2]
 80228f8:	f897 9000 	ldrb.w	r9, [r7]
 80228fc:	787f      	ldrb	r7, [r7, #1]
 80228fe:	eba8 080c 	sub.w	r8, r8, ip
 8022902:	fa1f f888 	uxth.w	r8, r8
 8022906:	4350      	muls	r0, r2
 8022908:	fb08 0e0e 	mla	lr, r8, lr, r0
 802290c:	78a8      	ldrb	r0, [r5, #2]
 802290e:	fb0c e000 	mla	r0, ip, r0, lr
 8022912:	f893 e002 	ldrb.w	lr, [r3, #2]
 8022916:	fb06 0e0e 	mla	lr, r6, lr, r0
 802291a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 802291e:	f894 e000 	ldrb.w	lr, [r4]
 8022922:	fb02 fe0e 	mul.w	lr, r2, lr
 8022926:	fb08 e909 	mla	r9, r8, r9, lr
 802292a:	f895 e000 	ldrb.w	lr, [r5]
 802292e:	fb0c 990e 	mla	r9, ip, lr, r9
 8022932:	f893 e000 	ldrb.w	lr, [r3]
 8022936:	785b      	ldrb	r3, [r3, #1]
 8022938:	fb06 9e0e 	mla	lr, r6, lr, r9
 802293c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8022940:	ea4e 0e00 	orr.w	lr, lr, r0
 8022944:	7860      	ldrb	r0, [r4, #1]
 8022946:	4350      	muls	r0, r2
 8022948:	786a      	ldrb	r2, [r5, #1]
 802294a:	fb08 0007 	mla	r0, r8, r7, r0
 802294e:	fb0c 0202 	mla	r2, ip, r2, r0
 8022952:	fb06 2303 	mla	r3, r6, r3, r2
 8022956:	095b      	lsrs	r3, r3, #5
 8022958:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802295c:	ea4e 0303 	orr.w	r3, lr, r3
 8022960:	800b      	strh	r3, [r1, #0]
 8022962:	b003      	add	sp, #12
 8022964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022968:	af01      	add	r7, sp, #4
 802296a:	e78c      	b.n	8022886 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 802296c:	ac01      	add	r4, sp, #4
 802296e:	4627      	mov	r7, r4
 8022970:	e795      	b.n	802289e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8022972:	ac01      	add	r4, sp, #4
 8022974:	e793      	b.n	802289e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8022976:	ad01      	add	r5, sp, #4
 8022978:	e7a1      	b.n	80228be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 802297a:	ab01      	add	r3, sp, #4
 802297c:	461d      	mov	r5, r3
 802297e:	e7ab      	b.n	80228d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8022980:	ab01      	add	r3, sp, #4
 8022982:	e7a9      	b.n	80228d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08022984 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022988:	b08f      	sub	sp, #60	@ 0x3c
 802298a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 802298e:	920c      	str	r2, [sp, #48]	@ 0x30
 8022990:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8022992:	910a      	str	r1, [sp, #40]	@ 0x28
 8022994:	9306      	str	r3, [sp, #24]
 8022996:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 802299a:	900d      	str	r0, [sp, #52]	@ 0x34
 802299c:	6850      	ldr	r0, [r2, #4]
 802299e:	6812      	ldr	r2, [r2, #0]
 80229a0:	fb00 1303 	mla	r3, r0, r3, r1
 80229a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80229a8:	9307      	str	r3, [sp, #28]
 80229aa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80229ac:	681b      	ldr	r3, [r3, #0]
 80229ae:	9308      	str	r3, [sp, #32]
 80229b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80229b2:	685c      	ldr	r4, [r3, #4]
 80229b4:	3404      	adds	r4, #4
 80229b6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80229b8:	2b00      	cmp	r3, #0
 80229ba:	dc03      	bgt.n	80229c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80229bc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80229be:	2b00      	cmp	r3, #0
 80229c0:	f340 81d6 	ble.w	8022d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80229c4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80229c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80229ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80229ce:	1e48      	subs	r0, r1, #1
 80229d0:	1e56      	subs	r6, r2, #1
 80229d2:	9b06      	ldr	r3, [sp, #24]
 80229d4:	2b00      	cmp	r3, #0
 80229d6:	f340 80b7 	ble.w	8022b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80229da:	ea5f 472b 	movs.w	r7, fp, asr #16
 80229de:	ea4f 4325 	mov.w	r3, r5, asr #16
 80229e2:	d406      	bmi.n	80229f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80229e4:	4287      	cmp	r7, r0
 80229e6:	da04      	bge.n	80229f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80229e8:	2b00      	cmp	r3, #0
 80229ea:	db02      	blt.n	80229f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80229ec:	42b3      	cmp	r3, r6
 80229ee:	f2c0 80ac 	blt.w	8022b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80229f2:	3701      	adds	r7, #1
 80229f4:	f100 809d 	bmi.w	8022b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80229f8:	42b9      	cmp	r1, r7
 80229fa:	f2c0 809a 	blt.w	8022b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80229fe:	3301      	adds	r3, #1
 8022a00:	f100 8097 	bmi.w	8022b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022a04:	429a      	cmp	r2, r3
 8022a06:	f2c0 8094 	blt.w	8022b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022a0a:	9b06      	ldr	r3, [sp, #24]
 8022a0c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022a0e:	9b07      	ldr	r3, [sp, #28]
 8022a10:	9309      	str	r3, [sp, #36]	@ 0x24
 8022a12:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022a14:	2b00      	cmp	r3, #0
 8022a16:	f340 80b5 	ble.w	8022b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022a1a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8022a1c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8022a1e:	68c7      	ldr	r7, [r0, #12]
 8022a20:	6892      	ldr	r2, [r2, #8]
 8022a22:	ea5f 402b 	movs.w	r0, fp, asr #16
 8022a26:	ea4f 4625 	mov.w	r6, r5, asr #16
 8022a2a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8022a2e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022a32:	f100 80fb 	bmi.w	8022c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8022a36:	f102 3cff 	add.w	ip, r2, #4294967295
 8022a3a:	4560      	cmp	r0, ip
 8022a3c:	f280 80f6 	bge.w	8022c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8022a40:	2e00      	cmp	r6, #0
 8022a42:	f2c0 80f3 	blt.w	8022c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8022a46:	f107 3cff 	add.w	ip, r7, #4294967295
 8022a4a:	4566      	cmp	r6, ip
 8022a4c:	f280 80ee 	bge.w	8022c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8022a50:	b212      	sxth	r2, r2
 8022a52:	fb06 0002 	mla	r0, r6, r2, r0
 8022a56:	9e08      	ldr	r6, [sp, #32]
 8022a58:	1837      	adds	r7, r6, r0
 8022a5a:	5c30      	ldrb	r0, [r6, r0]
 8022a5c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8022a60:	eb04 0c08 	add.w	ip, r4, r8
 8022a64:	2b00      	cmp	r3, #0
 8022a66:	f000 80d3 	beq.w	8022c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8022a6a:	787e      	ldrb	r6, [r7, #1]
 8022a6c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022a70:	4426      	add	r6, r4
 8022a72:	2900      	cmp	r1, #0
 8022a74:	f000 80d4 	beq.w	8022c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8022a78:	18b8      	adds	r0, r7, r2
 8022a7a:	5cba      	ldrb	r2, [r7, r2]
 8022a7c:	7840      	ldrb	r0, [r0, #1]
 8022a7e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022a82:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022a86:	4422      	add	r2, r4
 8022a88:	4420      	add	r0, r4
 8022a8a:	b29b      	uxth	r3, r3
 8022a8c:	b289      	uxth	r1, r1
 8022a8e:	fb03 f901 	mul.w	r9, r3, r1
 8022a92:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022a96:	011b      	lsls	r3, r3, #4
 8022a98:	b289      	uxth	r1, r1
 8022a9a:	78b7      	ldrb	r7, [r6, #2]
 8022a9c:	f89c a002 	ldrb.w	sl, [ip, #2]
 8022aa0:	f89c c001 	ldrb.w	ip, [ip, #1]
 8022aa4:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8022aa8:	eba3 0309 	sub.w	r3, r3, r9
 8022aac:	b29b      	uxth	r3, r3
 8022aae:	ebae 0e01 	sub.w	lr, lr, r1
 8022ab2:	fa1f fe8e 	uxth.w	lr, lr
 8022ab6:	435f      	muls	r7, r3
 8022ab8:	fb0e 770a 	mla	r7, lr, sl, r7
 8022abc:	f892 a002 	ldrb.w	sl, [r2, #2]
 8022ac0:	fb01 770a 	mla	r7, r1, sl, r7
 8022ac4:	f890 a002 	ldrb.w	sl, [r0, #2]
 8022ac8:	fb09 7a0a 	mla	sl, r9, sl, r7
 8022acc:	f814 7008 	ldrb.w	r7, [r4, r8]
 8022ad0:	f896 8000 	ldrb.w	r8, [r6]
 8022ad4:	7876      	ldrb	r6, [r6, #1]
 8022ad6:	fb03 f808 	mul.w	r8, r3, r8
 8022ada:	fb0e 8807 	mla	r8, lr, r7, r8
 8022ade:	7817      	ldrb	r7, [r2, #0]
 8022ae0:	fb01 8807 	mla	r8, r1, r7, r8
 8022ae4:	7807      	ldrb	r7, [r0, #0]
 8022ae6:	fb09 8707 	mla	r7, r9, r7, r8
 8022aea:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8022aee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022af2:	ea47 070a 	orr.w	r7, r7, sl
 8022af6:	4373      	muls	r3, r6
 8022af8:	f892 a001 	ldrb.w	sl, [r2, #1]
 8022afc:	fb0e 330c 	mla	r3, lr, ip, r3
 8022b00:	fb01 310a 	mla	r1, r1, sl, r3
 8022b04:	f890 a001 	ldrb.w	sl, [r0, #1]
 8022b08:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022b0a:	fb09 1a0a 	mla	sl, r9, sl, r1
 8022b0e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022b12:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8022b16:	ea47 070a 	orr.w	r7, r7, sl
 8022b1a:	801f      	strh	r7, [r3, #0]
 8022b1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022b1e:	3302      	adds	r3, #2
 8022b20:	9309      	str	r3, [sp, #36]	@ 0x24
 8022b22:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022b24:	449b      	add	fp, r3
 8022b26:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022b28:	441d      	add	r5, r3
 8022b2a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022b2c:	3b01      	subs	r3, #1
 8022b2e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022b30:	e76f      	b.n	8022a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022b32:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022b34:	449b      	add	fp, r3
 8022b36:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022b38:	441d      	add	r5, r3
 8022b3a:	9b06      	ldr	r3, [sp, #24]
 8022b3c:	3b01      	subs	r3, #1
 8022b3e:	9306      	str	r3, [sp, #24]
 8022b40:	9b07      	ldr	r3, [sp, #28]
 8022b42:	3302      	adds	r3, #2
 8022b44:	9307      	str	r3, [sp, #28]
 8022b46:	e744      	b.n	80229d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8022b48:	d023      	beq.n	8022b92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8022b4a:	9b06      	ldr	r3, [sp, #24]
 8022b4c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8022b4e:	3b01      	subs	r3, #1
 8022b50:	fb00 b003 	mla	r0, r0, r3, fp
 8022b54:	1400      	asrs	r0, r0, #16
 8022b56:	f53f af58 	bmi.w	8022a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022b5a:	3901      	subs	r1, #1
 8022b5c:	4288      	cmp	r0, r1
 8022b5e:	f6bf af54 	bge.w	8022a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022b62:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8022b64:	fb01 5303 	mla	r3, r1, r3, r5
 8022b68:	141b      	asrs	r3, r3, #16
 8022b6a:	f53f af4e 	bmi.w	8022a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022b6e:	3a01      	subs	r2, #1
 8022b70:	4293      	cmp	r3, r2
 8022b72:	f6bf af4a 	bge.w	8022a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022b76:	9b06      	ldr	r3, [sp, #24]
 8022b78:	9309      	str	r3, [sp, #36]	@ 0x24
 8022b7a:	9b07      	ldr	r3, [sp, #28]
 8022b7c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022b7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022b80:	2b00      	cmp	r3, #0
 8022b82:	dc70      	bgt.n	8022c66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8022b84:	9b06      	ldr	r3, [sp, #24]
 8022b86:	9a07      	ldr	r2, [sp, #28]
 8022b88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8022b8c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022b90:	9307      	str	r3, [sp, #28]
 8022b92:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022b94:	2b00      	cmp	r3, #0
 8022b96:	f340 80eb 	ble.w	8022d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8022b9a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022b9e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022ba2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022ba6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022ba8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022bac:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022bb0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022bb4:	eef0 6a62 	vmov.f32	s13, s5
 8022bb8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022bbc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022bc0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022bc4:	ee16 ba90 	vmov	fp, s13
 8022bc8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022bcc:	eef0 6a43 	vmov.f32	s13, s6
 8022bd0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022bd4:	ee12 2a90 	vmov	r2, s5
 8022bd8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022bdc:	fb92 f3f3 	sdiv	r3, r2, r3
 8022be0:	ee13 2a10 	vmov	r2, s6
 8022be4:	931b      	str	r3, [sp, #108]	@ 0x6c
 8022be6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022be8:	fb92 f3f3 	sdiv	r3, r2, r3
 8022bec:	931c      	str	r3, [sp, #112]	@ 0x70
 8022bee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022bf0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8022bf2:	3b01      	subs	r3, #1
 8022bf4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022bf8:	930a      	str	r3, [sp, #40]	@ 0x28
 8022bfa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022bfc:	bf08      	it	eq
 8022bfe:	4613      	moveq	r3, r2
 8022c00:	ee16 5a90 	vmov	r5, s13
 8022c04:	9306      	str	r3, [sp, #24]
 8022c06:	eeb0 3a67 	vmov.f32	s6, s15
 8022c0a:	eef0 2a47 	vmov.f32	s5, s14
 8022c0e:	e6d2      	b.n	80229b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8022c10:	b149      	cbz	r1, 8022c26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8022c12:	5cba      	ldrb	r2, [r7, r2]
 8022c14:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022c18:	4422      	add	r2, r4
 8022c1a:	4660      	mov	r0, ip
 8022c1c:	4666      	mov	r6, ip
 8022c1e:	e734      	b.n	8022a8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8022c20:	4660      	mov	r0, ip
 8022c22:	4662      	mov	r2, ip
 8022c24:	e731      	b.n	8022a8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8022c26:	4660      	mov	r0, ip
 8022c28:	4662      	mov	r2, ip
 8022c2a:	e7f7      	b.n	8022c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8022c2c:	f110 0c01 	adds.w	ip, r0, #1
 8022c30:	f53f af74 	bmi.w	8022b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022c34:	4562      	cmp	r2, ip
 8022c36:	f6ff af71 	blt.w	8022b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022c3a:	f116 0c01 	adds.w	ip, r6, #1
 8022c3e:	f53f af6d 	bmi.w	8022b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022c42:	4567      	cmp	r7, ip
 8022c44:	f6ff af6a 	blt.w	8022b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022c48:	b23f      	sxth	r7, r7
 8022c4a:	b212      	sxth	r2, r2
 8022c4c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8022c50:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8022c54:	9200      	str	r2, [sp, #0]
 8022c56:	9701      	str	r7, [sp, #4]
 8022c58:	4623      	mov	r3, r4
 8022c5a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8022c5e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8022c60:	f7ff fde6 	bl	8022830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8022c64:	e75a      	b.n	8022b1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022c66:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8022c68:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8022c6c:	ea4f 462b 	mov.w	r6, fp, asr #16
 8022c70:	1428      	asrs	r0, r5, #16
 8022c72:	fb02 6000 	mla	r0, r2, r0, r6
 8022c76:	9e08      	ldr	r6, [sp, #32]
 8022c78:	f816 8000 	ldrb.w	r8, [r6, r0]
 8022c7c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8022c80:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8022c84:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022c88:	1837      	adds	r7, r6, r0
 8022c8a:	eb04 0c08 	add.w	ip, r4, r8
 8022c8e:	2b00      	cmp	r3, #0
 8022c90:	d060      	beq.n	8022d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8022c92:	787e      	ldrb	r6, [r7, #1]
 8022c94:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022c98:	4426      	add	r6, r4
 8022c9a:	2900      	cmp	r1, #0
 8022c9c:	d062      	beq.n	8022d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8022c9e:	18b8      	adds	r0, r7, r2
 8022ca0:	5cba      	ldrb	r2, [r7, r2]
 8022ca2:	7840      	ldrb	r0, [r0, #1]
 8022ca4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022ca8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022cac:	4422      	add	r2, r4
 8022cae:	4420      	add	r0, r4
 8022cb0:	b29b      	uxth	r3, r3
 8022cb2:	b289      	uxth	r1, r1
 8022cb4:	fb03 f901 	mul.w	r9, r3, r1
 8022cb8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022cbc:	011b      	lsls	r3, r3, #4
 8022cbe:	b289      	uxth	r1, r1
 8022cc0:	78b7      	ldrb	r7, [r6, #2]
 8022cc2:	f89c a002 	ldrb.w	sl, [ip, #2]
 8022cc6:	f89c c001 	ldrb.w	ip, [ip, #1]
 8022cca:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8022cce:	eba3 0309 	sub.w	r3, r3, r9
 8022cd2:	b29b      	uxth	r3, r3
 8022cd4:	ebae 0e01 	sub.w	lr, lr, r1
 8022cd8:	fa1f fe8e 	uxth.w	lr, lr
 8022cdc:	435f      	muls	r7, r3
 8022cde:	fb0e 770a 	mla	r7, lr, sl, r7
 8022ce2:	f892 a002 	ldrb.w	sl, [r2, #2]
 8022ce6:	fb01 770a 	mla	r7, r1, sl, r7
 8022cea:	f890 a002 	ldrb.w	sl, [r0, #2]
 8022cee:	fb09 7a0a 	mla	sl, r9, sl, r7
 8022cf2:	f814 7008 	ldrb.w	r7, [r4, r8]
 8022cf6:	f896 8000 	ldrb.w	r8, [r6]
 8022cfa:	7876      	ldrb	r6, [r6, #1]
 8022cfc:	fb03 f808 	mul.w	r8, r3, r8
 8022d00:	fb0e 8807 	mla	r8, lr, r7, r8
 8022d04:	7817      	ldrb	r7, [r2, #0]
 8022d06:	fb01 8807 	mla	r8, r1, r7, r8
 8022d0a:	7807      	ldrb	r7, [r0, #0]
 8022d0c:	fb09 8707 	mla	r7, r9, r7, r8
 8022d10:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8022d14:	4373      	muls	r3, r6
 8022d16:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022d1a:	7856      	ldrb	r6, [r2, #1]
 8022d1c:	ea47 070a 	orr.w	r7, r7, sl
 8022d20:	fb0e 330c 	mla	r3, lr, ip, r3
 8022d24:	f890 a001 	ldrb.w	sl, [r0, #1]
 8022d28:	fb01 3306 	mla	r3, r1, r6, r3
 8022d2c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8022d30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022d34:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8022d36:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8022d3a:	ea47 070a 	orr.w	r7, r7, sl
 8022d3e:	f823 7b02 	strh.w	r7, [r3], #2
 8022d42:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022d44:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022d46:	449b      	add	fp, r3
 8022d48:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022d4a:	441d      	add	r5, r3
 8022d4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022d4e:	3b01      	subs	r3, #1
 8022d50:	9309      	str	r3, [sp, #36]	@ 0x24
 8022d52:	e714      	b.n	8022b7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8022d54:	b149      	cbz	r1, 8022d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8022d56:	5cba      	ldrb	r2, [r7, r2]
 8022d58:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022d5c:	4422      	add	r2, r4
 8022d5e:	4660      	mov	r0, ip
 8022d60:	4666      	mov	r6, ip
 8022d62:	e7a5      	b.n	8022cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8022d64:	4660      	mov	r0, ip
 8022d66:	4662      	mov	r2, ip
 8022d68:	e7a2      	b.n	8022cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8022d6a:	4660      	mov	r0, ip
 8022d6c:	4662      	mov	r2, ip
 8022d6e:	e7f7      	b.n	8022d60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8022d70:	b00f      	add	sp, #60	@ 0x3c
 8022d72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022d76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8022d76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d7a:	b085      	sub	sp, #20
 8022d7c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 8022d80:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 8022d84:	9102      	str	r1, [sp, #8]
 8022d86:	2c00      	cmp	r4, #0
 8022d88:	fb04 710c 	mla	r1, r4, ip, r7
 8022d8c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 8022d90:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 8022d94:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8022d98:	eb02 0e01 	add.w	lr, r2, r1
 8022d9c:	f2c0 8122 	blt.w	8022fe4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8022da0:	45a0      	cmp	r8, r4
 8022da2:	f340 811f 	ble.w	8022fe4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8022da6:	2f00      	cmp	r7, #0
 8022da8:	f2c0 811a 	blt.w	8022fe0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8022dac:	45bc      	cmp	ip, r7
 8022dae:	f340 8117 	ble.w	8022fe0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8022db2:	5c52      	ldrb	r2, [r2, r1]
 8022db4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8022db8:	1c7a      	adds	r2, r7, #1
 8022dba:	f100 8116 	bmi.w	8022fea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8022dbe:	4594      	cmp	ip, r2
 8022dc0:	f340 8113 	ble.w	8022fea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8022dc4:	2e00      	cmp	r6, #0
 8022dc6:	f000 8112 	beq.w	8022fee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8022dca:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022dce:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022dd2:	3401      	adds	r4, #1
 8022dd4:	f100 810f 	bmi.w	8022ff6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8022dd8:	45a0      	cmp	r8, r4
 8022dda:	f340 810c 	ble.w	8022ff6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8022dde:	2800      	cmp	r0, #0
 8022de0:	f000 810c 	beq.w	8022ffc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8022de4:	2f00      	cmp	r7, #0
 8022de6:	f2c0 8104 	blt.w	8022ff2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8022dea:	45bc      	cmp	ip, r7
 8022dec:	f340 8101 	ble.w	8022ff2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8022df0:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8022df4:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8022df8:	3701      	adds	r7, #1
 8022dfa:	f100 8102 	bmi.w	8023002 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8022dfe:	45bc      	cmp	ip, r7
 8022e00:	f340 80ff 	ble.w	8023002 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8022e04:	2e00      	cmp	r6, #0
 8022e06:	f000 80fe 	beq.w	8023006 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8022e0a:	44f4      	add	ip, lr
 8022e0c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8022e10:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8022e14:	b2b6      	uxth	r6, r6
 8022e16:	b280      	uxth	r0, r0
 8022e18:	fb00 fe06 	mul.w	lr, r0, r6
 8022e1c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022e20:	0136      	lsls	r6, r6, #4
 8022e22:	eba6 070e 	sub.w	r7, r6, lr
 8022e26:	b280      	uxth	r0, r0
 8022e28:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8022e2c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8022e30:	b2bf      	uxth	r7, r7
 8022e32:	1a1b      	subs	r3, r3, r0
 8022e34:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8022e38:	b29b      	uxth	r3, r3
 8022e3a:	fb0a f607 	mul.w	r6, sl, r7
 8022e3e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022e42:	fb0b 6603 	mla	r6, fp, r3, r6
 8022e46:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8022e4a:	fb00 6609 	mla	r6, r0, r9, r6
 8022e4e:	fb0e 6608 	mla	r6, lr, r8, r6
 8022e52:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8022e56:	9600      	str	r6, [sp, #0]
 8022e58:	2e00      	cmp	r6, #0
 8022e5a:	f000 80be 	beq.w	8022fda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8022e5e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8022e62:	fb0b fc0c 	mul.w	ip, fp, ip
 8022e66:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8022e6a:	fb0b f505 	mul.w	r5, fp, r5
 8022e6e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8022e72:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8022e76:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8022e7a:	44dc      	add	ip, fp
 8022e7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022e80:	9501      	str	r5, [sp, #4]
 8022e82:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8022e86:	9503      	str	r5, [sp, #12]
 8022e88:	9d01      	ldr	r5, [sp, #4]
 8022e8a:	9e02      	ldr	r6, [sp, #8]
 8022e8c:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8022e90:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8022e94:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8022e98:	fb0a fc0c 	mul.w	ip, sl, ip
 8022e9c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022ea0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022ea4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8022ea8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8022eac:	4465      	add	r5, ip
 8022eae:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8022eb2:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8022eb6:	fb09 fc0c 	mul.w	ip, r9, ip
 8022eba:	fb09 f904 	mul.w	r9, r9, r4
 8022ebe:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8022ec2:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8022ec6:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8022eca:	fb08 f404 	mul.w	r4, r8, r4
 8022ece:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8022ed2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8022ed6:	fb08 f802 	mul.w	r8, r8, r2
 8022eda:	fb0a fa01 	mul.w	sl, sl, r1
 8022ede:	0a22      	lsrs	r2, r4, #8
 8022ee0:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8022ee4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8022ee8:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8022eec:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8022ef0:	4414      	add	r4, r2
 8022ef2:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8022ef6:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8022efa:	0a2d      	lsrs	r5, r5, #8
 8022efc:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8022f00:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8022f04:	9a03      	ldr	r2, [sp, #12]
 8022f06:	8836      	ldrh	r6, [r6, #0]
 8022f08:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8022f0c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8022f10:	437d      	muls	r5, r7
 8022f12:	4461      	add	r1, ip
 8022f14:	0a24      	lsrs	r4, r4, #8
 8022f16:	fb02 5503 	mla	r5, r2, r3, r5
 8022f1a:	0a09      	lsrs	r1, r1, #8
 8022f1c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8022f20:	fb04 540e 	mla	r4, r4, lr, r5
 8022f24:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8022f28:	fb01 4100 	mla	r1, r1, r0, r4
 8022f2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022f30:	0a09      	lsrs	r1, r1, #8
 8022f32:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022f36:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8022f3a:	fb07 f70a 	mul.w	r7, r7, sl
 8022f3e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022f42:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8022f46:	fb03 7101 	mla	r1, r3, r1, r7
 8022f4a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022f4e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8022f52:	fb0e 1e08 	mla	lr, lr, r8, r1
 8022f56:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8022f5a:	fb00 e101 	mla	r1, r0, r1, lr
 8022f5e:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8022f62:	9a00      	ldr	r2, [sp, #0]
 8022f64:	b287      	uxth	r7, r0
 8022f66:	437a      	muls	r2, r7
 8022f68:	0a09      	lsrs	r1, r1, #8
 8022f6a:	1c53      	adds	r3, r2, #1
 8022f6c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8022f70:	4321      	orrs	r1, r4
 8022f72:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022f76:	1235      	asrs	r5, r6, #8
 8022f78:	0c0a      	lsrs	r2, r1, #16
 8022f7a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8022f7e:	b2db      	uxtb	r3, r3
 8022f80:	fb12 f207 	smulbb	r2, r2, r7
 8022f84:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8022f88:	fb05 2503 	mla	r5, r5, r3, r2
 8022f8c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8022f90:	10f2      	asrs	r2, r6, #3
 8022f92:	b2c8      	uxtb	r0, r1
 8022f94:	00f6      	lsls	r6, r6, #3
 8022f96:	fb14 f407 	smulbb	r4, r4, r7
 8022f9a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8022f9e:	b2f6      	uxtb	r6, r6
 8022fa0:	fb10 f007 	smulbb	r0, r0, r7
 8022fa4:	fb02 4203 	mla	r2, r2, r3, r4
 8022fa8:	b2ad      	uxth	r5, r5
 8022faa:	fb06 0303 	mla	r3, r6, r3, r0
 8022fae:	b299      	uxth	r1, r3
 8022fb0:	b294      	uxth	r4, r2
 8022fb2:	1c6b      	adds	r3, r5, #1
 8022fb4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022fb8:	1c62      	adds	r2, r4, #1
 8022fba:	1c4b      	adds	r3, r1, #1
 8022fbc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022fc0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8022fc4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8022fc8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022fcc:	0952      	lsrs	r2, r2, #5
 8022fce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022fd2:	432b      	orrs	r3, r5
 8022fd4:	4313      	orrs	r3, r2
 8022fd6:	9a02      	ldr	r2, [sp, #8]
 8022fd8:	8013      	strh	r3, [r2, #0]
 8022fda:	b005      	add	sp, #20
 8022fdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022fe0:	2500      	movs	r5, #0
 8022fe2:	e6e9      	b.n	8022db8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8022fe4:	2100      	movs	r1, #0
 8022fe6:	460d      	mov	r5, r1
 8022fe8:	e6f3      	b.n	8022dd2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8022fea:	2100      	movs	r1, #0
 8022fec:	e6f1      	b.n	8022dd2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8022fee:	4631      	mov	r1, r6
 8022ff0:	e6ef      	b.n	8022dd2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8022ff2:	2400      	movs	r4, #0
 8022ff4:	e700      	b.n	8022df8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8022ff6:	2200      	movs	r2, #0
 8022ff8:	4614      	mov	r4, r2
 8022ffa:	e70b      	b.n	8022e14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8022ffc:	4602      	mov	r2, r0
 8022ffe:	4604      	mov	r4, r0
 8023000:	e708      	b.n	8022e14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023002:	2200      	movs	r2, #0
 8023004:	e706      	b.n	8022e14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023006:	4632      	mov	r2, r6
 8023008:	e704      	b.n	8022e14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802300a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802300a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802300e:	b09f      	sub	sp, #124	@ 0x7c
 8023010:	921b      	str	r2, [sp, #108]	@ 0x6c
 8023012:	9309      	str	r3, [sp, #36]	@ 0x24
 8023014:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8023016:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 802301a:	931c      	str	r3, [sp, #112]	@ 0x70
 802301c:	9119      	str	r1, [sp, #100]	@ 0x64
 802301e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 8023022:	901d      	str	r0, [sp, #116]	@ 0x74
 8023024:	6850      	ldr	r0, [r2, #4]
 8023026:	6812      	ldr	r2, [r2, #0]
 8023028:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 802302a:	fb00 1303 	mla	r3, r0, r3, r1
 802302e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023032:	930c      	str	r3, [sp, #48]	@ 0x30
 8023034:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8023036:	681b      	ldr	r3, [r3, #0]
 8023038:	9312      	str	r3, [sp, #72]	@ 0x48
 802303a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802303c:	685e      	ldr	r6, [r3, #4]
 802303e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8023042:	930d      	str	r3, [sp, #52]	@ 0x34
 8023044:	3604      	adds	r6, #4
 8023046:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8023048:	2b00      	cmp	r3, #0
 802304a:	dc03      	bgt.n	8023054 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802304c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802304e:	2b00      	cmp	r3, #0
 8023050:	f340 8388 	ble.w	8023764 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8023054:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8023056:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802305a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802305e:	1e48      	subs	r0, r1, #1
 8023060:	1e57      	subs	r7, r2, #1
 8023062:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023064:	2b00      	cmp	r3, #0
 8023066:	f340 8195 	ble.w	8023394 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802306a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 802306c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023070:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023074:	d406      	bmi.n	8023084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023076:	4584      	cmp	ip, r0
 8023078:	da04      	bge.n	8023084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802307a:	2b00      	cmp	r3, #0
 802307c:	db02      	blt.n	8023084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802307e:	42bb      	cmp	r3, r7
 8023080:	f2c0 8189 	blt.w	8023396 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8023084:	f11c 0c01 	adds.w	ip, ip, #1
 8023088:	f100 8177 	bmi.w	802337a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802308c:	4561      	cmp	r1, ip
 802308e:	f2c0 8174 	blt.w	802337a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023092:	3301      	adds	r3, #1
 8023094:	f100 8171 	bmi.w	802337a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023098:	429a      	cmp	r2, r3
 802309a:	f2c0 816e 	blt.w	802337a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802309e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80230a0:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80230a2:	931a      	str	r3, [sp, #104]	@ 0x68
 80230a4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80230a6:	2b00      	cmp	r3, #0
 80230a8:	f340 8193 	ble.w	80233d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80230ac:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80230ae:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80230b2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80230b4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80230b8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80230ba:	141b      	asrs	r3, r3, #16
 80230bc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80230c0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80230c4:	f100 81d6 	bmi.w	8023474 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80230c8:	f100 38ff 	add.w	r8, r0, #4294967295
 80230cc:	4543      	cmp	r3, r8
 80230ce:	f280 81d1 	bge.w	8023474 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80230d2:	f1bc 0f00 	cmp.w	ip, #0
 80230d6:	f2c0 81cd 	blt.w	8023474 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80230da:	f10e 38ff 	add.w	r8, lr, #4294967295
 80230de:	45c4      	cmp	ip, r8
 80230e0:	f280 81c8 	bge.w	8023474 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80230e4:	b200      	sxth	r0, r0
 80230e6:	fb0c 3300 	mla	r3, ip, r0, r3
 80230ea:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80230ec:	eb04 0803 	add.w	r8, r4, r3
 80230f0:	5ce3      	ldrb	r3, [r4, r3]
 80230f2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80230f6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80230fa:	2a00      	cmp	r2, #0
 80230fc:	f000 81af 	beq.w	802345e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023100:	f898 c001 	ldrb.w	ip, [r8, #1]
 8023104:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8023108:	940e      	str	r4, [sp, #56]	@ 0x38
 802310a:	0e24      	lsrs	r4, r4, #24
 802310c:	9415      	str	r4, [sp, #84]	@ 0x54
 802310e:	b179      	cbz	r1, 8023130 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8023110:	eb08 0c00 	add.w	ip, r8, r0
 8023114:	f818 0000 	ldrb.w	r0, [r8, r0]
 8023118:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802311c:	900a      	str	r0, [sp, #40]	@ 0x28
 802311e:	0e00      	lsrs	r0, r0, #24
 8023120:	9013      	str	r0, [sp, #76]	@ 0x4c
 8023122:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8023126:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802312a:	900f      	str	r0, [sp, #60]	@ 0x3c
 802312c:	0e00      	lsrs	r0, r0, #24
 802312e:	9016      	str	r0, [sp, #88]	@ 0x58
 8023130:	b292      	uxth	r2, r2
 8023132:	b289      	uxth	r1, r1
 8023134:	fb02 f901 	mul.w	r9, r2, r1
 8023138:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802313c:	0112      	lsls	r2, r2, #4
 802313e:	eba2 0809 	sub.w	r8, r2, r9
 8023142:	b289      	uxth	r1, r1
 8023144:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8023148:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802314a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802314c:	fa1f f888 	uxth.w	r8, r8
 8023150:	1a52      	subs	r2, r2, r1
 8023152:	b292      	uxth	r2, r2
 8023154:	fb08 f000 	mul.w	r0, r8, r0
 8023158:	fb02 000e 	mla	r0, r2, lr, r0
 802315c:	fb01 0004 	mla	r0, r1, r4, r0
 8023160:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8023162:	fb09 0004 	mla	r0, r9, r4, r0
 8023166:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802316a:	2800      	cmp	r0, #0
 802316c:	f000 80fa 	beq.w	8023364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023170:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8023174:	d01b      	beq.n	80231ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023176:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802317a:	fb0e fa0a 	mul.w	sl, lr, sl
 802317e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023182:	fb0e fe03 	mul.w	lr, lr, r3
 8023186:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802318a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802318e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023192:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8023196:	4453      	add	r3, sl
 8023198:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802319c:	0a1b      	lsrs	r3, r3, #8
 802319e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80231a2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80231a6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80231aa:	ea43 030c 	orr.w	r3, r3, ip
 80231ae:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80231b0:	2cff      	cmp	r4, #255	@ 0xff
 80231b2:	d021      	beq.n	80231f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80231b4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80231b6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80231ba:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80231bc:	fb04 fb0b 	mul.w	fp, r4, fp
 80231c0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80231c2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80231c6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80231c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80231cc:	fb04 fa0a 	mul.w	sl, r4, sl
 80231d0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80231d4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80231d8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80231dc:	44de      	add	lr, fp
 80231de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80231e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80231e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80231ea:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80231ee:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80231f2:	ea4e 040a 	orr.w	r4, lr, sl
 80231f6:	940e      	str	r4, [sp, #56]	@ 0x38
 80231f8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80231fa:	2cff      	cmp	r4, #255	@ 0xff
 80231fc:	d021      	beq.n	8023242 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80231fe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8023200:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8023204:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8023206:	fb04 fb0b 	mul.w	fp, r4, fp
 802320a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802320c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8023210:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8023212:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023216:	fb04 fa0a 	mul.w	sl, r4, sl
 802321a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802321e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023222:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023226:	44de      	add	lr, fp
 8023228:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802322c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023230:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023234:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023238:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802323c:	ea4e 040a 	orr.w	r4, lr, sl
 8023240:	940a      	str	r4, [sp, #40]	@ 0x28
 8023242:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8023244:	2cff      	cmp	r4, #255	@ 0xff
 8023246:	d021      	beq.n	802328c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8023248:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802324a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 802324e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8023250:	fb04 fb0b 	mul.w	fp, r4, fp
 8023254:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8023256:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802325a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802325c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023260:	fb04 fa0a 	mul.w	sl, r4, sl
 8023264:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023268:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802326c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023270:	44de      	add	lr, fp
 8023272:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023276:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802327a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802327e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023282:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023286:	ea4e 040a 	orr.w	r4, lr, sl
 802328a:	940f      	str	r4, [sp, #60]	@ 0x3c
 802328c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802328e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023292:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8023294:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8023298:	fb08 fc0c 	mul.w	ip, r8, ip
 802329c:	fb02 cc0e 	mla	ip, r2, lr, ip
 80232a0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80232a4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80232a6:	fb01 cc0e 	mla	ip, r1, lr, ip
 80232aa:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80232ae:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80232b0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80232b4:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 80232b8:	fb08 f80e 	mul.w	r8, r8, lr
 80232bc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80232c0:	fb02 8303 	mla	r3, r2, r3, r8
 80232c4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80232c6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80232c8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80232cc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80232ce:	fb01 330a 	mla	r3, r1, sl, r3
 80232d2:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 80232d6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80232d8:	fb09 3901 	mla	r9, r9, r1, r3
 80232dc:	4342      	muls	r2, r0
 80232de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80232e2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80232e6:	883b      	ldrh	r3, [r7, #0]
 80232e8:	1c50      	adds	r0, r2, #1
 80232ea:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80232ee:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80232f2:	ea4c 0c09 	orr.w	ip, ip, r9
 80232f6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80232fa:	1219      	asrs	r1, r3, #8
 80232fc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023300:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023304:	b2c0      	uxtb	r0, r0
 8023306:	fb12 f204 	smulbb	r2, r2, r4
 802330a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802330e:	fb01 2100 	mla	r1, r1, r0, r2
 8023312:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023316:	10da      	asrs	r2, r3, #3
 8023318:	fa5f fc8c 	uxtb.w	ip, ip
 802331c:	00db      	lsls	r3, r3, #3
 802331e:	fb1c fc04 	smulbb	ip, ip, r4
 8023322:	b2db      	uxtb	r3, r3
 8023324:	b289      	uxth	r1, r1
 8023326:	fb03 c300 	mla	r3, r3, r0, ip
 802332a:	fa1f fc83 	uxth.w	ip, r3
 802332e:	1c4b      	adds	r3, r1, #1
 8023330:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023334:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8023338:	fb1e fe04 	smulbb	lr, lr, r4
 802333c:	f10c 0301 	add.w	r3, ip, #1
 8023340:	fb02 e200 	mla	r2, r2, r0, lr
 8023344:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8023348:	b292      	uxth	r2, r2
 802334a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802334e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023352:	430b      	orrs	r3, r1
 8023354:	1c51      	adds	r1, r2, #1
 8023356:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802335a:	0952      	lsrs	r2, r2, #5
 802335c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023360:	4313      	orrs	r3, r2
 8023362:	803b      	strh	r3, [r7, #0]
 8023364:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8023366:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8023368:	441a      	add	r2, r3
 802336a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802336c:	9229      	str	r2, [sp, #164]	@ 0xa4
 802336e:	441d      	add	r5, r3
 8023370:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8023372:	3b01      	subs	r3, #1
 8023374:	3702      	adds	r7, #2
 8023376:	931a      	str	r3, [sp, #104]	@ 0x68
 8023378:	e694      	b.n	80230a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802337a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802337c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 802337e:	441c      	add	r4, r3
 8023380:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023382:	9429      	str	r4, [sp, #164]	@ 0xa4
 8023384:	441d      	add	r5, r3
 8023386:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023388:	3b01      	subs	r3, #1
 802338a:	9309      	str	r3, [sp, #36]	@ 0x24
 802338c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802338e:	3302      	adds	r3, #2
 8023390:	930c      	str	r3, [sp, #48]	@ 0x30
 8023392:	e666      	b.n	8023062 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023394:	d024      	beq.n	80233e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8023396:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023398:	982b      	ldr	r0, [sp, #172]	@ 0xac
 802339a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 802339c:	3b01      	subs	r3, #1
 802339e:	fb00 4003 	mla	r0, r0, r3, r4
 80233a2:	1400      	asrs	r0, r0, #16
 80233a4:	f53f ae7b 	bmi.w	802309e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80233a8:	3901      	subs	r1, #1
 80233aa:	4288      	cmp	r0, r1
 80233ac:	f6bf ae77 	bge.w	802309e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80233b0:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 80233b2:	fb01 5303 	mla	r3, r1, r3, r5
 80233b6:	141b      	asrs	r3, r3, #16
 80233b8:	f53f ae71 	bmi.w	802309e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80233bc:	3a01      	subs	r2, #1
 80233be:	4293      	cmp	r3, r2
 80233c0:	f6bf ae6d 	bge.w	802309e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80233c4:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80233c8:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 80233cc:	f1bb 0f00 	cmp.w	fp, #0
 80233d0:	dc70      	bgt.n	80234b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80233d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80233d4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80233d8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80233da:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80233de:	930c      	str	r3, [sp, #48]	@ 0x30
 80233e0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80233e2:	2b00      	cmp	r3, #0
 80233e4:	f340 81be 	ble.w	8023764 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80233e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80233ec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80233f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80233f4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80233f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80233fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80233fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023402:	eef0 6a62 	vmov.f32	s13, s5
 8023406:	ee61 7a27 	vmul.f32	s15, s2, s15
 802340a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802340e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023412:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8023416:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802341a:	eef0 6a43 	vmov.f32	s13, s6
 802341e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023422:	ee12 2a90 	vmov	r2, s5
 8023426:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802342a:	fb92 f3f3 	sdiv	r3, r2, r3
 802342e:	ee13 2a10 	vmov	r2, s6
 8023432:	932b      	str	r3, [sp, #172]	@ 0xac
 8023434:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023436:	fb92 f3f3 	sdiv	r3, r2, r3
 802343a:	932c      	str	r3, [sp, #176]	@ 0xb0
 802343c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 802343e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8023440:	3b01      	subs	r3, #1
 8023442:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023446:	9319      	str	r3, [sp, #100]	@ 0x64
 8023448:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802344a:	bf08      	it	eq
 802344c:	4613      	moveq	r3, r2
 802344e:	ee16 5a90 	vmov	r5, s13
 8023452:	9309      	str	r3, [sp, #36]	@ 0x24
 8023454:	eeb0 3a67 	vmov.f32	s6, s15
 8023458:	eef0 2a47 	vmov.f32	s5, s14
 802345c:	e5f3      	b.n	8023046 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802345e:	2900      	cmp	r1, #0
 8023460:	f43f ae66 	beq.w	8023130 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8023464:	f818 0000 	ldrb.w	r0, [r8, r0]
 8023468:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802346c:	900a      	str	r0, [sp, #40]	@ 0x28
 802346e:	0e00      	lsrs	r0, r0, #24
 8023470:	9013      	str	r0, [sp, #76]	@ 0x4c
 8023472:	e65d      	b.n	8023130 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8023474:	f113 0801 	adds.w	r8, r3, #1
 8023478:	f53f af74 	bmi.w	8023364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802347c:	4540      	cmp	r0, r8
 802347e:	f6ff af71 	blt.w	8023364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023482:	f11c 0801 	adds.w	r8, ip, #1
 8023486:	f53f af6d 	bmi.w	8023364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802348a:	45c6      	cmp	lr, r8
 802348c:	f6ff af6a 	blt.w	8023364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023490:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8023492:	9302      	str	r3, [sp, #8]
 8023494:	b200      	sxth	r0, r0
 8023496:	fa0f f38e 	sxth.w	r3, lr
 802349a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802349e:	e9cd c203 	strd	ip, r2, [sp, #12]
 80234a2:	9301      	str	r3, [sp, #4]
 80234a4:	9000      	str	r0, [sp, #0]
 80234a6:	4633      	mov	r3, r6
 80234a8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80234aa:	981d      	ldr	r0, [sp, #116]	@ 0x74
 80234ac:	4639      	mov	r1, r7
 80234ae:	f7ff fc62 	bl	8022d76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80234b2:	e757      	b.n	8023364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80234b4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80234b6:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 80234b8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80234bc:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80234be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80234c2:	1427      	asrs	r7, r4, #16
 80234c4:	142b      	asrs	r3, r5, #16
 80234c6:	fb01 7303 	mla	r3, r1, r3, r7
 80234ca:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80234cc:	18e7      	adds	r7, r4, r3
 80234ce:	5ce3      	ldrb	r3, [r4, r3]
 80234d0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80234d4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80234d8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80234dc:	2a00      	cmp	r2, #0
 80234de:	f000 8137 	beq.w	8023750 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80234e2:	f897 e001 	ldrb.w	lr, [r7, #1]
 80234e6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80234ea:	9410      	str	r4, [sp, #64]	@ 0x40
 80234ec:	0e24      	lsrs	r4, r4, #24
 80234ee:	9417      	str	r4, [sp, #92]	@ 0x5c
 80234f0:	b170      	cbz	r0, 8023510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80234f2:	eb07 0e01 	add.w	lr, r7, r1
 80234f6:	5c79      	ldrb	r1, [r7, r1]
 80234f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80234fc:	910b      	str	r1, [sp, #44]	@ 0x2c
 80234fe:	0e09      	lsrs	r1, r1, #24
 8023500:	9114      	str	r1, [sp, #80]	@ 0x50
 8023502:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8023506:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802350a:	9111      	str	r1, [sp, #68]	@ 0x44
 802350c:	0e09      	lsrs	r1, r1, #24
 802350e:	9118      	str	r1, [sp, #96]	@ 0x60
 8023510:	b292      	uxth	r2, r2
 8023512:	b280      	uxth	r0, r0
 8023514:	fb02 f800 	mul.w	r8, r2, r0
 8023518:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802351c:	0112      	lsls	r2, r2, #4
 802351e:	eba2 0e08 	sub.w	lr, r2, r8
 8023522:	b280      	uxth	r0, r0
 8023524:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8023528:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802352a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802352c:	fa1f fe8e 	uxth.w	lr, lr
 8023530:	1a12      	subs	r2, r2, r0
 8023532:	b292      	uxth	r2, r2
 8023534:	fb0e f101 	mul.w	r1, lr, r1
 8023538:	fb02 110c 	mla	r1, r2, ip, r1
 802353c:	fb00 1104 	mla	r1, r0, r4, r1
 8023540:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8023542:	fb08 1104 	mla	r1, r8, r4, r1
 8023546:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802354a:	2900      	cmp	r1, #0
 802354c:	f000 80f5 	beq.w	802373a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023550:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8023554:	d019      	beq.n	802358a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8023556:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802355a:	fb0c fa0a 	mul.w	sl, ip, sl
 802355e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023562:	fb0c fc03 	mul.w	ip, ip, r3
 8023566:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802356a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802356e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023572:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8023576:	4453      	add	r3, sl
 8023578:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802357c:	0a1b      	lsrs	r3, r3, #8
 802357e:	0a3f      	lsrs	r7, r7, #8
 8023580:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023584:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8023588:	433b      	orrs	r3, r7
 802358a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 802358c:	2cff      	cmp	r4, #255	@ 0xff
 802358e:	d020      	beq.n	80235d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8023590:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023592:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8023596:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8023598:	4367      	muls	r7, r4
 802359a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802359c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80235a0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80235a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80235a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80235aa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80235ae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80235b2:	44bc      	add	ip, r7
 80235b4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80235b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80235bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80235c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80235c4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80235c8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80235cc:	ea4c 040a 	orr.w	r4, ip, sl
 80235d0:	9410      	str	r4, [sp, #64]	@ 0x40
 80235d2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80235d4:	2cff      	cmp	r4, #255	@ 0xff
 80235d6:	d020      	beq.n	802361a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80235d8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80235da:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80235de:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80235e0:	4367      	muls	r7, r4
 80235e2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80235e4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80235e8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80235ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80235ee:	fb04 fa0a 	mul.w	sl, r4, sl
 80235f2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80235f6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80235fa:	44bc      	add	ip, r7
 80235fc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023600:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023604:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023608:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802360c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023610:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023614:	ea4c 040a 	orr.w	r4, ip, sl
 8023618:	940b      	str	r4, [sp, #44]	@ 0x2c
 802361a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802361c:	2cff      	cmp	r4, #255	@ 0xff
 802361e:	d020      	beq.n	8023662 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8023620:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8023622:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8023626:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8023628:	4367      	muls	r7, r4
 802362a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802362c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8023630:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8023632:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023636:	fb04 fa0a 	mul.w	sl, r4, sl
 802363a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802363e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023642:	44bc      	add	ip, r7
 8023644:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023648:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802364c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023650:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023654:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023658:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802365c:	ea4c 040a 	orr.w	r4, ip, sl
 8023660:	9411      	str	r4, [sp, #68]	@ 0x44
 8023662:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023664:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8023668:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802366a:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802366e:	fb0e f707 	mul.w	r7, lr, r7
 8023672:	fb02 770c 	mla	r7, r2, ip, r7
 8023676:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802367a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802367c:	fb00 770c 	mla	r7, r0, ip, r7
 8023680:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023684:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023686:	fb08 770c 	mla	r7, r8, ip, r7
 802368a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 802368e:	fb0e fe0c 	mul.w	lr, lr, ip
 8023692:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023696:	fb02 e303 	mla	r3, r2, r3, lr
 802369a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802369c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802369e:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80236a2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80236a4:	fb00 330a 	mla	r3, r0, sl, r3
 80236a8:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 80236ac:	fb08 3c0c 	mla	ip, r8, ip, r3
 80236b0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80236b2:	f8b9 0000 	ldrh.w	r0, [r9]
 80236b6:	434b      	muls	r3, r1
 80236b8:	0a3f      	lsrs	r7, r7, #8
 80236ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80236be:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80236c2:	1c59      	adds	r1, r3, #1
 80236c4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80236c8:	ea47 070c 	orr.w	r7, r7, ip
 80236cc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80236d0:	1202      	asrs	r2, r0, #8
 80236d2:	0c3b      	lsrs	r3, r7, #16
 80236d4:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80236d8:	b2c9      	uxtb	r1, r1
 80236da:	fb13 f304 	smulbb	r3, r3, r4
 80236de:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80236e2:	fb02 3201 	mla	r2, r2, r1, r3
 80236e6:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80236ea:	10c3      	asrs	r3, r0, #3
 80236ec:	b2ff      	uxtb	r7, r7
 80236ee:	00c0      	lsls	r0, r0, #3
 80236f0:	b292      	uxth	r2, r2
 80236f2:	fb1c fc04 	smulbb	ip, ip, r4
 80236f6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80236fa:	b2c0      	uxtb	r0, r0
 80236fc:	fb17 f704 	smulbb	r7, r7, r4
 8023700:	fb03 c301 	mla	r3, r3, r1, ip
 8023704:	fb00 7001 	mla	r0, r0, r1, r7
 8023708:	f102 0c01 	add.w	ip, r2, #1
 802370c:	b280      	uxth	r0, r0
 802370e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8023712:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 8023716:	1c42      	adds	r2, r0, #1
 8023718:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802371c:	b29b      	uxth	r3, r3
 802371e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023722:	ea42 020c 	orr.w	r2, r2, ip
 8023726:	f103 0c01 	add.w	ip, r3, #1
 802372a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802372e:	095b      	lsrs	r3, r3, #5
 8023730:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023734:	431a      	orrs	r2, r3
 8023736:	f8a9 2000 	strh.w	r2, [r9]
 802373a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802373c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802373e:	441a      	add	r2, r3
 8023740:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023742:	9229      	str	r2, [sp, #164]	@ 0xa4
 8023744:	f109 0902 	add.w	r9, r9, #2
 8023748:	441d      	add	r5, r3
 802374a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802374e:	e63d      	b.n	80233cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023750:	2800      	cmp	r0, #0
 8023752:	f43f aedd 	beq.w	8023510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8023756:	5c79      	ldrb	r1, [r7, r1]
 8023758:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802375c:	910b      	str	r1, [sp, #44]	@ 0x2c
 802375e:	0e09      	lsrs	r1, r1, #24
 8023760:	9114      	str	r1, [sp, #80]	@ 0x50
 8023762:	e6d5      	b.n	8023510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8023764:	b01f      	add	sp, #124	@ 0x7c
 8023766:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802376a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802376a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802376e:	b089      	sub	sp, #36	@ 0x24
 8023770:	9101      	str	r1, [sp, #4]
 8023772:	9801      	ldr	r0, [sp, #4]
 8023774:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 8023778:	8800      	ldrh	r0, [r0, #0]
 802377a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 802377e:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8023782:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 8023786:	1206      	asrs	r6, r0, #8
 8023788:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 802378c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8023790:	9602      	str	r6, [sp, #8]
 8023792:	10c6      	asrs	r6, r0, #3
 8023794:	00c0      	lsls	r0, r0, #3
 8023796:	b2c0      	uxtb	r0, r0
 8023798:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 802379c:	9004      	str	r0, [sp, #16]
 802379e:	2f00      	cmp	r7, #0
 80237a0:	fb07 100c 	mla	r0, r7, ip, r1
 80237a4:	9603      	str	r6, [sp, #12]
 80237a6:	eb02 0e00 	add.w	lr, r2, r0
 80237aa:	f2c0 810a 	blt.w	80239c2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80237ae:	45b8      	cmp	r8, r7
 80237b0:	f340 8107 	ble.w	80239c2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80237b4:	2900      	cmp	r1, #0
 80237b6:	f2c0 8102 	blt.w	80239be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80237ba:	458c      	cmp	ip, r1
 80237bc:	f340 80ff 	ble.w	80239be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80237c0:	5c12      	ldrb	r2, [r2, r0]
 80237c2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80237c6:	1c4a      	adds	r2, r1, #1
 80237c8:	f100 80fe 	bmi.w	80239c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80237cc:	4594      	cmp	ip, r2
 80237ce:	f340 80fb 	ble.w	80239c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80237d2:	2d00      	cmp	r5, #0
 80237d4:	f000 80fa 	beq.w	80239cc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80237d8:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80237dc:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80237e0:	3701      	adds	r7, #1
 80237e2:	f100 80f7 	bmi.w	80239d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80237e6:	45b8      	cmp	r8, r7
 80237e8:	f340 80f4 	ble.w	80239d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80237ec:	2c00      	cmp	r4, #0
 80237ee:	f000 80f4 	beq.w	80239da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80237f2:	2900      	cmp	r1, #0
 80237f4:	eb0e 020c 	add.w	r2, lr, ip
 80237f8:	f2c0 80ea 	blt.w	80239d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80237fc:	458c      	cmp	ip, r1
 80237fe:	f340 80e7 	ble.w	80239d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8023802:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8023806:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802380a:	3101      	adds	r1, #1
 802380c:	f100 80e8 	bmi.w	80239e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8023810:	458c      	cmp	ip, r1
 8023812:	f340 80e5 	ble.w	80239e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8023816:	2d00      	cmp	r5, #0
 8023818:	f000 80e4 	beq.w	80239e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 802381c:	7852      	ldrb	r2, [r2, #1]
 802381e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8023822:	0e0b      	lsrs	r3, r1, #24
 8023824:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8023828:	9300      	str	r3, [sp, #0]
 802382a:	b2a4      	uxth	r4, r4
 802382c:	b2ab      	uxth	r3, r5
 802382e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 8023832:	fb03 f904 	mul.w	r9, r3, r4
 8023836:	fb0a f505 	mul.w	r5, sl, r5
 802383a:	011b      	lsls	r3, r3, #4
 802383c:	eba3 0e09 	sub.w	lr, r3, r9
 8023840:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 8023844:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8023848:	0a28      	lsrs	r0, r5, #8
 802384a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802384e:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 8023852:	4405      	add	r5, r0
 8023854:	0a2d      	lsrs	r5, r5, #8
 8023856:	fb0a f303 	mul.w	r3, sl, r3
 802385a:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 802385e:	9005      	str	r0, [sp, #20]
 8023860:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8023864:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8023868:	0a1b      	lsrs	r3, r3, #8
 802386a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 802386e:	9306      	str	r3, [sp, #24]
 8023870:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8023874:	fb0b f303 	mul.w	r3, fp, r3
 8023878:	0a1d      	lsrs	r5, r3, #8
 802387a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802387e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8023882:	fb0b f606 	mul.w	r6, fp, r6
 8023886:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802388a:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 802388e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023892:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8023896:	fb08 f707 	mul.w	r7, r8, r7
 802389a:	441d      	add	r5, r3
 802389c:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 80238a0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80238a4:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 80238a8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80238ac:	fb08 fc0c 	mul.w	ip, r8, ip
 80238b0:	0a1b      	lsrs	r3, r3, #8
 80238b2:	9307      	str	r3, [sp, #28]
 80238b4:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80238b8:	0e0b      	lsrs	r3, r1, #24
 80238ba:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 80238be:	435f      	muls	r7, r3
 80238c0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80238c4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80238c8:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80238cc:	4460      	add	r0, ip
 80238ce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80238d2:	b2a4      	uxth	r4, r4
 80238d4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80238d8:	0a2d      	lsrs	r5, r5, #8
 80238da:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80238de:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80238e2:	fa1f fe8e 	uxth.w	lr, lr
 80238e6:	4359      	muls	r1, r3
 80238e8:	1b12      	subs	r2, r2, r4
 80238ea:	9b05      	ldr	r3, [sp, #20]
 80238ec:	44bc      	add	ip, r7
 80238ee:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80238f2:	b292      	uxth	r2, r2
 80238f4:	fb05 f50e 	mul.w	r5, r5, lr
 80238f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80238fc:	fb03 5502 	mla	r5, r3, r2, r5
 8023900:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023904:	9b06      	ldr	r3, [sp, #24]
 8023906:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 802390a:	0a36      	lsrs	r6, r6, #8
 802390c:	0a00      	lsrs	r0, r0, #8
 802390e:	fb0c 5509 	mla	r5, ip, r9, r5
 8023912:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8023916:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802391a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 802391e:	fb00 5504 	mla	r5, r0, r4, r5
 8023922:	fb0e f606 	mul.w	r6, lr, r6
 8023926:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 802392a:	0a09      	lsrs	r1, r1, #8
 802392c:	9b07      	ldr	r3, [sp, #28]
 802392e:	fb02 6000 	mla	r0, r2, r0, r6
 8023932:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8023936:	fb09 0001 	mla	r0, r9, r1, r0
 802393a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802393e:	fb0e fe0b 	mul.w	lr, lr, fp
 8023942:	fb04 0003 	mla	r0, r4, r3, r0
 8023946:	fb02 e20a 	mla	r2, r2, sl, lr
 802394a:	9b00      	ldr	r3, [sp, #0]
 802394c:	fb04 2408 	mla	r4, r4, r8, r2
 8023950:	fb09 4903 	mla	r9, r9, r3, r4
 8023954:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8023958:	9b02      	ldr	r3, [sp, #8]
 802395a:	9a04      	ldr	r2, [sp, #16]
 802395c:	fa5f f989 	uxtb.w	r9, r9
 8023960:	fb03 f109 	mul.w	r1, r3, r9
 8023964:	9b03      	ldr	r3, [sp, #12]
 8023966:	0a2d      	lsrs	r5, r5, #8
 8023968:	0a00      	lsrs	r0, r0, #8
 802396a:	fb03 f309 	mul.w	r3, r3, r9
 802396e:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8023972:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023976:	4305      	orrs	r5, r0
 8023978:	fb02 f909 	mul.w	r9, r2, r9
 802397c:	1c58      	adds	r0, r3, #1
 802397e:	1c4a      	adds	r2, r1, #1
 8023980:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8023984:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023988:	0a2b      	lsrs	r3, r5, #8
 802398a:	0c2a      	lsrs	r2, r5, #16
 802398c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023990:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8023994:	00db      	lsls	r3, r3, #3
 8023996:	0212      	lsls	r2, r2, #8
 8023998:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 802399c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80239a0:	4313      	orrs	r3, r2
 80239a2:	f109 0201 	add.w	r2, r9, #1
 80239a6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80239aa:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80239ae:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80239b2:	431d      	orrs	r5, r3
 80239b4:	9b01      	ldr	r3, [sp, #4]
 80239b6:	801d      	strh	r5, [r3, #0]
 80239b8:	b009      	add	sp, #36	@ 0x24
 80239ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80239be:	2000      	movs	r0, #0
 80239c0:	e701      	b.n	80237c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80239c2:	2600      	movs	r6, #0
 80239c4:	4630      	mov	r0, r6
 80239c6:	e70b      	b.n	80237e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80239c8:	2600      	movs	r6, #0
 80239ca:	e709      	b.n	80237e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80239cc:	462e      	mov	r6, r5
 80239ce:	e707      	b.n	80237e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80239d0:	2700      	movs	r7, #0
 80239d2:	e71a      	b.n	802380a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80239d4:	2100      	movs	r1, #0
 80239d6:	460f      	mov	r7, r1
 80239d8:	e723      	b.n	8023822 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80239da:	4621      	mov	r1, r4
 80239dc:	4627      	mov	r7, r4
 80239de:	e720      	b.n	8023822 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80239e0:	2100      	movs	r1, #0
 80239e2:	e71e      	b.n	8023822 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80239e4:	4629      	mov	r1, r5
 80239e6:	e71c      	b.n	8023822 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080239e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80239e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80239ec:	b09b      	sub	sp, #108	@ 0x6c
 80239ee:	9218      	str	r2, [sp, #96]	@ 0x60
 80239f0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80239f2:	9116      	str	r1, [sp, #88]	@ 0x58
 80239f4:	9307      	str	r3, [sp, #28]
 80239f6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 80239fa:	9019      	str	r0, [sp, #100]	@ 0x64
 80239fc:	6850      	ldr	r0, [r2, #4]
 80239fe:	6812      	ldr	r2, [r2, #0]
 8023a00:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 8023a02:	fb00 1303 	mla	r3, r0, r3, r1
 8023a06:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023a0a:	930a      	str	r3, [sp, #40]	@ 0x28
 8023a0c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023a0e:	681b      	ldr	r3, [r3, #0]
 8023a10:	930f      	str	r3, [sp, #60]	@ 0x3c
 8023a12:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023a14:	685e      	ldr	r6, [r3, #4]
 8023a16:	3604      	adds	r6, #4
 8023a18:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023a1a:	2b00      	cmp	r3, #0
 8023a1c:	dc03      	bgt.n	8023a26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8023a1e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023a20:	2b00      	cmp	r3, #0
 8023a22:	f340 8373 	ble.w	802410c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8023a26:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023a28:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023a2c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023a30:	1e48      	subs	r0, r1, #1
 8023a32:	1e57      	subs	r7, r2, #1
 8023a34:	9b07      	ldr	r3, [sp, #28]
 8023a36:	2b00      	cmp	r3, #0
 8023a38:	f340 8190 	ble.w	8023d5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8023a3c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8023a3e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023a42:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023a46:	d406      	bmi.n	8023a56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023a48:	4584      	cmp	ip, r0
 8023a4a:	da04      	bge.n	8023a56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023a4c:	2b00      	cmp	r3, #0
 8023a4e:	db02      	blt.n	8023a56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023a50:	42bb      	cmp	r3, r7
 8023a52:	f2c0 8184 	blt.w	8023d5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8023a56:	f11c 0c01 	adds.w	ip, ip, #1
 8023a5a:	f100 8172 	bmi.w	8023d42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023a5e:	4561      	cmp	r1, ip
 8023a60:	f2c0 816f 	blt.w	8023d42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023a64:	3301      	adds	r3, #1
 8023a66:	f100 816c 	bmi.w	8023d42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023a6a:	429a      	cmp	r2, r3
 8023a6c:	f2c0 8169 	blt.w	8023d42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023a70:	9b07      	ldr	r3, [sp, #28]
 8023a72:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8023a74:	9317      	str	r3, [sp, #92]	@ 0x5c
 8023a76:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023a78:	2b00      	cmp	r3, #0
 8023a7a:	f340 818e 	ble.w	8023d9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8023a7e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8023a80:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023a84:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023a86:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8023a8a:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8023a8c:	141b      	asrs	r3, r3, #16
 8023a8e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8023a92:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8023a96:	f100 81d1 	bmi.w	8023e3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023a9a:	f101 38ff 	add.w	r8, r1, #4294967295
 8023a9e:	4543      	cmp	r3, r8
 8023aa0:	f280 81cc 	bge.w	8023e3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023aa4:	f1bc 0f00 	cmp.w	ip, #0
 8023aa8:	f2c0 81c8 	blt.w	8023e3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023aac:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023ab0:	45c4      	cmp	ip, r8
 8023ab2:	f280 81c3 	bge.w	8023e3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023ab6:	b209      	sxth	r1, r1
 8023ab8:	fb0c 3301 	mla	r3, ip, r1, r3
 8023abc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8023abe:	eb04 0803 	add.w	r8, r4, r3
 8023ac2:	5ce3      	ldrb	r3, [r4, r3]
 8023ac4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023ac8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8023acc:	2a00      	cmp	r2, #0
 8023ace:	f000 81aa 	beq.w	8023e26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8023ad2:	f898 c001 	ldrb.w	ip, [r8, #1]
 8023ad6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8023ada:	940b      	str	r4, [sp, #44]	@ 0x2c
 8023adc:	0e24      	lsrs	r4, r4, #24
 8023ade:	9412      	str	r4, [sp, #72]	@ 0x48
 8023ae0:	b178      	cbz	r0, 8023b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023ae2:	eb08 0c01 	add.w	ip, r8, r1
 8023ae6:	f818 1001 	ldrb.w	r1, [r8, r1]
 8023aea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023aee:	9108      	str	r1, [sp, #32]
 8023af0:	0e09      	lsrs	r1, r1, #24
 8023af2:	9110      	str	r1, [sp, #64]	@ 0x40
 8023af4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8023af8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023afc:	910c      	str	r1, [sp, #48]	@ 0x30
 8023afe:	0e09      	lsrs	r1, r1, #24
 8023b00:	9113      	str	r1, [sp, #76]	@ 0x4c
 8023b02:	b292      	uxth	r2, r2
 8023b04:	b280      	uxth	r0, r0
 8023b06:	fb02 f900 	mul.w	r9, r2, r0
 8023b0a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023b0e:	0112      	lsls	r2, r2, #4
 8023b10:	eba2 0809 	sub.w	r8, r2, r9
 8023b14:	b280      	uxth	r0, r0
 8023b16:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8023b1a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8023b1c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023b1e:	fa1f f888 	uxth.w	r8, r8
 8023b22:	1a12      	subs	r2, r2, r0
 8023b24:	b292      	uxth	r2, r2
 8023b26:	fb08 f101 	mul.w	r1, r8, r1
 8023b2a:	fb02 110e 	mla	r1, r2, lr, r1
 8023b2e:	fb00 1104 	mla	r1, r0, r4, r1
 8023b32:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8023b34:	fb09 1104 	mla	r1, r9, r4, r1
 8023b38:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023b3c:	2900      	cmp	r1, #0
 8023b3e:	f000 80f5 	beq.w	8023d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023b42:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8023b46:	d01b      	beq.n	8023b80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023b48:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8023b4c:	fb0e fa0a 	mul.w	sl, lr, sl
 8023b50:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023b54:	fb0e fe03 	mul.w	lr, lr, r3
 8023b58:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023b5c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023b60:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023b64:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8023b68:	4453      	add	r3, sl
 8023b6a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023b6e:	0a1b      	lsrs	r3, r3, #8
 8023b70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023b74:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023b78:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8023b7c:	ea43 030c 	orr.w	r3, r3, ip
 8023b80:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8023b82:	2cff      	cmp	r4, #255	@ 0xff
 8023b84:	d021      	beq.n	8023bca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8023b86:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023b88:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8023b8c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8023b8e:	fb04 fb0b 	mul.w	fp, r4, fp
 8023b92:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023b94:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8023b98:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8023b9a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023b9e:	fb04 fa0a 	mul.w	sl, r4, sl
 8023ba2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023ba6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023baa:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023bae:	44de      	add	lr, fp
 8023bb0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023bb4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023bb8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023bbc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023bc0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023bc4:	ea4e 040a 	orr.w	r4, lr, sl
 8023bc8:	940b      	str	r4, [sp, #44]	@ 0x2c
 8023bca:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023bcc:	2cff      	cmp	r4, #255	@ 0xff
 8023bce:	d021      	beq.n	8023c14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8023bd0:	9c08      	ldr	r4, [sp, #32]
 8023bd2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8023bd6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023bd8:	fb04 fb0b 	mul.w	fp, r4, fp
 8023bdc:	9c08      	ldr	r4, [sp, #32]
 8023bde:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8023be2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8023be4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023be8:	fb04 fa0a 	mul.w	sl, r4, sl
 8023bec:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023bf0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023bf4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023bf8:	44de      	add	lr, fp
 8023bfa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023bfe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023c02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c06:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023c0a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023c0e:	ea4e 040a 	orr.w	r4, lr, sl
 8023c12:	9408      	str	r4, [sp, #32]
 8023c14:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8023c16:	2cff      	cmp	r4, #255	@ 0xff
 8023c18:	d021      	beq.n	8023c5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8023c1a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8023c1c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8023c20:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8023c22:	fb04 fb0b 	mul.w	fp, r4, fp
 8023c26:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8023c28:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8023c2c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8023c2e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023c32:	fb04 fa0a 	mul.w	sl, r4, sl
 8023c36:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023c3a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023c3e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023c42:	44de      	add	lr, fp
 8023c44:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023c48:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023c4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c50:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023c54:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023c58:	ea4e 040a 	orr.w	r4, lr, sl
 8023c5c:	940c      	str	r4, [sp, #48]	@ 0x30
 8023c5e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023c60:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023c64:	9c08      	ldr	r4, [sp, #32]
 8023c66:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8023c6a:	fb08 fc0c 	mul.w	ip, r8, ip
 8023c6e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023c72:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8023c76:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8023c78:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023c7c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8023c80:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023c82:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023c86:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8023c8a:	fb08 f80e 	mul.w	r8, r8, lr
 8023c8e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023c92:	fb02 8303 	mla	r3, r2, r3, r8
 8023c96:	9a08      	ldr	r2, [sp, #32]
 8023c98:	f8b7 8000 	ldrh.w	r8, [r7]
 8023c9c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8023ca0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8023ca2:	fb00 330a 	mla	r3, r0, sl, r3
 8023ca6:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 8023caa:	fb09 3900 	mla	r9, r9, r0, r3
 8023cae:	43c9      	mvns	r1, r1
 8023cb0:	ea4f 2228 	mov.w	r2, r8, asr #8
 8023cb4:	fa5f fe81 	uxtb.w	lr, r1
 8023cb8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023cbc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023cc0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8023cc4:	fb02 f20e 	mul.w	r2, r2, lr
 8023cc8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023ccc:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8023cd0:	ea4c 0c09 	orr.w	ip, ip, r9
 8023cd4:	1c53      	adds	r3, r2, #1
 8023cd6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8023cda:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8023cde:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8023ce2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023ce6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8023cea:	4a63      	ldr	r2, [pc, #396]	@ (8023e78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8023cec:	fb00 f00e 	mul.w	r0, r0, lr
 8023cf0:	b2db      	uxtb	r3, r3
 8023cf2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8023cf6:	1c43      	adds	r3, r0, #1
 8023cf8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023cfc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8023d00:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8023d04:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023d08:	b2c9      	uxtb	r1, r1
 8023d0a:	00db      	lsls	r3, r3, #3
 8023d0c:	fb01 f10e 	mul.w	r1, r1, lr
 8023d10:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023d14:	4313      	orrs	r3, r2
 8023d16:	1c4a      	adds	r2, r1, #1
 8023d18:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023d1c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023d20:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023d24:	ea4c 0c03 	orr.w	ip, ip, r3
 8023d28:	f8a7 c000 	strh.w	ip, [r7]
 8023d2c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8023d2e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8023d30:	441a      	add	r2, r3
 8023d32:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023d34:	9225      	str	r2, [sp, #148]	@ 0x94
 8023d36:	441d      	add	r5, r3
 8023d38:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023d3a:	3b01      	subs	r3, #1
 8023d3c:	3702      	adds	r7, #2
 8023d3e:	9317      	str	r3, [sp, #92]	@ 0x5c
 8023d40:	e699      	b.n	8023a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023d42:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8023d44:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8023d46:	441c      	add	r4, r3
 8023d48:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023d4a:	9425      	str	r4, [sp, #148]	@ 0x94
 8023d4c:	441d      	add	r5, r3
 8023d4e:	9b07      	ldr	r3, [sp, #28]
 8023d50:	3b01      	subs	r3, #1
 8023d52:	9307      	str	r3, [sp, #28]
 8023d54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023d56:	3302      	adds	r3, #2
 8023d58:	930a      	str	r3, [sp, #40]	@ 0x28
 8023d5a:	e66b      	b.n	8023a34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8023d5c:	d024      	beq.n	8023da8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8023d5e:	9b07      	ldr	r3, [sp, #28]
 8023d60:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8023d62:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8023d64:	3b01      	subs	r3, #1
 8023d66:	fb00 4003 	mla	r0, r0, r3, r4
 8023d6a:	1400      	asrs	r0, r0, #16
 8023d6c:	f53f ae80 	bmi.w	8023a70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023d70:	3901      	subs	r1, #1
 8023d72:	4288      	cmp	r0, r1
 8023d74:	f6bf ae7c 	bge.w	8023a70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023d78:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8023d7a:	fb01 5303 	mla	r3, r1, r3, r5
 8023d7e:	141b      	asrs	r3, r3, #16
 8023d80:	f53f ae76 	bmi.w	8023a70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023d84:	3a01      	subs	r2, #1
 8023d86:	4293      	cmp	r3, r2
 8023d88:	f6bf ae72 	bge.w	8023a70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023d8c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023d90:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8023d94:	f1bb 0f00 	cmp.w	fp, #0
 8023d98:	dc70      	bgt.n	8023e7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8023d9a:	9b07      	ldr	r3, [sp, #28]
 8023d9c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023da0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023da2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023da6:	930a      	str	r3, [sp, #40]	@ 0x28
 8023da8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023daa:	2b00      	cmp	r3, #0
 8023dac:	f340 81ae 	ble.w	802410c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8023db0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023db4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023db8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023dbc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023dbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023dc2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023dc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023dca:	eef0 6a62 	vmov.f32	s13, s5
 8023dce:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023dd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023dd6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023dda:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8023dde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023de2:	eef0 6a43 	vmov.f32	s13, s6
 8023de6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023dea:	ee12 2a90 	vmov	r2, s5
 8023dee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023df2:	fb92 f3f3 	sdiv	r3, r2, r3
 8023df6:	ee13 2a10 	vmov	r2, s6
 8023dfa:	9327      	str	r3, [sp, #156]	@ 0x9c
 8023dfc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023dfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e02:	9328      	str	r3, [sp, #160]	@ 0xa0
 8023e04:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023e06:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8023e08:	3b01      	subs	r3, #1
 8023e0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023e0e:	9316      	str	r3, [sp, #88]	@ 0x58
 8023e10:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023e12:	bf08      	it	eq
 8023e14:	4613      	moveq	r3, r2
 8023e16:	ee16 5a90 	vmov	r5, s13
 8023e1a:	9307      	str	r3, [sp, #28]
 8023e1c:	eeb0 3a67 	vmov.f32	s6, s15
 8023e20:	eef0 2a47 	vmov.f32	s5, s14
 8023e24:	e5f8      	b.n	8023a18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8023e26:	2800      	cmp	r0, #0
 8023e28:	f43f ae6b 	beq.w	8023b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023e2c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8023e30:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023e34:	9108      	str	r1, [sp, #32]
 8023e36:	0e09      	lsrs	r1, r1, #24
 8023e38:	9110      	str	r1, [sp, #64]	@ 0x40
 8023e3a:	e662      	b.n	8023b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023e3c:	f113 0801 	adds.w	r8, r3, #1
 8023e40:	f53f af74 	bmi.w	8023d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023e44:	4541      	cmp	r1, r8
 8023e46:	f6ff af71 	blt.w	8023d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023e4a:	f11c 0801 	adds.w	r8, ip, #1
 8023e4e:	f53f af6d 	bmi.w	8023d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023e52:	45c6      	cmp	lr, r8
 8023e54:	f6ff af6a 	blt.w	8023d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023e58:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8023e5c:	b209      	sxth	r1, r1
 8023e5e:	fa0f f38e 	sxth.w	r3, lr
 8023e62:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8023e66:	9301      	str	r3, [sp, #4]
 8023e68:	9100      	str	r1, [sp, #0]
 8023e6a:	4633      	mov	r3, r6
 8023e6c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8023e6e:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8023e70:	4639      	mov	r1, r7
 8023e72:	f7ff fc7a 	bl	802376a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8023e76:	e759      	b.n	8023d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023e78:	fffff800 	.word	0xfffff800
 8023e7c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8023e7e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8023e80:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023e84:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023e86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023e8a:	1427      	asrs	r7, r4, #16
 8023e8c:	142b      	asrs	r3, r5, #16
 8023e8e:	fb01 7303 	mla	r3, r1, r3, r7
 8023e92:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8023e94:	18e7      	adds	r7, r4, r3
 8023e96:	5ce3      	ldrb	r3, [r4, r3]
 8023e98:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023e9c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8023ea0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023ea4:	2a00      	cmp	r2, #0
 8023ea6:	f000 8127 	beq.w	80240f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023eaa:	f897 e001 	ldrb.w	lr, [r7, #1]
 8023eae:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8023eb2:	940d      	str	r4, [sp, #52]	@ 0x34
 8023eb4:	0e24      	lsrs	r4, r4, #24
 8023eb6:	9414      	str	r4, [sp, #80]	@ 0x50
 8023eb8:	b170      	cbz	r0, 8023ed8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8023eba:	eb07 0e01 	add.w	lr, r7, r1
 8023ebe:	5c79      	ldrb	r1, [r7, r1]
 8023ec0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023ec4:	9109      	str	r1, [sp, #36]	@ 0x24
 8023ec6:	0e09      	lsrs	r1, r1, #24
 8023ec8:	9111      	str	r1, [sp, #68]	@ 0x44
 8023eca:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8023ece:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023ed2:	910e      	str	r1, [sp, #56]	@ 0x38
 8023ed4:	0e09      	lsrs	r1, r1, #24
 8023ed6:	9115      	str	r1, [sp, #84]	@ 0x54
 8023ed8:	b292      	uxth	r2, r2
 8023eda:	b280      	uxth	r0, r0
 8023edc:	fb02 f800 	mul.w	r8, r2, r0
 8023ee0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023ee4:	0112      	lsls	r2, r2, #4
 8023ee6:	eba2 0e08 	sub.w	lr, r2, r8
 8023eea:	b280      	uxth	r0, r0
 8023eec:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8023ef0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8023ef2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8023ef4:	fa1f fe8e 	uxth.w	lr, lr
 8023ef8:	1a09      	subs	r1, r1, r0
 8023efa:	b289      	uxth	r1, r1
 8023efc:	fb0e f202 	mul.w	r2, lr, r2
 8023f00:	fb01 220c 	mla	r2, r1, ip, r2
 8023f04:	fb00 2204 	mla	r2, r0, r4, r2
 8023f08:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8023f0a:	fb08 2204 	mla	r2, r8, r4, r2
 8023f0e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8023f12:	2a00      	cmp	r2, #0
 8023f14:	f000 80e5 	beq.w	80240e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8023f18:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8023f1c:	d019      	beq.n	8023f52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8023f1e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8023f22:	fb0c fa0a 	mul.w	sl, ip, sl
 8023f26:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023f2a:	fb0c fc03 	mul.w	ip, ip, r3
 8023f2e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023f32:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023f36:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023f3a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8023f3e:	4453      	add	r3, sl
 8023f40:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023f44:	0a1b      	lsrs	r3, r3, #8
 8023f46:	0a3f      	lsrs	r7, r7, #8
 8023f48:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023f4c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8023f50:	433b      	orrs	r3, r7
 8023f52:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8023f54:	2cff      	cmp	r4, #255	@ 0xff
 8023f56:	d020      	beq.n	8023f9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8023f58:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8023f5a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8023f5e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8023f60:	4367      	muls	r7, r4
 8023f62:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8023f64:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8023f68:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8023f6a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023f6e:	fb04 fa0a 	mul.w	sl, r4, sl
 8023f72:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023f76:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023f7a:	44bc      	add	ip, r7
 8023f7c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023f80:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023f84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023f88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f8c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023f90:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023f94:	ea4c 040a 	orr.w	r4, ip, sl
 8023f98:	940d      	str	r4, [sp, #52]	@ 0x34
 8023f9a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8023f9c:	2cff      	cmp	r4, #255	@ 0xff
 8023f9e:	d020      	beq.n	8023fe2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8023fa0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8023fa2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8023fa6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8023fa8:	4367      	muls	r7, r4
 8023faa:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8023fac:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8023fb0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8023fb2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023fb6:	fb04 fa0a 	mul.w	sl, r4, sl
 8023fba:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023fbe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023fc2:	44bc      	add	ip, r7
 8023fc4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023fc8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023fcc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023fd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023fd4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023fd8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023fdc:	ea4c 040a 	orr.w	r4, ip, sl
 8023fe0:	9409      	str	r4, [sp, #36]	@ 0x24
 8023fe2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8023fe4:	2cff      	cmp	r4, #255	@ 0xff
 8023fe6:	d020      	beq.n	802402a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8023fe8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8023fea:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8023fee:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8023ff0:	4367      	muls	r7, r4
 8023ff2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8023ff4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8023ff8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8023ffa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023ffe:	fb04 fa0a 	mul.w	sl, r4, sl
 8024002:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024006:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802400a:	44bc      	add	ip, r7
 802400c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8024010:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024014:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024018:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802401c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024020:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024024:	ea4c 040a 	orr.w	r4, ip, sl
 8024028:	940e      	str	r4, [sp, #56]	@ 0x38
 802402a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802402c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8024030:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8024032:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8024036:	fb0e f707 	mul.w	r7, lr, r7
 802403a:	fb01 770c 	mla	r7, r1, ip, r7
 802403e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8024042:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8024044:	fb00 770c 	mla	r7, r0, ip, r7
 8024048:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802404c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802404e:	fb08 770c 	mla	r7, r8, ip, r7
 8024052:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8024056:	fb0e fe0c 	mul.w	lr, lr, ip
 802405a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802405e:	fb01 e303 	mla	r3, r1, r3, lr
 8024062:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8024064:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8024068:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802406a:	fb00 330a 	mla	r3, r0, sl, r3
 802406e:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8024072:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024076:	f8b9 3000 	ldrh.w	r3, [r9]
 802407a:	43d2      	mvns	r2, r2
 802407c:	1218      	asrs	r0, r3, #8
 802407e:	b2d2      	uxtb	r2, r2
 8024080:	10d9      	asrs	r1, r3, #3
 8024082:	0a3f      	lsrs	r7, r7, #8
 8024084:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024088:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802408c:	00db      	lsls	r3, r3, #3
 802408e:	4350      	muls	r0, r2
 8024090:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8024094:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8024098:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802409c:	b2db      	uxtb	r3, r3
 802409e:	ea47 070c 	orr.w	r7, r7, ip
 80240a2:	4351      	muls	r1, r2
 80240a4:	4353      	muls	r3, r2
 80240a6:	1c42      	adds	r2, r0, #1
 80240a8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80240ac:	0c3a      	lsrs	r2, r7, #16
 80240ae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80240b2:	4a18      	ldr	r2, [pc, #96]	@ (8024114 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80240b4:	b2c0      	uxtb	r0, r0
 80240b6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80240ba:	1c4a      	adds	r2, r1, #1
 80240bc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80240c0:	0a3a      	lsrs	r2, r7, #8
 80240c2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80240c6:	00c9      	lsls	r1, r1, #3
 80240c8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80240cc:	4301      	orrs	r1, r0
 80240ce:	1c58      	adds	r0, r3, #1
 80240d0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80240d4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80240d8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80240dc:	4308      	orrs	r0, r1
 80240de:	f8a9 0000 	strh.w	r0, [r9]
 80240e2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80240e4:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80240e6:	441a      	add	r2, r3
 80240e8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80240ea:	9225      	str	r2, [sp, #148]	@ 0x94
 80240ec:	f109 0902 	add.w	r9, r9, #2
 80240f0:	441d      	add	r5, r3
 80240f2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80240f6:	e64d      	b.n	8023d94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80240f8:	2800      	cmp	r0, #0
 80240fa:	f43f aeed 	beq.w	8023ed8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80240fe:	5c79      	ldrb	r1, [r7, r1]
 8024100:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024104:	9109      	str	r1, [sp, #36]	@ 0x24
 8024106:	0e09      	lsrs	r1, r1, #24
 8024108:	9111      	str	r1, [sp, #68]	@ 0x44
 802410a:	e6e5      	b.n	8023ed8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802410c:	b01b      	add	sp, #108	@ 0x6c
 802410e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024112:	bf00      	nop
 8024114:	fffff800 	.word	0xfffff800

08024118 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8024118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802411c:	b085      	sub	sp, #20
 802411e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8024122:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8024126:	9103      	str	r1, [sp, #12]
 8024128:	fb00 7406 	mla	r4, r0, r6, r7
 802412c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8024130:	2800      	cmp	r0, #0
 8024132:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8024136:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 802413a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 802413e:	9501      	str	r5, [sp, #4]
 8024140:	eb03 0904 	add.w	r9, r3, r4
 8024144:	f2c0 8150 	blt.w	80243e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8024148:	4583      	cmp	fp, r0
 802414a:	f340 814d 	ble.w	80243e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802414e:	2f00      	cmp	r7, #0
 8024150:	f2c0 8146 	blt.w	80243e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8024154:	42be      	cmp	r6, r7
 8024156:	f340 8143 	ble.w	80243e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802415a:	f813 c004 	ldrb.w	ip, [r3, r4]
 802415e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8024162:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024166:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 802416a:	4355      	muls	r5, r2
 802416c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024170:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8024174:	fb0c f203 	mul.w	r2, ip, r3
 8024178:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 802417c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8024180:	441d      	add	r5, r3
 8024182:	f102 0320 	add.w	r3, r2, #32
 8024186:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802418a:	0a1b      	lsrs	r3, r3, #8
 802418c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8024190:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024194:	431c      	orrs	r4, r3
 8024196:	1c7b      	adds	r3, r7, #1
 8024198:	f100 812b 	bmi.w	80243f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802419c:	429e      	cmp	r6, r3
 802419e:	f340 8128 	ble.w	80243f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80241a2:	2900      	cmp	r1, #0
 80241a4:	f000 8128 	beq.w	80243f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80241a8:	9a01      	ldr	r2, [sp, #4]
 80241aa:	f899 3001 	ldrb.w	r3, [r9, #1]
 80241ae:	8855      	ldrh	r5, [r2, #2]
 80241b0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80241b4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 80241b8:	fb08 f802 	mul.w	r8, r8, r2
 80241bc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80241c0:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 80241c4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80241c8:	435d      	muls	r5, r3
 80241ca:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80241ce:	44d0      	add	r8, sl
 80241d0:	f105 0a20 	add.w	sl, r5, #32
 80241d4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80241d8:	0a2d      	lsrs	r5, r5, #8
 80241da:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80241de:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80241e2:	432a      	orrs	r2, r5
 80241e4:	3001      	adds	r0, #1
 80241e6:	f100 810d 	bmi.w	8024404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80241ea:	4583      	cmp	fp, r0
 80241ec:	f340 810a 	ble.w	8024404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80241f0:	f1be 0f00 	cmp.w	lr, #0
 80241f4:	f000 810b 	beq.w	802440e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80241f8:	2f00      	cmp	r7, #0
 80241fa:	f2c0 8100 	blt.w	80243fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80241fe:	42be      	cmp	r6, r7
 8024200:	f340 80fd 	ble.w	80243fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8024204:	9801      	ldr	r0, [sp, #4]
 8024206:	f819 5006 	ldrb.w	r5, [r9, r6]
 802420a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802420e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8024212:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8024216:	fb0a fa00 	mul.w	sl, sl, r0
 802421a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 802421e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8024222:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8024226:	fb05 f808 	mul.w	r8, r5, r8
 802422a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 802422e:	4482      	add	sl, r0
 8024230:	f108 0020 	add.w	r0, r8, #32
 8024234:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8024238:	0a00      	lsrs	r0, r0, #8
 802423a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802423e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024242:	ea4b 0b00 	orr.w	fp, fp, r0
 8024246:	3701      	adds	r7, #1
 8024248:	f100 80e6 	bmi.w	8024418 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802424c:	42be      	cmp	r6, r7
 802424e:	f340 80e3 	ble.w	8024418 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8024252:	2900      	cmp	r1, #0
 8024254:	f000 80e3 	beq.w	802441e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8024258:	3601      	adds	r6, #1
 802425a:	9801      	ldr	r0, [sp, #4]
 802425c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8024260:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8024264:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8024268:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 802426c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024270:	fb09 f906 	mul.w	r9, r9, r6
 8024274:	fb07 f800 	mul.w	r8, r7, r0
 8024278:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 802427c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8024280:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8024284:	44d1      	add	r9, sl
 8024286:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802428a:	f108 0020 	add.w	r0, r8, #32
 802428e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8024292:	0a00      	lsrs	r0, r0, #8
 8024294:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024298:	4330      	orrs	r0, r6
 802429a:	b28e      	uxth	r6, r1
 802429c:	fa1f f98e 	uxth.w	r9, lr
 80242a0:	fb06 f809 	mul.w	r8, r6, r9
 80242a4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80242a8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80242ac:	0136      	lsls	r6, r6, #4
 80242ae:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80242b2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80242b6:	9601      	str	r6, [sp, #4]
 80242b8:	ea4a 0404 	orr.w	r4, sl, r4
 80242bc:	fa1f f689 	uxth.w	r6, r9
 80242c0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80242c4:	fb11 f90e 	smulbb	r9, r1, lr
 80242c8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80242cc:	9602      	str	r6, [sp, #8]
 80242ce:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80242d2:	4626      	mov	r6, r4
 80242d4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80242d8:	f1ce 0410 	rsb	r4, lr, #16
 80242dc:	1a64      	subs	r4, r4, r1
 80242de:	ea4a 0202 	orr.w	r2, sl, r2
 80242e2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80242e6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80242ea:	434a      	muls	r2, r1
 80242ec:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80242f0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80242f4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80242f8:	fb04 2406 	mla	r4, r4, r6, r2
 80242fc:	ea4a 0000 	orr.w	r0, sl, r0
 8024300:	fb09 4200 	mla	r2, r9, r0, r4
 8024304:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8024308:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 802430c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8024310:	ea44 0b0b 	orr.w	fp, r4, fp
 8024314:	9c01      	ldr	r4, [sp, #4]
 8024316:	9e02      	ldr	r6, [sp, #8]
 8024318:	9903      	ldr	r1, [sp, #12]
 802431a:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 802431e:	1ba4      	subs	r4, r4, r6
 8024320:	9e01      	ldr	r6, [sp, #4]
 8024322:	8808      	ldrh	r0, [r1, #0]
 8024324:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 8024328:	eba6 0608 	sub.w	r6, r6, r8
 802432c:	b2b6      	uxth	r6, r6
 802432e:	b2a4      	uxth	r4, r4
 8024330:	4373      	muls	r3, r6
 8024332:	fb0c 3304 	mla	r3, ip, r4, r3
 8024336:	9c02      	ldr	r4, [sp, #8]
 8024338:	fb04 3505 	mla	r5, r4, r5, r3
 802433c:	fb08 5707 	mla	r7, r8, r7, r5
 8024340:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8024344:	b289      	uxth	r1, r1
 8024346:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802434a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802434e:	434f      	muls	r7, r1
 8024350:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8024354:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024358:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802435c:	1c7b      	adds	r3, r7, #1
 802435e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8024362:	ea42 0e0e 	orr.w	lr, r2, lr
 8024366:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802436a:	fa1f f28e 	uxth.w	r2, lr
 802436e:	1203      	asrs	r3, r0, #8
 8024370:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8024374:	b2ff      	uxtb	r7, r7
 8024376:	1215      	asrs	r5, r2, #8
 8024378:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802437c:	fb13 f307 	smulbb	r3, r3, r7
 8024380:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8024384:	fb05 3501 	mla	r5, r5, r1, r3
 8024388:	10c3      	asrs	r3, r0, #3
 802438a:	10d4      	asrs	r4, r2, #3
 802438c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8024390:	fb13 f307 	smulbb	r3, r3, r7
 8024394:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8024398:	fb04 3401 	mla	r4, r4, r1, r3
 802439c:	00c3      	lsls	r3, r0, #3
 802439e:	00d2      	lsls	r2, r2, #3
 80243a0:	b2db      	uxtb	r3, r3
 80243a2:	fb13 f307 	smulbb	r3, r3, r7
 80243a6:	b2d2      	uxtb	r2, r2
 80243a8:	fb02 3101 	mla	r1, r2, r1, r3
 80243ac:	b2ad      	uxth	r5, r5
 80243ae:	b289      	uxth	r1, r1
 80243b0:	b2a4      	uxth	r4, r4
 80243b2:	1c6b      	adds	r3, r5, #1
 80243b4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80243b8:	1c62      	adds	r2, r4, #1
 80243ba:	1c4b      	adds	r3, r1, #1
 80243bc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80243c0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80243c4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80243c8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80243cc:	0964      	lsrs	r4, r4, #5
 80243ce:	432b      	orrs	r3, r5
 80243d0:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80243d4:	9a03      	ldr	r2, [sp, #12]
 80243d6:	4323      	orrs	r3, r4
 80243d8:	8013      	strh	r3, [r2, #0]
 80243da:	b005      	add	sp, #20
 80243dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80243e0:	f04f 0c00 	mov.w	ip, #0
 80243e4:	4664      	mov	r4, ip
 80243e6:	e6d6      	b.n	8024196 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80243e8:	2300      	movs	r3, #0
 80243ea:	469c      	mov	ip, r3
 80243ec:	461a      	mov	r2, r3
 80243ee:	461c      	mov	r4, r3
 80243f0:	e6f8      	b.n	80241e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80243f2:	2300      	movs	r3, #0
 80243f4:	461a      	mov	r2, r3
 80243f6:	e6f5      	b.n	80241e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80243f8:	460b      	mov	r3, r1
 80243fa:	460a      	mov	r2, r1
 80243fc:	e6f2      	b.n	80241e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80243fe:	2500      	movs	r5, #0
 8024400:	46ab      	mov	fp, r5
 8024402:	e720      	b.n	8024246 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8024404:	2700      	movs	r7, #0
 8024406:	463d      	mov	r5, r7
 8024408:	4638      	mov	r0, r7
 802440a:	46bb      	mov	fp, r7
 802440c:	e745      	b.n	802429a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802440e:	4677      	mov	r7, lr
 8024410:	4675      	mov	r5, lr
 8024412:	4670      	mov	r0, lr
 8024414:	46f3      	mov	fp, lr
 8024416:	e740      	b.n	802429a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8024418:	2700      	movs	r7, #0
 802441a:	4638      	mov	r0, r7
 802441c:	e73d      	b.n	802429a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802441e:	460f      	mov	r7, r1
 8024420:	4608      	mov	r0, r1
 8024422:	e73a      	b.n	802429a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08024424 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024428:	b097      	sub	sp, #92	@ 0x5c
 802442a:	9214      	str	r2, [sp, #80]	@ 0x50
 802442c:	9308      	str	r3, [sp, #32]
 802442e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8024430:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8024434:	9312      	str	r3, [sp, #72]	@ 0x48
 8024436:	9111      	str	r1, [sp, #68]	@ 0x44
 8024438:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 802443c:	9015      	str	r0, [sp, #84]	@ 0x54
 802443e:	6850      	ldr	r0, [r2, #4]
 8024440:	6812      	ldr	r2, [r2, #0]
 8024442:	fb00 1303 	mla	r3, r0, r3, r1
 8024446:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802444a:	9309      	str	r3, [sp, #36]	@ 0x24
 802444c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802444e:	681b      	ldr	r3, [r3, #0]
 8024450:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024452:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024454:	685b      	ldr	r3, [r3, #4]
 8024456:	930c      	str	r3, [sp, #48]	@ 0x30
 8024458:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 802445c:	930a      	str	r3, [sp, #40]	@ 0x28
 802445e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8024460:	2b00      	cmp	r3, #0
 8024462:	dc03      	bgt.n	802446c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024464:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8024466:	2b00      	cmp	r3, #0
 8024468:	f340 83cb 	ble.w	8024c02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 802446c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802446e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024472:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024476:	1e48      	subs	r0, r1, #1
 8024478:	1e55      	subs	r5, r2, #1
 802447a:	9b08      	ldr	r3, [sp, #32]
 802447c:	2b00      	cmp	r3, #0
 802447e:	f340 81a3 	ble.w	80247c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8024482:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8024484:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8024486:	1436      	asrs	r6, r6, #16
 8024488:	ea4f 4323 	mov.w	r3, r3, asr #16
 802448c:	d406      	bmi.n	802449c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802448e:	4286      	cmp	r6, r0
 8024490:	da04      	bge.n	802449c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024492:	2b00      	cmp	r3, #0
 8024494:	db02      	blt.n	802449c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024496:	42ab      	cmp	r3, r5
 8024498:	f2c0 8197 	blt.w	80247ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802449c:	3601      	adds	r6, #1
 802449e:	f100 8184 	bmi.w	80247aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80244a2:	42b1      	cmp	r1, r6
 80244a4:	f2c0 8181 	blt.w	80247aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80244a8:	3301      	adds	r3, #1
 80244aa:	f100 817e 	bmi.w	80247aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80244ae:	429a      	cmp	r2, r3
 80244b0:	f2c0 817b 	blt.w	80247aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80244b4:	9b08      	ldr	r3, [sp, #32]
 80244b6:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80244b8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80244ba:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80244be:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80244c0:	2b00      	cmp	r3, #0
 80244c2:	f340 81a4 	ble.w	802480e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80244c6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80244c8:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 80244ca:	1418      	asrs	r0, r3, #16
 80244cc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80244ce:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80244d2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80244d4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80244d8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80244da:	142d      	asrs	r5, r5, #16
 80244dc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80244e0:	f100 81f8 	bmi.w	80248d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80244e4:	f102 3eff 	add.w	lr, r2, #4294967295
 80244e8:	4575      	cmp	r5, lr
 80244ea:	f280 81f3 	bge.w	80248d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80244ee:	2800      	cmp	r0, #0
 80244f0:	f2c0 81f0 	blt.w	80248d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80244f4:	f103 3eff 	add.w	lr, r3, #4294967295
 80244f8:	4570      	cmp	r0, lr
 80244fa:	f280 81eb 	bge.w	80248d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80244fe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024500:	b212      	sxth	r2, r2
 8024502:	fb00 5002 	mla	r0, r0, r2, r5
 8024506:	fa1f fe81 	uxth.w	lr, r1
 802450a:	eb03 0a00 	add.w	sl, r3, r0
 802450e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8024512:	f813 9000 	ldrb.w	r9, [r3, r0]
 8024516:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802451a:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 802451e:	b29b      	uxth	r3, r3
 8024520:	f1bc 0f00 	cmp.w	ip, #0
 8024524:	f000 81b9 	beq.w	802489a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8024528:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802452c:	940d      	str	r4, [sp, #52]	@ 0x34
 802452e:	eb0a 0b02 	add.w	fp, sl, r2
 8024532:	fa1f fa8c 	uxth.w	sl, ip
 8024536:	fb0a fe0e 	mul.w	lr, sl, lr
 802453a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802453e:	fa1f fa8a 	uxth.w	sl, sl
 8024542:	eba5 050e 	sub.w	r5, r5, lr
 8024546:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802454a:	940e      	str	r4, [sp, #56]	@ 0x38
 802454c:	eba3 030a 	sub.w	r3, r3, sl
 8024550:	b2ad      	uxth	r5, r5
 8024552:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8024554:	b29b      	uxth	r3, r3
 8024556:	fb08 f505 	mul.w	r5, r8, r5
 802455a:	fb09 5303 	mla	r3, r9, r3, r5
 802455e:	fb0a 3304 	mla	r3, sl, r4, r3
 8024562:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8024564:	fb0e 3304 	mla	r3, lr, r4, r3
 8024568:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802456c:	2b00      	cmp	r3, #0
 802456e:	f000 810f 	beq.w	8024790 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024572:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8024574:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8024578:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802457c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8024580:	f000 8190 	beq.w	80248a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8024584:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8024588:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802458c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024590:	fb09 f000 	mul.w	r0, r9, r0
 8024594:	fb0a fe0e 	mul.w	lr, sl, lr
 8024598:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802459c:	f100 0b20 	add.w	fp, r0, #32
 80245a0:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80245a4:	44ce      	add	lr, r9
 80245a6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80245aa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80245ae:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80245b2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80245b6:	ea4e 0909 	orr.w	r9, lr, r9
 80245ba:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80245be:	8868      	ldrh	r0, [r5, #2]
 80245c0:	d019      	beq.n	80245f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80245c2:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 80245c6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80245ca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80245ce:	fb08 f800 	mul.w	r8, r8, r0
 80245d2:	fb0a fe0e 	mul.w	lr, sl, lr
 80245d6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80245da:	f108 0b20 	add.w	fp, r8, #32
 80245de:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80245e2:	4486      	add	lr, r0
 80245e4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80245e8:	0a00      	lsrs	r0, r0, #8
 80245ea:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80245ee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80245f2:	ea4e 0000 	orr.w	r0, lr, r0
 80245f6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80245fa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80245fe:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8024602:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8024606:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802460a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802460e:	ea4e 0909 	orr.w	r9, lr, r9
 8024612:	ea4a 0000 	orr.w	r0, sl, r0
 8024616:	f1bc 0f00 	cmp.w	ip, #0
 802461a:	f000 8145 	beq.w	80248a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802461e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8024622:	3a01      	subs	r2, #1
 8024624:	0052      	lsls	r2, r2, #1
 8024626:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8024628:	3202      	adds	r2, #2
 802462a:	2cff      	cmp	r4, #255	@ 0xff
 802462c:	eb05 0e02 	add.w	lr, r5, r2
 8024630:	5aaa      	ldrh	r2, [r5, r2]
 8024632:	d018      	beq.n	8024666 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8024634:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8024638:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802463c:	fb04 fa02 	mul.w	sl, r4, r2
 8024640:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024644:	fb08 f805 	mul.w	r8, r8, r5
 8024648:	f10a 0520 	add.w	r5, sl, #32
 802464c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8024650:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8024654:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8024658:	4442      	add	r2, r8
 802465a:	0a2d      	lsrs	r5, r5, #8
 802465c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8024660:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8024664:	432a      	orrs	r2, r5
 8024666:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8024668:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802466c:	2cff      	cmp	r4, #255	@ 0xff
 802466e:	d01a      	beq.n	80246a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8024670:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8024674:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8024678:	fb04 fa05 	mul.w	sl, r4, r5
 802467c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024680:	fb08 f80e 	mul.w	r8, r8, lr
 8024684:	f10a 0e20 	add.w	lr, sl, #32
 8024688:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802468c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8024690:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8024694:	4445      	add	r5, r8
 8024696:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802469a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802469e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80246a2:	ea45 050e 	orr.w	r5, r5, lr
 80246a6:	fb1c fe01 	smulbb	lr, ip, r1
 80246aa:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80246ae:	f1cc 0810 	rsb	r8, ip, #16
 80246b2:	eba8 0801 	sub.w	r8, r8, r1
 80246b6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80246ba:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80246be:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80246c2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80246c6:	4341      	muls	r1, r0
 80246c8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80246cc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80246d0:	ea4a 0202 	orr.w	r2, sl, r2
 80246d4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80246d8:	fb09 1108 	mla	r1, r9, r8, r1
 80246dc:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80246e0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80246e4:	fb0c 1102 	mla	r1, ip, r2, r1
 80246e8:	ea4b 0505 	orr.w	r5, fp, r5
 80246ec:	fb0e 1e05 	mla	lr, lr, r5, r1
 80246f0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80246f4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80246f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80246fc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8024700:	ea42 0e0e 	orr.w	lr, r2, lr
 8024704:	fa1f f28e 	uxth.w	r2, lr
 8024708:	2bff      	cmp	r3, #255	@ 0xff
 802470a:	d103      	bne.n	8024714 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 802470c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802470e:	29ff      	cmp	r1, #255	@ 0xff
 8024710:	f000 80de 	beq.w	80248d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8024714:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8024716:	8838      	ldrh	r0, [r7, #0]
 8024718:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802471a:	434b      	muls	r3, r1
 802471c:	f103 0c01 	add.w	ip, r3, #1
 8024720:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8024724:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8024728:	fa5f fc83 	uxtb.w	ip, r3
 802472c:	1203      	asrs	r3, r0, #8
 802472e:	1215      	asrs	r5, r2, #8
 8024730:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8024734:	fb13 f30c 	smulbb	r3, r3, ip
 8024738:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802473c:	fb05 3501 	mla	r5, r5, r1, r3
 8024740:	10c3      	asrs	r3, r0, #3
 8024742:	10d1      	asrs	r1, r2, #3
 8024744:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8024748:	fb13 f30c 	smulbb	r3, r3, ip
 802474c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8024750:	fb01 3104 	mla	r1, r1, r4, r3
 8024754:	00c3      	lsls	r3, r0, #3
 8024756:	00d2      	lsls	r2, r2, #3
 8024758:	b2db      	uxtb	r3, r3
 802475a:	b2d2      	uxtb	r2, r2
 802475c:	fb13 f30c 	smulbb	r3, r3, ip
 8024760:	b2ad      	uxth	r5, r5
 8024762:	fb02 3304 	mla	r3, r2, r4, r3
 8024766:	b29a      	uxth	r2, r3
 8024768:	1c6b      	adds	r3, r5, #1
 802476a:	b289      	uxth	r1, r1
 802476c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024770:	1c53      	adds	r3, r2, #1
 8024772:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024776:	1c4a      	adds	r2, r1, #1
 8024778:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802477c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8024780:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024784:	0949      	lsrs	r1, r1, #5
 8024786:	432b      	orrs	r3, r5
 8024788:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802478c:	430b      	orrs	r3, r1
 802478e:	803b      	strh	r3, [r7, #0]
 8024790:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8024792:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8024794:	4413      	add	r3, r2
 8024796:	9321      	str	r3, [sp, #132]	@ 0x84
 8024798:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 802479a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802479c:	441a      	add	r2, r3
 802479e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80247a0:	9222      	str	r2, [sp, #136]	@ 0x88
 80247a2:	3b01      	subs	r3, #1
 80247a4:	3702      	adds	r7, #2
 80247a6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80247a8:	e689      	b.n	80244be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80247aa:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80247ac:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 80247ae:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 80247b0:	4433      	add	r3, r6
 80247b2:	9321      	str	r3, [sp, #132]	@ 0x84
 80247b4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80247b6:	441c      	add	r4, r3
 80247b8:	9b08      	ldr	r3, [sp, #32]
 80247ba:	9422      	str	r4, [sp, #136]	@ 0x88
 80247bc:	3b01      	subs	r3, #1
 80247be:	9308      	str	r3, [sp, #32]
 80247c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80247c2:	3302      	adds	r3, #2
 80247c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80247c6:	e658      	b.n	802447a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80247c8:	d028      	beq.n	802481c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80247ca:	9b08      	ldr	r3, [sp, #32]
 80247cc:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 80247ce:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 80247d0:	3b01      	subs	r3, #1
 80247d2:	fb00 5003 	mla	r0, r0, r3, r5
 80247d6:	1400      	asrs	r0, r0, #16
 80247d8:	f53f ae6c 	bmi.w	80244b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80247dc:	3901      	subs	r1, #1
 80247de:	4288      	cmp	r0, r1
 80247e0:	f6bf ae68 	bge.w	80244b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80247e4:	9924      	ldr	r1, [sp, #144]	@ 0x90
 80247e6:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80247e8:	fb01 0303 	mla	r3, r1, r3, r0
 80247ec:	141b      	asrs	r3, r3, #16
 80247ee:	f53f ae61 	bmi.w	80244b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80247f2:	3a01      	subs	r2, #1
 80247f4:	4293      	cmp	r3, r2
 80247f6:	f6bf ae5d 	bge.w	80244b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80247fa:	9b08      	ldr	r3, [sp, #32]
 80247fc:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8024800:	9313      	str	r3, [sp, #76]	@ 0x4c
 8024802:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8024806:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8024808:	2b00      	cmp	r3, #0
 802480a:	f300 8082 	bgt.w	8024912 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802480e:	9b08      	ldr	r3, [sp, #32]
 8024810:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024814:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024816:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802481a:	9309      	str	r3, [sp, #36]	@ 0x24
 802481c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802481e:	2b00      	cmp	r3, #0
 8024820:	f340 81ef 	ble.w	8024c02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8024824:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024828:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802482c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024830:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024832:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024836:	ee31 1a05 	vadd.f32	s2, s2, s10
 802483a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802483e:	eef0 6a62 	vmov.f32	s13, s5
 8024842:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024846:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802484a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802484e:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8024852:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024856:	eef0 6a43 	vmov.f32	s13, s6
 802485a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802485e:	ee12 2a90 	vmov	r2, s5
 8024862:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024866:	fb92 f3f3 	sdiv	r3, r2, r3
 802486a:	ee13 2a10 	vmov	r2, s6
 802486e:	9323      	str	r3, [sp, #140]	@ 0x8c
 8024870:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024872:	fb92 f3f3 	sdiv	r3, r2, r3
 8024876:	9324      	str	r3, [sp, #144]	@ 0x90
 8024878:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802487a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802487c:	3b01      	subs	r3, #1
 802487e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024882:	9311      	str	r3, [sp, #68]	@ 0x44
 8024884:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024886:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 802488a:	bf08      	it	eq
 802488c:	4613      	moveq	r3, r2
 802488e:	9308      	str	r3, [sp, #32]
 8024890:	eeb0 3a67 	vmov.f32	s6, s15
 8024894:	eef0 2a47 	vmov.f32	s5, s14
 8024898:	e5e1      	b.n	802445e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802489a:	fb08 f505 	mul.w	r5, r8, r5
 802489e:	fb09 5303 	mla	r3, r9, r3, r5
 80248a2:	e661      	b.n	8024568 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80248a4:	4681      	mov	r9, r0
 80248a6:	e688      	b.n	80245ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80248a8:	f1c1 0210 	rsb	r2, r1, #16
 80248ac:	4341      	muls	r1, r0
 80248ae:	fb09 1902 	mla	r9, r9, r2, r1
 80248b2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80248b6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80248ba:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80248be:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80248c2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80248c6:	ea42 0909 	orr.w	r9, r2, r9
 80248ca:	fa1f f289 	uxth.w	r2, r9
 80248ce:	e71b      	b.n	8024708 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80248d0:	803a      	strh	r2, [r7, #0]
 80248d2:	e75d      	b.n	8024790 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80248d4:	f115 0e01 	adds.w	lr, r5, #1
 80248d8:	f53f af5a 	bmi.w	8024790 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80248dc:	4572      	cmp	r2, lr
 80248de:	f6ff af57 	blt.w	8024790 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80248e2:	f110 0e01 	adds.w	lr, r0, #1
 80248e6:	f53f af53 	bmi.w	8024790 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80248ea:	4573      	cmp	r3, lr
 80248ec:	f6ff af50 	blt.w	8024790 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80248f0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80248f2:	9502      	str	r5, [sp, #8]
 80248f4:	b21b      	sxth	r3, r3
 80248f6:	b212      	sxth	r2, r2
 80248f8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80248fc:	9301      	str	r3, [sp, #4]
 80248fe:	9200      	str	r2, [sp, #0]
 8024900:	e9cd c405 	strd	ip, r4, [sp, #20]
 8024904:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8024908:	4639      	mov	r1, r7
 802490a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802490c:	f7ff fc04 	bl	8024118 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8024910:	e73e      	b.n	8024790 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024912:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8024914:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024918:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802491a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802491e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024920:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024924:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8024926:	141f      	asrs	r7, r3, #16
 8024928:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802492a:	141b      	asrs	r3, r3, #16
 802492c:	fb01 3707 	mla	r7, r1, r7, r3
 8024930:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024932:	fa1f fc82 	uxth.w	ip, r2
 8024936:	eb03 0a07 	add.w	sl, r3, r7
 802493a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802493e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8024942:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024946:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802494a:	b29b      	uxth	r3, r3
 802494c:	2d00      	cmp	r5, #0
 802494e:	f000 813d 	beq.w	8024bcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8024952:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8024956:	940f      	str	r4, [sp, #60]	@ 0x3c
 8024958:	eb0a 0b01 	add.w	fp, sl, r1
 802495c:	fa1f fa85 	uxth.w	sl, r5
 8024960:	fb0a fc0c 	mul.w	ip, sl, ip
 8024964:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8024968:	fa1f fa8a 	uxth.w	sl, sl
 802496c:	eba0 000c 	sub.w	r0, r0, ip
 8024970:	eba3 030a 	sub.w	r3, r3, sl
 8024974:	b280      	uxth	r0, r0
 8024976:	fb08 f000 	mul.w	r0, r8, r0
 802497a:	b29b      	uxth	r3, r3
 802497c:	fb09 0303 	mla	r3, r9, r3, r0
 8024980:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8024982:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8024986:	9410      	str	r4, [sp, #64]	@ 0x40
 8024988:	fb0a 3300 	mla	r3, sl, r0, r3
 802498c:	fb0c 3304 	mla	r3, ip, r4, r3
 8024990:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024994:	2b00      	cmp	r3, #0
 8024996:	f000 810b 	beq.w	8024bb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802499a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802499c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802499e:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80249a2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80249a6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80249aa:	f000 8114 	beq.w	8024bd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80249ae:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80249b2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80249b6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80249ba:	fb09 f707 	mul.w	r7, r9, r7
 80249be:	fb0a fc0c 	mul.w	ip, sl, ip
 80249c2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80249c6:	f107 0b20 	add.w	fp, r7, #32
 80249ca:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80249ce:	44cc      	add	ip, r9
 80249d0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80249d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80249d8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80249dc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80249e0:	ea4c 0909 	orr.w	r9, ip, r9
 80249e4:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80249e8:	8847      	ldrh	r7, [r0, #2]
 80249ea:	d019      	beq.n	8024a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80249ec:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80249f0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80249f4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80249f8:	fb08 f807 	mul.w	r8, r8, r7
 80249fc:	fb0a fc0c 	mul.w	ip, sl, ip
 8024a00:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8024a04:	f108 0b20 	add.w	fp, r8, #32
 8024a08:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8024a0c:	44bc      	add	ip, r7
 8024a0e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8024a12:	0a3f      	lsrs	r7, r7, #8
 8024a14:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024a18:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8024a1c:	ea4c 0707 	orr.w	r7, ip, r7
 8024a20:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8024a24:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8024a28:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8024a2c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8024a30:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8024a34:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8024a38:	ea4c 0909 	orr.w	r9, ip, r9
 8024a3c:	ea4a 0707 	orr.w	r7, sl, r7
 8024a40:	2d00      	cmp	r5, #0
 8024a42:	f000 80ca 	beq.w	8024bda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8024a46:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8024a4a:	3901      	subs	r1, #1
 8024a4c:	0049      	lsls	r1, r1, #1
 8024a4e:	3102      	adds	r1, #2
 8024a50:	eb00 0c01 	add.w	ip, r0, r1
 8024a54:	5a41      	ldrh	r1, [r0, r1]
 8024a56:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8024a58:	28ff      	cmp	r0, #255	@ 0xff
 8024a5a:	d019      	beq.n	8024a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8024a5c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8024a5e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8024a62:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024a66:	fb04 fa01 	mul.w	sl, r4, r1
 8024a6a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024a6e:	fb08 f800 	mul.w	r8, r8, r0
 8024a72:	f10a 0020 	add.w	r0, sl, #32
 8024a76:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8024a7a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8024a7e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8024a82:	4441      	add	r1, r8
 8024a84:	0a00      	lsrs	r0, r0, #8
 8024a86:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8024a8a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024a8e:	4301      	orrs	r1, r0
 8024a90:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8024a92:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8024a96:	2cff      	cmp	r4, #255	@ 0xff
 8024a98:	d01a      	beq.n	8024ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8024a9a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8024a9e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024aa2:	fb04 fa00 	mul.w	sl, r4, r0
 8024aa6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024aaa:	fb08 f80c 	mul.w	r8, r8, ip
 8024aae:	f10a 0c20 	add.w	ip, sl, #32
 8024ab2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8024ab6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8024aba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8024abe:	4440      	add	r0, r8
 8024ac0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024ac4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8024ac8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8024acc:	ea40 000c 	orr.w	r0, r0, ip
 8024ad0:	fb15 fc02 	smulbb	ip, r5, r2
 8024ad4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8024ad8:	f1c5 0810 	rsb	r8, r5, #16
 8024adc:	eba8 0802 	sub.w	r8, r8, r2
 8024ae0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024ae4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8024ae8:	437a      	muls	r2, r7
 8024aea:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024aee:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024af2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8024af6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8024afa:	fb09 2208 	mla	r2, r9, r8, r2
 8024afe:	ea4a 0101 	orr.w	r1, sl, r1
 8024b02:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8024b06:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8024b0a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8024b0e:	fb05 2201 	mla	r2, r5, r1, r2
 8024b12:	ea4b 0000 	orr.w	r0, fp, r0
 8024b16:	fb0c 2200 	mla	r2, ip, r0, r2
 8024b1a:	0d57      	lsrs	r7, r2, #21
 8024b1c:	0952      	lsrs	r2, r2, #5
 8024b1e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8024b22:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8024b26:	433a      	orrs	r2, r7
 8024b28:	2bff      	cmp	r3, #255	@ 0xff
 8024b2a:	b292      	uxth	r2, r2
 8024b2c:	d102      	bne.n	8024b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024b2e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8024b30:	29ff      	cmp	r1, #255	@ 0xff
 8024b32:	d063      	beq.n	8024bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8024b34:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8024b36:	f8be 1000 	ldrh.w	r1, [lr]
 8024b3a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8024b3c:	4343      	muls	r3, r0
 8024b3e:	1c58      	adds	r0, r3, #1
 8024b40:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8024b44:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8024b48:	1208      	asrs	r0, r1, #8
 8024b4a:	b2db      	uxtb	r3, r3
 8024b4c:	1215      	asrs	r5, r2, #8
 8024b4e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8024b52:	fb10 f003 	smulbb	r0, r0, r3
 8024b56:	10cf      	asrs	r7, r1, #3
 8024b58:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8024b5c:	00c9      	lsls	r1, r1, #3
 8024b5e:	fb05 0504 	mla	r5, r5, r4, r0
 8024b62:	b2c9      	uxtb	r1, r1
 8024b64:	10d0      	asrs	r0, r2, #3
 8024b66:	00d2      	lsls	r2, r2, #3
 8024b68:	fb11 f103 	smulbb	r1, r1, r3
 8024b6c:	b2d2      	uxtb	r2, r2
 8024b6e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8024b72:	fb02 1204 	mla	r2, r2, r4, r1
 8024b76:	fb17 f703 	smulbb	r7, r7, r3
 8024b7a:	b2ad      	uxth	r5, r5
 8024b7c:	b292      	uxth	r2, r2
 8024b7e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8024b82:	fb00 7004 	mla	r0, r0, r4, r7
 8024b86:	1c6b      	adds	r3, r5, #1
 8024b88:	1c57      	adds	r7, r2, #1
 8024b8a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024b8e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024b92:	b280      	uxth	r0, r0
 8024b94:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8024b98:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8024b9c:	433d      	orrs	r5, r7
 8024b9e:	1c47      	adds	r7, r0, #1
 8024ba0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8024ba4:	097f      	lsrs	r7, r7, #5
 8024ba6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8024baa:	433d      	orrs	r5, r7
 8024bac:	f8ae 5000 	strh.w	r5, [lr]
 8024bb0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8024bb2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8024bb4:	4413      	add	r3, r2
 8024bb6:	9321      	str	r3, [sp, #132]	@ 0x84
 8024bb8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8024bba:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024bbc:	441a      	add	r2, r3
 8024bbe:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8024bc0:	9222      	str	r2, [sp, #136]	@ 0x88
 8024bc2:	3b01      	subs	r3, #1
 8024bc4:	f10e 0e02 	add.w	lr, lr, #2
 8024bc8:	9313      	str	r3, [sp, #76]	@ 0x4c
 8024bca:	e61c      	b.n	8024806 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8024bcc:	fb08 f000 	mul.w	r0, r8, r0
 8024bd0:	fb09 0303 	mla	r3, r9, r3, r0
 8024bd4:	e6dc      	b.n	8024990 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8024bd6:	46b9      	mov	r9, r7
 8024bd8:	e704      	b.n	80249e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8024bda:	f1c2 0110 	rsb	r1, r2, #16
 8024bde:	437a      	muls	r2, r7
 8024be0:	fb09 2901 	mla	r9, r9, r1, r2
 8024be4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8024be8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8024bec:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8024bf0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024bf4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8024bf8:	4302      	orrs	r2, r0
 8024bfa:	e795      	b.n	8024b28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8024bfc:	f8ae 2000 	strh.w	r2, [lr]
 8024c00:	e7d6      	b.n	8024bb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8024c02:	b017      	add	sp, #92	@ 0x5c
 8024c04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024c08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8024c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024c0c:	b085      	sub	sp, #20
 8024c0e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8024c12:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8024c16:	9103      	str	r1, [sp, #12]
 8024c18:	fb00 7406 	mla	r4, r0, r6, r7
 8024c1c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8024c20:	2800      	cmp	r0, #0
 8024c22:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8024c26:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8024c2a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8024c2e:	9501      	str	r5, [sp, #4]
 8024c30:	eb02 0904 	add.w	r9, r2, r4
 8024c34:	f2c0 8141 	blt.w	8024eba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8024c38:	4583      	cmp	fp, r0
 8024c3a:	f340 813e 	ble.w	8024eba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8024c3e:	2f00      	cmp	r7, #0
 8024c40:	f2c0 8137 	blt.w	8024eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8024c44:	42be      	cmp	r6, r7
 8024c46:	f340 8134 	ble.w	8024eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8024c4a:	f812 c004 	ldrb.w	ip, [r2, r4]
 8024c4e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8024c52:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024c56:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8024c5a:	4355      	muls	r5, r2
 8024c5c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024c60:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8024c64:	fb0c f203 	mul.w	r2, ip, r3
 8024c68:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8024c6c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8024c70:	441d      	add	r5, r3
 8024c72:	f102 0320 	add.w	r3, r2, #32
 8024c76:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024c7a:	0a1b      	lsrs	r3, r3, #8
 8024c7c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8024c80:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024c84:	431c      	orrs	r4, r3
 8024c86:	1c7b      	adds	r3, r7, #1
 8024c88:	f100 811c 	bmi.w	8024ec4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8024c8c:	429e      	cmp	r6, r3
 8024c8e:	f340 8119 	ble.w	8024ec4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8024c92:	2900      	cmp	r1, #0
 8024c94:	f000 8119 	beq.w	8024eca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8024c98:	9a01      	ldr	r2, [sp, #4]
 8024c9a:	f899 3001 	ldrb.w	r3, [r9, #1]
 8024c9e:	8855      	ldrh	r5, [r2, #2]
 8024ca0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8024ca4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8024ca8:	fb08 f802 	mul.w	r8, r8, r2
 8024cac:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8024cb0:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8024cb4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8024cb8:	435d      	muls	r5, r3
 8024cba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8024cbe:	44d0      	add	r8, sl
 8024cc0:	f105 0a20 	add.w	sl, r5, #32
 8024cc4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8024cc8:	0a2d      	lsrs	r5, r5, #8
 8024cca:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8024cce:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8024cd2:	432a      	orrs	r2, r5
 8024cd4:	3001      	adds	r0, #1
 8024cd6:	f100 80fe 	bmi.w	8024ed6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8024cda:	4583      	cmp	fp, r0
 8024cdc:	f340 80fb 	ble.w	8024ed6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8024ce0:	f1be 0f00 	cmp.w	lr, #0
 8024ce4:	f000 80fc 	beq.w	8024ee0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8024ce8:	2f00      	cmp	r7, #0
 8024cea:	f2c0 80f1 	blt.w	8024ed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8024cee:	42be      	cmp	r6, r7
 8024cf0:	f340 80ee 	ble.w	8024ed0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8024cf4:	9801      	ldr	r0, [sp, #4]
 8024cf6:	f819 5006 	ldrb.w	r5, [r9, r6]
 8024cfa:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8024cfe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8024d02:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8024d06:	fb0a fa00 	mul.w	sl, sl, r0
 8024d0a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8024d0e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8024d12:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8024d16:	fb05 f808 	mul.w	r8, r5, r8
 8024d1a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8024d1e:	4482      	add	sl, r0
 8024d20:	f108 0020 	add.w	r0, r8, #32
 8024d24:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8024d28:	0a00      	lsrs	r0, r0, #8
 8024d2a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8024d2e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024d32:	ea4b 0b00 	orr.w	fp, fp, r0
 8024d36:	3701      	adds	r7, #1
 8024d38:	f100 80d7 	bmi.w	8024eea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8024d3c:	42be      	cmp	r6, r7
 8024d3e:	f340 80d4 	ble.w	8024eea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8024d42:	2900      	cmp	r1, #0
 8024d44:	f000 80d4 	beq.w	8024ef0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8024d48:	3601      	adds	r6, #1
 8024d4a:	9801      	ldr	r0, [sp, #4]
 8024d4c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8024d50:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8024d54:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8024d58:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8024d5c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024d60:	fb09 f906 	mul.w	r9, r9, r6
 8024d64:	fb07 f800 	mul.w	r8, r7, r0
 8024d68:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8024d6c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8024d70:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8024d74:	44d1      	add	r9, sl
 8024d76:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8024d7a:	f108 0020 	add.w	r0, r8, #32
 8024d7e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8024d82:	0a00      	lsrs	r0, r0, #8
 8024d84:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024d88:	4330      	orrs	r0, r6
 8024d8a:	b28e      	uxth	r6, r1
 8024d8c:	fa1f f98e 	uxth.w	r9, lr
 8024d90:	fb06 f809 	mul.w	r8, r6, r9
 8024d94:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8024d98:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8024d9c:	0136      	lsls	r6, r6, #4
 8024d9e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8024da2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8024da6:	9601      	str	r6, [sp, #4]
 8024da8:	ea4a 0404 	orr.w	r4, sl, r4
 8024dac:	fa1f f689 	uxth.w	r6, r9
 8024db0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024db4:	fb11 f90e 	smulbb	r9, r1, lr
 8024db8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8024dbc:	9602      	str	r6, [sp, #8]
 8024dbe:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8024dc2:	4626      	mov	r6, r4
 8024dc4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8024dc8:	f1ce 0410 	rsb	r4, lr, #16
 8024dcc:	1a64      	subs	r4, r4, r1
 8024dce:	ea4a 0202 	orr.w	r2, sl, r2
 8024dd2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8024dd6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8024dda:	434a      	muls	r2, r1
 8024ddc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8024de0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8024de4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8024de8:	fb04 2406 	mla	r4, r4, r6, r2
 8024dec:	ea4a 0000 	orr.w	r0, sl, r0
 8024df0:	fb09 4200 	mla	r2, r9, r0, r4
 8024df4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8024df8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8024dfc:	9801      	ldr	r0, [sp, #4]
 8024dfe:	9903      	ldr	r1, [sp, #12]
 8024e00:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8024e04:	ea44 0b0b 	orr.w	fp, r4, fp
 8024e08:	9c02      	ldr	r4, [sp, #8]
 8024e0a:	8809      	ldrh	r1, [r1, #0]
 8024e0c:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 8024e10:	1b00      	subs	r0, r0, r4
 8024e12:	9c01      	ldr	r4, [sp, #4]
 8024e14:	eba4 0608 	sub.w	r6, r4, r8
 8024e18:	b2b6      	uxth	r6, r6
 8024e1a:	b280      	uxth	r0, r0
 8024e1c:	4373      	muls	r3, r6
 8024e1e:	fb0c 3300 	mla	r3, ip, r0, r3
 8024e22:	9802      	ldr	r0, [sp, #8]
 8024e24:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8024e28:	fb00 3505 	mla	r5, r0, r5, r3
 8024e2c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8024e30:	fb08 5707 	mla	r7, r8, r7, r5
 8024e34:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8024e38:	120b      	asrs	r3, r1, #8
 8024e3a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024e3e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8024e42:	b2ff      	uxtb	r7, r7
 8024e44:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024e48:	10c8      	asrs	r0, r1, #3
 8024e4a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8024e4e:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8024e52:	00c9      	lsls	r1, r1, #3
 8024e54:	437b      	muls	r3, r7
 8024e56:	ea42 0e0e 	orr.w	lr, r2, lr
 8024e5a:	b2c9      	uxtb	r1, r1
 8024e5c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8024e60:	fa1f f28e 	uxth.w	r2, lr
 8024e64:	4378      	muls	r0, r7
 8024e66:	434f      	muls	r7, r1
 8024e68:	1c59      	adds	r1, r3, #1
 8024e6a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024e6e:	1213      	asrs	r3, r2, #8
 8024e70:	f023 0307 	bic.w	r3, r3, #7
 8024e74:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024e78:	1c41      	adds	r1, r0, #1
 8024e7a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024e7e:	10d1      	asrs	r1, r2, #3
 8024e80:	f021 0103 	bic.w	r1, r1, #3
 8024e84:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024e88:	021b      	lsls	r3, r3, #8
 8024e8a:	00c9      	lsls	r1, r1, #3
 8024e8c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024e90:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8024e94:	430b      	orrs	r3, r1
 8024e96:	1c79      	adds	r1, r7, #1
 8024e98:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8024e9c:	00d2      	lsls	r2, r2, #3
 8024e9e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8024ea2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024ea6:	431a      	orrs	r2, r3
 8024ea8:	9b03      	ldr	r3, [sp, #12]
 8024eaa:	801a      	strh	r2, [r3, #0]
 8024eac:	b005      	add	sp, #20
 8024eae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024eb2:	f04f 0c00 	mov.w	ip, #0
 8024eb6:	4664      	mov	r4, ip
 8024eb8:	e6e5      	b.n	8024c86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8024eba:	2300      	movs	r3, #0
 8024ebc:	469c      	mov	ip, r3
 8024ebe:	461a      	mov	r2, r3
 8024ec0:	461c      	mov	r4, r3
 8024ec2:	e707      	b.n	8024cd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8024ec4:	2300      	movs	r3, #0
 8024ec6:	461a      	mov	r2, r3
 8024ec8:	e704      	b.n	8024cd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8024eca:	460b      	mov	r3, r1
 8024ecc:	460a      	mov	r2, r1
 8024ece:	e701      	b.n	8024cd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8024ed0:	2500      	movs	r5, #0
 8024ed2:	46ab      	mov	fp, r5
 8024ed4:	e72f      	b.n	8024d36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8024ed6:	2700      	movs	r7, #0
 8024ed8:	463d      	mov	r5, r7
 8024eda:	4638      	mov	r0, r7
 8024edc:	46bb      	mov	fp, r7
 8024ede:	e754      	b.n	8024d8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8024ee0:	4677      	mov	r7, lr
 8024ee2:	4675      	mov	r5, lr
 8024ee4:	4670      	mov	r0, lr
 8024ee6:	46f3      	mov	fp, lr
 8024ee8:	e74f      	b.n	8024d8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8024eea:	2700      	movs	r7, #0
 8024eec:	4638      	mov	r0, r7
 8024eee:	e74c      	b.n	8024d8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8024ef0:	460f      	mov	r7, r1
 8024ef2:	4608      	mov	r0, r1
 8024ef4:	e749      	b.n	8024d8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08024ef8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024efc:	b093      	sub	sp, #76	@ 0x4c
 8024efe:	9210      	str	r2, [sp, #64]	@ 0x40
 8024f00:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8024f02:	910e      	str	r1, [sp, #56]	@ 0x38
 8024f04:	9306      	str	r3, [sp, #24]
 8024f06:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8024f0a:	9011      	str	r0, [sp, #68]	@ 0x44
 8024f0c:	6850      	ldr	r0, [r2, #4]
 8024f0e:	6812      	ldr	r2, [r2, #0]
 8024f10:	fb00 1303 	mla	r3, r0, r3, r1
 8024f14:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024f18:	9307      	str	r3, [sp, #28]
 8024f1a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024f1c:	681b      	ldr	r3, [r3, #0]
 8024f1e:	9308      	str	r3, [sp, #32]
 8024f20:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024f22:	685b      	ldr	r3, [r3, #4]
 8024f24:	9309      	str	r3, [sp, #36]	@ 0x24
 8024f26:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8024f28:	2b00      	cmp	r3, #0
 8024f2a:	dc03      	bgt.n	8024f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8024f2c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8024f2e:	2b00      	cmp	r3, #0
 8024f30:	f340 83b4 	ble.w	802569c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8024f34:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024f36:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024f3a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024f3e:	1e48      	subs	r0, r1, #1
 8024f40:	1e55      	subs	r5, r2, #1
 8024f42:	9b06      	ldr	r3, [sp, #24]
 8024f44:	2b00      	cmp	r3, #0
 8024f46:	f340 8163 	ble.w	8025210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8024f4a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8024f4c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8024f4e:	1436      	asrs	r6, r6, #16
 8024f50:	ea4f 4323 	mov.w	r3, r3, asr #16
 8024f54:	d406      	bmi.n	8024f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8024f56:	4286      	cmp	r6, r0
 8024f58:	da04      	bge.n	8024f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8024f5a:	2b00      	cmp	r3, #0
 8024f5c:	db02      	blt.n	8024f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8024f5e:	42ab      	cmp	r3, r5
 8024f60:	f2c0 8157 	blt.w	8025212 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8024f64:	3601      	adds	r6, #1
 8024f66:	f100 8144 	bmi.w	80251f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024f6a:	42b1      	cmp	r1, r6
 8024f6c:	f2c0 8141 	blt.w	80251f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024f70:	3301      	adds	r3, #1
 8024f72:	f100 813e 	bmi.w	80251f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024f76:	429a      	cmp	r2, r3
 8024f78:	f2c0 813b 	blt.w	80251f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024f7c:	9b06      	ldr	r3, [sp, #24]
 8024f7e:	9f07      	ldr	r7, [sp, #28]
 8024f80:	930f      	str	r3, [sp, #60]	@ 0x3c
 8024f82:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8024f86:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8024f88:	2b00      	cmp	r3, #0
 8024f8a:	f340 8164 	ble.w	8025256 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8024f8e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8024f90:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8024f92:	1418      	asrs	r0, r3, #16
 8024f94:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8024f96:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8024f9a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8024f9c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8024fa0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024fa2:	142d      	asrs	r5, r5, #16
 8024fa4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8024fa8:	f100 81ee 	bmi.w	8025388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024fac:	f102 3eff 	add.w	lr, r2, #4294967295
 8024fb0:	4575      	cmp	r5, lr
 8024fb2:	f280 81e9 	bge.w	8025388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024fb6:	2800      	cmp	r0, #0
 8024fb8:	f2c0 81e6 	blt.w	8025388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024fbc:	f103 3eff 	add.w	lr, r3, #4294967295
 8024fc0:	4570      	cmp	r0, lr
 8024fc2:	f280 81e1 	bge.w	8025388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024fc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024fc8:	b212      	sxth	r2, r2
 8024fca:	fb00 5002 	mla	r0, r0, r2, r5
 8024fce:	fa1f fe81 	uxth.w	lr, r1
 8024fd2:	eb03 0a00 	add.w	sl, r3, r0
 8024fd6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8024fda:	f813 9000 	ldrb.w	r9, [r3, r0]
 8024fde:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024fe2:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8024fe6:	b29b      	uxth	r3, r3
 8024fe8:	f1bc 0f00 	cmp.w	ip, #0
 8024fec:	f000 8179 	beq.w	80252e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8024ff0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8024ff4:	940a      	str	r4, [sp, #40]	@ 0x28
 8024ff6:	eb0a 0b02 	add.w	fp, sl, r2
 8024ffa:	fa1f fa8c 	uxth.w	sl, ip
 8024ffe:	fb0a fe0e 	mul.w	lr, sl, lr
 8025002:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025006:	fa1f fa8a 	uxth.w	sl, sl
 802500a:	eba5 050e 	sub.w	r5, r5, lr
 802500e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025012:	940b      	str	r4, [sp, #44]	@ 0x2c
 8025014:	eba3 030a 	sub.w	r3, r3, sl
 8025018:	b2ad      	uxth	r5, r5
 802501a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802501c:	b29b      	uxth	r3, r3
 802501e:	fb08 f505 	mul.w	r5, r8, r5
 8025022:	fb09 5303 	mla	r3, r9, r3, r5
 8025026:	fb0a 3304 	mla	r3, sl, r4, r3
 802502a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802502c:	fb0e 3304 	mla	r3, lr, r4, r3
 8025030:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025034:	2b00      	cmp	r3, #0
 8025036:	f000 80cf 	beq.w	80251d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802503a:	9c08      	ldr	r4, [sp, #32]
 802503c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8025040:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025044:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025048:	f000 8150 	beq.w	80252ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 802504c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8025050:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025054:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025058:	fb09 f000 	mul.w	r0, r9, r0
 802505c:	fb0a fe0e 	mul.w	lr, sl, lr
 8025060:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025064:	f100 0b20 	add.w	fp, r0, #32
 8025068:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 802506c:	44ce      	add	lr, r9
 802506e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8025072:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025076:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802507a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 802507e:	ea4e 0909 	orr.w	r9, lr, r9
 8025082:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8025086:	8868      	ldrh	r0, [r5, #2]
 8025088:	d019      	beq.n	80250be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802508a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 802508e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025092:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025096:	fb08 f800 	mul.w	r8, r8, r0
 802509a:	fb0a fe0e 	mul.w	lr, sl, lr
 802509e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80250a2:	f108 0b20 	add.w	fp, r8, #32
 80250a6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80250aa:	4486      	add	lr, r0
 80250ac:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80250b0:	0a00      	lsrs	r0, r0, #8
 80250b2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80250b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80250ba:	ea4e 0000 	orr.w	r0, lr, r0
 80250be:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80250c2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80250c6:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80250ca:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80250ce:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80250d2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80250d6:	ea4e 0909 	orr.w	r9, lr, r9
 80250da:	ea4a 0000 	orr.w	r0, sl, r0
 80250de:	f1bc 0f00 	cmp.w	ip, #0
 80250e2:	f000 8105 	beq.w	80252f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80250e6:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 80250ea:	3a01      	subs	r2, #1
 80250ec:	0052      	lsls	r2, r2, #1
 80250ee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80250f0:	3202      	adds	r2, #2
 80250f2:	2cff      	cmp	r4, #255	@ 0xff
 80250f4:	eb05 0e02 	add.w	lr, r5, r2
 80250f8:	5aaa      	ldrh	r2, [r5, r2]
 80250fa:	d018      	beq.n	802512e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80250fc:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8025100:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025104:	fb04 fa02 	mul.w	sl, r4, r2
 8025108:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802510c:	fb08 f805 	mul.w	r8, r8, r5
 8025110:	f10a 0520 	add.w	r5, sl, #32
 8025114:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025118:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802511c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8025120:	4442      	add	r2, r8
 8025122:	0a2d      	lsrs	r5, r5, #8
 8025124:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025128:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802512c:	432a      	orrs	r2, r5
 802512e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8025130:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025134:	2cff      	cmp	r4, #255	@ 0xff
 8025136:	d01a      	beq.n	802516e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8025138:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 802513c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8025140:	fb04 fa05 	mul.w	sl, r4, r5
 8025144:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025148:	fb08 f80e 	mul.w	r8, r8, lr
 802514c:	f10a 0e20 	add.w	lr, sl, #32
 8025150:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025154:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8025158:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802515c:	4445      	add	r5, r8
 802515e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025162:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8025166:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802516a:	ea45 050e 	orr.w	r5, r5, lr
 802516e:	fb1c fe01 	smulbb	lr, ip, r1
 8025172:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8025176:	f1cc 0810 	rsb	r8, ip, #16
 802517a:	eba8 0801 	sub.w	r8, r8, r1
 802517e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025182:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8025186:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802518a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802518e:	4341      	muls	r1, r0
 8025190:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8025194:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8025198:	ea4a 0202 	orr.w	r2, sl, r2
 802519c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80251a0:	fb09 1108 	mla	r1, r9, r8, r1
 80251a4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80251a8:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80251ac:	fb0c 1102 	mla	r1, ip, r2, r1
 80251b0:	ea4b 0505 	orr.w	r5, fp, r5
 80251b4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80251b8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80251bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80251c0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80251c4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80251c8:	ea42 0e0e 	orr.w	lr, r2, lr
 80251cc:	fa1f f28e 	uxth.w	r2, lr
 80251d0:	2bff      	cmp	r3, #255	@ 0xff
 80251d2:	f040 80a1 	bne.w	8025318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80251d6:	803a      	strh	r2, [r7, #0]
 80251d8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80251da:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80251dc:	4413      	add	r3, r2
 80251de:	931d      	str	r3, [sp, #116]	@ 0x74
 80251e0:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80251e2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80251e4:	441a      	add	r2, r3
 80251e6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80251e8:	921e      	str	r2, [sp, #120]	@ 0x78
 80251ea:	3b01      	subs	r3, #1
 80251ec:	3702      	adds	r7, #2
 80251ee:	930f      	str	r3, [sp, #60]	@ 0x3c
 80251f0:	e6c9      	b.n	8024f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80251f2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80251f4:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 80251f6:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 80251f8:	4433      	add	r3, r6
 80251fa:	931d      	str	r3, [sp, #116]	@ 0x74
 80251fc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80251fe:	441c      	add	r4, r3
 8025200:	9b06      	ldr	r3, [sp, #24]
 8025202:	941e      	str	r4, [sp, #120]	@ 0x78
 8025204:	3b01      	subs	r3, #1
 8025206:	9306      	str	r3, [sp, #24]
 8025208:	9b07      	ldr	r3, [sp, #28]
 802520a:	3302      	adds	r3, #2
 802520c:	9307      	str	r3, [sp, #28]
 802520e:	e698      	b.n	8024f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8025210:	d028      	beq.n	8025264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025212:	9b06      	ldr	r3, [sp, #24]
 8025214:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8025216:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8025218:	3b01      	subs	r3, #1
 802521a:	fb00 5003 	mla	r0, r0, r3, r5
 802521e:	1400      	asrs	r0, r0, #16
 8025220:	f53f aeac 	bmi.w	8024f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8025224:	3901      	subs	r1, #1
 8025226:	4288      	cmp	r0, r1
 8025228:	f6bf aea8 	bge.w	8024f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802522c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802522e:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8025230:	fb01 0303 	mla	r3, r1, r3, r0
 8025234:	141b      	asrs	r3, r3, #16
 8025236:	f53f aea1 	bmi.w	8024f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802523a:	3a01      	subs	r2, #1
 802523c:	4293      	cmp	r3, r2
 802523e:	f6bf ae9d 	bge.w	8024f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8025242:	9b06      	ldr	r3, [sp, #24]
 8025244:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8025248:	930f      	str	r3, [sp, #60]	@ 0x3c
 802524a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 802524e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8025250:	2b00      	cmp	r3, #0
 8025252:	f300 80b6 	bgt.w	80253c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8025256:	9b06      	ldr	r3, [sp, #24]
 8025258:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802525c:	9b07      	ldr	r3, [sp, #28]
 802525e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8025262:	9307      	str	r3, [sp, #28]
 8025264:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8025266:	2b00      	cmp	r3, #0
 8025268:	f340 8218 	ble.w	802569c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802526c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025270:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8025274:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025278:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802527a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802527e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025282:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025286:	eef0 6a62 	vmov.f32	s13, s5
 802528a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802528e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025292:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025296:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 802529a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802529e:	eef0 6a43 	vmov.f32	s13, s6
 80252a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80252a6:	ee12 2a90 	vmov	r2, s5
 80252aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80252ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80252b2:	ee13 2a10 	vmov	r2, s6
 80252b6:	931f      	str	r3, [sp, #124]	@ 0x7c
 80252b8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80252ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80252be:	9320      	str	r3, [sp, #128]	@ 0x80
 80252c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80252c2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80252c4:	3b01      	subs	r3, #1
 80252c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80252ca:	930e      	str	r3, [sp, #56]	@ 0x38
 80252cc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80252ce:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 80252d2:	bf08      	it	eq
 80252d4:	4613      	moveq	r3, r2
 80252d6:	9306      	str	r3, [sp, #24]
 80252d8:	eeb0 3a67 	vmov.f32	s6, s15
 80252dc:	eef0 2a47 	vmov.f32	s5, s14
 80252e0:	e621      	b.n	8024f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80252e2:	fb08 f505 	mul.w	r5, r8, r5
 80252e6:	fb09 5303 	mla	r3, r9, r3, r5
 80252ea:	e6a1      	b.n	8025030 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80252ec:	4681      	mov	r9, r0
 80252ee:	e6c8      	b.n	8025082 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80252f0:	f1c1 0210 	rsb	r2, r1, #16
 80252f4:	4341      	muls	r1, r0
 80252f6:	fb09 1902 	mla	r9, r9, r2, r1
 80252fa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80252fe:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8025302:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8025306:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802530a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 802530e:	ea42 0909 	orr.w	r9, r2, r9
 8025312:	fa1f f289 	uxth.w	r2, r9
 8025316:	e75b      	b.n	80251d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8025318:	f8b7 c000 	ldrh.w	ip, [r7]
 802531c:	43db      	mvns	r3, r3
 802531e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8025322:	fa5f fe83 	uxtb.w	lr, r3
 8025326:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802532a:	fb00 f00e 	mul.w	r0, r0, lr
 802532e:	1c41      	adds	r1, r0, #1
 8025330:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025334:	1211      	asrs	r1, r2, #8
 8025336:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802533a:	f021 0107 	bic.w	r1, r1, #7
 802533e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025342:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8025346:	48d7      	ldr	r0, [pc, #860]	@ (80256a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8025348:	fb05 f50e 	mul.w	r5, r5, lr
 802534c:	b2c9      	uxtb	r1, r1
 802534e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8025352:	1c69      	adds	r1, r5, #1
 8025354:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8025358:	10d1      	asrs	r1, r2, #3
 802535a:	f021 0103 	bic.w	r1, r1, #3
 802535e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8025362:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8025366:	b2db      	uxtb	r3, r3
 8025368:	00c9      	lsls	r1, r1, #3
 802536a:	fb03 f30e 	mul.w	r3, r3, lr
 802536e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025372:	4301      	orrs	r1, r0
 8025374:	1c58      	adds	r0, r3, #1
 8025376:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802537a:	00d2      	lsls	r2, r2, #3
 802537c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025380:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025384:	430a      	orrs	r2, r1
 8025386:	e726      	b.n	80251d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8025388:	f115 0e01 	adds.w	lr, r5, #1
 802538c:	f53f af24 	bmi.w	80251d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025390:	4572      	cmp	r2, lr
 8025392:	f6ff af21 	blt.w	80251d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025396:	f110 0e01 	adds.w	lr, r0, #1
 802539a:	f53f af1d 	bmi.w	80251d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802539e:	4573      	cmp	r3, lr
 80253a0:	f6ff af1a 	blt.w	80251d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80253a4:	b21b      	sxth	r3, r3
 80253a6:	b212      	sxth	r2, r2
 80253a8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80253ac:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80253b0:	9301      	str	r3, [sp, #4]
 80253b2:	9200      	str	r2, [sp, #0]
 80253b4:	4639      	mov	r1, r7
 80253b6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80253ba:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80253bc:	f7ff fc24 	bl	8024c08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80253c0:	e70a      	b.n	80251d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80253c2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80253c4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80253c8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80253ca:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80253ce:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80253d0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80253d4:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80253d6:	141f      	asrs	r7, r3, #16
 80253d8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80253da:	141b      	asrs	r3, r3, #16
 80253dc:	fb01 3707 	mla	r7, r1, r7, r3
 80253e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80253e2:	fa1f fc82 	uxth.w	ip, r2
 80253e6:	eb03 0a07 	add.w	sl, r3, r7
 80253ea:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80253ee:	f813 9007 	ldrb.w	r9, [r3, r7]
 80253f2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80253f6:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80253fa:	b29b      	uxth	r3, r3
 80253fc:	2d00      	cmp	r5, #0
 80253fe:	f000 80fe 	beq.w	80255fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8025402:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8025406:	940c      	str	r4, [sp, #48]	@ 0x30
 8025408:	eb0a 0b01 	add.w	fp, sl, r1
 802540c:	fa1f fa85 	uxth.w	sl, r5
 8025410:	fb0a fc0c 	mul.w	ip, sl, ip
 8025414:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8025418:	fa1f fa8a 	uxth.w	sl, sl
 802541c:	eba0 000c 	sub.w	r0, r0, ip
 8025420:	eba3 030a 	sub.w	r3, r3, sl
 8025424:	b280      	uxth	r0, r0
 8025426:	fb08 f000 	mul.w	r0, r8, r0
 802542a:	b29b      	uxth	r3, r3
 802542c:	fb09 0303 	mla	r3, r9, r3, r0
 8025430:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8025432:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025436:	940d      	str	r4, [sp, #52]	@ 0x34
 8025438:	fb0a 3300 	mla	r3, sl, r0, r3
 802543c:	fb0c 3304 	mla	r3, ip, r4, r3
 8025440:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025444:	2b00      	cmp	r3, #0
 8025446:	f000 80cc 	beq.w	80255e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802544a:	9808      	ldr	r0, [sp, #32]
 802544c:	9c08      	ldr	r4, [sp, #32]
 802544e:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8025452:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8025456:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802545a:	f000 80d5 	beq.w	8025608 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802545e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8025462:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025466:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802546a:	fb09 f707 	mul.w	r7, r9, r7
 802546e:	fb0a fc0c 	mul.w	ip, sl, ip
 8025472:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8025476:	f107 0b20 	add.w	fp, r7, #32
 802547a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 802547e:	44cc      	add	ip, r9
 8025480:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8025484:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025488:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802548c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8025490:	ea4c 0909 	orr.w	r9, ip, r9
 8025494:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8025498:	8847      	ldrh	r7, [r0, #2]
 802549a:	d019      	beq.n	80254d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 802549c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80254a0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80254a4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80254a8:	fb08 f807 	mul.w	r8, r8, r7
 80254ac:	fb0a fc0c 	mul.w	ip, sl, ip
 80254b0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80254b4:	f108 0b20 	add.w	fp, r8, #32
 80254b8:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80254bc:	44bc      	add	ip, r7
 80254be:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80254c2:	0a3f      	lsrs	r7, r7, #8
 80254c4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80254c8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80254cc:	ea4c 0707 	orr.w	r7, ip, r7
 80254d0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80254d4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80254d8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80254dc:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80254e0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80254e4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80254e8:	ea4c 0909 	orr.w	r9, ip, r9
 80254ec:	ea4a 0707 	orr.w	r7, sl, r7
 80254f0:	2d00      	cmp	r5, #0
 80254f2:	f000 808b 	beq.w	802560c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80254f6:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 80254fa:	3901      	subs	r1, #1
 80254fc:	0049      	lsls	r1, r1, #1
 80254fe:	3102      	adds	r1, #2
 8025500:	eb00 0c01 	add.w	ip, r0, r1
 8025504:	5a41      	ldrh	r1, [r0, r1]
 8025506:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8025508:	28ff      	cmp	r0, #255	@ 0xff
 802550a:	d019      	beq.n	8025540 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802550c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 802550e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8025512:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025516:	fb04 fa01 	mul.w	sl, r4, r1
 802551a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802551e:	fb08 f800 	mul.w	r8, r8, r0
 8025522:	f10a 0020 	add.w	r0, sl, #32
 8025526:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802552a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802552e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8025532:	4441      	add	r1, r8
 8025534:	0a00      	lsrs	r0, r0, #8
 8025536:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802553a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802553e:	4301      	orrs	r1, r0
 8025540:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8025542:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8025546:	2cff      	cmp	r4, #255	@ 0xff
 8025548:	d01a      	beq.n	8025580 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802554a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 802554e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025552:	fb04 fa00 	mul.w	sl, r4, r0
 8025556:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802555a:	fb08 f80c 	mul.w	r8, r8, ip
 802555e:	f10a 0c20 	add.w	ip, sl, #32
 8025562:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8025566:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802556a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802556e:	4440      	add	r0, r8
 8025570:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025574:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8025578:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802557c:	ea40 000c 	orr.w	r0, r0, ip
 8025580:	fb15 fc02 	smulbb	ip, r5, r2
 8025584:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8025588:	f1c5 0810 	rsb	r8, r5, #16
 802558c:	eba8 0802 	sub.w	r8, r8, r2
 8025590:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025594:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8025598:	437a      	muls	r2, r7
 802559a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802559e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80255a2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80255a6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80255aa:	fb09 2208 	mla	r2, r9, r8, r2
 80255ae:	ea4a 0101 	orr.w	r1, sl, r1
 80255b2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80255b6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80255ba:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80255be:	fb05 2201 	mla	r2, r5, r1, r2
 80255c2:	ea4b 0000 	orr.w	r0, fp, r0
 80255c6:	fb0c 2200 	mla	r2, ip, r0, r2
 80255ca:	0d57      	lsrs	r7, r2, #21
 80255cc:	0952      	lsrs	r2, r2, #5
 80255ce:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80255d2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80255d6:	433a      	orrs	r2, r7
 80255d8:	2bff      	cmp	r3, #255	@ 0xff
 80255da:	b292      	uxth	r2, r2
 80255dc:	d127      	bne.n	802562e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80255de:	f8ae 2000 	strh.w	r2, [lr]
 80255e2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80255e4:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80255e6:	4413      	add	r3, r2
 80255e8:	931d      	str	r3, [sp, #116]	@ 0x74
 80255ea:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80255ec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80255ee:	441a      	add	r2, r3
 80255f0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80255f2:	921e      	str	r2, [sp, #120]	@ 0x78
 80255f4:	3b01      	subs	r3, #1
 80255f6:	f10e 0e02 	add.w	lr, lr, #2
 80255fa:	930f      	str	r3, [sp, #60]	@ 0x3c
 80255fc:	e627      	b.n	802524e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80255fe:	fb08 f000 	mul.w	r0, r8, r0
 8025602:	fb09 0303 	mla	r3, r9, r3, r0
 8025606:	e71b      	b.n	8025440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8025608:	46b9      	mov	r9, r7
 802560a:	e743      	b.n	8025494 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802560c:	f1c2 0110 	rsb	r1, r2, #16
 8025610:	437a      	muls	r2, r7
 8025612:	fb09 2901 	mla	r9, r9, r1, r2
 8025616:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802561a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802561e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8025622:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025626:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802562a:	4302      	orrs	r2, r0
 802562c:	e7d4      	b.n	80255d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802562e:	f8be 7000 	ldrh.w	r7, [lr]
 8025632:	4c1c      	ldr	r4, [pc, #112]	@ (80256a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8025634:	43db      	mvns	r3, r3
 8025636:	1238      	asrs	r0, r7, #8
 8025638:	fa5f fc83 	uxtb.w	ip, r3
 802563c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8025640:	10fd      	asrs	r5, r7, #3
 8025642:	fb00 f00c 	mul.w	r0, r0, ip
 8025646:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802564a:	fb05 f10c 	mul.w	r1, r5, ip
 802564e:	1c45      	adds	r5, r0, #1
 8025650:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8025654:	1215      	asrs	r5, r2, #8
 8025656:	f025 0507 	bic.w	r5, r5, #7
 802565a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802565e:	1c4d      	adds	r5, r1, #1
 8025660:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8025664:	10d1      	asrs	r1, r2, #3
 8025666:	f021 0103 	bic.w	r1, r1, #3
 802566a:	00fb      	lsls	r3, r7, #3
 802566c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8025670:	b2db      	uxtb	r3, r3
 8025672:	b2c0      	uxtb	r0, r0
 8025674:	00c9      	lsls	r1, r1, #3
 8025676:	fb03 f30c 	mul.w	r3, r3, ip
 802567a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802567e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8025682:	4308      	orrs	r0, r1
 8025684:	1c59      	adds	r1, r3, #1
 8025686:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802568a:	00d2      	lsls	r2, r2, #3
 802568c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025690:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8025694:	4318      	orrs	r0, r3
 8025696:	f8ae 0000 	strh.w	r0, [lr]
 802569a:	e7a2      	b.n	80255e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802569c:	b013      	add	sp, #76	@ 0x4c
 802569e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80256a2:	bf00      	nop
 80256a4:	fffff800 	.word	0xfffff800

080256a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80256a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80256ac:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 80256b0:	fb05 4c03 	mla	ip, r5, r3, r4
 80256b4:	2d00      	cmp	r5, #0
 80256b6:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80256ba:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 80256be:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80256c2:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 80256c6:	8808      	ldrh	r0, [r1, #0]
 80256c8:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80256cc:	f2c0 80a7 	blt.w	802581e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80256d0:	45aa      	cmp	sl, r5
 80256d2:	f340 80a4 	ble.w	802581e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80256d6:	2c00      	cmp	r4, #0
 80256d8:	f2c0 809f 	blt.w	802581a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80256dc:	42a3      	cmp	r3, r4
 80256de:	f340 809c 	ble.w	802581a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80256e2:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80256e6:	1c62      	adds	r2, r4, #1
 80256e8:	f100 809c 	bmi.w	8025824 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80256ec:	4293      	cmp	r3, r2
 80256ee:	f340 8099 	ble.w	8025824 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80256f2:	f1b9 0f00 	cmp.w	r9, #0
 80256f6:	f000 8095 	beq.w	8025824 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80256fa:	f8be c002 	ldrh.w	ip, [lr, #2]
 80256fe:	3501      	adds	r5, #1
 8025700:	f100 8094 	bmi.w	802582c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8025704:	45aa      	cmp	sl, r5
 8025706:	f340 8091 	ble.w	802582c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802570a:	2f00      	cmp	r7, #0
 802570c:	f000 808e 	beq.w	802582c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8025710:	2c00      	cmp	r4, #0
 8025712:	f2c0 8089 	blt.w	8025828 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8025716:	42a3      	cmp	r3, r4
 8025718:	f340 8086 	ble.w	8025828 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802571c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8025720:	3401      	adds	r4, #1
 8025722:	f100 8086 	bmi.w	8025832 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8025726:	42a3      	cmp	r3, r4
 8025728:	f340 8083 	ble.w	8025832 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802572c:	f1b9 0f00 	cmp.w	r9, #0
 8025730:	d07f      	beq.n	8025832 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8025732:	3301      	adds	r3, #1
 8025734:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8025738:	ea4f 4408 	mov.w	r4, r8, lsl #16
 802573c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8025740:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8025744:	fb19 fe07 	smulbb	lr, r9, r7
 8025748:	ea44 0808 	orr.w	r8, r4, r8
 802574c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8025750:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8025754:	f1c7 0210 	rsb	r2, r7, #16
 8025758:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 802575c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8025760:	ea44 0c0c 	orr.w	ip, r4, ip
 8025764:	eba2 0209 	sub.w	r2, r2, r9
 8025768:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 802576c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8025770:	fb04 f40c 	mul.w	r4, r4, ip
 8025774:	fb02 4808 	mla	r8, r2, r8, r4
 8025778:	041a      	lsls	r2, r3, #16
 802577a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802577e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025782:	4313      	orrs	r3, r2
 8025784:	042a      	lsls	r2, r5, #16
 8025786:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802578a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 802578e:	fb0e 8303 	mla	r3, lr, r3, r8
 8025792:	432a      	orrs	r2, r5
 8025794:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8025798:	fb07 3202 	mla	r2, r7, r2, r3
 802579c:	0d53      	lsrs	r3, r2, #21
 802579e:	0952      	lsrs	r2, r2, #5
 80257a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80257a4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80257a8:	431a      	orrs	r2, r3
 80257aa:	b293      	uxth	r3, r2
 80257ac:	b2b4      	uxth	r4, r6
 80257ae:	1202      	asrs	r2, r0, #8
 80257b0:	43f6      	mvns	r6, r6
 80257b2:	b2f6      	uxtb	r6, r6
 80257b4:	121d      	asrs	r5, r3, #8
 80257b6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80257ba:	fb12 f206 	smulbb	r2, r2, r6
 80257be:	10c7      	asrs	r7, r0, #3
 80257c0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80257c4:	00c0      	lsls	r0, r0, #3
 80257c6:	fb05 2504 	mla	r5, r5, r4, r2
 80257ca:	b2c0      	uxtb	r0, r0
 80257cc:	10da      	asrs	r2, r3, #3
 80257ce:	00db      	lsls	r3, r3, #3
 80257d0:	b2db      	uxtb	r3, r3
 80257d2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80257d6:	fb10 f006 	smulbb	r0, r0, r6
 80257da:	b2ad      	uxth	r5, r5
 80257dc:	fb03 0004 	mla	r0, r3, r4, r0
 80257e0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80257e4:	fb17 f706 	smulbb	r7, r7, r6
 80257e8:	b280      	uxth	r0, r0
 80257ea:	1c6b      	adds	r3, r5, #1
 80257ec:	fb02 7204 	mla	r2, r2, r4, r7
 80257f0:	b292      	uxth	r2, r2
 80257f2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80257f6:	1c43      	adds	r3, r0, #1
 80257f8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80257fc:	1c50      	adds	r0, r2, #1
 80257fe:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8025802:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8025806:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802580a:	0952      	lsrs	r2, r2, #5
 802580c:	432b      	orrs	r3, r5
 802580e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025812:	4313      	orrs	r3, r2
 8025814:	800b      	strh	r3, [r1, #0]
 8025816:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802581a:	4680      	mov	r8, r0
 802581c:	e763      	b.n	80256e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 802581e:	4684      	mov	ip, r0
 8025820:	4680      	mov	r8, r0
 8025822:	e76c      	b.n	80256fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8025824:	4684      	mov	ip, r0
 8025826:	e76a      	b.n	80256fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8025828:	4605      	mov	r5, r0
 802582a:	e779      	b.n	8025720 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 802582c:	4603      	mov	r3, r0
 802582e:	4605      	mov	r5, r0
 8025830:	e782      	b.n	8025738 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8025832:	4603      	mov	r3, r0
 8025834:	e780      	b.n	8025738 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08025836 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025836:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802583a:	b093      	sub	sp, #76	@ 0x4c
 802583c:	461d      	mov	r5, r3
 802583e:	9210      	str	r2, [sp, #64]	@ 0x40
 8025840:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8025842:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 8025846:	920b      	str	r2, [sp, #44]	@ 0x2c
 8025848:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 802584c:	910a      	str	r1, [sp, #40]	@ 0x28
 802584e:	6859      	ldr	r1, [r3, #4]
 8025850:	681b      	ldr	r3, [r3, #0]
 8025852:	9011      	str	r0, [sp, #68]	@ 0x44
 8025854:	fb01 2707 	mla	r7, r1, r7, r2
 8025858:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 802585c:	9307      	str	r3, [sp, #28]
 802585e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025860:	681b      	ldr	r3, [r3, #0]
 8025862:	9309      	str	r3, [sp, #36]	@ 0x24
 8025864:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8025866:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802586a:	43db      	mvns	r3, r3
 802586c:	b2db      	uxtb	r3, r3
 802586e:	9308      	str	r3, [sp, #32]
 8025870:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025872:	2b00      	cmp	r3, #0
 8025874:	dc03      	bgt.n	802587e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025876:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8025878:	2b00      	cmp	r3, #0
 802587a:	f340 8203 	ble.w	8025c84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802587e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025880:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025884:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025888:	1e48      	subs	r0, r1, #1
 802588a:	f102 3cff 	add.w	ip, r2, #4294967295
 802588e:	2d00      	cmp	r5, #0
 8025890:	f340 80da 	ble.w	8025a48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8025894:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025898:	ea4f 4326 	mov.w	r3, r6, asr #16
 802589c:	d406      	bmi.n	80258ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802589e:	4586      	cmp	lr, r0
 80258a0:	da04      	bge.n	80258ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80258a2:	2b00      	cmp	r3, #0
 80258a4:	db02      	blt.n	80258ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80258a6:	4563      	cmp	r3, ip
 80258a8:	f2c0 80cf 	blt.w	8025a4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80258ac:	f11e 0e01 	adds.w	lr, lr, #1
 80258b0:	f100 80c1 	bmi.w	8025a36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80258b4:	4571      	cmp	r1, lr
 80258b6:	f2c0 80be 	blt.w	8025a36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80258ba:	3301      	adds	r3, #1
 80258bc:	f100 80bb 	bmi.w	8025a36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80258c0:	429a      	cmp	r2, r3
 80258c2:	f2c0 80b8 	blt.w	8025a36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80258c6:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80258ca:	46a9      	mov	r9, r5
 80258cc:	f1b9 0f00 	cmp.w	r9, #0
 80258d0:	f340 80d8 	ble.w	8025a84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80258d4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80258d6:	1421      	asrs	r1, r4, #16
 80258d8:	ea4f 4026 	mov.w	r0, r6, asr #16
 80258dc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80258e0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80258e4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80258e8:	f100 8111 	bmi.w	8025b0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80258ec:	f10e 3aff 	add.w	sl, lr, #4294967295
 80258f0:	4551      	cmp	r1, sl
 80258f2:	f280 810c 	bge.w	8025b0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80258f6:	2800      	cmp	r0, #0
 80258f8:	f2c0 8109 	blt.w	8025b0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80258fc:	f103 3aff 	add.w	sl, r3, #4294967295
 8025900:	4550      	cmp	r0, sl
 8025902:	f280 8104 	bge.w	8025b0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8025906:	fa0f f38e 	sxth.w	r3, lr
 802590a:	fb00 1103 	mla	r1, r0, r3, r1
 802590e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8025910:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8025914:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8025918:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 802591c:	f1bc 0f00 	cmp.w	ip, #0
 8025920:	d007      	beq.n	8025932 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8025922:	005b      	lsls	r3, r3, #1
 8025924:	eb0a 0003 	add.w	r0, sl, r3
 8025928:	f83a 3003 	ldrh.w	r3, [sl, r3]
 802592c:	930c      	str	r3, [sp, #48]	@ 0x30
 802592e:	8843      	ldrh	r3, [r0, #2]
 8025930:	930d      	str	r3, [sp, #52]	@ 0x34
 8025932:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8025936:	fb12 f30c 	smulbb	r3, r2, ip
 802593a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802593e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025942:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8025946:	10db      	asrs	r3, r3, #3
 8025948:	ea40 000e 	orr.w	r0, r0, lr
 802594c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8025950:	f1cc 0e10 	rsb	lr, ip, #16
 8025954:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8025958:	ebae 0e02 	sub.w	lr, lr, r2
 802595c:	ea4a 0101 	orr.w	r1, sl, r1
 8025960:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025964:	4351      	muls	r1, r2
 8025966:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8025968:	9f08      	ldr	r7, [sp, #32]
 802596a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802596e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8025972:	0410      	lsls	r0, r2, #16
 8025974:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8025978:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802597c:	4310      	orrs	r0, r2
 802597e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8025980:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8025982:	0412      	lsls	r2, r2, #16
 8025984:	fb03 e000 	mla	r0, r3, r0, lr
 8025988:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802598c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8025990:	ea42 020e 	orr.w	r2, r2, lr
 8025994:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8025998:	fb03 0302 	mla	r3, r3, r2, r0
 802599c:	0d5a      	lsrs	r2, r3, #21
 802599e:	095b      	lsrs	r3, r3, #5
 80259a0:	f8b8 0000 	ldrh.w	r0, [r8]
 80259a4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80259a8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80259ac:	4313      	orrs	r3, r2
 80259ae:	b29b      	uxth	r3, r3
 80259b0:	1201      	asrs	r1, r0, #8
 80259b2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80259b6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80259ba:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80259be:	fb11 f107 	smulbb	r1, r1, r7
 80259c2:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80259c6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80259ca:	00c0      	lsls	r0, r0, #3
 80259cc:	fb0c 1c02 	mla	ip, ip, r2, r1
 80259d0:	b2c0      	uxtb	r0, r0
 80259d2:	10d9      	asrs	r1, r3, #3
 80259d4:	00db      	lsls	r3, r3, #3
 80259d6:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80259da:	b2db      	uxtb	r3, r3
 80259dc:	fb10 f007 	smulbb	r0, r0, r7
 80259e0:	fa1f fc8c 	uxth.w	ip, ip
 80259e4:	fb03 0302 	mla	r3, r3, r2, r0
 80259e8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80259ec:	fb1e fe07 	smulbb	lr, lr, r7
 80259f0:	fb01 e102 	mla	r1, r1, r2, lr
 80259f4:	b29a      	uxth	r2, r3
 80259f6:	f10c 0301 	add.w	r3, ip, #1
 80259fa:	b289      	uxth	r1, r1
 80259fc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8025a00:	1c53      	adds	r3, r2, #1
 8025a02:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025a06:	1c4a      	adds	r2, r1, #1
 8025a08:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025a0c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8025a10:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025a14:	0949      	lsrs	r1, r1, #5
 8025a16:	ea43 030c 	orr.w	r3, r3, ip
 8025a1a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8025a1e:	430b      	orrs	r3, r1
 8025a20:	f8a8 3000 	strh.w	r3, [r8]
 8025a24:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8025a26:	441c      	add	r4, r3
 8025a28:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025a2a:	f108 0802 	add.w	r8, r8, #2
 8025a2e:	441e      	add	r6, r3
 8025a30:	f109 39ff 	add.w	r9, r9, #4294967295
 8025a34:	e74a      	b.n	80258cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8025a36:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8025a38:	441c      	add	r4, r3
 8025a3a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025a3c:	441e      	add	r6, r3
 8025a3e:	9b07      	ldr	r3, [sp, #28]
 8025a40:	3302      	adds	r3, #2
 8025a42:	3d01      	subs	r5, #1
 8025a44:	9307      	str	r3, [sp, #28]
 8025a46:	e722      	b.n	802588e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025a48:	d022      	beq.n	8025a90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8025a4a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8025a4c:	1e6b      	subs	r3, r5, #1
 8025a4e:	fb00 4003 	mla	r0, r0, r3, r4
 8025a52:	1400      	asrs	r0, r0, #16
 8025a54:	f53f af37 	bmi.w	80258c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025a58:	3901      	subs	r1, #1
 8025a5a:	4288      	cmp	r0, r1
 8025a5c:	f6bf af33 	bge.w	80258c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025a60:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8025a62:	fb01 6303 	mla	r3, r1, r3, r6
 8025a66:	141b      	asrs	r3, r3, #16
 8025a68:	f53f af2d 	bmi.w	80258c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025a6c:	3a01      	subs	r2, #1
 8025a6e:	4293      	cmp	r3, r2
 8025a70:	f6bf af29 	bge.w	80258c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025a74:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8025a78:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8025a7c:	46a8      	mov	r8, r5
 8025a7e:	f1b8 0f00 	cmp.w	r8, #0
 8025a82:	dc5e      	bgt.n	8025b42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8025a84:	9b07      	ldr	r3, [sp, #28]
 8025a86:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025a8a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025a8e:	9307      	str	r3, [sp, #28]
 8025a90:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025a92:	2b00      	cmp	r3, #0
 8025a94:	f340 80f6 	ble.w	8025c84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025a98:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025a9c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8025aa0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025aa4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025aa6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025aaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025aae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025ab2:	eef0 6a62 	vmov.f32	s13, s5
 8025ab6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025aba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025abe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025ac2:	ee16 4a90 	vmov	r4, s13
 8025ac6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025aca:	eef0 6a43 	vmov.f32	s13, s6
 8025ace:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025ad2:	ee12 2a90 	vmov	r2, s5
 8025ad6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025ada:	fb92 f3f3 	sdiv	r3, r2, r3
 8025ade:	ee13 2a10 	vmov	r2, s6
 8025ae2:	931f      	str	r3, [sp, #124]	@ 0x7c
 8025ae4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025ae6:	fb92 f3f3 	sdiv	r3, r2, r3
 8025aea:	9320      	str	r3, [sp, #128]	@ 0x80
 8025aec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8025aee:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8025af0:	3b01      	subs	r3, #1
 8025af2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025af6:	930a      	str	r3, [sp, #40]	@ 0x28
 8025af8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025afa:	ee16 6a90 	vmov	r6, s13
 8025afe:	bf14      	ite	ne
 8025b00:	461d      	movne	r5, r3
 8025b02:	4615      	moveq	r5, r2
 8025b04:	eeb0 3a67 	vmov.f32	s6, s15
 8025b08:	eef0 2a47 	vmov.f32	s5, s14
 8025b0c:	e6b0      	b.n	8025870 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025b0e:	f111 0a01 	adds.w	sl, r1, #1
 8025b12:	d487      	bmi.n	8025a24 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025b14:	45d6      	cmp	lr, sl
 8025b16:	db85      	blt.n	8025a24 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025b18:	f110 0a01 	adds.w	sl, r0, #1
 8025b1c:	d482      	bmi.n	8025a24 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025b1e:	4553      	cmp	r3, sl
 8025b20:	db80      	blt.n	8025a24 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025b22:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8025b24:	9101      	str	r1, [sp, #4]
 8025b26:	b21b      	sxth	r3, r3
 8025b28:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8025b2c:	9300      	str	r3, [sp, #0]
 8025b2e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8025b32:	fa0f f38e 	sxth.w	r3, lr
 8025b36:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025b38:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8025b3a:	4641      	mov	r1, r8
 8025b3c:	f7ff fdb4 	bl	80256a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8025b40:	e770      	b.n	8025a24 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8025b42:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025b44:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8025b46:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025b4a:	1430      	asrs	r0, r6, #16
 8025b4c:	1423      	asrs	r3, r4, #16
 8025b4e:	fb01 3000 	mla	r0, r1, r0, r3
 8025b52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025b54:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8025b58:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8025b5c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8025b60:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025b64:	8858      	ldrh	r0, [r3, #2]
 8025b66:	f1be 0f00 	cmp.w	lr, #0
 8025b6a:	d00b      	beq.n	8025b84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8025b6c:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8025b70:	3901      	subs	r1, #1
 8025b72:	0049      	lsls	r1, r1, #1
 8025b74:	3102      	adds	r1, #2
 8025b76:	eb03 0b01 	add.w	fp, r3, r1
 8025b7a:	5a5b      	ldrh	r3, [r3, r1]
 8025b7c:	930e      	str	r3, [sp, #56]	@ 0x38
 8025b7e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8025b82:	930f      	str	r3, [sp, #60]	@ 0x3c
 8025b84:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8025b88:	fb12 f30e 	smulbb	r3, r2, lr
 8025b8c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8025b90:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025b94:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 8025b98:	10db      	asrs	r3, r3, #3
 8025b9a:	ea41 010c 	orr.w	r1, r1, ip
 8025b9e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8025ba2:	f1ce 0c10 	rsb	ip, lr, #16
 8025ba6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8025baa:	ebac 0c02 	sub.w	ip, ip, r2
 8025bae:	ea4b 0000 	orr.w	r0, fp, r0
 8025bb2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025bb6:	4350      	muls	r0, r2
 8025bb8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8025bba:	9f08      	ldr	r7, [sp, #32]
 8025bbc:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8025bc0:	fb0c 0c01 	mla	ip, ip, r1, r0
 8025bc4:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8025bc8:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 8025bcc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8025bce:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8025bd0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8025bd4:	0412      	lsls	r2, r2, #16
 8025bd6:	ea4b 0101 	orr.w	r1, fp, r1
 8025bda:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8025bde:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8025be2:	fb03 c101 	mla	r1, r3, r1, ip
 8025be6:	4302      	orrs	r2, r0
 8025be8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8025bec:	fb03 1202 	mla	r2, r3, r2, r1
 8025bf0:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8025bf4:	0952      	lsrs	r2, r2, #5
 8025bf6:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 8025bfa:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8025bfe:	f8b9 2000 	ldrh.w	r2, [r9]
 8025c02:	ea4b 0303 	orr.w	r3, fp, r3
 8025c06:	b29b      	uxth	r3, r3
 8025c08:	1211      	asrs	r1, r2, #8
 8025c0a:	1218      	asrs	r0, r3, #8
 8025c0c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025c10:	fb11 f107 	smulbb	r1, r1, r7
 8025c14:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8025c18:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8025c1c:	00d2      	lsls	r2, r2, #3
 8025c1e:	fb00 100a 	mla	r0, r0, sl, r1
 8025c22:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8025c26:	10d9      	asrs	r1, r3, #3
 8025c28:	b2d2      	uxtb	r2, r2
 8025c2a:	00db      	lsls	r3, r3, #3
 8025c2c:	fb1c fc07 	smulbb	ip, ip, r7
 8025c30:	fb12 f207 	smulbb	r2, r2, r7
 8025c34:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8025c38:	b2db      	uxtb	r3, r3
 8025c3a:	b280      	uxth	r0, r0
 8025c3c:	fb01 c10a 	mla	r1, r1, sl, ip
 8025c40:	fb03 230a 	mla	r3, r3, sl, r2
 8025c44:	b29b      	uxth	r3, r3
 8025c46:	b289      	uxth	r1, r1
 8025c48:	1c42      	adds	r2, r0, #1
 8025c4a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025c4e:	f101 0c01 	add.w	ip, r1, #1
 8025c52:	1c5a      	adds	r2, r3, #1
 8025c54:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025c58:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8025c5c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8025c5e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8025c62:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8025c66:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025c6a:	4310      	orrs	r0, r2
 8025c6c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8025c70:	441c      	add	r4, r3
 8025c72:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025c74:	ea40 000c 	orr.w	r0, r0, ip
 8025c78:	f829 0b02 	strh.w	r0, [r9], #2
 8025c7c:	441e      	add	r6, r3
 8025c7e:	f108 38ff 	add.w	r8, r8, #4294967295
 8025c82:	e6fc      	b.n	8025a7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8025c84:	b013      	add	sp, #76	@ 0x4c
 8025c86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025c8a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8025c8a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8025c8e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8025c92:	fb0e 4703 	mla	r7, lr, r3, r4
 8025c96:	f1be 0f00 	cmp.w	lr, #0
 8025c9a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8025c9e:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8025ca2:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 8025ca6:	8808      	ldrh	r0, [r1, #0]
 8025ca8:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8025cac:	db60      	blt.n	8025d70 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8025cae:	45f1      	cmp	r9, lr
 8025cb0:	dd5e      	ble.n	8025d70 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8025cb2:	2c00      	cmp	r4, #0
 8025cb4:	db5a      	blt.n	8025d6c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8025cb6:	42a3      	cmp	r3, r4
 8025cb8:	dd58      	ble.n	8025d6c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8025cba:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8025cbe:	1c62      	adds	r2, r4, #1
 8025cc0:	d459      	bmi.n	8025d76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8025cc2:	4293      	cmp	r3, r2
 8025cc4:	dd57      	ble.n	8025d76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8025cc6:	2d00      	cmp	r5, #0
 8025cc8:	d055      	beq.n	8025d76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8025cca:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8025cce:	f11e 0e01 	adds.w	lr, lr, #1
 8025cd2:	d454      	bmi.n	8025d7e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8025cd4:	45f1      	cmp	r9, lr
 8025cd6:	dd52      	ble.n	8025d7e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8025cd8:	2e00      	cmp	r6, #0
 8025cda:	d050      	beq.n	8025d7e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8025cdc:	2c00      	cmp	r4, #0
 8025cde:	db4c      	blt.n	8025d7a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8025ce0:	42a3      	cmp	r3, r4
 8025ce2:	dd4a      	ble.n	8025d7a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8025ce4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8025ce8:	3401      	adds	r4, #1
 8025cea:	d405      	bmi.n	8025cf8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025cec:	42a3      	cmp	r3, r4
 8025cee:	dd03      	ble.n	8025cf8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025cf0:	b115      	cbz	r5, 8025cf8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025cf2:	3301      	adds	r3, #1
 8025cf4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8025cf8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8025cfc:	fb15 f406 	smulbb	r4, r5, r6
 8025d00:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025d04:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8025d08:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8025d0c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8025d10:	ea43 0c0c 	orr.w	ip, r3, ip
 8025d14:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8025d18:	f1c6 0310 	rsb	r3, r6, #16
 8025d1c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8025d20:	1b5b      	subs	r3, r3, r5
 8025d22:	ea4e 0707 	orr.w	r7, lr, r7
 8025d26:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8025d2a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025d2e:	437d      	muls	r5, r7
 8025d30:	fb03 5c0c 	mla	ip, r3, ip, r5
 8025d34:	0403      	lsls	r3, r0, #16
 8025d36:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025d3a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8025d3e:	4318      	orrs	r0, r3
 8025d40:	0413      	lsls	r3, r2, #16
 8025d42:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8025d46:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8025d4a:	4313      	orrs	r3, r2
 8025d4c:	fb04 c000 	mla	r0, r4, r0, ip
 8025d50:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8025d54:	fb06 0003 	mla	r0, r6, r3, r0
 8025d58:	0d43      	lsrs	r3, r0, #21
 8025d5a:	0940      	lsrs	r0, r0, #5
 8025d5c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025d60:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8025d64:	4318      	orrs	r0, r3
 8025d66:	8008      	strh	r0, [r1, #0]
 8025d68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8025d6c:	4684      	mov	ip, r0
 8025d6e:	e7a6      	b.n	8025cbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8025d70:	4607      	mov	r7, r0
 8025d72:	4684      	mov	ip, r0
 8025d74:	e7ab      	b.n	8025cce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8025d76:	4607      	mov	r7, r0
 8025d78:	e7a9      	b.n	8025cce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8025d7a:	4602      	mov	r2, r0
 8025d7c:	e7b4      	b.n	8025ce8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8025d7e:	4602      	mov	r2, r0
 8025d80:	e7ba      	b.n	8025cf8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08025d82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025d82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025d86:	b08f      	sub	sp, #60	@ 0x3c
 8025d88:	461d      	mov	r5, r3
 8025d8a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8025d8c:	920c      	str	r2, [sp, #48]	@ 0x30
 8025d8e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8025d92:	9107      	str	r1, [sp, #28]
 8025d94:	6859      	ldr	r1, [r3, #4]
 8025d96:	681b      	ldr	r3, [r3, #0]
 8025d98:	900d      	str	r0, [sp, #52]	@ 0x34
 8025d9a:	fb01 2707 	mla	r7, r1, r7, r2
 8025d9e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8025da2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025da4:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 8025da8:	f8d3 8000 	ldr.w	r8, [r3]
 8025dac:	9b07      	ldr	r3, [sp, #28]
 8025dae:	2b00      	cmp	r3, #0
 8025db0:	dc03      	bgt.n	8025dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8025db2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8025db4:	2b00      	cmp	r3, #0
 8025db6:	f340 8181 	ble.w	80260bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8025dba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025dbc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025dc0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025dc4:	1e48      	subs	r0, r1, #1
 8025dc6:	f102 3cff 	add.w	ip, r2, #4294967295
 8025dca:	2d00      	cmp	r5, #0
 8025dcc:	f340 809b 	ble.w	8025f06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8025dd0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025dd4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025dd8:	d406      	bmi.n	8025de8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8025dda:	4586      	cmp	lr, r0
 8025ddc:	da04      	bge.n	8025de8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8025dde:	2b00      	cmp	r3, #0
 8025de0:	db02      	blt.n	8025de8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8025de2:	4563      	cmp	r3, ip
 8025de4:	f2c0 8090 	blt.w	8025f08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8025de8:	f11e 0e01 	adds.w	lr, lr, #1
 8025dec:	f100 8084 	bmi.w	8025ef8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025df0:	4571      	cmp	r1, lr
 8025df2:	f2c0 8081 	blt.w	8025ef8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025df6:	3301      	adds	r3, #1
 8025df8:	d47e      	bmi.n	8025ef8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025dfa:	429a      	cmp	r2, r3
 8025dfc:	db7c      	blt.n	8025ef8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025dfe:	46aa      	mov	sl, r5
 8025e00:	46b9      	mov	r9, r7
 8025e02:	f1ba 0f00 	cmp.w	sl, #0
 8025e06:	f340 8099 	ble.w	8025f3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8025e0a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025e0c:	1421      	asrs	r1, r4, #16
 8025e0e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025e12:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025e16:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8025e1a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8025e1e:	f100 80d0 	bmi.w	8025fc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025e22:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025e26:	4559      	cmp	r1, fp
 8025e28:	f280 80cb 	bge.w	8025fc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025e2c:	2800      	cmp	r0, #0
 8025e2e:	f2c0 80c8 	blt.w	8025fc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025e32:	f103 3bff 	add.w	fp, r3, #4294967295
 8025e36:	4558      	cmp	r0, fp
 8025e38:	f280 80c3 	bge.w	8025fc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025e3c:	fa0f fe8e 	sxth.w	lr, lr
 8025e40:	fb00 110e 	mla	r1, r0, lr, r1
 8025e44:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8025e48:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8025e4c:	8841      	ldrh	r1, [r0, #2]
 8025e4e:	f1bc 0f00 	cmp.w	ip, #0
 8025e52:	d00b      	beq.n	8025e6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8025e54:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 8025e58:	3b01      	subs	r3, #1
 8025e5a:	005b      	lsls	r3, r3, #1
 8025e5c:	3302      	adds	r3, #2
 8025e5e:	eb00 0e03 	add.w	lr, r0, r3
 8025e62:	5ac3      	ldrh	r3, [r0, r3]
 8025e64:	9308      	str	r3, [sp, #32]
 8025e66:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8025e6a:	9309      	str	r3, [sp, #36]	@ 0x24
 8025e6c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8025e70:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8025e74:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8025e78:	ea40 000b 	orr.w	r0, r0, fp
 8025e7c:	fb12 f30c 	smulbb	r3, r2, ip
 8025e80:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025e84:	10db      	asrs	r3, r3, #3
 8025e86:	f1cc 0e10 	rsb	lr, ip, #16
 8025e8a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8025e8e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8025e92:	ebae 0e02 	sub.w	lr, lr, r2
 8025e96:	ea4b 0101 	orr.w	r1, fp, r1
 8025e9a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025e9e:	4351      	muls	r1, r2
 8025ea0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025ea2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8025ea6:	fb0e 1e00 	mla	lr, lr, r0, r1
 8025eaa:	0410      	lsls	r0, r2, #16
 8025eac:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8025eb0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8025eb4:	4310      	orrs	r0, r2
 8025eb6:	9a08      	ldr	r2, [sp, #32]
 8025eb8:	9908      	ldr	r1, [sp, #32]
 8025eba:	0412      	lsls	r2, r2, #16
 8025ebc:	fb03 e000 	mla	r0, r3, r0, lr
 8025ec0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8025ec4:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8025ec8:	ea42 020e 	orr.w	r2, r2, lr
 8025ecc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8025ed0:	fb03 0302 	mla	r3, r3, r2, r0
 8025ed4:	0d5a      	lsrs	r2, r3, #21
 8025ed6:	095b      	lsrs	r3, r3, #5
 8025ed8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025edc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8025ee0:	4313      	orrs	r3, r2
 8025ee2:	f8a9 3000 	strh.w	r3, [r9]
 8025ee6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8025ee8:	441c      	add	r4, r3
 8025eea:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025eec:	f109 0902 	add.w	r9, r9, #2
 8025ef0:	441e      	add	r6, r3
 8025ef2:	f10a 3aff 	add.w	sl, sl, #4294967295
 8025ef6:	e784      	b.n	8025e02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8025ef8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8025efa:	441c      	add	r4, r3
 8025efc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025efe:	3d01      	subs	r5, #1
 8025f00:	441e      	add	r6, r3
 8025f02:	3702      	adds	r7, #2
 8025f04:	e761      	b.n	8025dca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025f06:	d01d      	beq.n	8025f44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8025f08:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8025f0a:	1e6b      	subs	r3, r5, #1
 8025f0c:	fb00 4003 	mla	r0, r0, r3, r4
 8025f10:	1400      	asrs	r0, r0, #16
 8025f12:	f53f af74 	bmi.w	8025dfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025f16:	3901      	subs	r1, #1
 8025f18:	4288      	cmp	r0, r1
 8025f1a:	f6bf af70 	bge.w	8025dfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025f1e:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8025f20:	fb01 6303 	mla	r3, r1, r3, r6
 8025f24:	141b      	asrs	r3, r3, #16
 8025f26:	f53f af6a 	bmi.w	8025dfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025f2a:	3a01      	subs	r2, #1
 8025f2c:	4293      	cmp	r3, r2
 8025f2e:	f6bf af66 	bge.w	8025dfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025f32:	46a9      	mov	r9, r5
 8025f34:	46ba      	mov	sl, r7
 8025f36:	f1b9 0f00 	cmp.w	r9, #0
 8025f3a:	dc5a      	bgt.n	8025ff2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8025f3c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025f40:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8025f44:	9b07      	ldr	r3, [sp, #28]
 8025f46:	2b00      	cmp	r3, #0
 8025f48:	f340 80b8 	ble.w	80260bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8025f4c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025f50:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8025f54:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025f58:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8025f5a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025f5e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025f62:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025f66:	eef0 6a62 	vmov.f32	s13, s5
 8025f6a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025f6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025f72:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025f76:	ee16 4a90 	vmov	r4, s13
 8025f7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025f7e:	eef0 6a43 	vmov.f32	s13, s6
 8025f82:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025f86:	ee12 2a90 	vmov	r2, s5
 8025f8a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025f8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025f92:	ee13 2a10 	vmov	r2, s6
 8025f96:	931b      	str	r3, [sp, #108]	@ 0x6c
 8025f98:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8025f9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8025f9e:	931c      	str	r3, [sp, #112]	@ 0x70
 8025fa0:	9b07      	ldr	r3, [sp, #28]
 8025fa2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8025fa4:	3b01      	subs	r3, #1
 8025fa6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025faa:	9307      	str	r3, [sp, #28]
 8025fac:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8025fae:	ee16 6a90 	vmov	r6, s13
 8025fb2:	bf14      	ite	ne
 8025fb4:	461d      	movne	r5, r3
 8025fb6:	4615      	moveq	r5, r2
 8025fb8:	eeb0 3a67 	vmov.f32	s6, s15
 8025fbc:	eef0 2a47 	vmov.f32	s5, s14
 8025fc0:	e6f4      	b.n	8025dac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8025fc2:	f111 0b01 	adds.w	fp, r1, #1
 8025fc6:	d48e      	bmi.n	8025ee6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025fc8:	45de      	cmp	lr, fp
 8025fca:	db8c      	blt.n	8025ee6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025fcc:	f110 0b01 	adds.w	fp, r0, #1
 8025fd0:	d489      	bmi.n	8025ee6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025fd2:	455b      	cmp	r3, fp
 8025fd4:	db87      	blt.n	8025ee6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025fd6:	b21b      	sxth	r3, r3
 8025fd8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8025fdc:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8025fe0:	9300      	str	r3, [sp, #0]
 8025fe2:	4642      	mov	r2, r8
 8025fe4:	fa0f f38e 	sxth.w	r3, lr
 8025fe8:	4649      	mov	r1, r9
 8025fea:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8025fec:	f7ff fe4d 	bl	8025c8a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8025ff0:	e779      	b.n	8025ee6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025ff2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025ff4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8025ff8:	1420      	asrs	r0, r4, #16
 8025ffa:	1431      	asrs	r1, r6, #16
 8025ffc:	fb03 0101 	mla	r1, r3, r1, r0
 8026000:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026004:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026008:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802600c:	8841      	ldrh	r1, [r0, #2]
 802600e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026012:	f1be 0f00 	cmp.w	lr, #0
 8026016:	d00b      	beq.n	8026030 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026018:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 802601c:	3b01      	subs	r3, #1
 802601e:	005b      	lsls	r3, r3, #1
 8026020:	3302      	adds	r3, #2
 8026022:	eb00 0b03 	add.w	fp, r0, r3
 8026026:	5ac3      	ldrh	r3, [r0, r3]
 8026028:	930a      	str	r3, [sp, #40]	@ 0x28
 802602a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802602e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026030:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8026034:	fb12 f30e 	smulbb	r3, r2, lr
 8026038:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 802603c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026040:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8026044:	10db      	asrs	r3, r3, #3
 8026046:	ea40 000c 	orr.w	r0, r0, ip
 802604a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802604e:	f1ce 0c10 	rsb	ip, lr, #16
 8026052:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8026056:	ebac 0c02 	sub.w	ip, ip, r2
 802605a:	ea4b 0101 	orr.w	r1, fp, r1
 802605e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026062:	4351      	muls	r1, r2
 8026064:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8026066:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802606a:	fb0c 1c00 	mla	ip, ip, r0, r1
 802606e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026072:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 8026076:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8026078:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802607a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802607e:	0412      	lsls	r2, r2, #16
 8026080:	ea4b 0000 	orr.w	r0, fp, r0
 8026084:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8026088:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 802608c:	fb03 c000 	mla	r0, r3, r0, ip
 8026090:	ea42 0b0b 	orr.w	fp, r2, fp
 8026094:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026098:	fb03 000b 	mla	r0, r3, fp, r0
 802609c:	0d43      	lsrs	r3, r0, #21
 802609e:	0940      	lsrs	r0, r0, #5
 80260a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80260a4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80260a8:	4318      	orrs	r0, r3
 80260aa:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80260ac:	f82a 0b02 	strh.w	r0, [sl], #2
 80260b0:	441c      	add	r4, r3
 80260b2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80260b4:	f109 39ff 	add.w	r9, r9, #4294967295
 80260b8:	441e      	add	r6, r3
 80260ba:	e73c      	b.n	8025f36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80260bc:	b00f      	add	sp, #60	@ 0x3c
 80260be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080260c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80260c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80260c6:	b085      	sub	sp, #20
 80260c8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 80260cc:	9102      	str	r1, [sp, #8]
 80260ce:	2c00      	cmp	r4, #0
 80260d0:	fb04 7103 	mla	r1, r4, r3, r7
 80260d4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 80260d8:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80260dc:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 80260e0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80260e4:	f2c0 811b 	blt.w	802631e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80260e8:	45a6      	cmp	lr, r4
 80260ea:	f340 8118 	ble.w	802631e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80260ee:	2f00      	cmp	r7, #0
 80260f0:	f2c0 8113 	blt.w	802631a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80260f4:	42bb      	cmp	r3, r7
 80260f6:	f340 8110 	ble.w	802631a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80260fa:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80260fe:	1c7a      	adds	r2, r7, #1
 8026100:	f100 8110 	bmi.w	8026324 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8026104:	4293      	cmp	r3, r2
 8026106:	f340 810d 	ble.w	8026324 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802610a:	2e00      	cmp	r6, #0
 802610c:	f000 810c 	beq.w	8026328 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8026110:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8026114:	3401      	adds	r4, #1
 8026116:	f100 810b 	bmi.w	8026330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802611a:	45a6      	cmp	lr, r4
 802611c:	f340 8108 	ble.w	8026330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8026120:	2800      	cmp	r0, #0
 8026122:	f000 8108 	beq.w	8026336 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8026126:	2f00      	cmp	r7, #0
 8026128:	f2c0 8100 	blt.w	802632c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802612c:	42bb      	cmp	r3, r7
 802612e:	f340 80fd 	ble.w	802632c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8026132:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8026136:	3701      	adds	r7, #1
 8026138:	f100 8100 	bmi.w	802633c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802613c:	42bb      	cmp	r3, r7
 802613e:	f340 80fd 	ble.w	802633c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8026142:	2e00      	cmp	r6, #0
 8026144:	f000 80fc 	beq.w	8026340 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8026148:	3301      	adds	r3, #1
 802614a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802614e:	b2b6      	uxth	r6, r6
 8026150:	b280      	uxth	r0, r0
 8026152:	fb00 fe06 	mul.w	lr, r0, r6
 8026156:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802615a:	0136      	lsls	r6, r6, #4
 802615c:	eba6 070e 	sub.w	r7, r6, lr
 8026160:	b280      	uxth	r0, r0
 8026162:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8026166:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802616a:	b2bf      	uxth	r7, r7
 802616c:	1a1b      	subs	r3, r3, r0
 802616e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8026172:	b29b      	uxth	r3, r3
 8026174:	fb0a f607 	mul.w	r6, sl, r7
 8026178:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802617c:	fb0b 6603 	mla	r6, fp, r3, r6
 8026180:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8026184:	fb00 6609 	mla	r6, r0, r9, r6
 8026188:	fb0e 6608 	mla	r6, lr, r8, r6
 802618c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8026190:	9600      	str	r6, [sp, #0]
 8026192:	2e00      	cmp	r6, #0
 8026194:	f000 80be 	beq.w	8026314 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8026198:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802619c:	fb0b fc0c 	mul.w	ip, fp, ip
 80261a0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80261a4:	fb0b f505 	mul.w	r5, fp, r5
 80261a8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80261ac:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80261b0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80261b4:	44dc      	add	ip, fp
 80261b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80261ba:	9501      	str	r5, [sp, #4]
 80261bc:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 80261c0:	9503      	str	r5, [sp, #12]
 80261c2:	9d01      	ldr	r5, [sp, #4]
 80261c4:	9e02      	ldr	r6, [sp, #8]
 80261c6:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 80261ca:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80261ce:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80261d2:	fb0a fc0c 	mul.w	ip, sl, ip
 80261d6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80261da:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80261de:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80261e2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80261e6:	4465      	add	r5, ip
 80261e8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80261ec:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80261f0:	fb09 fc0c 	mul.w	ip, r9, ip
 80261f4:	fb09 f904 	mul.w	r9, r9, r4
 80261f8:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 80261fc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8026200:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8026204:	fb08 f404 	mul.w	r4, r8, r4
 8026208:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802620c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8026210:	fb08 f802 	mul.w	r8, r8, r2
 8026214:	fb0a fa01 	mul.w	sl, sl, r1
 8026218:	0a22      	lsrs	r2, r4, #8
 802621a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 802621e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8026222:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8026226:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802622a:	4414      	add	r4, r2
 802622c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8026230:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8026234:	0a2d      	lsrs	r5, r5, #8
 8026236:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802623a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802623e:	9a03      	ldr	r2, [sp, #12]
 8026240:	8836      	ldrh	r6, [r6, #0]
 8026242:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8026246:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802624a:	437d      	muls	r5, r7
 802624c:	4461      	add	r1, ip
 802624e:	0a24      	lsrs	r4, r4, #8
 8026250:	fb02 5503 	mla	r5, r2, r3, r5
 8026254:	0a09      	lsrs	r1, r1, #8
 8026256:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802625a:	fb04 540e 	mla	r4, r4, lr, r5
 802625e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8026262:	fb01 4100 	mla	r1, r1, r0, r4
 8026266:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802626a:	0a09      	lsrs	r1, r1, #8
 802626c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026270:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8026274:	fb07 f70a 	mul.w	r7, r7, sl
 8026278:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802627c:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8026280:	fb03 7101 	mla	r1, r3, r1, r7
 8026284:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026288:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802628c:	fb0e 1e08 	mla	lr, lr, r8, r1
 8026290:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8026294:	fb00 e101 	mla	r1, r0, r1, lr
 8026298:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 802629c:	9a00      	ldr	r2, [sp, #0]
 802629e:	b287      	uxth	r7, r0
 80262a0:	437a      	muls	r2, r7
 80262a2:	0a09      	lsrs	r1, r1, #8
 80262a4:	1c53      	adds	r3, r2, #1
 80262a6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80262aa:	4321      	orrs	r1, r4
 80262ac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80262b0:	1235      	asrs	r5, r6, #8
 80262b2:	0c0a      	lsrs	r2, r1, #16
 80262b4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80262b8:	b2db      	uxtb	r3, r3
 80262ba:	fb12 f207 	smulbb	r2, r2, r7
 80262be:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80262c2:	fb05 2503 	mla	r5, r5, r3, r2
 80262c6:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80262ca:	10f2      	asrs	r2, r6, #3
 80262cc:	b2c8      	uxtb	r0, r1
 80262ce:	00f6      	lsls	r6, r6, #3
 80262d0:	fb14 f407 	smulbb	r4, r4, r7
 80262d4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80262d8:	b2f6      	uxtb	r6, r6
 80262da:	fb10 f007 	smulbb	r0, r0, r7
 80262de:	fb02 4203 	mla	r2, r2, r3, r4
 80262e2:	b2ad      	uxth	r5, r5
 80262e4:	fb06 0303 	mla	r3, r6, r3, r0
 80262e8:	b299      	uxth	r1, r3
 80262ea:	b294      	uxth	r4, r2
 80262ec:	1c6b      	adds	r3, r5, #1
 80262ee:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80262f2:	1c62      	adds	r2, r4, #1
 80262f4:	1c4b      	adds	r3, r1, #1
 80262f6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80262fa:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80262fe:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8026302:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026306:	0952      	lsrs	r2, r2, #5
 8026308:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802630c:	432b      	orrs	r3, r5
 802630e:	4313      	orrs	r3, r2
 8026310:	9a02      	ldr	r2, [sp, #8]
 8026312:	8013      	strh	r3, [r2, #0]
 8026314:	b005      	add	sp, #20
 8026316:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802631a:	2500      	movs	r5, #0
 802631c:	e6ef      	b.n	80260fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802631e:	2100      	movs	r1, #0
 8026320:	460d      	mov	r5, r1
 8026322:	e6f7      	b.n	8026114 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8026324:	2100      	movs	r1, #0
 8026326:	e6f5      	b.n	8026114 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8026328:	4631      	mov	r1, r6
 802632a:	e6f3      	b.n	8026114 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802632c:	2400      	movs	r4, #0
 802632e:	e702      	b.n	8026136 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8026330:	2200      	movs	r2, #0
 8026332:	4614      	mov	r4, r2
 8026334:	e70b      	b.n	802614e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8026336:	4602      	mov	r2, r0
 8026338:	4604      	mov	r4, r0
 802633a:	e708      	b.n	802614e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802633c:	2200      	movs	r2, #0
 802633e:	e706      	b.n	802614e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8026340:	4632      	mov	r2, r6
 8026342:	e704      	b.n	802614e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08026344 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026348:	b09d      	sub	sp, #116	@ 0x74
 802634a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 802634e:	9219      	str	r2, [sp, #100]	@ 0x64
 8026350:	9307      	str	r3, [sp, #28]
 8026352:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 8026354:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 8026358:	931a      	str	r3, [sp, #104]	@ 0x68
 802635a:	9117      	str	r1, [sp, #92]	@ 0x5c
 802635c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 8026360:	901b      	str	r0, [sp, #108]	@ 0x6c
 8026362:	6850      	ldr	r0, [r2, #4]
 8026364:	6812      	ldr	r2, [r2, #0]
 8026366:	fb00 1303 	mla	r3, r0, r3, r1
 802636a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802636e:	930a      	str	r3, [sp, #40]	@ 0x28
 8026370:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8026372:	681b      	ldr	r3, [r3, #0]
 8026374:	9310      	str	r3, [sp, #64]	@ 0x40
 8026376:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 802637a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802637c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802637e:	2b00      	cmp	r3, #0
 8026380:	dc03      	bgt.n	802638a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8026382:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8026384:	2b00      	cmp	r3, #0
 8026386:	f340 8375 	ble.w	8026a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802638a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802638c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026390:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026394:	1e48      	subs	r0, r1, #1
 8026396:	1e57      	subs	r7, r2, #1
 8026398:	9b07      	ldr	r3, [sp, #28]
 802639a:	2b00      	cmp	r3, #0
 802639c:	f340 818e 	ble.w	80266bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80263a0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80263a4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80263a8:	d406      	bmi.n	80263b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80263aa:	4584      	cmp	ip, r0
 80263ac:	da04      	bge.n	80263b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80263ae:	2b00      	cmp	r3, #0
 80263b0:	db02      	blt.n	80263b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80263b2:	42bb      	cmp	r3, r7
 80263b4:	f2c0 8183 	blt.w	80266be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80263b8:	f11c 0c01 	adds.w	ip, ip, #1
 80263bc:	f100 8173 	bmi.w	80266a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80263c0:	4561      	cmp	r1, ip
 80263c2:	f2c0 8170 	blt.w	80266a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80263c6:	3301      	adds	r3, #1
 80263c8:	f100 816d 	bmi.w	80266a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80263cc:	429a      	cmp	r2, r3
 80263ce:	f2c0 816a 	blt.w	80266a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80263d2:	9b07      	ldr	r3, [sp, #28]
 80263d4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80263d6:	9318      	str	r3, [sp, #96]	@ 0x60
 80263d8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80263da:	2b00      	cmp	r3, #0
 80263dc:	f340 818c 	ble.w	80266f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80263e0:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 80263e2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80263e4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80263e8:	689b      	ldr	r3, [r3, #8]
 80263ea:	1422      	asrs	r2, r4, #16
 80263ec:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80263f0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80263f4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80263f8:	f100 81cd 	bmi.w	8026796 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80263fc:	f103 38ff 	add.w	r8, r3, #4294967295
 8026400:	4542      	cmp	r2, r8
 8026402:	f280 81c8 	bge.w	8026796 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8026406:	f1bc 0f00 	cmp.w	ip, #0
 802640a:	f2c0 81c4 	blt.w	8026796 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802640e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8026412:	45c4      	cmp	ip, r8
 8026414:	f280 81bf 	bge.w	8026796 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8026418:	b21b      	sxth	r3, r3
 802641a:	fb0c 2203 	mla	r2, ip, r3, r2
 802641e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8026420:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8026424:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8026428:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802642c:	2800      	cmp	r0, #0
 802642e:	f000 81a9 	beq.w	8026784 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8026432:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8026436:	950c      	str	r5, [sp, #48]	@ 0x30
 8026438:	0e2d      	lsrs	r5, r5, #24
 802643a:	9513      	str	r5, [sp, #76]	@ 0x4c
 802643c:	b181      	cbz	r1, 8026460 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802643e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8026442:	3b01      	subs	r3, #1
 8026444:	009b      	lsls	r3, r3, #2
 8026446:	3304      	adds	r3, #4
 8026448:	eb08 0c03 	add.w	ip, r8, r3
 802644c:	f858 3003 	ldr.w	r3, [r8, r3]
 8026450:	9308      	str	r3, [sp, #32]
 8026452:	0e1b      	lsrs	r3, r3, #24
 8026454:	9311      	str	r3, [sp, #68]	@ 0x44
 8026456:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802645a:	930d      	str	r3, [sp, #52]	@ 0x34
 802645c:	0e1b      	lsrs	r3, r3, #24
 802645e:	9314      	str	r3, [sp, #80]	@ 0x50
 8026460:	b280      	uxth	r0, r0
 8026462:	b289      	uxth	r1, r1
 8026464:	fb00 f901 	mul.w	r9, r0, r1
 8026468:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802646c:	0100      	lsls	r0, r0, #4
 802646e:	eba0 0809 	sub.w	r8, r0, r9
 8026472:	b289      	uxth	r1, r1
 8026474:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8026478:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802647a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802647c:	fa1f f888 	uxth.w	r8, r8
 8026480:	1a5b      	subs	r3, r3, r1
 8026482:	b29b      	uxth	r3, r3
 8026484:	fb08 f000 	mul.w	r0, r8, r0
 8026488:	fb03 000e 	mla	r0, r3, lr, r0
 802648c:	fb01 0005 	mla	r0, r1, r5, r0
 8026490:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8026492:	fb09 0005 	mla	r0, r9, r5, r0
 8026496:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802649a:	2800      	cmp	r0, #0
 802649c:	f000 80fa 	beq.w	8026694 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80264a0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80264a4:	d01b      	beq.n	80264de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80264a6:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 80264aa:	fb0e fa0a 	mul.w	sl, lr, sl
 80264ae:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80264b2:	fb0e fe02 	mul.w	lr, lr, r2
 80264b6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80264ba:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80264be:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80264c2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80264c6:	4452      	add	r2, sl
 80264c8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80264cc:	0a12      	lsrs	r2, r2, #8
 80264ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80264d2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80264d6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80264da:	ea42 020c 	orr.w	r2, r2, ip
 80264de:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80264e0:	2dff      	cmp	r5, #255	@ 0xff
 80264e2:	d021      	beq.n	8026528 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80264e4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80264e6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80264ea:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80264ec:	fb05 fb0b 	mul.w	fp, r5, fp
 80264f0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80264f2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80264f6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80264f8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80264fc:	fb05 fa0a 	mul.w	sl, r5, sl
 8026500:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026504:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8026508:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802650c:	44de      	add	lr, fp
 802650e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026512:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026516:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802651a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802651e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026522:	ea4e 050a 	orr.w	r5, lr, sl
 8026526:	950c      	str	r5, [sp, #48]	@ 0x30
 8026528:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802652a:	2dff      	cmp	r5, #255	@ 0xff
 802652c:	d021      	beq.n	8026572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802652e:	9d08      	ldr	r5, [sp, #32]
 8026530:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8026534:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026536:	fb05 fb0b 	mul.w	fp, r5, fp
 802653a:	9d08      	ldr	r5, [sp, #32]
 802653c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8026540:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8026542:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026546:	fb05 fa0a 	mul.w	sl, r5, sl
 802654a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802654e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8026552:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8026556:	44de      	add	lr, fp
 8026558:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802655c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026560:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026564:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026568:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802656c:	ea4e 050a 	orr.w	r5, lr, sl
 8026570:	9508      	str	r5, [sp, #32]
 8026572:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8026574:	2dff      	cmp	r5, #255	@ 0xff
 8026576:	d021      	beq.n	80265bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8026578:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802657a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802657e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8026580:	fb05 fb0b 	mul.w	fp, r5, fp
 8026584:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8026586:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802658a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802658c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026590:	fb05 fa0a 	mul.w	sl, r5, sl
 8026594:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026598:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802659c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80265a0:	44de      	add	lr, fp
 80265a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80265a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80265aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80265ae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80265b2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80265b6:	ea4e 050a 	orr.w	r5, lr, sl
 80265ba:	950d      	str	r5, [sp, #52]	@ 0x34
 80265bc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80265be:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80265c2:	9d08      	ldr	r5, [sp, #32]
 80265c4:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 80265c8:	fb08 fc0c 	mul.w	ip, r8, ip
 80265cc:	fb03 cc0e 	mla	ip, r3, lr, ip
 80265d0:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80265d4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80265d6:	fb01 cc0e 	mla	ip, r1, lr, ip
 80265da:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80265de:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80265e0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80265e4:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 80265e8:	fb08 f80e 	mul.w	r8, r8, lr
 80265ec:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80265f0:	fb03 8202 	mla	r2, r3, r2, r8
 80265f4:	9b08      	ldr	r3, [sp, #32]
 80265f6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80265f8:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 80265fc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80265fe:	fb01 220a 	mla	r2, r1, sl, r2
 8026602:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 8026606:	fb09 2901 	mla	r9, r9, r1, r2
 802660a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802660c:	883b      	ldrh	r3, [r7, #0]
 802660e:	4342      	muls	r2, r0
 8026610:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026614:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026618:	1c50      	adds	r0, r2, #1
 802661a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802661e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8026622:	ea4c 0c09 	orr.w	ip, ip, r9
 8026626:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802662a:	1219      	asrs	r1, r3, #8
 802662c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8026630:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8026634:	b2c0      	uxtb	r0, r0
 8026636:	fb12 f205 	smulbb	r2, r2, r5
 802663a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802663e:	fb01 2100 	mla	r1, r1, r0, r2
 8026642:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8026646:	10da      	asrs	r2, r3, #3
 8026648:	fa5f fc8c 	uxtb.w	ip, ip
 802664c:	00db      	lsls	r3, r3, #3
 802664e:	fb1c fc05 	smulbb	ip, ip, r5
 8026652:	b2db      	uxtb	r3, r3
 8026654:	b289      	uxth	r1, r1
 8026656:	fb03 c300 	mla	r3, r3, r0, ip
 802665a:	fa1f fc83 	uxth.w	ip, r3
 802665e:	1c4b      	adds	r3, r1, #1
 8026660:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026664:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8026668:	fb1e fe05 	smulbb	lr, lr, r5
 802666c:	f10c 0301 	add.w	r3, ip, #1
 8026670:	fb02 e200 	mla	r2, r2, r0, lr
 8026674:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8026678:	b292      	uxth	r2, r2
 802667a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802667e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026682:	430b      	orrs	r3, r1
 8026684:	1c51      	adds	r1, r2, #1
 8026686:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802668a:	0952      	lsrs	r2, r2, #5
 802668c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026690:	4313      	orrs	r3, r2
 8026692:	803b      	strh	r3, [r7, #0]
 8026694:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8026696:	441c      	add	r4, r3
 8026698:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802669a:	441e      	add	r6, r3
 802669c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802669e:	3b01      	subs	r3, #1
 80266a0:	3702      	adds	r7, #2
 80266a2:	9318      	str	r3, [sp, #96]	@ 0x60
 80266a4:	e698      	b.n	80263d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80266a6:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80266a8:	441c      	add	r4, r3
 80266aa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80266ac:	441e      	add	r6, r3
 80266ae:	9b07      	ldr	r3, [sp, #28]
 80266b0:	3b01      	subs	r3, #1
 80266b2:	9307      	str	r3, [sp, #28]
 80266b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80266b6:	3302      	adds	r3, #2
 80266b8:	930a      	str	r3, [sp, #40]	@ 0x28
 80266ba:	e66d      	b.n	8026398 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80266bc:	d023      	beq.n	8026706 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80266be:	9b07      	ldr	r3, [sp, #28]
 80266c0:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 80266c2:	3b01      	subs	r3, #1
 80266c4:	fb00 4003 	mla	r0, r0, r3, r4
 80266c8:	1400      	asrs	r0, r0, #16
 80266ca:	f53f ae82 	bmi.w	80263d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80266ce:	3901      	subs	r1, #1
 80266d0:	4288      	cmp	r0, r1
 80266d2:	f6bf ae7e 	bge.w	80263d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80266d6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80266d8:	fb01 6303 	mla	r3, r1, r3, r6
 80266dc:	141b      	asrs	r3, r3, #16
 80266de:	f53f ae78 	bmi.w	80263d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80266e2:	3a01      	subs	r2, #1
 80266e4:	4293      	cmp	r3, r2
 80266e6:	f6bf ae74 	bge.w	80263d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80266ea:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80266ee:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 80266f2:	f1bb 0f00 	cmp.w	fp, #0
 80266f6:	dc6c      	bgt.n	80267d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80266f8:	9b07      	ldr	r3, [sp, #28]
 80266fa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80266fe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026700:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026704:	930a      	str	r3, [sp, #40]	@ 0x28
 8026706:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8026708:	2b00      	cmp	r3, #0
 802670a:	f340 81b3 	ble.w	8026a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802670e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026712:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8026716:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802671a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802671c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026720:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026724:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026728:	eef0 6a62 	vmov.f32	s13, s5
 802672c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026730:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026734:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026738:	ee16 4a90 	vmov	r4, s13
 802673c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026740:	eef0 6a43 	vmov.f32	s13, s6
 8026744:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026748:	ee12 2a90 	vmov	r2, s5
 802674c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026750:	fb92 f3f3 	sdiv	r3, r2, r3
 8026754:	ee13 2a10 	vmov	r2, s6
 8026758:	9329      	str	r3, [sp, #164]	@ 0xa4
 802675a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802675c:	fb92 f3f3 	sdiv	r3, r2, r3
 8026760:	932a      	str	r3, [sp, #168]	@ 0xa8
 8026762:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8026764:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8026766:	3b01      	subs	r3, #1
 8026768:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802676c:	9317      	str	r3, [sp, #92]	@ 0x5c
 802676e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8026770:	bf08      	it	eq
 8026772:	4613      	moveq	r3, r2
 8026774:	ee16 6a90 	vmov	r6, s13
 8026778:	9307      	str	r3, [sp, #28]
 802677a:	eeb0 3a67 	vmov.f32	s6, s15
 802677e:	eef0 2a47 	vmov.f32	s5, s14
 8026782:	e5fb      	b.n	802637c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8026784:	2900      	cmp	r1, #0
 8026786:	f43f ae6b 	beq.w	8026460 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802678a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802678e:	9308      	str	r3, [sp, #32]
 8026790:	0e1b      	lsrs	r3, r3, #24
 8026792:	9311      	str	r3, [sp, #68]	@ 0x44
 8026794:	e664      	b.n	8026460 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8026796:	f112 0801 	adds.w	r8, r2, #1
 802679a:	f53f af7b 	bmi.w	8026694 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802679e:	4543      	cmp	r3, r8
 80267a0:	f6ff af78 	blt.w	8026694 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80267a4:	f11c 0801 	adds.w	r8, ip, #1
 80267a8:	f53f af74 	bmi.w	8026694 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80267ac:	45c6      	cmp	lr, r8
 80267ae:	f6ff af71 	blt.w	8026694 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80267b2:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 80267b4:	9201      	str	r2, [sp, #4]
 80267b6:	fa0f f28e 	sxth.w	r2, lr
 80267ba:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80267be:	e9cd c002 	strd	ip, r0, [sp, #8]
 80267c2:	9200      	str	r2, [sp, #0]
 80267c4:	b21b      	sxth	r3, r3
 80267c6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80267c8:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80267ca:	4639      	mov	r1, r7
 80267cc:	f7ff fc79 	bl	80260c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80267d0:	e760      	b.n	8026694 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80267d2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80267d4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80267d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80267da:	1427      	asrs	r7, r4, #16
 80267dc:	1433      	asrs	r3, r6, #16
 80267de:	fb01 7303 	mla	r3, r1, r3, r7
 80267e2:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80267e6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80267ea:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80267ee:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80267f2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80267f6:	2a00      	cmp	r2, #0
 80267f8:	f000 8133 	beq.w	8026a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80267fc:	687d      	ldr	r5, [r7, #4]
 80267fe:	950e      	str	r5, [sp, #56]	@ 0x38
 8026800:	0e2d      	lsrs	r5, r5, #24
 8026802:	9515      	str	r5, [sp, #84]	@ 0x54
 8026804:	b178      	cbz	r0, 8026826 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8026806:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 802680a:	3901      	subs	r1, #1
 802680c:	0089      	lsls	r1, r1, #2
 802680e:	3104      	adds	r1, #4
 8026810:	eb07 0e01 	add.w	lr, r7, r1
 8026814:	5879      	ldr	r1, [r7, r1]
 8026816:	9109      	str	r1, [sp, #36]	@ 0x24
 8026818:	0e09      	lsrs	r1, r1, #24
 802681a:	9112      	str	r1, [sp, #72]	@ 0x48
 802681c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8026820:	910f      	str	r1, [sp, #60]	@ 0x3c
 8026822:	0e09      	lsrs	r1, r1, #24
 8026824:	9116      	str	r1, [sp, #88]	@ 0x58
 8026826:	b292      	uxth	r2, r2
 8026828:	b280      	uxth	r0, r0
 802682a:	fb02 f800 	mul.w	r8, r2, r0
 802682e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8026832:	0112      	lsls	r2, r2, #4
 8026834:	eba2 0e08 	sub.w	lr, r2, r8
 8026838:	b280      	uxth	r0, r0
 802683a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802683e:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8026840:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8026842:	fa1f fe8e 	uxth.w	lr, lr
 8026846:	1a12      	subs	r2, r2, r0
 8026848:	b292      	uxth	r2, r2
 802684a:	fb0e f101 	mul.w	r1, lr, r1
 802684e:	fb02 110c 	mla	r1, r2, ip, r1
 8026852:	fb00 1105 	mla	r1, r0, r5, r1
 8026856:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8026858:	fb08 1105 	mla	r1, r8, r5, r1
 802685c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8026860:	2900      	cmp	r1, #0
 8026862:	f000 80f5 	beq.w	8026a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8026866:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802686a:	d019      	beq.n	80268a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 802686c:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8026870:	fb0c fa0a 	mul.w	sl, ip, sl
 8026874:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8026878:	fb0c fc03 	mul.w	ip, ip, r3
 802687c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8026880:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8026884:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8026888:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802688c:	4453      	add	r3, sl
 802688e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8026892:	0a1b      	lsrs	r3, r3, #8
 8026894:	0a3f      	lsrs	r7, r7, #8
 8026896:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802689a:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802689e:	433b      	orrs	r3, r7
 80268a0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80268a2:	2dff      	cmp	r5, #255	@ 0xff
 80268a4:	d020      	beq.n	80268e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80268a6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80268a8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80268ac:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80268ae:	436f      	muls	r7, r5
 80268b0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80268b2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80268b6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80268b8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80268bc:	fb05 fa0a 	mul.w	sl, r5, sl
 80268c0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80268c4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80268c8:	44bc      	add	ip, r7
 80268ca:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80268ce:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80268d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80268d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80268da:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80268de:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80268e2:	ea4c 050a 	orr.w	r5, ip, sl
 80268e6:	950e      	str	r5, [sp, #56]	@ 0x38
 80268e8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80268ea:	2dff      	cmp	r5, #255	@ 0xff
 80268ec:	d020      	beq.n	8026930 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80268ee:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80268f0:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80268f4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80268f6:	436f      	muls	r7, r5
 80268f8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80268fa:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80268fe:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8026900:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8026904:	fb05 fa0a 	mul.w	sl, r5, sl
 8026908:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802690c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8026910:	44bc      	add	ip, r7
 8026912:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8026916:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802691a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802691e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026922:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8026926:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802692a:	ea4c 050a 	orr.w	r5, ip, sl
 802692e:	9509      	str	r5, [sp, #36]	@ 0x24
 8026930:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8026932:	2dff      	cmp	r5, #255	@ 0xff
 8026934:	d020      	beq.n	8026978 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8026936:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8026938:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802693c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802693e:	436f      	muls	r7, r5
 8026940:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8026942:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8026946:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8026948:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802694c:	fb05 fa0a 	mul.w	sl, r5, sl
 8026950:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8026954:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8026958:	44bc      	add	ip, r7
 802695a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802695e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026962:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026966:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802696a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802696e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026972:	ea4c 050a 	orr.w	r5, ip, sl
 8026976:	950f      	str	r5, [sp, #60]	@ 0x3c
 8026978:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802697a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802697e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8026980:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8026984:	fb0e f707 	mul.w	r7, lr, r7
 8026988:	fb02 770c 	mla	r7, r2, ip, r7
 802698c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8026990:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8026992:	fb00 770c 	mla	r7, r0, ip, r7
 8026996:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802699a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802699c:	fb08 770c 	mla	r7, r8, ip, r7
 80269a0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80269a4:	fb0e fe0c 	mul.w	lr, lr, ip
 80269a8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80269ac:	fb02 e303 	mla	r3, r2, r3, lr
 80269b0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80269b2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80269b4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80269b8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80269ba:	fb00 330a 	mla	r3, r0, sl, r3
 80269be:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 80269c2:	fb08 3c0c 	mla	ip, r8, ip, r3
 80269c6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80269c8:	f8b9 0000 	ldrh.w	r0, [r9]
 80269cc:	4359      	muls	r1, r3
 80269ce:	0a3f      	lsrs	r7, r7, #8
 80269d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80269d4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80269d8:	1c4b      	adds	r3, r1, #1
 80269da:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80269de:	ea47 070c 	orr.w	r7, r7, ip
 80269e2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80269e6:	1202      	asrs	r2, r0, #8
 80269e8:	0c3b      	lsrs	r3, r7, #16
 80269ea:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80269ee:	b2c9      	uxtb	r1, r1
 80269f0:	fb13 f305 	smulbb	r3, r3, r5
 80269f4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80269f8:	fb02 3201 	mla	r2, r2, r1, r3
 80269fc:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8026a00:	10c3      	asrs	r3, r0, #3
 8026a02:	b2ff      	uxtb	r7, r7
 8026a04:	00c0      	lsls	r0, r0, #3
 8026a06:	b2c0      	uxtb	r0, r0
 8026a08:	fb17 f705 	smulbb	r7, r7, r5
 8026a0c:	fb00 7001 	mla	r0, r0, r1, r7
 8026a10:	b292      	uxth	r2, r2
 8026a12:	fb1c fc05 	smulbb	ip, ip, r5
 8026a16:	b280      	uxth	r0, r0
 8026a18:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8026a1c:	fb03 c301 	mla	r3, r3, r1, ip
 8026a20:	1c51      	adds	r1, r2, #1
 8026a22:	f100 0c01 	add.w	ip, r0, #1
 8026a26:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8026a2a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8026a2e:	b29b      	uxth	r3, r3
 8026a30:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8026a34:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8026a38:	ea4c 0202 	orr.w	r2, ip, r2
 8026a3c:	f103 0c01 	add.w	ip, r3, #1
 8026a40:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8026a44:	095b      	lsrs	r3, r3, #5
 8026a46:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8026a4a:	431a      	orrs	r2, r3
 8026a4c:	f8a9 2000 	strh.w	r2, [r9]
 8026a50:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8026a52:	441c      	add	r4, r3
 8026a54:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8026a56:	f109 0902 	add.w	r9, r9, #2
 8026a5a:	441e      	add	r6, r3
 8026a5c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8026a60:	e647      	b.n	80266f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8026a62:	2800      	cmp	r0, #0
 8026a64:	f43f aedf 	beq.w	8026826 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8026a68:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8026a6c:	9109      	str	r1, [sp, #36]	@ 0x24
 8026a6e:	0e09      	lsrs	r1, r1, #24
 8026a70:	9112      	str	r1, [sp, #72]	@ 0x48
 8026a72:	e6d8      	b.n	8026826 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8026a74:	b01d      	add	sp, #116	@ 0x74
 8026a76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026a7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8026a7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026a7e:	b085      	sub	sp, #20
 8026a80:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8026a84:	9102      	str	r1, [sp, #8]
 8026a86:	2c00      	cmp	r4, #0
 8026a88:	fb04 7103 	mla	r1, r4, r3, r7
 8026a8c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8026a90:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8026a94:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8026a98:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8026a9c:	f2c0 810c 	blt.w	8026cb8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8026aa0:	45a6      	cmp	lr, r4
 8026aa2:	f340 8109 	ble.w	8026cb8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8026aa6:	2f00      	cmp	r7, #0
 8026aa8:	f2c0 8104 	blt.w	8026cb4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8026aac:	42bb      	cmp	r3, r7
 8026aae:	f340 8101 	ble.w	8026cb4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8026ab2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8026ab6:	1c7a      	adds	r2, r7, #1
 8026ab8:	f100 8101 	bmi.w	8026cbe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8026abc:	4293      	cmp	r3, r2
 8026abe:	f340 80fe 	ble.w	8026cbe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8026ac2:	2e00      	cmp	r6, #0
 8026ac4:	f000 80fd 	beq.w	8026cc2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8026ac8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8026acc:	3401      	adds	r4, #1
 8026ace:	f100 80fc 	bmi.w	8026cca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8026ad2:	45a6      	cmp	lr, r4
 8026ad4:	f340 80f9 	ble.w	8026cca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8026ad8:	2800      	cmp	r0, #0
 8026ada:	f000 80f9 	beq.w	8026cd0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8026ade:	2f00      	cmp	r7, #0
 8026ae0:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8026ae4:	f2c0 80ef 	blt.w	8026cc6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8026ae8:	42bb      	cmp	r3, r7
 8026aea:	f340 80ec 	ble.w	8026cc6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8026aee:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8026af2:	3701      	adds	r7, #1
 8026af4:	f100 80ef 	bmi.w	8026cd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8026af8:	42bb      	cmp	r3, r7
 8026afa:	f340 80ec 	ble.w	8026cd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8026afe:	2e00      	cmp	r6, #0
 8026b00:	f000 80eb 	beq.w	8026cda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8026b04:	6852      	ldr	r2, [r2, #4]
 8026b06:	b2b6      	uxth	r6, r6
 8026b08:	b280      	uxth	r0, r0
 8026b0a:	fb00 fe06 	mul.w	lr, r0, r6
 8026b0e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8026b12:	0136      	lsls	r6, r6, #4
 8026b14:	eba6 070e 	sub.w	r7, r6, lr
 8026b18:	b280      	uxth	r0, r0
 8026b1a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8026b1e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8026b22:	b2bf      	uxth	r7, r7
 8026b24:	1a1b      	subs	r3, r3, r0
 8026b26:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8026b2a:	b29b      	uxth	r3, r3
 8026b2c:	fb07 f60a 	mul.w	r6, r7, sl
 8026b30:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8026b34:	fb0b 6603 	mla	r6, fp, r3, r6
 8026b38:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8026b3c:	fb00 6609 	mla	r6, r0, r9, r6
 8026b40:	fb0e 6608 	mla	r6, lr, r8, r6
 8026b44:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8026b48:	9600      	str	r6, [sp, #0]
 8026b4a:	2e00      	cmp	r6, #0
 8026b4c:	f000 80af 	beq.w	8026cae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8026b50:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8026b54:	fb0b fc0c 	mul.w	ip, fp, ip
 8026b58:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8026b5c:	fb0b f505 	mul.w	r5, fp, r5
 8026b60:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8026b64:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8026b68:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8026b6c:	44dc      	add	ip, fp
 8026b6e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026b72:	9501      	str	r5, [sp, #4]
 8026b74:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8026b78:	9503      	str	r5, [sp, #12]
 8026b7a:	9d01      	ldr	r5, [sp, #4]
 8026b7c:	9e02      	ldr	r6, [sp, #8]
 8026b7e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8026b82:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8026b86:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8026b8a:	fb0a fc0c 	mul.w	ip, sl, ip
 8026b8e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8026b92:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8026b96:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8026b9a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8026b9e:	4465      	add	r5, ip
 8026ba0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8026ba4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8026ba8:	fb09 fc0c 	mul.w	ip, r9, ip
 8026bac:	fb09 f904 	mul.w	r9, r9, r4
 8026bb0:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8026bb4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8026bb8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8026bbc:	fb08 f404 	mul.w	r4, r8, r4
 8026bc0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8026bc4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8026bc8:	fb08 f802 	mul.w	r8, r8, r2
 8026bcc:	fb0a fa01 	mul.w	sl, sl, r1
 8026bd0:	0a22      	lsrs	r2, r4, #8
 8026bd2:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8026bd6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8026bda:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8026bde:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8026be2:	4414      	add	r4, r2
 8026be4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8026be8:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8026bec:	0a2d      	lsrs	r5, r5, #8
 8026bee:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8026bf2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8026bf6:	9a03      	ldr	r2, [sp, #12]
 8026bf8:	8836      	ldrh	r6, [r6, #0]
 8026bfa:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8026bfe:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8026c02:	437d      	muls	r5, r7
 8026c04:	4461      	add	r1, ip
 8026c06:	0a24      	lsrs	r4, r4, #8
 8026c08:	fb02 5503 	mla	r5, r2, r3, r5
 8026c0c:	0a09      	lsrs	r1, r1, #8
 8026c0e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8026c12:	fb04 540e 	mla	r4, r4, lr, r5
 8026c16:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8026c1a:	fb01 4100 	mla	r1, r1, r0, r4
 8026c1e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026c22:	0a09      	lsrs	r1, r1, #8
 8026c24:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026c28:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8026c2c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8026c30:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8026c34:	fb07 f70a 	mul.w	r7, r7, sl
 8026c38:	fb03 7101 	mla	r1, r3, r1, r7
 8026c3c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026c40:	9b00      	ldr	r3, [sp, #0]
 8026c42:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8026c46:	fb0e 1e08 	mla	lr, lr, r8, r1
 8026c4a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8026c4e:	fb00 e101 	mla	r1, r0, r1, lr
 8026c52:	43da      	mvns	r2, r3
 8026c54:	1233      	asrs	r3, r6, #8
 8026c56:	b2d2      	uxtb	r2, r2
 8026c58:	10f0      	asrs	r0, r6, #3
 8026c5a:	0a09      	lsrs	r1, r1, #8
 8026c5c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8026c60:	00f6      	lsls	r6, r6, #3
 8026c62:	4353      	muls	r3, r2
 8026c64:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8026c68:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8026c6c:	b2f6      	uxtb	r6, r6
 8026c6e:	4321      	orrs	r1, r4
 8026c70:	4350      	muls	r0, r2
 8026c72:	4356      	muls	r6, r2
 8026c74:	1c5a      	adds	r2, r3, #1
 8026c76:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026c7a:	0c0b      	lsrs	r3, r1, #16
 8026c7c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026c80:	1c42      	adds	r2, r0, #1
 8026c82:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026c86:	0a0a      	lsrs	r2, r1, #8
 8026c88:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8026c8c:	021b      	lsls	r3, r3, #8
 8026c8e:	00d2      	lsls	r2, r2, #3
 8026c90:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026c94:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8026c98:	4313      	orrs	r3, r2
 8026c9a:	1c72      	adds	r2, r6, #1
 8026c9c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8026ca0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8026ca4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8026ca8:	4319      	orrs	r1, r3
 8026caa:	9b02      	ldr	r3, [sp, #8]
 8026cac:	8019      	strh	r1, [r3, #0]
 8026cae:	b005      	add	sp, #20
 8026cb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026cb4:	2500      	movs	r5, #0
 8026cb6:	e6fe      	b.n	8026ab6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8026cb8:	2100      	movs	r1, #0
 8026cba:	460d      	mov	r5, r1
 8026cbc:	e706      	b.n	8026acc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8026cbe:	2100      	movs	r1, #0
 8026cc0:	e704      	b.n	8026acc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8026cc2:	4631      	mov	r1, r6
 8026cc4:	e702      	b.n	8026acc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8026cc6:	2400      	movs	r4, #0
 8026cc8:	e713      	b.n	8026af2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8026cca:	2200      	movs	r2, #0
 8026ccc:	4614      	mov	r4, r2
 8026cce:	e71a      	b.n	8026b06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8026cd0:	4602      	mov	r2, r0
 8026cd2:	4604      	mov	r4, r0
 8026cd4:	e717      	b.n	8026b06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8026cd6:	2200      	movs	r2, #0
 8026cd8:	e715      	b.n	8026b06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8026cda:	4632      	mov	r2, r6
 8026cdc:	e713      	b.n	8026b06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08026ce0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026ce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ce4:	b09b      	sub	sp, #108	@ 0x6c
 8026ce6:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 8026cea:	9218      	str	r2, [sp, #96]	@ 0x60
 8026cec:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8026cee:	9116      	str	r1, [sp, #88]	@ 0x58
 8026cf0:	9307      	str	r3, [sp, #28]
 8026cf2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8026cf6:	9019      	str	r0, [sp, #100]	@ 0x64
 8026cf8:	6850      	ldr	r0, [r2, #4]
 8026cfa:	6812      	ldr	r2, [r2, #0]
 8026cfc:	fb00 1303 	mla	r3, r0, r3, r1
 8026d00:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026d04:	930a      	str	r3, [sp, #40]	@ 0x28
 8026d06:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8026d08:	681b      	ldr	r3, [r3, #0]
 8026d0a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8026d0c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8026d0e:	2b00      	cmp	r3, #0
 8026d10:	dc03      	bgt.n	8026d1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026d12:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8026d14:	2b00      	cmp	r3, #0
 8026d16:	f340 8386 	ble.w	8027426 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8026d1a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8026d1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026d20:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026d24:	1e48      	subs	r0, r1, #1
 8026d26:	1e57      	subs	r7, r2, #1
 8026d28:	9b07      	ldr	r3, [sp, #28]
 8026d2a:	2b00      	cmp	r3, #0
 8026d2c:	f340 8166 	ble.w	8026ffc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8026d30:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8026d34:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026d38:	d406      	bmi.n	8026d48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8026d3a:	4584      	cmp	ip, r0
 8026d3c:	da04      	bge.n	8026d48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8026d3e:	2b00      	cmp	r3, #0
 8026d40:	db02      	blt.n	8026d48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8026d42:	42bb      	cmp	r3, r7
 8026d44:	f2c0 815b 	blt.w	8026ffe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8026d48:	f11c 0c01 	adds.w	ip, ip, #1
 8026d4c:	f100 814b 	bmi.w	8026fe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8026d50:	4561      	cmp	r1, ip
 8026d52:	f2c0 8148 	blt.w	8026fe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8026d56:	3301      	adds	r3, #1
 8026d58:	f100 8145 	bmi.w	8026fe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8026d5c:	429a      	cmp	r2, r3
 8026d5e:	f2c0 8142 	blt.w	8026fe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8026d62:	9b07      	ldr	r3, [sp, #28]
 8026d64:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8026d66:	9317      	str	r3, [sp, #92]	@ 0x5c
 8026d68:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8026d6a:	2b00      	cmp	r3, #0
 8026d6c:	f340 8165 	ble.w	802703a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8026d70:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8026d72:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8026d74:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8026d78:	689b      	ldr	r3, [r3, #8]
 8026d7a:	1422      	asrs	r2, r4, #16
 8026d7c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8026d80:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8026d84:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026d88:	f100 81d5 	bmi.w	8027136 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8026d8c:	f103 38ff 	add.w	r8, r3, #4294967295
 8026d90:	4542      	cmp	r2, r8
 8026d92:	f280 81d0 	bge.w	8027136 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8026d96:	f1bc 0f00 	cmp.w	ip, #0
 8026d9a:	f2c0 81cc 	blt.w	8027136 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8026d9e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8026da2:	45c4      	cmp	ip, r8
 8026da4:	f280 81c7 	bge.w	8027136 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8026da8:	b21b      	sxth	r3, r3
 8026daa:	fb0c 2203 	mla	r2, ip, r3, r2
 8026dae:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8026db0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8026db4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8026db8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8026dbc:	2900      	cmp	r1, #0
 8026dbe:	f000 8182 	beq.w	80270c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8026dc2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8026dc6:	950b      	str	r5, [sp, #44]	@ 0x2c
 8026dc8:	0e2d      	lsrs	r5, r5, #24
 8026dca:	9512      	str	r5, [sp, #72]	@ 0x48
 8026dcc:	b180      	cbz	r0, 8026df0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8026dce:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8026dd2:	3b01      	subs	r3, #1
 8026dd4:	009b      	lsls	r3, r3, #2
 8026dd6:	3304      	adds	r3, #4
 8026dd8:	eb08 0c03 	add.w	ip, r8, r3
 8026ddc:	f858 3003 	ldr.w	r3, [r8, r3]
 8026de0:	9308      	str	r3, [sp, #32]
 8026de2:	0e1b      	lsrs	r3, r3, #24
 8026de4:	9310      	str	r3, [sp, #64]	@ 0x40
 8026de6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8026dea:	930c      	str	r3, [sp, #48]	@ 0x30
 8026dec:	0e1b      	lsrs	r3, r3, #24
 8026dee:	9313      	str	r3, [sp, #76]	@ 0x4c
 8026df0:	b289      	uxth	r1, r1
 8026df2:	b280      	uxth	r0, r0
 8026df4:	fb01 f900 	mul.w	r9, r1, r0
 8026df8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8026dfc:	0109      	lsls	r1, r1, #4
 8026dfe:	eba1 0809 	sub.w	r8, r1, r9
 8026e02:	b280      	uxth	r0, r0
 8026e04:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8026e08:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8026e0a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8026e0c:	fa1f f888 	uxth.w	r8, r8
 8026e10:	1a09      	subs	r1, r1, r0
 8026e12:	b289      	uxth	r1, r1
 8026e14:	fb08 f303 	mul.w	r3, r8, r3
 8026e18:	fb01 330e 	mla	r3, r1, lr, r3
 8026e1c:	fb00 3305 	mla	r3, r0, r5, r3
 8026e20:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026e22:	fb09 3305 	mla	r3, r9, r5, r3
 8026e26:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026e2a:	2b00      	cmp	r3, #0
 8026e2c:	f000 80d2 	beq.w	8026fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026e30:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8026e34:	d01b      	beq.n	8026e6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8026e36:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8026e3a:	fb0e fa0a 	mul.w	sl, lr, sl
 8026e3e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8026e42:	fb0e fe02 	mul.w	lr, lr, r2
 8026e46:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8026e4a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8026e4e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8026e52:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8026e56:	4452      	add	r2, sl
 8026e58:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8026e5c:	0a12      	lsrs	r2, r2, #8
 8026e5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026e62:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8026e66:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8026e6a:	ea42 020c 	orr.w	r2, r2, ip
 8026e6e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8026e70:	2dff      	cmp	r5, #255	@ 0xff
 8026e72:	d021      	beq.n	8026eb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8026e74:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8026e76:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8026e7a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8026e7c:	fb05 fb0b 	mul.w	fp, r5, fp
 8026e80:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8026e82:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8026e86:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8026e88:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026e8c:	fb05 fa0a 	mul.w	sl, r5, sl
 8026e90:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026e94:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8026e98:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8026e9c:	44de      	add	lr, fp
 8026e9e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026ea2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026ea6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026eaa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026eae:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026eb2:	ea4e 050a 	orr.w	r5, lr, sl
 8026eb6:	950b      	str	r5, [sp, #44]	@ 0x2c
 8026eb8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8026eba:	2dff      	cmp	r5, #255	@ 0xff
 8026ebc:	d021      	beq.n	8026f02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026ebe:	9d08      	ldr	r5, [sp, #32]
 8026ec0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8026ec4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8026ec6:	fb05 fb0b 	mul.w	fp, r5, fp
 8026eca:	9d08      	ldr	r5, [sp, #32]
 8026ecc:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8026ed0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8026ed2:	fb05 fa0e 	mul.w	sl, r5, lr
 8026ed6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026eda:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026ede:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8026ee2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8026ee6:	44de      	add	lr, fp
 8026ee8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026eec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026ef0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026ef4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026ef8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026efc:	ea4e 050a 	orr.w	r5, lr, sl
 8026f00:	9508      	str	r5, [sp, #32]
 8026f02:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026f04:	2dff      	cmp	r5, #255	@ 0xff
 8026f06:	d021      	beq.n	8026f4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8026f08:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8026f0a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8026f0e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026f10:	fb05 fb0b 	mul.w	fp, r5, fp
 8026f14:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8026f16:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8026f1a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8026f1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026f20:	fb05 fa0a 	mul.w	sl, r5, sl
 8026f24:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026f28:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8026f2c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8026f30:	44de      	add	lr, fp
 8026f32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026f36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026f3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026f3e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8026f42:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8026f46:	ea4e 050a 	orr.w	r5, lr, sl
 8026f4a:	950c      	str	r5, [sp, #48]	@ 0x30
 8026f4c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8026f4e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8026f52:	9d08      	ldr	r5, [sp, #32]
 8026f54:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8026f58:	fb08 fc0c 	mul.w	ip, r8, ip
 8026f5c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8026f60:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8026f64:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8026f66:	fb00 cc0e 	mla	ip, r0, lr, ip
 8026f6a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8026f6e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8026f70:	fb09 cc0e 	mla	ip, r9, lr, ip
 8026f74:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8026f78:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8026f7c:	fb08 f80e 	mul.w	r8, r8, lr
 8026f80:	fb01 8202 	mla	r2, r1, r2, r8
 8026f84:	9908      	ldr	r1, [sp, #32]
 8026f86:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8026f8a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8026f8c:	fb00 220a 	mla	r2, r0, sl, r2
 8026f90:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8026f94:	fb09 2900 	mla	r9, r9, r0, r2
 8026f98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026f9c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026fa0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8026fa4:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8026fa8:	ea4c 0c09 	orr.w	ip, ip, r9
 8026fac:	2bff      	cmp	r3, #255	@ 0xff
 8026fae:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8026fb2:	f040 8091 	bne.w	80270d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8026fb6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8026fba:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8026fbe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8026fc2:	f022 0207 	bic.w	r2, r2, #7
 8026fc6:	431a      	orrs	r2, r3
 8026fc8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8026fcc:	ea4c 0c02 	orr.w	ip, ip, r2
 8026fd0:	f8a7 c000 	strh.w	ip, [r7]
 8026fd4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8026fd6:	441c      	add	r4, r3
 8026fd8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8026fda:	441e      	add	r6, r3
 8026fdc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8026fde:	3b01      	subs	r3, #1
 8026fe0:	3702      	adds	r7, #2
 8026fe2:	9317      	str	r3, [sp, #92]	@ 0x5c
 8026fe4:	e6c0      	b.n	8026d68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8026fe6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8026fe8:	441c      	add	r4, r3
 8026fea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8026fec:	441e      	add	r6, r3
 8026fee:	9b07      	ldr	r3, [sp, #28]
 8026ff0:	3b01      	subs	r3, #1
 8026ff2:	9307      	str	r3, [sp, #28]
 8026ff4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8026ff6:	3302      	adds	r3, #2
 8026ff8:	930a      	str	r3, [sp, #40]	@ 0x28
 8026ffa:	e695      	b.n	8026d28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026ffc:	d024      	beq.n	8027048 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8026ffe:	9b07      	ldr	r3, [sp, #28]
 8027000:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8027002:	3b01      	subs	r3, #1
 8027004:	fb00 4003 	mla	r0, r0, r3, r4
 8027008:	1400      	asrs	r0, r0, #16
 802700a:	f53f aeaa 	bmi.w	8026d62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802700e:	3901      	subs	r1, #1
 8027010:	4288      	cmp	r0, r1
 8027012:	f6bf aea6 	bge.w	8026d62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027016:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8027018:	fb01 6303 	mla	r3, r1, r3, r6
 802701c:	141b      	asrs	r3, r3, #16
 802701e:	f53f aea0 	bmi.w	8026d62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027022:	3a01      	subs	r2, #1
 8027024:	4293      	cmp	r3, r2
 8027026:	f6bf ae9c 	bge.w	8026d62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802702a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802702e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8027032:	f1bb 0f00 	cmp.w	fp, #0
 8027036:	f300 809a 	bgt.w	802716e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802703a:	9b07      	ldr	r3, [sp, #28]
 802703c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027040:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8027042:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027046:	930a      	str	r3, [sp, #40]	@ 0x28
 8027048:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802704a:	2b00      	cmp	r3, #0
 802704c:	f340 81eb 	ble.w	8027426 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027050:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027054:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8027058:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802705c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802705e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027062:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027066:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802706a:	eef0 6a62 	vmov.f32	s13, s5
 802706e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027072:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027076:	ee77 2a62 	vsub.f32	s5, s14, s5
 802707a:	ee16 4a90 	vmov	r4, s13
 802707e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027082:	eef0 6a43 	vmov.f32	s13, s6
 8027086:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802708a:	ee12 2a90 	vmov	r2, s5
 802708e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027092:	fb92 f3f3 	sdiv	r3, r2, r3
 8027096:	ee13 2a10 	vmov	r2, s6
 802709a:	9327      	str	r3, [sp, #156]	@ 0x9c
 802709c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802709e:	fb92 f3f3 	sdiv	r3, r2, r3
 80270a2:	9328      	str	r3, [sp, #160]	@ 0xa0
 80270a4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80270a6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80270a8:	3b01      	subs	r3, #1
 80270aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80270ae:	9316      	str	r3, [sp, #88]	@ 0x58
 80270b0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80270b2:	bf08      	it	eq
 80270b4:	4613      	moveq	r3, r2
 80270b6:	ee16 6a90 	vmov	r6, s13
 80270ba:	9307      	str	r3, [sp, #28]
 80270bc:	eeb0 3a67 	vmov.f32	s6, s15
 80270c0:	eef0 2a47 	vmov.f32	s5, s14
 80270c4:	e622      	b.n	8026d0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80270c6:	2800      	cmp	r0, #0
 80270c8:	f43f ae92 	beq.w	8026df0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80270cc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80270d0:	9308      	str	r3, [sp, #32]
 80270d2:	0e1b      	lsrs	r3, r3, #24
 80270d4:	9310      	str	r3, [sp, #64]	@ 0x40
 80270d6:	e68b      	b.n	8026df0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80270d8:	8839      	ldrh	r1, [r7, #0]
 80270da:	4dd4      	ldr	r5, [pc, #848]	@ (802742c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80270dc:	43db      	mvns	r3, r3
 80270de:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80270e2:	fa5f f883 	uxtb.w	r8, r3
 80270e6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80270ea:	fb0e fe08 	mul.w	lr, lr, r8
 80270ee:	10c8      	asrs	r0, r1, #3
 80270f0:	00cb      	lsls	r3, r1, #3
 80270f2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80270f6:	f10e 0101 	add.w	r1, lr, #1
 80270fa:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80270fe:	fb00 f008 	mul.w	r0, r0, r8
 8027102:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8027106:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802710a:	f100 0e01 	add.w	lr, r0, #1
 802710e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8027112:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027116:	b2db      	uxtb	r3, r3
 8027118:	b2c9      	uxtb	r1, r1
 802711a:	00d2      	lsls	r2, r2, #3
 802711c:	fb03 f308 	mul.w	r3, r3, r8
 8027120:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8027124:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027128:	430a      	orrs	r2, r1
 802712a:	1c59      	adds	r1, r3, #1
 802712c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8027130:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8027134:	e748      	b.n	8026fc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8027136:	f112 0801 	adds.w	r8, r2, #1
 802713a:	f53f af4b 	bmi.w	8026fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802713e:	4543      	cmp	r3, r8
 8027140:	f6ff af48 	blt.w	8026fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027144:	f11c 0801 	adds.w	r8, ip, #1
 8027148:	f53f af44 	bmi.w	8026fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802714c:	45c6      	cmp	lr, r8
 802714e:	f6ff af41 	blt.w	8026fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027152:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8027156:	fa0f f28e 	sxth.w	r2, lr
 802715a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802715e:	9200      	str	r2, [sp, #0]
 8027160:	b21b      	sxth	r3, r3
 8027162:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8027164:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8027166:	4639      	mov	r1, r7
 8027168:	f7ff fc87 	bl	8026a7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802716c:	e732      	b.n	8026fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802716e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8027170:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8027172:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8027176:	1421      	asrs	r1, r4, #16
 8027178:	1433      	asrs	r3, r6, #16
 802717a:	fb07 1303 	mla	r3, r7, r3, r1
 802717e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8027180:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8027184:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8027188:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802718c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027190:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8027194:	2a00      	cmp	r2, #0
 8027196:	f000 8107 	beq.w	80273a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802719a:	684d      	ldr	r5, [r1, #4]
 802719c:	950d      	str	r5, [sp, #52]	@ 0x34
 802719e:	0e2d      	lsrs	r5, r5, #24
 80271a0:	9514      	str	r5, [sp, #80]	@ 0x50
 80271a2:	b178      	cbz	r0, 80271c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80271a4:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 80271a8:	3f01      	subs	r7, #1
 80271aa:	00bf      	lsls	r7, r7, #2
 80271ac:	3704      	adds	r7, #4
 80271ae:	eb01 0e07 	add.w	lr, r1, r7
 80271b2:	59c9      	ldr	r1, [r1, r7]
 80271b4:	9109      	str	r1, [sp, #36]	@ 0x24
 80271b6:	0e09      	lsrs	r1, r1, #24
 80271b8:	9111      	str	r1, [sp, #68]	@ 0x44
 80271ba:	f8de 1004 	ldr.w	r1, [lr, #4]
 80271be:	910e      	str	r1, [sp, #56]	@ 0x38
 80271c0:	0e09      	lsrs	r1, r1, #24
 80271c2:	9115      	str	r1, [sp, #84]	@ 0x54
 80271c4:	b292      	uxth	r2, r2
 80271c6:	b280      	uxth	r0, r0
 80271c8:	fb02 f900 	mul.w	r9, r2, r0
 80271cc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80271d0:	0112      	lsls	r2, r2, #4
 80271d2:	eba2 0e09 	sub.w	lr, r2, r9
 80271d6:	b280      	uxth	r0, r0
 80271d8:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 80271dc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80271de:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80271e0:	fa1f fe8e 	uxth.w	lr, lr
 80271e4:	1a09      	subs	r1, r1, r0
 80271e6:	b289      	uxth	r1, r1
 80271e8:	fb0e f202 	mul.w	r2, lr, r2
 80271ec:	fb01 220c 	mla	r2, r1, ip, r2
 80271f0:	fb00 2205 	mla	r2, r0, r5, r2
 80271f4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80271f6:	fb09 2205 	mla	r2, r9, r5, r2
 80271fa:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80271fe:	2a00      	cmp	r2, #0
 8027200:	f000 80c9 	beq.w	8027396 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8027204:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8027208:	d019      	beq.n	802723e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802720a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802720e:	fb0c fa0a 	mul.w	sl, ip, sl
 8027212:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8027216:	fb0c fc03 	mul.w	ip, ip, r3
 802721a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802721e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8027222:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8027226:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802722a:	4453      	add	r3, sl
 802722c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027230:	0a1b      	lsrs	r3, r3, #8
 8027232:	0a3f      	lsrs	r7, r7, #8
 8027234:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8027238:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802723c:	433b      	orrs	r3, r7
 802723e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8027240:	2dff      	cmp	r5, #255	@ 0xff
 8027242:	d020      	beq.n	8027286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8027244:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8027246:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802724a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802724c:	436f      	muls	r7, r5
 802724e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8027250:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8027254:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8027256:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802725a:	fb05 fa0a 	mul.w	sl, r5, sl
 802725e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8027262:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8027266:	44bc      	add	ip, r7
 8027268:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802726c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027270:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027274:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027278:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802727c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027280:	ea4c 050a 	orr.w	r5, ip, sl
 8027284:	950d      	str	r5, [sp, #52]	@ 0x34
 8027286:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8027288:	2dff      	cmp	r5, #255	@ 0xff
 802728a:	d020      	beq.n	80272ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802728c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802728e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8027292:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8027294:	436f      	muls	r7, r5
 8027296:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8027298:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802729c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802729e:	fb05 fa0c 	mul.w	sl, r5, ip
 80272a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80272a6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80272aa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80272ae:	44bc      	add	ip, r7
 80272b0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80272b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80272b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80272bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80272c0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80272c4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80272c8:	ea4c 050a 	orr.w	r5, ip, sl
 80272cc:	9509      	str	r5, [sp, #36]	@ 0x24
 80272ce:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80272d0:	2dff      	cmp	r5, #255	@ 0xff
 80272d2:	d020      	beq.n	8027316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80272d4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80272d6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80272da:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80272dc:	436f      	muls	r7, r5
 80272de:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80272e0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80272e4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80272e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80272ea:	fb05 fa0a 	mul.w	sl, r5, sl
 80272ee:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80272f2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80272f6:	44bc      	add	ip, r7
 80272f8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80272fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027300:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027304:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027308:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802730c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8027310:	ea4c 050a 	orr.w	r5, ip, sl
 8027314:	950e      	str	r5, [sp, #56]	@ 0x38
 8027316:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8027318:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802731c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802731e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8027322:	fb0e f707 	mul.w	r7, lr, r7
 8027326:	fb01 770c 	mla	r7, r1, ip, r7
 802732a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802732e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8027330:	fb00 770c 	mla	r7, r0, ip, r7
 8027334:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8027338:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802733a:	fb09 770c 	mla	r7, r9, ip, r7
 802733e:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8027342:	fb0e fe0c 	mul.w	lr, lr, ip
 8027346:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802734a:	fb01 e303 	mla	r3, r1, r3, lr
 802734e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8027350:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8027354:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8027356:	fb00 330a 	mla	r3, r0, sl, r3
 802735a:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 802735e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8027362:	0a3f      	lsrs	r7, r7, #8
 8027364:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027368:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802736c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8027370:	ea47 070c 	orr.w	r7, r7, ip
 8027374:	2aff      	cmp	r2, #255	@ 0xff
 8027376:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802737a:	d11e      	bne.n	80273ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802737c:	097a      	lsrs	r2, r7, #5
 802737e:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8027382:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027386:	f023 0307 	bic.w	r3, r3, #7
 802738a:	4313      	orrs	r3, r2
 802738c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8027390:	431f      	orrs	r7, r3
 8027392:	f8a8 7000 	strh.w	r7, [r8]
 8027396:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8027398:	441c      	add	r4, r3
 802739a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802739c:	f108 0802 	add.w	r8, r8, #2
 80273a0:	441e      	add	r6, r3
 80273a2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80273a6:	e644      	b.n	8027032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80273a8:	2800      	cmp	r0, #0
 80273aa:	f43f af0b 	beq.w	80271c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80273ae:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80273b2:	9109      	str	r1, [sp, #36]	@ 0x24
 80273b4:	0e09      	lsrs	r1, r1, #24
 80273b6:	9111      	str	r1, [sp, #68]	@ 0x44
 80273b8:	e704      	b.n	80271c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80273ba:	f8b8 1000 	ldrh.w	r1, [r8]
 80273be:	43d2      	mvns	r2, r2
 80273c0:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80273c4:	fa5f fe82 	uxtb.w	lr, r2
 80273c8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80273cc:	fb0c fc0e 	mul.w	ip, ip, lr
 80273d0:	10c8      	asrs	r0, r1, #3
 80273d2:	00ca      	lsls	r2, r1, #3
 80273d4:	f10c 0101 	add.w	r1, ip, #1
 80273d8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80273dc:	0c39      	lsrs	r1, r7, #16
 80273de:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80273e2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80273e6:	4911      	ldr	r1, [pc, #68]	@ (802742c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80273e8:	fb00 f00e 	mul.w	r0, r0, lr
 80273ec:	fa5f fc8c 	uxtb.w	ip, ip
 80273f0:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80273f4:	b2d2      	uxtb	r2, r2
 80273f6:	1c41      	adds	r1, r0, #1
 80273f8:	fb02 f20e 	mul.w	r2, r2, lr
 80273fc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8027400:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8027404:	1c51      	adds	r1, r2, #1
 8027406:	00c0      	lsls	r0, r0, #3
 8027408:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802740c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8027410:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8027414:	ea4c 0c00 	orr.w	ip, ip, r0
 8027418:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802741c:	ea47 0c0c 	orr.w	ip, r7, ip
 8027420:	f8a8 c000 	strh.w	ip, [r8]
 8027424:	e7b7      	b.n	8027396 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8027426:	b01b      	add	sp, #108	@ 0x6c
 8027428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802742c:	fffff800 	.word	0xfffff800

08027430 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8027430:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027434:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8027438:	2d00      	cmp	r5, #0
 802743a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802743e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8027442:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8027446:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802744a:	fb05 0e03 	mla	lr, r5, r3, r0
 802744e:	f2c0 808c 	blt.w	802756a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8027452:	45a9      	cmp	r9, r5
 8027454:	f340 8089 	ble.w	802756a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8027458:	2800      	cmp	r0, #0
 802745a:	f2c0 8084 	blt.w	8027566 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802745e:	4580      	cmp	r8, r0
 8027460:	f340 8081 	ble.w	8027566 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8027464:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8027468:	f01e 0f01 	tst.w	lr, #1
 802746c:	5d16      	ldrb	r6, [r2, r4]
 802746e:	bf0c      	ite	eq
 8027470:	f006 060f 	andeq.w	r6, r6, #15
 8027474:	1136      	asrne	r6, r6, #4
 8027476:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802747a:	b2f6      	uxtb	r6, r6
 802747c:	1c44      	adds	r4, r0, #1
 802747e:	d477      	bmi.n	8027570 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8027480:	45a0      	cmp	r8, r4
 8027482:	dd75      	ble.n	8027570 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8027484:	2f00      	cmp	r7, #0
 8027486:	d075      	beq.n	8027574 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8027488:	f10e 0a01 	add.w	sl, lr, #1
 802748c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8027490:	f01a 0f01 	tst.w	sl, #1
 8027494:	5d14      	ldrb	r4, [r2, r4]
 8027496:	bf0c      	ite	eq
 8027498:	f004 040f 	andeq.w	r4, r4, #15
 802749c:	1124      	asrne	r4, r4, #4
 802749e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80274a2:	b2e4      	uxtb	r4, r4
 80274a4:	3501      	adds	r5, #1
 80274a6:	d469      	bmi.n	802757c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80274a8:	45a9      	cmp	r9, r5
 80274aa:	dd67      	ble.n	802757c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80274ac:	f1bc 0f00 	cmp.w	ip, #0
 80274b0:	d067      	beq.n	8027582 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80274b2:	2800      	cmp	r0, #0
 80274b4:	db60      	blt.n	8027578 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80274b6:	4580      	cmp	r8, r0
 80274b8:	dd5e      	ble.n	8027578 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80274ba:	eb03 090e 	add.w	r9, r3, lr
 80274be:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80274c2:	f019 0f01 	tst.w	r9, #1
 80274c6:	5d55      	ldrb	r5, [r2, r5]
 80274c8:	bf0c      	ite	eq
 80274ca:	f005 050f 	andeq.w	r5, r5, #15
 80274ce:	112d      	asrne	r5, r5, #4
 80274d0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80274d4:	b2ed      	uxtb	r5, r5
 80274d6:	3001      	adds	r0, #1
 80274d8:	d456      	bmi.n	8027588 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80274da:	4580      	cmp	r8, r0
 80274dc:	dd54      	ble.n	8027588 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80274de:	2f00      	cmp	r7, #0
 80274e0:	d054      	beq.n	802758c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80274e2:	3301      	adds	r3, #1
 80274e4:	449e      	add	lr, r3
 80274e6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80274ea:	f01e 0f01 	tst.w	lr, #1
 80274ee:	5cd0      	ldrb	r0, [r2, r3]
 80274f0:	bf0c      	ite	eq
 80274f2:	f000 000f 	andeq.w	r0, r0, #15
 80274f6:	1100      	asrne	r0, r0, #4
 80274f8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80274fc:	b2c3      	uxtb	r3, r0
 80274fe:	b2ba      	uxth	r2, r7
 8027500:	fa1f fc8c 	uxth.w	ip, ip
 8027504:	fb02 f00c 	mul.w	r0, r2, ip
 8027508:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802750c:	0112      	lsls	r2, r2, #4
 802750e:	fa1f fc8c 	uxth.w	ip, ip
 8027512:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8027516:	1a12      	subs	r2, r2, r0
 8027518:	eba7 070c 	sub.w	r7, r7, ip
 802751c:	b292      	uxth	r2, r2
 802751e:	b2bf      	uxth	r7, r7
 8027520:	4362      	muls	r2, r4
 8027522:	fb06 2207 	mla	r2, r6, r7, r2
 8027526:	fb0c 2505 	mla	r5, ip, r5, r2
 802752a:	fb00 5303 	mla	r3, r0, r3, r5
 802752e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027532:	b1b3      	cbz	r3, 8027562 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8027534:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 8027538:	435a      	muls	r2, r3
 802753a:	1c53      	adds	r3, r2, #1
 802753c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027540:	4a2d      	ldr	r2, [pc, #180]	@ (80275f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8027542:	121b      	asrs	r3, r3, #8
 8027544:	6812      	ldr	r2, [r2, #0]
 8027546:	2bff      	cmp	r3, #255	@ 0xff
 8027548:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802754c:	d120      	bne.n	8027590 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802754e:	4b2b      	ldr	r3, [pc, #172]	@ (80275fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8027550:	0950      	lsrs	r0, r2, #5
 8027552:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8027556:	4033      	ands	r3, r6
 8027558:	4318      	orrs	r0, r3
 802755a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802755e:	4302      	orrs	r2, r0
 8027560:	800a      	strh	r2, [r1, #0]
 8027562:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027566:	2600      	movs	r6, #0
 8027568:	e788      	b.n	802747c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802756a:	2400      	movs	r4, #0
 802756c:	4626      	mov	r6, r4
 802756e:	e799      	b.n	80274a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8027570:	2400      	movs	r4, #0
 8027572:	e797      	b.n	80274a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8027574:	463c      	mov	r4, r7
 8027576:	e795      	b.n	80274a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8027578:	2500      	movs	r5, #0
 802757a:	e7ac      	b.n	80274d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 802757c:	2300      	movs	r3, #0
 802757e:	461d      	mov	r5, r3
 8027580:	e7bd      	b.n	80274fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8027582:	4663      	mov	r3, ip
 8027584:	4665      	mov	r5, ip
 8027586:	e7ba      	b.n	80274fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8027588:	2300      	movs	r3, #0
 802758a:	e7b8      	b.n	80274fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802758c:	463b      	mov	r3, r7
 802758e:	e7b6      	b.n	80274fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8027590:	880d      	ldrh	r5, [r1, #0]
 8027592:	b29f      	uxth	r7, r3
 8027594:	122c      	asrs	r4, r5, #8
 8027596:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802759a:	43db      	mvns	r3, r3
 802759c:	b2db      	uxtb	r3, r3
 802759e:	fb10 f007 	smulbb	r0, r0, r7
 80275a2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80275a6:	fb04 0403 	mla	r4, r4, r3, r0
 80275aa:	b2f6      	uxtb	r6, r6
 80275ac:	10e8      	asrs	r0, r5, #3
 80275ae:	b2d2      	uxtb	r2, r2
 80275b0:	00ed      	lsls	r5, r5, #3
 80275b2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80275b6:	fb12 f207 	smulbb	r2, r2, r7
 80275ba:	fb16 f607 	smulbb	r6, r6, r7
 80275be:	b2ed      	uxtb	r5, r5
 80275c0:	b2a4      	uxth	r4, r4
 80275c2:	fb00 6603 	mla	r6, r0, r3, r6
 80275c6:	fb05 2303 	mla	r3, r5, r3, r2
 80275ca:	b29a      	uxth	r2, r3
 80275cc:	1c63      	adds	r3, r4, #1
 80275ce:	b2b0      	uxth	r0, r6
 80275d0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80275d4:	1c53      	adds	r3, r2, #1
 80275d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80275da:	1c42      	adds	r2, r0, #1
 80275dc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80275e0:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80275e4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80275e8:	0940      	lsrs	r0, r0, #5
 80275ea:	4323      	orrs	r3, r4
 80275ec:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80275f0:	4303      	orrs	r3, r0
 80275f2:	800b      	strh	r3, [r1, #0]
 80275f4:	e7b5      	b.n	8027562 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80275f6:	bf00      	nop
 80275f8:	20013f5c 	.word	0x20013f5c
 80275fc:	00fff800 	.word	0x00fff800

08027600 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027604:	b097      	sub	sp, #92	@ 0x5c
 8027606:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 802760a:	9214      	str	r2, [sp, #80]	@ 0x50
 802760c:	9309      	str	r3, [sp, #36]	@ 0x24
 802760e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8027610:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8027614:	910d      	str	r1, [sp, #52]	@ 0x34
 8027616:	930f      	str	r3, [sp, #60]	@ 0x3c
 8027618:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 802761c:	9015      	str	r0, [sp, #84]	@ 0x54
 802761e:	6850      	ldr	r0, [r2, #4]
 8027620:	6812      	ldr	r2, [r2, #0]
 8027622:	fb00 1303 	mla	r3, r0, r3, r1
 8027626:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802762a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802762c:	689b      	ldr	r3, [r3, #8]
 802762e:	3301      	adds	r3, #1
 8027630:	f023 0301 	bic.w	r3, r3, #1
 8027634:	930a      	str	r3, [sp, #40]	@ 0x28
 8027636:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8027638:	681f      	ldr	r7, [r3, #0]
 802763a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802763c:	2b00      	cmp	r3, #0
 802763e:	dc03      	bgt.n	8027648 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8027640:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8027642:	2b00      	cmp	r3, #0
 8027644:	f340 8287 	ble.w	8027b56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8027648:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802764a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802764e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027652:	1e48      	subs	r0, r1, #1
 8027654:	f102 3cff 	add.w	ip, r2, #4294967295
 8027658:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802765a:	2b00      	cmp	r3, #0
 802765c:	f340 80c4 	ble.w	80277e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8027660:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8027664:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027668:	d406      	bmi.n	8027678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802766a:	4586      	cmp	lr, r0
 802766c:	da04      	bge.n	8027678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802766e:	2b00      	cmp	r3, #0
 8027670:	db02      	blt.n	8027678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8027672:	4563      	cmp	r3, ip
 8027674:	f2c0 80b9 	blt.w	80277ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8027678:	f11e 0e01 	adds.w	lr, lr, #1
 802767c:	f100 80aa 	bmi.w	80277d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8027680:	4571      	cmp	r1, lr
 8027682:	f2c0 80a7 	blt.w	80277d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8027686:	3301      	adds	r3, #1
 8027688:	f100 80a4 	bmi.w	80277d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802768c:	429a      	cmp	r2, r3
 802768e:	f2c0 80a1 	blt.w	80277d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8027692:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027694:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 8027698:	930e      	str	r3, [sp, #56]	@ 0x38
 802769a:	46c8      	mov	r8, r9
 802769c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802769e:	2b00      	cmp	r3, #0
 80276a0:	f340 80c3 	ble.w	802782a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80276a4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80276a6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80276aa:	1423      	asrs	r3, r4, #16
 80276ac:	ea4f 4026 	mov.w	r0, r6, asr #16
 80276b0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80276b4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80276b8:	f100 814d 	bmi.w	8027956 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80276bc:	f10c 3bff 	add.w	fp, ip, #4294967295
 80276c0:	455b      	cmp	r3, fp
 80276c2:	f280 8148 	bge.w	8027956 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80276c6:	2800      	cmp	r0, #0
 80276c8:	f2c0 8145 	blt.w	8027956 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80276cc:	f10e 3bff 	add.w	fp, lr, #4294967295
 80276d0:	4558      	cmp	r0, fp
 80276d2:	f280 8140 	bge.w	8027956 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80276d6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80276d8:	fb00 3305 	mla	r3, r0, r5, r3
 80276dc:	0858      	lsrs	r0, r3, #1
 80276de:	07dd      	lsls	r5, r3, #31
 80276e0:	f817 c000 	ldrb.w	ip, [r7, r0]
 80276e4:	bf54      	ite	pl
 80276e6:	f00c 0c0f 	andpl.w	ip, ip, #15
 80276ea:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80276ee:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80276f2:	fa5f fc8c 	uxtb.w	ip, ip
 80276f6:	2a00      	cmp	r2, #0
 80276f8:	f000 80db 	beq.w	80278b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80276fc:	1c58      	adds	r0, r3, #1
 80276fe:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8027702:	07c0      	lsls	r0, r0, #31
 8027704:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8027708:	bf54      	ite	pl
 802770a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802770e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8027712:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8027716:	fa5f f08e 	uxtb.w	r0, lr
 802771a:	9010      	str	r0, [sp, #64]	@ 0x40
 802771c:	b1c9      	cbz	r1, 8027752 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802771e:	4453      	add	r3, sl
 8027720:	0858      	lsrs	r0, r3, #1
 8027722:	07dd      	lsls	r5, r3, #31
 8027724:	5c38      	ldrb	r0, [r7, r0]
 8027726:	bf54      	ite	pl
 8027728:	f000 000f 	andpl.w	r0, r0, #15
 802772c:	1100      	asrmi	r0, r0, #4
 802772e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8027732:	3301      	adds	r3, #1
 8027734:	b2c0      	uxtb	r0, r0
 8027736:	900b      	str	r0, [sp, #44]	@ 0x2c
 8027738:	0858      	lsrs	r0, r3, #1
 802773a:	07dd      	lsls	r5, r3, #31
 802773c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8027740:	bf54      	ite	pl
 8027742:	f00e 030f 	andpl.w	r3, lr, #15
 8027746:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802774a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802774e:	b2db      	uxtb	r3, r3
 8027750:	9311      	str	r3, [sp, #68]	@ 0x44
 8027752:	b292      	uxth	r2, r2
 8027754:	b289      	uxth	r1, r1
 8027756:	fb02 f301 	mul.w	r3, r2, r1
 802775a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802775e:	0112      	lsls	r2, r2, #4
 8027760:	b289      	uxth	r1, r1
 8027762:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8027766:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8027768:	1ad2      	subs	r2, r2, r3
 802776a:	1a40      	subs	r0, r0, r1
 802776c:	b292      	uxth	r2, r2
 802776e:	436a      	muls	r2, r5
 8027770:	b280      	uxth	r0, r0
 8027772:	fb0c 2c00 	mla	ip, ip, r0, r2
 8027776:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8027778:	fb01 c102 	mla	r1, r1, r2, ip
 802777c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802777e:	fb03 1302 	mla	r3, r3, r2, r1
 8027782:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027786:	b1db      	cbz	r3, 80277c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8027788:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802778a:	4353      	muls	r3, r2
 802778c:	1c5a      	adds	r2, r3, #1
 802778e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8027792:	4ac6      	ldr	r2, [pc, #792]	@ (8027aac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8027794:	121b      	asrs	r3, r3, #8
 8027796:	6812      	ldr	r2, [r2, #0]
 8027798:	2bff      	cmp	r3, #255	@ 0xff
 802779a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802779e:	f040 8099 	bne.w	80278d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80277a2:	0953      	lsrs	r3, r2, #5
 80277a4:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80277a8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80277ac:	f02c 0c07 	bic.w	ip, ip, #7
 80277b0:	ea43 0c0c 	orr.w	ip, r3, ip
 80277b4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80277b8:	ea4c 0202 	orr.w	r2, ip, r2
 80277bc:	f8a8 2000 	strh.w	r2, [r8]
 80277c0:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80277c2:	441c      	add	r4, r3
 80277c4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80277c6:	441e      	add	r6, r3
 80277c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80277ca:	3b01      	subs	r3, #1
 80277cc:	f108 0802 	add.w	r8, r8, #2
 80277d0:	930e      	str	r3, [sp, #56]	@ 0x38
 80277d2:	e763      	b.n	802769c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80277d4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80277d6:	441c      	add	r4, r3
 80277d8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80277da:	441e      	add	r6, r3
 80277dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80277de:	3b01      	subs	r3, #1
 80277e0:	9309      	str	r3, [sp, #36]	@ 0x24
 80277e2:	f109 0902 	add.w	r9, r9, #2
 80277e6:	e737      	b.n	8027658 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80277e8:	d024      	beq.n	8027834 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80277ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80277ec:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 80277ee:	3b01      	subs	r3, #1
 80277f0:	fb00 4003 	mla	r0, r0, r3, r4
 80277f4:	1400      	asrs	r0, r0, #16
 80277f6:	f53f af4c 	bmi.w	8027692 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80277fa:	3901      	subs	r1, #1
 80277fc:	4288      	cmp	r0, r1
 80277fe:	f6bf af48 	bge.w	8027692 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027802:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8027804:	fb01 6303 	mla	r3, r1, r3, r6
 8027808:	141b      	asrs	r3, r3, #16
 802780a:	f53f af42 	bmi.w	8027692 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802780e:	3a01      	subs	r2, #1
 8027810:	4293      	cmp	r3, r2
 8027812:	f6bf af3e 	bge.w	8027692 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027816:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 802781a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 802781e:	930e      	str	r3, [sp, #56]	@ 0x38
 8027820:	46c8      	mov	r8, r9
 8027822:	f1bb 0f00 	cmp.w	fp, #0
 8027826:	f300 80b7 	bgt.w	8027998 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802782a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802782c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027830:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8027834:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8027836:	2b00      	cmp	r3, #0
 8027838:	f340 818d 	ble.w	8027b56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802783c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027840:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8027844:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027848:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802784a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802784e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027852:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027856:	eef0 6a62 	vmov.f32	s13, s5
 802785a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802785e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027862:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027866:	ee16 4a90 	vmov	r4, s13
 802786a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802786e:	eef0 6a43 	vmov.f32	s13, s6
 8027872:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027876:	ee12 2a90 	vmov	r2, s5
 802787a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802787e:	fb92 f3f3 	sdiv	r3, r2, r3
 8027882:	ee13 2a10 	vmov	r2, s6
 8027886:	9323      	str	r3, [sp, #140]	@ 0x8c
 8027888:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802788a:	fb92 f3f3 	sdiv	r3, r2, r3
 802788e:	9324      	str	r3, [sp, #144]	@ 0x90
 8027890:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8027892:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8027894:	3b01      	subs	r3, #1
 8027896:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802789a:	930d      	str	r3, [sp, #52]	@ 0x34
 802789c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802789e:	bf08      	it	eq
 80278a0:	4613      	moveq	r3, r2
 80278a2:	ee16 6a90 	vmov	r6, s13
 80278a6:	9309      	str	r3, [sp, #36]	@ 0x24
 80278a8:	eeb0 3a67 	vmov.f32	s6, s15
 80278ac:	eef0 2a47 	vmov.f32	s5, s14
 80278b0:	e6c3      	b.n	802763a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80278b2:	2900      	cmp	r1, #0
 80278b4:	f43f af4d 	beq.w	8027752 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80278b8:	eb0a 0003 	add.w	r0, sl, r3
 80278bc:	0843      	lsrs	r3, r0, #1
 80278be:	07c0      	lsls	r0, r0, #31
 80278c0:	5cfb      	ldrb	r3, [r7, r3]
 80278c2:	bf54      	ite	pl
 80278c4:	f003 030f 	andpl.w	r3, r3, #15
 80278c8:	111b      	asrmi	r3, r3, #4
 80278ca:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80278ce:	b2db      	uxtb	r3, r3
 80278d0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80278d2:	e73e      	b.n	8027752 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80278d4:	f8b8 e000 	ldrh.w	lr, [r8]
 80278d8:	fa1f fb83 	uxth.w	fp, r3
 80278dc:	ea4f 202e 	mov.w	r0, lr, asr #8
 80278e0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80278e4:	43db      	mvns	r3, r3
 80278e6:	b2db      	uxtb	r3, r3
 80278e8:	fb11 f10b 	smulbb	r1, r1, fp
 80278ec:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80278f0:	fb00 1003 	mla	r0, r0, r3, r1
 80278f4:	fa5f fc8c 	uxtb.w	ip, ip
 80278f8:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80278fc:	b2d2      	uxtb	r2, r2
 80278fe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027902:	b280      	uxth	r0, r0
 8027904:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8027908:	fb1c fc0b 	smulbb	ip, ip, fp
 802790c:	fa5f fe8e 	uxtb.w	lr, lr
 8027910:	fb12 fb0b 	smulbb	fp, r2, fp
 8027914:	fb01 cc03 	mla	ip, r1, r3, ip
 8027918:	fb0e bb03 	mla	fp, lr, r3, fp
 802791c:	1c43      	adds	r3, r0, #1
 802791e:	fa1f fc8c 	uxth.w	ip, ip
 8027922:	fa1f fb8b 	uxth.w	fp, fp
 8027926:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802792a:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 802792e:	f10c 0101 	add.w	r1, ip, #1
 8027932:	f10b 0001 	add.w	r0, fp, #1
 8027936:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802793a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802793e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027942:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8027946:	4318      	orrs	r0, r3
 8027948:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802794c:	ea40 000c 	orr.w	r0, r0, ip
 8027950:	f8a8 0000 	strh.w	r0, [r8]
 8027954:	e734      	b.n	80277c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8027956:	f113 0b01 	adds.w	fp, r3, #1
 802795a:	f53f af31 	bmi.w	80277c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802795e:	45dc      	cmp	ip, fp
 8027960:	f6ff af2e 	blt.w	80277c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8027964:	f110 0b01 	adds.w	fp, r0, #1
 8027968:	f53f af2a 	bmi.w	80277c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802796c:	45de      	cmp	lr, fp
 802796e:	f6ff af27 	blt.w	80277c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8027972:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8027974:	9302      	str	r3, [sp, #8]
 8027976:	fa0f f38e 	sxth.w	r3, lr
 802797a:	9301      	str	r3, [sp, #4]
 802797c:	fa0f f38c 	sxth.w	r3, ip
 8027980:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8027984:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8027988:	9300      	str	r3, [sp, #0]
 802798a:	463a      	mov	r2, r7
 802798c:	4653      	mov	r3, sl
 802798e:	4641      	mov	r1, r8
 8027990:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8027992:	f7ff fd4d 	bl	8027430 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8027996:	e713      	b.n	80277c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8027998:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802799a:	1422      	asrs	r2, r4, #16
 802799c:	1433      	asrs	r3, r6, #16
 802799e:	fb05 2303 	mla	r3, r5, r3, r2
 80279a2:	085a      	lsrs	r2, r3, #1
 80279a4:	07dd      	lsls	r5, r3, #31
 80279a6:	5cba      	ldrb	r2, [r7, r2]
 80279a8:	bf54      	ite	pl
 80279aa:	f002 020f 	andpl.w	r2, r2, #15
 80279ae:	1112      	asrmi	r2, r2, #4
 80279b0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80279b4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80279b8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80279bc:	b2d2      	uxtb	r2, r2
 80279be:	2900      	cmp	r1, #0
 80279c0:	d076      	beq.n	8027ab0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80279c2:	f103 0e01 	add.w	lr, r3, #1
 80279c6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80279ca:	f01e 0f01 	tst.w	lr, #1
 80279ce:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80279d2:	bf0c      	ite	eq
 80279d4:	f00c 0c0f 	andeq.w	ip, ip, #15
 80279d8:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80279dc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80279e0:	fa5f f58c 	uxtb.w	r5, ip
 80279e4:	9512      	str	r5, [sp, #72]	@ 0x48
 80279e6:	b300      	cbz	r0, 8027a2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80279e8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80279ea:	442b      	add	r3, r5
 80279ec:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80279f0:	07dd      	lsls	r5, r3, #31
 80279f2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80279f6:	bf54      	ite	pl
 80279f8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80279fc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027a00:	3301      	adds	r3, #1
 8027a02:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027a06:	fa5f f58c 	uxtb.w	r5, ip
 8027a0a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027a0e:	950c      	str	r5, [sp, #48]	@ 0x30
 8027a10:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027a14:	07dd      	lsls	r5, r3, #31
 8027a16:	bf54      	ite	pl
 8027a18:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027a1c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027a20:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027a24:	fa5f f38c 	uxtb.w	r3, ip
 8027a28:	9313      	str	r3, [sp, #76]	@ 0x4c
 8027a2a:	b289      	uxth	r1, r1
 8027a2c:	b280      	uxth	r0, r0
 8027a2e:	fb01 f300 	mul.w	r3, r1, r0
 8027a32:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8027a36:	0109      	lsls	r1, r1, #4
 8027a38:	b280      	uxth	r0, r0
 8027a3a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8027a3e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8027a40:	1ac9      	subs	r1, r1, r3
 8027a42:	ebac 0c00 	sub.w	ip, ip, r0
 8027a46:	b289      	uxth	r1, r1
 8027a48:	4369      	muls	r1, r5
 8027a4a:	fa1f fc8c 	uxth.w	ip, ip
 8027a4e:	fb02 120c 	mla	r2, r2, ip, r1
 8027a52:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8027a54:	fb00 2001 	mla	r0, r0, r1, r2
 8027a58:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8027a5a:	fb03 0302 	mla	r3, r3, r2, r0
 8027a5e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027a62:	b1d3      	cbz	r3, 8027a9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8027a64:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8027a66:	4353      	muls	r3, r2
 8027a68:	1c5a      	adds	r2, r3, #1
 8027a6a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8027a6e:	4a0f      	ldr	r2, [pc, #60]	@ (8027aac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8027a70:	121b      	asrs	r3, r3, #8
 8027a72:	6812      	ldr	r2, [r2, #0]
 8027a74:	2bff      	cmp	r3, #255	@ 0xff
 8027a76:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8027a7a:	d12d      	bne.n	8027ad8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8027a7c:	0953      	lsrs	r3, r2, #5
 8027a7e:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8027a82:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8027a86:	f02c 0c07 	bic.w	ip, ip, #7
 8027a8a:	ea43 0c0c 	orr.w	ip, r3, ip
 8027a8e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027a92:	ea4c 0202 	orr.w	r2, ip, r2
 8027a96:	f8a8 2000 	strh.w	r2, [r8]
 8027a9a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8027a9c:	441c      	add	r4, r3
 8027a9e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027aa0:	f108 0802 	add.w	r8, r8, #2
 8027aa4:	441e      	add	r6, r3
 8027aa6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027aaa:	e6ba      	b.n	8027822 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8027aac:	20013f5c 	.word	0x20013f5c
 8027ab0:	2800      	cmp	r0, #0
 8027ab2:	d0ba      	beq.n	8027a2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8027ab4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8027ab6:	442b      	add	r3, r5
 8027ab8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8027abc:	07db      	lsls	r3, r3, #31
 8027abe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8027ac2:	bf54      	ite	pl
 8027ac4:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027ac8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027acc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027ad0:	fa5f f38c 	uxtb.w	r3, ip
 8027ad4:	930c      	str	r3, [sp, #48]	@ 0x30
 8027ad6:	e7a8      	b.n	8027a2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8027ad8:	f8b8 e000 	ldrh.w	lr, [r8]
 8027adc:	fa1f fa83 	uxth.w	sl, r3
 8027ae0:	ea4f 202e 	mov.w	r0, lr, asr #8
 8027ae4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8027ae8:	43db      	mvns	r3, r3
 8027aea:	b2db      	uxtb	r3, r3
 8027aec:	fb11 f10a 	smulbb	r1, r1, sl
 8027af0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8027af4:	fb00 1003 	mla	r0, r0, r3, r1
 8027af8:	b2d2      	uxtb	r2, r2
 8027afa:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8027afe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027b02:	fa5f fe8e 	uxtb.w	lr, lr
 8027b06:	fb12 f20a 	smulbb	r2, r2, sl
 8027b0a:	fb0e 2203 	mla	r2, lr, r3, r2
 8027b0e:	fa5f fc8c 	uxtb.w	ip, ip
 8027b12:	b280      	uxth	r0, r0
 8027b14:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8027b18:	b292      	uxth	r2, r2
 8027b1a:	fb1c fc0a 	smulbb	ip, ip, sl
 8027b1e:	fb01 cc03 	mla	ip, r1, r3, ip
 8027b22:	1c43      	adds	r3, r0, #1
 8027b24:	1c51      	adds	r1, r2, #1
 8027b26:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8027b2a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8027b2e:	fa1f fc8c 	uxth.w	ip, ip
 8027b32:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8027b36:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8027b3a:	4308      	orrs	r0, r1
 8027b3c:	f10c 0101 	add.w	r1, ip, #1
 8027b40:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8027b44:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8027b48:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8027b4c:	ea40 000c 	orr.w	r0, r0, ip
 8027b50:	f8a8 0000 	strh.w	r0, [r8]
 8027b54:	e7a1      	b.n	8027a9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8027b56:	b017      	add	sp, #92	@ 0x5c
 8027b58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027b5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8027b5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027b60:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8027b64:	2d00      	cmp	r5, #0
 8027b66:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8027b6a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8027b6e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8027b72:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8027b76:	fb05 0e03 	mla	lr, r5, r3, r0
 8027b7a:	f2c0 80b0 	blt.w	8027cde <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8027b7e:	45a9      	cmp	r9, r5
 8027b80:	f340 80ad 	ble.w	8027cde <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8027b84:	2800      	cmp	r0, #0
 8027b86:	f2c0 80a8 	blt.w	8027cda <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8027b8a:	4580      	cmp	r8, r0
 8027b8c:	f340 80a5 	ble.w	8027cda <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8027b90:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8027b94:	f01e 0f01 	tst.w	lr, #1
 8027b98:	5d16      	ldrb	r6, [r2, r4]
 8027b9a:	bf0c      	ite	eq
 8027b9c:	f006 060f 	andeq.w	r6, r6, #15
 8027ba0:	1136      	asrne	r6, r6, #4
 8027ba2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8027ba6:	b2f6      	uxtb	r6, r6
 8027ba8:	1c44      	adds	r4, r0, #1
 8027baa:	f100 809b 	bmi.w	8027ce4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8027bae:	45a0      	cmp	r8, r4
 8027bb0:	f340 8098 	ble.w	8027ce4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8027bb4:	2f00      	cmp	r7, #0
 8027bb6:	f000 8097 	beq.w	8027ce8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8027bba:	f10e 0a01 	add.w	sl, lr, #1
 8027bbe:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8027bc2:	f01a 0f01 	tst.w	sl, #1
 8027bc6:	5d14      	ldrb	r4, [r2, r4]
 8027bc8:	bf0c      	ite	eq
 8027bca:	f004 040f 	andeq.w	r4, r4, #15
 8027bce:	1124      	asrne	r4, r4, #4
 8027bd0:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8027bd4:	b2e4      	uxtb	r4, r4
 8027bd6:	3501      	adds	r5, #1
 8027bd8:	f100 808a 	bmi.w	8027cf0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8027bdc:	45a9      	cmp	r9, r5
 8027bde:	f340 8087 	ble.w	8027cf0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8027be2:	f1bc 0f00 	cmp.w	ip, #0
 8027be6:	f000 8086 	beq.w	8027cf6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8027bea:	2800      	cmp	r0, #0
 8027bec:	db7e      	blt.n	8027cec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8027bee:	4580      	cmp	r8, r0
 8027bf0:	dd7c      	ble.n	8027cec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8027bf2:	eb03 090e 	add.w	r9, r3, lr
 8027bf6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8027bfa:	f019 0f01 	tst.w	r9, #1
 8027bfe:	5d55      	ldrb	r5, [r2, r5]
 8027c00:	bf0c      	ite	eq
 8027c02:	f005 050f 	andeq.w	r5, r5, #15
 8027c06:	112d      	asrne	r5, r5, #4
 8027c08:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8027c0c:	b2ed      	uxtb	r5, r5
 8027c0e:	3001      	adds	r0, #1
 8027c10:	d474      	bmi.n	8027cfc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8027c12:	4580      	cmp	r8, r0
 8027c14:	dd72      	ble.n	8027cfc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8027c16:	2f00      	cmp	r7, #0
 8027c18:	d072      	beq.n	8027d00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8027c1a:	3301      	adds	r3, #1
 8027c1c:	449e      	add	lr, r3
 8027c1e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8027c22:	f01e 0f01 	tst.w	lr, #1
 8027c26:	5cd0      	ldrb	r0, [r2, r3]
 8027c28:	bf0c      	ite	eq
 8027c2a:	f000 000f 	andeq.w	r0, r0, #15
 8027c2e:	1100      	asrne	r0, r0, #4
 8027c30:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8027c34:	b2c3      	uxtb	r3, r0
 8027c36:	b2ba      	uxth	r2, r7
 8027c38:	fa1f fc8c 	uxth.w	ip, ip
 8027c3c:	fb02 f00c 	mul.w	r0, r2, ip
 8027c40:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8027c44:	0112      	lsls	r2, r2, #4
 8027c46:	fa1f fc8c 	uxth.w	ip, ip
 8027c4a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8027c4e:	1a12      	subs	r2, r2, r0
 8027c50:	eba7 070c 	sub.w	r7, r7, ip
 8027c54:	b292      	uxth	r2, r2
 8027c56:	b2bf      	uxth	r7, r7
 8027c58:	4362      	muls	r2, r4
 8027c5a:	fb06 2207 	mla	r2, r6, r7, r2
 8027c5e:	fb0c 2505 	mla	r5, ip, r5, r2
 8027c62:	fb00 5303 	mla	r3, r0, r3, r5
 8027c66:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027c6a:	b3a3      	cbz	r3, 8027cd6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8027c6c:	4a25      	ldr	r2, [pc, #148]	@ (8027d04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8027c6e:	880e      	ldrh	r6, [r1, #0]
 8027c70:	6815      	ldr	r5, [r2, #0]
 8027c72:	1234      	asrs	r4, r6, #8
 8027c74:	b29a      	uxth	r2, r3
 8027c76:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8027c7a:	43db      	mvns	r3, r3
 8027c7c:	b2db      	uxtb	r3, r3
 8027c7e:	fb10 f002 	smulbb	r0, r0, r2
 8027c82:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8027c86:	fb04 0403 	mla	r4, r4, r3, r0
 8027c8a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8027c8e:	10f0      	asrs	r0, r6, #3
 8027c90:	b2ed      	uxtb	r5, r5
 8027c92:	00f6      	lsls	r6, r6, #3
 8027c94:	fb17 f702 	smulbb	r7, r7, r2
 8027c98:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8027c9c:	fb15 f202 	smulbb	r2, r5, r2
 8027ca0:	b2f6      	uxtb	r6, r6
 8027ca2:	b2a4      	uxth	r4, r4
 8027ca4:	fb00 7003 	mla	r0, r0, r3, r7
 8027ca8:	fb06 2303 	mla	r3, r6, r3, r2
 8027cac:	b29a      	uxth	r2, r3
 8027cae:	1c63      	adds	r3, r4, #1
 8027cb0:	b280      	uxth	r0, r0
 8027cb2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8027cb6:	1c53      	adds	r3, r2, #1
 8027cb8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027cbc:	1c42      	adds	r2, r0, #1
 8027cbe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027cc2:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8027cc6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027cca:	0940      	lsrs	r0, r0, #5
 8027ccc:	4323      	orrs	r3, r4
 8027cce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8027cd2:	4303      	orrs	r3, r0
 8027cd4:	800b      	strh	r3, [r1, #0]
 8027cd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027cda:	2600      	movs	r6, #0
 8027cdc:	e764      	b.n	8027ba8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8027cde:	2400      	movs	r4, #0
 8027ce0:	4626      	mov	r6, r4
 8027ce2:	e778      	b.n	8027bd6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8027ce4:	2400      	movs	r4, #0
 8027ce6:	e776      	b.n	8027bd6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8027ce8:	463c      	mov	r4, r7
 8027cea:	e774      	b.n	8027bd6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8027cec:	2500      	movs	r5, #0
 8027cee:	e78e      	b.n	8027c0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8027cf0:	2300      	movs	r3, #0
 8027cf2:	461d      	mov	r5, r3
 8027cf4:	e79f      	b.n	8027c36 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027cf6:	4663      	mov	r3, ip
 8027cf8:	4665      	mov	r5, ip
 8027cfa:	e79c      	b.n	8027c36 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027cfc:	2300      	movs	r3, #0
 8027cfe:	e79a      	b.n	8027c36 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027d00:	463b      	mov	r3, r7
 8027d02:	e798      	b.n	8027c36 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027d04:	20013f5c 	.word	0x20013f5c

08027d08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027d0c:	b093      	sub	sp, #76	@ 0x4c
 8027d0e:	461d      	mov	r5, r3
 8027d10:	920c      	str	r2, [sp, #48]	@ 0x30
 8027d12:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8027d14:	9107      	str	r1, [sp, #28]
 8027d16:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8027d1a:	9011      	str	r0, [sp, #68]	@ 0x44
 8027d1c:	6850      	ldr	r0, [r2, #4]
 8027d1e:	6812      	ldr	r2, [r2, #0]
 8027d20:	fb00 1303 	mla	r3, r0, r3, r1
 8027d24:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8027d28:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027d2a:	689b      	ldr	r3, [r3, #8]
 8027d2c:	3301      	adds	r3, #1
 8027d2e:	f023 0301 	bic.w	r3, r3, #1
 8027d32:	9306      	str	r3, [sp, #24]
 8027d34:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027d36:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8027d3a:	681f      	ldr	r7, [r3, #0]
 8027d3c:	9b07      	ldr	r3, [sp, #28]
 8027d3e:	2b00      	cmp	r3, #0
 8027d40:	dc03      	bgt.n	8027d4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8027d42:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8027d44:	2b00      	cmp	r3, #0
 8027d46:	f340 8267 	ble.w	8028218 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8027d4a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027d4c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027d50:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027d54:	1e48      	subs	r0, r1, #1
 8027d56:	f102 3cff 	add.w	ip, r2, #4294967295
 8027d5a:	2d00      	cmp	r5, #0
 8027d5c:	f340 80b8 	ble.w	8027ed0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8027d60:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8027d64:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027d68:	d406      	bmi.n	8027d78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8027d6a:	4586      	cmp	lr, r0
 8027d6c:	da04      	bge.n	8027d78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8027d6e:	2b00      	cmp	r3, #0
 8027d70:	db02      	blt.n	8027d78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8027d72:	4563      	cmp	r3, ip
 8027d74:	f2c0 80ad 	blt.w	8027ed2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8027d78:	f11e 0e01 	adds.w	lr, lr, #1
 8027d7c:	f100 80a0 	bmi.w	8027ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8027d80:	4571      	cmp	r1, lr
 8027d82:	f2c0 809d 	blt.w	8027ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8027d86:	3301      	adds	r3, #1
 8027d88:	f100 809a 	bmi.w	8027ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8027d8c:	429a      	cmp	r2, r3
 8027d8e:	f2c0 8097 	blt.w	8027ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8027d92:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8027d96:	9509      	str	r5, [sp, #36]	@ 0x24
 8027d98:	46c8      	mov	r8, r9
 8027d9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027d9c:	2b00      	cmp	r3, #0
 8027d9e:	f340 80b6 	ble.w	8027f0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8027da2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8027da6:	9308      	str	r3, [sp, #32]
 8027da8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8027daa:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8027dae:	1423      	asrs	r3, r4, #16
 8027db0:	ea4f 4026 	mov.w	r0, r6, asr #16
 8027db4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8027db8:	f100 813e 	bmi.w	8028038 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8027dbc:	f10c 3bff 	add.w	fp, ip, #4294967295
 8027dc0:	455b      	cmp	r3, fp
 8027dc2:	f280 8139 	bge.w	8028038 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8027dc6:	2800      	cmp	r0, #0
 8027dc8:	f2c0 8136 	blt.w	8028038 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8027dcc:	f10e 3bff 	add.w	fp, lr, #4294967295
 8027dd0:	4558      	cmp	r0, fp
 8027dd2:	f280 8131 	bge.w	8028038 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8027dd6:	9a06      	ldr	r2, [sp, #24]
 8027dd8:	fb00 3302 	mla	r3, r0, r2, r3
 8027ddc:	0858      	lsrs	r0, r3, #1
 8027dde:	07da      	lsls	r2, r3, #31
 8027de0:	f817 c000 	ldrb.w	ip, [r7, r0]
 8027de4:	9a08      	ldr	r2, [sp, #32]
 8027de6:	bf54      	ite	pl
 8027de8:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027dec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027df0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027df4:	fa5f fc8c 	uxtb.w	ip, ip
 8027df8:	2a00      	cmp	r2, #0
 8027dfa:	f000 80cb 	beq.w	8027f94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8027dfe:	1c58      	adds	r0, r3, #1
 8027e00:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8027e04:	07c0      	lsls	r0, r0, #31
 8027e06:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8027e0a:	bf54      	ite	pl
 8027e0c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8027e10:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8027e14:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8027e18:	fa5f fe8e 	uxtb.w	lr, lr
 8027e1c:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8027e20:	b1b9      	cbz	r1, 8027e52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8027e22:	4453      	add	r3, sl
 8027e24:	0858      	lsrs	r0, r3, #1
 8027e26:	07da      	lsls	r2, r3, #31
 8027e28:	5c38      	ldrb	r0, [r7, r0]
 8027e2a:	bf54      	ite	pl
 8027e2c:	f000 000f 	andpl.w	r0, r0, #15
 8027e30:	1100      	asrmi	r0, r0, #4
 8027e32:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8027e36:	b2c0      	uxtb	r0, r0
 8027e38:	900a      	str	r0, [sp, #40]	@ 0x28
 8027e3a:	1c58      	adds	r0, r3, #1
 8027e3c:	0843      	lsrs	r3, r0, #1
 8027e3e:	07c2      	lsls	r2, r0, #31
 8027e40:	5cfb      	ldrb	r3, [r7, r3]
 8027e42:	bf54      	ite	pl
 8027e44:	f003 030f 	andpl.w	r3, r3, #15
 8027e48:	111b      	asrmi	r3, r3, #4
 8027e4a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027e4e:	b2db      	uxtb	r3, r3
 8027e50:	930e      	str	r3, [sp, #56]	@ 0x38
 8027e52:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8027e56:	b289      	uxth	r1, r1
 8027e58:	fb02 f301 	mul.w	r3, r2, r1
 8027e5c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8027e60:	0112      	lsls	r2, r2, #4
 8027e62:	b289      	uxth	r1, r1
 8027e64:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8027e68:	1a40      	subs	r0, r0, r1
 8027e6a:	fa1f fe80 	uxth.w	lr, r0
 8027e6e:	1ad2      	subs	r2, r2, r3
 8027e70:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8027e72:	b292      	uxth	r2, r2
 8027e74:	4342      	muls	r2, r0
 8027e76:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8027e7a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8027e7c:	fb01 c102 	mla	r1, r1, r2, ip
 8027e80:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8027e82:	fb03 1302 	mla	r3, r3, r2, r1
 8027e86:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027e8a:	2bff      	cmp	r3, #255	@ 0xff
 8027e8c:	f040 8093 	bne.w	8027fb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8027e90:	4bbe      	ldr	r3, [pc, #760]	@ (802818c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027e92:	681a      	ldr	r2, [r3, #0]
 8027e94:	4bbe      	ldr	r3, [pc, #760]	@ (8028190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8027e96:	0951      	lsrs	r1, r2, #5
 8027e98:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8027e9c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8027ea0:	430b      	orrs	r3, r1
 8027ea2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027ea6:	4313      	orrs	r3, r2
 8027ea8:	f8a8 3000 	strh.w	r3, [r8]
 8027eac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8027eae:	441c      	add	r4, r3
 8027eb0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8027eb2:	441e      	add	r6, r3
 8027eb4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027eb6:	3b01      	subs	r3, #1
 8027eb8:	f108 0802 	add.w	r8, r8, #2
 8027ebc:	9309      	str	r3, [sp, #36]	@ 0x24
 8027ebe:	e76c      	b.n	8027d9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027ec0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8027ec2:	441c      	add	r4, r3
 8027ec4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8027ec6:	3d01      	subs	r5, #1
 8027ec8:	441e      	add	r6, r3
 8027eca:	f109 0902 	add.w	r9, r9, #2
 8027ece:	e744      	b.n	8027d5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8027ed0:	d021      	beq.n	8027f16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8027ed2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8027ed4:	1e6b      	subs	r3, r5, #1
 8027ed6:	fb00 4003 	mla	r0, r0, r3, r4
 8027eda:	1400      	asrs	r0, r0, #16
 8027edc:	f53f af59 	bmi.w	8027d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027ee0:	3901      	subs	r1, #1
 8027ee2:	4288      	cmp	r0, r1
 8027ee4:	f6bf af55 	bge.w	8027d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027ee8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8027eea:	fb01 6303 	mla	r3, r1, r3, r6
 8027eee:	141b      	asrs	r3, r3, #16
 8027ef0:	f53f af4f 	bmi.w	8027d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027ef4:	3a01      	subs	r2, #1
 8027ef6:	4293      	cmp	r3, r2
 8027ef8:	f6bf af4b 	bge.w	8027d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027efc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8027f00:	9308      	str	r3, [sp, #32]
 8027f02:	46a8      	mov	r8, r5
 8027f04:	46ce      	mov	lr, r9
 8027f06:	f1b8 0f00 	cmp.w	r8, #0
 8027f0a:	f300 80b5 	bgt.w	8028078 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8027f0e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8027f12:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8027f16:	9b07      	ldr	r3, [sp, #28]
 8027f18:	2b00      	cmp	r3, #0
 8027f1a:	f340 817d 	ble.w	8028218 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8027f1e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027f22:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8027f26:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027f2a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8027f2c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027f30:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027f34:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027f38:	eef0 6a62 	vmov.f32	s13, s5
 8027f3c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027f40:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027f44:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027f48:	ee16 4a90 	vmov	r4, s13
 8027f4c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027f50:	eef0 6a43 	vmov.f32	s13, s6
 8027f54:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027f58:	ee12 2a90 	vmov	r2, s5
 8027f5c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027f60:	fb92 f3f3 	sdiv	r3, r2, r3
 8027f64:	ee13 2a10 	vmov	r2, s6
 8027f68:	931f      	str	r3, [sp, #124]	@ 0x7c
 8027f6a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8027f6c:	fb92 f3f3 	sdiv	r3, r2, r3
 8027f70:	9320      	str	r3, [sp, #128]	@ 0x80
 8027f72:	9b07      	ldr	r3, [sp, #28]
 8027f74:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8027f76:	3b01      	subs	r3, #1
 8027f78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027f7c:	9307      	str	r3, [sp, #28]
 8027f7e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8027f80:	ee16 6a90 	vmov	r6, s13
 8027f84:	bf14      	ite	ne
 8027f86:	461d      	movne	r5, r3
 8027f88:	4615      	moveq	r5, r2
 8027f8a:	eeb0 3a67 	vmov.f32	s6, s15
 8027f8e:	eef0 2a47 	vmov.f32	s5, s14
 8027f92:	e6d3      	b.n	8027d3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8027f94:	2900      	cmp	r1, #0
 8027f96:	f43f af5c 	beq.w	8027e52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8027f9a:	eb0a 0003 	add.w	r0, sl, r3
 8027f9e:	0843      	lsrs	r3, r0, #1
 8027fa0:	07c0      	lsls	r0, r0, #31
 8027fa2:	5cfb      	ldrb	r3, [r7, r3]
 8027fa4:	bf54      	ite	pl
 8027fa6:	f003 030f 	andpl.w	r3, r3, #15
 8027faa:	111b      	asrmi	r3, r3, #4
 8027fac:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027fb0:	b2db      	uxtb	r3, r3
 8027fb2:	930a      	str	r3, [sp, #40]	@ 0x28
 8027fb4:	e74d      	b.n	8027e52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8027fb6:	2b00      	cmp	r3, #0
 8027fb8:	f43f af78 	beq.w	8027eac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027fbc:	4a73      	ldr	r2, [pc, #460]	@ (802818c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027fbe:	f8b8 c000 	ldrh.w	ip, [r8]
 8027fc2:	6810      	ldr	r0, [r2, #0]
 8027fc4:	fa1f fe83 	uxth.w	lr, r3
 8027fc8:	ea4f 212c 	mov.w	r1, ip, asr #8
 8027fcc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8027fd0:	43db      	mvns	r3, r3
 8027fd2:	b2db      	uxtb	r3, r3
 8027fd4:	fb12 f20e 	smulbb	r2, r2, lr
 8027fd8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8027fdc:	fb01 2103 	mla	r1, r1, r3, r2
 8027fe0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8027fe4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8027fe8:	b2c0      	uxtb	r0, r0
 8027fea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8027fee:	fb1b fb0e 	smulbb	fp, fp, lr
 8027ff2:	b289      	uxth	r1, r1
 8027ff4:	fb10 fe0e 	smulbb	lr, r0, lr
 8027ff8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8027ffc:	fa5f fc8c 	uxtb.w	ip, ip
 8028000:	fb02 b203 	mla	r2, r2, r3, fp
 8028004:	1c48      	adds	r0, r1, #1
 8028006:	fb0c e303 	mla	r3, ip, r3, lr
 802800a:	b292      	uxth	r2, r2
 802800c:	b29b      	uxth	r3, r3
 802800e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8028012:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8028016:	f102 0b01 	add.w	fp, r2, #1
 802801a:	1c59      	adds	r1, r3, #1
 802801c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8028020:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028024:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028028:	0952      	lsrs	r2, r2, #5
 802802a:	4301      	orrs	r1, r0
 802802c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028030:	4311      	orrs	r1, r2
 8028032:	f8a8 1000 	strh.w	r1, [r8]
 8028036:	e739      	b.n	8027eac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028038:	f113 0b01 	adds.w	fp, r3, #1
 802803c:	f53f af36 	bmi.w	8027eac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028040:	45dc      	cmp	ip, fp
 8028042:	f6ff af33 	blt.w	8027eac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028046:	f110 0b01 	adds.w	fp, r0, #1
 802804a:	f53f af2f 	bmi.w	8027eac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802804e:	45de      	cmp	lr, fp
 8028050:	f6ff af2c 	blt.w	8027eac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028054:	9a08      	ldr	r2, [sp, #32]
 8028056:	9302      	str	r3, [sp, #8]
 8028058:	fa0f f38e 	sxth.w	r3, lr
 802805c:	9301      	str	r3, [sp, #4]
 802805e:	fa0f f38c 	sxth.w	r3, ip
 8028062:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028066:	9105      	str	r1, [sp, #20]
 8028068:	9300      	str	r3, [sp, #0]
 802806a:	463a      	mov	r2, r7
 802806c:	4653      	mov	r3, sl
 802806e:	4641      	mov	r1, r8
 8028070:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8028072:	f7ff fd73 	bl	8027b5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8028076:	e719      	b.n	8027eac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028078:	9906      	ldr	r1, [sp, #24]
 802807a:	1422      	asrs	r2, r4, #16
 802807c:	1433      	asrs	r3, r6, #16
 802807e:	fb01 2303 	mla	r3, r1, r3, r2
 8028082:	085a      	lsrs	r2, r3, #1
 8028084:	07d9      	lsls	r1, r3, #31
 8028086:	5cba      	ldrb	r2, [r7, r2]
 8028088:	bf54      	ite	pl
 802808a:	f002 020f 	andpl.w	r2, r2, #15
 802808e:	1112      	asrmi	r2, r2, #4
 8028090:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028094:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8028098:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802809c:	b2d2      	uxtb	r2, r2
 802809e:	2800      	cmp	r0, #0
 80280a0:	d062      	beq.n	8028168 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80280a2:	f103 0a01 	add.w	sl, r3, #1
 80280a6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80280aa:	f01a 0f01 	tst.w	sl, #1
 80280ae:	5c79      	ldrb	r1, [r7, r1]
 80280b0:	bf0c      	ite	eq
 80280b2:	f001 010f 	andeq.w	r1, r1, #15
 80280b6:	1109      	asrne	r1, r1, #4
 80280b8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80280bc:	b2c9      	uxtb	r1, r1
 80280be:	910f      	str	r1, [sp, #60]	@ 0x3c
 80280c0:	f1bc 0f00 	cmp.w	ip, #0
 80280c4:	d019      	beq.n	80280fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80280c6:	9908      	ldr	r1, [sp, #32]
 80280c8:	440b      	add	r3, r1
 80280ca:	0859      	lsrs	r1, r3, #1
 80280cc:	f013 0f01 	tst.w	r3, #1
 80280d0:	5c79      	ldrb	r1, [r7, r1]
 80280d2:	bf0c      	ite	eq
 80280d4:	f001 010f 	andeq.w	r1, r1, #15
 80280d8:	1109      	asrne	r1, r1, #4
 80280da:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80280de:	b2c9      	uxtb	r1, r1
 80280e0:	3301      	adds	r3, #1
 80280e2:	910b      	str	r1, [sp, #44]	@ 0x2c
 80280e4:	0859      	lsrs	r1, r3, #1
 80280e6:	07db      	lsls	r3, r3, #31
 80280e8:	5c79      	ldrb	r1, [r7, r1]
 80280ea:	bf54      	ite	pl
 80280ec:	f001 010f 	andpl.w	r1, r1, #15
 80280f0:	1109      	asrmi	r1, r1, #4
 80280f2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80280f6:	b2c9      	uxtb	r1, r1
 80280f8:	9110      	str	r1, [sp, #64]	@ 0x40
 80280fa:	b280      	uxth	r0, r0
 80280fc:	fa1f fc8c 	uxth.w	ip, ip
 8028100:	fb00 f30c 	mul.w	r3, r0, ip
 8028104:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8028108:	0100      	lsls	r0, r0, #4
 802810a:	fa1f fc8c 	uxth.w	ip, ip
 802810e:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8028112:	eba1 010c 	sub.w	r1, r1, ip
 8028116:	fa1f fa81 	uxth.w	sl, r1
 802811a:	1ac0      	subs	r0, r0, r3
 802811c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802811e:	b280      	uxth	r0, r0
 8028120:	4348      	muls	r0, r1
 8028122:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8028124:	fb02 020a 	mla	r2, r2, sl, r0
 8028128:	fb0c 2c01 	mla	ip, ip, r1, r2
 802812c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802812e:	fb03 c302 	mla	r3, r3, r2, ip
 8028132:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028136:	2bff      	cmp	r3, #255	@ 0xff
 8028138:	d12c      	bne.n	8028194 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802813a:	4b14      	ldr	r3, [pc, #80]	@ (802818c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802813c:	681a      	ldr	r2, [r3, #0]
 802813e:	4b14      	ldr	r3, [pc, #80]	@ (8028190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8028140:	0951      	lsrs	r1, r2, #5
 8028142:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028146:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802814a:	430b      	orrs	r3, r1
 802814c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028150:	4313      	orrs	r3, r2
 8028152:	f8ae 3000 	strh.w	r3, [lr]
 8028156:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8028158:	441c      	add	r4, r3
 802815a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802815c:	f10e 0e02 	add.w	lr, lr, #2
 8028160:	441e      	add	r6, r3
 8028162:	f108 38ff 	add.w	r8, r8, #4294967295
 8028166:	e6ce      	b.n	8027f06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8028168:	f1bc 0f00 	cmp.w	ip, #0
 802816c:	d0c5      	beq.n	80280fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802816e:	9908      	ldr	r1, [sp, #32]
 8028170:	440b      	add	r3, r1
 8028172:	0859      	lsrs	r1, r3, #1
 8028174:	07db      	lsls	r3, r3, #31
 8028176:	5c79      	ldrb	r1, [r7, r1]
 8028178:	bf54      	ite	pl
 802817a:	f001 010f 	andpl.w	r1, r1, #15
 802817e:	1109      	asrmi	r1, r1, #4
 8028180:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028184:	b2c9      	uxtb	r1, r1
 8028186:	910b      	str	r1, [sp, #44]	@ 0x2c
 8028188:	e7b7      	b.n	80280fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802818a:	bf00      	nop
 802818c:	20013f5c 	.word	0x20013f5c
 8028190:	fffff800 	.word	0xfffff800
 8028194:	2b00      	cmp	r3, #0
 8028196:	d0de      	beq.n	8028156 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8028198:	4a21      	ldr	r2, [pc, #132]	@ (8028220 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802819a:	f8be c000 	ldrh.w	ip, [lr]
 802819e:	6810      	ldr	r0, [r2, #0]
 80281a0:	fa1f fa83 	uxth.w	sl, r3
 80281a4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80281a8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80281ac:	43db      	mvns	r3, r3
 80281ae:	b2db      	uxtb	r3, r3
 80281b0:	fb12 f20a 	smulbb	r2, r2, sl
 80281b4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80281b8:	fb01 2103 	mla	r1, r1, r3, r2
 80281bc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80281c0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80281c4:	b2c0      	uxtb	r0, r0
 80281c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80281ca:	fa5f fc8c 	uxtb.w	ip, ip
 80281ce:	fb10 f00a 	smulbb	r0, r0, sl
 80281d2:	fb0c 0003 	mla	r0, ip, r3, r0
 80281d6:	b289      	uxth	r1, r1
 80281d8:	fb1b fb0a 	smulbb	fp, fp, sl
 80281dc:	b280      	uxth	r0, r0
 80281de:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80281e2:	fb02 b203 	mla	r2, r2, r3, fp
 80281e6:	1c4b      	adds	r3, r1, #1
 80281e8:	f100 0b01 	add.w	fp, r0, #1
 80281ec:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80281f0:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80281f4:	b292      	uxth	r2, r2
 80281f6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80281fa:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80281fe:	ea4b 0101 	orr.w	r1, fp, r1
 8028202:	f102 0b01 	add.w	fp, r2, #1
 8028206:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802820a:	0952      	lsrs	r2, r2, #5
 802820c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028210:	4311      	orrs	r1, r2
 8028212:	f8ae 1000 	strh.w	r1, [lr]
 8028216:	e79e      	b.n	8028156 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8028218:	b013      	add	sp, #76	@ 0x4c
 802821a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802821e:	bf00      	nop
 8028220:	20013f5c 	.word	0x20013f5c

08028224 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8028224:	b570      	push	{r4, r5, r6, lr}
 8028226:	1208      	asrs	r0, r1, #8
 8028228:	b29e      	uxth	r6, r3
 802822a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802822e:	1213      	asrs	r3, r2, #8
 8028230:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8028234:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8028238:	fb13 f305 	smulbb	r3, r3, r5
 802823c:	fb10 f006 	smulbb	r0, r0, r6
 8028240:	4418      	add	r0, r3
 8028242:	10cc      	asrs	r4, r1, #3
 8028244:	10d3      	asrs	r3, r2, #3
 8028246:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802824a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802824e:	fb13 f305 	smulbb	r3, r3, r5
 8028252:	fb14 f406 	smulbb	r4, r4, r6
 8028256:	00c9      	lsls	r1, r1, #3
 8028258:	00d2      	lsls	r2, r2, #3
 802825a:	441c      	add	r4, r3
 802825c:	b2d2      	uxtb	r2, r2
 802825e:	b2cb      	uxtb	r3, r1
 8028260:	fb12 f205 	smulbb	r2, r2, r5
 8028264:	b280      	uxth	r0, r0
 8028266:	fb13 f306 	smulbb	r3, r3, r6
 802826a:	4413      	add	r3, r2
 802826c:	1c42      	adds	r2, r0, #1
 802826e:	b29b      	uxth	r3, r3
 8028270:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028274:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8028278:	1c58      	adds	r0, r3, #1
 802827a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802827e:	b2a4      	uxth	r4, r4
 8028280:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028284:	4310      	orrs	r0, r2
 8028286:	1c62      	adds	r2, r4, #1
 8028288:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802828c:	0964      	lsrs	r4, r4, #5
 802828e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8028292:	4320      	orrs	r0, r4
 8028294:	bd70      	pop	{r4, r5, r6, pc}
	...

08028298 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8028298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802829c:	b08f      	sub	sp, #60	@ 0x3c
 802829e:	461c      	mov	r4, r3
 80282a0:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80282a4:	9004      	str	r0, [sp, #16]
 80282a6:	460d      	mov	r5, r1
 80282a8:	4616      	mov	r6, r2
 80282aa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80282ac:	2f00      	cmp	r7, #0
 80282ae:	f000 80f6 	beq.w	802849e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80282b2:	6820      	ldr	r0, [r4, #0]
 80282b4:	6861      	ldr	r1, [r4, #4]
 80282b6:	aa0a      	add	r2, sp, #40	@ 0x28
 80282b8:	c203      	stmia	r2!, {r0, r1}
 80282ba:	6818      	ldr	r0, [r3, #0]
 80282bc:	6859      	ldr	r1, [r3, #4]
 80282be:	aa0c      	add	r2, sp, #48	@ 0x30
 80282c0:	c203      	stmia	r2!, {r0, r1}
 80282c2:	a80a      	add	r0, sp, #40	@ 0x28
 80282c4:	f7ee f9d2 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80282c8:	4621      	mov	r1, r4
 80282ca:	a80c      	add	r0, sp, #48	@ 0x30
 80282cc:	f7ee f9f6 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80282d0:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80282d4:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80282d8:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80282dc:	f002 0301 	and.w	r3, r2, #1
 80282e0:	9306      	str	r3, [sp, #24]
 80282e2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80282e6:	f003 0101 	and.w	r1, r3, #1
 80282ea:	9105      	str	r1, [sp, #20]
 80282ec:	9805      	ldr	r0, [sp, #20]
 80282ee:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80282f2:	4403      	add	r3, r0
 80282f4:	fb01 2303 	mla	r3, r1, r3, r2
 80282f8:	f04f 0802 	mov.w	r8, #2
 80282fc:	fb93 f3f8 	sdiv	r3, r3, r8
 8028300:	441d      	add	r5, r3
 8028302:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8028306:	441a      	add	r2, r3
 8028308:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802830c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8028310:	4419      	add	r1, r3
 8028312:	4b64      	ldr	r3, [pc, #400]	@ (80284a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8028314:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8028318:	6818      	ldr	r0, [r3, #0]
 802831a:	6803      	ldr	r3, [r0, #0]
 802831c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802831e:	4798      	blx	r3
 8028320:	4a61      	ldr	r2, [pc, #388]	@ (80284a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8028322:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8028326:	8813      	ldrh	r3, [r2, #0]
 8028328:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 802832c:	2fff      	cmp	r7, #255	@ 0xff
 802832e:	fb03 a404 	mla	r4, r3, r4, sl
 8028332:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8028336:	f106 0604 	add.w	r6, r6, #4
 802833a:	4611      	mov	r1, r2
 802833c:	fb03 fb0b 	mul.w	fp, r3, fp
 8028340:	d06b      	beq.n	802841a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8028342:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 8028346:	9303      	str	r3, [sp, #12]
 8028348:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802834c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8028350:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8028354:	9b07      	ldr	r3, [sp, #28]
 8028356:	42a3      	cmp	r3, r4
 8028358:	f240 809c 	bls.w	8028494 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802835c:	9b06      	ldr	r3, [sp, #24]
 802835e:	2b00      	cmp	r3, #0
 8028360:	d039      	beq.n	80283d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8028362:	782b      	ldrb	r3, [r5, #0]
 8028364:	8822      	ldrh	r2, [r4, #0]
 8028366:	9804      	ldr	r0, [sp, #16]
 8028368:	f003 030f 	and.w	r3, r3, #15
 802836c:	f105 0801 	add.w	r8, r5, #1
 8028370:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8028374:	9b03      	ldr	r3, [sp, #12]
 8028376:	9300      	str	r3, [sp, #0]
 8028378:	463b      	mov	r3, r7
 802837a:	f7ff ff53 	bl	8028224 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802837e:	f824 0b02 	strh.w	r0, [r4], #2
 8028382:	f109 3bff 	add.w	fp, r9, #4294967295
 8028386:	f1bb 0f01 	cmp.w	fp, #1
 802838a:	46a2      	mov	sl, r4
 802838c:	f104 0404 	add.w	r4, r4, #4
 8028390:	dd24      	ble.n	80283dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8028392:	f898 3000 	ldrb.w	r3, [r8]
 8028396:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802839a:	9804      	ldr	r0, [sp, #16]
 802839c:	091b      	lsrs	r3, r3, #4
 802839e:	f1ab 0b02 	sub.w	fp, fp, #2
 80283a2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80283a6:	9b03      	ldr	r3, [sp, #12]
 80283a8:	9300      	str	r3, [sp, #0]
 80283aa:	463b      	mov	r3, r7
 80283ac:	f7ff ff3a 	bl	8028224 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80283b0:	f824 0c04 	strh.w	r0, [r4, #-4]
 80283b4:	f818 3b01 	ldrb.w	r3, [r8], #1
 80283b8:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80283bc:	9804      	ldr	r0, [sp, #16]
 80283be:	f003 030f 	and.w	r3, r3, #15
 80283c2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80283c6:	9b03      	ldr	r3, [sp, #12]
 80283c8:	9300      	str	r3, [sp, #0]
 80283ca:	463b      	mov	r3, r7
 80283cc:	f7ff ff2a 	bl	8028224 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80283d0:	f824 0c02 	strh.w	r0, [r4, #-2]
 80283d4:	e7d7      	b.n	8028386 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80283d6:	46a8      	mov	r8, r5
 80283d8:	46cb      	mov	fp, r9
 80283da:	e7d4      	b.n	8028386 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80283dc:	d10e      	bne.n	80283fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80283de:	f898 3000 	ldrb.w	r3, [r8]
 80283e2:	f8ba 2000 	ldrh.w	r2, [sl]
 80283e6:	9804      	ldr	r0, [sp, #16]
 80283e8:	091b      	lsrs	r3, r3, #4
 80283ea:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80283ee:	9b03      	ldr	r3, [sp, #12]
 80283f0:	9300      	str	r3, [sp, #0]
 80283f2:	463b      	mov	r3, r7
 80283f4:	f7ff ff16 	bl	8028224 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80283f8:	f82a 0b02 	strh.w	r0, [sl], #2
 80283fc:	9b08      	ldr	r3, [sp, #32]
 80283fe:	9a05      	ldr	r2, [sp, #20]
 8028400:	881c      	ldrh	r4, [r3, #0]
 8028402:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028406:	eba4 0409 	sub.w	r4, r4, r9
 802840a:	4413      	add	r3, r2
 802840c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8028410:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8028412:	fb93 f3f2 	sdiv	r3, r3, r2
 8028416:	441d      	add	r5, r3
 8028418:	e79c      	b.n	8028354 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802841a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802841e:	45a3      	cmp	fp, r4
 8028420:	d938      	bls.n	8028494 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8028422:	9b06      	ldr	r3, [sp, #24]
 8028424:	b1f3      	cbz	r3, 8028464 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8028426:	782b      	ldrb	r3, [r5, #0]
 8028428:	f003 030f 	and.w	r3, r3, #15
 802842c:	1c6a      	adds	r2, r5, #1
 802842e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8028432:	8023      	strh	r3, [r4, #0]
 8028434:	f109 30ff 	add.w	r0, r9, #4294967295
 8028438:	3402      	adds	r4, #2
 802843a:	2801      	cmp	r0, #1
 802843c:	4623      	mov	r3, r4
 802843e:	f104 0404 	add.w	r4, r4, #4
 8028442:	dd12      	ble.n	802846a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8028444:	7813      	ldrb	r3, [r2, #0]
 8028446:	091b      	lsrs	r3, r3, #4
 8028448:	3802      	subs	r0, #2
 802844a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802844e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8028452:	f812 3b01 	ldrb.w	r3, [r2], #1
 8028456:	f003 030f 	and.w	r3, r3, #15
 802845a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802845e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8028462:	e7ea      	b.n	802843a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8028464:	462a      	mov	r2, r5
 8028466:	4648      	mov	r0, r9
 8028468:	e7e7      	b.n	802843a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802846a:	d106      	bne.n	802847a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 802846c:	7812      	ldrb	r2, [r2, #0]
 802846e:	0912      	lsrs	r2, r2, #4
 8028470:	3302      	adds	r3, #2
 8028472:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8028476:	f823 2c02 	strh.w	r2, [r3, #-2]
 802847a:	880c      	ldrh	r4, [r1, #0]
 802847c:	9a05      	ldr	r2, [sp, #20]
 802847e:	eba4 0409 	sub.w	r4, r4, r9
 8028482:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8028486:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802848a:	4413      	add	r3, r2
 802848c:	fb93 f3f8 	sdiv	r3, r3, r8
 8028490:	441d      	add	r5, r3
 8028492:	e7c4      	b.n	802841e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8028494:	4b03      	ldr	r3, [pc, #12]	@ (80284a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8028496:	6818      	ldr	r0, [r3, #0]
 8028498:	6803      	ldr	r3, [r0, #0]
 802849a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802849c:	4798      	blx	r3
 802849e:	b00f      	add	sp, #60	@ 0x3c
 80284a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80284a4:	20013f4c 	.word	0x20013f4c
 80284a8:	20013f46 	.word	0x20013f46

080284ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80284ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80284ae:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80284b2:	2dff      	cmp	r5, #255	@ 0xff
 80284b4:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80284b8:	d10c      	bne.n	80284d4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80284ba:	2bff      	cmp	r3, #255	@ 0xff
 80284bc:	d10a      	bne.n	80284d4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80284be:	4b25      	ldr	r3, [pc, #148]	@ (8028554 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80284c0:	0948      	lsrs	r0, r1, #5
 80284c2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80284c6:	403b      	ands	r3, r7
 80284c8:	4318      	orrs	r0, r3
 80284ca:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80284ce:	4308      	orrs	r0, r1
 80284d0:	b280      	uxth	r0, r0
 80284d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80284d4:	fb15 f503 	smulbb	r5, r5, r3
 80284d8:	b2ab      	uxth	r3, r5
 80284da:	1c5d      	adds	r5, r3, #1
 80284dc:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80284e0:	1214      	asrs	r4, r2, #8
 80284e2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80284e6:	fa1f fc85 	uxth.w	ip, r5
 80284ea:	10d6      	asrs	r6, r2, #3
 80284ec:	00d0      	lsls	r0, r2, #3
 80284ee:	43ed      	mvns	r5, r5
 80284f0:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80284f4:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80284f8:	b2eb      	uxtb	r3, r5
 80284fa:	b2c0      	uxtb	r0, r0
 80284fc:	fb12 f20c 	smulbb	r2, r2, ip
 8028500:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8028504:	fb04 2403 	mla	r4, r4, r3, r2
 8028508:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802850c:	b2c8      	uxtb	r0, r1
 802850e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8028512:	b2fd      	uxtb	r5, r7
 8028514:	fb10 f00c 	smulbb	r0, r0, ip
 8028518:	b2a4      	uxth	r4, r4
 802851a:	fb02 0003 	mla	r0, r2, r3, r0
 802851e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8028522:	fb15 f50c 	smulbb	r5, r5, ip
 8028526:	fb06 5503 	mla	r5, r6, r3, r5
 802852a:	b283      	uxth	r3, r0
 802852c:	1c60      	adds	r0, r4, #1
 802852e:	b2ad      	uxth	r5, r5
 8028530:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8028534:	1c58      	adds	r0, r3, #1
 8028536:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802853a:	1c6b      	adds	r3, r5, #1
 802853c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8028540:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8028544:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028548:	096d      	lsrs	r5, r5, #5
 802854a:	4320      	orrs	r0, r4
 802854c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8028550:	4328      	orrs	r0, r5
 8028552:	e7be      	b.n	80284d2 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8028554:	00fff800 	.word	0x00fff800

08028558 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8028558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802855c:	461c      	mov	r4, r3
 802855e:	b08d      	sub	sp, #52	@ 0x34
 8028560:	460d      	mov	r5, r1
 8028562:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8028564:	6861      	ldr	r1, [r4, #4]
 8028566:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 802856a:	4680      	mov	r8, r0
 802856c:	6820      	ldr	r0, [r4, #0]
 802856e:	4616      	mov	r6, r2
 8028570:	aa08      	add	r2, sp, #32
 8028572:	c203      	stmia	r2!, {r0, r1}
 8028574:	6818      	ldr	r0, [r3, #0]
 8028576:	6859      	ldr	r1, [r3, #4]
 8028578:	aa0a      	add	r2, sp, #40	@ 0x28
 802857a:	c203      	stmia	r2!, {r0, r1}
 802857c:	a808      	add	r0, sp, #32
 802857e:	f7ee f875 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028582:	4621      	mov	r1, r4
 8028584:	a80a      	add	r0, sp, #40	@ 0x28
 8028586:	f7ee f899 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802858a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 802858e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8028592:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8028596:	f002 0301 	and.w	r3, r2, #1
 802859a:	9303      	str	r3, [sp, #12]
 802859c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80285a0:	f003 0101 	and.w	r1, r3, #1
 80285a4:	9102      	str	r1, [sp, #8]
 80285a6:	9802      	ldr	r0, [sp, #8]
 80285a8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80285ac:	4403      	add	r3, r0
 80285ae:	fb01 2303 	mla	r3, r1, r3, r2
 80285b2:	f04f 0a02 	mov.w	sl, #2
 80285b6:	fb93 f3fa 	sdiv	r3, r3, sl
 80285ba:	441d      	add	r5, r3
 80285bc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80285c0:	441a      	add	r2, r3
 80285c2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80285c6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80285ca:	4a3f      	ldr	r2, [pc, #252]	@ (80286c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80285cc:	9205      	str	r2, [sp, #20]
 80285ce:	4419      	add	r1, r3
 80285d0:	6810      	ldr	r0, [r2, #0]
 80285d2:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 80285d6:	6803      	ldr	r3, [r0, #0]
 80285d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80285da:	4798      	blx	r3
 80285dc:	4b3b      	ldr	r3, [pc, #236]	@ (80286cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80285de:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 80285e2:	8819      	ldrh	r1, [r3, #0]
 80285e4:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 80285e8:	fb01 c404 	mla	r4, r1, r4, ip
 80285ec:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80285f0:	434f      	muls	r7, r1
 80285f2:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80285f6:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80285fa:	3604      	adds	r6, #4
 80285fc:	9204      	str	r2, [sp, #16]
 80285fe:	9b04      	ldr	r3, [sp, #16]
 8028600:	429c      	cmp	r4, r3
 8028602:	d258      	bcs.n	80286b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8028604:	9b03      	ldr	r3, [sp, #12]
 8028606:	2b00      	cmp	r3, #0
 8028608:	d034      	beq.n	8028674 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802860a:	782b      	ldrb	r3, [r5, #0]
 802860c:	f003 030f 	and.w	r3, r3, #15
 8028610:	1c6f      	adds	r7, r5, #1
 8028612:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8028616:	0e0b      	lsrs	r3, r1, #24
 8028618:	d006      	beq.n	8028628 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802861a:	8822      	ldrh	r2, [r4, #0]
 802861c:	9300      	str	r3, [sp, #0]
 802861e:	4640      	mov	r0, r8
 8028620:	464b      	mov	r3, r9
 8028622:	f7ff ff43 	bl	80284ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8028626:	8020      	strh	r0, [r4, #0]
 8028628:	3402      	adds	r4, #2
 802862a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802862e:	f1ba 0f01 	cmp.w	sl, #1
 8028632:	dd22      	ble.n	802867a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8028634:	783b      	ldrb	r3, [r7, #0]
 8028636:	091b      	lsrs	r3, r3, #4
 8028638:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802863c:	0e0b      	lsrs	r3, r1, #24
 802863e:	d006      	beq.n	802864e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8028640:	8822      	ldrh	r2, [r4, #0]
 8028642:	9300      	str	r3, [sp, #0]
 8028644:	4640      	mov	r0, r8
 8028646:	464b      	mov	r3, r9
 8028648:	f7ff ff30 	bl	80284ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802864c:	8020      	strh	r0, [r4, #0]
 802864e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8028652:	f003 030f 	and.w	r3, r3, #15
 8028656:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802865a:	0e0b      	lsrs	r3, r1, #24
 802865c:	d006      	beq.n	802866c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802865e:	8862      	ldrh	r2, [r4, #2]
 8028660:	9300      	str	r3, [sp, #0]
 8028662:	4640      	mov	r0, r8
 8028664:	464b      	mov	r3, r9
 8028666:	f7ff ff21 	bl	80284ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802866a:	8060      	strh	r0, [r4, #2]
 802866c:	3404      	adds	r4, #4
 802866e:	f1aa 0a02 	sub.w	sl, sl, #2
 8028672:	e7dc      	b.n	802862e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8028674:	462f      	mov	r7, r5
 8028676:	46da      	mov	sl, fp
 8028678:	e7d9      	b.n	802862e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802867a:	d10d      	bne.n	8028698 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 802867c:	783b      	ldrb	r3, [r7, #0]
 802867e:	091b      	lsrs	r3, r3, #4
 8028680:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8028684:	0e0b      	lsrs	r3, r1, #24
 8028686:	d006      	beq.n	8028696 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8028688:	8822      	ldrh	r2, [r4, #0]
 802868a:	9300      	str	r3, [sp, #0]
 802868c:	4640      	mov	r0, r8
 802868e:	464b      	mov	r3, r9
 8028690:	f7ff ff0c 	bl	80284ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8028694:	8020      	strh	r0, [r4, #0]
 8028696:	3402      	adds	r4, #2
 8028698:	9b06      	ldr	r3, [sp, #24]
 802869a:	9a02      	ldr	r2, [sp, #8]
 802869c:	881b      	ldrh	r3, [r3, #0]
 802869e:	eba3 030b 	sub.w	r3, r3, fp
 80286a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80286a6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80286aa:	4413      	add	r3, r2
 80286ac:	9a07      	ldr	r2, [sp, #28]
 80286ae:	fb93 f3f2 	sdiv	r3, r3, r2
 80286b2:	441d      	add	r5, r3
 80286b4:	e7a3      	b.n	80285fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80286b6:	9b05      	ldr	r3, [sp, #20]
 80286b8:	6818      	ldr	r0, [r3, #0]
 80286ba:	6803      	ldr	r3, [r0, #0]
 80286bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80286be:	4798      	blx	r3
 80286c0:	b00d      	add	sp, #52	@ 0x34
 80286c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80286c6:	bf00      	nop
 80286c8:	20013f4c 	.word	0x20013f4c
 80286cc:	20013f46 	.word	0x20013f46

080286d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80286d0:	b570      	push	{r4, r5, r6, lr}
 80286d2:	1214      	asrs	r4, r2, #8
 80286d4:	788d      	ldrb	r5, [r1, #2]
 80286d6:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80286da:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80286de:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80286e2:	fb15 f503 	smulbb	r5, r5, r3
 80286e6:	fb04 5506 	mla	r5, r4, r6, r5
 80286ea:	10d0      	asrs	r0, r2, #3
 80286ec:	784c      	ldrb	r4, [r1, #1]
 80286ee:	7809      	ldrb	r1, [r1, #0]
 80286f0:	00d2      	lsls	r2, r2, #3
 80286f2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80286f6:	b2d2      	uxtb	r2, r2
 80286f8:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80286fc:	fb14 f403 	smulbb	r4, r4, r3
 8028700:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8028704:	fb11 f303 	smulbb	r3, r1, r3
 8028708:	fb00 4406 	mla	r4, r0, r6, r4
 802870c:	fb02 3306 	mla	r3, r2, r6, r3
 8028710:	b2ad      	uxth	r5, r5
 8028712:	b29b      	uxth	r3, r3
 8028714:	b2a4      	uxth	r4, r4
 8028716:	1c68      	adds	r0, r5, #1
 8028718:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 802871c:	1c62      	adds	r2, r4, #1
 802871e:	1c58      	adds	r0, r3, #1
 8028720:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8028724:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8028728:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802872c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028730:	0964      	lsrs	r4, r4, #5
 8028732:	4328      	orrs	r0, r5
 8028734:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8028738:	4320      	orrs	r0, r4
 802873a:	bd70      	pop	{r4, r5, r6, pc}

0802873c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 802873c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028740:	b08f      	sub	sp, #60	@ 0x3c
 8028742:	461c      	mov	r4, r3
 8028744:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8028748:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802874a:	4682      	mov	sl, r0
 802874c:	460e      	mov	r6, r1
 802874e:	4615      	mov	r5, r2
 8028750:	2f00      	cmp	r7, #0
 8028752:	f000 8142 	beq.w	80289da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8028756:	6820      	ldr	r0, [r4, #0]
 8028758:	6861      	ldr	r1, [r4, #4]
 802875a:	aa0a      	add	r2, sp, #40	@ 0x28
 802875c:	c203      	stmia	r2!, {r0, r1}
 802875e:	6818      	ldr	r0, [r3, #0]
 8028760:	6859      	ldr	r1, [r3, #4]
 8028762:	aa0c      	add	r2, sp, #48	@ 0x30
 8028764:	c203      	stmia	r2!, {r0, r1}
 8028766:	a80a      	add	r0, sp, #40	@ 0x28
 8028768:	f7ed ff80 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802876c:	4621      	mov	r1, r4
 802876e:	a80c      	add	r0, sp, #48	@ 0x30
 8028770:	f7ed ffa4 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028774:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8028778:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802877c:	f002 0301 	and.w	r3, r2, #1
 8028780:	9306      	str	r3, [sp, #24]
 8028782:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8028786:	f003 0101 	and.w	r1, r3, #1
 802878a:	9105      	str	r1, [sp, #20]
 802878c:	9805      	ldr	r0, [sp, #20]
 802878e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8028792:	4403      	add	r3, r0
 8028794:	fb01 2303 	mla	r3, r1, r3, r2
 8028798:	f04f 0802 	mov.w	r8, #2
 802879c:	fb93 f3f8 	sdiv	r3, r3, r8
 80287a0:	441e      	add	r6, r3
 80287a2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80287a6:	441a      	add	r2, r3
 80287a8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80287ac:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80287b0:	4419      	add	r1, r3
 80287b2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80287b6:	9303      	str	r3, [sp, #12]
 80287b8:	4b89      	ldr	r3, [pc, #548]	@ (80289e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80287ba:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 80287be:	6818      	ldr	r0, [r3, #0]
 80287c0:	6803      	ldr	r3, [r0, #0]
 80287c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80287c4:	4798      	blx	r3
 80287c6:	4a87      	ldr	r2, [pc, #540]	@ (80289e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80287c8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80287cc:	8813      	ldrh	r3, [r2, #0]
 80287ce:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 80287d2:	2fff      	cmp	r7, #255	@ 0xff
 80287d4:	fb03 9404 	mla	r4, r3, r4, r9
 80287d8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80287dc:	f105 0504 	add.w	r5, r5, #4
 80287e0:	4694      	mov	ip, r2
 80287e2:	fb03 f30b 	mul.w	r3, r3, fp
 80287e6:	d071      	beq.n	80288cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80287e8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80287ec:	43f9      	mvns	r1, r7
 80287ee:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80287f2:	b2c9      	uxtb	r1, r1
 80287f4:	9104      	str	r1, [sp, #16]
 80287f6:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80287fa:	9b07      	ldr	r3, [sp, #28]
 80287fc:	42a3      	cmp	r3, r4
 80287fe:	f240 80e7 	bls.w	80289d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8028802:	9b06      	ldr	r3, [sp, #24]
 8028804:	2b00      	cmp	r3, #0
 8028806:	d03d      	beq.n	8028884 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8028808:	7831      	ldrb	r1, [r6, #0]
 802880a:	9b04      	ldr	r3, [sp, #16]
 802880c:	8822      	ldrh	r2, [r4, #0]
 802880e:	9300      	str	r3, [sp, #0]
 8028810:	f001 010f 	and.w	r1, r1, #15
 8028814:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8028818:	463b      	mov	r3, r7
 802881a:	4429      	add	r1, r5
 802881c:	4650      	mov	r0, sl
 802881e:	f7ff ff57 	bl	80286d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8028822:	9b03      	ldr	r3, [sp, #12]
 8028824:	f824 0b02 	strh.w	r0, [r4], #2
 8028828:	f106 0801 	add.w	r8, r6, #1
 802882c:	f103 3bff 	add.w	fp, r3, #4294967295
 8028830:	f1bb 0f01 	cmp.w	fp, #1
 8028834:	46a1      	mov	r9, r4
 8028836:	f104 0404 	add.w	r4, r4, #4
 802883a:	dd27      	ble.n	802888c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 802883c:	f898 1000 	ldrb.w	r1, [r8]
 8028840:	9b04      	ldr	r3, [sp, #16]
 8028842:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8028846:	9300      	str	r3, [sp, #0]
 8028848:	0909      	lsrs	r1, r1, #4
 802884a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802884e:	463b      	mov	r3, r7
 8028850:	4429      	add	r1, r5
 8028852:	4650      	mov	r0, sl
 8028854:	f7ff ff3c 	bl	80286d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8028858:	f824 0c04 	strh.w	r0, [r4, #-4]
 802885c:	f818 1b01 	ldrb.w	r1, [r8], #1
 8028860:	9b04      	ldr	r3, [sp, #16]
 8028862:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8028866:	9300      	str	r3, [sp, #0]
 8028868:	f001 010f 	and.w	r1, r1, #15
 802886c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8028870:	463b      	mov	r3, r7
 8028872:	4429      	add	r1, r5
 8028874:	4650      	mov	r0, sl
 8028876:	f7ff ff2b 	bl	80286d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802887a:	f1ab 0b02 	sub.w	fp, fp, #2
 802887e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8028882:	e7d5      	b.n	8028830 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8028884:	46b0      	mov	r8, r6
 8028886:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802888a:	e7d1      	b.n	8028830 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802888c:	d10f      	bne.n	80288ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 802888e:	f898 1000 	ldrb.w	r1, [r8]
 8028892:	9b04      	ldr	r3, [sp, #16]
 8028894:	f8b9 2000 	ldrh.w	r2, [r9]
 8028898:	9300      	str	r3, [sp, #0]
 802889a:	0909      	lsrs	r1, r1, #4
 802889c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80288a0:	463b      	mov	r3, r7
 80288a2:	4429      	add	r1, r5
 80288a4:	4650      	mov	r0, sl
 80288a6:	f7ff ff13 	bl	80286d0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80288aa:	f829 0b02 	strh.w	r0, [r9], #2
 80288ae:	9b08      	ldr	r3, [sp, #32]
 80288b0:	9a05      	ldr	r2, [sp, #20]
 80288b2:	881c      	ldrh	r4, [r3, #0]
 80288b4:	9b03      	ldr	r3, [sp, #12]
 80288b6:	1ae4      	subs	r4, r4, r3
 80288b8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80288bc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80288c0:	4413      	add	r3, r2
 80288c2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80288c4:	fb93 f3f2 	sdiv	r3, r3, r2
 80288c8:	441e      	add	r6, r3
 80288ca:	e796      	b.n	80287fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80288cc:	4f46      	ldr	r7, [pc, #280]	@ (80289e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80288ce:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80288d2:	42a3      	cmp	r3, r4
 80288d4:	d97c      	bls.n	80289d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80288d6:	9a06      	ldr	r2, [sp, #24]
 80288d8:	2a00      	cmp	r2, #0
 80288da:	d054      	beq.n	8028986 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80288dc:	7830      	ldrb	r0, [r6, #0]
 80288de:	f000 000f 	and.w	r0, r0, #15
 80288e2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80288e6:	eb05 0e00 	add.w	lr, r5, r0
 80288ea:	5c28      	ldrb	r0, [r5, r0]
 80288ec:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80288f0:	f89e e001 	ldrb.w	lr, [lr, #1]
 80288f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80288f8:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80288fc:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8028900:	ea42 020e 	orr.w	r2, r2, lr
 8028904:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8028908:	f824 2b02 	strh.w	r2, [r4], #2
 802890c:	9a03      	ldr	r2, [sp, #12]
 802890e:	1c71      	adds	r1, r6, #1
 8028910:	f102 3eff 	add.w	lr, r2, #4294967295
 8028914:	f1be 0f01 	cmp.w	lr, #1
 8028918:	4620      	mov	r0, r4
 802891a:	f104 0404 	add.w	r4, r4, #4
 802891e:	dd36      	ble.n	802898e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8028920:	7808      	ldrb	r0, [r1, #0]
 8028922:	0900      	lsrs	r0, r0, #4
 8028924:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8028928:	eb05 0a00 	add.w	sl, r5, r0
 802892c:	f1ae 0e02 	sub.w	lr, lr, #2
 8028930:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8028934:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8028938:	00d2      	lsls	r2, r2, #3
 802893a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802893e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028942:	ea49 0202 	orr.w	r2, r9, r2
 8028946:	f815 9000 	ldrb.w	r9, [r5, r0]
 802894a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802894e:	f824 2c04 	strh.w	r2, [r4, #-4]
 8028952:	f811 0b01 	ldrb.w	r0, [r1], #1
 8028956:	f000 000f 	and.w	r0, r0, #15
 802895a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802895e:	eb05 0a00 	add.w	sl, r5, r0
 8028962:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8028966:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802896a:	00d2      	lsls	r2, r2, #3
 802896c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8028970:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8028974:	ea49 0202 	orr.w	r2, r9, r2
 8028978:	f815 9000 	ldrb.w	r9, [r5, r0]
 802897c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8028980:	f824 2c02 	strh.w	r2, [r4, #-2]
 8028984:	e7c6      	b.n	8028914 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8028986:	4631      	mov	r1, r6
 8028988:	f8dd e00c 	ldr.w	lr, [sp, #12]
 802898c:	e7c2      	b.n	8028914 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802898e:	d111      	bne.n	80289b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8028990:	7809      	ldrb	r1, [r1, #0]
 8028992:	0909      	lsrs	r1, r1, #4
 8028994:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8028998:	186c      	adds	r4, r5, r1
 802899a:	5c69      	ldrb	r1, [r5, r1]
 802899c:	78a2      	ldrb	r2, [r4, #2]
 802899e:	7864      	ldrb	r4, [r4, #1]
 80289a0:	00e4      	lsls	r4, r4, #3
 80289a2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80289a6:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80289aa:	4322      	orrs	r2, r4
 80289ac:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80289b0:	f820 2b02 	strh.w	r2, [r0], #2
 80289b4:	9a03      	ldr	r2, [sp, #12]
 80289b6:	f8bc 4000 	ldrh.w	r4, [ip]
 80289ba:	9905      	ldr	r1, [sp, #20]
 80289bc:	1aa4      	subs	r4, r4, r2
 80289be:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80289c2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80289c6:	440a      	add	r2, r1
 80289c8:	fb92 f2f8 	sdiv	r2, r2, r8
 80289cc:	4416      	add	r6, r2
 80289ce:	e780      	b.n	80288d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80289d0:	4b03      	ldr	r3, [pc, #12]	@ (80289e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80289d2:	6818      	ldr	r0, [r3, #0]
 80289d4:	6803      	ldr	r3, [r0, #0]
 80289d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80289d8:	4798      	blx	r3
 80289da:	b00f      	add	sp, #60	@ 0x3c
 80289dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80289e0:	20013f4c 	.word	0x20013f4c
 80289e4:	20013f46 	.word	0x20013f46
 80289e8:	fffff800 	.word	0xfffff800

080289ec <CRC_Lock>:
 80289ec:	b530      	push	{r4, r5, lr}
 80289ee:	4a2d      	ldr	r2, [pc, #180]	@ (8028aa4 <CRC_Lock+0xb8>)
 80289f0:	6813      	ldr	r3, [r2, #0]
 80289f2:	f023 0301 	bic.w	r3, r3, #1
 80289f6:	6013      	str	r3, [r2, #0]
 80289f8:	4b2b      	ldr	r3, [pc, #172]	@ (8028aa8 <CRC_Lock+0xbc>)
 80289fa:	681c      	ldr	r4, [r3, #0]
 80289fc:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8028a00:	4014      	ands	r4, r2
 8028a02:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8028a06:	42ac      	cmp	r4, r5
 8028a08:	d005      	beq.n	8028a16 <CRC_Lock+0x2a>
 8028a0a:	681c      	ldr	r4, [r3, #0]
 8028a0c:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8028a10:	4014      	ands	r4, r2
 8028a12:	42ac      	cmp	r4, r5
 8028a14:	d125      	bne.n	8028a62 <CRC_Lock+0x76>
 8028a16:	4b25      	ldr	r3, [pc, #148]	@ (8028aac <CRC_Lock+0xc0>)
 8028a18:	681b      	ldr	r3, [r3, #0]
 8028a1a:	2b00      	cmp	r3, #0
 8028a1c:	d139      	bne.n	8028a92 <CRC_Lock+0xa6>
 8028a1e:	4b24      	ldr	r3, [pc, #144]	@ (8028ab0 <CRC_Lock+0xc4>)
 8028a20:	681a      	ldr	r2, [r3, #0]
 8028a22:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8028a26:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8028a2a:	d00d      	beq.n	8028a48 <CRC_Lock+0x5c>
 8028a2c:	681a      	ldr	r2, [r3, #0]
 8028a2e:	f240 4483 	movw	r4, #1155	@ 0x483
 8028a32:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8028a36:	42a2      	cmp	r2, r4
 8028a38:	d006      	beq.n	8028a48 <CRC_Lock+0x5c>
 8028a3a:	681b      	ldr	r3, [r3, #0]
 8028a3c:	f240 4285 	movw	r2, #1157	@ 0x485
 8028a40:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8028a44:	4293      	cmp	r3, r2
 8028a46:	d124      	bne.n	8028a92 <CRC_Lock+0xa6>
 8028a48:	4b1a      	ldr	r3, [pc, #104]	@ (8028ab4 <CRC_Lock+0xc8>)
 8028a4a:	2201      	movs	r2, #1
 8028a4c:	601a      	str	r2, [r3, #0]
 8028a4e:	681a      	ldr	r2, [r3, #0]
 8028a50:	2a00      	cmp	r2, #0
 8028a52:	d1fc      	bne.n	8028a4e <CRC_Lock+0x62>
 8028a54:	4b18      	ldr	r3, [pc, #96]	@ (8028ab8 <CRC_Lock+0xcc>)
 8028a56:	6018      	str	r0, [r3, #0]
 8028a58:	6818      	ldr	r0, [r3, #0]
 8028a5a:	1a43      	subs	r3, r0, r1
 8028a5c:	4258      	negs	r0, r3
 8028a5e:	4158      	adcs	r0, r3
 8028a60:	e00e      	b.n	8028a80 <CRC_Lock+0x94>
 8028a62:	681b      	ldr	r3, [r3, #0]
 8028a64:	4013      	ands	r3, r2
 8028a66:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8028a6a:	4293      	cmp	r3, r2
 8028a6c:	d111      	bne.n	8028a92 <CRC_Lock+0xa6>
 8028a6e:	4b13      	ldr	r3, [pc, #76]	@ (8028abc <CRC_Lock+0xd0>)
 8028a70:	681b      	ldr	r3, [r3, #0]
 8028a72:	f240 4286 	movw	r2, #1158	@ 0x486
 8028a76:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8028a7a:	4293      	cmp	r3, r2
 8028a7c:	d001      	beq.n	8028a82 <CRC_Lock+0x96>
 8028a7e:	2000      	movs	r0, #0
 8028a80:	bd30      	pop	{r4, r5, pc}
 8028a82:	4b0f      	ldr	r3, [pc, #60]	@ (8028ac0 <CRC_Lock+0xd4>)
 8028a84:	2201      	movs	r2, #1
 8028a86:	601a      	str	r2, [r3, #0]
 8028a88:	681a      	ldr	r2, [r3, #0]
 8028a8a:	2a00      	cmp	r2, #0
 8028a8c:	d1fc      	bne.n	8028a88 <CRC_Lock+0x9c>
 8028a8e:	4b0d      	ldr	r3, [pc, #52]	@ (8028ac4 <CRC_Lock+0xd8>)
 8028a90:	e7e1      	b.n	8028a56 <CRC_Lock+0x6a>
 8028a92:	4b0d      	ldr	r3, [pc, #52]	@ (8028ac8 <CRC_Lock+0xdc>)
 8028a94:	2201      	movs	r2, #1
 8028a96:	601a      	str	r2, [r3, #0]
 8028a98:	681a      	ldr	r2, [r3, #0]
 8028a9a:	2a00      	cmp	r2, #0
 8028a9c:	d1fc      	bne.n	8028a98 <CRC_Lock+0xac>
 8028a9e:	4b0b      	ldr	r3, [pc, #44]	@ (8028acc <CRC_Lock+0xe0>)
 8028aa0:	e7d9      	b.n	8028a56 <CRC_Lock+0x6a>
 8028aa2:	bf00      	nop
 8028aa4:	e0002000 	.word	0xe0002000
 8028aa8:	e000ed00 	.word	0xe000ed00
 8028aac:	e0042000 	.word	0xe0042000
 8028ab0:	5c001000 	.word	0x5c001000
 8028ab4:	58024c08 	.word	0x58024c08
 8028ab8:	58024c00 	.word	0x58024c00
 8028abc:	46008ff0 	.word	0x46008ff0
 8028ac0:	46024c08 	.word	0x46024c08
 8028ac4:	46024c00 	.word	0x46024c00
 8028ac8:	40023008 	.word	0x40023008
 8028acc:	40023000 	.word	0x40023000

08028ad0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8028ad0:	6101      	str	r1, [r0, #16]
 8028ad2:	4770      	bx	lr

08028ad4 <_ZN8touchgfx8Gestures4tickEv>:
 8028ad4:	7b83      	ldrb	r3, [r0, #14]
 8028ad6:	b14b      	cbz	r3, 8028aec <_ZN8touchgfx8Gestures4tickEv+0x18>
 8028ad8:	8903      	ldrh	r3, [r0, #8]
 8028ada:	3301      	adds	r3, #1
 8028adc:	b29b      	uxth	r3, r3
 8028ade:	2b07      	cmp	r3, #7
 8028ae0:	8103      	strh	r3, [r0, #8]
 8028ae2:	bf81      	itttt	hi
 8028ae4:	2300      	movhi	r3, #0
 8028ae6:	8143      	strhhi	r3, [r0, #10]
 8028ae8:	8183      	strhhi	r3, [r0, #12]
 8028aea:	7383      	strbhi	r3, [r0, #14]
 8028aec:	4770      	bx	lr
	...

08028af0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8028af0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8028af4:	4698      	mov	r8, r3
 8028af6:	8883      	ldrh	r3, [r0, #4]
 8028af8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8028afc:	eba8 0303 	sub.w	r3, r8, r3
 8028b00:	b21b      	sxth	r3, r3
 8028b02:	4604      	mov	r4, r0
 8028b04:	2b00      	cmp	r3, #0
 8028b06:	4617      	mov	r7, r2
 8028b08:	4a18      	ldr	r2, [pc, #96]	@ (8028b6c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8028b0a:	9200      	str	r2, [sp, #0]
 8028b0c:	bfb8      	it	lt
 8028b0e:	425b      	neglt	r3, r3
 8028b10:	8aa2      	ldrh	r2, [r4, #20]
 8028b12:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8028b16:	f8ad 800a 	strh.w	r8, [sp, #10]
 8028b1a:	b21b      	sxth	r3, r3
 8028b1c:	460e      	mov	r6, r1
 8028b1e:	4293      	cmp	r3, r2
 8028b20:	88c1      	ldrh	r1, [r0, #6]
 8028b22:	f8ad 1008 	strh.w	r1, [sp, #8]
 8028b26:	f04f 0000 	mov.w	r0, #0
 8028b2a:	f88d 0004 	strb.w	r0, [sp, #4]
 8028b2e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8028b32:	dc07      	bgt.n	8028b44 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8028b34:	1a69      	subs	r1, r5, r1
 8028b36:	b209      	sxth	r1, r1
 8028b38:	2900      	cmp	r1, #0
 8028b3a:	bfb8      	it	lt
 8028b3c:	4249      	neglt	r1, r1
 8028b3e:	b209      	sxth	r1, r1
 8028b40:	428a      	cmp	r2, r1
 8028b42:	da10      	bge.n	8028b66 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8028b44:	6920      	ldr	r0, [r4, #16]
 8028b46:	6803      	ldr	r3, [r0, #0]
 8028b48:	4669      	mov	r1, sp
 8028b4a:	685b      	ldr	r3, [r3, #4]
 8028b4c:	4798      	blx	r3
 8028b4e:	eba8 0606 	sub.w	r6, r8, r6
 8028b52:	2300      	movs	r3, #0
 8028b54:	1bef      	subs	r7, r5, r7
 8028b56:	2001      	movs	r0, #1
 8028b58:	8123      	strh	r3, [r4, #8]
 8028b5a:	8166      	strh	r6, [r4, #10]
 8028b5c:	81a7      	strh	r7, [r4, #12]
 8028b5e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8028b62:	80e5      	strh	r5, [r4, #6]
 8028b64:	73a0      	strb	r0, [r4, #14]
 8028b66:	b004      	add	sp, #16
 8028b68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028b6c:	0802e6f4 	.word	0x0802e6f4

08028b70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8028b70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028b72:	461e      	mov	r6, r3
 8028b74:	1e4b      	subs	r3, r1, #1
 8028b76:	2b01      	cmp	r3, #1
 8028b78:	b085      	sub	sp, #20
 8028b7a:	4604      	mov	r4, r0
 8028b7c:	460d      	mov	r5, r1
 8028b7e:	4617      	mov	r7, r2
 8028b80:	d84b      	bhi.n	8028c1a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8028b82:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8028b86:	1cd3      	adds	r3, r2, #3
 8028b88:	b29b      	uxth	r3, r3
 8028b8a:	2b06      	cmp	r3, #6
 8028b8c:	d916      	bls.n	8028bbc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8028b8e:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8028c30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8028b92:	f8cd c004 	str.w	ip, [sp, #4]
 8028b96:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8028b9a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8028b9e:	6900      	ldr	r0, [r0, #16]
 8028ba0:	f8ad 100c 	strh.w	r1, [sp, #12]
 8028ba4:	f04f 0c00 	mov.w	ip, #0
 8028ba8:	f88d c008 	strb.w	ip, [sp, #8]
 8028bac:	f8ad 200a 	strh.w	r2, [sp, #10]
 8028bb0:	f8ad 300e 	strh.w	r3, [sp, #14]
 8028bb4:	6803      	ldr	r3, [r0, #0]
 8028bb6:	a901      	add	r1, sp, #4
 8028bb8:	689b      	ldr	r3, [r3, #8]
 8028bba:	4798      	blx	r3
 8028bbc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028bc0:	1cd3      	adds	r3, r2, #3
 8028bc2:	b29b      	uxth	r3, r3
 8028bc4:	2b06      	cmp	r3, #6
 8028bc6:	d916      	bls.n	8028bf6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8028bc8:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8028c30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8028bcc:	f8cd c004 	str.w	ip, [sp, #4]
 8028bd0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8028bd4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8028bd8:	6920      	ldr	r0, [r4, #16]
 8028bda:	f8ad 100c 	strh.w	r1, [sp, #12]
 8028bde:	f04f 0c01 	mov.w	ip, #1
 8028be2:	f88d c008 	strb.w	ip, [sp, #8]
 8028be6:	f8ad 200a 	strh.w	r2, [sp, #10]
 8028bea:	f8ad 300e 	strh.w	r3, [sp, #14]
 8028bee:	6803      	ldr	r3, [r0, #0]
 8028bf0:	a901      	add	r1, sp, #4
 8028bf2:	689b      	ldr	r3, [r3, #8]
 8028bf4:	4798      	blx	r3
 8028bf6:	4b0d      	ldr	r3, [pc, #52]	@ (8028c2c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8028bf8:	9301      	str	r3, [sp, #4]
 8028bfa:	6920      	ldr	r0, [r4, #16]
 8028bfc:	f88d 5008 	strb.w	r5, [sp, #8]
 8028c00:	2300      	movs	r3, #0
 8028c02:	f8ad 700a 	strh.w	r7, [sp, #10]
 8028c06:	f8ad 600c 	strh.w	r6, [sp, #12]
 8028c0a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8028c0e:	6803      	ldr	r3, [r0, #0]
 8028c10:	a901      	add	r1, sp, #4
 8028c12:	681b      	ldr	r3, [r3, #0]
 8028c14:	4798      	blx	r3
 8028c16:	b005      	add	sp, #20
 8028c18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028c1a:	2900      	cmp	r1, #0
 8028c1c:	d1eb      	bne.n	8028bf6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8028c1e:	80a2      	strh	r2, [r4, #4]
 8028c20:	80c6      	strh	r6, [r0, #6]
 8028c22:	60a1      	str	r1, [r4, #8]
 8028c24:	81a1      	strh	r1, [r4, #12]
 8028c26:	73a1      	strb	r1, [r4, #14]
 8028c28:	e7e5      	b.n	8028bf6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8028c2a:	bf00      	nop
 8028c2c:	0802e6e0 	.word	0x0802e6e0
 8028c30:	0802e708 	.word	0x0802e708

08028c34 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8028c34:	10c9      	asrs	r1, r1, #3
 8028c36:	2900      	cmp	r1, #0
 8028c38:	bfb8      	it	lt
 8028c3a:	4249      	neglt	r1, r1
 8028c3c:	2801      	cmp	r0, #1
 8028c3e:	d108      	bne.n	8028c52 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8028c40:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8028c44:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8028c48:	4601      	mov	r1, r0
 8028c4a:	dd02      	ble.n	8028c52 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8028c4c:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 8028c50:	4770      	bx	lr
 8028c52:	29ff      	cmp	r1, #255	@ 0xff
 8028c54:	bfa8      	it	ge
 8028c56:	21ff      	movge	r1, #255	@ 0xff
 8028c58:	4608      	mov	r0, r1
 8028c5a:	4770      	bx	lr

08028c5c <_ZN8touchgfx10Rasterizer6lineToEii>:
 8028c5c:	b410      	push	{r4}
 8028c5e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8028c62:	429c      	cmp	r4, r3
 8028c64:	d803      	bhi.n	8028c6e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8028c66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028c6a:	f7ec b805 	b.w	8014c78 <_ZN8touchgfx7Outline6lineToEii>
 8028c6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028c72:	4770      	bx	lr

08028c74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8028c74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028c78:	b08b      	sub	sp, #44	@ 0x2c
 8028c7a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8028c7e:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8028c82:	9308      	str	r3, [sp, #32]
 8028c84:	4606      	mov	r6, r0
 8028c86:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8028c8a:	9309      	str	r3, [sp, #36]	@ 0x24
 8028c8c:	468a      	mov	sl, r1
 8028c8e:	f7ec f960 	bl	8014f52 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8028c92:	68b5      	ldr	r5, [r6, #8]
 8028c94:	4604      	mov	r4, r0
 8028c96:	2d00      	cmp	r5, #0
 8028c98:	d044      	beq.n	8028d24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8028c9a:	6873      	ldr	r3, [r6, #4]
 8028c9c:	42ab      	cmp	r3, r5
 8028c9e:	d33d      	bcc.n	8028d1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8028ca0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8028ca4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8028ca8:	eb02 0b03 	add.w	fp, r2, r3
 8028cac:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8028cb0:	fb02 1203 	mla	r2, r2, r3, r1
 8028cb4:	9205      	str	r2, [sp, #20]
 8028cb6:	1e6a      	subs	r2, r5, #1
 8028cb8:	9204      	str	r2, [sp, #16]
 8028cba:	f04f 0800 	mov.w	r8, #0
 8028cbe:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8028cc2:	f9b4 7000 	ldrsh.w	r7, [r4]
 8028cc6:	454b      	cmp	r3, r9
 8028cc8:	463a      	mov	r2, r7
 8028cca:	d008      	beq.n	8028cde <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8028ccc:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 8028cd0:	eb03 0b09 	add.w	fp, r3, r9
 8028cd4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8028cd8:	fb03 1309 	mla	r3, r3, r9, r1
 8028cdc:	9305      	str	r3, [sp, #20]
 8028cde:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8028ce2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8028ce6:	4498      	add	r8, r3
 8028ce8:	9b04      	ldr	r3, [sp, #16]
 8028cea:	3b01      	subs	r3, #1
 8028cec:	9304      	str	r3, [sp, #16]
 8028cee:	9b04      	ldr	r3, [sp, #16]
 8028cf0:	3301      	adds	r3, #1
 8028cf2:	d015      	beq.n	8028d20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8028cf4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8028cf8:	42bb      	cmp	r3, r7
 8028cfa:	d117      	bne.n	8028d2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8028cfc:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8028d00:	9b04      	ldr	r3, [sp, #16]
 8028d02:	4548      	cmp	r0, r9
 8028d04:	f103 33ff 	add.w	r3, r3, #4294967295
 8028d08:	d17f      	bne.n	8028e0a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8028d0a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8028d0e:	4401      	add	r1, r0
 8028d10:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8028d14:	4480      	add	r8, r0
 8028d16:	e7e9      	b.n	8028cec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8028d18:	461f      	mov	r7, r3
 8028d1a:	e044      	b.n	8028da6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8028d1c:	2000      	movs	r0, #0
 8028d1e:	e002      	b.n	8028d26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8028d20:	2900      	cmp	r1, #0
 8028d22:	d16f      	bne.n	8028e04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8028d24:	2001      	movs	r0, #1
 8028d26:	b00b      	add	sp, #44	@ 0x2c
 8028d28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028d2c:	2900      	cmp	r1, #0
 8028d2e:	d030      	beq.n	8028d92 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8028d30:	2f00      	cmp	r7, #0
 8028d32:	db29      	blt.n	8028d88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8028d34:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8028d38:	42bb      	cmp	r3, r7
 8028d3a:	dd25      	ble.n	8028d88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8028d3c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8028d40:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8028d44:	f7ff ff76 	bl	8028c34 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8028d48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028d4a:	fb10 f003 	smulbb	r0, r0, r3
 8028d4e:	b280      	uxth	r0, r0
 8028d50:	1c41      	adds	r1, r0, #1
 8028d52:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8028d56:	1209      	asrs	r1, r1, #8
 8028d58:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8028d5c:	d014      	beq.n	8028d88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8028d5e:	9808      	ldr	r0, [sp, #32]
 8028d60:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8028d62:	b2c9      	uxtb	r1, r1
 8028d64:	b2ba      	uxth	r2, r7
 8028d66:	9102      	str	r1, [sp, #8]
 8028d68:	2101      	movs	r1, #1
 8028d6a:	4413      	add	r3, r2
 8028d6c:	9101      	str	r1, [sp, #4]
 8028d6e:	4402      	add	r2, r0
 8028d70:	fa0f f18b 	sxth.w	r1, fp
 8028d74:	f8da 0000 	ldr.w	r0, [sl]
 8028d78:	9100      	str	r1, [sp, #0]
 8028d7a:	6941      	ldr	r1, [r0, #20]
 8028d7c:	b21b      	sxth	r3, r3
 8028d7e:	460d      	mov	r5, r1
 8028d80:	b212      	sxth	r2, r2
 8028d82:	9905      	ldr	r1, [sp, #20]
 8028d84:	4650      	mov	r0, sl
 8028d86:	47a8      	blx	r5
 8028d88:	9b04      	ldr	r3, [sp, #16]
 8028d8a:	3301      	adds	r3, #1
 8028d8c:	f107 0201 	add.w	r2, r7, #1
 8028d90:	d0c8      	beq.n	8028d24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8028d92:	f9b4 7000 	ldrsh.w	r7, [r4]
 8028d96:	1abb      	subs	r3, r7, r2
 8028d98:	2b00      	cmp	r3, #0
 8028d9a:	dd31      	ble.n	8028e00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8028d9c:	2a00      	cmp	r2, #0
 8028d9e:	dabb      	bge.n	8028d18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8028da0:	2f00      	cmp	r7, #0
 8028da2:	dd2d      	ble.n	8028e00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8028da4:	2200      	movs	r2, #0
 8028da6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8028daa:	19d1      	adds	r1, r2, r7
 8028dac:	4299      	cmp	r1, r3
 8028dae:	db02      	blt.n	8028db6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8028db0:	1a9f      	subs	r7, r3, r2
 8028db2:	2f00      	cmp	r7, #0
 8028db4:	dd24      	ble.n	8028e00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8028db6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8028dba:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8028dbe:	f7ff ff39 	bl	8028c34 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8028dc2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8028dc4:	fb10 f003 	smulbb	r0, r0, r3
 8028dc8:	b280      	uxth	r0, r0
 8028dca:	1c41      	adds	r1, r0, #1
 8028dcc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8028dd0:	1209      	asrs	r1, r1, #8
 8028dd2:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8028dd6:	d013      	beq.n	8028e00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8028dd8:	9808      	ldr	r0, [sp, #32]
 8028dda:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 8028ddc:	b292      	uxth	r2, r2
 8028dde:	b2c9      	uxtb	r1, r1
 8028de0:	4413      	add	r3, r2
 8028de2:	9102      	str	r1, [sp, #8]
 8028de4:	4402      	add	r2, r0
 8028de6:	b23f      	sxth	r7, r7
 8028de8:	f8da 0000 	ldr.w	r0, [sl]
 8028dec:	9701      	str	r7, [sp, #4]
 8028dee:	fa0f f18b 	sxth.w	r1, fp
 8028df2:	9100      	str	r1, [sp, #0]
 8028df4:	6947      	ldr	r7, [r0, #20]
 8028df6:	9905      	ldr	r1, [sp, #20]
 8028df8:	b21b      	sxth	r3, r3
 8028dfa:	b212      	sxth	r2, r2
 8028dfc:	4650      	mov	r0, sl
 8028dfe:	47b8      	blx	r7
 8028e00:	464b      	mov	r3, r9
 8028e02:	e75c      	b.n	8028cbe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8028e04:	2f00      	cmp	r7, #0
 8028e06:	da95      	bge.n	8028d34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8028e08:	e78c      	b.n	8028d24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8028e0a:	2900      	cmp	r1, #0
 8028e0c:	d0f8      	beq.n	8028e00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8028e0e:	e78f      	b.n	8028d30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08028e10 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8028e10:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8028e14:	461e      	mov	r6, r3
 8028e16:	4b36      	ldr	r3, [pc, #216]	@ (8028ef0 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 8028e18:	e9c0 3100 	strd	r3, r1, [r0]
 8028e1c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8028e20:	8103      	strh	r3, [r0, #8]
 8028e22:	2500      	movs	r5, #0
 8028e24:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8028e28:	7283      	strb	r3, [r0, #10]
 8028e2a:	f100 0814 	add.w	r8, r0, #20
 8028e2e:	4604      	mov	r4, r0
 8028e30:	8185      	strh	r5, [r0, #12]
 8028e32:	81c5      	strh	r5, [r0, #14]
 8028e34:	8205      	strh	r5, [r0, #16]
 8028e36:	8245      	strh	r5, [r0, #18]
 8028e38:	4640      	mov	r0, r8
 8028e3a:	4617      	mov	r7, r2
 8028e3c:	f7eb fa54 	bl	80142e8 <_ZN8touchgfx7OutlineC1Ev>
 8028e40:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 8028e44:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 8028e48:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 8028e4c:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8028e50:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8028e54:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 8028e58:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 8028e5c:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 8028e60:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 8028e64:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 8028e68:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8028e6c:	6830      	ldr	r0, [r6, #0]
 8028e6e:	6871      	ldr	r1, [r6, #4]
 8028e70:	8872      	ldrh	r2, [r6, #2]
 8028e72:	8835      	ldrh	r5, [r6, #0]
 8028e74:	466b      	mov	r3, sp
 8028e76:	c303      	stmia	r3!, {r0, r1}
 8028e78:	887b      	ldrh	r3, [r7, #2]
 8028e7a:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 8028e7e:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 8028e82:	4413      	add	r3, r2
 8028e84:	883a      	ldrh	r2, [r7, #0]
 8028e86:	81e3      	strh	r3, [r4, #14]
 8028e88:	442a      	add	r2, r5
 8028e8a:	81a2      	strh	r2, [r4, #12]
 8028e8c:	8220      	strh	r0, [r4, #16]
 8028e8e:	8261      	strh	r1, [r4, #18]
 8028e90:	4668      	mov	r0, sp
 8028e92:	4639      	mov	r1, r7
 8028e94:	f7ed fc12 	bl	80166bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8028e98:	f104 000c 	add.w	r0, r4, #12
 8028e9c:	f7ed fbe6 	bl	801666c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028ea0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8028ea4:	f8bd 2000 	ldrh.w	r2, [sp]
 8028ea8:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 8028eac:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8028eb0:	4640      	mov	r0, r8
 8028eb2:	f7eb f9fd 	bl	80142b0 <_ZN8touchgfx7Outline5resetEv>
 8028eb6:	f9bd 3000 	ldrsh.w	r3, [sp]
 8028eba:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 8028ebe:	015b      	lsls	r3, r3, #5
 8028ec0:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8028ec2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8028ec6:	015b      	lsls	r3, r3, #5
 8028ec8:	6523      	str	r3, [r4, #80]	@ 0x50
 8028eca:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8028ece:	015b      	lsls	r3, r3, #5
 8028ed0:	6563      	str	r3, [r4, #84]	@ 0x54
 8028ed2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8028ed6:	015b      	lsls	r3, r3, #5
 8028ed8:	65a3      	str	r3, [r4, #88]	@ 0x58
 8028eda:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8028ede:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8028ee2:	4620      	mov	r0, r4
 8028ee4:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 8028ee8:	b002      	add	sp, #8
 8028eea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028eee:	bf00      	nop
 8028ef0:	0802ea44 	.word	0x0802ea44

08028ef4 <_ZN8touchgfx6Canvas5closeEv>:
 8028ef4:	b538      	push	{r3, r4, r5, lr}
 8028ef6:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8028efa:	4604      	mov	r4, r0
 8028efc:	b193      	cbz	r3, 8028f24 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8028efe:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8028f02:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 8028f06:	4213      	tst	r3, r2
 8028f08:	d10c      	bne.n	8028f24 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8028f0a:	f100 0514 	add.w	r5, r0, #20
 8028f0e:	b123      	cbz	r3, 8028f1a <_ZN8touchgfx6Canvas5closeEv+0x26>
 8028f10:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8028f14:	4628      	mov	r0, r5
 8028f16:	f7ff fea1 	bl	8028c5c <_ZN8touchgfx10Rasterizer6lineToEii>
 8028f1a:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 8028f1e:	4628      	mov	r0, r5
 8028f20:	f7ff fe9c 	bl	8028c5c <_ZN8touchgfx10Rasterizer6lineToEii>
 8028f24:	2300      	movs	r3, #0
 8028f26:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8028f2a:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 8028f2e:	4298      	cmp	r0, r3
 8028f30:	bf34      	ite	cc
 8028f32:	2000      	movcc	r0, #0
 8028f34:	2001      	movcs	r0, #1
 8028f36:	bd38      	pop	{r3, r4, r5, pc}

08028f38 <_ZN8touchgfx6Canvas6renderEh>:
 8028f38:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8028f3c:	7a85      	ldrb	r5, [r0, #10]
 8028f3e:	4369      	muls	r1, r5
 8028f40:	1c4d      	adds	r5, r1, #1
 8028f42:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8028f46:	122d      	asrs	r5, r5, #8
 8028f48:	4604      	mov	r4, r0
 8028f4a:	f000 8099 	beq.w	8029080 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8028f4e:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 8028f52:	2b00      	cmp	r3, #0
 8028f54:	f000 8094 	beq.w	8029080 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8028f58:	f7ff ffcc 	bl	8028ef4 <_ZN8touchgfx6Canvas5closeEv>
 8028f5c:	4607      	mov	r7, r0
 8028f5e:	2800      	cmp	r0, #0
 8028f60:	d045      	beq.n	8028fee <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8028f62:	6860      	ldr	r0, [r4, #4]
 8028f64:	4e47      	ldr	r6, [pc, #284]	@ (8029084 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 8028f66:	6803      	ldr	r3, [r0, #0]
 8028f68:	6837      	ldr	r7, [r6, #0]
 8028f6a:	689b      	ldr	r3, [r3, #8]
 8028f6c:	4798      	blx	r3
 8028f6e:	4601      	mov	r1, r0
 8028f70:	4638      	mov	r0, r7
 8028f72:	f7e8 fc7b 	bl	801186c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8028f76:	4607      	mov	r7, r0
 8028f78:	f7da f82e 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 8028f7c:	6803      	ldr	r3, [r0, #0]
 8028f7e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8028f80:	4798      	blx	r3
 8028f82:	4680      	mov	r8, r0
 8028f84:	f7da f828 	bl	8002fd8 <_ZN8touchgfx3HAL3lcdEv>
 8028f88:	6803      	ldr	r3, [r0, #0]
 8028f8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8028f8c:	4798      	blx	r3
 8028f8e:	280b      	cmp	r0, #11
 8028f90:	d85b      	bhi.n	802904a <_ZN8touchgfx6Canvas6renderEh+0x112>
 8028f92:	e8df f000 	tbb	[pc, r0]
 8028f96:	5c51      	.short	0x5c51
 8028f98:	305a066c 	.word	0x305a066c
 8028f9c:	65656540 	.word	0x65656540
 8028fa0:	6565      	.short	0x6565
 8028fa2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8028fa6:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8028faa:	2208      	movs	r2, #8
 8028fac:	fb91 f2f2 	sdiv	r2, r1, r2
 8028fb0:	fb08 2303 	mla	r3, r8, r3, r2
 8028fb4:	441f      	add	r7, r3
 8028fb6:	424b      	negs	r3, r1
 8028fb8:	f003 0307 	and.w	r3, r3, #7
 8028fbc:	f001 0107 	and.w	r1, r1, #7
 8028fc0:	bf58      	it	pl
 8028fc2:	4259      	negpl	r1, r3
 8028fc4:	b2c9      	uxtb	r1, r1
 8028fc6:	b2ed      	uxtb	r5, r5
 8028fc8:	463a      	mov	r2, r7
 8028fca:	e9cd 1500 	strd	r1, r5, [sp]
 8028fce:	fa0f f388 	sxth.w	r3, r8
 8028fd2:	6861      	ldr	r1, [r4, #4]
 8028fd4:	f104 0014 	add.w	r0, r4, #20
 8028fd8:	f7ff fe4c 	bl	8028c74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8028fdc:	4607      	mov	r7, r0
 8028fde:	6860      	ldr	r0, [r4, #4]
 8028fe0:	6803      	ldr	r3, [r0, #0]
 8028fe2:	691b      	ldr	r3, [r3, #16]
 8028fe4:	4798      	blx	r3
 8028fe6:	6830      	ldr	r0, [r6, #0]
 8028fe8:	6803      	ldr	r3, [r0, #0]
 8028fea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8028fec:	4798      	blx	r3
 8028fee:	4638      	mov	r0, r7
 8028ff0:	b002      	add	sp, #8
 8028ff2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028ff6:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8028ffa:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8028ffe:	2204      	movs	r2, #4
 8029000:	fb91 f2f2 	sdiv	r2, r1, r2
 8029004:	fb08 2303 	mla	r3, r8, r3, r2
 8029008:	441f      	add	r7, r3
 802900a:	424b      	negs	r3, r1
 802900c:	f003 0303 	and.w	r3, r3, #3
 8029010:	f001 0103 	and.w	r1, r1, #3
 8029014:	e7d4      	b.n	8028fc0 <_ZN8touchgfx6Canvas6renderEh+0x88>
 8029016:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802901a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802901e:	2900      	cmp	r1, #0
 8029020:	f04f 0202 	mov.w	r2, #2
 8029024:	fb91 f2f2 	sdiv	r2, r1, r2
 8029028:	f001 0101 	and.w	r1, r1, #1
 802902c:	fb08 2303 	mla	r3, r8, r3, r2
 8029030:	441f      	add	r7, r3
 8029032:	bfb8      	it	lt
 8029034:	4249      	neglt	r1, r1
 8029036:	e7c5      	b.n	8028fc4 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 8029038:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802903c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029040:	fb08 f303 	mul.w	r3, r8, r3
 8029044:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8029048:	441f      	add	r7, r3
 802904a:	2100      	movs	r1, #0
 802904c:	e7bb      	b.n	8028fc6 <_ZN8touchgfx6Canvas6renderEh+0x8e>
 802904e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8029052:	fb08 f203 	mul.w	r2, r8, r3
 8029056:	89a3      	ldrh	r3, [r4, #12]
 8029058:	2103      	movs	r1, #3
 802905a:	fb13 2301 	smlabb	r3, r3, r1, r2
 802905e:	e7f3      	b.n	8029048 <_ZN8touchgfx6Canvas6renderEh+0x110>
 8029060:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8029064:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029068:	fb08 2303 	mla	r3, r8, r3, r2
 802906c:	e7ec      	b.n	8029048 <_ZN8touchgfx6Canvas6renderEh+0x110>
 802906e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8029072:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029076:	fb08 f303 	mul.w	r3, r8, r3
 802907a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802907e:	e7e3      	b.n	8029048 <_ZN8touchgfx6Canvas6renderEh+0x110>
 8029080:	2701      	movs	r7, #1
 8029082:	e7b4      	b.n	8028fee <_ZN8touchgfx6Canvas6renderEh+0xb6>
 8029084:	20013f4c 	.word	0x20013f4c

08029088 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8029088:	b510      	push	{r4, lr}
 802908a:	4b06      	ldr	r3, [pc, #24]	@ (80290a4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 802908c:	781b      	ldrb	r3, [r3, #0]
 802908e:	2b01      	cmp	r3, #1
 8029090:	d107      	bne.n	80290a2 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 8029092:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8029096:	680b      	ldr	r3, [r1, #0]
 8029098:	6814      	ldr	r4, [r2, #0]
 802909a:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802909e:	6013      	str	r3, [r2, #0]
 80290a0:	600c      	str	r4, [r1, #0]
 80290a2:	bd10      	pop	{r4, pc}
 80290a4:	20013f44 	.word	0x20013f44

080290a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80290a8:	b513      	push	{r0, r1, r4, lr}
 80290aa:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80290ae:	4604      	mov	r4, r0
 80290b0:	e9cd 2100 	strd	r2, r1, [sp]
 80290b4:	b9a3      	cbnz	r3, 80290e0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80290b6:	466a      	mov	r2, sp
 80290b8:	a901      	add	r1, sp, #4
 80290ba:	4620      	mov	r0, r4
 80290bc:	f7ff ffe4 	bl	8029088 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80290c0:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80290c2:	9901      	ldr	r1, [sp, #4]
 80290c4:	9a00      	ldr	r2, [sp, #0]
 80290c6:	1ac9      	subs	r1, r1, r3
 80290c8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80290ca:	9101      	str	r1, [sp, #4]
 80290cc:	1ad2      	subs	r2, r2, r3
 80290ce:	2a00      	cmp	r2, #0
 80290d0:	9200      	str	r2, [sp, #0]
 80290d2:	da0b      	bge.n	80290ec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80290d4:	2301      	movs	r3, #1
 80290d6:	2900      	cmp	r1, #0
 80290d8:	da0e      	bge.n	80290f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80290da:	f043 0304 	orr.w	r3, r3, #4
 80290de:	e013      	b.n	8029108 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80290e0:	f7ff ff08 	bl	8028ef4 <_ZN8touchgfx6Canvas5closeEv>
 80290e4:	2800      	cmp	r0, #0
 80290e6:	d1e6      	bne.n	80290b6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80290e8:	b002      	add	sp, #8
 80290ea:	bd10      	pop	{r4, pc}
 80290ec:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80290ee:	429a      	cmp	r2, r3
 80290f0:	bfac      	ite	ge
 80290f2:	2302      	movge	r3, #2
 80290f4:	2300      	movlt	r3, #0
 80290f6:	e7ee      	b.n	80290d6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80290f8:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 80290fa:	4281      	cmp	r1, r0
 80290fc:	bfac      	ite	ge
 80290fe:	2008      	movge	r0, #8
 8029100:	2000      	movlt	r0, #0
 8029102:	4318      	orrs	r0, r3
 8029104:	b2c3      	uxtb	r3, r0
 8029106:	b158      	cbz	r0, 8029120 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8029108:	2200      	movs	r2, #0
 802910a:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 802910e:	9901      	ldr	r1, [sp, #4]
 8029110:	9a00      	ldr	r2, [sp, #0]
 8029112:	66e1      	str	r1, [r4, #108]	@ 0x6c
 8029114:	6722      	str	r2, [r4, #112]	@ 0x70
 8029116:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 802911a:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 802911e:	e7e3      	b.n	80290e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8029120:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8029124:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8029128:	4298      	cmp	r0, r3
 802912a:	d803      	bhi.n	8029134 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802912c:	f104 0014 	add.w	r0, r4, #20
 8029130:	f7eb fdbc 	bl	8014cac <_ZN8touchgfx7Outline6moveToEii>
 8029134:	2301      	movs	r3, #1
 8029136:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802913a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802913e:	2300      	movs	r3, #0
 8029140:	e7e5      	b.n	802910e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08029142 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8029142:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8029144:	ab02      	add	r3, sp, #8
 8029146:	4604      	mov	r4, r0
 8029148:	f843 2d08 	str.w	r2, [r3, #-8]!
 802914c:	9101      	str	r1, [sp, #4]
 802914e:	461a      	mov	r2, r3
 8029150:	a901      	add	r1, sp, #4
 8029152:	f7ff ff99 	bl	8029088 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8029156:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8029158:	9901      	ldr	r1, [sp, #4]
 802915a:	9a00      	ldr	r2, [sp, #0]
 802915c:	1ac9      	subs	r1, r1, r3
 802915e:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8029160:	9101      	str	r1, [sp, #4]
 8029162:	1ad2      	subs	r2, r2, r3
 8029164:	2a00      	cmp	r2, #0
 8029166:	9200      	str	r2, [sp, #0]
 8029168:	db1c      	blt.n	80291a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802916a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802916c:	429a      	cmp	r2, r3
 802916e:	bfac      	ite	ge
 8029170:	2002      	movge	r0, #2
 8029172:	2000      	movlt	r0, #0
 8029174:	2900      	cmp	r1, #0
 8029176:	db17      	blt.n	80291a8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8029178:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 802917a:	4299      	cmp	r1, r3
 802917c:	bfac      	ite	ge
 802917e:	2308      	movge	r3, #8
 8029180:	2300      	movlt	r3, #0
 8029182:	4303      	orrs	r3, r0
 8029184:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 8029188:	b2dd      	uxtb	r5, r3
 802918a:	b978      	cbnz	r0, 80291ac <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802918c:	f104 0014 	add.w	r0, r4, #20
 8029190:	f7ff fd64 	bl	8028c5c <_ZN8touchgfx10Rasterizer6lineToEii>
 8029194:	9b01      	ldr	r3, [sp, #4]
 8029196:	6623      	str	r3, [r4, #96]	@ 0x60
 8029198:	9b00      	ldr	r3, [sp, #0]
 802919a:	6663      	str	r3, [r4, #100]	@ 0x64
 802919c:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 80291a0:	b002      	add	sp, #8
 80291a2:	bd70      	pop	{r4, r5, r6, pc}
 80291a4:	2001      	movs	r0, #1
 80291a6:	e7e5      	b.n	8029174 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80291a8:	2304      	movs	r3, #4
 80291aa:	e7ea      	b.n	8029182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80291ac:	b113      	cbz	r3, 80291b4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80291ae:	ea10 0305 	ands.w	r3, r0, r5
 80291b2:	d11c      	bne.n	80291ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80291b4:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 80291b8:	f104 0614 	add.w	r6, r4, #20
 80291bc:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 80291c0:	b98b      	cbnz	r3, 80291e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80291c2:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 80291c6:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 80291ca:	4298      	cmp	r0, r3
 80291cc:	d802      	bhi.n	80291d4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80291ce:	4630      	mov	r0, r6
 80291d0:	f7eb fd6c 	bl	8014cac <_ZN8touchgfx7Outline6moveToEii>
 80291d4:	2301      	movs	r3, #1
 80291d6:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80291da:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 80291de:	e9dd 2100 	ldrd	r2, r1, [sp]
 80291e2:	4630      	mov	r0, r6
 80291e4:	e7d4      	b.n	8029190 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80291e6:	4630      	mov	r0, r6
 80291e8:	f7ff fd38 	bl	8028c5c <_ZN8touchgfx10Rasterizer6lineToEii>
 80291ec:	e7f7      	b.n	80291de <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80291ee:	461d      	mov	r5, r3
 80291f0:	e7d0      	b.n	8029194 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080291f4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 80291f4:	b538      	push	{r3, r4, r5, lr}
 80291f6:	ed2d 8b10 	vpush	{d8-d15}
 80291fa:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 80291fe:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 8029368 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 8029202:	4605      	mov	r5, r0
 8029204:	eeb0 ca40 	vmov.f32	s24, s0
 8029208:	eef0 ca60 	vmov.f32	s25, s1
 802920c:	eeb0 da41 	vmov.f32	s26, s2
 8029210:	eef0 da61 	vmov.f32	s27, s3
 8029214:	eeb0 ea42 	vmov.f32	s28, s4
 8029218:	eef0 ea62 	vmov.f32	s29, s5
 802921c:	460c      	mov	r4, r1
 802921e:	eef0 aa6b 	vmov.f32	s21, s23
 8029222:	2c08      	cmp	r4, #8
 8029224:	d86e      	bhi.n	8029304 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 8029226:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 802922a:	ee7d 7aee 	vsub.f32	s15, s27, s29
 802922e:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 8029232:	ee3e 7aec 	vsub.f32	s14, s29, s25
 8029236:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 802923a:	ee3c fa0d 	vadd.f32	s30, s24, s26
 802923e:	eee6 7a07 	vfma.f32	s15, s12, s14
 8029242:	ee7c faad 	vadd.f32	s31, s25, s27
 8029246:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 802924a:	ee3d aaae 	vadd.f32	s20, s27, s29
 802924e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029252:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029256:	ee2f fa2b 	vmul.f32	s30, s30, s23
 802925a:	ee6f faab 	vmul.f32	s31, s31, s23
 802925e:	ee69 9aab 	vmul.f32	s19, s19, s23
 8029262:	ee2a aa2b 	vmul.f32	s20, s20, s23
 8029266:	bf48      	it	mi
 8029268:	eef1 7a67 	vnegmi.f32	s15, s15
 802926c:	ee7f 8a29 	vadd.f32	s17, s30, s19
 8029270:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 8029274:	eef4 7acb 	vcmpe.f32	s15, s22
 8029278:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802927c:	ee68 8aab 	vmul.f32	s17, s17, s23
 8029280:	ee29 9a2b 	vmul.f32	s18, s18, s23
 8029284:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 8029288:	dd3f      	ble.n	802930a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 802928a:	ee27 7a07 	vmul.f32	s14, s14, s14
 802928e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029292:	eea6 7aa6 	vfma.f32	s14, s13, s13
 8029296:	ee27 7a06 	vmul.f32	s14, s14, s12
 802929a:	eef4 7ac7 	vcmpe.f32	s15, s14
 802929e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80292a2:	d847      	bhi.n	8029334 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 80292a4:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 80292a8:	ee3e 0aed 	vsub.f32	s0, s29, s27
 80292ac:	f000 fa59 	bl	8029762 <atan2f>
 80292b0:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 80292b4:	eeb0 8a40 	vmov.f32	s16, s0
 80292b8:	ee3d 0aec 	vsub.f32	s0, s27, s25
 80292bc:	f000 fa51 	bl	8029762 <atan2f>
 80292c0:	ee38 0a40 	vsub.f32	s0, s16, s0
 80292c4:	eddf 7a29 	vldr	s15, [pc, #164]	@ 802936c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 80292c8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80292cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80292d0:	bf48      	it	mi
 80292d2:	eeb1 0a40 	vnegmi.f32	s0, s0
 80292d6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80292da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80292de:	bfa4      	itt	ge
 80292e0:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 8029370 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 80292e4:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 80292e8:	eddf 7a22 	vldr	s15, [pc, #136]	@ 8029374 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 80292ec:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80292f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80292f4:	d51e      	bpl.n	8029334 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 80292f6:	eef0 0a49 	vmov.f32	s1, s18
 80292fa:	eeb0 0a68 	vmov.f32	s0, s17
 80292fe:	4628      	mov	r0, r5
 8029300:	f7e9 fcba 	bl	8012c78 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8029304:	ecbd 8b10 	vpop	{d8-d15}
 8029308:	bd38      	pop	{r3, r4, r5, pc}
 802930a:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 802930e:	eeb0 7a68 	vmov.f32	s14, s17
 8029312:	eea7 7aea 	vfms.f32	s14, s15, s21
 8029316:	ee7c 7aae 	vadd.f32	s15, s25, s29
 802931a:	eef0 6a49 	vmov.f32	s13, s18
 802931e:	eee7 6aea 	vfms.f32	s13, s15, s21
 8029322:	ee66 7aa6 	vmul.f32	s15, s13, s13
 8029326:	eee7 7a07 	vfma.f32	s15, s14, s14
 802932a:	eef4 7ac6 	vcmpe.f32	s15, s12
 802932e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029332:	d9e0      	bls.n	80292f6 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 8029334:	3401      	adds	r4, #1
 8029336:	eef0 0a6c 	vmov.f32	s1, s25
 802933a:	eeb0 0a4c 	vmov.f32	s0, s24
 802933e:	4621      	mov	r1, r4
 8029340:	eef0 2a49 	vmov.f32	s5, s18
 8029344:	eeb0 2a68 	vmov.f32	s4, s17
 8029348:	eef0 1a6f 	vmov.f32	s3, s31
 802934c:	eeb0 1a4f 	vmov.f32	s2, s30
 8029350:	4628      	mov	r0, r5
 8029352:	f7ff ff4f 	bl	80291f4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 8029356:	eef0 da4a 	vmov.f32	s27, s20
 802935a:	eeb0 da69 	vmov.f32	s26, s19
 802935e:	eef0 ca49 	vmov.f32	s25, s18
 8029362:	eeb0 ca68 	vmov.f32	s24, s17
 8029366:	e75c      	b.n	8029222 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 8029368:	2edbe6ff 	.word	0x2edbe6ff
 802936c:	40490fdb 	.word	0x40490fdb
 8029370:	40c90fdb 	.word	0x40c90fdb
 8029374:	3dcccccd 	.word	0x3dcccccd

08029378 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 8029378:	b530      	push	{r4, r5, lr}
 802937a:	ed2d 8b10 	vpush	{d8-d15}
 802937e:	4604      	mov	r4, r0
 8029380:	b085      	sub	sp, #20
 8029382:	eef0 8a40 	vmov.f32	s17, s0
 8029386:	eef0 9a60 	vmov.f32	s19, s1
 802938a:	eef0 fa41 	vmov.f32	s31, s2
 802938e:	eeb0 fa61 	vmov.f32	s30, s3
 8029392:	eef0 ba42 	vmov.f32	s23, s4
 8029396:	eeb0 ca62 	vmov.f32	s24, s5
 802939a:	eef0 aa43 	vmov.f32	s21, s6
 802939e:	eeb0 ba63 	vmov.f32	s22, s7
 80293a2:	460d      	mov	r5, r1
 80293a4:	2d08      	cmp	r5, #8
 80293a6:	f200 8115 	bhi.w	80295d4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 80293aa:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 80293ae:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80293b2:	ee7f 6aab 	vadd.f32	s13, s31, s23
 80293b6:	ee26 6a27 	vmul.f32	s12, s12, s15
 80293ba:	ee38 daaf 	vadd.f32	s26, s17, s31
 80293be:	ed8d 6a01 	vstr	s12, [sp, #4]
 80293c2:	eea6 6aa7 	vfma.f32	s12, s13, s15
 80293c6:	ee2d da27 	vmul.f32	s26, s26, s15
 80293ca:	ee7c ca0b 	vadd.f32	s25, s24, s22
 80293ce:	eeb0 ea4d 	vmov.f32	s28, s26
 80293d2:	eea6 eaa7 	vfma.f32	s28, s13, s15
 80293d6:	ee6c caa7 	vmul.f32	s25, s25, s15
 80293da:	ee66 6a27 	vmul.f32	s13, s12, s15
 80293de:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 80293e2:	edcd 6a03 	vstr	s13, [sp, #12]
 80293e6:	ee79 da8f 	vadd.f32	s27, s19, s30
 80293ea:	eef0 6a6c 	vmov.f32	s13, s25
 80293ee:	eee7 6a27 	vfma.f32	s13, s14, s15
 80293f2:	ee6d daa7 	vmul.f32	s27, s27, s15
 80293f6:	ee2e ea27 	vmul.f32	s28, s28, s15
 80293fa:	eef0 ea6d 	vmov.f32	s29, s27
 80293fe:	eee7 ea27 	vfma.f32	s29, s14, s15
 8029402:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8029406:	ee6e eaa7 	vmul.f32	s29, s29, s15
 802940a:	ed8d 7a02 	vstr	s14, [sp, #8]
 802940e:	ed9d 7a03 	vldr	s14, [sp, #12]
 8029412:	ee3e 9a07 	vadd.f32	s18, s28, s14
 8029416:	ed9d 7a02 	vldr	s14, [sp, #8]
 802941a:	ee3e aa87 	vadd.f32	s20, s29, s14
 802941e:	ee29 9a27 	vmul.f32	s18, s18, s15
 8029422:	ee2a aa27 	vmul.f32	s20, s20, s15
 8029426:	eef0 6a67 	vmov.f32	s13, s15
 802942a:	2d00      	cmp	r5, #0
 802942c:	f000 810d 	beq.w	802964a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8029430:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 8029434:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 8029438:	ee7b 7a69 	vsub.f32	s15, s22, s19
 802943c:	ee3f 6aea 	vsub.f32	s12, s31, s21
 8029440:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8029444:	ee3b 5aea 	vsub.f32	s10, s23, s21
 8029448:	eea6 7a27 	vfma.f32	s14, s12, s15
 802944c:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 8029450:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8029454:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 8029458:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802945c:	eea5 6a27 	vfma.f32	s12, s10, s15
 8029460:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 8029690 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8029464:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8029468:	bf48      	it	mi
 802946a:	eeb1 7a47 	vnegmi.f32	s14, s14
 802946e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029472:	eeb4 7ae4 	vcmpe.f32	s14, s9
 8029476:	bf48      	it	mi
 8029478:	eeb1 6a46 	vnegmi.f32	s12, s12
 802947c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029480:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 8029484:	f340 80aa 	ble.w	80295dc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 8029488:	eeb4 6ae4 	vcmpe.f32	s12, s9
 802948c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029490:	dd5c      	ble.n	802954c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 8029492:	ee65 5aa5 	vmul.f32	s11, s11, s11
 8029496:	ee37 7a06 	vadd.f32	s14, s14, s12
 802949a:	eee7 5aa7 	vfma.f32	s11, s15, s15
 802949e:	ee27 7a07 	vmul.f32	s14, s14, s14
 80294a2:	ee65 7a85 	vmul.f32	s15, s11, s10
 80294a6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80294aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294ae:	f200 80cc 	bhi.w	802964a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80294b2:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80294b6:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80294ba:	f000 f952 	bl	8029762 <atan2f>
 80294be:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 80294c2:	eeb0 8a40 	vmov.f32	s16, s0
 80294c6:	ee3f 0a69 	vsub.f32	s0, s30, s19
 80294ca:	f000 f94a 	bl	8029762 <atan2f>
 80294ce:	ee38 fa40 	vsub.f32	s30, s16, s0
 80294d2:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 80294d6:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 80294da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294de:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 80294e2:	bf48      	it	mi
 80294e4:	eeb1 fa4f 	vnegmi.f32	s30, s30
 80294e8:	f000 f93b 	bl	8029762 <atan2f>
 80294ec:	ee30 0a48 	vsub.f32	s0, s0, s16
 80294f0:	eddf 7a68 	vldr	s15, [pc, #416]	@ 8029694 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 80294f4:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80294f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294fc:	eeb4 fae7 	vcmpe.f32	s30, s15
 8029500:	bf48      	it	mi
 8029502:	eeb1 0a40 	vnegmi.f32	s0, s0
 8029506:	eddf 7a63 	vldr	s15, [pc, #396]	@ 8029694 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802950a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802950e:	bfa8      	it	ge
 8029510:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 8029698 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8029514:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8029518:	bfa8      	it	ge
 802951a:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 802951e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029522:	bfa8      	it	ge
 8029524:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 8029698 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8029528:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 802969c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 802952c:	bfa8      	it	ge
 802952e:	ee37 0a40 	vsubge.f32	s0, s14, s0
 8029532:	ee3f 0a00 	vadd.f32	s0, s30, s0
 8029536:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802953a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802953e:	f140 8084 	bpl.w	802964a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8029542:	eef0 0a4a 	vmov.f32	s1, s20
 8029546:	eeb0 0a49 	vmov.f32	s0, s18
 802954a:	e040      	b.n	80295ce <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 802954c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029550:	ee27 7a07 	vmul.f32	s14, s14, s14
 8029554:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8029558:	ee67 7a85 	vmul.f32	s15, s15, s10
 802955c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8029560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029564:	d871      	bhi.n	802964a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8029566:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802956a:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802956e:	f000 f8f8 	bl	8029762 <atan2f>
 8029572:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8029576:	eeb0 8a40 	vmov.f32	s16, s0
 802957a:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802957e:	f000 f8f0 	bl	8029762 <atan2f>
 8029582:	ee38 0a40 	vsub.f32	s0, s16, s0
 8029586:	eddf 7a43 	vldr	s15, [pc, #268]	@ 8029694 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802958a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802958e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029592:	bf48      	it	mi
 8029594:	eeb1 0a40 	vnegmi.f32	s0, s0
 8029598:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802959c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295a0:	bfa4      	itt	ge
 80295a2:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 8029698 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 80295a6:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 80295aa:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 802969c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 80295ae:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80295b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295b6:	d548      	bpl.n	802964a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80295b8:	eef0 0a4f 	vmov.f32	s1, s30
 80295bc:	eeb0 0a6f 	vmov.f32	s0, s31
 80295c0:	4620      	mov	r0, r4
 80295c2:	f7e9 fb59 	bl	8012c78 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 80295c6:	eef0 0a4c 	vmov.f32	s1, s24
 80295ca:	eeb0 0a6b 	vmov.f32	s0, s23
 80295ce:	4620      	mov	r0, r4
 80295d0:	f7e9 fb52 	bl	8012c78 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 80295d4:	b005      	add	sp, #20
 80295d6:	ecbd 8b10 	vpop	{d8-d15}
 80295da:	bd30      	pop	{r4, r5, pc}
 80295dc:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8029690 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 80295e0:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80295e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295e8:	dd19      	ble.n	802961e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 80295ea:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80295ee:	ee26 7a06 	vmul.f32	s14, s12, s12
 80295f2:	eee5 7aa5 	vfma.f32	s15, s11, s11
 80295f6:	ee67 7a85 	vmul.f32	s15, s15, s10
 80295fa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80295fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029602:	d822      	bhi.n	802964a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8029604:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8029608:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 802960c:	f000 f8a9 	bl	8029762 <atan2f>
 8029610:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8029614:	eeb0 8a40 	vmov.f32	s16, s0
 8029618:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802961c:	e7af      	b.n	802957e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 802961e:	ee78 7aaa 	vadd.f32	s15, s17, s21
 8029622:	eeb0 7a49 	vmov.f32	s14, s18
 8029626:	eea7 7ae6 	vfms.f32	s14, s15, s13
 802962a:	ee79 7a8b 	vadd.f32	s15, s19, s22
 802962e:	eeb0 6a4a 	vmov.f32	s12, s20
 8029632:	eea7 6ae6 	vfms.f32	s12, s15, s13
 8029636:	ee66 7a06 	vmul.f32	s15, s12, s12
 802963a:	eee7 7a07 	vfma.f32	s15, s14, s14
 802963e:	eef4 7ac5 	vcmpe.f32	s15, s10
 8029642:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029646:	f67f af7c 	bls.w	8029542 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 802964a:	3501      	adds	r5, #1
 802964c:	eef0 0a69 	vmov.f32	s1, s19
 8029650:	eeb0 0a68 	vmov.f32	s0, s17
 8029654:	4629      	mov	r1, r5
 8029656:	eef0 3a4a 	vmov.f32	s7, s20
 802965a:	eeb0 3a49 	vmov.f32	s6, s18
 802965e:	eef0 2a6e 	vmov.f32	s5, s29
 8029662:	eeb0 2a4e 	vmov.f32	s4, s28
 8029666:	eef0 1a6d 	vmov.f32	s3, s27
 802966a:	eeb0 1a4d 	vmov.f32	s2, s26
 802966e:	4620      	mov	r0, r4
 8029670:	f7ff fe82 	bl	8029378 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 8029674:	eeb0 ca6c 	vmov.f32	s24, s25
 8029678:	eddd ba01 	vldr	s23, [sp, #4]
 802967c:	ed9d fa02 	vldr	s30, [sp, #8]
 8029680:	eddd fa03 	vldr	s31, [sp, #12]
 8029684:	eef0 9a4a 	vmov.f32	s19, s20
 8029688:	eef0 8a49 	vmov.f32	s17, s18
 802968c:	e68a      	b.n	80293a4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 802968e:	bf00      	nop
 8029690:	2edbe6ff 	.word	0x2edbe6ff
 8029694:	40490fdb 	.word	0x40490fdb
 8029698:	40c90fdb 	.word	0x40c90fdb
 802969c:	3dcccccd 	.word	0x3dcccccd

080296a0 <_ZN8touchgfx6CanvasD1Ev>:
 80296a0:	b510      	push	{r4, lr}
 80296a2:	4b04      	ldr	r3, [pc, #16]	@ (80296b4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80296a4:	4604      	mov	r4, r0
 80296a6:	f840 3b14 	str.w	r3, [r0], #20
 80296aa:	f7ea fdf9 	bl	80142a0 <_ZN8touchgfx7OutlineD1Ev>
 80296ae:	4620      	mov	r0, r4
 80296b0:	bd10      	pop	{r4, pc}
 80296b2:	bf00      	nop
 80296b4:	0802ea44 	.word	0x0802ea44

080296b8 <_ZN8touchgfx6CanvasD0Ev>:
 80296b8:	b510      	push	{r4, lr}
 80296ba:	4604      	mov	r4, r0
 80296bc:	f7ff fff0 	bl	80296a0 <_ZN8touchgfx6CanvasD1Ev>
 80296c0:	4620      	mov	r0, r4
 80296c2:	2174      	movs	r1, #116	@ 0x74
 80296c4:	f000 f826 	bl	8029714 <_ZdlPvj>
 80296c8:	4620      	mov	r0, r4
 80296ca:	bd10      	pop	{r4, pc}

080296cc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80296cc:	b570      	push	{r4, r5, r6, lr}
 80296ce:	790b      	ldrb	r3, [r1, #4]
 80296d0:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 80296d4:	2b00      	cmp	r3, #0
 80296d6:	bf0c      	ite	eq
 80296d8:	2301      	moveq	r3, #1
 80296da:	2300      	movne	r3, #0
 80296dc:	4604      	mov	r4, r0
 80296de:	460e      	mov	r6, r1
 80296e0:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 80296e4:	d109      	bne.n	80296fa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80296e6:	b14d      	cbz	r5, 80296fc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80296e8:	7933      	ldrb	r3, [r6, #4]
 80296ea:	2b01      	cmp	r3, #1
 80296ec:	d10c      	bne.n	8029708 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80296ee:	6823      	ldr	r3, [r4, #0]
 80296f0:	4620      	mov	r0, r4
 80296f2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80296f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80296f8:	4718      	bx	r3
 80296fa:	b12d      	cbz	r5, 8029708 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80296fc:	6823      	ldr	r3, [r4, #0]
 80296fe:	4620      	mov	r0, r4
 8029700:	695b      	ldr	r3, [r3, #20]
 8029702:	4798      	blx	r3
 8029704:	2d00      	cmp	r5, #0
 8029706:	d1ef      	bne.n	80296e8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8029708:	bd70      	pop	{r4, r5, r6, pc}

0802970a <__aeabi_atexit>:
 802970a:	460b      	mov	r3, r1
 802970c:	4601      	mov	r1, r0
 802970e:	4618      	mov	r0, r3
 8029710:	f001 b81e 	b.w	802a750 <__cxa_atexit>

08029714 <_ZdlPvj>:
 8029714:	f000 b812 	b.w	802973c <_ZdlPv>

08029718 <__cxa_guard_acquire>:
 8029718:	6802      	ldr	r2, [r0, #0]
 802971a:	07d2      	lsls	r2, r2, #31
 802971c:	4603      	mov	r3, r0
 802971e:	d405      	bmi.n	802972c <__cxa_guard_acquire+0x14>
 8029720:	7842      	ldrb	r2, [r0, #1]
 8029722:	b102      	cbz	r2, 8029726 <__cxa_guard_acquire+0xe>
 8029724:	deff      	udf	#255	@ 0xff
 8029726:	2001      	movs	r0, #1
 8029728:	7058      	strb	r0, [r3, #1]
 802972a:	4770      	bx	lr
 802972c:	2000      	movs	r0, #0
 802972e:	4770      	bx	lr

08029730 <__cxa_guard_release>:
 8029730:	2301      	movs	r3, #1
 8029732:	6003      	str	r3, [r0, #0]
 8029734:	4770      	bx	lr

08029736 <__cxa_pure_virtual>:
 8029736:	b508      	push	{r3, lr}
 8029738:	f000 f80e 	bl	8029758 <_ZSt9terminatev>

0802973c <_ZdlPv>:
 802973c:	f000 bf52 	b.w	802a5e4 <free>

08029740 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8029740:	b508      	push	{r3, lr}
 8029742:	4780      	blx	r0
 8029744:	f000 ff1a 	bl	802a57c <abort>

08029748 <_ZSt13get_terminatev>:
 8029748:	4b02      	ldr	r3, [pc, #8]	@ (8029754 <_ZSt13get_terminatev+0xc>)
 802974a:	6818      	ldr	r0, [r3, #0]
 802974c:	f3bf 8f5b 	dmb	ish
 8029750:	4770      	bx	lr
 8029752:	bf00      	nop
 8029754:	2000011c 	.word	0x2000011c

08029758 <_ZSt9terminatev>:
 8029758:	b508      	push	{r3, lr}
 802975a:	f7ff fff5 	bl	8029748 <_ZSt13get_terminatev>
 802975e:	f7ff ffef 	bl	8029740 <_ZN10__cxxabiv111__terminateEPFvvE>

08029762 <atan2f>:
 8029762:	f000 b94d 	b.w	8029a00 <__ieee754_atan2f>
	...

08029768 <sqrtf>:
 8029768:	b508      	push	{r3, lr}
 802976a:	ed2d 8b02 	vpush	{d8}
 802976e:	eeb0 8a40 	vmov.f32	s16, s0
 8029772:	f000 f8a1 	bl	80298b8 <__ieee754_sqrtf>
 8029776:	eeb4 8a48 	vcmp.f32	s16, s16
 802977a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802977e:	d60c      	bvs.n	802979a <sqrtf+0x32>
 8029780:	eddf 8a07 	vldr	s17, [pc, #28]	@ 80297a0 <sqrtf+0x38>
 8029784:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8029788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802978c:	d505      	bpl.n	802979a <sqrtf+0x32>
 802978e:	f001 f9a7 	bl	802aae0 <__errno>
 8029792:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8029796:	2321      	movs	r3, #33	@ 0x21
 8029798:	6003      	str	r3, [r0, #0]
 802979a:	ecbd 8b02 	vpop	{d8}
 802979e:	bd08      	pop	{r3, pc}
 80297a0:	00000000 	.word	0x00000000

080297a4 <cosf>:
 80297a4:	ee10 3a10 	vmov	r3, s0
 80297a8:	b507      	push	{r0, r1, r2, lr}
 80297aa:	4a1e      	ldr	r2, [pc, #120]	@ (8029824 <cosf+0x80>)
 80297ac:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80297b0:	4293      	cmp	r3, r2
 80297b2:	d806      	bhi.n	80297c2 <cosf+0x1e>
 80297b4:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8029828 <cosf+0x84>
 80297b8:	b003      	add	sp, #12
 80297ba:	f85d eb04 	ldr.w	lr, [sp], #4
 80297be:	f000 b87f 	b.w	80298c0 <__kernel_cosf>
 80297c2:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80297c6:	d304      	bcc.n	80297d2 <cosf+0x2e>
 80297c8:	ee30 0a40 	vsub.f32	s0, s0, s0
 80297cc:	b003      	add	sp, #12
 80297ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80297d2:	4668      	mov	r0, sp
 80297d4:	f000 f9b4 	bl	8029b40 <__ieee754_rem_pio2f>
 80297d8:	f000 0003 	and.w	r0, r0, #3
 80297dc:	2801      	cmp	r0, #1
 80297de:	d009      	beq.n	80297f4 <cosf+0x50>
 80297e0:	2802      	cmp	r0, #2
 80297e2:	d010      	beq.n	8029806 <cosf+0x62>
 80297e4:	b9b0      	cbnz	r0, 8029814 <cosf+0x70>
 80297e6:	eddd 0a01 	vldr	s1, [sp, #4]
 80297ea:	ed9d 0a00 	vldr	s0, [sp]
 80297ee:	f000 f867 	bl	80298c0 <__kernel_cosf>
 80297f2:	e7eb      	b.n	80297cc <cosf+0x28>
 80297f4:	eddd 0a01 	vldr	s1, [sp, #4]
 80297f8:	ed9d 0a00 	vldr	s0, [sp]
 80297fc:	f000 f8b8 	bl	8029970 <__kernel_sinf>
 8029800:	eeb1 0a40 	vneg.f32	s0, s0
 8029804:	e7e2      	b.n	80297cc <cosf+0x28>
 8029806:	eddd 0a01 	vldr	s1, [sp, #4]
 802980a:	ed9d 0a00 	vldr	s0, [sp]
 802980e:	f000 f857 	bl	80298c0 <__kernel_cosf>
 8029812:	e7f5      	b.n	8029800 <cosf+0x5c>
 8029814:	eddd 0a01 	vldr	s1, [sp, #4]
 8029818:	ed9d 0a00 	vldr	s0, [sp]
 802981c:	2001      	movs	r0, #1
 802981e:	f000 f8a7 	bl	8029970 <__kernel_sinf>
 8029822:	e7d3      	b.n	80297cc <cosf+0x28>
 8029824:	3f490fd8 	.word	0x3f490fd8
 8029828:	00000000 	.word	0x00000000

0802982c <sinf>:
 802982c:	ee10 3a10 	vmov	r3, s0
 8029830:	b507      	push	{r0, r1, r2, lr}
 8029832:	4a1f      	ldr	r2, [pc, #124]	@ (80298b0 <sinf+0x84>)
 8029834:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8029838:	4293      	cmp	r3, r2
 802983a:	d807      	bhi.n	802984c <sinf+0x20>
 802983c:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 80298b4 <sinf+0x88>
 8029840:	2000      	movs	r0, #0
 8029842:	b003      	add	sp, #12
 8029844:	f85d eb04 	ldr.w	lr, [sp], #4
 8029848:	f000 b892 	b.w	8029970 <__kernel_sinf>
 802984c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8029850:	d304      	bcc.n	802985c <sinf+0x30>
 8029852:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029856:	b003      	add	sp, #12
 8029858:	f85d fb04 	ldr.w	pc, [sp], #4
 802985c:	4668      	mov	r0, sp
 802985e:	f000 f96f 	bl	8029b40 <__ieee754_rem_pio2f>
 8029862:	f000 0003 	and.w	r0, r0, #3
 8029866:	2801      	cmp	r0, #1
 8029868:	d00a      	beq.n	8029880 <sinf+0x54>
 802986a:	2802      	cmp	r0, #2
 802986c:	d00f      	beq.n	802988e <sinf+0x62>
 802986e:	b9c0      	cbnz	r0, 80298a2 <sinf+0x76>
 8029870:	eddd 0a01 	vldr	s1, [sp, #4]
 8029874:	ed9d 0a00 	vldr	s0, [sp]
 8029878:	2001      	movs	r0, #1
 802987a:	f000 f879 	bl	8029970 <__kernel_sinf>
 802987e:	e7ea      	b.n	8029856 <sinf+0x2a>
 8029880:	eddd 0a01 	vldr	s1, [sp, #4]
 8029884:	ed9d 0a00 	vldr	s0, [sp]
 8029888:	f000 f81a 	bl	80298c0 <__kernel_cosf>
 802988c:	e7e3      	b.n	8029856 <sinf+0x2a>
 802988e:	eddd 0a01 	vldr	s1, [sp, #4]
 8029892:	ed9d 0a00 	vldr	s0, [sp]
 8029896:	2001      	movs	r0, #1
 8029898:	f000 f86a 	bl	8029970 <__kernel_sinf>
 802989c:	eeb1 0a40 	vneg.f32	s0, s0
 80298a0:	e7d9      	b.n	8029856 <sinf+0x2a>
 80298a2:	eddd 0a01 	vldr	s1, [sp, #4]
 80298a6:	ed9d 0a00 	vldr	s0, [sp]
 80298aa:	f000 f809 	bl	80298c0 <__kernel_cosf>
 80298ae:	e7f5      	b.n	802989c <sinf+0x70>
 80298b0:	3f490fd8 	.word	0x3f490fd8
 80298b4:	00000000 	.word	0x00000000

080298b8 <__ieee754_sqrtf>:
 80298b8:	eeb1 0ac0 	vsqrt.f32	s0, s0
 80298bc:	4770      	bx	lr
	...

080298c0 <__kernel_cosf>:
 80298c0:	ee10 3a10 	vmov	r3, s0
 80298c4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80298c8:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 80298cc:	eef0 6a40 	vmov.f32	s13, s0
 80298d0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80298d4:	d204      	bcs.n	80298e0 <__kernel_cosf+0x20>
 80298d6:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 80298da:	ee17 2a90 	vmov	r2, s15
 80298de:	b342      	cbz	r2, 8029932 <__kernel_cosf+0x72>
 80298e0:	ee26 7aa6 	vmul.f32	s14, s13, s13
 80298e4:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8029950 <__kernel_cosf+0x90>
 80298e8:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8029954 <__kernel_cosf+0x94>
 80298ec:	4a1a      	ldr	r2, [pc, #104]	@ (8029958 <__kernel_cosf+0x98>)
 80298ee:	eea7 6a27 	vfma.f32	s12, s14, s15
 80298f2:	4293      	cmp	r3, r2
 80298f4:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802995c <__kernel_cosf+0x9c>
 80298f8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80298fc:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8029960 <__kernel_cosf+0xa0>
 8029900:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029904:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8029964 <__kernel_cosf+0xa4>
 8029908:	eee6 7a07 	vfma.f32	s15, s12, s14
 802990c:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8029968 <__kernel_cosf+0xa8>
 8029910:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029914:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8029918:	ee26 6a07 	vmul.f32	s12, s12, s14
 802991c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8029920:	eee7 0a06 	vfma.f32	s1, s14, s12
 8029924:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029928:	d804      	bhi.n	8029934 <__kernel_cosf+0x74>
 802992a:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802992e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8029932:	4770      	bx	lr
 8029934:	4a0d      	ldr	r2, [pc, #52]	@ (802996c <__kernel_cosf+0xac>)
 8029936:	4293      	cmp	r3, r2
 8029938:	bf9a      	itte	ls
 802993a:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 802993e:	ee07 3a10 	vmovls	s14, r3
 8029942:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8029946:	ee30 0a47 	vsub.f32	s0, s0, s14
 802994a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802994e:	e7ec      	b.n	802992a <__kernel_cosf+0x6a>
 8029950:	ad47d74e 	.word	0xad47d74e
 8029954:	310f74f6 	.word	0x310f74f6
 8029958:	3e999999 	.word	0x3e999999
 802995c:	b493f27c 	.word	0xb493f27c
 8029960:	37d00d01 	.word	0x37d00d01
 8029964:	bab60b61 	.word	0xbab60b61
 8029968:	3d2aaaab 	.word	0x3d2aaaab
 802996c:	3f480000 	.word	0x3f480000

08029970 <__kernel_sinf>:
 8029970:	ee10 3a10 	vmov	r3, s0
 8029974:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8029978:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 802997c:	d204      	bcs.n	8029988 <__kernel_sinf+0x18>
 802997e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8029982:	ee17 3a90 	vmov	r3, s15
 8029986:	b35b      	cbz	r3, 80299e0 <__kernel_sinf+0x70>
 8029988:	ee20 7a00 	vmul.f32	s14, s0, s0
 802998c:	eddf 7a15 	vldr	s15, [pc, #84]	@ 80299e4 <__kernel_sinf+0x74>
 8029990:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 80299e8 <__kernel_sinf+0x78>
 8029994:	eea7 6a27 	vfma.f32	s12, s14, s15
 8029998:	eddf 7a14 	vldr	s15, [pc, #80]	@ 80299ec <__kernel_sinf+0x7c>
 802999c:	eee6 7a07 	vfma.f32	s15, s12, s14
 80299a0:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 80299f0 <__kernel_sinf+0x80>
 80299a4:	eea7 6a87 	vfma.f32	s12, s15, s14
 80299a8:	eddf 7a12 	vldr	s15, [pc, #72]	@ 80299f4 <__kernel_sinf+0x84>
 80299ac:	ee60 6a07 	vmul.f32	s13, s0, s14
 80299b0:	eee6 7a07 	vfma.f32	s15, s12, s14
 80299b4:	b930      	cbnz	r0, 80299c4 <__kernel_sinf+0x54>
 80299b6:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 80299f8 <__kernel_sinf+0x88>
 80299ba:	eea7 6a27 	vfma.f32	s12, s14, s15
 80299be:	eea6 0a26 	vfma.f32	s0, s12, s13
 80299c2:	4770      	bx	lr
 80299c4:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80299c8:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80299cc:	eee0 7a86 	vfma.f32	s15, s1, s12
 80299d0:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80299d4:	eddf 7a09 	vldr	s15, [pc, #36]	@ 80299fc <__kernel_sinf+0x8c>
 80299d8:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80299dc:	ee30 0a60 	vsub.f32	s0, s0, s1
 80299e0:	4770      	bx	lr
 80299e2:	bf00      	nop
 80299e4:	2f2ec9d3 	.word	0x2f2ec9d3
 80299e8:	b2d72f34 	.word	0xb2d72f34
 80299ec:	3638ef1b 	.word	0x3638ef1b
 80299f0:	b9500d01 	.word	0xb9500d01
 80299f4:	3c088889 	.word	0x3c088889
 80299f8:	be2aaaab 	.word	0xbe2aaaab
 80299fc:	3e2aaaab 	.word	0x3e2aaaab

08029a00 <__ieee754_atan2f>:
 8029a00:	ee10 2a90 	vmov	r2, s1
 8029a04:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8029a08:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8029a0c:	b510      	push	{r4, lr}
 8029a0e:	eef0 7a40 	vmov.f32	s15, s0
 8029a12:	d806      	bhi.n	8029a22 <__ieee754_atan2f+0x22>
 8029a14:	ee10 0a10 	vmov	r0, s0
 8029a18:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8029a1c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8029a20:	d904      	bls.n	8029a2c <__ieee754_atan2f+0x2c>
 8029a22:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8029a26:	eeb0 0a67 	vmov.f32	s0, s15
 8029a2a:	bd10      	pop	{r4, pc}
 8029a2c:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8029a30:	d103      	bne.n	8029a3a <__ieee754_atan2f+0x3a>
 8029a32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029a36:	f000 b9b3 	b.w	8029da0 <atanf>
 8029a3a:	1794      	asrs	r4, r2, #30
 8029a3c:	f004 0402 	and.w	r4, r4, #2
 8029a40:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8029a44:	b943      	cbnz	r3, 8029a58 <__ieee754_atan2f+0x58>
 8029a46:	2c02      	cmp	r4, #2
 8029a48:	d05e      	beq.n	8029b08 <__ieee754_atan2f+0x108>
 8029a4a:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8029b1c <__ieee754_atan2f+0x11c>
 8029a4e:	2c03      	cmp	r4, #3
 8029a50:	bf08      	it	eq
 8029a52:	eef0 7a47 	vmoveq.f32	s15, s14
 8029a56:	e7e6      	b.n	8029a26 <__ieee754_atan2f+0x26>
 8029a58:	b941      	cbnz	r1, 8029a6c <__ieee754_atan2f+0x6c>
 8029a5a:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8029b20 <__ieee754_atan2f+0x120>
 8029a5e:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8029b24 <__ieee754_atan2f+0x124>
 8029a62:	2800      	cmp	r0, #0
 8029a64:	bfa8      	it	ge
 8029a66:	eef0 7a47 	vmovge.f32	s15, s14
 8029a6a:	e7dc      	b.n	8029a26 <__ieee754_atan2f+0x26>
 8029a6c:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8029a70:	d110      	bne.n	8029a94 <__ieee754_atan2f+0x94>
 8029a72:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8029a76:	f104 34ff 	add.w	r4, r4, #4294967295
 8029a7a:	d107      	bne.n	8029a8c <__ieee754_atan2f+0x8c>
 8029a7c:	2c02      	cmp	r4, #2
 8029a7e:	d846      	bhi.n	8029b0e <__ieee754_atan2f+0x10e>
 8029a80:	4b29      	ldr	r3, [pc, #164]	@ (8029b28 <__ieee754_atan2f+0x128>)
 8029a82:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8029a86:	edd3 7a00 	vldr	s15, [r3]
 8029a8a:	e7cc      	b.n	8029a26 <__ieee754_atan2f+0x26>
 8029a8c:	2c02      	cmp	r4, #2
 8029a8e:	d841      	bhi.n	8029b14 <__ieee754_atan2f+0x114>
 8029a90:	4b26      	ldr	r3, [pc, #152]	@ (8029b2c <__ieee754_atan2f+0x12c>)
 8029a92:	e7f6      	b.n	8029a82 <__ieee754_atan2f+0x82>
 8029a94:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8029a98:	d0df      	beq.n	8029a5a <__ieee754_atan2f+0x5a>
 8029a9a:	1a5b      	subs	r3, r3, r1
 8029a9c:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8029aa0:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8029aa4:	da1a      	bge.n	8029adc <__ieee754_atan2f+0xdc>
 8029aa6:	2a00      	cmp	r2, #0
 8029aa8:	da01      	bge.n	8029aae <__ieee754_atan2f+0xae>
 8029aaa:	313c      	adds	r1, #60	@ 0x3c
 8029aac:	db19      	blt.n	8029ae2 <__ieee754_atan2f+0xe2>
 8029aae:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8029ab2:	f000 fa49 	bl	8029f48 <fabsf>
 8029ab6:	f000 f973 	bl	8029da0 <atanf>
 8029aba:	eef0 7a40 	vmov.f32	s15, s0
 8029abe:	2c01      	cmp	r4, #1
 8029ac0:	d012      	beq.n	8029ae8 <__ieee754_atan2f+0xe8>
 8029ac2:	2c02      	cmp	r4, #2
 8029ac4:	d017      	beq.n	8029af6 <__ieee754_atan2f+0xf6>
 8029ac6:	2c00      	cmp	r4, #0
 8029ac8:	d0ad      	beq.n	8029a26 <__ieee754_atan2f+0x26>
 8029aca:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8029b30 <__ieee754_atan2f+0x130>
 8029ace:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029ad2:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8029b34 <__ieee754_atan2f+0x134>
 8029ad6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029ada:	e7a4      	b.n	8029a26 <__ieee754_atan2f+0x26>
 8029adc:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8029b24 <__ieee754_atan2f+0x124>
 8029ae0:	e7ed      	b.n	8029abe <__ieee754_atan2f+0xbe>
 8029ae2:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8029b38 <__ieee754_atan2f+0x138>
 8029ae6:	e7ea      	b.n	8029abe <__ieee754_atan2f+0xbe>
 8029ae8:	ee17 3a90 	vmov	r3, s15
 8029aec:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8029af0:	ee07 3a90 	vmov	s15, r3
 8029af4:	e797      	b.n	8029a26 <__ieee754_atan2f+0x26>
 8029af6:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8029b30 <__ieee754_atan2f+0x130>
 8029afa:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029afe:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8029b34 <__ieee754_atan2f+0x134>
 8029b02:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029b06:	e78e      	b.n	8029a26 <__ieee754_atan2f+0x26>
 8029b08:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8029b34 <__ieee754_atan2f+0x134>
 8029b0c:	e78b      	b.n	8029a26 <__ieee754_atan2f+0x26>
 8029b0e:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8029b3c <__ieee754_atan2f+0x13c>
 8029b12:	e788      	b.n	8029a26 <__ieee754_atan2f+0x26>
 8029b14:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8029b38 <__ieee754_atan2f+0x138>
 8029b18:	e785      	b.n	8029a26 <__ieee754_atan2f+0x26>
 8029b1a:	bf00      	nop
 8029b1c:	c0490fdb 	.word	0xc0490fdb
 8029b20:	bfc90fdb 	.word	0xbfc90fdb
 8029b24:	3fc90fdb 	.word	0x3fc90fdb
 8029b28:	0802ea5c 	.word	0x0802ea5c
 8029b2c:	0802ea50 	.word	0x0802ea50
 8029b30:	33bbbd2e 	.word	0x33bbbd2e
 8029b34:	40490fdb 	.word	0x40490fdb
 8029b38:	00000000 	.word	0x00000000
 8029b3c:	3f490fdb 	.word	0x3f490fdb

08029b40 <__ieee754_rem_pio2f>:
 8029b40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029b42:	ee10 6a10 	vmov	r6, s0
 8029b46:	4b88      	ldr	r3, [pc, #544]	@ (8029d68 <__ieee754_rem_pio2f+0x228>)
 8029b48:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8029b4c:	429d      	cmp	r5, r3
 8029b4e:	b087      	sub	sp, #28
 8029b50:	4604      	mov	r4, r0
 8029b52:	d805      	bhi.n	8029b60 <__ieee754_rem_pio2f+0x20>
 8029b54:	2300      	movs	r3, #0
 8029b56:	ed80 0a00 	vstr	s0, [r0]
 8029b5a:	6043      	str	r3, [r0, #4]
 8029b5c:	2000      	movs	r0, #0
 8029b5e:	e022      	b.n	8029ba6 <__ieee754_rem_pio2f+0x66>
 8029b60:	4b82      	ldr	r3, [pc, #520]	@ (8029d6c <__ieee754_rem_pio2f+0x22c>)
 8029b62:	429d      	cmp	r5, r3
 8029b64:	d83a      	bhi.n	8029bdc <__ieee754_rem_pio2f+0x9c>
 8029b66:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8029b6a:	2e00      	cmp	r6, #0
 8029b6c:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8029d70 <__ieee754_rem_pio2f+0x230>
 8029b70:	4a80      	ldr	r2, [pc, #512]	@ (8029d74 <__ieee754_rem_pio2f+0x234>)
 8029b72:	f023 030f 	bic.w	r3, r3, #15
 8029b76:	dd18      	ble.n	8029baa <__ieee754_rem_pio2f+0x6a>
 8029b78:	4293      	cmp	r3, r2
 8029b7a:	ee70 7a47 	vsub.f32	s15, s0, s14
 8029b7e:	bf09      	itett	eq
 8029b80:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8029d78 <__ieee754_rem_pio2f+0x238>
 8029b84:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 8029d7c <__ieee754_rem_pio2f+0x23c>
 8029b88:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8029d80 <__ieee754_rem_pio2f+0x240>
 8029b8c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8029b90:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8029b94:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029b98:	ed80 7a00 	vstr	s14, [r0]
 8029b9c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029ba0:	edc0 7a01 	vstr	s15, [r0, #4]
 8029ba4:	2001      	movs	r0, #1
 8029ba6:	b007      	add	sp, #28
 8029ba8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029baa:	4293      	cmp	r3, r2
 8029bac:	ee70 7a07 	vadd.f32	s15, s0, s14
 8029bb0:	bf09      	itett	eq
 8029bb2:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8029d78 <__ieee754_rem_pio2f+0x238>
 8029bb6:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 8029d7c <__ieee754_rem_pio2f+0x23c>
 8029bba:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8029d80 <__ieee754_rem_pio2f+0x240>
 8029bbe:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8029bc2:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029bc6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029bca:	ed80 7a00 	vstr	s14, [r0]
 8029bce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8029bd2:	edc0 7a01 	vstr	s15, [r0, #4]
 8029bd6:	f04f 30ff 	mov.w	r0, #4294967295
 8029bda:	e7e4      	b.n	8029ba6 <__ieee754_rem_pio2f+0x66>
 8029bdc:	4b69      	ldr	r3, [pc, #420]	@ (8029d84 <__ieee754_rem_pio2f+0x244>)
 8029bde:	429d      	cmp	r5, r3
 8029be0:	d873      	bhi.n	8029cca <__ieee754_rem_pio2f+0x18a>
 8029be2:	f000 f9b1 	bl	8029f48 <fabsf>
 8029be6:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8029d88 <__ieee754_rem_pio2f+0x248>
 8029bea:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8029bee:	eee0 7a07 	vfma.f32	s15, s0, s14
 8029bf2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029bf6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8029bfa:	ee17 0a90 	vmov	r0, s15
 8029bfe:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8029d70 <__ieee754_rem_pio2f+0x230>
 8029c02:	eea7 0a67 	vfms.f32	s0, s14, s15
 8029c06:	281f      	cmp	r0, #31
 8029c08:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8029d7c <__ieee754_rem_pio2f+0x23c>
 8029c0c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029c10:	eeb1 6a47 	vneg.f32	s12, s14
 8029c14:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029c18:	ee16 1a90 	vmov	r1, s13
 8029c1c:	dc09      	bgt.n	8029c32 <__ieee754_rem_pio2f+0xf2>
 8029c1e:	4a5b      	ldr	r2, [pc, #364]	@ (8029d8c <__ieee754_rem_pio2f+0x24c>)
 8029c20:	1e47      	subs	r7, r0, #1
 8029c22:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8029c26:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8029c2a:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8029c2e:	4293      	cmp	r3, r2
 8029c30:	d107      	bne.n	8029c42 <__ieee754_rem_pio2f+0x102>
 8029c32:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8029c36:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8029c3a:	2a08      	cmp	r2, #8
 8029c3c:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8029c40:	dc14      	bgt.n	8029c6c <__ieee754_rem_pio2f+0x12c>
 8029c42:	6021      	str	r1, [r4, #0]
 8029c44:	ed94 7a00 	vldr	s14, [r4]
 8029c48:	ee30 0a47 	vsub.f32	s0, s0, s14
 8029c4c:	2e00      	cmp	r6, #0
 8029c4e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8029c52:	ed84 0a01 	vstr	s0, [r4, #4]
 8029c56:	daa6      	bge.n	8029ba6 <__ieee754_rem_pio2f+0x66>
 8029c58:	eeb1 7a47 	vneg.f32	s14, s14
 8029c5c:	eeb1 0a40 	vneg.f32	s0, s0
 8029c60:	ed84 7a00 	vstr	s14, [r4]
 8029c64:	ed84 0a01 	vstr	s0, [r4, #4]
 8029c68:	4240      	negs	r0, r0
 8029c6a:	e79c      	b.n	8029ba6 <__ieee754_rem_pio2f+0x66>
 8029c6c:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8029d78 <__ieee754_rem_pio2f+0x238>
 8029c70:	eef0 6a40 	vmov.f32	s13, s0
 8029c74:	eee6 6a25 	vfma.f32	s13, s12, s11
 8029c78:	ee70 7a66 	vsub.f32	s15, s0, s13
 8029c7c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8029c80:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8029d80 <__ieee754_rem_pio2f+0x240>
 8029c84:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8029c88:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8029c8c:	ee15 2a90 	vmov	r2, s11
 8029c90:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8029c94:	1a5b      	subs	r3, r3, r1
 8029c96:	2b19      	cmp	r3, #25
 8029c98:	dc04      	bgt.n	8029ca4 <__ieee754_rem_pio2f+0x164>
 8029c9a:	edc4 5a00 	vstr	s11, [r4]
 8029c9e:	eeb0 0a66 	vmov.f32	s0, s13
 8029ca2:	e7cf      	b.n	8029c44 <__ieee754_rem_pio2f+0x104>
 8029ca4:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8029d90 <__ieee754_rem_pio2f+0x250>
 8029ca8:	eeb0 0a66 	vmov.f32	s0, s13
 8029cac:	eea6 0a25 	vfma.f32	s0, s12, s11
 8029cb0:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8029cb4:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8029d94 <__ieee754_rem_pio2f+0x254>
 8029cb8:	eee6 7a25 	vfma.f32	s15, s12, s11
 8029cbc:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8029cc0:	ee30 7a67 	vsub.f32	s14, s0, s15
 8029cc4:	ed84 7a00 	vstr	s14, [r4]
 8029cc8:	e7bc      	b.n	8029c44 <__ieee754_rem_pio2f+0x104>
 8029cca:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8029cce:	d306      	bcc.n	8029cde <__ieee754_rem_pio2f+0x19e>
 8029cd0:	ee70 7a40 	vsub.f32	s15, s0, s0
 8029cd4:	edc0 7a01 	vstr	s15, [r0, #4]
 8029cd8:	edc0 7a00 	vstr	s15, [r0]
 8029cdc:	e73e      	b.n	8029b5c <__ieee754_rem_pio2f+0x1c>
 8029cde:	15ea      	asrs	r2, r5, #23
 8029ce0:	3a86      	subs	r2, #134	@ 0x86
 8029ce2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8029ce6:	ee07 3a90 	vmov	s15, r3
 8029cea:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8029cee:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8029d98 <__ieee754_rem_pio2f+0x258>
 8029cf2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8029cf6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029cfa:	ed8d 7a03 	vstr	s14, [sp, #12]
 8029cfe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8029d02:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8029d06:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8029d0a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029d0e:	ed8d 7a04 	vstr	s14, [sp, #16]
 8029d12:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8029d16:	eef5 7a40 	vcmp.f32	s15, #0.0
 8029d1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029d1e:	edcd 7a05 	vstr	s15, [sp, #20]
 8029d22:	d11e      	bne.n	8029d62 <__ieee754_rem_pio2f+0x222>
 8029d24:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8029d28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029d2c:	bf0c      	ite	eq
 8029d2e:	2301      	moveq	r3, #1
 8029d30:	2302      	movne	r3, #2
 8029d32:	491a      	ldr	r1, [pc, #104]	@ (8029d9c <__ieee754_rem_pio2f+0x25c>)
 8029d34:	9101      	str	r1, [sp, #4]
 8029d36:	2102      	movs	r1, #2
 8029d38:	9100      	str	r1, [sp, #0]
 8029d3a:	a803      	add	r0, sp, #12
 8029d3c:	4621      	mov	r1, r4
 8029d3e:	f000 f971 	bl	802a024 <__kernel_rem_pio2f>
 8029d42:	2e00      	cmp	r6, #0
 8029d44:	f6bf af2f 	bge.w	8029ba6 <__ieee754_rem_pio2f+0x66>
 8029d48:	edd4 7a00 	vldr	s15, [r4]
 8029d4c:	eef1 7a67 	vneg.f32	s15, s15
 8029d50:	edc4 7a00 	vstr	s15, [r4]
 8029d54:	edd4 7a01 	vldr	s15, [r4, #4]
 8029d58:	eef1 7a67 	vneg.f32	s15, s15
 8029d5c:	edc4 7a01 	vstr	s15, [r4, #4]
 8029d60:	e782      	b.n	8029c68 <__ieee754_rem_pio2f+0x128>
 8029d62:	2303      	movs	r3, #3
 8029d64:	e7e5      	b.n	8029d32 <__ieee754_rem_pio2f+0x1f2>
 8029d66:	bf00      	nop
 8029d68:	3f490fd8 	.word	0x3f490fd8
 8029d6c:	4016cbe3 	.word	0x4016cbe3
 8029d70:	3fc90f80 	.word	0x3fc90f80
 8029d74:	3fc90fd0 	.word	0x3fc90fd0
 8029d78:	37354400 	.word	0x37354400
 8029d7c:	37354443 	.word	0x37354443
 8029d80:	2e85a308 	.word	0x2e85a308
 8029d84:	43490f80 	.word	0x43490f80
 8029d88:	3f22f984 	.word	0x3f22f984
 8029d8c:	0802ea68 	.word	0x0802ea68
 8029d90:	2e85a300 	.word	0x2e85a300
 8029d94:	248d3132 	.word	0x248d3132
 8029d98:	43800000 	.word	0x43800000
 8029d9c:	0802eae8 	.word	0x0802eae8

08029da0 <atanf>:
 8029da0:	b538      	push	{r3, r4, r5, lr}
 8029da2:	ee10 5a10 	vmov	r5, s0
 8029da6:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 8029daa:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 8029dae:	eef0 7a40 	vmov.f32	s15, s0
 8029db2:	d310      	bcc.n	8029dd6 <atanf+0x36>
 8029db4:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8029db8:	d904      	bls.n	8029dc4 <atanf+0x24>
 8029dba:	ee70 7a00 	vadd.f32	s15, s0, s0
 8029dbe:	eeb0 0a67 	vmov.f32	s0, s15
 8029dc2:	bd38      	pop	{r3, r4, r5, pc}
 8029dc4:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8029efc <atanf+0x15c>
 8029dc8:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 8029f00 <atanf+0x160>
 8029dcc:	2d00      	cmp	r5, #0
 8029dce:	bfc8      	it	gt
 8029dd0:	eef0 7a47 	vmovgt.f32	s15, s14
 8029dd4:	e7f3      	b.n	8029dbe <atanf+0x1e>
 8029dd6:	4b4b      	ldr	r3, [pc, #300]	@ (8029f04 <atanf+0x164>)
 8029dd8:	429c      	cmp	r4, r3
 8029dda:	d810      	bhi.n	8029dfe <atanf+0x5e>
 8029ddc:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 8029de0:	d20a      	bcs.n	8029df8 <atanf+0x58>
 8029de2:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 8029f08 <atanf+0x168>
 8029de6:	ee30 7a07 	vadd.f32	s14, s0, s14
 8029dea:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8029dee:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8029df2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029df6:	dce2      	bgt.n	8029dbe <atanf+0x1e>
 8029df8:	f04f 33ff 	mov.w	r3, #4294967295
 8029dfc:	e013      	b.n	8029e26 <atanf+0x86>
 8029dfe:	f000 f8a3 	bl	8029f48 <fabsf>
 8029e02:	4b42      	ldr	r3, [pc, #264]	@ (8029f0c <atanf+0x16c>)
 8029e04:	429c      	cmp	r4, r3
 8029e06:	d84f      	bhi.n	8029ea8 <atanf+0x108>
 8029e08:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8029e0c:	429c      	cmp	r4, r3
 8029e0e:	d841      	bhi.n	8029e94 <atanf+0xf4>
 8029e10:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 8029e14:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8029e18:	eea0 7a27 	vfma.f32	s14, s0, s15
 8029e1c:	2300      	movs	r3, #0
 8029e1e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029e22:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029e26:	1c5a      	adds	r2, r3, #1
 8029e28:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8029e2c:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8029f10 <atanf+0x170>
 8029e30:	eddf 5a38 	vldr	s11, [pc, #224]	@ 8029f14 <atanf+0x174>
 8029e34:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 8029f18 <atanf+0x178>
 8029e38:	ee66 6a06 	vmul.f32	s13, s12, s12
 8029e3c:	eee6 5a87 	vfma.f32	s11, s13, s14
 8029e40:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 8029f1c <atanf+0x17c>
 8029e44:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8029e48:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8029f20 <atanf+0x180>
 8029e4c:	eee7 5a26 	vfma.f32	s11, s14, s13
 8029e50:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8029f24 <atanf+0x184>
 8029e54:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8029e58:	eddf 5a33 	vldr	s11, [pc, #204]	@ 8029f28 <atanf+0x188>
 8029e5c:	eee7 5a26 	vfma.f32	s11, s14, s13
 8029e60:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8029f2c <atanf+0x18c>
 8029e64:	eea6 5a87 	vfma.f32	s10, s13, s14
 8029e68:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8029f30 <atanf+0x190>
 8029e6c:	eea5 7a26 	vfma.f32	s14, s10, s13
 8029e70:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 8029f34 <atanf+0x194>
 8029e74:	eea7 5a26 	vfma.f32	s10, s14, s13
 8029e78:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 8029f38 <atanf+0x198>
 8029e7c:	eea5 7a26 	vfma.f32	s14, s10, s13
 8029e80:	ee27 7a26 	vmul.f32	s14, s14, s13
 8029e84:	eea5 7a86 	vfma.f32	s14, s11, s12
 8029e88:	ee27 7a87 	vmul.f32	s14, s15, s14
 8029e8c:	d121      	bne.n	8029ed2 <atanf+0x132>
 8029e8e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029e92:	e794      	b.n	8029dbe <atanf+0x1e>
 8029e94:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8029e98:	ee30 7a67 	vsub.f32	s14, s0, s15
 8029e9c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029ea0:	2301      	movs	r3, #1
 8029ea2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029ea6:	e7be      	b.n	8029e26 <atanf+0x86>
 8029ea8:	4b24      	ldr	r3, [pc, #144]	@ (8029f3c <atanf+0x19c>)
 8029eaa:	429c      	cmp	r4, r3
 8029eac:	d80b      	bhi.n	8029ec6 <atanf+0x126>
 8029eae:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8029eb2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8029eb6:	eea0 7a27 	vfma.f32	s14, s0, s15
 8029eba:	2302      	movs	r3, #2
 8029ebc:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029ec0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8029ec4:	e7af      	b.n	8029e26 <atanf+0x86>
 8029ec6:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8029eca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029ece:	2303      	movs	r3, #3
 8029ed0:	e7a9      	b.n	8029e26 <atanf+0x86>
 8029ed2:	4a1b      	ldr	r2, [pc, #108]	@ (8029f40 <atanf+0x1a0>)
 8029ed4:	491b      	ldr	r1, [pc, #108]	@ (8029f44 <atanf+0x1a4>)
 8029ed6:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8029eda:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8029ede:	edd3 6a00 	vldr	s13, [r3]
 8029ee2:	ee37 7a66 	vsub.f32	s14, s14, s13
 8029ee6:	2d00      	cmp	r5, #0
 8029ee8:	ee37 7a67 	vsub.f32	s14, s14, s15
 8029eec:	edd2 7a00 	vldr	s15, [r2]
 8029ef0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029ef4:	bfb8      	it	lt
 8029ef6:	eef1 7a67 	vneglt.f32	s15, s15
 8029efa:	e760      	b.n	8029dbe <atanf+0x1e>
 8029efc:	bfc90fdb 	.word	0xbfc90fdb
 8029f00:	3fc90fdb 	.word	0x3fc90fdb
 8029f04:	3edfffff 	.word	0x3edfffff
 8029f08:	7149f2ca 	.word	0x7149f2ca
 8029f0c:	3f97ffff 	.word	0x3f97ffff
 8029f10:	3c8569d7 	.word	0x3c8569d7
 8029f14:	3d4bda59 	.word	0x3d4bda59
 8029f18:	bd6ef16b 	.word	0xbd6ef16b
 8029f1c:	3d886b35 	.word	0x3d886b35
 8029f20:	3dba2e6e 	.word	0x3dba2e6e
 8029f24:	3e124925 	.word	0x3e124925
 8029f28:	3eaaaaab 	.word	0x3eaaaaab
 8029f2c:	bd15a221 	.word	0xbd15a221
 8029f30:	bd9d8795 	.word	0xbd9d8795
 8029f34:	bde38e38 	.word	0xbde38e38
 8029f38:	be4ccccd 	.word	0xbe4ccccd
 8029f3c:	401bffff 	.word	0x401bffff
 8029f40:	0802ee10 	.word	0x0802ee10
 8029f44:	0802ee00 	.word	0x0802ee00

08029f48 <fabsf>:
 8029f48:	ee10 3a10 	vmov	r3, s0
 8029f4c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8029f50:	ee00 3a10 	vmov	s0, r3
 8029f54:	4770      	bx	lr
	...

08029f58 <scalbnf>:
 8029f58:	ee10 3a10 	vmov	r3, s0
 8029f5c:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8029f60:	d02b      	beq.n	8029fba <scalbnf+0x62>
 8029f62:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 8029f66:	d302      	bcc.n	8029f6e <scalbnf+0x16>
 8029f68:	ee30 0a00 	vadd.f32	s0, s0, s0
 8029f6c:	4770      	bx	lr
 8029f6e:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8029f72:	d123      	bne.n	8029fbc <scalbnf+0x64>
 8029f74:	4b24      	ldr	r3, [pc, #144]	@ (802a008 <scalbnf+0xb0>)
 8029f76:	eddf 7a25 	vldr	s15, [pc, #148]	@ 802a00c <scalbnf+0xb4>
 8029f7a:	4298      	cmp	r0, r3
 8029f7c:	ee20 0a27 	vmul.f32	s0, s0, s15
 8029f80:	db17      	blt.n	8029fb2 <scalbnf+0x5a>
 8029f82:	ee10 3a10 	vmov	r3, s0
 8029f86:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029f8a:	3a19      	subs	r2, #25
 8029f8c:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8029f90:	4288      	cmp	r0, r1
 8029f92:	dd15      	ble.n	8029fc0 <scalbnf+0x68>
 8029f94:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 802a010 <scalbnf+0xb8>
 8029f98:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 802a014 <scalbnf+0xbc>
 8029f9c:	ee10 3a10 	vmov	r3, s0
 8029fa0:	eeb0 7a67 	vmov.f32	s14, s15
 8029fa4:	2b00      	cmp	r3, #0
 8029fa6:	bfb8      	it	lt
 8029fa8:	eef0 7a66 	vmovlt.f32	s15, s13
 8029fac:	ee27 0a87 	vmul.f32	s0, s15, s14
 8029fb0:	4770      	bx	lr
 8029fb2:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802a018 <scalbnf+0xc0>
 8029fb6:	ee27 0a80 	vmul.f32	s0, s15, s0
 8029fba:	4770      	bx	lr
 8029fbc:	0dd2      	lsrs	r2, r2, #23
 8029fbe:	e7e5      	b.n	8029f8c <scalbnf+0x34>
 8029fc0:	4410      	add	r0, r2
 8029fc2:	28fe      	cmp	r0, #254	@ 0xfe
 8029fc4:	dce6      	bgt.n	8029f94 <scalbnf+0x3c>
 8029fc6:	2800      	cmp	r0, #0
 8029fc8:	dd06      	ble.n	8029fd8 <scalbnf+0x80>
 8029fca:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8029fce:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029fd2:	ee00 3a10 	vmov	s0, r3
 8029fd6:	4770      	bx	lr
 8029fd8:	f110 0f16 	cmn.w	r0, #22
 8029fdc:	da09      	bge.n	8029ff2 <scalbnf+0x9a>
 8029fde:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 802a018 <scalbnf+0xc0>
 8029fe2:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 802a01c <scalbnf+0xc4>
 8029fe6:	ee10 3a10 	vmov	r3, s0
 8029fea:	eeb0 7a67 	vmov.f32	s14, s15
 8029fee:	2b00      	cmp	r3, #0
 8029ff0:	e7d9      	b.n	8029fa6 <scalbnf+0x4e>
 8029ff2:	3019      	adds	r0, #25
 8029ff4:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8029ff8:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029ffc:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 802a020 <scalbnf+0xc8>
 802a000:	ee07 3a90 	vmov	s15, r3
 802a004:	e7d7      	b.n	8029fb6 <scalbnf+0x5e>
 802a006:	bf00      	nop
 802a008:	ffff3cb0 	.word	0xffff3cb0
 802a00c:	4c000000 	.word	0x4c000000
 802a010:	7149f2ca 	.word	0x7149f2ca
 802a014:	f149f2ca 	.word	0xf149f2ca
 802a018:	0da24260 	.word	0x0da24260
 802a01c:	8da24260 	.word	0x8da24260
 802a020:	33000000 	.word	0x33000000

0802a024 <__kernel_rem_pio2f>:
 802a024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a028:	ed2d 8b04 	vpush	{d8-d9}
 802a02c:	b0d9      	sub	sp, #356	@ 0x164
 802a02e:	4690      	mov	r8, r2
 802a030:	9001      	str	r0, [sp, #4]
 802a032:	4ab6      	ldr	r2, [pc, #728]	@ (802a30c <__kernel_rem_pio2f+0x2e8>)
 802a034:	9866      	ldr	r0, [sp, #408]	@ 0x198
 802a036:	f118 0f04 	cmn.w	r8, #4
 802a03a:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 802a03e:	460f      	mov	r7, r1
 802a040:	f103 3bff 	add.w	fp, r3, #4294967295
 802a044:	db26      	blt.n	802a094 <__kernel_rem_pio2f+0x70>
 802a046:	f1b8 0203 	subs.w	r2, r8, #3
 802a04a:	bf48      	it	mi
 802a04c:	f108 0204 	addmi.w	r2, r8, #4
 802a050:	10d2      	asrs	r2, r2, #3
 802a052:	1c55      	adds	r5, r2, #1
 802a054:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802a056:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 802a31c <__kernel_rem_pio2f+0x2f8>
 802a05a:	00e8      	lsls	r0, r5, #3
 802a05c:	eba2 060b 	sub.w	r6, r2, fp
 802a060:	9002      	str	r0, [sp, #8]
 802a062:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 802a066:	eb0a 0c0b 	add.w	ip, sl, fp
 802a06a:	ac1c      	add	r4, sp, #112	@ 0x70
 802a06c:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 802a070:	2000      	movs	r0, #0
 802a072:	4560      	cmp	r0, ip
 802a074:	dd10      	ble.n	802a098 <__kernel_rem_pio2f+0x74>
 802a076:	a91c      	add	r1, sp, #112	@ 0x70
 802a078:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 802a07c:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 802a080:	2600      	movs	r6, #0
 802a082:	4556      	cmp	r6, sl
 802a084:	dc24      	bgt.n	802a0d0 <__kernel_rem_pio2f+0xac>
 802a086:	f8dd e004 	ldr.w	lr, [sp, #4]
 802a08a:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 802a31c <__kernel_rem_pio2f+0x2f8>
 802a08e:	4684      	mov	ip, r0
 802a090:	2400      	movs	r4, #0
 802a092:	e016      	b.n	802a0c2 <__kernel_rem_pio2f+0x9e>
 802a094:	2200      	movs	r2, #0
 802a096:	e7dc      	b.n	802a052 <__kernel_rem_pio2f+0x2e>
 802a098:	42c6      	cmn	r6, r0
 802a09a:	bf5d      	ittte	pl
 802a09c:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 802a0a0:	ee07 1a90 	vmovpl	s15, r1
 802a0a4:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802a0a8:	eef0 7a47 	vmovmi.f32	s15, s14
 802a0ac:	ece4 7a01 	vstmia	r4!, {s15}
 802a0b0:	3001      	adds	r0, #1
 802a0b2:	e7de      	b.n	802a072 <__kernel_rem_pio2f+0x4e>
 802a0b4:	ecfe 6a01 	vldmia	lr!, {s13}
 802a0b8:	ed3c 7a01 	vldmdb	ip!, {s14}
 802a0bc:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a0c0:	3401      	adds	r4, #1
 802a0c2:	455c      	cmp	r4, fp
 802a0c4:	ddf6      	ble.n	802a0b4 <__kernel_rem_pio2f+0x90>
 802a0c6:	ece9 7a01 	vstmia	r9!, {s15}
 802a0ca:	3601      	adds	r6, #1
 802a0cc:	3004      	adds	r0, #4
 802a0ce:	e7d8      	b.n	802a082 <__kernel_rem_pio2f+0x5e>
 802a0d0:	a908      	add	r1, sp, #32
 802a0d2:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802a0d6:	9104      	str	r1, [sp, #16]
 802a0d8:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 802a0da:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 802a318 <__kernel_rem_pio2f+0x2f4>
 802a0de:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 802a314 <__kernel_rem_pio2f+0x2f0>
 802a0e2:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 802a0e6:	9203      	str	r2, [sp, #12]
 802a0e8:	4654      	mov	r4, sl
 802a0ea:	00a2      	lsls	r2, r4, #2
 802a0ec:	9205      	str	r2, [sp, #20]
 802a0ee:	aa58      	add	r2, sp, #352	@ 0x160
 802a0f0:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 802a0f4:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 802a0f8:	a944      	add	r1, sp, #272	@ 0x110
 802a0fa:	aa08      	add	r2, sp, #32
 802a0fc:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 802a100:	4694      	mov	ip, r2
 802a102:	4626      	mov	r6, r4
 802a104:	2e00      	cmp	r6, #0
 802a106:	dc4c      	bgt.n	802a1a2 <__kernel_rem_pio2f+0x17e>
 802a108:	4628      	mov	r0, r5
 802a10a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802a10e:	f7ff ff23 	bl	8029f58 <scalbnf>
 802a112:	eeb0 8a40 	vmov.f32	s16, s0
 802a116:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 802a11a:	ee28 0a00 	vmul.f32	s0, s16, s0
 802a11e:	f000 f9e9 	bl	802a4f4 <floorf>
 802a122:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 802a126:	eea0 8a67 	vfms.f32	s16, s0, s15
 802a12a:	2d00      	cmp	r5, #0
 802a12c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802a130:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802a134:	ee17 9a90 	vmov	r9, s15
 802a138:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a13c:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a140:	dd41      	ble.n	802a1c6 <__kernel_rem_pio2f+0x1a2>
 802a142:	f104 3cff 	add.w	ip, r4, #4294967295
 802a146:	a908      	add	r1, sp, #32
 802a148:	f1c5 0e08 	rsb	lr, r5, #8
 802a14c:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 802a150:	fa46 f00e 	asr.w	r0, r6, lr
 802a154:	4481      	add	r9, r0
 802a156:	fa00 f00e 	lsl.w	r0, r0, lr
 802a15a:	1a36      	subs	r6, r6, r0
 802a15c:	f1c5 0007 	rsb	r0, r5, #7
 802a160:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 802a164:	4106      	asrs	r6, r0
 802a166:	2e00      	cmp	r6, #0
 802a168:	dd3c      	ble.n	802a1e4 <__kernel_rem_pio2f+0x1c0>
 802a16a:	f04f 0e00 	mov.w	lr, #0
 802a16e:	f109 0901 	add.w	r9, r9, #1
 802a172:	4670      	mov	r0, lr
 802a174:	4574      	cmp	r4, lr
 802a176:	dc68      	bgt.n	802a24a <__kernel_rem_pio2f+0x226>
 802a178:	2d00      	cmp	r5, #0
 802a17a:	dd03      	ble.n	802a184 <__kernel_rem_pio2f+0x160>
 802a17c:	2d01      	cmp	r5, #1
 802a17e:	d074      	beq.n	802a26a <__kernel_rem_pio2f+0x246>
 802a180:	2d02      	cmp	r5, #2
 802a182:	d07d      	beq.n	802a280 <__kernel_rem_pio2f+0x25c>
 802a184:	2e02      	cmp	r6, #2
 802a186:	d12d      	bne.n	802a1e4 <__kernel_rem_pio2f+0x1c0>
 802a188:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802a18c:	ee30 8a48 	vsub.f32	s16, s0, s16
 802a190:	b340      	cbz	r0, 802a1e4 <__kernel_rem_pio2f+0x1c0>
 802a192:	4628      	mov	r0, r5
 802a194:	9306      	str	r3, [sp, #24]
 802a196:	f7ff fedf 	bl	8029f58 <scalbnf>
 802a19a:	9b06      	ldr	r3, [sp, #24]
 802a19c:	ee38 8a40 	vsub.f32	s16, s16, s0
 802a1a0:	e020      	b.n	802a1e4 <__kernel_rem_pio2f+0x1c0>
 802a1a2:	ee60 7a28 	vmul.f32	s15, s0, s17
 802a1a6:	3e01      	subs	r6, #1
 802a1a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a1ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a1b0:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802a1b4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a1b8:	ecac 0a01 	vstmia	ip!, {s0}
 802a1bc:	ed30 0a01 	vldmdb	r0!, {s0}
 802a1c0:	ee37 0a80 	vadd.f32	s0, s15, s0
 802a1c4:	e79e      	b.n	802a104 <__kernel_rem_pio2f+0xe0>
 802a1c6:	d105      	bne.n	802a1d4 <__kernel_rem_pio2f+0x1b0>
 802a1c8:	1e60      	subs	r0, r4, #1
 802a1ca:	a908      	add	r1, sp, #32
 802a1cc:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 802a1d0:	11f6      	asrs	r6, r6, #7
 802a1d2:	e7c8      	b.n	802a166 <__kernel_rem_pio2f+0x142>
 802a1d4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 802a1d8:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802a1dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a1e0:	da31      	bge.n	802a246 <__kernel_rem_pio2f+0x222>
 802a1e2:	2600      	movs	r6, #0
 802a1e4:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802a1e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a1ec:	f040 8098 	bne.w	802a320 <__kernel_rem_pio2f+0x2fc>
 802a1f0:	1e60      	subs	r0, r4, #1
 802a1f2:	2200      	movs	r2, #0
 802a1f4:	4550      	cmp	r0, sl
 802a1f6:	da4b      	bge.n	802a290 <__kernel_rem_pio2f+0x26c>
 802a1f8:	2a00      	cmp	r2, #0
 802a1fa:	d065      	beq.n	802a2c8 <__kernel_rem_pio2f+0x2a4>
 802a1fc:	3c01      	subs	r4, #1
 802a1fe:	ab08      	add	r3, sp, #32
 802a200:	3d08      	subs	r5, #8
 802a202:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802a206:	2b00      	cmp	r3, #0
 802a208:	d0f8      	beq.n	802a1fc <__kernel_rem_pio2f+0x1d8>
 802a20a:	4628      	mov	r0, r5
 802a20c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802a210:	f7ff fea2 	bl	8029f58 <scalbnf>
 802a214:	1c63      	adds	r3, r4, #1
 802a216:	aa44      	add	r2, sp, #272	@ 0x110
 802a218:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 802a318 <__kernel_rem_pio2f+0x2f4>
 802a21c:	0099      	lsls	r1, r3, #2
 802a21e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a222:	4623      	mov	r3, r4
 802a224:	2b00      	cmp	r3, #0
 802a226:	f280 80a9 	bge.w	802a37c <__kernel_rem_pio2f+0x358>
 802a22a:	4623      	mov	r3, r4
 802a22c:	2b00      	cmp	r3, #0
 802a22e:	f2c0 80c7 	blt.w	802a3c0 <__kernel_rem_pio2f+0x39c>
 802a232:	aa44      	add	r2, sp, #272	@ 0x110
 802a234:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802a238:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 802a310 <__kernel_rem_pio2f+0x2ec>
 802a23c:	eddf 7a37 	vldr	s15, [pc, #220]	@ 802a31c <__kernel_rem_pio2f+0x2f8>
 802a240:	2000      	movs	r0, #0
 802a242:	1ae2      	subs	r2, r4, r3
 802a244:	e0b1      	b.n	802a3aa <__kernel_rem_pio2f+0x386>
 802a246:	2602      	movs	r6, #2
 802a248:	e78f      	b.n	802a16a <__kernel_rem_pio2f+0x146>
 802a24a:	f852 1b04 	ldr.w	r1, [r2], #4
 802a24e:	b948      	cbnz	r0, 802a264 <__kernel_rem_pio2f+0x240>
 802a250:	b121      	cbz	r1, 802a25c <__kernel_rem_pio2f+0x238>
 802a252:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 802a256:	f842 1c04 	str.w	r1, [r2, #-4]
 802a25a:	2101      	movs	r1, #1
 802a25c:	f10e 0e01 	add.w	lr, lr, #1
 802a260:	4608      	mov	r0, r1
 802a262:	e787      	b.n	802a174 <__kernel_rem_pio2f+0x150>
 802a264:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 802a268:	e7f5      	b.n	802a256 <__kernel_rem_pio2f+0x232>
 802a26a:	f104 3cff 	add.w	ip, r4, #4294967295
 802a26e:	aa08      	add	r2, sp, #32
 802a270:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802a274:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 802a278:	a908      	add	r1, sp, #32
 802a27a:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 802a27e:	e781      	b.n	802a184 <__kernel_rem_pio2f+0x160>
 802a280:	f104 3cff 	add.w	ip, r4, #4294967295
 802a284:	aa08      	add	r2, sp, #32
 802a286:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802a28a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802a28e:	e7f3      	b.n	802a278 <__kernel_rem_pio2f+0x254>
 802a290:	a908      	add	r1, sp, #32
 802a292:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 802a296:	3801      	subs	r0, #1
 802a298:	430a      	orrs	r2, r1
 802a29a:	e7ab      	b.n	802a1f4 <__kernel_rem_pio2f+0x1d0>
 802a29c:	3201      	adds	r2, #1
 802a29e:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 802a2a2:	2e00      	cmp	r6, #0
 802a2a4:	d0fa      	beq.n	802a29c <__kernel_rem_pio2f+0x278>
 802a2a6:	9905      	ldr	r1, [sp, #20]
 802a2a8:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 802a2ac:	eb0d 0001 	add.w	r0, sp, r1
 802a2b0:	18e6      	adds	r6, r4, r3
 802a2b2:	a91c      	add	r1, sp, #112	@ 0x70
 802a2b4:	f104 0c01 	add.w	ip, r4, #1
 802a2b8:	384c      	subs	r0, #76	@ 0x4c
 802a2ba:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 802a2be:	4422      	add	r2, r4
 802a2c0:	4562      	cmp	r2, ip
 802a2c2:	da04      	bge.n	802a2ce <__kernel_rem_pio2f+0x2aa>
 802a2c4:	4614      	mov	r4, r2
 802a2c6:	e710      	b.n	802a0ea <__kernel_rem_pio2f+0xc6>
 802a2c8:	9804      	ldr	r0, [sp, #16]
 802a2ca:	2201      	movs	r2, #1
 802a2cc:	e7e7      	b.n	802a29e <__kernel_rem_pio2f+0x27a>
 802a2ce:	9903      	ldr	r1, [sp, #12]
 802a2d0:	f8dd e004 	ldr.w	lr, [sp, #4]
 802a2d4:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 802a2d8:	9105      	str	r1, [sp, #20]
 802a2da:	ee07 1a90 	vmov	s15, r1
 802a2de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a2e2:	2400      	movs	r4, #0
 802a2e4:	ece6 7a01 	vstmia	r6!, {s15}
 802a2e8:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 802a31c <__kernel_rem_pio2f+0x2f8>
 802a2ec:	46b1      	mov	r9, r6
 802a2ee:	455c      	cmp	r4, fp
 802a2f0:	dd04      	ble.n	802a2fc <__kernel_rem_pio2f+0x2d8>
 802a2f2:	ece0 7a01 	vstmia	r0!, {s15}
 802a2f6:	f10c 0c01 	add.w	ip, ip, #1
 802a2fa:	e7e1      	b.n	802a2c0 <__kernel_rem_pio2f+0x29c>
 802a2fc:	ecfe 6a01 	vldmia	lr!, {s13}
 802a300:	ed39 7a01 	vldmdb	r9!, {s14}
 802a304:	3401      	adds	r4, #1
 802a306:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a30a:	e7f0      	b.n	802a2ee <__kernel_rem_pio2f+0x2ca>
 802a30c:	0802ee4c 	.word	0x0802ee4c
 802a310:	0802ee20 	.word	0x0802ee20
 802a314:	43800000 	.word	0x43800000
 802a318:	3b800000 	.word	0x3b800000
 802a31c:	00000000 	.word	0x00000000
 802a320:	9b02      	ldr	r3, [sp, #8]
 802a322:	eeb0 0a48 	vmov.f32	s0, s16
 802a326:	eba3 0008 	sub.w	r0, r3, r8
 802a32a:	f7ff fe15 	bl	8029f58 <scalbnf>
 802a32e:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 802a314 <__kernel_rem_pio2f+0x2f0>
 802a332:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802a336:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a33a:	db19      	blt.n	802a370 <__kernel_rem_pio2f+0x34c>
 802a33c:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 802a318 <__kernel_rem_pio2f+0x2f4>
 802a340:	ee60 7a27 	vmul.f32	s15, s0, s15
 802a344:	aa08      	add	r2, sp, #32
 802a346:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a34a:	3508      	adds	r5, #8
 802a34c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a350:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802a354:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a358:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a35c:	ee10 3a10 	vmov	r3, s0
 802a360:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802a364:	ee17 3a90 	vmov	r3, s15
 802a368:	3401      	adds	r4, #1
 802a36a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802a36e:	e74c      	b.n	802a20a <__kernel_rem_pio2f+0x1e6>
 802a370:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a374:	aa08      	add	r2, sp, #32
 802a376:	ee10 3a10 	vmov	r3, s0
 802a37a:	e7f6      	b.n	802a36a <__kernel_rem_pio2f+0x346>
 802a37c:	a808      	add	r0, sp, #32
 802a37e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802a382:	9001      	str	r0, [sp, #4]
 802a384:	ee07 0a90 	vmov	s15, r0
 802a388:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a38c:	3b01      	subs	r3, #1
 802a38e:	ee67 7a80 	vmul.f32	s15, s15, s0
 802a392:	ee20 0a07 	vmul.f32	s0, s0, s14
 802a396:	ed62 7a01 	vstmdb	r2!, {s15}
 802a39a:	e743      	b.n	802a224 <__kernel_rem_pio2f+0x200>
 802a39c:	ecfc 6a01 	vldmia	ip!, {s13}
 802a3a0:	ecb5 7a01 	vldmia	r5!, {s14}
 802a3a4:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a3a8:	3001      	adds	r0, #1
 802a3aa:	4550      	cmp	r0, sl
 802a3ac:	dc01      	bgt.n	802a3b2 <__kernel_rem_pio2f+0x38e>
 802a3ae:	4290      	cmp	r0, r2
 802a3b0:	ddf4      	ble.n	802a39c <__kernel_rem_pio2f+0x378>
 802a3b2:	a858      	add	r0, sp, #352	@ 0x160
 802a3b4:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802a3b8:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 802a3bc:	3b01      	subs	r3, #1
 802a3be:	e735      	b.n	802a22c <__kernel_rem_pio2f+0x208>
 802a3c0:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802a3c2:	2b02      	cmp	r3, #2
 802a3c4:	dc09      	bgt.n	802a3da <__kernel_rem_pio2f+0x3b6>
 802a3c6:	2b00      	cmp	r3, #0
 802a3c8:	dc27      	bgt.n	802a41a <__kernel_rem_pio2f+0x3f6>
 802a3ca:	d040      	beq.n	802a44e <__kernel_rem_pio2f+0x42a>
 802a3cc:	f009 0007 	and.w	r0, r9, #7
 802a3d0:	b059      	add	sp, #356	@ 0x164
 802a3d2:	ecbd 8b04 	vpop	{d8-d9}
 802a3d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a3da:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802a3dc:	2b03      	cmp	r3, #3
 802a3de:	d1f5      	bne.n	802a3cc <__kernel_rem_pio2f+0x3a8>
 802a3e0:	aa30      	add	r2, sp, #192	@ 0xc0
 802a3e2:	1f0b      	subs	r3, r1, #4
 802a3e4:	4413      	add	r3, r2
 802a3e6:	461a      	mov	r2, r3
 802a3e8:	4620      	mov	r0, r4
 802a3ea:	2800      	cmp	r0, #0
 802a3ec:	dc50      	bgt.n	802a490 <__kernel_rem_pio2f+0x46c>
 802a3ee:	4622      	mov	r2, r4
 802a3f0:	2a01      	cmp	r2, #1
 802a3f2:	dc5d      	bgt.n	802a4b0 <__kernel_rem_pio2f+0x48c>
 802a3f4:	ab30      	add	r3, sp, #192	@ 0xc0
 802a3f6:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 802a31c <__kernel_rem_pio2f+0x2f8>
 802a3fa:	440b      	add	r3, r1
 802a3fc:	2c01      	cmp	r4, #1
 802a3fe:	dc67      	bgt.n	802a4d0 <__kernel_rem_pio2f+0x4ac>
 802a400:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 802a404:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 802a408:	2e00      	cmp	r6, #0
 802a40a:	d167      	bne.n	802a4dc <__kernel_rem_pio2f+0x4b8>
 802a40c:	edc7 6a00 	vstr	s13, [r7]
 802a410:	ed87 7a01 	vstr	s14, [r7, #4]
 802a414:	edc7 7a02 	vstr	s15, [r7, #8]
 802a418:	e7d8      	b.n	802a3cc <__kernel_rem_pio2f+0x3a8>
 802a41a:	ab30      	add	r3, sp, #192	@ 0xc0
 802a41c:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 802a31c <__kernel_rem_pio2f+0x2f8>
 802a420:	440b      	add	r3, r1
 802a422:	4622      	mov	r2, r4
 802a424:	2a00      	cmp	r2, #0
 802a426:	da24      	bge.n	802a472 <__kernel_rem_pio2f+0x44e>
 802a428:	b34e      	cbz	r6, 802a47e <__kernel_rem_pio2f+0x45a>
 802a42a:	eef1 7a47 	vneg.f32	s15, s14
 802a42e:	edc7 7a00 	vstr	s15, [r7]
 802a432:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 802a436:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a43a:	aa31      	add	r2, sp, #196	@ 0xc4
 802a43c:	2301      	movs	r3, #1
 802a43e:	429c      	cmp	r4, r3
 802a440:	da20      	bge.n	802a484 <__kernel_rem_pio2f+0x460>
 802a442:	b10e      	cbz	r6, 802a448 <__kernel_rem_pio2f+0x424>
 802a444:	eef1 7a67 	vneg.f32	s15, s15
 802a448:	edc7 7a01 	vstr	s15, [r7, #4]
 802a44c:	e7be      	b.n	802a3cc <__kernel_rem_pio2f+0x3a8>
 802a44e:	ab30      	add	r3, sp, #192	@ 0xc0
 802a450:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 802a31c <__kernel_rem_pio2f+0x2f8>
 802a454:	440b      	add	r3, r1
 802a456:	2c00      	cmp	r4, #0
 802a458:	da05      	bge.n	802a466 <__kernel_rem_pio2f+0x442>
 802a45a:	b10e      	cbz	r6, 802a460 <__kernel_rem_pio2f+0x43c>
 802a45c:	eef1 7a67 	vneg.f32	s15, s15
 802a460:	edc7 7a00 	vstr	s15, [r7]
 802a464:	e7b2      	b.n	802a3cc <__kernel_rem_pio2f+0x3a8>
 802a466:	ed33 7a01 	vldmdb	r3!, {s14}
 802a46a:	3c01      	subs	r4, #1
 802a46c:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a470:	e7f1      	b.n	802a456 <__kernel_rem_pio2f+0x432>
 802a472:	ed73 7a01 	vldmdb	r3!, {s15}
 802a476:	3a01      	subs	r2, #1
 802a478:	ee37 7a27 	vadd.f32	s14, s14, s15
 802a47c:	e7d2      	b.n	802a424 <__kernel_rem_pio2f+0x400>
 802a47e:	eef0 7a47 	vmov.f32	s15, s14
 802a482:	e7d4      	b.n	802a42e <__kernel_rem_pio2f+0x40a>
 802a484:	ecb2 7a01 	vldmia	r2!, {s14}
 802a488:	3301      	adds	r3, #1
 802a48a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a48e:	e7d6      	b.n	802a43e <__kernel_rem_pio2f+0x41a>
 802a490:	ed72 7a01 	vldmdb	r2!, {s15}
 802a494:	edd2 6a01 	vldr	s13, [r2, #4]
 802a498:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a49c:	3801      	subs	r0, #1
 802a49e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a4a2:	ed82 7a00 	vstr	s14, [r2]
 802a4a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802a4aa:	edc2 7a01 	vstr	s15, [r2, #4]
 802a4ae:	e79c      	b.n	802a3ea <__kernel_rem_pio2f+0x3c6>
 802a4b0:	ed73 7a01 	vldmdb	r3!, {s15}
 802a4b4:	edd3 6a01 	vldr	s13, [r3, #4]
 802a4b8:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a4bc:	3a01      	subs	r2, #1
 802a4be:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a4c2:	ed83 7a00 	vstr	s14, [r3]
 802a4c6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802a4ca:	edc3 7a01 	vstr	s15, [r3, #4]
 802a4ce:	e78f      	b.n	802a3f0 <__kernel_rem_pio2f+0x3cc>
 802a4d0:	ed33 7a01 	vldmdb	r3!, {s14}
 802a4d4:	3c01      	subs	r4, #1
 802a4d6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a4da:	e78f      	b.n	802a3fc <__kernel_rem_pio2f+0x3d8>
 802a4dc:	eef1 6a66 	vneg.f32	s13, s13
 802a4e0:	eeb1 7a47 	vneg.f32	s14, s14
 802a4e4:	edc7 6a00 	vstr	s13, [r7]
 802a4e8:	ed87 7a01 	vstr	s14, [r7, #4]
 802a4ec:	eef1 7a67 	vneg.f32	s15, s15
 802a4f0:	e790      	b.n	802a414 <__kernel_rem_pio2f+0x3f0>
 802a4f2:	bf00      	nop

0802a4f4 <floorf>:
 802a4f4:	ee10 3a10 	vmov	r3, s0
 802a4f8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a4fc:	3a7f      	subs	r2, #127	@ 0x7f
 802a4fe:	2a16      	cmp	r2, #22
 802a500:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802a504:	dc2b      	bgt.n	802a55e <floorf+0x6a>
 802a506:	2a00      	cmp	r2, #0
 802a508:	da12      	bge.n	802a530 <floorf+0x3c>
 802a50a:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802a570 <floorf+0x7c>
 802a50e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a512:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a516:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a51a:	dd06      	ble.n	802a52a <floorf+0x36>
 802a51c:	2b00      	cmp	r3, #0
 802a51e:	da24      	bge.n	802a56a <floorf+0x76>
 802a520:	2900      	cmp	r1, #0
 802a522:	4b14      	ldr	r3, [pc, #80]	@ (802a574 <floorf+0x80>)
 802a524:	bf08      	it	eq
 802a526:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 802a52a:	ee00 3a10 	vmov	s0, r3
 802a52e:	4770      	bx	lr
 802a530:	4911      	ldr	r1, [pc, #68]	@ (802a578 <floorf+0x84>)
 802a532:	4111      	asrs	r1, r2
 802a534:	420b      	tst	r3, r1
 802a536:	d0fa      	beq.n	802a52e <floorf+0x3a>
 802a538:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 802a570 <floorf+0x7c>
 802a53c:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a540:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a544:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a548:	ddef      	ble.n	802a52a <floorf+0x36>
 802a54a:	2b00      	cmp	r3, #0
 802a54c:	bfbe      	ittt	lt
 802a54e:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 802a552:	fa40 f202 	asrlt.w	r2, r0, r2
 802a556:	189b      	addlt	r3, r3, r2
 802a558:	ea23 0301 	bic.w	r3, r3, r1
 802a55c:	e7e5      	b.n	802a52a <floorf+0x36>
 802a55e:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802a562:	d3e4      	bcc.n	802a52e <floorf+0x3a>
 802a564:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a568:	4770      	bx	lr
 802a56a:	2300      	movs	r3, #0
 802a56c:	e7dd      	b.n	802a52a <floorf+0x36>
 802a56e:	bf00      	nop
 802a570:	7149f2ca 	.word	0x7149f2ca
 802a574:	bf800000 	.word	0xbf800000
 802a578:	007fffff 	.word	0x007fffff

0802a57c <abort>:
 802a57c:	b508      	push	{r3, lr}
 802a57e:	2006      	movs	r0, #6
 802a580:	f000 fa3c 	bl	802a9fc <raise>
 802a584:	2001      	movs	r0, #1
 802a586:	f7d7 fe71 	bl	800226c <_exit>
	...

0802a58c <__assert_func>:
 802a58c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802a58e:	4614      	mov	r4, r2
 802a590:	461a      	mov	r2, r3
 802a592:	4b09      	ldr	r3, [pc, #36]	@ (802a5b8 <__assert_func+0x2c>)
 802a594:	681b      	ldr	r3, [r3, #0]
 802a596:	4605      	mov	r5, r0
 802a598:	68d8      	ldr	r0, [r3, #12]
 802a59a:	b14c      	cbz	r4, 802a5b0 <__assert_func+0x24>
 802a59c:	4b07      	ldr	r3, [pc, #28]	@ (802a5bc <__assert_func+0x30>)
 802a59e:	9100      	str	r1, [sp, #0]
 802a5a0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802a5a4:	4906      	ldr	r1, [pc, #24]	@ (802a5c0 <__assert_func+0x34>)
 802a5a6:	462b      	mov	r3, r5
 802a5a8:	f000 f984 	bl	802a8b4 <fiprintf>
 802a5ac:	f7ff ffe6 	bl	802a57c <abort>
 802a5b0:	4b04      	ldr	r3, [pc, #16]	@ (802a5c4 <__assert_func+0x38>)
 802a5b2:	461c      	mov	r4, r3
 802a5b4:	e7f3      	b.n	802a59e <__assert_func+0x12>
 802a5b6:	bf00      	nop
 802a5b8:	2000012c 	.word	0x2000012c
 802a5bc:	0802cc8c 	.word	0x0802cc8c
 802a5c0:	0802cc99 	.word	0x0802cc99
 802a5c4:	0802ccc7 	.word	0x0802ccc7

0802a5c8 <atexit>:
 802a5c8:	2300      	movs	r3, #0
 802a5ca:	4601      	mov	r1, r0
 802a5cc:	461a      	mov	r2, r3
 802a5ce:	4618      	mov	r0, r3
 802a5d0:	f000 bac2 	b.w	802ab58 <__register_exitproc>

0802a5d4 <malloc>:
 802a5d4:	4b02      	ldr	r3, [pc, #8]	@ (802a5e0 <malloc+0xc>)
 802a5d6:	4601      	mov	r1, r0
 802a5d8:	6818      	ldr	r0, [r3, #0]
 802a5da:	f000 b82d 	b.w	802a638 <_malloc_r>
 802a5de:	bf00      	nop
 802a5e0:	2000012c 	.word	0x2000012c

0802a5e4 <free>:
 802a5e4:	4b02      	ldr	r3, [pc, #8]	@ (802a5f0 <free+0xc>)
 802a5e6:	4601      	mov	r1, r0
 802a5e8:	6818      	ldr	r0, [r3, #0]
 802a5ea:	f000 bb11 	b.w	802ac10 <_free_r>
 802a5ee:	bf00      	nop
 802a5f0:	2000012c 	.word	0x2000012c

0802a5f4 <sbrk_aligned>:
 802a5f4:	b570      	push	{r4, r5, r6, lr}
 802a5f6:	4e0f      	ldr	r6, [pc, #60]	@ (802a634 <sbrk_aligned+0x40>)
 802a5f8:	460c      	mov	r4, r1
 802a5fa:	6831      	ldr	r1, [r6, #0]
 802a5fc:	4605      	mov	r5, r0
 802a5fe:	b911      	cbnz	r1, 802a606 <sbrk_aligned+0x12>
 802a600:	f000 fa4c 	bl	802aa9c <_sbrk_r>
 802a604:	6030      	str	r0, [r6, #0]
 802a606:	4621      	mov	r1, r4
 802a608:	4628      	mov	r0, r5
 802a60a:	f000 fa47 	bl	802aa9c <_sbrk_r>
 802a60e:	1c43      	adds	r3, r0, #1
 802a610:	d103      	bne.n	802a61a <sbrk_aligned+0x26>
 802a612:	f04f 34ff 	mov.w	r4, #4294967295
 802a616:	4620      	mov	r0, r4
 802a618:	bd70      	pop	{r4, r5, r6, pc}
 802a61a:	1cc4      	adds	r4, r0, #3
 802a61c:	f024 0403 	bic.w	r4, r4, #3
 802a620:	42a0      	cmp	r0, r4
 802a622:	d0f8      	beq.n	802a616 <sbrk_aligned+0x22>
 802a624:	1a21      	subs	r1, r4, r0
 802a626:	4628      	mov	r0, r5
 802a628:	f000 fa38 	bl	802aa9c <_sbrk_r>
 802a62c:	3001      	adds	r0, #1
 802a62e:	d1f2      	bne.n	802a616 <sbrk_aligned+0x22>
 802a630:	e7ef      	b.n	802a612 <sbrk_aligned+0x1e>
 802a632:	bf00      	nop
 802a634:	200149a8 	.word	0x200149a8

0802a638 <_malloc_r>:
 802a638:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a63c:	1ccd      	adds	r5, r1, #3
 802a63e:	f025 0503 	bic.w	r5, r5, #3
 802a642:	3508      	adds	r5, #8
 802a644:	2d0c      	cmp	r5, #12
 802a646:	bf38      	it	cc
 802a648:	250c      	movcc	r5, #12
 802a64a:	2d00      	cmp	r5, #0
 802a64c:	4606      	mov	r6, r0
 802a64e:	db01      	blt.n	802a654 <_malloc_r+0x1c>
 802a650:	42a9      	cmp	r1, r5
 802a652:	d904      	bls.n	802a65e <_malloc_r+0x26>
 802a654:	230c      	movs	r3, #12
 802a656:	6033      	str	r3, [r6, #0]
 802a658:	2000      	movs	r0, #0
 802a65a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a65e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 802a734 <_malloc_r+0xfc>
 802a662:	f000 f869 	bl	802a738 <__malloc_lock>
 802a666:	f8d8 3000 	ldr.w	r3, [r8]
 802a66a:	461c      	mov	r4, r3
 802a66c:	bb44      	cbnz	r4, 802a6c0 <_malloc_r+0x88>
 802a66e:	4629      	mov	r1, r5
 802a670:	4630      	mov	r0, r6
 802a672:	f7ff ffbf 	bl	802a5f4 <sbrk_aligned>
 802a676:	1c43      	adds	r3, r0, #1
 802a678:	4604      	mov	r4, r0
 802a67a:	d158      	bne.n	802a72e <_malloc_r+0xf6>
 802a67c:	f8d8 4000 	ldr.w	r4, [r8]
 802a680:	4627      	mov	r7, r4
 802a682:	2f00      	cmp	r7, #0
 802a684:	d143      	bne.n	802a70e <_malloc_r+0xd6>
 802a686:	2c00      	cmp	r4, #0
 802a688:	d04b      	beq.n	802a722 <_malloc_r+0xea>
 802a68a:	6823      	ldr	r3, [r4, #0]
 802a68c:	4639      	mov	r1, r7
 802a68e:	4630      	mov	r0, r6
 802a690:	eb04 0903 	add.w	r9, r4, r3
 802a694:	f000 fa02 	bl	802aa9c <_sbrk_r>
 802a698:	4581      	cmp	r9, r0
 802a69a:	d142      	bne.n	802a722 <_malloc_r+0xea>
 802a69c:	6821      	ldr	r1, [r4, #0]
 802a69e:	1a6d      	subs	r5, r5, r1
 802a6a0:	4629      	mov	r1, r5
 802a6a2:	4630      	mov	r0, r6
 802a6a4:	f7ff ffa6 	bl	802a5f4 <sbrk_aligned>
 802a6a8:	3001      	adds	r0, #1
 802a6aa:	d03a      	beq.n	802a722 <_malloc_r+0xea>
 802a6ac:	6823      	ldr	r3, [r4, #0]
 802a6ae:	442b      	add	r3, r5
 802a6b0:	6023      	str	r3, [r4, #0]
 802a6b2:	f8d8 3000 	ldr.w	r3, [r8]
 802a6b6:	685a      	ldr	r2, [r3, #4]
 802a6b8:	bb62      	cbnz	r2, 802a714 <_malloc_r+0xdc>
 802a6ba:	f8c8 7000 	str.w	r7, [r8]
 802a6be:	e00f      	b.n	802a6e0 <_malloc_r+0xa8>
 802a6c0:	6822      	ldr	r2, [r4, #0]
 802a6c2:	1b52      	subs	r2, r2, r5
 802a6c4:	d420      	bmi.n	802a708 <_malloc_r+0xd0>
 802a6c6:	2a0b      	cmp	r2, #11
 802a6c8:	d917      	bls.n	802a6fa <_malloc_r+0xc2>
 802a6ca:	1961      	adds	r1, r4, r5
 802a6cc:	42a3      	cmp	r3, r4
 802a6ce:	6025      	str	r5, [r4, #0]
 802a6d0:	bf18      	it	ne
 802a6d2:	6059      	strne	r1, [r3, #4]
 802a6d4:	6863      	ldr	r3, [r4, #4]
 802a6d6:	bf08      	it	eq
 802a6d8:	f8c8 1000 	streq.w	r1, [r8]
 802a6dc:	5162      	str	r2, [r4, r5]
 802a6de:	604b      	str	r3, [r1, #4]
 802a6e0:	4630      	mov	r0, r6
 802a6e2:	f000 f82f 	bl	802a744 <__malloc_unlock>
 802a6e6:	f104 000b 	add.w	r0, r4, #11
 802a6ea:	1d23      	adds	r3, r4, #4
 802a6ec:	f020 0007 	bic.w	r0, r0, #7
 802a6f0:	1ac2      	subs	r2, r0, r3
 802a6f2:	bf1c      	itt	ne
 802a6f4:	1a1b      	subne	r3, r3, r0
 802a6f6:	50a3      	strne	r3, [r4, r2]
 802a6f8:	e7af      	b.n	802a65a <_malloc_r+0x22>
 802a6fa:	6862      	ldr	r2, [r4, #4]
 802a6fc:	42a3      	cmp	r3, r4
 802a6fe:	bf0c      	ite	eq
 802a700:	f8c8 2000 	streq.w	r2, [r8]
 802a704:	605a      	strne	r2, [r3, #4]
 802a706:	e7eb      	b.n	802a6e0 <_malloc_r+0xa8>
 802a708:	4623      	mov	r3, r4
 802a70a:	6864      	ldr	r4, [r4, #4]
 802a70c:	e7ae      	b.n	802a66c <_malloc_r+0x34>
 802a70e:	463c      	mov	r4, r7
 802a710:	687f      	ldr	r7, [r7, #4]
 802a712:	e7b6      	b.n	802a682 <_malloc_r+0x4a>
 802a714:	461a      	mov	r2, r3
 802a716:	685b      	ldr	r3, [r3, #4]
 802a718:	42a3      	cmp	r3, r4
 802a71a:	d1fb      	bne.n	802a714 <_malloc_r+0xdc>
 802a71c:	2300      	movs	r3, #0
 802a71e:	6053      	str	r3, [r2, #4]
 802a720:	e7de      	b.n	802a6e0 <_malloc_r+0xa8>
 802a722:	230c      	movs	r3, #12
 802a724:	6033      	str	r3, [r6, #0]
 802a726:	4630      	mov	r0, r6
 802a728:	f000 f80c 	bl	802a744 <__malloc_unlock>
 802a72c:	e794      	b.n	802a658 <_malloc_r+0x20>
 802a72e:	6005      	str	r5, [r0, #0]
 802a730:	e7d6      	b.n	802a6e0 <_malloc_r+0xa8>
 802a732:	bf00      	nop
 802a734:	200149ac 	.word	0x200149ac

0802a738 <__malloc_lock>:
 802a738:	4801      	ldr	r0, [pc, #4]	@ (802a740 <__malloc_lock+0x8>)
 802a73a:	f000 b9fc 	b.w	802ab36 <__retarget_lock_acquire_recursive>
 802a73e:	bf00      	nop
 802a740:	20014af0 	.word	0x20014af0

0802a744 <__malloc_unlock>:
 802a744:	4801      	ldr	r0, [pc, #4]	@ (802a74c <__malloc_unlock+0x8>)
 802a746:	f000 b9f7 	b.w	802ab38 <__retarget_lock_release_recursive>
 802a74a:	bf00      	nop
 802a74c:	20014af0 	.word	0x20014af0

0802a750 <__cxa_atexit>:
 802a750:	b510      	push	{r4, lr}
 802a752:	4604      	mov	r4, r0
 802a754:	4804      	ldr	r0, [pc, #16]	@ (802a768 <__cxa_atexit+0x18>)
 802a756:	4613      	mov	r3, r2
 802a758:	b120      	cbz	r0, 802a764 <__cxa_atexit+0x14>
 802a75a:	460a      	mov	r2, r1
 802a75c:	2002      	movs	r0, #2
 802a75e:	4621      	mov	r1, r4
 802a760:	f000 f9fa 	bl	802ab58 <__register_exitproc>
 802a764:	bd10      	pop	{r4, pc}
 802a766:	bf00      	nop
 802a768:	0802ab59 	.word	0x0802ab59

0802a76c <std>:
 802a76c:	2300      	movs	r3, #0
 802a76e:	b510      	push	{r4, lr}
 802a770:	4604      	mov	r4, r0
 802a772:	e9c0 3300 	strd	r3, r3, [r0]
 802a776:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802a77a:	6083      	str	r3, [r0, #8]
 802a77c:	8181      	strh	r1, [r0, #12]
 802a77e:	6643      	str	r3, [r0, #100]	@ 0x64
 802a780:	81c2      	strh	r2, [r0, #14]
 802a782:	6183      	str	r3, [r0, #24]
 802a784:	4619      	mov	r1, r3
 802a786:	2208      	movs	r2, #8
 802a788:	305c      	adds	r0, #92	@ 0x5c
 802a78a:	f000 f906 	bl	802a99a <memset>
 802a78e:	4b0d      	ldr	r3, [pc, #52]	@ (802a7c4 <std+0x58>)
 802a790:	6263      	str	r3, [r4, #36]	@ 0x24
 802a792:	4b0d      	ldr	r3, [pc, #52]	@ (802a7c8 <std+0x5c>)
 802a794:	62a3      	str	r3, [r4, #40]	@ 0x28
 802a796:	4b0d      	ldr	r3, [pc, #52]	@ (802a7cc <std+0x60>)
 802a798:	62e3      	str	r3, [r4, #44]	@ 0x2c
 802a79a:	4b0d      	ldr	r3, [pc, #52]	@ (802a7d0 <std+0x64>)
 802a79c:	6323      	str	r3, [r4, #48]	@ 0x30
 802a79e:	4b0d      	ldr	r3, [pc, #52]	@ (802a7d4 <std+0x68>)
 802a7a0:	6224      	str	r4, [r4, #32]
 802a7a2:	429c      	cmp	r4, r3
 802a7a4:	d006      	beq.n	802a7b4 <std+0x48>
 802a7a6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 802a7aa:	4294      	cmp	r4, r2
 802a7ac:	d002      	beq.n	802a7b4 <std+0x48>
 802a7ae:	33d0      	adds	r3, #208	@ 0xd0
 802a7b0:	429c      	cmp	r4, r3
 802a7b2:	d105      	bne.n	802a7c0 <std+0x54>
 802a7b4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 802a7b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a7bc:	f000 b9ba 	b.w	802ab34 <__retarget_lock_init_recursive>
 802a7c0:	bd10      	pop	{r4, pc}
 802a7c2:	bf00      	nop
 802a7c4:	0802a915 	.word	0x0802a915
 802a7c8:	0802a937 	.word	0x0802a937
 802a7cc:	0802a96f 	.word	0x0802a96f
 802a7d0:	0802a993 	.word	0x0802a993
 802a7d4:	200149b0 	.word	0x200149b0

0802a7d8 <stdio_exit_handler>:
 802a7d8:	4a02      	ldr	r2, [pc, #8]	@ (802a7e4 <stdio_exit_handler+0xc>)
 802a7da:	4903      	ldr	r1, [pc, #12]	@ (802a7e8 <stdio_exit_handler+0x10>)
 802a7dc:	4803      	ldr	r0, [pc, #12]	@ (802a7ec <stdio_exit_handler+0x14>)
 802a7de:	f000 b87b 	b.w	802a8d8 <_fwalk_sglue>
 802a7e2:	bf00      	nop
 802a7e4:	20000120 	.word	0x20000120
 802a7e8:	0802b349 	.word	0x0802b349
 802a7ec:	20000130 	.word	0x20000130

0802a7f0 <cleanup_stdio>:
 802a7f0:	6841      	ldr	r1, [r0, #4]
 802a7f2:	4b0c      	ldr	r3, [pc, #48]	@ (802a824 <cleanup_stdio+0x34>)
 802a7f4:	4299      	cmp	r1, r3
 802a7f6:	b510      	push	{r4, lr}
 802a7f8:	4604      	mov	r4, r0
 802a7fa:	d001      	beq.n	802a800 <cleanup_stdio+0x10>
 802a7fc:	f000 fda4 	bl	802b348 <_fflush_r>
 802a800:	68a1      	ldr	r1, [r4, #8]
 802a802:	4b09      	ldr	r3, [pc, #36]	@ (802a828 <cleanup_stdio+0x38>)
 802a804:	4299      	cmp	r1, r3
 802a806:	d002      	beq.n	802a80e <cleanup_stdio+0x1e>
 802a808:	4620      	mov	r0, r4
 802a80a:	f000 fd9d 	bl	802b348 <_fflush_r>
 802a80e:	68e1      	ldr	r1, [r4, #12]
 802a810:	4b06      	ldr	r3, [pc, #24]	@ (802a82c <cleanup_stdio+0x3c>)
 802a812:	4299      	cmp	r1, r3
 802a814:	d004      	beq.n	802a820 <cleanup_stdio+0x30>
 802a816:	4620      	mov	r0, r4
 802a818:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a81c:	f000 bd94 	b.w	802b348 <_fflush_r>
 802a820:	bd10      	pop	{r4, pc}
 802a822:	bf00      	nop
 802a824:	200149b0 	.word	0x200149b0
 802a828:	20014a18 	.word	0x20014a18
 802a82c:	20014a80 	.word	0x20014a80

0802a830 <global_stdio_init.part.0>:
 802a830:	b510      	push	{r4, lr}
 802a832:	4b0b      	ldr	r3, [pc, #44]	@ (802a860 <global_stdio_init.part.0+0x30>)
 802a834:	4c0b      	ldr	r4, [pc, #44]	@ (802a864 <global_stdio_init.part.0+0x34>)
 802a836:	4a0c      	ldr	r2, [pc, #48]	@ (802a868 <global_stdio_init.part.0+0x38>)
 802a838:	601a      	str	r2, [r3, #0]
 802a83a:	4620      	mov	r0, r4
 802a83c:	2200      	movs	r2, #0
 802a83e:	2104      	movs	r1, #4
 802a840:	f7ff ff94 	bl	802a76c <std>
 802a844:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802a848:	2201      	movs	r2, #1
 802a84a:	2109      	movs	r1, #9
 802a84c:	f7ff ff8e 	bl	802a76c <std>
 802a850:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 802a854:	2202      	movs	r2, #2
 802a856:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a85a:	2112      	movs	r1, #18
 802a85c:	f7ff bf86 	b.w	802a76c <std>
 802a860:	20014ae8 	.word	0x20014ae8
 802a864:	200149b0 	.word	0x200149b0
 802a868:	0802a7d9 	.word	0x0802a7d9

0802a86c <__sfp_lock_acquire>:
 802a86c:	4801      	ldr	r0, [pc, #4]	@ (802a874 <__sfp_lock_acquire+0x8>)
 802a86e:	f000 b962 	b.w	802ab36 <__retarget_lock_acquire_recursive>
 802a872:	bf00      	nop
 802a874:	20014af2 	.word	0x20014af2

0802a878 <__sfp_lock_release>:
 802a878:	4801      	ldr	r0, [pc, #4]	@ (802a880 <__sfp_lock_release+0x8>)
 802a87a:	f000 b95d 	b.w	802ab38 <__retarget_lock_release_recursive>
 802a87e:	bf00      	nop
 802a880:	20014af2 	.word	0x20014af2

0802a884 <__sinit>:
 802a884:	b510      	push	{r4, lr}
 802a886:	4604      	mov	r4, r0
 802a888:	f7ff fff0 	bl	802a86c <__sfp_lock_acquire>
 802a88c:	6a23      	ldr	r3, [r4, #32]
 802a88e:	b11b      	cbz	r3, 802a898 <__sinit+0x14>
 802a890:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a894:	f7ff bff0 	b.w	802a878 <__sfp_lock_release>
 802a898:	4b04      	ldr	r3, [pc, #16]	@ (802a8ac <__sinit+0x28>)
 802a89a:	6223      	str	r3, [r4, #32]
 802a89c:	4b04      	ldr	r3, [pc, #16]	@ (802a8b0 <__sinit+0x2c>)
 802a89e:	681b      	ldr	r3, [r3, #0]
 802a8a0:	2b00      	cmp	r3, #0
 802a8a2:	d1f5      	bne.n	802a890 <__sinit+0xc>
 802a8a4:	f7ff ffc4 	bl	802a830 <global_stdio_init.part.0>
 802a8a8:	e7f2      	b.n	802a890 <__sinit+0xc>
 802a8aa:	bf00      	nop
 802a8ac:	0802a7f1 	.word	0x0802a7f1
 802a8b0:	20014ae8 	.word	0x20014ae8

0802a8b4 <fiprintf>:
 802a8b4:	b40e      	push	{r1, r2, r3}
 802a8b6:	b503      	push	{r0, r1, lr}
 802a8b8:	4601      	mov	r1, r0
 802a8ba:	ab03      	add	r3, sp, #12
 802a8bc:	4805      	ldr	r0, [pc, #20]	@ (802a8d4 <fiprintf+0x20>)
 802a8be:	f853 2b04 	ldr.w	r2, [r3], #4
 802a8c2:	6800      	ldr	r0, [r0, #0]
 802a8c4:	9301      	str	r3, [sp, #4]
 802a8c6:	f000 fa17 	bl	802acf8 <_vfiprintf_r>
 802a8ca:	b002      	add	sp, #8
 802a8cc:	f85d eb04 	ldr.w	lr, [sp], #4
 802a8d0:	b003      	add	sp, #12
 802a8d2:	4770      	bx	lr
 802a8d4:	2000012c 	.word	0x2000012c

0802a8d8 <_fwalk_sglue>:
 802a8d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a8dc:	4607      	mov	r7, r0
 802a8de:	4688      	mov	r8, r1
 802a8e0:	4614      	mov	r4, r2
 802a8e2:	2600      	movs	r6, #0
 802a8e4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802a8e8:	f1b9 0901 	subs.w	r9, r9, #1
 802a8ec:	d505      	bpl.n	802a8fa <_fwalk_sglue+0x22>
 802a8ee:	6824      	ldr	r4, [r4, #0]
 802a8f0:	2c00      	cmp	r4, #0
 802a8f2:	d1f7      	bne.n	802a8e4 <_fwalk_sglue+0xc>
 802a8f4:	4630      	mov	r0, r6
 802a8f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a8fa:	89ab      	ldrh	r3, [r5, #12]
 802a8fc:	2b01      	cmp	r3, #1
 802a8fe:	d907      	bls.n	802a910 <_fwalk_sglue+0x38>
 802a900:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802a904:	3301      	adds	r3, #1
 802a906:	d003      	beq.n	802a910 <_fwalk_sglue+0x38>
 802a908:	4629      	mov	r1, r5
 802a90a:	4638      	mov	r0, r7
 802a90c:	47c0      	blx	r8
 802a90e:	4306      	orrs	r6, r0
 802a910:	3568      	adds	r5, #104	@ 0x68
 802a912:	e7e9      	b.n	802a8e8 <_fwalk_sglue+0x10>

0802a914 <__sread>:
 802a914:	b510      	push	{r4, lr}
 802a916:	460c      	mov	r4, r1
 802a918:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a91c:	f000 f898 	bl	802aa50 <_read_r>
 802a920:	2800      	cmp	r0, #0
 802a922:	bfab      	itete	ge
 802a924:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802a926:	89a3      	ldrhlt	r3, [r4, #12]
 802a928:	181b      	addge	r3, r3, r0
 802a92a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 802a92e:	bfac      	ite	ge
 802a930:	6563      	strge	r3, [r4, #84]	@ 0x54
 802a932:	81a3      	strhlt	r3, [r4, #12]
 802a934:	bd10      	pop	{r4, pc}

0802a936 <__swrite>:
 802a936:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a93a:	461f      	mov	r7, r3
 802a93c:	898b      	ldrh	r3, [r1, #12]
 802a93e:	05db      	lsls	r3, r3, #23
 802a940:	4605      	mov	r5, r0
 802a942:	460c      	mov	r4, r1
 802a944:	4616      	mov	r6, r2
 802a946:	d505      	bpl.n	802a954 <__swrite+0x1e>
 802a948:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a94c:	2302      	movs	r3, #2
 802a94e:	2200      	movs	r2, #0
 802a950:	f000 f86c 	bl	802aa2c <_lseek_r>
 802a954:	89a3      	ldrh	r3, [r4, #12]
 802a956:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802a95a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 802a95e:	81a3      	strh	r3, [r4, #12]
 802a960:	4632      	mov	r2, r6
 802a962:	463b      	mov	r3, r7
 802a964:	4628      	mov	r0, r5
 802a966:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a96a:	f000 b8a7 	b.w	802aabc <_write_r>

0802a96e <__sseek>:
 802a96e:	b510      	push	{r4, lr}
 802a970:	460c      	mov	r4, r1
 802a972:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a976:	f000 f859 	bl	802aa2c <_lseek_r>
 802a97a:	1c43      	adds	r3, r0, #1
 802a97c:	89a3      	ldrh	r3, [r4, #12]
 802a97e:	bf15      	itete	ne
 802a980:	6560      	strne	r0, [r4, #84]	@ 0x54
 802a982:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802a986:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802a98a:	81a3      	strheq	r3, [r4, #12]
 802a98c:	bf18      	it	ne
 802a98e:	81a3      	strhne	r3, [r4, #12]
 802a990:	bd10      	pop	{r4, pc}

0802a992 <__sclose>:
 802a992:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a996:	f000 b839 	b.w	802aa0c <_close_r>

0802a99a <memset>:
 802a99a:	4402      	add	r2, r0
 802a99c:	4603      	mov	r3, r0
 802a99e:	4293      	cmp	r3, r2
 802a9a0:	d100      	bne.n	802a9a4 <memset+0xa>
 802a9a2:	4770      	bx	lr
 802a9a4:	f803 1b01 	strb.w	r1, [r3], #1
 802a9a8:	e7f9      	b.n	802a99e <memset+0x4>

0802a9aa <_raise_r>:
 802a9aa:	291f      	cmp	r1, #31
 802a9ac:	b538      	push	{r3, r4, r5, lr}
 802a9ae:	4605      	mov	r5, r0
 802a9b0:	460c      	mov	r4, r1
 802a9b2:	d904      	bls.n	802a9be <_raise_r+0x14>
 802a9b4:	2316      	movs	r3, #22
 802a9b6:	6003      	str	r3, [r0, #0]
 802a9b8:	f04f 30ff 	mov.w	r0, #4294967295
 802a9bc:	bd38      	pop	{r3, r4, r5, pc}
 802a9be:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 802a9c0:	b112      	cbz	r2, 802a9c8 <_raise_r+0x1e>
 802a9c2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802a9c6:	b94b      	cbnz	r3, 802a9dc <_raise_r+0x32>
 802a9c8:	4628      	mov	r0, r5
 802a9ca:	f000 f865 	bl	802aa98 <_getpid_r>
 802a9ce:	4622      	mov	r2, r4
 802a9d0:	4601      	mov	r1, r0
 802a9d2:	4628      	mov	r0, r5
 802a9d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802a9d8:	f000 b84c 	b.w	802aa74 <_kill_r>
 802a9dc:	2b01      	cmp	r3, #1
 802a9de:	d00a      	beq.n	802a9f6 <_raise_r+0x4c>
 802a9e0:	1c59      	adds	r1, r3, #1
 802a9e2:	d103      	bne.n	802a9ec <_raise_r+0x42>
 802a9e4:	2316      	movs	r3, #22
 802a9e6:	6003      	str	r3, [r0, #0]
 802a9e8:	2001      	movs	r0, #1
 802a9ea:	e7e7      	b.n	802a9bc <_raise_r+0x12>
 802a9ec:	2100      	movs	r1, #0
 802a9ee:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 802a9f2:	4620      	mov	r0, r4
 802a9f4:	4798      	blx	r3
 802a9f6:	2000      	movs	r0, #0
 802a9f8:	e7e0      	b.n	802a9bc <_raise_r+0x12>
	...

0802a9fc <raise>:
 802a9fc:	4b02      	ldr	r3, [pc, #8]	@ (802aa08 <raise+0xc>)
 802a9fe:	4601      	mov	r1, r0
 802aa00:	6818      	ldr	r0, [r3, #0]
 802aa02:	f7ff bfd2 	b.w	802a9aa <_raise_r>
 802aa06:	bf00      	nop
 802aa08:	2000012c 	.word	0x2000012c

0802aa0c <_close_r>:
 802aa0c:	b538      	push	{r3, r4, r5, lr}
 802aa0e:	4d06      	ldr	r5, [pc, #24]	@ (802aa28 <_close_r+0x1c>)
 802aa10:	2300      	movs	r3, #0
 802aa12:	4604      	mov	r4, r0
 802aa14:	4608      	mov	r0, r1
 802aa16:	602b      	str	r3, [r5, #0]
 802aa18:	f7d7 fc4a 	bl	80022b0 <_close>
 802aa1c:	1c43      	adds	r3, r0, #1
 802aa1e:	d102      	bne.n	802aa26 <_close_r+0x1a>
 802aa20:	682b      	ldr	r3, [r5, #0]
 802aa22:	b103      	cbz	r3, 802aa26 <_close_r+0x1a>
 802aa24:	6023      	str	r3, [r4, #0]
 802aa26:	bd38      	pop	{r3, r4, r5, pc}
 802aa28:	20014aec 	.word	0x20014aec

0802aa2c <_lseek_r>:
 802aa2c:	b538      	push	{r3, r4, r5, lr}
 802aa2e:	4d07      	ldr	r5, [pc, #28]	@ (802aa4c <_lseek_r+0x20>)
 802aa30:	4604      	mov	r4, r0
 802aa32:	4608      	mov	r0, r1
 802aa34:	4611      	mov	r1, r2
 802aa36:	2200      	movs	r2, #0
 802aa38:	602a      	str	r2, [r5, #0]
 802aa3a:	461a      	mov	r2, r3
 802aa3c:	f7d7 fc42 	bl	80022c4 <_lseek>
 802aa40:	1c43      	adds	r3, r0, #1
 802aa42:	d102      	bne.n	802aa4a <_lseek_r+0x1e>
 802aa44:	682b      	ldr	r3, [r5, #0]
 802aa46:	b103      	cbz	r3, 802aa4a <_lseek_r+0x1e>
 802aa48:	6023      	str	r3, [r4, #0]
 802aa4a:	bd38      	pop	{r3, r4, r5, pc}
 802aa4c:	20014aec 	.word	0x20014aec

0802aa50 <_read_r>:
 802aa50:	b538      	push	{r3, r4, r5, lr}
 802aa52:	4d07      	ldr	r5, [pc, #28]	@ (802aa70 <_read_r+0x20>)
 802aa54:	4604      	mov	r4, r0
 802aa56:	4608      	mov	r0, r1
 802aa58:	4611      	mov	r1, r2
 802aa5a:	2200      	movs	r2, #0
 802aa5c:	602a      	str	r2, [r5, #0]
 802aa5e:	461a      	mov	r2, r3
 802aa60:	f7d7 fc0a 	bl	8002278 <_read>
 802aa64:	1c43      	adds	r3, r0, #1
 802aa66:	d102      	bne.n	802aa6e <_read_r+0x1e>
 802aa68:	682b      	ldr	r3, [r5, #0]
 802aa6a:	b103      	cbz	r3, 802aa6e <_read_r+0x1e>
 802aa6c:	6023      	str	r3, [r4, #0]
 802aa6e:	bd38      	pop	{r3, r4, r5, pc}
 802aa70:	20014aec 	.word	0x20014aec

0802aa74 <_kill_r>:
 802aa74:	b538      	push	{r3, r4, r5, lr}
 802aa76:	4d07      	ldr	r5, [pc, #28]	@ (802aa94 <_kill_r+0x20>)
 802aa78:	2300      	movs	r3, #0
 802aa7a:	4604      	mov	r4, r0
 802aa7c:	4608      	mov	r0, r1
 802aa7e:	4611      	mov	r1, r2
 802aa80:	602b      	str	r3, [r5, #0]
 802aa82:	f7d7 fbeb 	bl	800225c <_kill>
 802aa86:	1c43      	adds	r3, r0, #1
 802aa88:	d102      	bne.n	802aa90 <_kill_r+0x1c>
 802aa8a:	682b      	ldr	r3, [r5, #0]
 802aa8c:	b103      	cbz	r3, 802aa90 <_kill_r+0x1c>
 802aa8e:	6023      	str	r3, [r4, #0]
 802aa90:	bd38      	pop	{r3, r4, r5, pc}
 802aa92:	bf00      	nop
 802aa94:	20014aec 	.word	0x20014aec

0802aa98 <_getpid_r>:
 802aa98:	f7d7 bbde 	b.w	8002258 <_getpid>

0802aa9c <_sbrk_r>:
 802aa9c:	b538      	push	{r3, r4, r5, lr}
 802aa9e:	4d06      	ldr	r5, [pc, #24]	@ (802aab8 <_sbrk_r+0x1c>)
 802aaa0:	2300      	movs	r3, #0
 802aaa2:	4604      	mov	r4, r0
 802aaa4:	4608      	mov	r0, r1
 802aaa6:	602b      	str	r3, [r5, #0]
 802aaa8:	f7d7 fc0e 	bl	80022c8 <_sbrk>
 802aaac:	1c43      	adds	r3, r0, #1
 802aaae:	d102      	bne.n	802aab6 <_sbrk_r+0x1a>
 802aab0:	682b      	ldr	r3, [r5, #0]
 802aab2:	b103      	cbz	r3, 802aab6 <_sbrk_r+0x1a>
 802aab4:	6023      	str	r3, [r4, #0]
 802aab6:	bd38      	pop	{r3, r4, r5, pc}
 802aab8:	20014aec 	.word	0x20014aec

0802aabc <_write_r>:
 802aabc:	b538      	push	{r3, r4, r5, lr}
 802aabe:	4d07      	ldr	r5, [pc, #28]	@ (802aadc <_write_r+0x20>)
 802aac0:	4604      	mov	r4, r0
 802aac2:	4608      	mov	r0, r1
 802aac4:	4611      	mov	r1, r2
 802aac6:	2200      	movs	r2, #0
 802aac8:	602a      	str	r2, [r5, #0]
 802aaca:	461a      	mov	r2, r3
 802aacc:	f7d7 fbe2 	bl	8002294 <_write>
 802aad0:	1c43      	adds	r3, r0, #1
 802aad2:	d102      	bne.n	802aada <_write_r+0x1e>
 802aad4:	682b      	ldr	r3, [r5, #0]
 802aad6:	b103      	cbz	r3, 802aada <_write_r+0x1e>
 802aad8:	6023      	str	r3, [r4, #0]
 802aada:	bd38      	pop	{r3, r4, r5, pc}
 802aadc:	20014aec 	.word	0x20014aec

0802aae0 <__errno>:
 802aae0:	4b01      	ldr	r3, [pc, #4]	@ (802aae8 <__errno+0x8>)
 802aae2:	6818      	ldr	r0, [r3, #0]
 802aae4:	4770      	bx	lr
 802aae6:	bf00      	nop
 802aae8:	2000012c 	.word	0x2000012c

0802aaec <__libc_init_array>:
 802aaec:	b570      	push	{r4, r5, r6, lr}
 802aaee:	4d0d      	ldr	r5, [pc, #52]	@ (802ab24 <__libc_init_array+0x38>)
 802aaf0:	4c0d      	ldr	r4, [pc, #52]	@ (802ab28 <__libc_init_array+0x3c>)
 802aaf2:	1b64      	subs	r4, r4, r5
 802aaf4:	10a4      	asrs	r4, r4, #2
 802aaf6:	2600      	movs	r6, #0
 802aaf8:	42a6      	cmp	r6, r4
 802aafa:	d109      	bne.n	802ab10 <__libc_init_array+0x24>
 802aafc:	4d0b      	ldr	r5, [pc, #44]	@ (802ab2c <__libc_init_array+0x40>)
 802aafe:	4c0c      	ldr	r4, [pc, #48]	@ (802ab30 <__libc_init_array+0x44>)
 802ab00:	f000 fd62 	bl	802b5c8 <_init>
 802ab04:	1b64      	subs	r4, r4, r5
 802ab06:	10a4      	asrs	r4, r4, #2
 802ab08:	2600      	movs	r6, #0
 802ab0a:	42a6      	cmp	r6, r4
 802ab0c:	d105      	bne.n	802ab1a <__libc_init_array+0x2e>
 802ab0e:	bd70      	pop	{r4, r5, r6, pc}
 802ab10:	f855 3b04 	ldr.w	r3, [r5], #4
 802ab14:	4798      	blx	r3
 802ab16:	3601      	adds	r6, #1
 802ab18:	e7ee      	b.n	802aaf8 <__libc_init_array+0xc>
 802ab1a:	f855 3b04 	ldr.w	r3, [r5], #4
 802ab1e:	4798      	blx	r3
 802ab20:	3601      	adds	r6, #1
 802ab22:	e7f2      	b.n	802ab0a <__libc_init_array+0x1e>
 802ab24:	08048860 	.word	0x08048860
 802ab28:	08048860 	.word	0x08048860
 802ab2c:	08048860 	.word	0x08048860
 802ab30:	08048874 	.word	0x08048874

0802ab34 <__retarget_lock_init_recursive>:
 802ab34:	4770      	bx	lr

0802ab36 <__retarget_lock_acquire_recursive>:
 802ab36:	4770      	bx	lr

0802ab38 <__retarget_lock_release_recursive>:
 802ab38:	4770      	bx	lr

0802ab3a <memcpy>:
 802ab3a:	440a      	add	r2, r1
 802ab3c:	4291      	cmp	r1, r2
 802ab3e:	f100 33ff 	add.w	r3, r0, #4294967295
 802ab42:	d100      	bne.n	802ab46 <memcpy+0xc>
 802ab44:	4770      	bx	lr
 802ab46:	b510      	push	{r4, lr}
 802ab48:	f811 4b01 	ldrb.w	r4, [r1], #1
 802ab4c:	f803 4f01 	strb.w	r4, [r3, #1]!
 802ab50:	4291      	cmp	r1, r2
 802ab52:	d1f9      	bne.n	802ab48 <memcpy+0xe>
 802ab54:	bd10      	pop	{r4, pc}
	...

0802ab58 <__register_exitproc>:
 802ab58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ab5c:	4d27      	ldr	r5, [pc, #156]	@ (802abfc <__register_exitproc+0xa4>)
 802ab5e:	4607      	mov	r7, r0
 802ab60:	6828      	ldr	r0, [r5, #0]
 802ab62:	4691      	mov	r9, r2
 802ab64:	460e      	mov	r6, r1
 802ab66:	4698      	mov	r8, r3
 802ab68:	f7ff ffe5 	bl	802ab36 <__retarget_lock_acquire_recursive>
 802ab6c:	4a24      	ldr	r2, [pc, #144]	@ (802ac00 <__register_exitproc+0xa8>)
 802ab6e:	6814      	ldr	r4, [r2, #0]
 802ab70:	b93c      	cbnz	r4, 802ab82 <__register_exitproc+0x2a>
 802ab72:	4b24      	ldr	r3, [pc, #144]	@ (802ac04 <__register_exitproc+0xac>)
 802ab74:	6013      	str	r3, [r2, #0]
 802ab76:	4a24      	ldr	r2, [pc, #144]	@ (802ac08 <__register_exitproc+0xb0>)
 802ab78:	b112      	cbz	r2, 802ab80 <__register_exitproc+0x28>
 802ab7a:	6812      	ldr	r2, [r2, #0]
 802ab7c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 802ab80:	4c20      	ldr	r4, [pc, #128]	@ (802ac04 <__register_exitproc+0xac>)
 802ab82:	6863      	ldr	r3, [r4, #4]
 802ab84:	2b1f      	cmp	r3, #31
 802ab86:	dd06      	ble.n	802ab96 <__register_exitproc+0x3e>
 802ab88:	6828      	ldr	r0, [r5, #0]
 802ab8a:	f7ff ffd5 	bl	802ab38 <__retarget_lock_release_recursive>
 802ab8e:	f04f 30ff 	mov.w	r0, #4294967295
 802ab92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ab96:	b32f      	cbz	r7, 802abe4 <__register_exitproc+0x8c>
 802ab98:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 802ab9c:	b968      	cbnz	r0, 802abba <__register_exitproc+0x62>
 802ab9e:	4b1b      	ldr	r3, [pc, #108]	@ (802ac0c <__register_exitproc+0xb4>)
 802aba0:	2b00      	cmp	r3, #0
 802aba2:	d0f1      	beq.n	802ab88 <__register_exitproc+0x30>
 802aba4:	f44f 7084 	mov.w	r0, #264	@ 0x108
 802aba8:	f7ff fd14 	bl	802a5d4 <malloc>
 802abac:	2800      	cmp	r0, #0
 802abae:	d0eb      	beq.n	802ab88 <__register_exitproc+0x30>
 802abb0:	2300      	movs	r3, #0
 802abb2:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802abb6:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 802abba:	6863      	ldr	r3, [r4, #4]
 802abbc:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802abc0:	2201      	movs	r2, #1
 802abc2:	409a      	lsls	r2, r3
 802abc4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802abc8:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 802abcc:	4313      	orrs	r3, r2
 802abce:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802abd2:	2f02      	cmp	r7, #2
 802abd4:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 802abd8:	bf02      	ittt	eq
 802abda:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 802abde:	4313      	orreq	r3, r2
 802abe0:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 802abe4:	6863      	ldr	r3, [r4, #4]
 802abe6:	6828      	ldr	r0, [r5, #0]
 802abe8:	1c5a      	adds	r2, r3, #1
 802abea:	3302      	adds	r3, #2
 802abec:	6062      	str	r2, [r4, #4]
 802abee:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802abf2:	f7ff ffa1 	bl	802ab38 <__retarget_lock_release_recursive>
 802abf6:	2000      	movs	r0, #0
 802abf8:	e7cb      	b.n	802ab92 <__register_exitproc+0x3a>
 802abfa:	bf00      	nop
 802abfc:	2000017c 	.word	0x2000017c
 802ac00:	20014b80 	.word	0x20014b80
 802ac04:	20014af4 	.word	0x20014af4
 802ac08:	0802ee58 	.word	0x0802ee58
 802ac0c:	0802a5d5 	.word	0x0802a5d5

0802ac10 <_free_r>:
 802ac10:	b538      	push	{r3, r4, r5, lr}
 802ac12:	4605      	mov	r5, r0
 802ac14:	2900      	cmp	r1, #0
 802ac16:	d041      	beq.n	802ac9c <_free_r+0x8c>
 802ac18:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802ac1c:	1f0c      	subs	r4, r1, #4
 802ac1e:	2b00      	cmp	r3, #0
 802ac20:	bfb8      	it	lt
 802ac22:	18e4      	addlt	r4, r4, r3
 802ac24:	f7ff fd88 	bl	802a738 <__malloc_lock>
 802ac28:	4a1d      	ldr	r2, [pc, #116]	@ (802aca0 <_free_r+0x90>)
 802ac2a:	6813      	ldr	r3, [r2, #0]
 802ac2c:	b933      	cbnz	r3, 802ac3c <_free_r+0x2c>
 802ac2e:	6063      	str	r3, [r4, #4]
 802ac30:	6014      	str	r4, [r2, #0]
 802ac32:	4628      	mov	r0, r5
 802ac34:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802ac38:	f7ff bd84 	b.w	802a744 <__malloc_unlock>
 802ac3c:	42a3      	cmp	r3, r4
 802ac3e:	d908      	bls.n	802ac52 <_free_r+0x42>
 802ac40:	6820      	ldr	r0, [r4, #0]
 802ac42:	1821      	adds	r1, r4, r0
 802ac44:	428b      	cmp	r3, r1
 802ac46:	bf01      	itttt	eq
 802ac48:	6819      	ldreq	r1, [r3, #0]
 802ac4a:	685b      	ldreq	r3, [r3, #4]
 802ac4c:	1809      	addeq	r1, r1, r0
 802ac4e:	6021      	streq	r1, [r4, #0]
 802ac50:	e7ed      	b.n	802ac2e <_free_r+0x1e>
 802ac52:	461a      	mov	r2, r3
 802ac54:	685b      	ldr	r3, [r3, #4]
 802ac56:	b10b      	cbz	r3, 802ac5c <_free_r+0x4c>
 802ac58:	42a3      	cmp	r3, r4
 802ac5a:	d9fa      	bls.n	802ac52 <_free_r+0x42>
 802ac5c:	6811      	ldr	r1, [r2, #0]
 802ac5e:	1850      	adds	r0, r2, r1
 802ac60:	42a0      	cmp	r0, r4
 802ac62:	d10b      	bne.n	802ac7c <_free_r+0x6c>
 802ac64:	6820      	ldr	r0, [r4, #0]
 802ac66:	4401      	add	r1, r0
 802ac68:	1850      	adds	r0, r2, r1
 802ac6a:	4283      	cmp	r3, r0
 802ac6c:	6011      	str	r1, [r2, #0]
 802ac6e:	d1e0      	bne.n	802ac32 <_free_r+0x22>
 802ac70:	6818      	ldr	r0, [r3, #0]
 802ac72:	685b      	ldr	r3, [r3, #4]
 802ac74:	6053      	str	r3, [r2, #4]
 802ac76:	4408      	add	r0, r1
 802ac78:	6010      	str	r0, [r2, #0]
 802ac7a:	e7da      	b.n	802ac32 <_free_r+0x22>
 802ac7c:	d902      	bls.n	802ac84 <_free_r+0x74>
 802ac7e:	230c      	movs	r3, #12
 802ac80:	602b      	str	r3, [r5, #0]
 802ac82:	e7d6      	b.n	802ac32 <_free_r+0x22>
 802ac84:	6820      	ldr	r0, [r4, #0]
 802ac86:	1821      	adds	r1, r4, r0
 802ac88:	428b      	cmp	r3, r1
 802ac8a:	bf04      	itt	eq
 802ac8c:	6819      	ldreq	r1, [r3, #0]
 802ac8e:	685b      	ldreq	r3, [r3, #4]
 802ac90:	6063      	str	r3, [r4, #4]
 802ac92:	bf04      	itt	eq
 802ac94:	1809      	addeq	r1, r1, r0
 802ac96:	6021      	streq	r1, [r4, #0]
 802ac98:	6054      	str	r4, [r2, #4]
 802ac9a:	e7ca      	b.n	802ac32 <_free_r+0x22>
 802ac9c:	bd38      	pop	{r3, r4, r5, pc}
 802ac9e:	bf00      	nop
 802aca0:	200149ac 	.word	0x200149ac

0802aca4 <__sfputc_r>:
 802aca4:	6893      	ldr	r3, [r2, #8]
 802aca6:	3b01      	subs	r3, #1
 802aca8:	2b00      	cmp	r3, #0
 802acaa:	b410      	push	{r4}
 802acac:	6093      	str	r3, [r2, #8]
 802acae:	da08      	bge.n	802acc2 <__sfputc_r+0x1e>
 802acb0:	6994      	ldr	r4, [r2, #24]
 802acb2:	42a3      	cmp	r3, r4
 802acb4:	db01      	blt.n	802acba <__sfputc_r+0x16>
 802acb6:	290a      	cmp	r1, #10
 802acb8:	d103      	bne.n	802acc2 <__sfputc_r+0x1e>
 802acba:	f85d 4b04 	ldr.w	r4, [sp], #4
 802acbe:	f000 bb6b 	b.w	802b398 <__swbuf_r>
 802acc2:	6813      	ldr	r3, [r2, #0]
 802acc4:	1c58      	adds	r0, r3, #1
 802acc6:	6010      	str	r0, [r2, #0]
 802acc8:	7019      	strb	r1, [r3, #0]
 802acca:	4608      	mov	r0, r1
 802accc:	f85d 4b04 	ldr.w	r4, [sp], #4
 802acd0:	4770      	bx	lr

0802acd2 <__sfputs_r>:
 802acd2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802acd4:	4606      	mov	r6, r0
 802acd6:	460f      	mov	r7, r1
 802acd8:	4614      	mov	r4, r2
 802acda:	18d5      	adds	r5, r2, r3
 802acdc:	42ac      	cmp	r4, r5
 802acde:	d101      	bne.n	802ace4 <__sfputs_r+0x12>
 802ace0:	2000      	movs	r0, #0
 802ace2:	e007      	b.n	802acf4 <__sfputs_r+0x22>
 802ace4:	f814 1b01 	ldrb.w	r1, [r4], #1
 802ace8:	463a      	mov	r2, r7
 802acea:	4630      	mov	r0, r6
 802acec:	f7ff ffda 	bl	802aca4 <__sfputc_r>
 802acf0:	1c43      	adds	r3, r0, #1
 802acf2:	d1f3      	bne.n	802acdc <__sfputs_r+0xa>
 802acf4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802acf8 <_vfiprintf_r>:
 802acf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802acfc:	460d      	mov	r5, r1
 802acfe:	b09d      	sub	sp, #116	@ 0x74
 802ad00:	4614      	mov	r4, r2
 802ad02:	4698      	mov	r8, r3
 802ad04:	4606      	mov	r6, r0
 802ad06:	b118      	cbz	r0, 802ad10 <_vfiprintf_r+0x18>
 802ad08:	6a03      	ldr	r3, [r0, #32]
 802ad0a:	b90b      	cbnz	r3, 802ad10 <_vfiprintf_r+0x18>
 802ad0c:	f7ff fdba 	bl	802a884 <__sinit>
 802ad10:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802ad12:	07d9      	lsls	r1, r3, #31
 802ad14:	d405      	bmi.n	802ad22 <_vfiprintf_r+0x2a>
 802ad16:	89ab      	ldrh	r3, [r5, #12]
 802ad18:	059a      	lsls	r2, r3, #22
 802ad1a:	d402      	bmi.n	802ad22 <_vfiprintf_r+0x2a>
 802ad1c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802ad1e:	f7ff ff0a 	bl	802ab36 <__retarget_lock_acquire_recursive>
 802ad22:	89ab      	ldrh	r3, [r5, #12]
 802ad24:	071b      	lsls	r3, r3, #28
 802ad26:	d501      	bpl.n	802ad2c <_vfiprintf_r+0x34>
 802ad28:	692b      	ldr	r3, [r5, #16]
 802ad2a:	b99b      	cbnz	r3, 802ad54 <_vfiprintf_r+0x5c>
 802ad2c:	4629      	mov	r1, r5
 802ad2e:	4630      	mov	r0, r6
 802ad30:	f000 fb70 	bl	802b414 <__swsetup_r>
 802ad34:	b170      	cbz	r0, 802ad54 <_vfiprintf_r+0x5c>
 802ad36:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802ad38:	07dc      	lsls	r4, r3, #31
 802ad3a:	d504      	bpl.n	802ad46 <_vfiprintf_r+0x4e>
 802ad3c:	f04f 30ff 	mov.w	r0, #4294967295
 802ad40:	b01d      	add	sp, #116	@ 0x74
 802ad42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ad46:	89ab      	ldrh	r3, [r5, #12]
 802ad48:	0598      	lsls	r0, r3, #22
 802ad4a:	d4f7      	bmi.n	802ad3c <_vfiprintf_r+0x44>
 802ad4c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802ad4e:	f7ff fef3 	bl	802ab38 <__retarget_lock_release_recursive>
 802ad52:	e7f3      	b.n	802ad3c <_vfiprintf_r+0x44>
 802ad54:	2300      	movs	r3, #0
 802ad56:	9309      	str	r3, [sp, #36]	@ 0x24
 802ad58:	2320      	movs	r3, #32
 802ad5a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 802ad5e:	f8cd 800c 	str.w	r8, [sp, #12]
 802ad62:	2330      	movs	r3, #48	@ 0x30
 802ad64:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 802af14 <_vfiprintf_r+0x21c>
 802ad68:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 802ad6c:	f04f 0901 	mov.w	r9, #1
 802ad70:	4623      	mov	r3, r4
 802ad72:	469a      	mov	sl, r3
 802ad74:	f813 2b01 	ldrb.w	r2, [r3], #1
 802ad78:	b10a      	cbz	r2, 802ad7e <_vfiprintf_r+0x86>
 802ad7a:	2a25      	cmp	r2, #37	@ 0x25
 802ad7c:	d1f9      	bne.n	802ad72 <_vfiprintf_r+0x7a>
 802ad7e:	ebba 0b04 	subs.w	fp, sl, r4
 802ad82:	d00b      	beq.n	802ad9c <_vfiprintf_r+0xa4>
 802ad84:	465b      	mov	r3, fp
 802ad86:	4622      	mov	r2, r4
 802ad88:	4629      	mov	r1, r5
 802ad8a:	4630      	mov	r0, r6
 802ad8c:	f7ff ffa1 	bl	802acd2 <__sfputs_r>
 802ad90:	3001      	adds	r0, #1
 802ad92:	f000 80a7 	beq.w	802aee4 <_vfiprintf_r+0x1ec>
 802ad96:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802ad98:	445a      	add	r2, fp
 802ad9a:	9209      	str	r2, [sp, #36]	@ 0x24
 802ad9c:	f89a 3000 	ldrb.w	r3, [sl]
 802ada0:	2b00      	cmp	r3, #0
 802ada2:	f000 809f 	beq.w	802aee4 <_vfiprintf_r+0x1ec>
 802ada6:	2300      	movs	r3, #0
 802ada8:	f04f 32ff 	mov.w	r2, #4294967295
 802adac:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802adb0:	f10a 0a01 	add.w	sl, sl, #1
 802adb4:	9304      	str	r3, [sp, #16]
 802adb6:	9307      	str	r3, [sp, #28]
 802adb8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 802adbc:	931a      	str	r3, [sp, #104]	@ 0x68
 802adbe:	4654      	mov	r4, sl
 802adc0:	2205      	movs	r2, #5
 802adc2:	f814 1b01 	ldrb.w	r1, [r4], #1
 802adc6:	4853      	ldr	r0, [pc, #332]	@ (802af14 <_vfiprintf_r+0x21c>)
 802adc8:	f7d5 fa12 	bl	80001f0 <memchr>
 802adcc:	9a04      	ldr	r2, [sp, #16]
 802adce:	b9d8      	cbnz	r0, 802ae08 <_vfiprintf_r+0x110>
 802add0:	06d1      	lsls	r1, r2, #27
 802add2:	bf44      	itt	mi
 802add4:	2320      	movmi	r3, #32
 802add6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802adda:	0713      	lsls	r3, r2, #28
 802addc:	bf44      	itt	mi
 802adde:	232b      	movmi	r3, #43	@ 0x2b
 802ade0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802ade4:	f89a 3000 	ldrb.w	r3, [sl]
 802ade8:	2b2a      	cmp	r3, #42	@ 0x2a
 802adea:	d015      	beq.n	802ae18 <_vfiprintf_r+0x120>
 802adec:	9a07      	ldr	r2, [sp, #28]
 802adee:	4654      	mov	r4, sl
 802adf0:	2000      	movs	r0, #0
 802adf2:	f04f 0c0a 	mov.w	ip, #10
 802adf6:	4621      	mov	r1, r4
 802adf8:	f811 3b01 	ldrb.w	r3, [r1], #1
 802adfc:	3b30      	subs	r3, #48	@ 0x30
 802adfe:	2b09      	cmp	r3, #9
 802ae00:	d94b      	bls.n	802ae9a <_vfiprintf_r+0x1a2>
 802ae02:	b1b0      	cbz	r0, 802ae32 <_vfiprintf_r+0x13a>
 802ae04:	9207      	str	r2, [sp, #28]
 802ae06:	e014      	b.n	802ae32 <_vfiprintf_r+0x13a>
 802ae08:	eba0 0308 	sub.w	r3, r0, r8
 802ae0c:	fa09 f303 	lsl.w	r3, r9, r3
 802ae10:	4313      	orrs	r3, r2
 802ae12:	9304      	str	r3, [sp, #16]
 802ae14:	46a2      	mov	sl, r4
 802ae16:	e7d2      	b.n	802adbe <_vfiprintf_r+0xc6>
 802ae18:	9b03      	ldr	r3, [sp, #12]
 802ae1a:	1d19      	adds	r1, r3, #4
 802ae1c:	681b      	ldr	r3, [r3, #0]
 802ae1e:	9103      	str	r1, [sp, #12]
 802ae20:	2b00      	cmp	r3, #0
 802ae22:	bfbb      	ittet	lt
 802ae24:	425b      	neglt	r3, r3
 802ae26:	f042 0202 	orrlt.w	r2, r2, #2
 802ae2a:	9307      	strge	r3, [sp, #28]
 802ae2c:	9307      	strlt	r3, [sp, #28]
 802ae2e:	bfb8      	it	lt
 802ae30:	9204      	strlt	r2, [sp, #16]
 802ae32:	7823      	ldrb	r3, [r4, #0]
 802ae34:	2b2e      	cmp	r3, #46	@ 0x2e
 802ae36:	d10a      	bne.n	802ae4e <_vfiprintf_r+0x156>
 802ae38:	7863      	ldrb	r3, [r4, #1]
 802ae3a:	2b2a      	cmp	r3, #42	@ 0x2a
 802ae3c:	d132      	bne.n	802aea4 <_vfiprintf_r+0x1ac>
 802ae3e:	9b03      	ldr	r3, [sp, #12]
 802ae40:	1d1a      	adds	r2, r3, #4
 802ae42:	681b      	ldr	r3, [r3, #0]
 802ae44:	9203      	str	r2, [sp, #12]
 802ae46:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802ae4a:	3402      	adds	r4, #2
 802ae4c:	9305      	str	r3, [sp, #20]
 802ae4e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 802af24 <_vfiprintf_r+0x22c>
 802ae52:	7821      	ldrb	r1, [r4, #0]
 802ae54:	2203      	movs	r2, #3
 802ae56:	4650      	mov	r0, sl
 802ae58:	f7d5 f9ca 	bl	80001f0 <memchr>
 802ae5c:	b138      	cbz	r0, 802ae6e <_vfiprintf_r+0x176>
 802ae5e:	9b04      	ldr	r3, [sp, #16]
 802ae60:	eba0 000a 	sub.w	r0, r0, sl
 802ae64:	2240      	movs	r2, #64	@ 0x40
 802ae66:	4082      	lsls	r2, r0
 802ae68:	4313      	orrs	r3, r2
 802ae6a:	3401      	adds	r4, #1
 802ae6c:	9304      	str	r3, [sp, #16]
 802ae6e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802ae72:	4829      	ldr	r0, [pc, #164]	@ (802af18 <_vfiprintf_r+0x220>)
 802ae74:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802ae78:	2206      	movs	r2, #6
 802ae7a:	f7d5 f9b9 	bl	80001f0 <memchr>
 802ae7e:	2800      	cmp	r0, #0
 802ae80:	d03f      	beq.n	802af02 <_vfiprintf_r+0x20a>
 802ae82:	4b26      	ldr	r3, [pc, #152]	@ (802af1c <_vfiprintf_r+0x224>)
 802ae84:	bb1b      	cbnz	r3, 802aece <_vfiprintf_r+0x1d6>
 802ae86:	9b03      	ldr	r3, [sp, #12]
 802ae88:	3307      	adds	r3, #7
 802ae8a:	f023 0307 	bic.w	r3, r3, #7
 802ae8e:	3308      	adds	r3, #8
 802ae90:	9303      	str	r3, [sp, #12]
 802ae92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802ae94:	443b      	add	r3, r7
 802ae96:	9309      	str	r3, [sp, #36]	@ 0x24
 802ae98:	e76a      	b.n	802ad70 <_vfiprintf_r+0x78>
 802ae9a:	fb0c 3202 	mla	r2, ip, r2, r3
 802ae9e:	460c      	mov	r4, r1
 802aea0:	2001      	movs	r0, #1
 802aea2:	e7a8      	b.n	802adf6 <_vfiprintf_r+0xfe>
 802aea4:	2300      	movs	r3, #0
 802aea6:	3401      	adds	r4, #1
 802aea8:	9305      	str	r3, [sp, #20]
 802aeaa:	4619      	mov	r1, r3
 802aeac:	f04f 0c0a 	mov.w	ip, #10
 802aeb0:	4620      	mov	r0, r4
 802aeb2:	f810 2b01 	ldrb.w	r2, [r0], #1
 802aeb6:	3a30      	subs	r2, #48	@ 0x30
 802aeb8:	2a09      	cmp	r2, #9
 802aeba:	d903      	bls.n	802aec4 <_vfiprintf_r+0x1cc>
 802aebc:	2b00      	cmp	r3, #0
 802aebe:	d0c6      	beq.n	802ae4e <_vfiprintf_r+0x156>
 802aec0:	9105      	str	r1, [sp, #20]
 802aec2:	e7c4      	b.n	802ae4e <_vfiprintf_r+0x156>
 802aec4:	fb0c 2101 	mla	r1, ip, r1, r2
 802aec8:	4604      	mov	r4, r0
 802aeca:	2301      	movs	r3, #1
 802aecc:	e7f0      	b.n	802aeb0 <_vfiprintf_r+0x1b8>
 802aece:	ab03      	add	r3, sp, #12
 802aed0:	9300      	str	r3, [sp, #0]
 802aed2:	462a      	mov	r2, r5
 802aed4:	4b12      	ldr	r3, [pc, #72]	@ (802af20 <_vfiprintf_r+0x228>)
 802aed6:	a904      	add	r1, sp, #16
 802aed8:	4630      	mov	r0, r6
 802aeda:	f3af 8000 	nop.w
 802aede:	4607      	mov	r7, r0
 802aee0:	1c78      	adds	r0, r7, #1
 802aee2:	d1d6      	bne.n	802ae92 <_vfiprintf_r+0x19a>
 802aee4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802aee6:	07d9      	lsls	r1, r3, #31
 802aee8:	d405      	bmi.n	802aef6 <_vfiprintf_r+0x1fe>
 802aeea:	89ab      	ldrh	r3, [r5, #12]
 802aeec:	059a      	lsls	r2, r3, #22
 802aeee:	d402      	bmi.n	802aef6 <_vfiprintf_r+0x1fe>
 802aef0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802aef2:	f7ff fe21 	bl	802ab38 <__retarget_lock_release_recursive>
 802aef6:	89ab      	ldrh	r3, [r5, #12]
 802aef8:	065b      	lsls	r3, r3, #25
 802aefa:	f53f af1f 	bmi.w	802ad3c <_vfiprintf_r+0x44>
 802aefe:	9809      	ldr	r0, [sp, #36]	@ 0x24
 802af00:	e71e      	b.n	802ad40 <_vfiprintf_r+0x48>
 802af02:	ab03      	add	r3, sp, #12
 802af04:	9300      	str	r3, [sp, #0]
 802af06:	462a      	mov	r2, r5
 802af08:	4b05      	ldr	r3, [pc, #20]	@ (802af20 <_vfiprintf_r+0x228>)
 802af0a:	a904      	add	r1, sp, #16
 802af0c:	4630      	mov	r0, r6
 802af0e:	f000 f879 	bl	802b004 <_printf_i>
 802af12:	e7e4      	b.n	802aede <_vfiprintf_r+0x1e6>
 802af14:	0802ccc8 	.word	0x0802ccc8
 802af18:	0802ccd2 	.word	0x0802ccd2
 802af1c:	00000000 	.word	0x00000000
 802af20:	0802acd3 	.word	0x0802acd3
 802af24:	0802ccce 	.word	0x0802ccce

0802af28 <_printf_common>:
 802af28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802af2c:	4616      	mov	r6, r2
 802af2e:	4698      	mov	r8, r3
 802af30:	688a      	ldr	r2, [r1, #8]
 802af32:	690b      	ldr	r3, [r1, #16]
 802af34:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802af38:	4293      	cmp	r3, r2
 802af3a:	bfb8      	it	lt
 802af3c:	4613      	movlt	r3, r2
 802af3e:	6033      	str	r3, [r6, #0]
 802af40:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 802af44:	4607      	mov	r7, r0
 802af46:	460c      	mov	r4, r1
 802af48:	b10a      	cbz	r2, 802af4e <_printf_common+0x26>
 802af4a:	3301      	adds	r3, #1
 802af4c:	6033      	str	r3, [r6, #0]
 802af4e:	6823      	ldr	r3, [r4, #0]
 802af50:	0699      	lsls	r1, r3, #26
 802af52:	bf42      	ittt	mi
 802af54:	6833      	ldrmi	r3, [r6, #0]
 802af56:	3302      	addmi	r3, #2
 802af58:	6033      	strmi	r3, [r6, #0]
 802af5a:	6825      	ldr	r5, [r4, #0]
 802af5c:	f015 0506 	ands.w	r5, r5, #6
 802af60:	d106      	bne.n	802af70 <_printf_common+0x48>
 802af62:	f104 0a19 	add.w	sl, r4, #25
 802af66:	68e3      	ldr	r3, [r4, #12]
 802af68:	6832      	ldr	r2, [r6, #0]
 802af6a:	1a9b      	subs	r3, r3, r2
 802af6c:	42ab      	cmp	r3, r5
 802af6e:	dc26      	bgt.n	802afbe <_printf_common+0x96>
 802af70:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 802af74:	6822      	ldr	r2, [r4, #0]
 802af76:	3b00      	subs	r3, #0
 802af78:	bf18      	it	ne
 802af7a:	2301      	movne	r3, #1
 802af7c:	0692      	lsls	r2, r2, #26
 802af7e:	d42b      	bmi.n	802afd8 <_printf_common+0xb0>
 802af80:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 802af84:	4641      	mov	r1, r8
 802af86:	4638      	mov	r0, r7
 802af88:	47c8      	blx	r9
 802af8a:	3001      	adds	r0, #1
 802af8c:	d01e      	beq.n	802afcc <_printf_common+0xa4>
 802af8e:	6823      	ldr	r3, [r4, #0]
 802af90:	6922      	ldr	r2, [r4, #16]
 802af92:	f003 0306 	and.w	r3, r3, #6
 802af96:	2b04      	cmp	r3, #4
 802af98:	bf02      	ittt	eq
 802af9a:	68e5      	ldreq	r5, [r4, #12]
 802af9c:	6833      	ldreq	r3, [r6, #0]
 802af9e:	1aed      	subeq	r5, r5, r3
 802afa0:	68a3      	ldr	r3, [r4, #8]
 802afa2:	bf0c      	ite	eq
 802afa4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802afa8:	2500      	movne	r5, #0
 802afaa:	4293      	cmp	r3, r2
 802afac:	bfc4      	itt	gt
 802afae:	1a9b      	subgt	r3, r3, r2
 802afb0:	18ed      	addgt	r5, r5, r3
 802afb2:	2600      	movs	r6, #0
 802afb4:	341a      	adds	r4, #26
 802afb6:	42b5      	cmp	r5, r6
 802afb8:	d11a      	bne.n	802aff0 <_printf_common+0xc8>
 802afba:	2000      	movs	r0, #0
 802afbc:	e008      	b.n	802afd0 <_printf_common+0xa8>
 802afbe:	2301      	movs	r3, #1
 802afc0:	4652      	mov	r2, sl
 802afc2:	4641      	mov	r1, r8
 802afc4:	4638      	mov	r0, r7
 802afc6:	47c8      	blx	r9
 802afc8:	3001      	adds	r0, #1
 802afca:	d103      	bne.n	802afd4 <_printf_common+0xac>
 802afcc:	f04f 30ff 	mov.w	r0, #4294967295
 802afd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802afd4:	3501      	adds	r5, #1
 802afd6:	e7c6      	b.n	802af66 <_printf_common+0x3e>
 802afd8:	18e1      	adds	r1, r4, r3
 802afda:	1c5a      	adds	r2, r3, #1
 802afdc:	2030      	movs	r0, #48	@ 0x30
 802afde:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802afe2:	4422      	add	r2, r4
 802afe4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 802afe8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 802afec:	3302      	adds	r3, #2
 802afee:	e7c7      	b.n	802af80 <_printf_common+0x58>
 802aff0:	2301      	movs	r3, #1
 802aff2:	4622      	mov	r2, r4
 802aff4:	4641      	mov	r1, r8
 802aff6:	4638      	mov	r0, r7
 802aff8:	47c8      	blx	r9
 802affa:	3001      	adds	r0, #1
 802affc:	d0e6      	beq.n	802afcc <_printf_common+0xa4>
 802affe:	3601      	adds	r6, #1
 802b000:	e7d9      	b.n	802afb6 <_printf_common+0x8e>
	...

0802b004 <_printf_i>:
 802b004:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802b008:	7e0f      	ldrb	r7, [r1, #24]
 802b00a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802b00c:	2f78      	cmp	r7, #120	@ 0x78
 802b00e:	4691      	mov	r9, r2
 802b010:	4680      	mov	r8, r0
 802b012:	460c      	mov	r4, r1
 802b014:	469a      	mov	sl, r3
 802b016:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 802b01a:	d807      	bhi.n	802b02c <_printf_i+0x28>
 802b01c:	2f62      	cmp	r7, #98	@ 0x62
 802b01e:	d80a      	bhi.n	802b036 <_printf_i+0x32>
 802b020:	2f00      	cmp	r7, #0
 802b022:	f000 80d1 	beq.w	802b1c8 <_printf_i+0x1c4>
 802b026:	2f58      	cmp	r7, #88	@ 0x58
 802b028:	f000 80b8 	beq.w	802b19c <_printf_i+0x198>
 802b02c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802b030:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802b034:	e03a      	b.n	802b0ac <_printf_i+0xa8>
 802b036:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 802b03a:	2b15      	cmp	r3, #21
 802b03c:	d8f6      	bhi.n	802b02c <_printf_i+0x28>
 802b03e:	a101      	add	r1, pc, #4	@ (adr r1, 802b044 <_printf_i+0x40>)
 802b040:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802b044:	0802b09d 	.word	0x0802b09d
 802b048:	0802b0b1 	.word	0x0802b0b1
 802b04c:	0802b02d 	.word	0x0802b02d
 802b050:	0802b02d 	.word	0x0802b02d
 802b054:	0802b02d 	.word	0x0802b02d
 802b058:	0802b02d 	.word	0x0802b02d
 802b05c:	0802b0b1 	.word	0x0802b0b1
 802b060:	0802b02d 	.word	0x0802b02d
 802b064:	0802b02d 	.word	0x0802b02d
 802b068:	0802b02d 	.word	0x0802b02d
 802b06c:	0802b02d 	.word	0x0802b02d
 802b070:	0802b1af 	.word	0x0802b1af
 802b074:	0802b0db 	.word	0x0802b0db
 802b078:	0802b169 	.word	0x0802b169
 802b07c:	0802b02d 	.word	0x0802b02d
 802b080:	0802b02d 	.word	0x0802b02d
 802b084:	0802b1d1 	.word	0x0802b1d1
 802b088:	0802b02d 	.word	0x0802b02d
 802b08c:	0802b0db 	.word	0x0802b0db
 802b090:	0802b02d 	.word	0x0802b02d
 802b094:	0802b02d 	.word	0x0802b02d
 802b098:	0802b171 	.word	0x0802b171
 802b09c:	6833      	ldr	r3, [r6, #0]
 802b09e:	1d1a      	adds	r2, r3, #4
 802b0a0:	681b      	ldr	r3, [r3, #0]
 802b0a2:	6032      	str	r2, [r6, #0]
 802b0a4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802b0a8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 802b0ac:	2301      	movs	r3, #1
 802b0ae:	e09c      	b.n	802b1ea <_printf_i+0x1e6>
 802b0b0:	6833      	ldr	r3, [r6, #0]
 802b0b2:	6820      	ldr	r0, [r4, #0]
 802b0b4:	1d19      	adds	r1, r3, #4
 802b0b6:	6031      	str	r1, [r6, #0]
 802b0b8:	0606      	lsls	r6, r0, #24
 802b0ba:	d501      	bpl.n	802b0c0 <_printf_i+0xbc>
 802b0bc:	681d      	ldr	r5, [r3, #0]
 802b0be:	e003      	b.n	802b0c8 <_printf_i+0xc4>
 802b0c0:	0645      	lsls	r5, r0, #25
 802b0c2:	d5fb      	bpl.n	802b0bc <_printf_i+0xb8>
 802b0c4:	f9b3 5000 	ldrsh.w	r5, [r3]
 802b0c8:	2d00      	cmp	r5, #0
 802b0ca:	da03      	bge.n	802b0d4 <_printf_i+0xd0>
 802b0cc:	232d      	movs	r3, #45	@ 0x2d
 802b0ce:	426d      	negs	r5, r5
 802b0d0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802b0d4:	4858      	ldr	r0, [pc, #352]	@ (802b238 <_printf_i+0x234>)
 802b0d6:	230a      	movs	r3, #10
 802b0d8:	e011      	b.n	802b0fe <_printf_i+0xfa>
 802b0da:	6821      	ldr	r1, [r4, #0]
 802b0dc:	6833      	ldr	r3, [r6, #0]
 802b0de:	0608      	lsls	r0, r1, #24
 802b0e0:	f853 5b04 	ldr.w	r5, [r3], #4
 802b0e4:	d402      	bmi.n	802b0ec <_printf_i+0xe8>
 802b0e6:	0649      	lsls	r1, r1, #25
 802b0e8:	bf48      	it	mi
 802b0ea:	b2ad      	uxthmi	r5, r5
 802b0ec:	2f6f      	cmp	r7, #111	@ 0x6f
 802b0ee:	4852      	ldr	r0, [pc, #328]	@ (802b238 <_printf_i+0x234>)
 802b0f0:	6033      	str	r3, [r6, #0]
 802b0f2:	bf14      	ite	ne
 802b0f4:	230a      	movne	r3, #10
 802b0f6:	2308      	moveq	r3, #8
 802b0f8:	2100      	movs	r1, #0
 802b0fa:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 802b0fe:	6866      	ldr	r6, [r4, #4]
 802b100:	60a6      	str	r6, [r4, #8]
 802b102:	2e00      	cmp	r6, #0
 802b104:	db05      	blt.n	802b112 <_printf_i+0x10e>
 802b106:	6821      	ldr	r1, [r4, #0]
 802b108:	432e      	orrs	r6, r5
 802b10a:	f021 0104 	bic.w	r1, r1, #4
 802b10e:	6021      	str	r1, [r4, #0]
 802b110:	d04b      	beq.n	802b1aa <_printf_i+0x1a6>
 802b112:	4616      	mov	r6, r2
 802b114:	fbb5 f1f3 	udiv	r1, r5, r3
 802b118:	fb03 5711 	mls	r7, r3, r1, r5
 802b11c:	5dc7      	ldrb	r7, [r0, r7]
 802b11e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802b122:	462f      	mov	r7, r5
 802b124:	42bb      	cmp	r3, r7
 802b126:	460d      	mov	r5, r1
 802b128:	d9f4      	bls.n	802b114 <_printf_i+0x110>
 802b12a:	2b08      	cmp	r3, #8
 802b12c:	d10b      	bne.n	802b146 <_printf_i+0x142>
 802b12e:	6823      	ldr	r3, [r4, #0]
 802b130:	07df      	lsls	r7, r3, #31
 802b132:	d508      	bpl.n	802b146 <_printf_i+0x142>
 802b134:	6923      	ldr	r3, [r4, #16]
 802b136:	6861      	ldr	r1, [r4, #4]
 802b138:	4299      	cmp	r1, r3
 802b13a:	bfde      	ittt	le
 802b13c:	2330      	movle	r3, #48	@ 0x30
 802b13e:	f806 3c01 	strble.w	r3, [r6, #-1]
 802b142:	f106 36ff 	addle.w	r6, r6, #4294967295
 802b146:	1b92      	subs	r2, r2, r6
 802b148:	6122      	str	r2, [r4, #16]
 802b14a:	f8cd a000 	str.w	sl, [sp]
 802b14e:	464b      	mov	r3, r9
 802b150:	aa03      	add	r2, sp, #12
 802b152:	4621      	mov	r1, r4
 802b154:	4640      	mov	r0, r8
 802b156:	f7ff fee7 	bl	802af28 <_printf_common>
 802b15a:	3001      	adds	r0, #1
 802b15c:	d14a      	bne.n	802b1f4 <_printf_i+0x1f0>
 802b15e:	f04f 30ff 	mov.w	r0, #4294967295
 802b162:	b004      	add	sp, #16
 802b164:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b168:	6823      	ldr	r3, [r4, #0]
 802b16a:	f043 0320 	orr.w	r3, r3, #32
 802b16e:	6023      	str	r3, [r4, #0]
 802b170:	4832      	ldr	r0, [pc, #200]	@ (802b23c <_printf_i+0x238>)
 802b172:	2778      	movs	r7, #120	@ 0x78
 802b174:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 802b178:	6823      	ldr	r3, [r4, #0]
 802b17a:	6831      	ldr	r1, [r6, #0]
 802b17c:	061f      	lsls	r7, r3, #24
 802b17e:	f851 5b04 	ldr.w	r5, [r1], #4
 802b182:	d402      	bmi.n	802b18a <_printf_i+0x186>
 802b184:	065f      	lsls	r7, r3, #25
 802b186:	bf48      	it	mi
 802b188:	b2ad      	uxthmi	r5, r5
 802b18a:	6031      	str	r1, [r6, #0]
 802b18c:	07d9      	lsls	r1, r3, #31
 802b18e:	bf44      	itt	mi
 802b190:	f043 0320 	orrmi.w	r3, r3, #32
 802b194:	6023      	strmi	r3, [r4, #0]
 802b196:	b11d      	cbz	r5, 802b1a0 <_printf_i+0x19c>
 802b198:	2310      	movs	r3, #16
 802b19a:	e7ad      	b.n	802b0f8 <_printf_i+0xf4>
 802b19c:	4826      	ldr	r0, [pc, #152]	@ (802b238 <_printf_i+0x234>)
 802b19e:	e7e9      	b.n	802b174 <_printf_i+0x170>
 802b1a0:	6823      	ldr	r3, [r4, #0]
 802b1a2:	f023 0320 	bic.w	r3, r3, #32
 802b1a6:	6023      	str	r3, [r4, #0]
 802b1a8:	e7f6      	b.n	802b198 <_printf_i+0x194>
 802b1aa:	4616      	mov	r6, r2
 802b1ac:	e7bd      	b.n	802b12a <_printf_i+0x126>
 802b1ae:	6833      	ldr	r3, [r6, #0]
 802b1b0:	6825      	ldr	r5, [r4, #0]
 802b1b2:	6961      	ldr	r1, [r4, #20]
 802b1b4:	1d18      	adds	r0, r3, #4
 802b1b6:	6030      	str	r0, [r6, #0]
 802b1b8:	062e      	lsls	r6, r5, #24
 802b1ba:	681b      	ldr	r3, [r3, #0]
 802b1bc:	d501      	bpl.n	802b1c2 <_printf_i+0x1be>
 802b1be:	6019      	str	r1, [r3, #0]
 802b1c0:	e002      	b.n	802b1c8 <_printf_i+0x1c4>
 802b1c2:	0668      	lsls	r0, r5, #25
 802b1c4:	d5fb      	bpl.n	802b1be <_printf_i+0x1ba>
 802b1c6:	8019      	strh	r1, [r3, #0]
 802b1c8:	2300      	movs	r3, #0
 802b1ca:	6123      	str	r3, [r4, #16]
 802b1cc:	4616      	mov	r6, r2
 802b1ce:	e7bc      	b.n	802b14a <_printf_i+0x146>
 802b1d0:	6833      	ldr	r3, [r6, #0]
 802b1d2:	1d1a      	adds	r2, r3, #4
 802b1d4:	6032      	str	r2, [r6, #0]
 802b1d6:	681e      	ldr	r6, [r3, #0]
 802b1d8:	6862      	ldr	r2, [r4, #4]
 802b1da:	2100      	movs	r1, #0
 802b1dc:	4630      	mov	r0, r6
 802b1de:	f7d5 f807 	bl	80001f0 <memchr>
 802b1e2:	b108      	cbz	r0, 802b1e8 <_printf_i+0x1e4>
 802b1e4:	1b80      	subs	r0, r0, r6
 802b1e6:	6060      	str	r0, [r4, #4]
 802b1e8:	6863      	ldr	r3, [r4, #4]
 802b1ea:	6123      	str	r3, [r4, #16]
 802b1ec:	2300      	movs	r3, #0
 802b1ee:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802b1f2:	e7aa      	b.n	802b14a <_printf_i+0x146>
 802b1f4:	6923      	ldr	r3, [r4, #16]
 802b1f6:	4632      	mov	r2, r6
 802b1f8:	4649      	mov	r1, r9
 802b1fa:	4640      	mov	r0, r8
 802b1fc:	47d0      	blx	sl
 802b1fe:	3001      	adds	r0, #1
 802b200:	d0ad      	beq.n	802b15e <_printf_i+0x15a>
 802b202:	6823      	ldr	r3, [r4, #0]
 802b204:	079b      	lsls	r3, r3, #30
 802b206:	d413      	bmi.n	802b230 <_printf_i+0x22c>
 802b208:	68e0      	ldr	r0, [r4, #12]
 802b20a:	9b03      	ldr	r3, [sp, #12]
 802b20c:	4298      	cmp	r0, r3
 802b20e:	bfb8      	it	lt
 802b210:	4618      	movlt	r0, r3
 802b212:	e7a6      	b.n	802b162 <_printf_i+0x15e>
 802b214:	2301      	movs	r3, #1
 802b216:	4632      	mov	r2, r6
 802b218:	4649      	mov	r1, r9
 802b21a:	4640      	mov	r0, r8
 802b21c:	47d0      	blx	sl
 802b21e:	3001      	adds	r0, #1
 802b220:	d09d      	beq.n	802b15e <_printf_i+0x15a>
 802b222:	3501      	adds	r5, #1
 802b224:	68e3      	ldr	r3, [r4, #12]
 802b226:	9903      	ldr	r1, [sp, #12]
 802b228:	1a5b      	subs	r3, r3, r1
 802b22a:	42ab      	cmp	r3, r5
 802b22c:	dcf2      	bgt.n	802b214 <_printf_i+0x210>
 802b22e:	e7eb      	b.n	802b208 <_printf_i+0x204>
 802b230:	2500      	movs	r5, #0
 802b232:	f104 0619 	add.w	r6, r4, #25
 802b236:	e7f5      	b.n	802b224 <_printf_i+0x220>
 802b238:	0802ccd9 	.word	0x0802ccd9
 802b23c:	0802ccea 	.word	0x0802ccea

0802b240 <__sflush_r>:
 802b240:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802b244:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b248:	0716      	lsls	r6, r2, #28
 802b24a:	4605      	mov	r5, r0
 802b24c:	460c      	mov	r4, r1
 802b24e:	d454      	bmi.n	802b2fa <__sflush_r+0xba>
 802b250:	684b      	ldr	r3, [r1, #4]
 802b252:	2b00      	cmp	r3, #0
 802b254:	dc02      	bgt.n	802b25c <__sflush_r+0x1c>
 802b256:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 802b258:	2b00      	cmp	r3, #0
 802b25a:	dd48      	ble.n	802b2ee <__sflush_r+0xae>
 802b25c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802b25e:	2e00      	cmp	r6, #0
 802b260:	d045      	beq.n	802b2ee <__sflush_r+0xae>
 802b262:	2300      	movs	r3, #0
 802b264:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 802b268:	682f      	ldr	r7, [r5, #0]
 802b26a:	6a21      	ldr	r1, [r4, #32]
 802b26c:	602b      	str	r3, [r5, #0]
 802b26e:	d030      	beq.n	802b2d2 <__sflush_r+0x92>
 802b270:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802b272:	89a3      	ldrh	r3, [r4, #12]
 802b274:	0759      	lsls	r1, r3, #29
 802b276:	d505      	bpl.n	802b284 <__sflush_r+0x44>
 802b278:	6863      	ldr	r3, [r4, #4]
 802b27a:	1ad2      	subs	r2, r2, r3
 802b27c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802b27e:	b10b      	cbz	r3, 802b284 <__sflush_r+0x44>
 802b280:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802b282:	1ad2      	subs	r2, r2, r3
 802b284:	2300      	movs	r3, #0
 802b286:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802b288:	6a21      	ldr	r1, [r4, #32]
 802b28a:	4628      	mov	r0, r5
 802b28c:	47b0      	blx	r6
 802b28e:	1c43      	adds	r3, r0, #1
 802b290:	89a3      	ldrh	r3, [r4, #12]
 802b292:	d106      	bne.n	802b2a2 <__sflush_r+0x62>
 802b294:	6829      	ldr	r1, [r5, #0]
 802b296:	291d      	cmp	r1, #29
 802b298:	d82b      	bhi.n	802b2f2 <__sflush_r+0xb2>
 802b29a:	4a2a      	ldr	r2, [pc, #168]	@ (802b344 <__sflush_r+0x104>)
 802b29c:	40ca      	lsrs	r2, r1
 802b29e:	07d6      	lsls	r6, r2, #31
 802b2a0:	d527      	bpl.n	802b2f2 <__sflush_r+0xb2>
 802b2a2:	2200      	movs	r2, #0
 802b2a4:	6062      	str	r2, [r4, #4]
 802b2a6:	04d9      	lsls	r1, r3, #19
 802b2a8:	6922      	ldr	r2, [r4, #16]
 802b2aa:	6022      	str	r2, [r4, #0]
 802b2ac:	d504      	bpl.n	802b2b8 <__sflush_r+0x78>
 802b2ae:	1c42      	adds	r2, r0, #1
 802b2b0:	d101      	bne.n	802b2b6 <__sflush_r+0x76>
 802b2b2:	682b      	ldr	r3, [r5, #0]
 802b2b4:	b903      	cbnz	r3, 802b2b8 <__sflush_r+0x78>
 802b2b6:	6560      	str	r0, [r4, #84]	@ 0x54
 802b2b8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802b2ba:	602f      	str	r7, [r5, #0]
 802b2bc:	b1b9      	cbz	r1, 802b2ee <__sflush_r+0xae>
 802b2be:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802b2c2:	4299      	cmp	r1, r3
 802b2c4:	d002      	beq.n	802b2cc <__sflush_r+0x8c>
 802b2c6:	4628      	mov	r0, r5
 802b2c8:	f7ff fca2 	bl	802ac10 <_free_r>
 802b2cc:	2300      	movs	r3, #0
 802b2ce:	6363      	str	r3, [r4, #52]	@ 0x34
 802b2d0:	e00d      	b.n	802b2ee <__sflush_r+0xae>
 802b2d2:	2301      	movs	r3, #1
 802b2d4:	4628      	mov	r0, r5
 802b2d6:	47b0      	blx	r6
 802b2d8:	4602      	mov	r2, r0
 802b2da:	1c50      	adds	r0, r2, #1
 802b2dc:	d1c9      	bne.n	802b272 <__sflush_r+0x32>
 802b2de:	682b      	ldr	r3, [r5, #0]
 802b2e0:	2b00      	cmp	r3, #0
 802b2e2:	d0c6      	beq.n	802b272 <__sflush_r+0x32>
 802b2e4:	2b1d      	cmp	r3, #29
 802b2e6:	d001      	beq.n	802b2ec <__sflush_r+0xac>
 802b2e8:	2b16      	cmp	r3, #22
 802b2ea:	d11e      	bne.n	802b32a <__sflush_r+0xea>
 802b2ec:	602f      	str	r7, [r5, #0]
 802b2ee:	2000      	movs	r0, #0
 802b2f0:	e022      	b.n	802b338 <__sflush_r+0xf8>
 802b2f2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802b2f6:	b21b      	sxth	r3, r3
 802b2f8:	e01b      	b.n	802b332 <__sflush_r+0xf2>
 802b2fa:	690f      	ldr	r7, [r1, #16]
 802b2fc:	2f00      	cmp	r7, #0
 802b2fe:	d0f6      	beq.n	802b2ee <__sflush_r+0xae>
 802b300:	0793      	lsls	r3, r2, #30
 802b302:	680e      	ldr	r6, [r1, #0]
 802b304:	bf08      	it	eq
 802b306:	694b      	ldreq	r3, [r1, #20]
 802b308:	600f      	str	r7, [r1, #0]
 802b30a:	bf18      	it	ne
 802b30c:	2300      	movne	r3, #0
 802b30e:	eba6 0807 	sub.w	r8, r6, r7
 802b312:	608b      	str	r3, [r1, #8]
 802b314:	f1b8 0f00 	cmp.w	r8, #0
 802b318:	dde9      	ble.n	802b2ee <__sflush_r+0xae>
 802b31a:	6a21      	ldr	r1, [r4, #32]
 802b31c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 802b31e:	4643      	mov	r3, r8
 802b320:	463a      	mov	r2, r7
 802b322:	4628      	mov	r0, r5
 802b324:	47b0      	blx	r6
 802b326:	2800      	cmp	r0, #0
 802b328:	dc08      	bgt.n	802b33c <__sflush_r+0xfc>
 802b32a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b32e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802b332:	81a3      	strh	r3, [r4, #12]
 802b334:	f04f 30ff 	mov.w	r0, #4294967295
 802b338:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b33c:	4407      	add	r7, r0
 802b33e:	eba8 0800 	sub.w	r8, r8, r0
 802b342:	e7e7      	b.n	802b314 <__sflush_r+0xd4>
 802b344:	20400001 	.word	0x20400001

0802b348 <_fflush_r>:
 802b348:	b538      	push	{r3, r4, r5, lr}
 802b34a:	690b      	ldr	r3, [r1, #16]
 802b34c:	4605      	mov	r5, r0
 802b34e:	460c      	mov	r4, r1
 802b350:	b913      	cbnz	r3, 802b358 <_fflush_r+0x10>
 802b352:	2500      	movs	r5, #0
 802b354:	4628      	mov	r0, r5
 802b356:	bd38      	pop	{r3, r4, r5, pc}
 802b358:	b118      	cbz	r0, 802b362 <_fflush_r+0x1a>
 802b35a:	6a03      	ldr	r3, [r0, #32]
 802b35c:	b90b      	cbnz	r3, 802b362 <_fflush_r+0x1a>
 802b35e:	f7ff fa91 	bl	802a884 <__sinit>
 802b362:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b366:	2b00      	cmp	r3, #0
 802b368:	d0f3      	beq.n	802b352 <_fflush_r+0xa>
 802b36a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 802b36c:	07d0      	lsls	r0, r2, #31
 802b36e:	d404      	bmi.n	802b37a <_fflush_r+0x32>
 802b370:	0599      	lsls	r1, r3, #22
 802b372:	d402      	bmi.n	802b37a <_fflush_r+0x32>
 802b374:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802b376:	f7ff fbde 	bl	802ab36 <__retarget_lock_acquire_recursive>
 802b37a:	4628      	mov	r0, r5
 802b37c:	4621      	mov	r1, r4
 802b37e:	f7ff ff5f 	bl	802b240 <__sflush_r>
 802b382:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802b384:	07da      	lsls	r2, r3, #31
 802b386:	4605      	mov	r5, r0
 802b388:	d4e4      	bmi.n	802b354 <_fflush_r+0xc>
 802b38a:	89a3      	ldrh	r3, [r4, #12]
 802b38c:	059b      	lsls	r3, r3, #22
 802b38e:	d4e1      	bmi.n	802b354 <_fflush_r+0xc>
 802b390:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802b392:	f7ff fbd1 	bl	802ab38 <__retarget_lock_release_recursive>
 802b396:	e7dd      	b.n	802b354 <_fflush_r+0xc>

0802b398 <__swbuf_r>:
 802b398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b39a:	460e      	mov	r6, r1
 802b39c:	4614      	mov	r4, r2
 802b39e:	4605      	mov	r5, r0
 802b3a0:	b118      	cbz	r0, 802b3aa <__swbuf_r+0x12>
 802b3a2:	6a03      	ldr	r3, [r0, #32]
 802b3a4:	b90b      	cbnz	r3, 802b3aa <__swbuf_r+0x12>
 802b3a6:	f7ff fa6d 	bl	802a884 <__sinit>
 802b3aa:	69a3      	ldr	r3, [r4, #24]
 802b3ac:	60a3      	str	r3, [r4, #8]
 802b3ae:	89a3      	ldrh	r3, [r4, #12]
 802b3b0:	071a      	lsls	r2, r3, #28
 802b3b2:	d501      	bpl.n	802b3b8 <__swbuf_r+0x20>
 802b3b4:	6923      	ldr	r3, [r4, #16]
 802b3b6:	b943      	cbnz	r3, 802b3ca <__swbuf_r+0x32>
 802b3b8:	4621      	mov	r1, r4
 802b3ba:	4628      	mov	r0, r5
 802b3bc:	f000 f82a 	bl	802b414 <__swsetup_r>
 802b3c0:	b118      	cbz	r0, 802b3ca <__swbuf_r+0x32>
 802b3c2:	f04f 37ff 	mov.w	r7, #4294967295
 802b3c6:	4638      	mov	r0, r7
 802b3c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802b3ca:	6823      	ldr	r3, [r4, #0]
 802b3cc:	6922      	ldr	r2, [r4, #16]
 802b3ce:	1a98      	subs	r0, r3, r2
 802b3d0:	6963      	ldr	r3, [r4, #20]
 802b3d2:	b2f6      	uxtb	r6, r6
 802b3d4:	4283      	cmp	r3, r0
 802b3d6:	4637      	mov	r7, r6
 802b3d8:	dc05      	bgt.n	802b3e6 <__swbuf_r+0x4e>
 802b3da:	4621      	mov	r1, r4
 802b3dc:	4628      	mov	r0, r5
 802b3de:	f7ff ffb3 	bl	802b348 <_fflush_r>
 802b3e2:	2800      	cmp	r0, #0
 802b3e4:	d1ed      	bne.n	802b3c2 <__swbuf_r+0x2a>
 802b3e6:	68a3      	ldr	r3, [r4, #8]
 802b3e8:	3b01      	subs	r3, #1
 802b3ea:	60a3      	str	r3, [r4, #8]
 802b3ec:	6823      	ldr	r3, [r4, #0]
 802b3ee:	1c5a      	adds	r2, r3, #1
 802b3f0:	6022      	str	r2, [r4, #0]
 802b3f2:	701e      	strb	r6, [r3, #0]
 802b3f4:	6962      	ldr	r2, [r4, #20]
 802b3f6:	1c43      	adds	r3, r0, #1
 802b3f8:	429a      	cmp	r2, r3
 802b3fa:	d004      	beq.n	802b406 <__swbuf_r+0x6e>
 802b3fc:	89a3      	ldrh	r3, [r4, #12]
 802b3fe:	07db      	lsls	r3, r3, #31
 802b400:	d5e1      	bpl.n	802b3c6 <__swbuf_r+0x2e>
 802b402:	2e0a      	cmp	r6, #10
 802b404:	d1df      	bne.n	802b3c6 <__swbuf_r+0x2e>
 802b406:	4621      	mov	r1, r4
 802b408:	4628      	mov	r0, r5
 802b40a:	f7ff ff9d 	bl	802b348 <_fflush_r>
 802b40e:	2800      	cmp	r0, #0
 802b410:	d0d9      	beq.n	802b3c6 <__swbuf_r+0x2e>
 802b412:	e7d6      	b.n	802b3c2 <__swbuf_r+0x2a>

0802b414 <__swsetup_r>:
 802b414:	b538      	push	{r3, r4, r5, lr}
 802b416:	4b29      	ldr	r3, [pc, #164]	@ (802b4bc <__swsetup_r+0xa8>)
 802b418:	4605      	mov	r5, r0
 802b41a:	6818      	ldr	r0, [r3, #0]
 802b41c:	460c      	mov	r4, r1
 802b41e:	b118      	cbz	r0, 802b428 <__swsetup_r+0x14>
 802b420:	6a03      	ldr	r3, [r0, #32]
 802b422:	b90b      	cbnz	r3, 802b428 <__swsetup_r+0x14>
 802b424:	f7ff fa2e 	bl	802a884 <__sinit>
 802b428:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b42c:	0719      	lsls	r1, r3, #28
 802b42e:	d422      	bmi.n	802b476 <__swsetup_r+0x62>
 802b430:	06da      	lsls	r2, r3, #27
 802b432:	d407      	bmi.n	802b444 <__swsetup_r+0x30>
 802b434:	2209      	movs	r2, #9
 802b436:	602a      	str	r2, [r5, #0]
 802b438:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802b43c:	81a3      	strh	r3, [r4, #12]
 802b43e:	f04f 30ff 	mov.w	r0, #4294967295
 802b442:	e033      	b.n	802b4ac <__swsetup_r+0x98>
 802b444:	0758      	lsls	r0, r3, #29
 802b446:	d512      	bpl.n	802b46e <__swsetup_r+0x5a>
 802b448:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802b44a:	b141      	cbz	r1, 802b45e <__swsetup_r+0x4a>
 802b44c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802b450:	4299      	cmp	r1, r3
 802b452:	d002      	beq.n	802b45a <__swsetup_r+0x46>
 802b454:	4628      	mov	r0, r5
 802b456:	f7ff fbdb 	bl	802ac10 <_free_r>
 802b45a:	2300      	movs	r3, #0
 802b45c:	6363      	str	r3, [r4, #52]	@ 0x34
 802b45e:	89a3      	ldrh	r3, [r4, #12]
 802b460:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 802b464:	81a3      	strh	r3, [r4, #12]
 802b466:	2300      	movs	r3, #0
 802b468:	6063      	str	r3, [r4, #4]
 802b46a:	6923      	ldr	r3, [r4, #16]
 802b46c:	6023      	str	r3, [r4, #0]
 802b46e:	89a3      	ldrh	r3, [r4, #12]
 802b470:	f043 0308 	orr.w	r3, r3, #8
 802b474:	81a3      	strh	r3, [r4, #12]
 802b476:	6923      	ldr	r3, [r4, #16]
 802b478:	b94b      	cbnz	r3, 802b48e <__swsetup_r+0x7a>
 802b47a:	89a3      	ldrh	r3, [r4, #12]
 802b47c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802b480:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 802b484:	d003      	beq.n	802b48e <__swsetup_r+0x7a>
 802b486:	4621      	mov	r1, r4
 802b488:	4628      	mov	r0, r5
 802b48a:	f000 f83f 	bl	802b50c <__smakebuf_r>
 802b48e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b492:	f013 0201 	ands.w	r2, r3, #1
 802b496:	d00a      	beq.n	802b4ae <__swsetup_r+0x9a>
 802b498:	2200      	movs	r2, #0
 802b49a:	60a2      	str	r2, [r4, #8]
 802b49c:	6962      	ldr	r2, [r4, #20]
 802b49e:	4252      	negs	r2, r2
 802b4a0:	61a2      	str	r2, [r4, #24]
 802b4a2:	6922      	ldr	r2, [r4, #16]
 802b4a4:	b942      	cbnz	r2, 802b4b8 <__swsetup_r+0xa4>
 802b4a6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 802b4aa:	d1c5      	bne.n	802b438 <__swsetup_r+0x24>
 802b4ac:	bd38      	pop	{r3, r4, r5, pc}
 802b4ae:	0799      	lsls	r1, r3, #30
 802b4b0:	bf58      	it	pl
 802b4b2:	6962      	ldrpl	r2, [r4, #20]
 802b4b4:	60a2      	str	r2, [r4, #8]
 802b4b6:	e7f4      	b.n	802b4a2 <__swsetup_r+0x8e>
 802b4b8:	2000      	movs	r0, #0
 802b4ba:	e7f7      	b.n	802b4ac <__swsetup_r+0x98>
 802b4bc:	2000012c 	.word	0x2000012c

0802b4c0 <__swhatbuf_r>:
 802b4c0:	b570      	push	{r4, r5, r6, lr}
 802b4c2:	460c      	mov	r4, r1
 802b4c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b4c8:	2900      	cmp	r1, #0
 802b4ca:	b096      	sub	sp, #88	@ 0x58
 802b4cc:	4615      	mov	r5, r2
 802b4ce:	461e      	mov	r6, r3
 802b4d0:	da0d      	bge.n	802b4ee <__swhatbuf_r+0x2e>
 802b4d2:	89a3      	ldrh	r3, [r4, #12]
 802b4d4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 802b4d8:	f04f 0100 	mov.w	r1, #0
 802b4dc:	bf14      	ite	ne
 802b4de:	2340      	movne	r3, #64	@ 0x40
 802b4e0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 802b4e4:	2000      	movs	r0, #0
 802b4e6:	6031      	str	r1, [r6, #0]
 802b4e8:	602b      	str	r3, [r5, #0]
 802b4ea:	b016      	add	sp, #88	@ 0x58
 802b4ec:	bd70      	pop	{r4, r5, r6, pc}
 802b4ee:	466a      	mov	r2, sp
 802b4f0:	f000 f848 	bl	802b584 <_fstat_r>
 802b4f4:	2800      	cmp	r0, #0
 802b4f6:	dbec      	blt.n	802b4d2 <__swhatbuf_r+0x12>
 802b4f8:	9901      	ldr	r1, [sp, #4]
 802b4fa:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 802b4fe:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 802b502:	4259      	negs	r1, r3
 802b504:	4159      	adcs	r1, r3
 802b506:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802b50a:	e7eb      	b.n	802b4e4 <__swhatbuf_r+0x24>

0802b50c <__smakebuf_r>:
 802b50c:	898b      	ldrh	r3, [r1, #12]
 802b50e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802b510:	079d      	lsls	r5, r3, #30
 802b512:	4606      	mov	r6, r0
 802b514:	460c      	mov	r4, r1
 802b516:	d507      	bpl.n	802b528 <__smakebuf_r+0x1c>
 802b518:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 802b51c:	6023      	str	r3, [r4, #0]
 802b51e:	6123      	str	r3, [r4, #16]
 802b520:	2301      	movs	r3, #1
 802b522:	6163      	str	r3, [r4, #20]
 802b524:	b003      	add	sp, #12
 802b526:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b528:	ab01      	add	r3, sp, #4
 802b52a:	466a      	mov	r2, sp
 802b52c:	f7ff ffc8 	bl	802b4c0 <__swhatbuf_r>
 802b530:	9f00      	ldr	r7, [sp, #0]
 802b532:	4605      	mov	r5, r0
 802b534:	4639      	mov	r1, r7
 802b536:	4630      	mov	r0, r6
 802b538:	f7ff f87e 	bl	802a638 <_malloc_r>
 802b53c:	b948      	cbnz	r0, 802b552 <__smakebuf_r+0x46>
 802b53e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b542:	059a      	lsls	r2, r3, #22
 802b544:	d4ee      	bmi.n	802b524 <__smakebuf_r+0x18>
 802b546:	f023 0303 	bic.w	r3, r3, #3
 802b54a:	f043 0302 	orr.w	r3, r3, #2
 802b54e:	81a3      	strh	r3, [r4, #12]
 802b550:	e7e2      	b.n	802b518 <__smakebuf_r+0xc>
 802b552:	89a3      	ldrh	r3, [r4, #12]
 802b554:	6020      	str	r0, [r4, #0]
 802b556:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802b55a:	81a3      	strh	r3, [r4, #12]
 802b55c:	9b01      	ldr	r3, [sp, #4]
 802b55e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 802b562:	b15b      	cbz	r3, 802b57c <__smakebuf_r+0x70>
 802b564:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b568:	4630      	mov	r0, r6
 802b56a:	f000 f81d 	bl	802b5a8 <_isatty_r>
 802b56e:	b128      	cbz	r0, 802b57c <__smakebuf_r+0x70>
 802b570:	89a3      	ldrh	r3, [r4, #12]
 802b572:	f023 0303 	bic.w	r3, r3, #3
 802b576:	f043 0301 	orr.w	r3, r3, #1
 802b57a:	81a3      	strh	r3, [r4, #12]
 802b57c:	89a3      	ldrh	r3, [r4, #12]
 802b57e:	431d      	orrs	r5, r3
 802b580:	81a5      	strh	r5, [r4, #12]
 802b582:	e7cf      	b.n	802b524 <__smakebuf_r+0x18>

0802b584 <_fstat_r>:
 802b584:	b538      	push	{r3, r4, r5, lr}
 802b586:	4d07      	ldr	r5, [pc, #28]	@ (802b5a4 <_fstat_r+0x20>)
 802b588:	2300      	movs	r3, #0
 802b58a:	4604      	mov	r4, r0
 802b58c:	4608      	mov	r0, r1
 802b58e:	4611      	mov	r1, r2
 802b590:	602b      	str	r3, [r5, #0]
 802b592:	f7d6 fe90 	bl	80022b6 <_fstat>
 802b596:	1c43      	adds	r3, r0, #1
 802b598:	d102      	bne.n	802b5a0 <_fstat_r+0x1c>
 802b59a:	682b      	ldr	r3, [r5, #0]
 802b59c:	b103      	cbz	r3, 802b5a0 <_fstat_r+0x1c>
 802b59e:	6023      	str	r3, [r4, #0]
 802b5a0:	bd38      	pop	{r3, r4, r5, pc}
 802b5a2:	bf00      	nop
 802b5a4:	20014aec 	.word	0x20014aec

0802b5a8 <_isatty_r>:
 802b5a8:	b538      	push	{r3, r4, r5, lr}
 802b5aa:	4d06      	ldr	r5, [pc, #24]	@ (802b5c4 <_isatty_r+0x1c>)
 802b5ac:	2300      	movs	r3, #0
 802b5ae:	4604      	mov	r4, r0
 802b5b0:	4608      	mov	r0, r1
 802b5b2:	602b      	str	r3, [r5, #0]
 802b5b4:	f7d6 fe84 	bl	80022c0 <_isatty>
 802b5b8:	1c43      	adds	r3, r0, #1
 802b5ba:	d102      	bne.n	802b5c2 <_isatty_r+0x1a>
 802b5bc:	682b      	ldr	r3, [r5, #0]
 802b5be:	b103      	cbz	r3, 802b5c2 <_isatty_r+0x1a>
 802b5c0:	6023      	str	r3, [r4, #0]
 802b5c2:	bd38      	pop	{r3, r4, r5, pc}
 802b5c4:	20014aec 	.word	0x20014aec

0802b5c8 <_init>:
 802b5c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b5ca:	bf00      	nop
 802b5cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802b5ce:	bc08      	pop	{r3}
 802b5d0:	469e      	mov	lr, r3
 802b5d2:	4770      	bx	lr

0802b5d4 <_fini>:
 802b5d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b5d6:	bf00      	nop
 802b5d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802b5da:	bc08      	pop	{r3}
 802b5dc:	469e      	mov	lr, r3
 802b5de:	4770      	bx	lr
