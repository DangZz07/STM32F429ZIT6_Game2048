/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <platform/driver/lcd/LCD16bpp.hpp>
#include <gui/chosing_mode_screen/Chosing_modeView.hpp>
#include <gui/chosing_mode_screen/Chosing_modePresenter.hpp>
#include <gui/screen5x5_screen/Screen5x5View.hpp>
#include <gui/screen5x5_screen/Screen5x5Presenter.hpp>
#include <gui/screen5x5_supermerging_screen/Screen5x5_superMergingView.hpp>
#include <gui/screen5x5_supermerging_screen/Screen5x5_superMergingPresenter.hpp>
#include <gui/screen3x3_screen/Screen3x3View.hpp>
#include <gui/screen3x3_screen/Screen3x3Presenter.hpp>
#include <gui/mainscreen_screen/MainScreenView.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>
#include <gui/screen5x5_lettermerging_screen/Screen5x5_letterMergingView.hpp>
#include <gui/screen5x5_lettermerging_screen/Screen5x5_letterMergingPresenter.hpp>
#include <gui/gameoverscreen_screen/GameOverScreenView.hpp>
#include <gui/gameoverscreen_screen/GameOverScreenPresenter.hpp>
#include <gui/selectedgamedesign_screen/SelectedGameDesignView.hpp>
#include <gui/selectedgamedesign_screen/SelectedGameDesignPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
    touchgfx::Texts::setLanguage(GB);
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
}

/*
 * Screen Transition Declarations
 */

// Chosing_mode

void FrontendApplicationBase::gotoChosing_modeScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoChosing_modeScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoChosing_modeScreenNoTransitionImpl()
{
    touchgfx::makeTransition<Chosing_modeView, Chosing_modePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoChosing_modeScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoChosing_modeScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoChosing_modeScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<Chosing_modeView, Chosing_modePresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoChosing_modeScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoChosing_modeScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoChosing_modeScreenWipeTransitionEastImpl()
{
    touchgfx::makeTransition<Chosing_modeView, Chosing_modePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoChosing_modeScreenBlockTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoChosing_modeScreenBlockTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoChosing_modeScreenBlockTransitionImpl()
{
    touchgfx::makeTransition<Chosing_modeView, Chosing_modePresenter, touchgfx::BlockTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Screen5x5

void FrontendApplicationBase::gotoScreen5x5ScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen5x5ScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen5x5ScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<Screen5x5View, Screen5x5Presenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Screen5x5_superMerging

void FrontendApplicationBase::gotoScreen5x5_superMergingScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen5x5_superMergingScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen5x5_superMergingScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<Screen5x5_superMergingView, Screen5x5_superMergingPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Screen3x3

void FrontendApplicationBase::gotoScreen3x3ScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen3x3ScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen3x3ScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<Screen3x3View, Screen3x3Presenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// MainScreen

void FrontendApplicationBase::gotoMainScreenScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMainScreenScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<MainScreenView, MainScreenPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Screen5x5_letterMerging

void FrontendApplicationBase::gotoScreen5x5_letterMergingScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen5x5_letterMergingScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen5x5_letterMergingScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<Screen5x5_letterMergingView, Screen5x5_letterMergingPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// GameOverScreen

void FrontendApplicationBase::gotoGameOverScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGameOverScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoGameOverScreenScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<GameOverScreenView, GameOverScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// SelectedGameDesign

void FrontendApplicationBase::gotoSelectedGameDesignScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSelectedGameDesignScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoSelectedGameDesignScreenSlideTransitionEastImpl()
{
    touchgfx::makeTransition<SelectedGameDesignView, SelectedGameDesignPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

void FrontendApplicationBase::gotoSelectedGameDesignScreenCoverTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSelectedGameDesignScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoSelectedGameDesignScreenCoverTransitionEastImpl()
{
    touchgfx::makeTransition<SelectedGameDesignView, SelectedGameDesignPresenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
